

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 08 16:31:08 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 21/07/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F67K40 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   00108C                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _temp
    58   00108C  07                 	db	7
    59   000000                     _TRISFbits	set	3974
    60   000000                     _LATDbits	set	3964
    61   000000                     _TRISDbits	set	3972
    62   000000                     _TRISGbits	set	3975
    63   000000                     _RC7PPS	set	3689
    64   000000                     _RE2PPS	set	3700
    65   000000                     _LATCbits	set	3963
    66   000000                     _LATEbits	set	3965
    67   000000                     _TRISCbits	set	3971
    68   000000                     _TRISEbits	set	3973
    69   000000                     _PORTFbits	set	3982
    70   000000                     _TRISHbits	set	3976
    71   000000                     _T2PR	set	4028
    72   000000                     _T2CONbits	set	4029
    73   000000                     _CCPR2H	set	4006
    74   000000                     _CCPR1H	set	4010
    75   000000                     _LATGbits	set	3967
    76   000000                     _LATHbits	set	3968
    77   000000                     _RE4PPS	set	3702
    78   000000                     _RG6PPS	set	3720
    79   000000                     _ANSELFbits	set	3764
    80   000000                     _CCPR4H	set	3873
    81   000000                     _CCPR3H	set	3877
    82   000000                     _T2CLKCONbits	set	4031
    83   000000                     _T2HLTbits	set	4030
    84   000000                     _CCP1CONbits	set	4011
    85   000000                     _CCPTMRS0bits	set	4013
    86   000000                     _CCP2CONbits	set	4007
    87   000000                     _CCP3CONbits	set	3878
    88   000000                     _CCP4CONbits	set	3874
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   001068                     __pcinit:
    94                           	callstack 0
    95   001068                     start_initialization:
    96                           	callstack 0
    97   001068                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (1 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   001068  0E8C               	movlw	low __pidataCOMRAM
   103   00106A  6EF6               	movwf	tblptrl,c
   104   00106C  0E10               	movlw	high __pidataCOMRAM
   105   00106E  6EF7               	movwf	tblptrh,c
   106   001070  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   001072  6EF8               	movwf	tblptru,c
   108   001074  0009               	tblrd		*+	;fetch initializer
   109   001076  CFF5 F025          	movff	tablat,__pdataCOMRAM
   110                           
   111                           ; Clear objects allocated to COMRAM (26 bytes)
   112   00107A  EE00  F001         	lfsr	0,__pbssCOMRAM
   113   00107E  0E1A               	movlw	26
   114   001080                     clear_0:
   115   001080  6AEE               	clrf	postinc0,c
   116   001082  06E8               	decf	wreg,f,c
   117   001084  E1FD               	bnz	clear_0
   118   001086                     end_of_initialization:
   119                           	callstack 0
   120   001086                     __end_of__initialization:
   121                           	callstack 0
   122   001086  0100               	movlb	0
   123   001088  EF01  F007         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126   000001                     __pbssCOMRAM:
   127                           	callstack 0
   128   000001                     _motorR:
   129                           	callstack 0
   130   000001                     	ds	9
   131   00000A                     _motorL:
   132                           	callstack 0
   133   00000A                     	ds	9
   134   000013                     _off_period:
   135                           	callstack 0
   136   000013                     	ds	2
   137   000015                     _on_period:
   138                           	callstack 0
   139   000015                     	ds	2
   140   000017                     _calibration:
   141                           	callstack 0
   142   000017                     	ds	4
   143                           
   144                           	psect	dataCOMRAM
   145   000025                     __pdataCOMRAM:
   146                           	callstack 0
   147   000025                     _temp:
   148                           	callstack 0
   149   000025                     	ds	1
   150                           
   151                           	psect	cstackCOMRAM
   152   00001B                     __pcstackCOMRAM:
   153                           	callstack 0
   154   00001B                     adjust_calibration@type:
   155                           	callstack 0
   156   00001B                     initDCmotorsPWM@PWMperiod:
   157                           	callstack 0
   158                           
   159                           ; 2 bytes @ 0x0
   160   00001B                     	ds	1
   161   00001C                     ??_adjust_calibration:
   162                           
   163                           ; 1 bytes @ 0x1
   164   00001C                     	ds	1
   165   00001D                     
   166                           ; 1 bytes @ 0x2
   167   00001D                     	ds	3
   168   000020                     ??_main:
   169                           
   170                           ; 1 bytes @ 0x5
   171   000020                     	ds	3
   172   000023                     main@i:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x8
   176   000023                     	ds	2
   177                           
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 19 in file "../lab-6-motors-and-pwm-tomas-thomas.X/main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;  i               2    8[COMRAM] int 
   188 ;;  PWMperiod       2    0        unsigned int 
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   201 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   202 ;;Total ram usage:        5 bytes
   203 ;; Hardware stack levels required when called: 1
   204 ;; This function calls:
   205 ;;		_adjust_calibration
   206 ;;		_initDCmotorsPWM
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text0
   213   000E02                     __ptext0:
   214                           	callstack 0
   215   000E02                     _main:
   216                           	callstack 30
   217   000E02                     
   218                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 21:     initDCmotorsPWM(PWMperiod);
   219   000E02  0E00               	movlw	0
   220   000E04  6E1C               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   221   000E06  0E63               	movlw	99
   222   000E08  6E1B               	movwf	initDCmotorsPWM@PWMperiod^0,c
   223   000E0A  ECEA  F007         	call	_initDCmotorsPWM	;wreg free
   224   000E0E                     
   225                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 25:     motorL.power=0;
   226   000E0E  0E00               	movlw	0
   227   000E10  6E0A               	movwf	_motorL^0,c
   228   000E12                     
   229                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 26:     motorL.direction=1;
   230   000E12  0E01               	movlw	1
   231   000E14  6E0B               	movwf	(_motorL+1)^0,c
   232   000E16                     
   233                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 27:     motorL.brakemode=1;
   234   000E16  0E01               	movlw	1
   235   000E18  6E0C               	movwf	(_motorL+2)^0,c
   236   000E1A                     
   237                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 28:     motorL.posDutyHighByte=(unsigned
      +                           char *)(&CCPR1H);
   238   000E1A  0EAA               	movlw	170
   239   000E1C  6E0F               	movwf	(_motorL+5)^0,c
   240   000E1E  0E0F               	movlw	15
   241   000E20  6E10               	movwf	(_motorL+6)^0,c
   242   000E22                     
   243                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 29:     motorL.negDutyHighByte=(unsigned
      +                           char *)(&CCPR2H);
   244   000E22  0EA6               	movlw	166
   245   000E24  6E11               	movwf	(_motorL+7)^0,c
   246   000E26  0E0F               	movlw	15
   247   000E28  6E12               	movwf	(_motorL+8)^0,c
   248   000E2A                     
   249                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 30:     motorL.PWMperiod=PWMperiod;
   250   000E2A  0E00               	movlw	0
   251   000E2C  6E0E               	movwf	(_motorL+4)^0,c
   252   000E2E  0E63               	movlw	99
   253   000E30  6E0D               	movwf	(_motorL+3)^0,c
   254   000E32                     
   255                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 32:     motorR.power=0;
   256   000E32  0E00               	movlw	0
   257   000E34  6E01               	movwf	_motorR^0,c
   258   000E36                     
   259                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 33:     motorR.direction=1;
   260   000E36  0E01               	movlw	1
   261   000E38  6E02               	movwf	(_motorR+1)^0,c
   262   000E3A                     
   263                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 34:     motorR.brakemode=1;
   264   000E3A  0E01               	movlw	1
   265   000E3C  6E03               	movwf	(_motorR+2)^0,c
   266   000E3E                     
   267                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 35:     motorR.posDutyHighByte=(unsigned
      +                           char *)(&CCPR3H);
   268   000E3E  0E25               	movlw	37
   269   000E40  6E06               	movwf	(_motorR+5)^0,c
   270   000E42  0E0F               	movlw	15
   271   000E44  6E07               	movwf	(_motorR+6)^0,c
   272   000E46                     
   273                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 36:     motorR.negDutyHighByte=(unsigned
      +                           char *)(&CCPR4H);
   274   000E46  0E21               	movlw	33
   275   000E48  6E08               	movwf	(_motorR+7)^0,c
   276   000E4A  0E0F               	movlw	15
   277   000E4C  6E09               	movwf	(_motorR+8)^0,c
   278   000E4E                     
   279                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 37:     motorR.PWMperiod=PWMperiod;
   280   000E4E  0E00               	movlw	0
   281   000E50  6E05               	movwf	(_motorR+4)^0,c
   282   000E52  0E63               	movlw	99
   283   000E54  6E04               	movwf	(_motorR+3)^0,c
   284   000E56                     
   285                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 40:     calibration.left_45 = 10;
   286   000E56  0E0A               	movlw	10
   287   000E58  6E17               	movwf	_calibration^0,c
   288   000E5A                     
   289                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 41:     calibration.right_45 = 20;
   290   000E5A  0E14               	movlw	20
   291   000E5C  6E18               	movwf	(_calibration+1)^0,c
   292   000E5E                     
   293                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 42:     calibration.forward_motorL = 20;
   294   000E5E  0E14               	movlw	20
   295   000E60  6E19               	movwf	(_calibration+2)^0,c
   296   000E62                     
   297                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 43:     calibration.forward_motorR = 20;
   298   000E62  0E14               	movlw	20
   299   000E64  6E1A               	movwf	(_calibration+3)^0,c
   300   000E66                     
   301                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 49:     TRISDbits.TRISD7 = 0;
   302   000E66  9E84               	bcf	132,7,c	;volatile
   303   000E68                     
   304                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 50:     LATDbits.LATD7 = 0;
   305   000E68  9E7C               	bcf	124,7,c	;volatile
   306   000E6A                     
   307                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 53:     TRISHbits.TRISH3 = 0;
   308   000E6A  9688               	bcf	136,3,c	;volatile
   309   000E6C                     
   310                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 54:     LATHbits.LATH3 = 0;
   311   000E6C  9680               	bcf	128,3,c	;volatile
   312   000E6E                     
   313                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 57:     TRISFbits.TRISF2=1;
   314   000E6E  8486               	bsf	134,2,c	;volatile
   315   000E70                     
   316                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 58:     ANSELFbits.ANSELF2=0;
   317   000E70  010E               	movlb	14	; () banked
   318   000E72  95B4               	bcf	180,2,b	;volatile
   319   000E74                     
   320                           ; BSR set to: 14
   321                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 61:     TRISFbits.TRISF3=1;
   322   000E74  8686               	bsf	134,3,c	;volatile
   323   000E76                     
   324                           ; BSR set to: 14
   325                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 62:     ANSELFbits.ANSELF3=0;
   326   000E76  97B4               	bcf	180,3,b	;volatile
   327   000E78                     l1334:
   328                           
   329                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 75:         if(!PORTFbits.RF2){
   330   000E78  B48E               	btfsc	142,2,c	;volatile
   331   000E7A  EF41  F007         	goto	u331
   332   000E7E  EF43  F007         	goto	u330
   333   000E82                     u331:
   334   000E82  EF45  F007         	goto	l1338
   335   000E86                     u330:
   336   000E86  EF4B  F007         	goto	l1340
   337   000E8A                     l1338:
   338                           
   339                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 79:         adjust_calibration(&calibrat
      +                          ion.left_45);
   340   000E8A  0E17               	movlw	low _calibration
   341   000E8C  6E1B               	movwf	adjust_calibration@type^0,c
   342   000E8E  EC81  F007         	call	_adjust_calibration	;wreg free
   343   000E92  EF3C  F007         	goto	l1334
   344   000E96                     l1340:
   345                           
   346                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 83:         for(int i = 0; i< calibratio
      +                          n.left_45; i++){
   347   000E96  0E00               	movlw	0
   348   000E98  6E24               	movwf	(main@i+1)^0,c
   349   000E9A  0E00               	movlw	0
   350   000E9C  6E23               	movwf	main@i^0,c
   351   000E9E  EF6D  F007         	goto	l179
   352   000EA2                     l1342:
   353                           
   354                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 84:             _delay((unsigned long)((
      +                          200)*(64000000/4000.0)));
   355   000EA2  0E11               	movlw	17
   356   000EA4  6E21               	movwf	(??_main+1)^0,c
   357   000EA6  0E3C               	movlw	60
   358   000EA8  6E20               	movwf	??_main^0,c
   359   000EAA  0ECB               	movlw	203
   360   000EAC                     u357:
   361   000EAC  2EE8               	decfsz	wreg,f,c
   362   000EAE  D7FE               	bra	u357
   363   000EB0  2E20               	decfsz	??_main^0,f,c
   364   000EB2  D7FC               	bra	u357
   365   000EB4  2E21               	decfsz	(??_main+1)^0,f,c
   366   000EB6  D7FA               	bra	u357
   367   000EB8  0000               	nop	
   368   000EBA                     
   369                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 85:             LATHbits.LATH3 = 1;
   370   000EBA  8680               	bsf	128,3,c	;volatile
   371                           
   372                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 86:             _delay((unsigned long)((
      +                          200)*(64000000/4000.0)));
   373   000EBC  0E11               	movlw	17
   374   000EBE  6E21               	movwf	(??_main+1)^0,c
   375   000EC0  0E3C               	movlw	60
   376   000EC2  6E20               	movwf	??_main^0,c
   377   000EC4  0ECB               	movlw	203
   378   000EC6                     u367:
   379   000EC6  2EE8               	decfsz	wreg,f,c
   380   000EC8  D7FE               	bra	u367
   381   000ECA  2E20               	decfsz	??_main^0,f,c
   382   000ECC  D7FC               	bra	u367
   383   000ECE  2E21               	decfsz	(??_main+1)^0,f,c
   384   000ED0  D7FA               	bra	u367
   385   000ED2  0000               	nop	
   386   000ED4                     
   387                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 87:             LATHbits.LATH3 = 0;
   388   000ED4  9680               	bcf	128,3,c	;volatile
   389   000ED6                     
   390                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 88:         }
   391   000ED6  4A23               	infsnz	main@i^0,f,c
   392   000ED8  2A24               	incf	(main@i+1)^0,f,c
   393   000EDA                     l179:
   394   000EDA  5017               	movf	_calibration^0,w,c
   395   000EDC  6E20               	movwf	??_main^0,c
   396   000EDE  6A21               	clrf	(??_main+1)^0,c
   397   000EE0  5020               	movf	??_main^0,w,c
   398   000EE2  5C23               	subwf	main@i^0,w,c
   399   000EE4  5024               	movf	(main@i+1)^0,w,c
   400   000EE6  0A80               	xorlw	128
   401   000EE8  6E22               	movwf	(??_main+2)^0,c
   402   000EEA  5021               	movf	(??_main+1)^0,w,c
   403   000EEC  0A80               	xorlw	128
   404   000EEE  5822               	subwfb	(??_main+2)^0,w,c
   405   000EF0  A0D8               	btfss	status,0,c
   406   000EF2  EF7D  F007         	goto	u341
   407   000EF6  EF7F  F007         	goto	u340
   408   000EFA                     u341:
   409   000EFA  EF51  F007         	goto	l1342
   410   000EFE                     u340:
   411   000EFE  EF00  F000         	goto	start
   412   000F02                     __end_of_main:
   413                           	callstack 0
   414                           
   415 ;; *************** function _initDCmotorsPWM *****************
   416 ;; Defined at:
   417 ;;		line 5 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;  PWMperiod       2    0[COMRAM] unsigned int 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, status,2
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   435 ;;Total ram usage:        2 bytes
   436 ;; Hardware stack levels used: 1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text1
   445   000FD4                     __ptext1:
   446                           	callstack 0
   447   000FD4                     _initDCmotorsPWM:
   448                           	callstack 30
   449   000FD4                     
   450                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
   451   000FD4  9485               	bcf	133,2,c	;volatile
   452                           
   453                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
   454   000FD6  9885               	bcf	133,4,c	;volatile
   455                           
   456                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
   457   000FD8  9E83               	bcf	131,7,c	;volatile
   458                           
   459                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
   460   000FDA  9C87               	bcf	135,6,c	;volatile
   461                           
   462                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 12:     LATEbits.LATE2 = 0;
   463   000FDC  947D               	bcf	125,2,c	;volatile
   464                           
   465                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 13:     LATEbits.LATE4 = 0;
   466   000FDE  987D               	bcf	125,4,c	;volatile
   467                           
   468                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 14:     LATCbits.LATC7 = 0;
   469   000FE0  9E7B               	bcf	123,7,c	;volatile
   470                           
   471                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 15:     LATGbits.LATG6 = 0;
   472   000FE2  9C7F               	bcf	127,6,c	;volatile
   473   000FE4                     
   474                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 18:     RE2PPS=0x05;
   475   000FE4  0E05               	movlw	5
   476   000FE6  010E               	movlb	14	; () banked
   477   000FE8  6F74               	movwf	116,b	;volatile
   478                           
   479                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 19:     RE4PPS=0x06;
   480   000FEA  0E06               	movlw	6
   481   000FEC  6F76               	movwf	118,b	;volatile
   482                           
   483                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 20:     RC7PPS=0x07;
   484   000FEE  0E07               	movlw	7
   485   000FF0  6F69               	movwf	105,b	;volatile
   486                           
   487                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 21:     RG6PPS=0x08;
   488   000FF2  0E08               	movlw	8
   489   000FF4  6F88               	movwf	136,b	;volatile
   490                           
   491                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 24:     T2CONbits.CKPS=100;
   492   000FF6  50BD               	movf	189,w,c	;volatile
   493   000FF8  0B8F               	andlw	-113
   494   000FFA  0940               	iorlw	64
   495   000FFC  6EBD               	movwf	189,c	;volatile
   496                           
   497                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
   498   000FFE  0EE0               	movlw	-32
   499   001000  16BE               	andwf	190,f,c	;volatile
   500                           
   501                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
   502   001002  50BF               	movf	191,w,c	;volatile
   503   001004  0BF0               	andlw	-16
   504   001006  0901               	iorlw	1
   505   001008  6EBF               	movwf	191,c	;volatile
   506   00100A                     
   507                           ; BSR set to: 14
   508                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 30:     T2PR=PWMperiod;
   509   00100A  C01B  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
   510   00100E                     
   511                           ; BSR set to: 14
   512                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 31:     T2CONbits.ON=1;
   513   00100E  8EBD               	bsf	189,7,c	;volatile
   514                           
   515                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 35:     CCPR1H=0;
   516   001010  0E00               	movlw	0
   517   001012  6EAA               	movwf	170,c	;volatile
   518                           
   519                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 36:     CCPR2H=0;
   520   001014  0E00               	movlw	0
   521   001016  6EA6               	movwf	166,c	;volatile
   522                           
   523                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 37:     CCPR3H=0;
   524   001018  0E00               	movlw	0
   525   00101A  010F               	movlb	15	; () banked
   526   00101C  6F25               	movwf	37,b	;volatile
   527                           
   528                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 38:     CCPR4H=0;
   529   00101E  0E00               	movlw	0
   530   001020  6F21               	movwf	33,b	;volatile
   531                           
   532                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
   533   001022  0EFC               	movlw	-4
   534   001024  16AD               	andwf	173,f,c	;volatile
   535                           
   536                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
   537   001026  0EF3               	movlw	-13
   538   001028  16AD               	andwf	173,f,c	;volatile
   539                           
   540                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
   541   00102A  0ECF               	movlw	-49
   542   00102C  16AD               	andwf	173,f,c	;volatile
   543                           
   544                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
   545   00102E  0E3F               	movlw	-193
   546   001030  16AD               	andwf	173,f,c	;volatile
   547   001032                     
   548                           ; BSR set to: 15
   549                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 47:     CCP1CONbits.FMT=1;
   550   001032  88AB               	bsf	171,4,c	;volatile
   551                           
   552                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
   553   001034  50AB               	movf	171,w,c	;volatile
   554   001036  0BF0               	andlw	-16
   555   001038  090C               	iorlw	12
   556   00103A  6EAB               	movwf	171,c	;volatile
   557   00103C                     
   558                           ; BSR set to: 15
   559                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 49:     CCP1CONbits.EN=1;
   560   00103C  8EAB               	bsf	171,7,c	;volatile
   561   00103E                     
   562                           ; BSR set to: 15
   563                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 51:     CCP2CONbits.FMT=1;
   564   00103E  88A7               	bsf	167,4,c	;volatile
   565                           
   566                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
   567   001040  50A7               	movf	167,w,c	;volatile
   568   001042  0BF0               	andlw	-16
   569   001044  090C               	iorlw	12
   570   001046  6EA7               	movwf	167,c	;volatile
   571   001048                     
   572                           ; BSR set to: 15
   573                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 53:     CCP2CONbits.EN=1;
   574   001048  8EA7               	bsf	167,7,c	;volatile
   575   00104A                     
   576                           ; BSR set to: 15
   577                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 55:     CCP3CONbits.FMT=1;
   578   00104A  8926               	bsf	38,4,b	;volatile
   579                           
   580                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
   581   00104C  5126               	movf	38,w,b	;volatile
   582   00104E  0BF0               	andlw	-16
   583   001050  090C               	iorlw	12
   584   001052  6F26               	movwf	38,b	;volatile
   585   001054                     
   586                           ; BSR set to: 15
   587                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 57:     CCP3CONbits.EN=1;
   588   001054  8F26               	bsf	38,7,b	;volatile
   589   001056                     
   590                           ; BSR set to: 15
   591                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 59:     CCP4CONbits.FMT=1;
   592   001056  8922               	bsf	34,4,b	;volatile
   593                           
   594                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
   595   001058  5122               	movf	34,w,b	;volatile
   596   00105A  0BF0               	andlw	-16
   597   00105C  090C               	iorlw	12
   598   00105E  6F22               	movwf	34,b	;volatile
   599   001060                     
   600                           ; BSR set to: 15
   601                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 61:     CCP4CONbits.EN=1;
   602   001060  8F22               	bsf	34,7,b	;volatile
   603   001062                     
   604                           ; BSR set to: 15
   605                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 64:     TRISHbits.TRISH3 = 0;
   606   001062  9688               	bcf	136,3,c	;volatile
   607   001064                     
   608                           ; BSR set to: 15
   609                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 65:     LATHbits.LATH3 = 0;
   610   001064  9680               	bcf	128,3,c	;volatile
   611   001066                     
   612                           ; BSR set to: 15
   613   001066  0012               	return		;funcret
   614   001068                     __end_of_initDCmotorsPWM:
   615                           	callstack 0
   616                           
   617 ;; *************** function _adjust_calibration *****************
   618 ;; Defined at:
   619 ;;		line 5 in file "../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  type            1    0[COMRAM] PTR int 
   622 ;;		 -> calibration(4), 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   637 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   638 ;;Total ram usage:        5 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text2
   648   000F02                     __ptext2:
   649                           	callstack 0
   650   000F02                     _adjust_calibration:
   651                           	callstack 30
   652   000F02                     
   653                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 6:     if(!PORTFbits.RF2){
   654   000F02  B48E               	btfsc	142,2,c	;volatile
   655   000F04  EF86  F007         	goto	u311
   656   000F08  EF88  F007         	goto	u310
   657   000F0C                     u311:
   658   000F0C  EFB4  F007         	goto	l1270
   659   000F10                     u310:
   660   000F10                     
   661                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 7:         _delay((unsigned long)
      +                          ((200)*(64000000/4000.0)));
   662   000F10  0E11               	movlw	17
   663   000F12  6E1D               	movwf	(??_adjust_calibration+1)^0,c
   664   000F14  0E3C               	movlw	60
   665   000F16  6E1C               	movwf	??_adjust_calibration^0,c
   666   000F18  0ECB               	movlw	203
   667   000F1A                     u377:
   668   000F1A  2EE8               	decfsz	wreg,f,c
   669   000F1C  D7FE               	bra	u377
   670   000F1E  2E1C               	decfsz	??_adjust_calibration^0,f,c
   671   000F20  D7FC               	bra	u377
   672   000F22  2E1D               	decfsz	(??_adjust_calibration+1)^0,f,c
   673   000F24  D7FA               	bra	u377
   674   000F26  0000               	nop	
   675   000F28                     
   676                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 8:         *type = *type + 1;
   677   000F28  501B               	movf	adjust_calibration@type^0,w,c
   678   000F2A  6ED9               	movwf	fsr2l,c
   679   000F2C  6ADA               	clrf	fsr2h,c
   680   000F2E  CFDE F01C          	movff	postinc2,??_adjust_calibration
   681   000F32  CFDD F01D          	movff	postdec2,??_adjust_calibration+1
   682   000F36  0E01               	movlw	1
   683   000F38  261C               	addwf	??_adjust_calibration^0,f,c
   684   000F3A  0E00               	movlw	0
   685   000F3C  221D               	addwfc	(??_adjust_calibration+1)^0,f,c
   686   000F3E  501B               	movf	adjust_calibration@type^0,w,c
   687   000F40  6ED9               	movwf	fsr2l,c
   688   000F42  6ADA               	clrf	fsr2h,c
   689   000F44  C01C  FFDE         	movff	??_adjust_calibration,postinc2
   690   000F48  C01D  FFDD         	movff	??_adjust_calibration+1,postdec2
   691   000F4C                     
   692                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 9:         LATDbits.LATD7 = 1;
   693   000F4C  8E7C               	bsf	124,7,c	;volatile
   694   000F4E                     
   695                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 10:         _delay((unsigned long
      +                          )((200)*(64000000/4000.0)));
   696   000F4E  0E11               	movlw	17
   697   000F50  6E1D               	movwf	(??_adjust_calibration+1)^0,c
   698   000F52  0E3C               	movlw	60
   699   000F54  6E1C               	movwf	??_adjust_calibration^0,c
   700   000F56  0ECB               	movlw	203
   701   000F58                     u387:
   702   000F58  2EE8               	decfsz	wreg,f,c
   703   000F5A  D7FE               	bra	u387
   704   000F5C  2E1C               	decfsz	??_adjust_calibration^0,f,c
   705   000F5E  D7FC               	bra	u387
   706   000F60  2E1D               	decfsz	(??_adjust_calibration+1)^0,f,c
   707   000F62  D7FA               	bra	u387
   708   000F64  0000               	nop	
   709   000F66                     
   710                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 11:         LATDbits.LATD7 = 0;
   711   000F66  9E7C               	bcf	124,7,c	;volatile
   712   000F68                     l1270:
   713                           
   714                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 14:     if(!PORTFbits.RF3){
   715   000F68  B68E               	btfsc	142,3,c	;volatile
   716   000F6A  EFB9  F007         	goto	u321
   717   000F6E  EFBB  F007         	goto	u320
   718   000F72                     u321:
   719   000F72  EFE9  F007         	goto	l224
   720   000F76                     u320:
   721   000F76                     
   722                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 15:         _delay((unsigned long
      +                          )((200)*(64000000/4000.0)));
   723   000F76  0E11               	movlw	17
   724   000F78  6E1D               	movwf	(??_adjust_calibration+1)^0,c
   725   000F7A  0E3C               	movlw	60
   726   000F7C  6E1C               	movwf	??_adjust_calibration^0,c
   727   000F7E  0ECB               	movlw	203
   728   000F80                     u397:
   729   000F80  2EE8               	decfsz	wreg,f,c
   730   000F82  D7FE               	bra	u397
   731   000F84  2E1C               	decfsz	??_adjust_calibration^0,f,c
   732   000F86  D7FC               	bra	u397
   733   000F88  2E1D               	decfsz	(??_adjust_calibration+1)^0,f,c
   734   000F8A  D7FA               	bra	u397
   735   000F8C  0000               	nop	
   736   000F8E                     
   737                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 16:         *type = *type - 1;
   738   000F8E  501B               	movf	adjust_calibration@type^0,w,c
   739   000F90  6ED9               	movwf	fsr2l,c
   740   000F92  6ADA               	clrf	fsr2h,c
   741   000F94  CFDE F01C          	movff	postinc2,??_adjust_calibration
   742   000F98  CFDD F01D          	movff	postdec2,??_adjust_calibration+1
   743   000F9C  0EFF               	movlw	255
   744   000F9E  241C               	addwf	??_adjust_calibration^0,w,c
   745   000FA0  6E1E               	movwf	(??_adjust_calibration+2)^0,c
   746   000FA2  0EFF               	movlw	255
   747   000FA4  201D               	addwfc	(??_adjust_calibration+1)^0,w,c
   748   000FA6  6E1F               	movwf	(??_adjust_calibration+3)^0,c
   749   000FA8  501B               	movf	adjust_calibration@type^0,w,c
   750   000FAA  6ED9               	movwf	fsr2l,c
   751   000FAC  6ADA               	clrf	fsr2h,c
   752   000FAE  C01E  FFDE         	movff	??_adjust_calibration+2,postinc2
   753   000FB2  C01F  FFDD         	movff	??_adjust_calibration+3,postdec2
   754   000FB6                     
   755                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 17:         LATHbits.LATH3 = 1;
   756   000FB6  8680               	bsf	128,3,c	;volatile
   757   000FB8                     
   758                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 18:         _delay((unsigned long
      +                          )((200)*(64000000/4000.0)));
   759   000FB8  0E11               	movlw	17
   760   000FBA  6E1D               	movwf	(??_adjust_calibration+1)^0,c
   761   000FBC  0E3C               	movlw	60
   762   000FBE  6E1C               	movwf	??_adjust_calibration^0,c
   763   000FC0  0ECB               	movlw	203
   764   000FC2                     u407:
   765   000FC2  2EE8               	decfsz	wreg,f,c
   766   000FC4  D7FE               	bra	u407
   767   000FC6  2E1C               	decfsz	??_adjust_calibration^0,f,c
   768   000FC8  D7FC               	bra	u407
   769   000FCA  2E1D               	decfsz	(??_adjust_calibration+1)^0,f,c
   770   000FCC  D7FA               	bra	u407
   771   000FCE  0000               	nop	
   772   000FD0                     
   773                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 19:         LATHbits.LATH3 = 0;
   774   000FD0  9680               	bcf	128,3,c	;volatile
   775   000FD2                     l224:
   776   000FD2  0012               	return		;funcret
   777   000FD4                     __end_of_adjust_calibration:
   778                           	callstack 0
   779                           
   780                           	psect	smallconst
   781   000E00                     __psmallconst:
   782                           	callstack 0
   783   000E00  00                 	db	0
   784   000E01  00                 	db	0	; dummy byte at the end
   785   000000                     
   786                           	psect	rparam
   787   000000                     
   788                           	psect	config
   789                           
   790                           ;Config register CONFIG1L @ 0x300000
   791                           ;	External Oscillator mode Selection bits
   792                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   793                           ;	Power-up default value for COSC bits
   794                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   795   300000                     	org	3145728
   796   300000  AA                 	db	170
   797                           
   798                           ;Config register CONFIG1H @ 0x300001
   799                           ;	unspecified, using default values
   800                           ;	Clock Out Enable bit
   801                           ;	CLKOUTEN = 0x1, unprogrammed default
   802                           ;	Clock Switch Enable bit
   803                           ;	CSWEN = 0x1, unprogrammed default
   804                           ;	Fail-Safe Clock Monitor Enable bit
   805                           ;	FCMEN = 0x1, unprogrammed default
   806   300001                     	org	3145729
   807   300001  FF                 	db	255
   808                           
   809                           ;Config register CONFIG3L @ 0x300004
   810                           ;	WDT Period Select bits
   811                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   812                           ;	WDT operating mode
   813                           ;	WDTE = OFF, WDT Disabled
   814   300004                     	org	3145732
   815   300004  9F                 	db	159
   816                           
   817                           ;Config register CONFIG3H @ 0x300005
   818                           ;	unspecified, using default values
   819                           ;	WDT Window Select bits
   820                           ;	WDTCWS = 0x7, unprogrammed default
   821                           ;	WDT input clock selector
   822                           ;	WDTCCS = 0x7, unprogrammed default
   823   300005                     	org	3145733
   824   300005  FF                 	db	255
   825                           tosu	equ	0xFFF
   826                           tosh	equ	0xFFE
   827                           tosl	equ	0xFFD
   828                           stkptr	equ	0xFFC
   829                           pclatu	equ	0xFFB
   830                           pclath	equ	0xFFA
   831                           pcl	equ	0xFF9
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           prodh	equ	0xFF4
   837                           prodl	equ	0xFF3
   838                           indf0	equ	0xFEF
   839                           postinc0	equ	0xFEE
   840                           postdec0	equ	0xFED
   841                           preinc0	equ	0xFEC
   842                           plusw0	equ	0xFEB
   843                           fsr0h	equ	0xFEA
   844                           fsr0l	equ	0xFE9
   845                           wreg	equ	0xFE8
   846                           indf1	equ	0xFE7
   847                           postinc1	equ	0xFE6
   848                           postdec1	equ	0xFE5
   849                           preinc1	equ	0xFE4
   850                           plusw1	equ	0xFE3
   851                           fsr1h	equ	0xFE2
   852                           fsr1l	equ	0xFE1
   853                           bsr	equ	0xFE0
   854                           indf2	equ	0xFDF
   855                           postinc2	equ	0xFDE
   856                           postdec2	equ	0xFDD
   857                           preinc2	equ	0xFDC
   858                           plusw2	equ	0xFDB
   859                           fsr2h	equ	0xFDA
   860                           fsr2l	equ	0xFD9
   861                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@type	PTR int  size(1) Largest target is 4
		 -> calibration(COMRAM[4]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_adjust_calibration

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     353
                                              5 COMRAM     5     5      0
                 _adjust_calibration
                    _initDCmotorsPWM
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adjust_calibration                                   5     4      1     164
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adjust_calibration
   _initDCmotorsPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllllll     7A      0       0      47        0.0%
BITBIGSFRllllhh     6C      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      25       1       38.9%
BITBIGSFRllllhh     54      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     2B      0       0      43        0.0%
BITBIGSFRhhlllh     17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      44        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRlllllh      A      0       0      46        0.0%
BITBIGSFRhhllll      5      0       0      37        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhh        2      0       0      38        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      45        0.0%
BITBIGSFRllhl        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      48        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 08 16:31:08 2024

                        l61 1066                         l224 0FD2                         l184 0EFE  
                       l179 0EDA                         u310 0F10                         u311 0F0C  
                       u320 0F76                         u321 0F72                         u330 0E86  
                       u331 0E82                         u340 0EFE                         u341 0EFA  
                       u407 0FC2                         u357 0EAC                         u367 0EC6  
                       u377 0F1A                         u387 0F58                         u397 0F80  
                       wreg 0FE8  __end_of_adjust_calibration 0FD4                        l1300 0E36  
                      l1230 0FD4                        l1310 0E56                        l1302 0E3A  
                      l1240 103C                        l1232 0FE4                        l1320 0E68  
                      l1312 0E5A                        l1304 0E3E                        l1250 1056  
                      l1242 103E                        l1234 100A                        l1330 0E74  
                      l1322 0E6A                        l1314 0E5E                        l1306 0E46  
                      l1260 0F10                        l1252 1060                        l1244 1048  
                      l1236 100E                        l1340 0E96                        l1332 0E76  
                      l1324 0E6C                        l1316 0E62                        l1308 0E4E  
                      l1262 0F28                        l1270 0F68                        l1254 1062  
                      l1246 104A                        l1238 1032                        l1342 0EA2  
                      l1334 0E78                        l1326 0E6E                        l1318 0E66  
                      l1280 0FD0                        l1272 0F76                        l1264 0F4C  
                      l1256 1064                        l1248 1054                        l1344 0EBA  
                      l1328 0E70                        l1274 0F8E                        l1266 0F4E  
                      l1258 0F02                        l1346 0ED4                        l1338 0E8A  
                      l1290 0E16                        l1282 0E02                        l1276 0FB6  
                      l1268 0F66                        l1348 0ED6                        l1292 0E1A  
                      l1284 0E02                        l1278 0FB8                        l1294 0E22  
                      l1286 0E0E                        l1296 0E2A                        l1288 0E12  
                      l1298 0E32                        _T2PR 0FBC                        _main 0E02  
                      _temp 0025                        fsr2h 0FDA                        fsr2l 0FD9  
                      start 0000                ___param_bank 0000                       ?_main 001B  
                     main@i 0023                       tablat 0FF5                       status 0FD8  
           __initialization 1068                __end_of_main 0F02                      ??_main 0020  
             __activetblptr 0000                      _CCPR1H 0FAA                      _CCPR2H 0FA6  
                    _CCPR3H 0F25                      _CCPR4H 0F21                      _RE2PPS 0E74  
                    _RC7PPS 0E69                      _RE4PPS 0E76                      _RG6PPS 0E88  
              _CCPTMRS0bits 0FAD                      clear_0 1080                      _motorL 000A  
                    _motorR 0001                      isa$std 0001                __pdataCOMRAM 0025  
              __mediumconst 0000                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           ??_initDCmotorsPWM 001D                  __accesstop 0060  
   __end_of__initialization 1086               ___rparam_used 0001              __pcstackCOMRAM 001B  
              _T2CLKCONbits 0FBF          _adjust_calibration 0F02         ?_adjust_calibration 001B  
      ??_adjust_calibration 001C                     __Hparam 0000                     __Lparam 0000  
                _off_period 0013                __psmallconst 0E00                     __pcinit 1068  
                   __ramtop 0E00                     __ptext0 0E02                     __ptext1 0FD4  
                   __ptext2 0F02                   _T2CONbits 0FBD                   _T2HLTbits 0FBE  
      end_of_initialization 1086                     postdec2 0FDD                     postinc0 0FEE  
                   postinc2 0FDE             _initDCmotorsPWM 0FD4                   _PORTFbits 0F8E  
                 _TRISCbits 0F83                   _TRISDbits 0F84                   _TRISEbits 0F85  
                 _TRISFbits 0F86                   _TRISGbits 0F87                   _TRISHbits 0F88  
               _CCP1CONbits 0FAB                 _CCP2CONbits 0FA7                 _CCP3CONbits 0F26  
               _CCP4CONbits 0F22               __pidataCOMRAM 108C         start_initialization 1068  
   __end_of_initDCmotorsPWM 1068                 _calibration 0017                 __pbssCOMRAM 0001  
               __smallconst 0E00    initDCmotorsPWM@PWMperiod 001B                    _LATCbits 0F7B  
                  _LATDbits 0F7C                    _LATEbits 0F7D                   _on_period 0015  
                  _LATGbits 0F7F                    _LATHbits 0F80            ?_initDCmotorsPWM 001B  
                  __Hrparam 0000                    __Lrparam 0000                  _ANSELFbits 0EB4  
                  isa$xinst 0000      adjust_calibration@type 001B  
