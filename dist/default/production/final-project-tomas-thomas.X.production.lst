

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 18:42:32 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 21/07/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F67K40 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   001696                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _temp
    65   001696  07                 	db	7
    66   000000                     _TRISGbits	set	3975
    67   000000                     _TRISEbits	set	3973
    68   000000                     _TRISFbits	set	3974
    69   000000                     _TRISHbits	set	3976
    70   000000                     _RC7PPS	set	3689
    71   000000                     _RE2PPS	set	3700
    72   000000                     _ANSELFbits	set	3764
    73   000000                     _CCPR4H	set	3873
    74   000000                     _CCPR3H	set	3877
    75   000000                     _CCPR2H	set	4006
    76   000000                     _CCPR1H	set	4010
    77   000000                     _CCP1CONbits	set	4011
    78   000000                     _CCPTMRS0bits	set	4013
    79   000000                     _T2PR	set	4028
    80   000000                     _T2CONbits	set	4029
    81   000000                     _CCP2CONbits	set	4007
    82   000000                     _CCP3CONbits	set	3878
    83   000000                     _LATCbits	set	3963
    84   000000                     _LATDbits	set	3964
    85   000000                     _TRISDbits	set	3972
    86   000000                     _CCP4CONbits	set	3874
    87   000000                     _LATGbits	set	3967
    88   000000                     _LATEbits	set	3965
    89   000000                     _LATHbits	set	3968
    90   000000                     _PORTFbits	set	3982
    91   000000                     _TRISCbits	set	3971
    92   000000                     _RE4PPS	set	3702
    93   000000                     _RG6PPS	set	3720
    94   000000                     _T2CLKCONbits	set	4031
    95   000000                     _T2HLTbits	set	4030
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100   001672                     __pcinit:
   101                           	callstack 0
   102   001672                     start_initialization:
   103                           	callstack 0
   104   001672                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Initialize objects allocated to COMRAM (1 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109   001672  0E96               	movlw	low __pidataCOMRAM
   110   001674  6EF6               	movwf	tblptrl,c
   111   001676  0E16               	movlw	high __pidataCOMRAM
   112   001678  6EF7               	movwf	tblptrh,c
   113   00167A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114   00167C  6EF8               	movwf	tblptru,c
   115   00167E  0009               	tblrd		*+	;fetch initializer
   116   001680  CFF5 F047          	movff	tablat,__pdataCOMRAM
   117                           
   118                           ; Clear objects allocated to COMRAM (38 bytes)
   119   001684  EE00  F001         	lfsr	0,__pbssCOMRAM
   120   001688  0E26               	movlw	38
   121   00168A                     clear_0:
   122   00168A  6AEE               	clrf	postinc0,c
   123   00168C  06E8               	decf	wreg,f,c
   124   00168E  E1FD               	bnz	clear_0
   125   001690                     end_of_initialization:
   126                           	callstack 0
   127   001690                     __end_of__initialization:
   128                           	callstack 0
   129   001690  0100               	movlb	0
   130   001692  EF32  F00A         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133   000001                     __pbssCOMRAM:
   134                           	callstack 0
   135   000001                     _motor_adjustments:
   136                           	callstack 0
   137   000001                     	ds	10
   138   00000B                     _off_period:
   139                           	callstack 0
   140   00000B                     	ds	2
   141   00000D                     _on_period:
   142                           	callstack 0
   143   00000D                     	ds	2
   144   00000F                     _motorR:
   145                           	callstack 0
   146   00000F                     	ds	9
   147   000018                     _motorL:
   148                           	callstack 0
   149   000018                     	ds	9
   150   000021                     _calibration:
   151                           	callstack 0
   152   000021                     	ds	6
   153                           
   154                           	psect	dataCOMRAM
   155   000047                     __pdataCOMRAM:
   156                           	callstack 0
   157   000047                     _temp:
   158                           	callstack 0
   159   000047                     	ds	1
   160                           
   161                           	psect	cstackCOMRAM
   162   000027                     __pcstackCOMRAM:
   163                           	callstack 0
   164   000027                     ?___wmul:
   165                           	callstack 0
   166   000027                     ?___awdiv:
   167                           	callstack 0
   168   000027                     adjust_calibration@calibration_label:
   169                           	callstack 0
   170   000027                     initDCmotorsPWM@PWMperiod:
   171                           	callstack 0
   172   000027                     delay_ms_function@milliseconds:
   173                           	callstack 0
   174   000027                     ___wmul@multiplier:
   175                           	callstack 0
   176   000027                     ___awdiv@dividend:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x0
   180   000027                     	ds	1
   181   000028                     ??_adjust_calibration:
   182                           
   183                           ; 1 bytes @ 0x1
   184   000028                     	ds	1
   185   000029                     ??_delay_ms_function:
   186   000029                     ___wmul@multiplicand:
   187                           	callstack 0
   188   000029                     ___awdiv@divisor:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192   000029                     	ds	2
   193   00002B                     ___awdiv@counter:
   194                           	callstack 0
   195   00002B                     ___wmul@product:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x4
   199   00002B                     	ds	1
   200   00002C                     ___awdiv@sign:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0x5
   204   00002C                     	ds	1
   205   00002D                     ?___lwdiv:
   206                           	callstack 0
   207   00002D                     ___awdiv@quotient:
   208                           	callstack 0
   209   00002D                     ___lwdiv@dividend:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x6
   213   00002D                     	ds	2
   214   00002F                     ___lwdiv@divisor:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x8
   218   00002F                     	ds	2
   219   000031                     ___lwdiv@quotient:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0xA
   223   000031                     	ds	2
   224   000033                     ___lwdiv@counter:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0xC
   228   000033                     	ds	1
   229   000034                     setMotorPWM@m:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0xD
   233   000034                     	ds	1
   234   000035                     ??_setMotorPWM:
   235                           
   236                           ; 1 bytes @ 0xE
   237   000035                     	ds	2
   238   000037                     setMotorPWM@posDuty:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x10
   242   000037                     	ds	1
   243   000038                     setMotorPWM@negDuty:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x11
   247   000038                     	ds	1
   248   000039                     turnLEFT@mL:
   249                           	callstack 0
   250   000039                     turnRIGHT@mL:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x12
   254   000039                     	ds	1
   255   00003A                     turnLEFT@mR:
   256                           	callstack 0
   257   00003A                     turnRIGHT@mR:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x13
   261   00003A                     	ds	1
   262   00003B                     ??_turnRIGHT:
   263   00003B                     ??_turnLEFT:
   264                           
   265                           ; 1 bytes @ 0x14
   266   00003B                     	ds	3
   267   00003E                     turnLEFT@rotation_calibration:
   268                           	callstack 0
   269   00003E                     turnRIGHT@rotation_calibration:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x17
   273   00003E                     	ds	1
   274   00003F                     turnLEFT@i:
   275                           	callstack 0
   276   00003F                     turnRIGHT@i:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x18
   280   00003F                     	ds	2
   281   000041                     turnLEFT@j:
   282                           	callstack 0
   283   000041                     turnRIGHT@j:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x1A
   287   000041                     	ds	2
   288   000043                     turnLEFT@max_power:
   289                           	callstack 0
   290   000043                     turnRIGHT@max_power:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x1C
   294   000043                     	ds	2
   295   000045                     turnLEFT@delay_time:
   296                           	callstack 0
   297   000045                     turnRIGHT@delay_time:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x1E
   301   000045                     	ds	2
   302   000047                     
   303                           ; 1 bytes @ 0x20
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 20 in file "../lab-6-motors-and-pwm-tomas-thomas.X/main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  PWMperiod       2    0        unsigned int 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels required when called: 3
   329 ;; This function calls:
   330 ;;		_adjust_calibration
   331 ;;		_initDCmotorsPWM
   332 ;;		_turnLEFT
   333 ;;		_turnRIGHT
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text0
   340   001464                     __ptext0:
   341                           	callstack 0
   342   001464                     _main:
   343                           	callstack 28
   344   001464                     
   345                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 22:     initDCmotorsPWM(PWMperiod);
   346   001464  0E00               	movlw	0
   347   001466  6E28               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   348   001468  0E63               	movlw	99
   349   00146A  6E27               	movwf	initDCmotorsPWM@PWMperiod^0,c
   350   00146C  EC8B  F00A         	call	_initDCmotorsPWM	;wreg free
   351   001470                     
   352                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 26:     motorL.power=0;
   353   001470  0E00               	movlw	0
   354   001472  6E18               	movwf	_motorL^0,c
   355   001474                     
   356                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 27:     motorL.direction=1;
   357   001474  0E01               	movlw	1
   358   001476  6E19               	movwf	(_motorL+1)^0,c
   359   001478                     
   360                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 28:     motorL.brakemode=1;
   361   001478  0E01               	movlw	1
   362   00147A  6E1A               	movwf	(_motorL+2)^0,c
   363   00147C                     
   364                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 29:     motorL.posDutyHighByte=(unsigned
      +                           char *)(&CCPR1H);
   365   00147C  0EAA               	movlw	170
   366   00147E  6E1D               	movwf	(_motorL+5)^0,c
   367   001480  0E0F               	movlw	15
   368   001482  6E1E               	movwf	(_motorL+6)^0,c
   369   001484                     
   370                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 30:     motorL.negDutyHighByte=(unsigned
      +                           char *)(&CCPR2H);
   371   001484  0EA6               	movlw	166
   372   001486  6E1F               	movwf	(_motorL+7)^0,c
   373   001488  0E0F               	movlw	15
   374   00148A  6E20               	movwf	(_motorL+8)^0,c
   375   00148C                     
   376                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 31:     motorL.PWMperiod=PWMperiod;
   377   00148C  0E00               	movlw	0
   378   00148E  6E1C               	movwf	(_motorL+4)^0,c
   379   001490  0E63               	movlw	99
   380   001492  6E1B               	movwf	(_motorL+3)^0,c
   381   001494                     
   382                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 33:     motorR.power=0;
   383   001494  0E00               	movlw	0
   384   001496  6E0F               	movwf	_motorR^0,c
   385   001498                     
   386                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 34:     motorR.direction=1;
   387   001498  0E01               	movlw	1
   388   00149A  6E10               	movwf	(_motorR+1)^0,c
   389   00149C                     
   390                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 35:     motorR.brakemode=1;
   391   00149C  0E01               	movlw	1
   392   00149E  6E11               	movwf	(_motorR+2)^0,c
   393   0014A0                     
   394                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 36:     motorR.posDutyHighByte=(unsigned
      +                           char *)(&CCPR3H);
   395   0014A0  0E25               	movlw	37
   396   0014A2  6E14               	movwf	(_motorR+5)^0,c
   397   0014A4  0E0F               	movlw	15
   398   0014A6  6E15               	movwf	(_motorR+6)^0,c
   399   0014A8                     
   400                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 37:     motorR.negDutyHighByte=(unsigned
      +                           char *)(&CCPR4H);
   401   0014A8  0E21               	movlw	33
   402   0014AA  6E16               	movwf	(_motorR+7)^0,c
   403   0014AC  0E0F               	movlw	15
   404   0014AE  6E17               	movwf	(_motorR+8)^0,c
   405   0014B0                     
   406                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 38:     motorR.PWMperiod=PWMperiod;
   407   0014B0  0E00               	movlw	0
   408   0014B2  6E13               	movwf	(_motorR+4)^0,c
   409   0014B4  0E63               	movlw	99
   410   0014B6  6E12               	movwf	(_motorR+3)^0,c
   411   0014B8                     
   412                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 44:     TRISDbits.TRISD7 = 0;
   413   0014B8  9E84               	bcf	132,7,c	;volatile
   414   0014BA                     
   415                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 45:     LATDbits.LATD7 = 0;
   416   0014BA  9E7C               	bcf	124,7,c	;volatile
   417   0014BC                     
   418                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 48:     TRISHbits.TRISH3 = 0;
   419   0014BC  9688               	bcf	136,3,c	;volatile
   420   0014BE                     
   421                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 49:     LATHbits.LATH3 = 0;
   422   0014BE  9680               	bcf	128,3,c	;volatile
   423   0014C0                     
   424                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 52:     TRISFbits.TRISF2=1;
   425   0014C0  8486               	bsf	134,2,c	;volatile
   426   0014C2                     
   427                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 53:     ANSELFbits.ANSELF2=0;
   428   0014C2  010E               	movlb	14	; () banked
   429   0014C4  95B4               	bcf	180,2,b	;volatile
   430   0014C6                     
   431                           ; BSR set to: 14
   432                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 56:     TRISFbits.TRISF3=1;
   433   0014C6  8686               	bsf	134,3,c	;volatile
   434   0014C8                     
   435                           ; BSR set to: 14
   436                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 57:     ANSELFbits.ANSELF3=0;
   437   0014C8  97B4               	bcf	180,3,b	;volatile
   438   0014CA                     
   439                           ; BSR set to: 14
   440                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 61:     calibration.index = 0;
   441   0014CA  0E00               	movlw	0
   442   0014CC  6E21               	movwf	_calibration^0,c
   443   0014CE                     
   444                           ; BSR set to: 14
   445                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 62:     calibration.over = 0;
   446   0014CE  0E00               	movlw	0
   447   0014D0  6E22               	movwf	(_calibration+1)^0,c
   448   0014D2                     
   449                           ; BSR set to: 14
   450                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 66:     calibration.left_45 = 60;
   451   0014D2  0E3C               	movlw	60
   452   0014D4  6E23               	movwf	(_calibration+2)^0,c
   453   0014D6                     
   454                           ; BSR set to: 14
   455                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 67:     calibration.right_45 = 10;
   456   0014D6  0E0A               	movlw	10
   457   0014D8  6E24               	movwf	(_calibration+3)^0,c
   458   0014DA                     
   459                           ; BSR set to: 14
   460                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 68:     calibration.forward_motorL = 20;
   461   0014DA  0E14               	movlw	20
   462   0014DC  6E25               	movwf	(_calibration+4)^0,c
   463   0014DE                     
   464                           ; BSR set to: 14
   465                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 69:     calibration.forward_motorR = 20;
   466   0014DE  0E14               	movlw	20
   467   0014E0  6E26               	movwf	(_calibration+5)^0,c
   468   0014E2                     l1608:
   469                           
   470                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 77:         adjust_calibration(&calibrat
      +                          ion.right_45);
   471   0014E2  0E24               	movlw	low (_calibration+3)
   472   0014E4  6E27               	movwf	adjust_calibration@calibration_label^0,c
   473   0014E6  EC29  F009         	call	_adjust_calibration	;wreg free
   474   0014EA                     
   475                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 78:         turnRIGHT(calibration.right_
      +                          45, &motorL, &motorR);
   476   0014EA  0E18               	movlw	low _motorL
   477   0014EC  6E39               	movwf	turnRIGHT@mL^0,c
   478   0014EE  0E0F               	movlw	low _motorR
   479   0014F0  6E3A               	movwf	turnRIGHT@mR^0,c
   480   0014F2  5024               	movf	(_calibration+3)^0,w,c
   481   0014F4  EC01  F007         	call	_turnRIGHT
   482   0014F8                     
   483                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 80:         adjust_calibration(&calibrat
      +                          ion.left_45);
   484   0014F8  0E23               	movlw	low (_calibration+2)
   485   0014FA  6E27               	movwf	adjust_calibration@calibration_label^0,c
   486   0014FC  EC29  F009         	call	_adjust_calibration	;wreg free
   487   001500                     
   488                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 81:         turnLEFT(calibration.left_45
      +                          , &motorL, &motorR);
   489   001500  0E18               	movlw	low _motorL
   490   001502  6E39               	movwf	turnLEFT@mL^0,c
   491   001504  0E0F               	movlw	low _motorR
   492   001506  6E3A               	movwf	turnLEFT@mR^0,c
   493   001508  5023               	movf	(_calibration+2)^0,w,c
   494   00150A  ECC0  F007         	call	_turnLEFT
   495   00150E  EF71  F00A         	goto	l1608
   496   001512  EF00  F000         	goto	start
   497   001516                     __end_of_main:
   498                           	callstack 0
   499                           
   500 ;; *************** function _turnRIGHT *****************
   501 ;; Defined at:
   502 ;;		line 203 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  rotation_cal    1    wreg     unsigned char 
   505 ;;  mL              1   18[COMRAM] PTR struct DC_motor
   506 ;;		 -> motorL(9), 
   507 ;;  mR              1   19[COMRAM] PTR struct DC_motor
   508 ;;		 -> motorR(9), 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  rotation_cal    1   23[COMRAM] unsigned char 
   511 ;;  j               2   26[COMRAM] int 
   512 ;;  i               2   24[COMRAM] int 
   513 ;;  delay_time      2   30[COMRAM] int 
   514 ;;  max_power       2   28[COMRAM] int 
   515 ;;  acceleration    2    0        int 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   526 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   527 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   528 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   529 ;;Total ram usage:       14 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 2
   532 ;; This function calls:
   533 ;;		___awdiv
   534 ;;		_delay_ms_function
   535 ;;		_setMotorPWM
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text1
   542   000E02                     __ptext1:
   543                           	callstack 0
   544   000E02                     _turnRIGHT:
   545                           	callstack 28
   546                           
   547                           ;incstack = 0
   548                           ;turnRIGHT@rotation_calibration stored from wreg
   549   000E02  6E3E               	movwf	turnRIGHT@rotation_calibration^0,c
   550   000E04                     
   551                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 204:     mL->direction = 1;
   552   000E04  5039               	movf	turnRIGHT@mL^0,w,c
   553   000E06  6ED9               	movwf	fsr2l,c
   554   000E08  6ADA               	clrf	fsr2h,c
   555   000E0A  0E01               	movlw	1
   556   000E0C  26D9               	addwf	fsr2l,f,c
   557   000E0E  0E01               	movlw	1
   558   000E10  6EDF               	movwf	indf2,c
   559                           
   560                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 205:     mR->direction = 0;
   561   000E12  503A               	movf	turnRIGHT@mR^0,w,c
   562   000E14  6ED9               	movwf	fsr2l,c
   563   000E16  6ADA               	clrf	fsr2h,c
   564   000E18  0E01               	movlw	1
   565   000E1A  26D9               	addwf	fsr2l,f,c
   566   000E1C  6ADF               	clrf	indf2,c
   567   000E1E                     
   568                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 207:    int max_power = 20;
   569   000E1E  0E00               	movlw	0
   570   000E20  6E44               	movwf	(turnRIGHT@max_power+1)^0,c
   571   000E22  0E14               	movlw	20
   572   000E24  6E43               	movwf	turnRIGHT@max_power^0,c
   573   000E26                     
   574                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 209:     int delay_time = acceler
      +                          ation_time/max_power;
   575   000E26  0E00               	movlw	0
   576   000E28  6E28               	movwf	(___awdiv@dividend+1)^0,c
   577   000E2A  0E64               	movlw	100
   578   000E2C  6E27               	movwf	___awdiv@dividend^0,c
   579   000E2E  0E00               	movlw	0
   580   000E30  6E2A               	movwf	(___awdiv@divisor+1)^0,c
   581   000E32  0E14               	movlw	20
   582   000E34  6E29               	movwf	___awdiv@divisor^0,c
   583   000E36  ECD0  F009         	call	___awdiv	;wreg free
   584   000E3A  C027  F045         	movff	?___awdiv,turnRIGHT@delay_time
   585   000E3E  C028  F046         	movff	?___awdiv+1,turnRIGHT@delay_time+1
   586   000E42                     
   587                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 212:     for(int i=0; i< max_powe
      +                          r; i++){
   588   000E42  0E00               	movlw	0
   589   000E44  6E40               	movwf	(turnRIGHT@i+1)^0,c
   590   000E46  0E00               	movlw	0
   591   000E48  6E3F               	movwf	turnRIGHT@i^0,c
   592   000E4A  EF4B  F007         	goto	l1480
   593   000E4E                     l1470:
   594                           
   595                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 213:         mL->power = mL->powe
      +                          r + 1;
   596   000E4E  5039               	movf	turnRIGHT@mL^0,w,c
   597   000E50  6ED9               	movwf	fsr2l,c
   598   000E52  6ADA               	clrf	fsr2h,c
   599   000E54  5039               	movf	turnRIGHT@mL^0,w,c
   600   000E56  6EE1               	movwf	fsr1l,c
   601   000E58  6AE2               	clrf	fsr1h,c
   602   000E5A  50E7               	movf	indf1,w,c
   603   000E5C  6E3B               	movwf	??_turnRIGHT^0,c
   604   000E5E  283B               	incf	??_turnRIGHT^0,w,c
   605   000E60  6EDF               	movwf	indf2,c
   606                           
   607                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 214:         mR->power = mR->powe
      +                          r + 1 ;
   608   000E62  503A               	movf	turnRIGHT@mR^0,w,c
   609   000E64  6ED9               	movwf	fsr2l,c
   610   000E66  6ADA               	clrf	fsr2h,c
   611   000E68  503A               	movf	turnRIGHT@mR^0,w,c
   612   000E6A  6EE1               	movwf	fsr1l,c
   613   000E6C  6AE2               	clrf	fsr1h,c
   614   000E6E  50E7               	movf	indf1,w,c
   615   000E70  6E3B               	movwf	??_turnRIGHT^0,c
   616   000E72  283B               	incf	??_turnRIGHT^0,w,c
   617   000E74  6EDF               	movwf	indf2,c
   618   000E76                     
   619                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 215:         setMotorPWM(mR);
   620   000E76  C03A  F034         	movff	turnRIGHT@mR,setMotorPWM@m
   621   000E7A  EC7F  F008         	call	_setMotorPWM	;wreg free
   622   000E7E                     
   623                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 216:         setMotorPWM(mL);
   624   000E7E  C039  F034         	movff	turnRIGHT@mL,setMotorPWM@m
   625   000E82  EC7F  F008         	call	_setMotorPWM	;wreg free
   626   000E86                     
   627                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 217:         delay_ms_function(de
      +                          lay_time);
   628   000E86  C045  F027         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
   629   000E8A  C046  F028         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
   630   000E8E  EC0F  F00B         	call	_delay_ms_function	;wreg free
   631   000E92                     
   632                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 218:     }
   633   000E92  4A3F               	infsnz	turnRIGHT@i^0,f,c
   634   000E94  2A40               	incf	(turnRIGHT@i+1)^0,f,c
   635   000E96                     l1480:
   636   000E96  5043               	movf	turnRIGHT@max_power^0,w,c
   637   000E98  5C3F               	subwf	turnRIGHT@i^0,w,c
   638   000E9A  5040               	movf	(turnRIGHT@i+1)^0,w,c
   639   000E9C  0A80               	xorlw	128
   640   000E9E  6E3B               	movwf	??_turnRIGHT^0,c
   641   000EA0  5044               	movf	(turnRIGHT@max_power+1)^0,w,c
   642   000EA2  0A80               	xorlw	128
   643   000EA4  583B               	subwfb	??_turnRIGHT^0,w,c
   644   000EA6  A0D8               	btfss	status,0,c
   645   000EA8  EF58  F007         	goto	u591
   646   000EAC  EF5A  F007         	goto	u590
   647   000EB0                     u591:
   648   000EB0  EF27  F007         	goto	l1470
   649   000EB4                     u590:
   650   000EB4                     
   651                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 221:     for(int j=0; j<rotation_
      +                          calibration; j++){
   652   000EB4  0E00               	movlw	0
   653   000EB6  6E42               	movwf	(turnRIGHT@j+1)^0,c
   654   000EB8  0E00               	movlw	0
   655   000EBA  6E41               	movwf	turnRIGHT@j^0,c
   656   000EBC  EF69  F007         	goto	l220
   657   000EC0                     l1484:
   658                           
   659                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 222:         _delay((unsigned lon
      +                          g)((10)*(64000000/4000.0)));
   660   000EC0  0ED0               	movlw	208
   661   000EC2  6E3B               	movwf	??_turnRIGHT^0,c
   662   000EC4  0ECA               	movlw	202
   663   000EC6                     u817:
   664   000EC6  2EE8               	decfsz	wreg,f,c
   665   000EC8  D7FE               	bra	u817
   666   000ECA  2E3B               	decfsz	??_turnRIGHT^0,f,c
   667   000ECC  D7FC               	bra	u817
   668   000ECE                     
   669                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 223:     }
   670   000ECE  4A41               	infsnz	turnRIGHT@j^0,f,c
   671   000ED0  2A42               	incf	(turnRIGHT@j+1)^0,f,c
   672   000ED2                     l220:
   673   000ED2  503E               	movf	turnRIGHT@rotation_calibration^0,w,c
   674   000ED4  6E3B               	movwf	??_turnRIGHT^0,c
   675   000ED6  6A3C               	clrf	(??_turnRIGHT+1)^0,c
   676   000ED8  503B               	movf	??_turnRIGHT^0,w,c
   677   000EDA  5C41               	subwf	turnRIGHT@j^0,w,c
   678   000EDC  5042               	movf	(turnRIGHT@j+1)^0,w,c
   679   000EDE  0A80               	xorlw	128
   680   000EE0  6E3D               	movwf	(??_turnRIGHT+2)^0,c
   681   000EE2  503C               	movf	(??_turnRIGHT+1)^0,w,c
   682   000EE4  0A80               	xorlw	128
   683   000EE6  583D               	subwfb	(??_turnRIGHT+2)^0,w,c
   684   000EE8  A0D8               	btfss	status,0,c
   685   000EEA  EF79  F007         	goto	u601
   686   000EEE  EF7B  F007         	goto	u600
   687   000EF2                     u601:
   688   000EF2  EF60  F007         	goto	l1484
   689   000EF6                     u600:
   690   000EF6  EFA9  F007         	goto	l1502
   691   000EFA                     l1488:
   692                           
   693                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 227:         if(mR->power> 0 ){
   694   000EFA  503A               	movf	turnRIGHT@mR^0,w,c
   695   000EFC  6ED9               	movwf	fsr2l,c
   696   000EFE  6ADA               	clrf	fsr2h,c
   697   000F00  50DF               	movf	indf2,w,c
   698   000F02  B4D8               	btfsc	status,2,c
   699   000F04  EF86  F007         	goto	u611
   700   000F08  EF88  F007         	goto	u610
   701   000F0C                     u611:
   702   000F0C  EF8C  F007         	goto	l1492
   703   000F10                     u610:
   704   000F10                     
   705                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 228:             mR->power--;
   706   000F10  503A               	movf	turnRIGHT@mR^0,w,c
   707   000F12  6ED9               	movwf	fsr2l,c
   708   000F14  6ADA               	clrf	fsr2h,c
   709   000F16  06DF               	decf	indf2,f,c
   710   000F18                     l1492:
   711                           
   712                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 230:         if(mL->power> 0 ){
   713   000F18  5039               	movf	turnRIGHT@mL^0,w,c
   714   000F1A  6ED9               	movwf	fsr2l,c
   715   000F1C  6ADA               	clrf	fsr2h,c
   716   000F1E  50DF               	movf	indf2,w,c
   717   000F20  B4D8               	btfsc	status,2,c
   718   000F22  EF95  F007         	goto	u621
   719   000F26  EF97  F007         	goto	u620
   720   000F2A                     u621:
   721   000F2A  EF9B  F007         	goto	l1496
   722   000F2E                     u620:
   723   000F2E                     
   724                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 231:             mL->power--;
   725   000F2E  5039               	movf	turnRIGHT@mL^0,w,c
   726   000F30  6ED9               	movwf	fsr2l,c
   727   000F32  6ADA               	clrf	fsr2h,c
   728   000F34  06DF               	decf	indf2,f,c
   729   000F36                     l1496:
   730                           
   731                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 233:         setMotorPWM(mR);
   732   000F36  C03A  F034         	movff	turnRIGHT@mR,setMotorPWM@m
   733   000F3A  EC7F  F008         	call	_setMotorPWM	;wreg free
   734   000F3E                     
   735                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 234:         setMotorPWM(mL);
   736   000F3E  C039  F034         	movff	turnRIGHT@mL,setMotorPWM@m
   737   000F42  EC7F  F008         	call	_setMotorPWM	;wreg free
   738   000F46                     
   739                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 235:         delay_ms_function(de
      +                          lay_time);
   740   000F46  C045  F027         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
   741   000F4A  C046  F028         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
   742   000F4E  EC0F  F00B         	call	_delay_ms_function	;wreg free
   743   000F52                     l1502:
   744                           
   745                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 226:     while(mL->power || mR->p
      +                          ower > 0){
   746   000F52  5039               	movf	turnRIGHT@mL^0,w,c
   747   000F54  6ED9               	movwf	fsr2l,c
   748   000F56  6ADA               	clrf	fsr2h,c
   749   000F58  50DF               	movf	indf2,w,c
   750   000F5A  A4D8               	btfss	status,2,c
   751   000F5C  EFB2  F007         	goto	u631
   752   000F60  EFB4  F007         	goto	u630
   753   000F64                     u631:
   754   000F64  EF7D  F007         	goto	l1488
   755   000F68                     u630:
   756   000F68  503A               	movf	turnRIGHT@mR^0,w,c
   757   000F6A  6ED9               	movwf	fsr2l,c
   758   000F6C  6ADA               	clrf	fsr2h,c
   759   000F6E  50DF               	movf	indf2,w,c
   760   000F70  A4D8               	btfss	status,2,c
   761   000F72  EFBD  F007         	goto	u641
   762   000F76  EFBF  F007         	goto	u640
   763   000F7A                     u641:
   764   000F7A  EF7D  F007         	goto	l1488
   765   000F7E                     u640:
   766   000F7E  0012               	return		;funcret
   767   000F80                     __end_of_turnRIGHT:
   768                           	callstack 0
   769                           
   770 ;; *************** function _turnLEFT *****************
   771 ;; Defined at:
   772 ;;		line 165 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  rotation_cal    1    wreg     unsigned char 
   775 ;;  mL              1   18[COMRAM] PTR struct DC_motor
   776 ;;		 -> motorL(9), 
   777 ;;  mR              1   19[COMRAM] PTR struct DC_motor
   778 ;;		 -> motorR(9), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  rotation_cal    1   23[COMRAM] unsigned char 
   781 ;;  j               2   26[COMRAM] int 
   782 ;;  i               2   24[COMRAM] int 
   783 ;;  delay_time      2   30[COMRAM] int 
   784 ;;  max_power       2   28[COMRAM] int 
   785 ;;  acceleration    2    0        int 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   796 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   797 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;Total ram usage:       14 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; Hardware stack levels required when called: 2
   802 ;; This function calls:
   803 ;;		___awdiv
   804 ;;		_delay_ms_function
   805 ;;		_setMotorPWM
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text2
   812   000F80                     __ptext2:
   813                           	callstack 0
   814   000F80                     _turnLEFT:
   815                           	callstack 28
   816                           
   817                           ;incstack = 0
   818                           ;turnLEFT@rotation_calibration stored from wreg
   819   000F80  6E3E               	movwf	turnLEFT@rotation_calibration^0,c
   820   000F82                     
   821                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 166:     mL->direction = 0;
   822   000F82  5039               	movf	turnLEFT@mL^0,w,c
   823   000F84  6ED9               	movwf	fsr2l,c
   824   000F86  6ADA               	clrf	fsr2h,c
   825   000F88  0E01               	movlw	1
   826   000F8A  26D9               	addwf	fsr2l,f,c
   827   000F8C  6ADF               	clrf	indf2,c
   828                           
   829                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 167:     mR->direction = 1;
   830   000F8E  503A               	movf	turnLEFT@mR^0,w,c
   831   000F90  6ED9               	movwf	fsr2l,c
   832   000F92  6ADA               	clrf	fsr2h,c
   833   000F94  0E01               	movlw	1
   834   000F96  26D9               	addwf	fsr2l,f,c
   835   000F98  0E01               	movlw	1
   836   000F9A  6EDF               	movwf	indf2,c
   837   000F9C                     
   838                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 169:     int max_power = 20;
   839   000F9C  0E00               	movlw	0
   840   000F9E  6E44               	movwf	(turnLEFT@max_power+1)^0,c
   841   000FA0  0E14               	movlw	20
   842   000FA2  6E43               	movwf	turnLEFT@max_power^0,c
   843   000FA4                     
   844                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 171:     int delay_time = acceler
      +                          ation_time/max_power;
   845   000FA4  0E00               	movlw	0
   846   000FA6  6E28               	movwf	(___awdiv@dividend+1)^0,c
   847   000FA8  0E64               	movlw	100
   848   000FAA  6E27               	movwf	___awdiv@dividend^0,c
   849   000FAC  0E00               	movlw	0
   850   000FAE  6E2A               	movwf	(___awdiv@divisor+1)^0,c
   851   000FB0  0E14               	movlw	20
   852   000FB2  6E29               	movwf	___awdiv@divisor^0,c
   853   000FB4  ECD0  F009         	call	___awdiv	;wreg free
   854   000FB8  C027  F045         	movff	?___awdiv,turnLEFT@delay_time
   855   000FBC  C028  F046         	movff	?___awdiv+1,turnLEFT@delay_time+1
   856   000FC0                     
   857                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 174:     for(int i=0; i< max_powe
      +                          r; i++){
   858   000FC0  0E00               	movlw	0
   859   000FC2  6E40               	movwf	(turnLEFT@i+1)^0,c
   860   000FC4  0E00               	movlw	0
   861   000FC6  6E3F               	movwf	turnLEFT@i^0,c
   862   000FC8  EF0A  F008         	goto	l1526
   863   000FCC                     l1516:
   864                           
   865                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 175:         mL->power = mL->powe
      +                          r + 1;
   866   000FCC  5039               	movf	turnLEFT@mL^0,w,c
   867   000FCE  6ED9               	movwf	fsr2l,c
   868   000FD0  6ADA               	clrf	fsr2h,c
   869   000FD2  5039               	movf	turnLEFT@mL^0,w,c
   870   000FD4  6EE1               	movwf	fsr1l,c
   871   000FD6  6AE2               	clrf	fsr1h,c
   872   000FD8  50E7               	movf	indf1,w,c
   873   000FDA  6E3B               	movwf	??_turnLEFT^0,c
   874   000FDC  283B               	incf	??_turnLEFT^0,w,c
   875   000FDE  6EDF               	movwf	indf2,c
   876                           
   877                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 176:         mR->power = mR->powe
      +                          r + 1 ;
   878   000FE0  503A               	movf	turnLEFT@mR^0,w,c
   879   000FE2  6ED9               	movwf	fsr2l,c
   880   000FE4  6ADA               	clrf	fsr2h,c
   881   000FE6  503A               	movf	turnLEFT@mR^0,w,c
   882   000FE8  6EE1               	movwf	fsr1l,c
   883   000FEA  6AE2               	clrf	fsr1h,c
   884   000FEC  50E7               	movf	indf1,w,c
   885   000FEE  6E3B               	movwf	??_turnLEFT^0,c
   886   000FF0  283B               	incf	??_turnLEFT^0,w,c
   887   000FF2  6EDF               	movwf	indf2,c
   888   000FF4                     
   889                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 177:         setMotorPWM(mR);
   890   000FF4  C03A  F034         	movff	turnLEFT@mR,setMotorPWM@m
   891   000FF8  EC7F  F008         	call	_setMotorPWM	;wreg free
   892   000FFC                     
   893                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 178:         setMotorPWM(mL);
   894   000FFC  C039  F034         	movff	turnLEFT@mL,setMotorPWM@m
   895   001000  EC7F  F008         	call	_setMotorPWM	;wreg free
   896   001004                     
   897                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 179:         delay_ms_function(de
      +                          lay_time);
   898   001004  C045  F027         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
   899   001008  C046  F028         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
   900   00100C  EC0F  F00B         	call	_delay_ms_function	;wreg free
   901   001010                     
   902                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 180:     }
   903   001010  4A3F               	infsnz	turnLEFT@i^0,f,c
   904   001012  2A40               	incf	(turnLEFT@i+1)^0,f,c
   905   001014                     l1526:
   906   001014  5043               	movf	turnLEFT@max_power^0,w,c
   907   001016  5C3F               	subwf	turnLEFT@i^0,w,c
   908   001018  5040               	movf	(turnLEFT@i+1)^0,w,c
   909   00101A  0A80               	xorlw	128
   910   00101C  6E3B               	movwf	??_turnLEFT^0,c
   911   00101E  5044               	movf	(turnLEFT@max_power+1)^0,w,c
   912   001020  0A80               	xorlw	128
   913   001022  583B               	subwfb	??_turnLEFT^0,w,c
   914   001024  A0D8               	btfss	status,0,c
   915   001026  EF17  F008         	goto	u651
   916   00102A  EF19  F008         	goto	u650
   917   00102E                     u651:
   918   00102E  EFE6  F007         	goto	l1516
   919   001032                     u650:
   920   001032                     
   921                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 183:     for(int j=0; j<rotation_
      +                          calibration; j++){
   922   001032  0E00               	movlw	0
   923   001034  6E42               	movwf	(turnLEFT@j+1)^0,c
   924   001036  0E00               	movlw	0
   925   001038  6E41               	movwf	turnLEFT@j^0,c
   926   00103A  EF28  F008         	goto	l206
   927   00103E                     l1530:
   928                           
   929                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 184:         _delay((unsigned lon
      +                          g)((10)*(64000000/4000.0)));
   930   00103E  0ED0               	movlw	208
   931   001040  6E3B               	movwf	??_turnLEFT^0,c
   932   001042  0ECA               	movlw	202
   933   001044                     u827:
   934   001044  2EE8               	decfsz	wreg,f,c
   935   001046  D7FE               	bra	u827
   936   001048  2E3B               	decfsz	??_turnLEFT^0,f,c
   937   00104A  D7FC               	bra	u827
   938   00104C                     
   939                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 185:     }
   940   00104C  4A41               	infsnz	turnLEFT@j^0,f,c
   941   00104E  2A42               	incf	(turnLEFT@j+1)^0,f,c
   942   001050                     l206:
   943   001050  503E               	movf	turnLEFT@rotation_calibration^0,w,c
   944   001052  6E3B               	movwf	??_turnLEFT^0,c
   945   001054  6A3C               	clrf	(??_turnLEFT+1)^0,c
   946   001056  503B               	movf	??_turnLEFT^0,w,c
   947   001058  5C41               	subwf	turnLEFT@j^0,w,c
   948   00105A  5042               	movf	(turnLEFT@j+1)^0,w,c
   949   00105C  0A80               	xorlw	128
   950   00105E  6E3D               	movwf	(??_turnLEFT+2)^0,c
   951   001060  503C               	movf	(??_turnLEFT+1)^0,w,c
   952   001062  0A80               	xorlw	128
   953   001064  583D               	subwfb	(??_turnLEFT+2)^0,w,c
   954   001066  A0D8               	btfss	status,0,c
   955   001068  EF38  F008         	goto	u661
   956   00106C  EF3A  F008         	goto	u660
   957   001070                     u661:
   958   001070  EF1F  F008         	goto	l1530
   959   001074                     u660:
   960   001074  EF68  F008         	goto	l1548
   961   001078                     l1534:
   962                           
   963                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 189:         if(mR->power> 0 ){
   964   001078  503A               	movf	turnLEFT@mR^0,w,c
   965   00107A  6ED9               	movwf	fsr2l,c
   966   00107C  6ADA               	clrf	fsr2h,c
   967   00107E  50DF               	movf	indf2,w,c
   968   001080  B4D8               	btfsc	status,2,c
   969   001082  EF45  F008         	goto	u671
   970   001086  EF47  F008         	goto	u670
   971   00108A                     u671:
   972   00108A  EF4B  F008         	goto	l1538
   973   00108E                     u670:
   974   00108E                     
   975                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 190:             mR->power--;
   976   00108E  503A               	movf	turnLEFT@mR^0,w,c
   977   001090  6ED9               	movwf	fsr2l,c
   978   001092  6ADA               	clrf	fsr2h,c
   979   001094  06DF               	decf	indf2,f,c
   980   001096                     l1538:
   981                           
   982                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 192:         if(mL->power> 0 ){
   983   001096  5039               	movf	turnLEFT@mL^0,w,c
   984   001098  6ED9               	movwf	fsr2l,c
   985   00109A  6ADA               	clrf	fsr2h,c
   986   00109C  50DF               	movf	indf2,w,c
   987   00109E  B4D8               	btfsc	status,2,c
   988   0010A0  EF54  F008         	goto	u681
   989   0010A4  EF56  F008         	goto	u680
   990   0010A8                     u681:
   991   0010A8  EF5A  F008         	goto	l1542
   992   0010AC                     u680:
   993   0010AC                     
   994                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 193:             mL->power--;
   995   0010AC  5039               	movf	turnLEFT@mL^0,w,c
   996   0010AE  6ED9               	movwf	fsr2l,c
   997   0010B0  6ADA               	clrf	fsr2h,c
   998   0010B2  06DF               	decf	indf2,f,c
   999   0010B4                     l1542:
  1000                           
  1001                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 195:         setMotorPWM(mR);
  1002   0010B4  C03A  F034         	movff	turnLEFT@mR,setMotorPWM@m
  1003   0010B8  EC7F  F008         	call	_setMotorPWM	;wreg free
  1004   0010BC                     
  1005                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 196:         setMotorPWM(mL);
  1006   0010BC  C039  F034         	movff	turnLEFT@mL,setMotorPWM@m
  1007   0010C0  EC7F  F008         	call	_setMotorPWM	;wreg free
  1008   0010C4                     
  1009                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 197:         delay_ms_function(de
      +                          lay_time);
  1010   0010C4  C045  F027         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  1011   0010C8  C046  F028         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  1012   0010CC  EC0F  F00B         	call	_delay_ms_function	;wreg free
  1013   0010D0                     l1548:
  1014                           
  1015                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 188:     while(mL->power || mR->p
      +                          ower > 0){
  1016   0010D0  5039               	movf	turnLEFT@mL^0,w,c
  1017   0010D2  6ED9               	movwf	fsr2l,c
  1018   0010D4  6ADA               	clrf	fsr2h,c
  1019   0010D6  50DF               	movf	indf2,w,c
  1020   0010D8  A4D8               	btfss	status,2,c
  1021   0010DA  EF71  F008         	goto	u691
  1022   0010DE  EF73  F008         	goto	u690
  1023   0010E2                     u691:
  1024   0010E2  EF3C  F008         	goto	l1534
  1025   0010E6                     u690:
  1026   0010E6  503A               	movf	turnLEFT@mR^0,w,c
  1027   0010E8  6ED9               	movwf	fsr2l,c
  1028   0010EA  6ADA               	clrf	fsr2h,c
  1029   0010EC  50DF               	movf	indf2,w,c
  1030   0010EE  A4D8               	btfss	status,2,c
  1031   0010F0  EF7C  F008         	goto	u701
  1032   0010F4  EF7E  F008         	goto	u700
  1033   0010F8                     u701:
  1034   0010F8  EF3C  F008         	goto	l1534
  1035   0010FC                     u700:
  1036   0010FC  0012               	return		;funcret
  1037   0010FE                     __end_of_turnLEFT:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _setMotorPWM *****************
  1041 ;; Defined at:
  1042 ;;		line 75 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  m               1   13[COMRAM] PTR struct DC_motor
  1045 ;;		 -> motorR(9), motorL(9), 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  negDuty         1   17[COMRAM] unsigned char 
  1048 ;;  posDuty         1   16[COMRAM] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1061 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1062 ;;Total ram usage:        5 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 1
  1065 ;; This function calls:
  1066 ;;		___lwdiv
  1067 ;;		___wmul
  1068 ;; This function is called by:
  1069 ;;		_turnLEFT
  1070 ;;		_turnRIGHT
  1071 ;;		_stop
  1072 ;;		_forward
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text3
  1077   0010FE                     __ptext3:
  1078                           	callstack 0
  1079   0010FE                     _setMotorPWM:
  1080                           	callstack 28
  1081   0010FE                     
  1082                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m)
      +                          ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 76: {;../lab-6-motors-and-pwm-tom
      +                          as-thomas.X/dc_motor_v1.c: 77:     unsigned char posDuty, negDuty;;../lab-6-motors-and-p
      +                          wm-tomas-thomas.X/dc_motor_v1.c: 79:     if(m->brakemode) {
  1083   0010FE  5034               	movf	setMotorPWM@m^0,w,c
  1084   001100  6ED9               	movwf	fsr2l,c
  1085   001102  6ADA               	clrf	fsr2h,c
  1086   001104  0E02               	movlw	2
  1087   001106  26D9               	addwf	fsr2l,f,c
  1088   001108  50DF               	movf	indf2,w,c
  1089   00110A  B4D8               	btfsc	status,2,c
  1090   00110C  EF8A  F008         	goto	u451
  1091   001110  EF8C  F008         	goto	u450
  1092   001114                     u451:
  1093   001114  EFBC  F008         	goto	l1338
  1094   001118                     u450:
  1095   001118                     
  1096                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 80:         posDuty=m->PWMperiod 
      +                          - ((unsigned int)(m->power)*(m->PWMperiod))/100;
  1097   001118  5034               	movf	setMotorPWM@m^0,w,c
  1098   00111A  6ED9               	movwf	fsr2l,c
  1099   00111C  6ADA               	clrf	fsr2h,c
  1100   00111E  50DF               	movf	indf2,w,c
  1101   001120  6E35               	movwf	??_setMotorPWM^0,c
  1102   001122  5035               	movf	??_setMotorPWM^0,w,c
  1103   001124  6E27               	movwf	___wmul@multiplier^0,c
  1104   001126  6A28               	clrf	(___wmul@multiplier+1)^0,c
  1105   001128  5034               	movf	setMotorPWM@m^0,w,c
  1106   00112A  6ED9               	movwf	fsr2l,c
  1107   00112C  6ADA               	clrf	fsr2h,c
  1108   00112E  0E03               	movlw	3
  1109   001130  26D9               	addwf	fsr2l,f,c
  1110   001132  CFDE F029          	movff	postinc2,___wmul@multiplicand
  1111   001136  CFDD F02A          	movff	postdec2,___wmul@multiplicand+1
  1112   00113A  EC26  F00B         	call	___wmul	;wreg free
  1113   00113E  C027  F02D         	movff	?___wmul,___lwdiv@dividend
  1114   001142  C028  F02E         	movff	?___wmul+1,___lwdiv@dividend+1
  1115   001146  0E00               	movlw	0
  1116   001148  6E30               	movwf	(___lwdiv@divisor+1)^0,c
  1117   00114A  0E64               	movlw	100
  1118   00114C  6E2F               	movwf	___lwdiv@divisor^0,c
  1119   00114E  ECD5  F00A         	call	___lwdiv	;wreg free
  1120   001152  5034               	movf	setMotorPWM@m^0,w,c
  1121   001154  6ED9               	movwf	fsr2l,c
  1122   001156  6ADA               	clrf	fsr2h,c
  1123   001158  0E03               	movlw	3
  1124   00115A  26D9               	addwf	fsr2l,f,c
  1125   00115C  50DF               	movf	indf2,w,c
  1126   00115E  6E36               	movwf	(??_setMotorPWM+1)^0,c
  1127   001160  502D               	movf	?___lwdiv^0,w,c
  1128   001162  5C36               	subwf	(??_setMotorPWM+1)^0,w,c
  1129   001164  6E37               	movwf	setMotorPWM@posDuty^0,c
  1130   001166                     
  1131                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  1132   001166  5034               	movf	setMotorPWM@m^0,w,c
  1133   001168  6ED9               	movwf	fsr2l,c
  1134   00116A  6ADA               	clrf	fsr2h,c
  1135   00116C  0E03               	movlw	3
  1136   00116E  26D9               	addwf	fsr2l,f,c
  1137   001170  50DF               	movf	indf2,w,c
  1138   001172  6E38               	movwf	setMotorPWM@negDuty^0,c
  1139                           
  1140                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 82:     }
  1141   001174  EFDD  F008         	goto	l1342
  1142   001178                     l1338:
  1143                           
  1144                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 84:         posDuty=0;
  1145   001178  0E00               	movlw	0
  1146   00117A  6E37               	movwf	setMotorPWM@posDuty^0,c
  1147   00117C                     
  1148                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->
      +                          power)*(m->PWMperiod))/100;
  1149   00117C  5034               	movf	setMotorPWM@m^0,w,c
  1150   00117E  6ED9               	movwf	fsr2l,c
  1151   001180  6ADA               	clrf	fsr2h,c
  1152   001182  50DF               	movf	indf2,w,c
  1153   001184  6E35               	movwf	??_setMotorPWM^0,c
  1154   001186  5035               	movf	??_setMotorPWM^0,w,c
  1155   001188  6E27               	movwf	___wmul@multiplier^0,c
  1156   00118A  6A28               	clrf	(___wmul@multiplier+1)^0,c
  1157   00118C  5034               	movf	setMotorPWM@m^0,w,c
  1158   00118E  6ED9               	movwf	fsr2l,c
  1159   001190  6ADA               	clrf	fsr2h,c
  1160   001192  0E03               	movlw	3
  1161   001194  26D9               	addwf	fsr2l,f,c
  1162   001196  CFDE F029          	movff	postinc2,___wmul@multiplicand
  1163   00119A  CFDD F02A          	movff	postdec2,___wmul@multiplicand+1
  1164   00119E  EC26  F00B         	call	___wmul	;wreg free
  1165   0011A2  C027  F02D         	movff	?___wmul,___lwdiv@dividend
  1166   0011A6  C028  F02E         	movff	?___wmul+1,___lwdiv@dividend+1
  1167   0011AA  0E00               	movlw	0
  1168   0011AC  6E30               	movwf	(___lwdiv@divisor+1)^0,c
  1169   0011AE  0E64               	movlw	100
  1170   0011B0  6E2F               	movwf	___lwdiv@divisor^0,c
  1171   0011B2  ECD5  F00A         	call	___lwdiv	;wreg free
  1172   0011B6  502D               	movf	?___lwdiv^0,w,c
  1173   0011B8  6E38               	movwf	setMotorPWM@negDuty^0,c
  1174   0011BA                     l1342:
  1175                           
  1176                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 88:     if (m->direction) {
  1177   0011BA  5034               	movf	setMotorPWM@m^0,w,c
  1178   0011BC  6ED9               	movwf	fsr2l,c
  1179   0011BE  6ADA               	clrf	fsr2h,c
  1180   0011C0  0E01               	movlw	1
  1181   0011C2  26D9               	addwf	fsr2l,f,c
  1182   0011C4  50DF               	movf	indf2,w,c
  1183   0011C6  B4D8               	btfsc	status,2,c
  1184   0011C8  EFE8  F008         	goto	u461
  1185   0011CC  EFEA  F008         	goto	u460
  1186   0011D0                     u461:
  1187   0011D0  EF0A  F009         	goto	l1346
  1188   0011D4                     u460:
  1189   0011D4                     
  1190                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 89:         *(m->posDutyHighByte)
      +                          =posDuty;
  1191   0011D4  5034               	movf	setMotorPWM@m^0,w,c
  1192   0011D6  6ED9               	movwf	fsr2l,c
  1193   0011D8  6ADA               	clrf	fsr2h,c
  1194   0011DA  0E05               	movlw	5
  1195   0011DC  26D9               	addwf	fsr2l,f,c
  1196   0011DE  CFDE F035          	movff	postinc2,??_setMotorPWM
  1197   0011E2  CFDD F036          	movff	postdec2,??_setMotorPWM+1
  1198   0011E6  C035  FFD9         	movff	??_setMotorPWM,fsr2l
  1199   0011EA  C036  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1200   0011EE  C037  FFDF         	movff	setMotorPWM@posDuty,indf2
  1201                           
  1202                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 90:         *(m->negDutyHighByte)
      +                          =negDuty;
  1203   0011F2  5034               	movf	setMotorPWM@m^0,w,c
  1204   0011F4  6ED9               	movwf	fsr2l,c
  1205   0011F6  6ADA               	clrf	fsr2h,c
  1206   0011F8  0E07               	movlw	7
  1207   0011FA  26D9               	addwf	fsr2l,f,c
  1208   0011FC  CFDE F035          	movff	postinc2,??_setMotorPWM
  1209   001200  CFDD F036          	movff	postdec2,??_setMotorPWM+1
  1210   001204  C035  FFD9         	movff	??_setMotorPWM,fsr2l
  1211   001208  C036  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1212   00120C  C038  FFDF         	movff	setMotorPWM@negDuty,indf2
  1213                           
  1214                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 91:     } else {
  1215   001210  EF28  F009         	goto	l178
  1216   001214                     l1346:
  1217                           
  1218                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 92:         *(m->posDutyHighByte)
      +                          =negDuty;
  1219   001214  5034               	movf	setMotorPWM@m^0,w,c
  1220   001216  6ED9               	movwf	fsr2l,c
  1221   001218  6ADA               	clrf	fsr2h,c
  1222   00121A  0E05               	movlw	5
  1223   00121C  26D9               	addwf	fsr2l,f,c
  1224   00121E  CFDE F035          	movff	postinc2,??_setMotorPWM
  1225   001222  CFDD F036          	movff	postdec2,??_setMotorPWM+1
  1226   001226  C035  FFD9         	movff	??_setMotorPWM,fsr2l
  1227   00122A  C036  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1228   00122E  C038  FFDF         	movff	setMotorPWM@negDuty,indf2
  1229                           
  1230                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 93:         *(m->negDutyHighByte)
      +                          =posDuty;
  1231   001232  5034               	movf	setMotorPWM@m^0,w,c
  1232   001234  6ED9               	movwf	fsr2l,c
  1233   001236  6ADA               	clrf	fsr2h,c
  1234   001238  0E07               	movlw	7
  1235   00123A  26D9               	addwf	fsr2l,f,c
  1236   00123C  CFDE F035          	movff	postinc2,??_setMotorPWM
  1237   001240  CFDD F036          	movff	postdec2,??_setMotorPWM+1
  1238   001244  C035  FFD9         	movff	??_setMotorPWM,fsr2l
  1239   001248  C036  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1240   00124C  C037  FFDF         	movff	setMotorPWM@posDuty,indf2
  1241   001250                     l178:
  1242   001250  0012               	return		;funcret
  1243   001252                     __end_of_setMotorPWM:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function ___wmul *****************
  1247 ;; Defined at:
  1248 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  multiplier      2    0[COMRAM] unsigned int 
  1251 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  product         2    4[COMRAM] unsigned int 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2    0[COMRAM] unsigned int 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, prodl, prodh
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;Total ram usage:        6 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_setMotorPWM
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text4
  1277   00164C                     __ptext4:
  1278                           	callstack 0
  1279   00164C                     ___wmul:
  1280                           	callstack 28
  1281   00164C  5027               	movf	___wmul@multiplier^0,w,c
  1282   00164E  0229               	mulwf	___wmul@multiplicand^0,c
  1283   001650  CFF3 F02B          	movff	prodl,___wmul@product
  1284   001654  CFF4 F02C          	movff	prodh,___wmul@product+1
  1285   001658  5027               	movf	___wmul@multiplier^0,w,c
  1286   00165A  022A               	mulwf	(___wmul@multiplicand+1)^0,c
  1287   00165C  50F3               	movf	243,w,c
  1288   00165E  262C               	addwf	(___wmul@product+1)^0,f,c
  1289   001660  5028               	movf	(___wmul@multiplier+1)^0,w,c
  1290   001662  0229               	mulwf	___wmul@multiplicand^0,c
  1291   001664  50F3               	movf	243,w,c
  1292   001666  262C               	addwf	(___wmul@product+1)^0,f,c
  1293   001668  C02B  F027         	movff	___wmul@product,?___wmul
  1294   00166C  C02C  F028         	movff	___wmul@product+1,?___wmul+1
  1295   001670  0012               	return		;funcret
  1296   001672                     __end_of___wmul:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function ___lwdiv *****************
  1300 ;; Defined at:
  1301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  dividend        2    6[COMRAM] unsigned int 
  1304 ;;  divisor         2    8[COMRAM] unsigned int 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  quotient        2   10[COMRAM] unsigned int 
  1307 ;;  counter         1   12[COMRAM] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2    6[COMRAM] unsigned int 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;Total ram usage:        7 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_setMotorPWM
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text5
  1331   0015AA                     __ptext5:
  1332                           	callstack 0
  1333   0015AA                     ___lwdiv:
  1334                           	callstack 28
  1335   0015AA  0E00               	movlw	0
  1336   0015AC  6E32               	movwf	(___lwdiv@quotient+1)^0,c
  1337   0015AE  0E00               	movlw	0
  1338   0015B0  6E31               	movwf	___lwdiv@quotient^0,c
  1339   0015B2  502F               	movf	___lwdiv@divisor^0,w,c
  1340   0015B4  1030               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1341   0015B6  B4D8               	btfsc	status,2,c
  1342   0015B8  EFE0  F00A         	goto	u411
  1343   0015BC  EFE2  F00A         	goto	u410
  1344   0015C0                     u411:
  1345   0015C0  EF0A  F00B         	goto	l722
  1346   0015C4                     u410:
  1347   0015C4  0E01               	movlw	1
  1348   0015C6  6E33               	movwf	___lwdiv@counter^0,c
  1349   0015C8  EFEA  F00A         	goto	l1312
  1350   0015CC                     l1310:
  1351   0015CC  90D8               	bcf	status,0,c
  1352   0015CE  362F               	rlcf	___lwdiv@divisor^0,f,c
  1353   0015D0  3630               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1354   0015D2  2A33               	incf	___lwdiv@counter^0,f,c
  1355   0015D4                     l1312:
  1356   0015D4  AE30               	btfss	(___lwdiv@divisor+1)^0,7,c
  1357   0015D6  EFEF  F00A         	goto	u421
  1358   0015DA  EFF1  F00A         	goto	u420
  1359   0015DE                     u421:
  1360   0015DE  EFE6  F00A         	goto	l1310
  1361   0015E2                     u420:
  1362   0015E2                     l1314:
  1363   0015E2  90D8               	bcf	status,0,c
  1364   0015E4  3631               	rlcf	___lwdiv@quotient^0,f,c
  1365   0015E6  3632               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1366   0015E8  502F               	movf	___lwdiv@divisor^0,w,c
  1367   0015EA  5C2D               	subwf	___lwdiv@dividend^0,w,c
  1368   0015EC  5030               	movf	(___lwdiv@divisor+1)^0,w,c
  1369   0015EE  582E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1370   0015F0  A0D8               	btfss	status,0,c
  1371   0015F2  EFFD  F00A         	goto	u431
  1372   0015F6  EFFF  F00A         	goto	u430
  1373   0015FA                     u431:
  1374   0015FA  EF04  F00B         	goto	l1322
  1375   0015FE                     u430:
  1376   0015FE  502F               	movf	___lwdiv@divisor^0,w,c
  1377   001600  5E2D               	subwf	___lwdiv@dividend^0,f,c
  1378   001602  5030               	movf	(___lwdiv@divisor+1)^0,w,c
  1379   001604  5A2E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1380   001606  8031               	bsf	___lwdiv@quotient^0,0,c
  1381   001608                     l1322:
  1382   001608  90D8               	bcf	status,0,c
  1383   00160A  3230               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1384   00160C  322F               	rrcf	___lwdiv@divisor^0,f,c
  1385   00160E  2E33               	decfsz	___lwdiv@counter^0,f,c
  1386   001610  EFF1  F00A         	goto	l1314
  1387   001614                     l722:
  1388   001614  C031  F02D         	movff	___lwdiv@quotient,?___lwdiv
  1389   001618  C032  F02E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1390   00161C  0012               	return		;funcret
  1391   00161E                     __end_of___lwdiv:
  1392                           	callstack 0
  1393                           
  1394 ;; *************** function _delay_ms_function *****************
  1395 ;; Defined at:
  1396 ;;		line 67 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  milliseconds    2    0[COMRAM] unsigned int 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1414 ;;Total ram usage:        3 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_turnLEFT
  1420 ;;		_turnRIGHT
  1421 ;;		_forward
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text6
  1426   00161E                     __ptext6:
  1427                           	callstack 0
  1428   00161E                     _delay_ms_function:
  1429                           	callstack 29
  1430   00161E                     
  1431                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 68:     while (milliseconds > 0) 
      +                          {
  1432   00161E  EF1C  F00B         	goto	l168
  1433   001622                     l1328:
  1434                           
  1435                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 69:         _delay((unsigned long
      +                          )((1)*(64000000/4000.0)));
  1436   001622  0E15               	movlw	21
  1437   001624  6E29               	movwf	??_delay_ms_function^0,c
  1438   001626  0EC6               	movlw	198
  1439   001628                     u837:
  1440   001628  2EE8               	decfsz	wreg,f,c
  1441   00162A  D7FE               	bra	u837
  1442   00162C  2E29               	decfsz	??_delay_ms_function^0,f,c
  1443   00162E  D7FC               	bra	u837
  1444   001630  D000               	nop2	
  1445   001632                     
  1446                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 70:         milliseconds--;
  1447   001632  0627               	decf	delay_ms_function@milliseconds^0,f,c
  1448   001634  A0D8               	btfss	status,0,c
  1449   001636  0628               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  1450   001638                     l168:
  1451                           
  1452                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 68:     while (milliseconds > 0) 
      +                          {
  1453   001638  5027               	movf	delay_ms_function@milliseconds^0,w,c
  1454   00163A  1028               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  1455   00163C  A4D8               	btfss	status,2,c
  1456   00163E  EF23  F00B         	goto	u441
  1457   001642  EF25  F00B         	goto	u440
  1458   001646                     u441:
  1459   001646  EF11  F00B         	goto	l1328
  1460   00164A                     u440:
  1461   00164A  0012               	return		;funcret
  1462   00164C                     __end_of_delay_ms_function:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function ___awdiv *****************
  1466 ;; Defined at:
  1467 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  dividend        2    0[COMRAM] int 
  1470 ;;  divisor         2    2[COMRAM] int 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  quotient        2    6[COMRAM] int 
  1473 ;;  sign            1    5[COMRAM] unsigned char 
  1474 ;;  counter         1    4[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    0[COMRAM] int 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;Total ram usage:        8 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_turnLEFT
  1494 ;;		_turnRIGHT
  1495 ;;		_forward
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text7
  1500   0013A0                     __ptext7:
  1501                           	callstack 0
  1502   0013A0                     ___awdiv:
  1503                           	callstack 29
  1504   0013A0  0E00               	movlw	0
  1505   0013A2  6E2C               	movwf	___awdiv@sign^0,c
  1506   0013A4  BE2A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1507   0013A6  EFD9  F009         	goto	u470
  1508   0013AA  EFD7  F009         	goto	u471
  1509   0013AE                     u471:
  1510   0013AE  EFDF  F009         	goto	l1356
  1511   0013B2                     u470:
  1512   0013B2  6C29               	negf	___awdiv@divisor^0,c
  1513   0013B4  1E2A               	comf	(___awdiv@divisor+1)^0,f,c
  1514   0013B6  B0D8               	btfsc	status,0,c
  1515   0013B8  2A2A               	incf	(___awdiv@divisor+1)^0,f,c
  1516   0013BA  0E01               	movlw	1
  1517   0013BC  6E2C               	movwf	___awdiv@sign^0,c
  1518   0013BE                     l1356:
  1519   0013BE  BE28               	btfsc	(___awdiv@dividend+1)^0,7,c
  1520   0013C0  EFE6  F009         	goto	u480
  1521   0013C4  EFE4  F009         	goto	u481
  1522   0013C8                     u481:
  1523   0013C8  EFEC  F009         	goto	l1362
  1524   0013CC                     u480:
  1525   0013CC  6C27               	negf	___awdiv@dividend^0,c
  1526   0013CE  1E28               	comf	(___awdiv@dividend+1)^0,f,c
  1527   0013D0  B0D8               	btfsc	status,0,c
  1528   0013D2  2A28               	incf	(___awdiv@dividend+1)^0,f,c
  1529   0013D4  0E01               	movlw	1
  1530   0013D6  1A2C               	xorwf	___awdiv@sign^0,f,c
  1531   0013D8                     l1362:
  1532   0013D8  0E00               	movlw	0
  1533   0013DA  6E2E               	movwf	(___awdiv@quotient+1)^0,c
  1534   0013DC  0E00               	movlw	0
  1535   0013DE  6E2D               	movwf	___awdiv@quotient^0,c
  1536   0013E0  5029               	movf	___awdiv@divisor^0,w,c
  1537   0013E2  102A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1538   0013E4  B4D8               	btfsc	status,2,c
  1539   0013E6  EFF7  F009         	goto	u491
  1540   0013EA  EFF9  F009         	goto	u490
  1541   0013EE                     u491:
  1542   0013EE  EF21  F00A         	goto	l1384
  1543   0013F2                     u490:
  1544   0013F2  0E01               	movlw	1
  1545   0013F4  6E2B               	movwf	___awdiv@counter^0,c
  1546   0013F6  EF01  F00A         	goto	l1370
  1547   0013FA                     l1368:
  1548   0013FA  90D8               	bcf	status,0,c
  1549   0013FC  3629               	rlcf	___awdiv@divisor^0,f,c
  1550   0013FE  362A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1551   001400  2A2B               	incf	___awdiv@counter^0,f,c
  1552   001402                     l1370:
  1553   001402  AE2A               	btfss	(___awdiv@divisor+1)^0,7,c
  1554   001404  EF06  F00A         	goto	u501
  1555   001408  EF08  F00A         	goto	u500
  1556   00140C                     u501:
  1557   00140C  EFFD  F009         	goto	l1368
  1558   001410                     u500:
  1559   001410                     l1372:
  1560   001410  90D8               	bcf	status,0,c
  1561   001412  362D               	rlcf	___awdiv@quotient^0,f,c
  1562   001414  362E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1563   001416  5029               	movf	___awdiv@divisor^0,w,c
  1564   001418  5C27               	subwf	___awdiv@dividend^0,w,c
  1565   00141A  502A               	movf	(___awdiv@divisor+1)^0,w,c
  1566   00141C  5828               	subwfb	(___awdiv@dividend+1)^0,w,c
  1567   00141E  A0D8               	btfss	status,0,c
  1568   001420  EF14  F00A         	goto	u511
  1569   001424  EF16  F00A         	goto	u510
  1570   001428                     u511:
  1571   001428  EF1B  F00A         	goto	l1380
  1572   00142C                     u510:
  1573   00142C  5029               	movf	___awdiv@divisor^0,w,c
  1574   00142E  5E27               	subwf	___awdiv@dividend^0,f,c
  1575   001430  502A               	movf	(___awdiv@divisor+1)^0,w,c
  1576   001432  5A28               	subwfb	(___awdiv@dividend+1)^0,f,c
  1577   001434  802D               	bsf	___awdiv@quotient^0,0,c
  1578   001436                     l1380:
  1579   001436  90D8               	bcf	status,0,c
  1580   001438  322A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1581   00143A  3229               	rrcf	___awdiv@divisor^0,f,c
  1582   00143C  2E2B               	decfsz	___awdiv@counter^0,f,c
  1583   00143E  EF08  F00A         	goto	l1372
  1584   001442                     l1384:
  1585   001442  502C               	movf	___awdiv@sign^0,w,c
  1586   001444  B4D8               	btfsc	status,2,c
  1587   001446  EF27  F00A         	goto	u521
  1588   00144A  EF29  F00A         	goto	u520
  1589   00144E                     u521:
  1590   00144E  EF2D  F00A         	goto	l1388
  1591   001452                     u520:
  1592   001452  6C2D               	negf	___awdiv@quotient^0,c
  1593   001454  1E2E               	comf	(___awdiv@quotient+1)^0,f,c
  1594   001456  B0D8               	btfsc	status,0,c
  1595   001458  2A2E               	incf	(___awdiv@quotient+1)^0,f,c
  1596   00145A                     l1388:
  1597   00145A  C02D  F027         	movff	___awdiv@quotient,?___awdiv
  1598   00145E  C02E  F028         	movff	___awdiv@quotient+1,?___awdiv+1
  1599   001462  0012               	return		;funcret
  1600   001464                     __end_of___awdiv:
  1601                           	callstack 0
  1602                           
  1603 ;; *************** function _initDCmotorsPWM *****************
  1604 ;; Defined at:
  1605 ;;		line 5 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;Total ram usage:        2 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text8
  1633   001516                     __ptext8:
  1634                           	callstack 0
  1635   001516                     _initDCmotorsPWM:
  1636                           	callstack 30
  1637   001516                     
  1638                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  1639   001516  9485               	bcf	133,2,c	;volatile
  1640                           
  1641                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  1642   001518  9885               	bcf	133,4,c	;volatile
  1643                           
  1644                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  1645   00151A  9E83               	bcf	131,7,c	;volatile
  1646                           
  1647                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  1648   00151C  9C87               	bcf	135,6,c	;volatile
  1649                           
  1650                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  1651   00151E  947D               	bcf	125,2,c	;volatile
  1652                           
  1653                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  1654   001520  987D               	bcf	125,4,c	;volatile
  1655                           
  1656                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  1657   001522  9E7B               	bcf	123,7,c	;volatile
  1658                           
  1659                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  1660   001524  9C7F               	bcf	127,6,c	;volatile
  1661   001526                     
  1662                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 18:     RE2PPS=0x05;
  1663   001526  0E05               	movlw	5
  1664   001528  010E               	movlb	14	; () banked
  1665   00152A  6F74               	movwf	116,b	;volatile
  1666                           
  1667                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 19:     RE4PPS=0x06;
  1668   00152C  0E06               	movlw	6
  1669   00152E  6F76               	movwf	118,b	;volatile
  1670                           
  1671                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 20:     RC7PPS=0x07;
  1672   001530  0E07               	movlw	7
  1673   001532  6F69               	movwf	105,b	;volatile
  1674                           
  1675                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 21:     RG6PPS=0x08;
  1676   001534  0E08               	movlw	8
  1677   001536  6F88               	movwf	136,b	;volatile
  1678                           
  1679                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  1680   001538  50BD               	movf	189,w,c	;volatile
  1681   00153A  0B8F               	andlw	-113
  1682   00153C  0940               	iorlw	64
  1683   00153E  6EBD               	movwf	189,c	;volatile
  1684                           
  1685                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  1686   001540  0EE0               	movlw	-32
  1687   001542  16BE               	andwf	190,f,c	;volatile
  1688                           
  1689                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  1690   001544  50BF               	movf	191,w,c	;volatile
  1691   001546  0BF0               	andlw	-16
  1692   001548  0901               	iorlw	1
  1693   00154A  6EBF               	movwf	191,c	;volatile
  1694   00154C                     
  1695                           ; BSR set to: 14
  1696                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 30:     T2PR=PWMperiod;
  1697   00154C  C027  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1698   001550                     
  1699                           ; BSR set to: 14
  1700                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 31:     T2CONbits.ON=1;
  1701   001550  8EBD               	bsf	189,7,c	;volatile
  1702                           
  1703                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 35:     CCPR1H=0;
  1704   001552  0E00               	movlw	0
  1705   001554  6EAA               	movwf	170,c	;volatile
  1706                           
  1707                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 36:     CCPR2H=0;
  1708   001556  0E00               	movlw	0
  1709   001558  6EA6               	movwf	166,c	;volatile
  1710                           
  1711                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 37:     CCPR3H=0;
  1712   00155A  0E00               	movlw	0
  1713   00155C  010F               	movlb	15	; () banked
  1714   00155E  6F25               	movwf	37,b	;volatile
  1715                           
  1716                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 38:     CCPR4H=0;
  1717   001560  0E00               	movlw	0
  1718   001562  6F21               	movwf	33,b	;volatile
  1719                           
  1720                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  1721   001564  0EFC               	movlw	-4
  1722   001566  16AD               	andwf	173,f,c	;volatile
  1723                           
  1724                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  1725   001568  0EF3               	movlw	-13
  1726   00156A  16AD               	andwf	173,f,c	;volatile
  1727                           
  1728                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  1729   00156C  0ECF               	movlw	-49
  1730   00156E  16AD               	andwf	173,f,c	;volatile
  1731                           
  1732                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  1733   001570  0E3F               	movlw	-193
  1734   001572  16AD               	andwf	173,f,c	;volatile
  1735   001574                     
  1736                           ; BSR set to: 15
  1737                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  1738   001574  88AB               	bsf	171,4,c	;volatile
  1739                           
  1740                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b11
      +                          00;
  1741   001576  50AB               	movf	171,w,c	;volatile
  1742   001578  0BF0               	andlw	-16
  1743   00157A  090C               	iorlw	12
  1744   00157C  6EAB               	movwf	171,c	;volatile
  1745   00157E                     
  1746                           ; BSR set to: 15
  1747                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  1748   00157E  8EAB               	bsf	171,7,c	;volatile
  1749   001580                     
  1750                           ; BSR set to: 15
  1751                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  1752   001580  88A7               	bsf	167,4,c	;volatile
  1753                           
  1754                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b11
      +                          00;
  1755   001582  50A7               	movf	167,w,c	;volatile
  1756   001584  0BF0               	andlw	-16
  1757   001586  090C               	iorlw	12
  1758   001588  6EA7               	movwf	167,c	;volatile
  1759   00158A                     
  1760                           ; BSR set to: 15
  1761                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  1762   00158A  8EA7               	bsf	167,7,c	;volatile
  1763   00158C                     
  1764                           ; BSR set to: 15
  1765                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  1766   00158C  8926               	bsf	38,4,b	;volatile
  1767                           
  1768                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b11
      +                          00;
  1769   00158E  5126               	movf	38,w,b	;volatile
  1770   001590  0BF0               	andlw	-16
  1771   001592  090C               	iorlw	12
  1772   001594  6F26               	movwf	38,b	;volatile
  1773   001596                     
  1774                           ; BSR set to: 15
  1775                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  1776   001596  8F26               	bsf	38,7,b	;volatile
  1777   001598                     
  1778                           ; BSR set to: 15
  1779                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  1780   001598  8922               	bsf	34,4,b	;volatile
  1781                           
  1782                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b11
      +                          00;
  1783   00159A  5122               	movf	34,w,b	;volatile
  1784   00159C  0BF0               	andlw	-16
  1785   00159E  090C               	iorlw	12
  1786   0015A0  6F22               	movwf	34,b	;volatile
  1787   0015A2                     
  1788                           ; BSR set to: 15
  1789                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  1790   0015A2  8F22               	bsf	34,7,b	;volatile
  1791   0015A4                     
  1792                           ; BSR set to: 15
  1793                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  1794   0015A4  9688               	bcf	136,3,c	;volatile
  1795   0015A6                     
  1796                           ; BSR set to: 15
  1797                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  1798   0015A6  9680               	bcf	128,3,c	;volatile
  1799   0015A8                     
  1800                           ; BSR set to: 15
  1801   0015A8  0012               	return		;funcret
  1802   0015AA                     __end_of_initDCmotorsPWM:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _adjust_calibration *****************
  1806 ;; Defined at:
  1807 ;;		line 6 in file "../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  calibration_    1    0[COMRAM] PTR int 
  1810 ;;		 -> calibration(6), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;Total ram usage:        5 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text9
  1836   001252                     __ptext9:
  1837                           	callstack 0
  1838   001252                     _adjust_calibration:
  1839                           	callstack 30
  1840   001252                     l94:
  1841                           
  1842                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 11:         if(!PORTFbits.RF3 || 
      +                          !PORTFbits.RF2){
  1843   001252  A68E               	btfss	142,3,c	;volatile
  1844   001254  EF2E  F009         	goto	u531
  1845   001258  EF30  F009         	goto	u530
  1846   00125C                     u531:
  1847   00125C  EF37  F009         	goto	l1422
  1848   001260                     u530:
  1849   001260  B48E               	btfsc	142,2,c	;volatile
  1850   001262  EF35  F009         	goto	u541
  1851   001266  EF37  F009         	goto	u540
  1852   00126A                     u541:
  1853   00126A  EF29  F009         	goto	l94
  1854   00126E                     u540:
  1855   00126E                     l1422:
  1856                           
  1857                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 12:             _delay((unsigned 
      +                          long)((100)*(64000000/4000.0)));
  1858   00126E  0E09               	movlw	9
  1859   001270  6E29               	movwf	(??_adjust_calibration+1)^0,c
  1860   001272  0E1E               	movlw	30
  1861   001274  6E28               	movwf	??_adjust_calibration^0,c
  1862   001276  0EE4               	movlw	228
  1863   001278                     u847:
  1864   001278  2EE8               	decfsz	wreg,f,c
  1865   00127A  D7FE               	bra	u847
  1866   00127C  2E28               	decfsz	??_adjust_calibration^0,f,c
  1867   00127E  D7FC               	bra	u847
  1868   001280  2E29               	decfsz	(??_adjust_calibration+1)^0,f,c
  1869   001282  D7FA               	bra	u847
  1870   001284  D000               	nop2	
  1871   001286                     
  1872                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 14:             if(!PORTFbits.RF3
      +                           && !PORTFbits.RF2 ){
  1873   001286  B68E               	btfsc	142,3,c	;volatile
  1874   001288  EF48  F009         	goto	u551
  1875   00128C  EF4A  F009         	goto	u550
  1876   001290                     u551:
  1877   001290  EF63  F009         	goto	l98
  1878   001294                     u550:
  1879   001294  B48E               	btfsc	142,2,c	;volatile
  1880   001296  EF4F  F009         	goto	u561
  1881   00129A  EF51  F009         	goto	u560
  1882   00129E                     u561:
  1883   00129E  EF63  F009         	goto	l98
  1884   0012A2                     u560:
  1885   0012A2                     
  1886                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 17:                 LATHbits.LATH
      +                          3 = 1;
  1887   0012A2  8680               	bsf	128,3,c	;volatile
  1888                           
  1889                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 18:                 LATDbits.LATD
      +                          7 = 1;
  1890   0012A4  8E7C               	bsf	124,7,c	;volatile
  1891   0012A6                     
  1892                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 19:                 _delay((unsig
      +                          ned long)((1000)*(64000000/4000.0)));
  1893   0012A6  0E52               	movlw	82
  1894   0012A8  6E29               	movwf	(??_adjust_calibration+1)^0,c
  1895   0012AA  0E2B               	movlw	43
  1896   0012AC  6E28               	movwf	??_adjust_calibration^0,c
  1897   0012AE  0E00               	movlw	0
  1898   0012B0                     u857:
  1899   0012B0  2EE8               	decfsz	wreg,f,c
  1900   0012B2  D7FE               	bra	u857
  1901   0012B4  2E28               	decfsz	??_adjust_calibration^0,f,c
  1902   0012B6  D7FC               	bra	u857
  1903   0012B8  2E29               	decfsz	(??_adjust_calibration+1)^0,f,c
  1904   0012BA  D7FA               	bra	u857
  1905   0012BC  D000               	nop2	
  1906   0012BE                     
  1907                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 20:                 LATHbits.LATH
      +                          3 = 0;
  1908   0012BE  9680               	bcf	128,3,c	;volatile
  1909   0012C0                     
  1910                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 21:                 LATDbits.LATD
      +                          7 = 0;
  1911   0012C0  9E7C               	bcf	124,7,c	;volatile
  1912                           
  1913                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 22:                 break;
  1914   0012C2  EFCF  F009         	goto	l104
  1915   0012C6                     l98:
  1916                           
  1917                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 25:                 if(!PORTFbits
      +                          .RF2){
  1918   0012C6  B48E               	btfsc	142,2,c	;volatile
  1919   0012C8  EF68  F009         	goto	u571
  1920   0012CC  EF6A  F009         	goto	u570
  1921   0012D0                     u571:
  1922   0012D0  EF96  F009         	goto	l1448
  1923   0012D4                     u570:
  1924   0012D4                     
  1925                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 26:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  1926   0012D4  0E11               	movlw	17
  1927   0012D6  6E29               	movwf	(??_adjust_calibration+1)^0,c
  1928   0012D8  0E3C               	movlw	60
  1929   0012DA  6E28               	movwf	??_adjust_calibration^0,c
  1930   0012DC  0ECB               	movlw	203
  1931   0012DE                     u867:
  1932   0012DE  2EE8               	decfsz	wreg,f,c
  1933   0012E0  D7FE               	bra	u867
  1934   0012E2  2E28               	decfsz	??_adjust_calibration^0,f,c
  1935   0012E4  D7FC               	bra	u867
  1936   0012E6  2E29               	decfsz	(??_adjust_calibration+1)^0,f,c
  1937   0012E8  D7FA               	bra	u867
  1938   0012EA  0000               	nop	
  1939   0012EC                     
  1940                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 27:                     *calibrat
      +                          ion_label = *calibration_label + 5;
  1941   0012EC  5027               	movf	adjust_calibration@calibration_label^0,w,c
  1942   0012EE  6ED9               	movwf	fsr2l,c
  1943   0012F0  6ADA               	clrf	fsr2h,c
  1944   0012F2  CFDE F028          	movff	postinc2,??_adjust_calibration
  1945   0012F6  CFDD F029          	movff	postdec2,??_adjust_calibration+1
  1946   0012FA  0E05               	movlw	5
  1947   0012FC  2628               	addwf	??_adjust_calibration^0,f,c
  1948   0012FE  0E00               	movlw	0
  1949   001300  2229               	addwfc	(??_adjust_calibration+1)^0,f,c
  1950   001302  5027               	movf	adjust_calibration@calibration_label^0,w,c
  1951   001304  6ED9               	movwf	fsr2l,c
  1952   001306  6ADA               	clrf	fsr2h,c
  1953   001308  C028  FFDE         	movff	??_adjust_calibration,postinc2
  1954   00130C  C029  FFDD         	movff	??_adjust_calibration+1,postdec2
  1955   001310                     
  1956                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 28:                     LATDbits.
      +                          LATD7 = 1;
  1957   001310  8E7C               	bsf	124,7,c	;volatile
  1958   001312                     
  1959                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 29:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  1960   001312  0E11               	movlw	17
  1961   001314  6E29               	movwf	(??_adjust_calibration+1)^0,c
  1962   001316  0E3C               	movlw	60
  1963   001318  6E28               	movwf	??_adjust_calibration^0,c
  1964   00131A  0ECB               	movlw	203
  1965   00131C                     u877:
  1966   00131C  2EE8               	decfsz	wreg,f,c
  1967   00131E  D7FE               	bra	u877
  1968   001320  2E28               	decfsz	??_adjust_calibration^0,f,c
  1969   001322  D7FC               	bra	u877
  1970   001324  2E29               	decfsz	(??_adjust_calibration+1)^0,f,c
  1971   001326  D7FA               	bra	u877
  1972   001328  0000               	nop	
  1973   00132A                     
  1974                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 30:                     LATDbits.
      +                          LATD7 = 0;
  1975   00132A  9E7C               	bcf	124,7,c	;volatile
  1976   00132C                     l1448:
  1977                           
  1978                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 33:                 if(!PORTFbits
      +                          .RF3){
  1979   00132C  B68E               	btfsc	142,3,c	;volatile
  1980   00132E  EF9B  F009         	goto	u581
  1981   001332  EF9D  F009         	goto	u580
  1982   001336                     u581:
  1983   001336  EFCD  F009         	goto	l95
  1984   00133A                     u580:
  1985   00133A                     
  1986                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 34:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  1987   00133A  0E11               	movlw	17
  1988   00133C  6E29               	movwf	(??_adjust_calibration+1)^0,c
  1989   00133E  0E3C               	movlw	60
  1990   001340  6E28               	movwf	??_adjust_calibration^0,c
  1991   001342  0ECB               	movlw	203
  1992   001344                     u887:
  1993   001344  2EE8               	decfsz	wreg,f,c
  1994   001346  D7FE               	bra	u887
  1995   001348  2E28               	decfsz	??_adjust_calibration^0,f,c
  1996   00134A  D7FC               	bra	u887
  1997   00134C  2E29               	decfsz	(??_adjust_calibration+1)^0,f,c
  1998   00134E  D7FA               	bra	u887
  1999   001350  0000               	nop	
  2000   001352                     
  2001                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 35:                     *calibrat
      +                          ion_label = *calibration_label - 5;
  2002   001352  5027               	movf	adjust_calibration@calibration_label^0,w,c
  2003   001354  6ED9               	movwf	fsr2l,c
  2004   001356  6ADA               	clrf	fsr2h,c
  2005   001358  CFDE F028          	movff	postinc2,??_adjust_calibration
  2006   00135C  CFDD F029          	movff	postdec2,??_adjust_calibration+1
  2007   001360  0EFB               	movlw	251
  2008   001362  2428               	addwf	??_adjust_calibration^0,w,c
  2009   001364  6E2A               	movwf	(??_adjust_calibration+2)^0,c
  2010   001366  0EFF               	movlw	255
  2011   001368  2029               	addwfc	(??_adjust_calibration+1)^0,w,c
  2012   00136A  6E2B               	movwf	(??_adjust_calibration+3)^0,c
  2013   00136C  5027               	movf	adjust_calibration@calibration_label^0,w,c
  2014   00136E  6ED9               	movwf	fsr2l,c
  2015   001370  6ADA               	clrf	fsr2h,c
  2016   001372  C02A  FFDE         	movff	??_adjust_calibration+2,postinc2
  2017   001376  C02B  FFDD         	movff	??_adjust_calibration+3,postdec2
  2018   00137A                     
  2019                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 36:                     LATHbits.
      +                          LATH3 = 1;
  2020   00137A  8680               	bsf	128,3,c	;volatile
  2021   00137C                     
  2022                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 37:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  2023   00137C  0E11               	movlw	17
  2024   00137E  6E29               	movwf	(??_adjust_calibration+1)^0,c
  2025   001380  0E3C               	movlw	60
  2026   001382  6E28               	movwf	??_adjust_calibration^0,c
  2027   001384  0ECB               	movlw	203
  2028   001386                     u897:
  2029   001386  2EE8               	decfsz	wreg,f,c
  2030   001388  D7FE               	bra	u897
  2031   00138A  2E28               	decfsz	??_adjust_calibration^0,f,c
  2032   00138C  D7FC               	bra	u897
  2033   00138E  2E29               	decfsz	(??_adjust_calibration+1)^0,f,c
  2034   001390  D7FA               	bra	u897
  2035   001392  0000               	nop	
  2036   001394                     
  2037                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 38:                     LATHbits.
      +                          LATH3 = 0;
  2038   001394  9680               	bcf	128,3,c	;volatile
  2039   001396  EF29  F009         	goto	l94
  2040   00139A                     l95:
  2041   00139A  EF29  F009         	goto	l94
  2042   00139E                     l104:
  2043   00139E  0012               	return		;funcret
  2044   0013A0                     __end_of_adjust_calibration:
  2045                           	callstack 0
  2046                           
  2047                           	psect	smallconst
  2048   000E00                     __psmallconst:
  2049                           	callstack 0
  2050   000E00  00                 	db	0
  2051   000E01  00                 	db	0	; dummy byte at the end
  2052   000000                     
  2053                           	psect	rparam
  2054   000000                     
  2055                           	psect	config
  2056                           
  2057                           ;Config register CONFIG1L @ 0x300000
  2058                           ;	External Oscillator mode Selection bits
  2059                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2060                           ;	Power-up default value for COSC bits
  2061                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2062   300000                     	org	3145728
  2063   300000  AA                 	db	170
  2064                           
  2065                           ;Config register CONFIG1H @ 0x300001
  2066                           ;	unspecified, using default values
  2067                           ;	Clock Out Enable bit
  2068                           ;	CLKOUTEN = 0x1, unprogrammed default
  2069                           ;	Clock Switch Enable bit
  2070                           ;	CSWEN = 0x1, unprogrammed default
  2071                           ;	Fail-Safe Clock Monitor Enable bit
  2072                           ;	FCMEN = 0x1, unprogrammed default
  2073   300001                     	org	3145729
  2074   300001  FF                 	db	255
  2075                           
  2076                           ;Config register CONFIG3L @ 0x300004
  2077                           ;	WDT Period Select bits
  2078                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2079                           ;	WDT operating mode
  2080                           ;	WDTE = OFF, WDT Disabled
  2081   300004                     	org	3145732
  2082   300004  9F                 	db	159
  2083                           
  2084                           ;Config register CONFIG3H @ 0x300005
  2085                           ;	unspecified, using default values
  2086                           ;	WDT Window Select bits
  2087                           ;	WDTCWS = 0x7, unprogrammed default
  2088                           ;	WDT input clock selector
  2089                           ;	WDTCCS = 0x7, unprogrammed default
  2090   300005                     	org	3145733
  2091   300005  FF                 	db	255
  2092                           tosu	equ	0xFFF
  2093                           tosh	equ	0xFFE
  2094                           tosl	equ	0xFFD
  2095                           stkptr	equ	0xFFC
  2096                           pclatu	equ	0xFFB
  2097                           pclath	equ	0xFFA
  2098                           pcl	equ	0xFF9
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           prodh	equ	0xFF4
  2104                           prodl	equ	0xFF3
  2105                           indf0	equ	0xFEF
  2106                           postinc0	equ	0xFEE
  2107                           postdec0	equ	0xFED
  2108                           preinc0	equ	0xFEC
  2109                           plusw0	equ	0xFEB
  2110                           fsr0h	equ	0xFEA
  2111                           fsr0l	equ	0xFE9
  2112                           wreg	equ	0xFE8
  2113                           indf1	equ	0xFE7
  2114                           postinc1	equ	0xFE6
  2115                           postdec1	equ	0xFE5
  2116                           preinc1	equ	0xFE4
  2117                           plusw1	equ	0xFE3
  2118                           fsr1h	equ	0xFE2
  2119                           fsr1l	equ	0xFE1
  2120                           bsr	equ	0xFE0
  2121                           indf2	equ	0xFDF
  2122                           postinc2	equ	0xFDE
  2123                           postdec2	equ	0xFDD
  2124                           preinc2	equ	0xFDC
  2125                           plusw2	equ	0xFDB
  2126                           fsr2h	equ	0xFDA
  2127                           fsr2l	equ	0xFD9
  2128                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      71
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(1) Largest target is 6
		 -> calibration(COMRAM[6]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), motorR(COMRAM[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLEFT@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLEFT@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_turnLEFT
    _main->_turnRIGHT
    _turnRIGHT->_setMotorPWM
    _turnLEFT->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8515
                 _adjust_calibration
                    _initDCmotorsPWM
                           _turnLEFT
                          _turnRIGHT
 ---------------------------------------------------------------------------------
 (1) _turnRIGHT                                           16    14      2    4055
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLEFT                                            16    14      2    4055
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          5     4      1    2133
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms_function                                    3     1      2     479
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adjust_calibration                                   5     4      1     240
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adjust_calibration
   _initDCmotorsPWM
   _turnLEFT
     ___awdiv
     _delay_ms_function
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _turnRIGHT
     ___awdiv
     _delay_ms_function
     _setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllllll     7A      0       0      47        0.0%
BITBIGSFRllllh      6C      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      47       1       74.7%
BITBIGSFRllhll      54      0       0      40        0.0%
BITBIGSFRhh         40      0       0      32        0.0%
BITBIGSFRlllllh     2B      0       0      43        0.0%
BITBIGSFRllhhhh     17      0       0      36        0.0%
BITBIGSFRlllllh     11      0       0      44        0.0%
BITBIGSFRhlh         E      0       0      33        0.0%
BITBIGSFRllllll      A      0       0      46        0.0%
BITBIGSFRllhhhl      5      0       0      37        0.0%
BITBIGSFRllhlhh      2      0       0      38        0.0%
BITBIGSFRlllh        2      0       0      41        0.0%
BITBIGSFRlh          2      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRllhlhl      1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      34        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      48        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 18:42:32 2024

                                 l94 1252                                   l95 139A  
                                 l98 12C6                         ___awdiv@sign 002C  
                ___wmul@multiplicand 0029                                  l104 139E  
                                l220 0ED2                                  l214 10FC  
                                l206 1050                                  l231 1670  
                                l171 164A                                  l228 0F7E  
                                l165 15A8                                  l168 1638  
                                l178 1250                                  l462 1462  
                                l722 1614                                  l729 161C  
                                u410 15C4                                  u411 15C0  
                                u500 1410                                  u420 15E2  
                                u501 140C                                  u421 15DE  
                                u510 142C                                  u430 15FE  
                                u511 1428                                  u431 15FA  
                                u520 1452                                  u440 164A  
                                u600 0EF6                                  u521 144E  
                                u441 1646                                  u601 0EF2  
                                u530 1260                                  u450 1118  
                                u610 0F10                                  u531 125C  
                                u451 1114                                  u611 0F0C  
                                u540 126E                                  u460 11D4  
                                u700 10FC                                  u620 0F2E  
                                u541 126A                                  u461 11D0  
                                u701 10F8                                  u621 0F2A  
                                u550 1294                                  u470 13B2  
                                u630 0F68                                  u551 1290  
                                u471 13AE                                  u631 0F64  
                                u560 12A2                                  u480 13CC  
                                u640 0F7E                                  u561 129E  
                                u481 13C8                                  u641 0F7A  
                                u570 12D4                                  u490 13F2  
                                u650 1032                                  u571 12D0  
                                u491 13EE                                  u651 102E  
                                u580 133A                                  u660 1074  
                                u581 1336                                  u661 1070  
                                u670 108E                                  u590 0EB4  
                                u671 108A                                  u591 0EB0  
                                u680 10AC                                  u681 10A8  
                                u817 0EC6                                  u690 10E6  
                                u691 10E2                                  u827 1044  
                                u837 1628                                  u847 1278  
                                u857 12B0                                  u867 12DE  
                                u877 131C                                  u887 1344  
                                u897 1386                                  wreg 0FE8  
         __end_of_adjust_calibration 13A0                                 l1300 1668  
                               l1310 15CC                                 l1400 1574  
                               l1320 1606                                 l1312 15D4  
                               l1304 15AA                                 l1410 1596  
                               l1402 157E                                 l1330 1632  
                               l1322 1608                                 l1314 15E2  
                               l1306 15B2                                 l1420 1260  
                               l1412 1598                                 l1404 1580  
                               l1324 160E                                 l1316 15E8  
                               l1308 15C4                                 l1340 117C  
                               l1332 10FE                                 l1500 0F46  
                               l1430 12A6                                 l1422 126E  
                               l1414 15A2                                 l1406 158A  
                               l1350 13A4                                 l1326 161E  
                               l1318 15FE                                 l1342 11BA  
                               l1334 1118                                 l1510 0FA4  
                               l1502 0F52                                 l1440 12EC  
                               l1432 12BE                                 l1424 1286  
                               l1416 15A4                                 l1408 158C  
                               l1360 13D4                                 l1352 13B2  
                               l1328 1622                                 l1344 11D4  
                               l1336 1166                                 l1520 0FFC  
                               l1512 0FA4                                 l1504 0F68  
                               l1600 14D2                                 l1450 133A  
                               l1442 1310                                 l1434 12C0  
                               l1426 1294                                 l1418 15A6  
                               l1370 1402                                 l1362 13D8  
                               l1354 13BA                                 l1346 1214  
                               l1338 1178                                 l1530 103E  
                               l1522 1004                                 l1514 0FC0  
                               l1506 0F82                                 l1610 14EA  
                               l1602 14D6                                 l1452 1352  
                               l1444 1312                                 l1428 12A2  
                               l1380 1436                                 l1372 1410  
                               l1364 13E0                                 l1356 13BE  
                               l1348 13A0                                 l1540 10AC  
                               l1532 104C                                 l1524 1010  
                               l1516 0FCC                                 l1508 0F9C  
                               l1460 0E04                                 l1612 14F8  
                               l1604 14DA                                 l1454 137A  
                               l1446 132A                                 l1438 12D4  
                               l1382 143C                                 l1374 1416  
                               l1366 13F2                                 l1358 13CC  
                               l1550 10E6                                 l1542 10B4  
                               l1534 1078                                 l1518 0FF4  
                               l1526 1014                                 l1470 0E4E  
                               l1462 0E1E                                 l1614 1500  
                               l1606 14DE                                 l1456 137C  
                               l1448 132C                                 l1392 1516  
                               l1376 142C                                 l1368 13FA  
                               l1384 1442                                 l1544 10BC  
                               l1536 108E                                 l1528 1032  
                               l1472 0E76                                 l1480 0E96  
                               l1464 0E26                                 l1608 14E2  
                               l1560 1478                                 l1552 1464  
                               l1458 1394                                 l1394 1526  
                               l1386 1452                                 l1378 1434  
                               l1298 164C                                 l1546 10C4  
                               l1538 1096                                 l1490 0F10  
                               l1482 0EB4                                 l1474 0E7E  
                               l1466 0E26                                 l1570 1498  
                               l1562 147C                                 l1554 1464  
                               l1396 154C                                 l1388 145A  
                               l1548 10D0                                 l1492 0F18  
                               l1484 0EC0                                 l1476 0E86  
                               l1468 0E42                                 l1580 14B8  
                               l1572 149C                                 l1564 1484  
                               l1556 1470                                 l1398 1550  
                               l1494 0F2E                                 l1486 0ECE  
                               l1478 0E92                                 l1590 14C2  
                               l1582 14BA                                 l1574 14A0  
                               l1566 148C                                 l1558 1474  
                               l1496 0F36                                 l1488 0EFA  
                               l1592 14C6                                 l1584 14BC  
                               l1576 14A8                                 l1568 1494  
                               l1498 0F3E                                 l1594 14C8  
                               l1586 14BE                                 l1578 14B0  
                               l1596 14CA                                 l1588 14C0  
                               l1598 14CE                                 _T2PR 0FBC  
                               _main 1464                                 _temp 0047  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               prodh 0FF4                                 prodl 0FF3  
                               start 0000                         ___param_bank 0000  
                              ?_main 0027                      __end_of___awdiv 1464  
                    ___awdiv@divisor 0029                      __end_of___lwdiv 161E  
                    ___awdiv@counter 002B                                tablat 0FF5  
                              status 0FD8                      __initialization 1672  
                       __end_of_main 1516                               ??_main 0047  
                      __activetblptr 0000                         ?_setMotorPWM 0034  
                             _CCPR1H 0FAA                               _CCPR2H 0FA6  
                             _CCPR3H 0F25                               _CCPR4H 0F21  
                   ___awdiv@dividend 0027                               _RE2PPS 0E74  
                             _RC7PPS 0E69                               _RE4PPS 0E76  
                             _RG6PPS 0E88                         _CCPTMRS0bits 0FAD  
                             ___wmul 164C                            ??___awdiv 002B  
                          ??___lwdiv 0031        delay_ms_function@milliseconds 0027  
                             clear_0 168A                     ___awdiv@quotient 002D  
                             _motorL 0018                               _motorR 000F  
                             isa$std 0001                         __pdataCOMRAM 0047  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                  ??_initDCmotorsPWM 0029                     __end_of_turnLEFT 10FE  
                         __accesstop 0060              __end_of__initialization 1690  
                      ___rparam_used 0001                       __pcstackCOMRAM 0027  
                       _T2CLKCONbits 0FBF                   _adjust_calibration 1252  
                            ?___wmul 0027                  ?_adjust_calibration 0027  
                  _delay_ms_function 161E                   ?_delay_ms_function 0027  
                ??_delay_ms_function 0029                 ??_adjust_calibration 0028  
       turnLEFT@rotation_calibration 003E                              __Hparam 0000  
                            __Lparam 0000                              ___awdiv 13A0  
                            ___lwdiv 15AA                           _off_period 000B  
                       __psmallconst 0E00                            ?_turnLEFT 0039  
          __end_of_delay_ms_function 164C                              __pcinit 1672  
                            __ramtop 0E00                              __ptext0 1464  
                            __ptext1 0E02                              __ptext2 0F80  
                            __ptext3 10FE                              __ptext4 164C  
                            __ptext5 15AA                              __ptext6 161E  
                            __ptext7 13A0                              __ptext8 1516  
                            __ptext9 1252                            _T2CONbits 0FBD  
                          _T2HLTbits 0FBE                 end_of_initialization 1690  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc2 0FDE                           ??_turnLEFT 003B  
                  __end_of_turnRIGHT 0F80                      _initDCmotorsPWM 1516  
                 turnRIGHT@max_power 0043                            _PORTFbits 0F8E  
                 setMotorPWM@negDuty 0038                   setMotorPWM@posDuty 0037  
                          _TRISCbits 0F83                            _TRISDbits 0F84  
                          _TRISEbits 0F85                            _TRISFbits 0F86  
                          _TRISGbits 0F87                            _TRISHbits 0F88  
adjust_calibration@calibration_label 0027                          _CCP1CONbits 0FAB  
                        _CCP2CONbits 0FA7                          _CCP3CONbits 0F26  
                        _CCP4CONbits 0F22                       __end_of___wmul 1672  
                      __pidataCOMRAM 1696                  start_initialization 1672  
                 turnLEFT@delay_time 0045              __end_of_initDCmotorsPWM 15AA  
                           ??___wmul 002B                          _calibration 0021  
                        __pbssCOMRAM 0001                     ___lwdiv@dividend 002D  
                        turnRIGHT@mL 0039                          turnRIGHT@mR 003A  
                           ?___awdiv 0027                             ?___lwdiv 002D  
                        __smallconst 0E00                        ??_setMotorPWM 0035  
                   ___lwdiv@quotient 0031             initDCmotorsPWM@PWMperiod 0027  
                     ___wmul@product 002B                             _LATCbits 0F7B  
                           _LATDbits 0F7C                             _LATEbits 0F7D  
                          _on_period 000D                             _LATGbits 0F7F  
                           _LATHbits 0F80                     ?_initDCmotorsPWM 0027  
                  ___wmul@multiplier 0027                         setMotorPWM@m 0034  
      turnRIGHT@rotation_calibration 003E                            _turnRIGHT 0E02  
                __end_of_setMotorPWM 1252                             __Hrparam 0000  
                           __Lrparam 0000                           _ANSELFbits 0EB4  
                         turnLEFT@mL 0039                           turnLEFT@mR 003A  
                         ?_turnRIGHT 0039                      ___lwdiv@divisor 002F  
                         turnRIGHT@i 003F                           turnRIGHT@j 0041  
                    ___lwdiv@counter 0033                    turnLEFT@max_power 0043  
                  _motor_adjustments 0001                             isa$xinst 0000  
                           _turnLEFT 0F80                  turnRIGHT@delay_time 0045  
                        _setMotorPWM 10FE                            turnLEFT@i 003F  
                          turnLEFT@j 0041                          ??_turnRIGHT 003B  
