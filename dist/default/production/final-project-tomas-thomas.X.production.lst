

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 22:24:24 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 21/07/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   00445E                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _length
    95   00445E  32                 	db	50
    96                           
    97                           ;initializer for _temp
    98   00445F  07                 	db	7
    99   000000                     _TX4REG	set	3812
   100   000000                     _RC4STAbits	set	3815
   101   000000                     _SP4BRGH	set	3814
   102   000000                     _TRISDbits	set	3972
   103   000000                     _LATEbits	set	3965
   104   000000                     _LATHbits	set	3968
   105   000000                     _SSP2CON2bits	set	3802
   106   000000                     _RX4PPS	set	3605
   107   000000                     _SSP2CLKPPS	set	3612
   108   000000                     _SSP2DATPPS	set	3613
   109   000000                     _RC7PPS	set	3689
   110   000000                     _RE2PPS	set	3700
   111   000000                     _LATAbits	set	3961
   112   000000                     _LATGbits	set	3967
   113   000000                     _TRISAbits	set	3969
   114   000000                     _TRISGbits	set	3975
   115   000000                     _TRISHbits	set	3976
   116   000000                     _PORTFbits	set	3982
   117   000000                     _TRISCbits	set	3971
   118   000000                     _TRISEbits	set	3973
   119   000000                     _TRISFbits	set	3974
   120   000000                     _LATCbits	set	3963
   121   000000                     _LATDbits	set	3964
   122   000000                     _LATFbits	set	3966
   123   000000                     _T2PR	set	4028
   124   000000                     _T2CONbits	set	4029
   125   000000                     _CCPR2H	set	4006
   126   000000                     _CCPR1H	set	4010
   127   000000                     _RE4PPS	set	3702
   128   000000                     _RG6PPS	set	3720
   129   000000                     _RD5PPS	set	3695
   130   000000                     _ANSELDbits	set	3751
   131   000000                     _ANSELFbits	set	3764
   132   000000                     _CCPR4H	set	3873
   133   000000                     _CCPR3H	set	3877
   134   000000                     _T2CLKCONbits	set	4031
   135   000000                     _T2HLTbits	set	4030
   136   000000                     _CCP1CONbits	set	4011
   137   000000                     _CCPTMRS0bits	set	4013
   138   000000                     _CCP2CONbits	set	4007
   139   000000                     _CCP3CONbits	set	3878
   140   000000                     _CCP4CONbits	set	3874
   141   000000                     _SSP2BUF	set	3797
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _SSP2CON2	set	3802
   149   000000                     _SSP2STAT	set	3800
   150   000000                     _PIE4bits	set	3629
   151   000000                     _PIR4bits	set	3639
   152   000000                     _RC0PPS	set	3682
   153   000000                     _RD6PPS	set	3696
   154                           
   155                           ; #config settings
   156                           
   157                           	psect	cinit
   158   004338                     __pcinit:
   159                           	callstack 0
   160   004338                     start_initialization:
   161                           	callstack 0
   162   004338                     __initialization:
   163                           	callstack 0
   164                           
   165                           ; Initialize objects allocated to BANK0 (2 bytes)
   166                           ; load TBLPTR registers with __pidataBANK0
   167   004338  0E5E               	movlw	low __pidataBANK0
   168   00433A  6EF6               	movwf	tblptrl,c
   169   00433C  0E44               	movlw	high __pidataBANK0
   170   00433E  6EF7               	movwf	tblptrh,c
   171   004340  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   172   004342  6EF8               	movwf	tblptru,c
   173   004344  0009               	tblrd		*+	;fetch initializer
   174   004346  CFF5 F0FD          	movff	tablat,__pdataBANK0
   175   00434A  0009               	tblrd		*+	;fetch initializer
   176   00434C  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   177                           
   178                           ; Clear objects allocated to BANK1 (137 bytes)
   179   004350  EE01  F000         	lfsr	0,__pbssBANK1
   180   004354  0E89               	movlw	137
   181   004356                     clear_0:
   182   004356  6AEE               	clrf	postinc0,c
   183   004358  06E8               	decf	wreg,f,c
   184   00435A  E1FD               	bnz	clear_0
   185                           
   186                           ; Clear objects allocated to BANK0 (26 bytes)
   187   00435C  EE00  F0E3         	lfsr	0,__pbssBANK0
   188   004360  0E1A               	movlw	26
   189   004362                     clear_1:
   190   004362  6AEE               	clrf	postinc0,c
   191   004364  06E8               	decf	wreg,f,c
   192   004366  E1FD               	bnz	clear_1
   193   004368                     end_of_initialization:
   194                           	callstack 0
   195   004368                     __end_of__initialization:
   196                           	callstack 0
   197   004368  0100               	movlb	0
   198   00436A  EF91  F01F         	goto	_main	;jump to C main() function
   199                           
   200                           	psect	bssBANK0
   201   0000E3                     __pbssBANK0:
   202                           	callstack 0
   203   0000E3                     _Color_Value:
   204                           	callstack 0
   205   0000E3                     	ds	2
   206   0000E5                     _Forward_Count:
   207                           	callstack 0
   208   0000E5                     	ds	1
   209   0000E6                     _Operation_Count:
   210                           	callstack 0
   211   0000E6                     	ds	1
   212   0000E7                     _TxBufReadCnt:
   213                           	callstack 0
   214   0000E7                     	ds	1
   215   0000E8                     _TxBufWriteCnt:
   216                           	callstack 0
   217   0000E8                     	ds	1
   218   0000E9                     _RxBufReadCnt:
   219                           	callstack 0
   220   0000E9                     	ds	1
   221   0000EA                     _RxBufWriteCnt:
   222                           	callstack 0
   223   0000EA                     	ds	1
   224   0000EB                     _motorR:
   225                           	callstack 0
   226   0000EB                     	ds	9
   227   0000F4                     _motorL:
   228                           	callstack 0
   229   0000F4                     	ds	9
   230                           
   231                           	psect	dataBANK0
   232   0000FD                     __pdataBANK0:
   233                           	callstack 0
   234   0000FD                     _length:
   235                           	callstack 0
   236   0000FD                     	ds	1
   237   0000FE                     _temp:
   238                           	callstack 0
   239   0000FE                     	ds	1
   240                           
   241                           	psect	bssBANK1
   242   000100                     __pbssBANK1:
   243                           	callstack 0
   244   000100                     _EUSART4TXbuf:
   245                           	callstack 0
   246   000100                     	ds	60
   247   00013C                     _Operation_History:
   248                           	callstack 0
   249   00013C                     	ds	50
   250   00016E                     _EUSART4RXbuf:
   251                           	callstack 0
   252   00016E                     	ds	20
   253   000182                     _calibration:
   254                           	callstack 0
   255   000182                     	ds	7
   256                           
   257                           	psect	cstackBANK1
   258   000189                     __pcstackBANK1:
   259                           	callstack 0
   260   000189                     _maze_search$2704:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x0
   264   000189                     	ds	1
   265   00018A                     _maze_search$2703:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x1
   269   00018A                     	ds	1
   270                           
   271                           	psect	cstackBANK0
   272   000060                     __pcstackBANK0:
   273                           	callstack 0
   274   000060                     custom_floatmodulo@quotient:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0x0
   278   000060                     	ds	4
   279   000064                     custom_floatmodulo@remainder:
   280                           	callstack 0
   281                           
   282                           ; 4 bytes @ 0x4
   283   000064                     	ds	4
   284   000068                     custom_floatmodulo@intPart:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x8
   288   000068                     	ds	2
   289   00006A                     RGB_to_HSV@R:
   290                           	callstack 0
   291                           
   292                           ; 4 bytes @ 0xA
   293   00006A                     	ds	4
   294   00006E                     RGB_to_HSV@G:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0xE
   298   00006E                     	ds	4
   299   000072                     RGB_to_HSV@B:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0x12
   303   000072                     	ds	4
   304   000076                     RGB_to_HSV@C:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x16
   308   000076                     	ds	4
   309   00007A                     RGB_to_HSV@H:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x1A
   313   00007A                     	ds	1
   314   00007B                     RGB_to_HSV@S:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x1B
   318   00007B                     	ds	1
   319   00007C                     RGB_to_HSV@V:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x1C
   323   00007C                     	ds	1
   324   00007D                     RGB_to_HSV@c_norm:
   325                           	callstack 0
   326                           
   327                           ; 4 bytes @ 0x1D
   328   00007D                     	ds	4
   329   000081                     _RGB_to_HSV$2698:
   330                           	callstack 0
   331                           
   332                           ; 4 bytes @ 0x21
   333   000081                     	ds	4
   334   000085                     _RGB_to_HSV$2699:
   335                           	callstack 0
   336                           
   337                           ; 4 bytes @ 0x25
   338   000085                     	ds	4
   339   000089                     _RGB_to_HSV$2700:
   340                           	callstack 0
   341                           
   342                           ; 4 bytes @ 0x29
   343   000089                     	ds	4
   344   00008D                     _RGB_to_HSV$2702:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0x2D
   348   00008D                     	ds	4
   349   000091                     _RGB_to_HSV$318:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x31
   353   000091                     	ds	4
   354   000095                     _RGB_to_HSV$319:
   355                           	callstack 0
   356                           
   357                           ; 4 bytes @ 0x35
   358   000095                     	ds	4
   359   000099                     RGB_to_HSV@minRGB:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x39
   363   000099                     	ds	4
   364   00009D                     _RGB_to_HSV$321:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x3D
   368   00009D                     	ds	4
   369   0000A1                     _RGB_to_HSV$322:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0x41
   373   0000A1                     	ds	4
   374   0000A5                     _RGB_to_HSV$2701:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x45
   378   0000A5                     	ds	4
   379   0000A9                     RGB_to_HSV@H_temp:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x49
   383   0000A9                     	ds	4
   384   0000AD                     RGB_to_HSV@deltaRGB:
   385                           	callstack 0
   386                           
   387                           ; 4 bytes @ 0x4D
   388   0000AD                     	ds	4
   389   0000B1                     RGB_to_HSV@maxRGB:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x51
   393   0000B1                     	ds	4
   394   0000B5                     RGB_to_HSV@r:
   395                           	callstack 0
   396                           
   397                           ; 4 bytes @ 0x55
   398   0000B5                     	ds	4
   399   0000B9                     RGB_to_HSV@g:
   400                           	callstack 0
   401                           
   402                           ; 4 bytes @ 0x59
   403   0000B9                     	ds	4
   404   0000BD                     RGB_to_HSV@b:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x5D
   408   0000BD                     	ds	4
   409   0000C1                     color_cardCheck@r:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0x61
   413   0000C1                     	ds	4
   414   0000C5                     color_cardCheck@g:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x65
   418   0000C5                     	ds	4
   419   0000C9                     color_cardCheck@b:
   420                           	callstack 0
   421                           
   422                           ; 4 bytes @ 0x69
   423   0000C9                     	ds	4
   424   0000CD                     color_cardCheck@c:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x6D
   428   0000CD                     	ds	4
   429   0000D1                     color_cardCheck@card_color:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x71
   433   0000D1                     	ds	2
   434   0000D3                     color_cardCheck@H:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x73
   438   0000D3                     	ds	4
   439   0000D7                     color_cardCheck@S:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x77
   443   0000D7                     	ds	4
   444   0000DB                     color_cardCheck@V:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x7B
   448   0000DB                     	ds	4
   449   0000DF                     maze_search@c:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x7F
   453   0000DF                     	ds	2
   454   0000E1                     maze_search@mL:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x81
   458   0000E1                     	ds	1
   459   0000E2                     maze_search@mR:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x82
   463   0000E2                     	ds	1
   464                           
   465                           	psect	cstackCOMRAM
   466   000001                     __pcstackCOMRAM:
   467                           	callstack 0
   468   000001                     ??_pause_until_RF2_pressed:
   469   000001                     ??_I2C_2_Master_Idle:
   470   000001                     ?___wmul:
   471                           	callstack 0
   472   000001                     ?___awdiv:
   473                           	callstack 0
   474   000001                     ?___fladd:
   475                           	callstack 0
   476   000001                     ?___fltol:
   477                           	callstack 0
   478   000001                     initDCmotorsPWM@PWMperiod:
   479                           	callstack 0
   480   000001                     delay_ms_function@milliseconds:
   481                           	callstack 0
   482   000001                     ___wmul@multiplier:
   483                           	callstack 0
   484   000001                     ___awdiv@dividend:
   485                           	callstack 0
   486   000001                     ___fleq@ff1:
   487                           	callstack 0
   488   000001                     ___flge@ff1:
   489                           	callstack 0
   490   000001                     ___fltol@f1:
   491                           	callstack 0
   492   000001                     ___fladd@b:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x0
   496   000001                     	ds	1
   497   000002                     ??_I2C_2_Master_Read:
   498   000002                     I2C_2_Master_Write@data_byte:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x1
   502   000002                     	ds	1
   503   000003                     ??_delay_ms_function:
   504   000003                     color_writetoaddr@value:
   505                           	callstack 0
   506   000003                     I2C_2_Master_Read@ack:
   507                           	callstack 0
   508   000003                     ___wmul@multiplicand:
   509                           	callstack 0
   510   000003                     ___awdiv@divisor:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x2
   514   000003                     	ds	1
   515   000004                     color_writetoaddr@address:
   516                           	callstack 0
   517   000004                     I2C_2_Master_Read@tmp:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521   000004                     	ds	1
   522   000005                     ??_color_click_init:
   523   000005                     ??___fltol:
   524   000005                     ?_color_read_Red:
   525                           	callstack 0
   526   000005                     ?_color_read_Green:
   527                           	callstack 0
   528   000005                     ?_color_read_Blue:
   529                           	callstack 0
   530   000005                     ?_color_read_Clear:
   531                           	callstack 0
   532   000005                     ___awdiv@counter:
   533                           	callstack 0
   534   000005                     ___wmul@product:
   535                           	callstack 0
   536   000005                     ___fleq@ff2:
   537                           	callstack 0
   538   000005                     ___flge@ff2:
   539                           	callstack 0
   540   000005                     ___fladd@a:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x4
   544   000005                     	ds	1
   545   000006                     ___awdiv@sign:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x5
   549   000006                     	ds	1
   550   000007                     ??_color_read_Red:
   551   000007                     ??_color_read_Green:
   552   000007                     ??_color_read_Blue:
   553   000007                     ??_color_read_Clear:
   554   000007                     ?___lwdiv:
   555                           	callstack 0
   556   000007                     ___awdiv@quotient:
   557                           	callstack 0
   558   000007                     ___lwdiv@dividend:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x6
   562   000007                     	ds	2
   563   000009                     ??___fladd:
   564   000009                     ??___fleq:
   565   000009                     ??___flge:
   566   000009                     ___fltol@sign1:
   567                           	callstack 0
   568   000009                     ___lwdiv@divisor:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x8
   572   000009                     	ds	1
   573   00000A                     ___fltol@exp1:
   574                           	callstack 0
   575   00000A                     color_read_Red@tmp:
   576                           	callstack 0
   577   00000A                     color_read_Green@tmp:
   578                           	callstack 0
   579   00000A                     color_read_Blue@tmp:
   580                           	callstack 0
   581   00000A                     color_read_Clear@tmp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x9
   585   00000A                     	ds	1
   586   00000B                     ___lwdiv@counter:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0xA
   590   00000B                     	ds	1
   591   00000C                     ?___xxtofl:
   592                           	callstack 0
   593   00000C                     ___lwdiv@quotient:
   594                           	callstack 0
   595   00000C                     ___xxtofl@val:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0xB
   599   00000C                     	ds	1
   600   00000D                     ___fladd@signs:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0xC
   604   00000D                     	ds	1
   605   00000E                     setMotorPWM@m:
   606                           	callstack 0
   607   00000E                     ___fladd@aexp:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0xD
   611   00000E                     	ds	1
   612   00000F                     ??_setMotorPWM:
   613   00000F                     ___fladd@bexp:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0xE
   617   00000F                     	ds	1
   618   000010                     ??___xxtofl:
   619   000010                     ___fladd@grs:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0xF
   623   000010                     	ds	1
   624   000011                     setMotorPWM@posDuty:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x10
   628   000011                     	ds	1
   629   000012                     setMotorPWM@negDuty:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x11
   633   000012                     	ds	1
   634   000013                     forward@mL:
   635                           	callstack 0
   636   000013                     backward@mL:
   637                           	callstack 0
   638   000013                     leftTURN@mL:
   639                           	callstack 0
   640   000013                     rightTURN@mL:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x12
   644   000013                     	ds	1
   645   000014                     forward@mR:
   646                           	callstack 0
   647   000014                     backward@mR:
   648                           	callstack 0
   649   000014                     leftTURN@mR:
   650                           	callstack 0
   651   000014                     rightTURN@mR:
   652                           	callstack 0
   653   000014                     ___xxtofl@sign:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x13
   657   000014                     	ds	1
   658   000015                     ??_rightTURN:
   659   000015                     ??_leftTURN:
   660   000015                     ??_forward:
   661   000015                     ??_backward:
   662   000015                     ___xxtofl@exp:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x14
   666   000015                     	ds	1
   667   000016                     ___xxtofl@arg:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x15
   671   000016                     	ds	2
   672   000018                     forward@Distance_Calibration:
   673                           	callstack 0
   674   000018                     backward@Distance_Calibration:
   675                           	callstack 0
   676   000018                     leftTURN@rotation_calibration:
   677                           	callstack 0
   678   000018                     rightTURN@rotation_calibration:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x17
   682   000018                     	ds	1
   683   000019                     forward@i:
   684                           	callstack 0
   685   000019                     backward@i:
   686                           	callstack 0
   687   000019                     leftTURN@i:
   688                           	callstack 0
   689   000019                     rightTURN@i:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x18
   693   000019                     	ds	1
   694   00001A                     ?___flsub:
   695                           	callstack 0
   696   00001A                     ___flsub@b:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x19
   700   00001A                     	ds	1
   701   00001B                     forward@j:
   702                           	callstack 0
   703   00001B                     backward@j:
   704                           	callstack 0
   705   00001B                     leftTURN@j:
   706                           	callstack 0
   707   00001B                     rightTURN@j:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x1A
   711   00001B                     	ds	2
   712   00001D                     forward@max_power:
   713                           	callstack 0
   714   00001D                     backward@max_power:
   715                           	callstack 0
   716   00001D                     leftTURN@max_power:
   717                           	callstack 0
   718   00001D                     rightTURN@max_power:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x1C
   722   00001D                     	ds	1
   723   00001E                     ___flsub@a:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x1D
   727   00001E                     	ds	1
   728   00001F                     forward@delay_time:
   729                           	callstack 0
   730   00001F                     backward@delay_time:
   731                           	callstack 0
   732   00001F                     leftTURN@delay_time:
   733                           	callstack 0
   734   00001F                     rightTURN@delay_time:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x1E
   738   00001F                     	ds	3
   739   000022                     ?___fldiv:
   740                           	callstack 0
   741   000022                     ___fldiv@b:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x21
   745   000022                     	ds	4
   746   000026                     ___fldiv@a:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x25
   750   000026                     	ds	4
   751   00002A                     ??___fldiv:
   752                           
   753                           ; 1 bytes @ 0x29
   754   00002A                     	ds	4
   755   00002E                     ___fldiv@rem:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x2D
   759   00002E                     	ds	4
   760   000032                     ___fldiv@sign:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x31
   764   000032                     	ds	1
   765   000033                     ___fldiv@new_exp:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x32
   769   000033                     	ds	2
   770   000035                     ___fldiv@grs:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x34
   774   000035                     	ds	4
   775   000039                     ___fldiv@bexp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x38
   779   000039                     	ds	1
   780   00003A                     ___fldiv@aexp:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x39
   784   00003A                     	ds	1
   785   00003B                     ?___flmul:
   786                           	callstack 0
   787   00003B                     ___flmul@b:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x3A
   791   00003B                     	ds	4
   792   00003F                     ___flmul@a:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x3E
   796   00003F                     	ds	4
   797   000043                     ??___flmul:
   798                           
   799                           ; 1 bytes @ 0x42
   800   000043                     	ds	4
   801   000047                     ___flmul@sign:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x46
   805   000047                     	ds	1
   806   000048                     ___flmul@aexp:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x47
   810   000048                     	ds	1
   811   000049                     ___flmul@grs:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x48
   815   000049                     	ds	4
   816   00004D                     ___flmul@bexp:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x4C
   820   00004D                     	ds	1
   821   00004E                     ___flmul@prod:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x4D
   825   00004E                     	ds	4
   826   000052                     ___flmul@temp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x51
   830   000052                     	ds	2
   831   000054                     ?_custom_floatmodulo:
   832                           	callstack 0
   833   000054                     custom_floatmodulo@x:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x53
   837   000054                     	ds	4
   838   000058                     custom_floatmodulo@y:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x57
   842   000058                     	ds	4
   843   00005C                     ?_color_cardCheck:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x5B
   847   00005C                     	ds	2
   848   00005E                     ??_maze_search:
   849   00005E                     
   850                           ; 1 bytes @ 0x5D
   851   00005E                     	ds	2
   852   000060                     
   853                           ; 1 bytes @ 0x5F
   854 ;;
   855 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   856 ;;
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 19 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  PWMperiod       2    0        unsigned int 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels required when called: 6
   879 ;; This function calls:
   880 ;;		_initDCmotorsPWM
   881 ;;		_maze_search
   882 ;;		_pause_until_RF2_pressed
   883 ;; This function is called by:
   884 ;;		Startup code after reset
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text0
   889   003F22                     __ptext0:
   890                           	callstack 0
   891   003F22                     _main:
   892                           	callstack 25
   893   003F22                     
   894                           ;main.c: 21:     initDCmotorsPWM(PWMperiod);
   895   003F22  0E00               	movlw	0
   896   003F24  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   897   003F26  0E63               	movlw	99
   898   003F28  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   899   003F2A  ECE5  F01F         	call	_initDCmotorsPWM	;wreg free
   900   003F2E                     
   901                           ;main.c: 24:     motorL.power=0;
   902   003F2E  0E00               	movlw	0
   903   003F30  0100               	movlb	0	; () banked
   904   003F32  6FF4               	movwf	_motorL& (0+255),b
   905   003F34                     
   906                           ; BSR set to: 0
   907                           ;main.c: 25:     motorL.direction=1;
   908   003F34  0E01               	movlw	1
   909   003F36  6FF5               	movwf	(_motorL+1)& (0+255),b
   910   003F38                     
   911                           ; BSR set to: 0
   912                           ;main.c: 26:     motorL.brakemode=1;
   913   003F38  0E01               	movlw	1
   914   003F3A  6FF6               	movwf	(_motorL+2)& (0+255),b
   915   003F3C                     
   916                           ; BSR set to: 0
   917                           ;main.c: 27:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   918   003F3C  0EAA               	movlw	170
   919   003F3E  6FF9               	movwf	(_motorL+5)& (0+255),b
   920   003F40  0E0F               	movlw	15
   921   003F42  6FFA               	movwf	(_motorL+6)& (0+255),b
   922   003F44                     
   923                           ; BSR set to: 0
   924                           ;main.c: 28:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   925   003F44  0EA6               	movlw	166
   926   003F46  6FFB               	movwf	(_motorL+7)& (0+255),b
   927   003F48  0E0F               	movlw	15
   928   003F4A  6FFC               	movwf	(_motorL+8)& (0+255),b
   929   003F4C                     
   930                           ; BSR set to: 0
   931                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
   932   003F4C  0E00               	movlw	0
   933   003F4E  6FF8               	movwf	(_motorL+4)& (0+255),b
   934   003F50  0E63               	movlw	99
   935   003F52  6FF7               	movwf	(_motorL+3)& (0+255),b
   936   003F54                     
   937                           ; BSR set to: 0
   938                           ;main.c: 31:     motorR.power=0;
   939   003F54  0E00               	movlw	0
   940   003F56  6FEB               	movwf	_motorR& (0+255),b
   941   003F58                     
   942                           ; BSR set to: 0
   943                           ;main.c: 32:     motorR.direction=1;
   944   003F58  0E01               	movlw	1
   945   003F5A  6FEC               	movwf	(_motorR+1)& (0+255),b
   946   003F5C                     
   947                           ; BSR set to: 0
   948                           ;main.c: 33:     motorR.brakemode=1;
   949   003F5C  0E01               	movlw	1
   950   003F5E  6FED               	movwf	(_motorR+2)& (0+255),b
   951   003F60                     
   952                           ; BSR set to: 0
   953                           ;main.c: 34:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   954   003F60  0E25               	movlw	37
   955   003F62  6FF0               	movwf	(_motorR+5)& (0+255),b
   956   003F64  0E0F               	movlw	15
   957   003F66  6FF1               	movwf	(_motorR+6)& (0+255),b
   958   003F68                     
   959                           ; BSR set to: 0
   960                           ;main.c: 35:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   961   003F68  0E21               	movlw	33
   962   003F6A  6FF2               	movwf	(_motorR+7)& (0+255),b
   963   003F6C  0E0F               	movlw	15
   964   003F6E  6FF3               	movwf	(_motorR+8)& (0+255),b
   965   003F70                     
   966                           ; BSR set to: 0
   967                           ;main.c: 36:     motorR.PWMperiod=PWMperiod;
   968   003F70  0E00               	movlw	0
   969   003F72  6FEF               	movwf	(_motorR+4)& (0+255),b
   970   003F74  0E63               	movlw	99
   971   003F76  6FEE               	movwf	(_motorR+3)& (0+255),b
   972   003F78                     
   973                           ; BSR set to: 0
   974                           ;main.c: 42:     TRISDbits.TRISD7 = 0;
   975   003F78  9E84               	bcf	132,7,c	;volatile
   976   003F7A                     
   977                           ; BSR set to: 0
   978                           ;main.c: 43:     LATDbits.LATD7 = 0;
   979   003F7A  9E7C               	bcf	124,7,c	;volatile
   980   003F7C                     
   981                           ; BSR set to: 0
   982                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
   983   003F7C  9688               	bcf	136,3,c	;volatile
   984   003F7E                     
   985                           ; BSR set to: 0
   986                           ;main.c: 47:     LATHbits.LATH3 = 0;
   987   003F7E  9680               	bcf	128,3,c	;volatile
   988   003F80                     
   989                           ; BSR set to: 0
   990                           ;main.c: 50:     TRISFbits.TRISF2=1;
   991   003F80  8486               	bsf	134,2,c	;volatile
   992   003F82                     
   993                           ; BSR set to: 0
   994                           ;main.c: 51:     ANSELFbits.ANSELF2=0;
   995   003F82  010E               	movlb	14	; () banked
   996   003F84  95B4               	bcf	180,2,b	;volatile
   997   003F86                     
   998                           ; BSR set to: 14
   999                           ;main.c: 54:     TRISFbits.TRISF3=1;
  1000   003F86  8686               	bsf	134,3,c	;volatile
  1001   003F88                     
  1002                           ; BSR set to: 14
  1003                           ;main.c: 55:     ANSELFbits.ANSELF3=0;
  1004   003F88  97B4               	bcf	180,3,b	;volatile
  1005   003F8A                     
  1006                           ; BSR set to: 14
  1007                           ;main.c: 59:     calibration.index = 1;
  1008   003F8A  0E01               	movlw	1
  1009   003F8C  0101               	movlb	1	; () banked
  1010   003F8E  6F82               	movwf	_calibration& (0+255),b
  1011   003F90                     
  1012                           ; BSR set to: 1
  1013                           ;main.c: 61:     calibration.right_90 = 25;
  1014   003F90  0E19               	movlw	25
  1015   003F92  6F83               	movwf	(_calibration+1)& (0+255),b
  1016   003F94                     
  1017                           ; BSR set to: 1
  1018                           ;main.c: 62:     calibration.left_90 = 25;
  1019   003F94  0E19               	movlw	25
  1020   003F96  6F84               	movwf	(_calibration+2)& (0+255),b
  1021   003F98                     
  1022                           ; BSR set to: 1
  1023                           ;main.c: 64:     calibration.right_135 = 40;
  1024   003F98  0E28               	movlw	40
  1025   003F9A  6F85               	movwf	(_calibration+3)& (0+255),b
  1026   003F9C                     
  1027                           ; BSR set to: 1
  1028                           ;main.c: 65:     calibration.left_135 = 40;
  1029   003F9C  0E28               	movlw	40
  1030   003F9E  6F86               	movwf	(_calibration+4)& (0+255),b
  1031   003FA0                     
  1032                           ; BSR set to: 1
  1033                           ;main.c: 67:     calibration.forward = 100;
  1034   003FA0  0E64               	movlw	100
  1035   003FA2  6F87               	movwf	(_calibration+5)& (0+255),b
  1036   003FA4                     
  1037                           ; BSR set to: 1
  1038                           ;main.c: 68:     calibration.backward = 100;
  1039   003FA4  0E64               	movlw	100
  1040   003FA6  6F88               	movwf	(_calibration+6)& (0+255),b
  1041   003FA8                     l6036:
  1042                           
  1043                           ;main.c: 74:         pause_until_RF2_pressed();
  1044   003FA8  EC69  F020         	call	_pause_until_RF2_pressed	;wreg free
  1045   003FAC                     
  1046                           ;main.c: 78:         maze_search(&calibration, &motorL, &motorR);
  1047   003FAC  0E82               	movlw	low _calibration
  1048   003FAE  0100               	movlb	0	; () banked
  1049   003FB0  6FDF               	movwf	maze_search@c& (0+255),b
  1050   003FB2  0E01               	movlw	high _calibration
  1051   003FB4  6FE0               	movwf	(maze_search@c+1)& (0+255),b
  1052   003FB6  0EF4               	movlw	low _motorL
  1053   003FB8  6FE1               	movwf	maze_search@mL& (0+255),b
  1054   003FBA  0EEB               	movlw	low _motorR
  1055   003FBC  6FE2               	movwf	maze_search@mR& (0+255),b
  1056   003FBE  ECFE  F00F         	call	_maze_search	;wreg free
  1057   003FC2  EFD4  F01F         	goto	l6036
  1058   003FC6  EF00  F000         	goto	start
  1059   003FCA                     __end_of_main:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function _pause_until_RF2_pressed *****************
  1063 ;; Defined at:
  1064 ;;		line 6 in file "calibration.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;Total ram usage:        2 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text1
  1092   0040D2                     __ptext1:
  1093                           	callstack 0
  1094   0040D2                     _pause_until_RF2_pressed:
  1095                           	callstack 30
  1096   0040D2                     l132:
  1097                           
  1098                           ;calibration.c: 9:         LATDbits.LATD7 = 1;
  1099   0040D2  8E7C               	bsf	124,7,c	;volatile
  1100   0040D4                     
  1101                           ;calibration.c: 10:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1102   0040D4  0E09               	movlw	9
  1103   0040D6  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1104   0040D8  0E1E               	movlw	30
  1105   0040DA  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1106   0040DC  0EE4               	movlw	228
  1107   0040DE                     u7367:
  1108   0040DE  2EE8               	decfsz	wreg,f,c
  1109   0040E0  D7FE               	bra	u7367
  1110   0040E2  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1111   0040E4  D7FC               	bra	u7367
  1112   0040E6  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1113   0040E8  D7FA               	bra	u7367
  1114   0040EA  D000               	nop2	
  1115   0040EC                     
  1116                           ;calibration.c: 11:         LATDbits.LATD7 = 0;
  1117   0040EC  9E7C               	bcf	124,7,c	;volatile
  1118                           
  1119                           ;calibration.c: 12:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1120   0040EE  0E09               	movlw	9
  1121   0040F0  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1122   0040F2  0E1E               	movlw	30
  1123   0040F4  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1124   0040F6  0EE4               	movlw	228
  1125   0040F8                     u7377:
  1126   0040F8  2EE8               	decfsz	wreg,f,c
  1127   0040FA  D7FE               	bra	u7377
  1128   0040FC  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1129   0040FE  D7FC               	bra	u7377
  1130   004100  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1131   004102  D7FA               	bra	u7377
  1132   004104  D000               	nop2	
  1133   004106                     
  1134                           ;calibration.c: 14:         if(!PORTFbits.RF2){
  1135   004106  B48E               	btfsc	142,2,c	;volatile
  1136   004108  EF88  F020         	goto	u4601
  1137   00410C  EF8A  F020         	goto	u4600
  1138   004110                     u4601:
  1139   004110  EF69  F020         	goto	l132
  1140   004114                     u4600:
  1141   004114                     
  1142                           ;calibration.c: 15:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1143   004114  0E11               	movlw	17
  1144   004116  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1145   004118  0E3C               	movlw	60
  1146   00411A  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1147   00411C  0ECB               	movlw	203
  1148   00411E                     u7387:
  1149   00411E  2EE8               	decfsz	wreg,f,c
  1150   004120  D7FE               	bra	u7387
  1151   004122  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1152   004124  D7FC               	bra	u7387
  1153   004126  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1154   004128  D7FA               	bra	u7387
  1155   00412A  0000               	nop	
  1156   00412C                     
  1157                           ;calibration.c: 16:         LATDbits.LATD7 = 0;
  1158   00412C  9E7C               	bcf	124,7,c	;volatile
  1159   00412E  0012               	return		;funcret
  1160   004130                     __end_of_pause_until_RF2_pressed:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _maze_search *****************
  1164 ;; Defined at:
  1165 ;;		line 8 in file "pathfinder_file.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  c               2  127[BANK0 ] PTR struct calibration_s
  1168 ;;		 -> calibration(7), 
  1169 ;;  mL              1  129[BANK0 ] PTR struct DC_motor
  1170 ;;		 -> motorL(9), 
  1171 ;;  mR              1  130[BANK0 ] PTR struct DC_motor
  1172 ;;		 -> motorR(9), 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1184 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;      Totals:         2       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1188 ;;Total ram usage:        8 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 5
  1191 ;; This function calls:
  1192 ;;		___awdiv
  1193 ;;		_backward
  1194 ;;		_color_cardCheck
  1195 ;;		_color_click_init
  1196 ;;		_forward
  1197 ;;		_leftTURN
  1198 ;;		_rightTURN
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text2
  1205   001FFC                     __ptext2:
  1206                           	callstack 0
  1207   001FFC                     _maze_search:
  1208                           	callstack 25
  1209   001FFC                     
  1210                           ;pathfinder_file.c: 9:     color_click_init();
  1211   001FFC  EC7C  F021         	call	_color_click_init	;wreg free
  1212   002000                     l5778:
  1213                           
  1214                           ;pathfinder_file.c: 12:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1215   002000  0E29               	movlw	41
  1216   002002  6E5F               	movwf	(??_maze_search+1)^0,c
  1217   002004  0E96               	movlw	150
  1218   002006  6E5E               	movwf	??_maze_search^0,c
  1219   002008  0E7F               	movlw	127
  1220   00200A                     u7397:
  1221   00200A  2EE8               	decfsz	wreg,f,c
  1222   00200C  D7FE               	bra	u7397
  1223   00200E  2E5E               	decfsz	??_maze_search^0,f,c
  1224   002010  D7FC               	bra	u7397
  1225   002012  2E5F               	decfsz	(??_maze_search+1)^0,f,c
  1226   002014  D7FA               	bra	u7397
  1227   002016  0000               	nop	
  1228   002018                     
  1229                           ;pathfinder_file.c: 13:         LATHbits.LATH3 = 1;
  1230   002018  8680               	bsf	128,3,c	;volatile
  1231   00201A                     
  1232                           ;pathfinder_file.c: 14:         LATDbits.LATD7 = 1;
  1233   00201A  8E7C               	bsf	124,7,c	;volatile
  1234   00201C                     
  1235                           ;pathfinder_file.c: 16:         forward(c->forward, mL, mR);
  1236   00201C  C0E1  F013         	movff	maze_search@mL,forward@mL
  1237   002020  C0E2  F014         	movff	maze_search@mR,forward@mR
  1238   002024  0100               	movlb	0	; () banked
  1239   002026  EE20 F005          	lfsr	2,5
  1240   00202A  51DF               	movf	maze_search@c& (0+255),w,b
  1241   00202C  26D9               	addwf	fsr2l,f,c
  1242   00202E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1243   002030  22DA               	addwfc	fsr2h,f,c
  1244   002032  50DF               	movf	indf2,w,c
  1245   002034  ECA3  F019         	call	_forward
  1246   002038                     
  1247                           ;pathfinder_file.c: 17:         Forward_Count++;
  1248   002038  0100               	movlb	0	; () banked
  1249   00203A  2BE5               	incf	_Forward_Count& (0+255),f,b
  1250   00203C                     
  1251                           ; BSR set to: 0
  1252                           ;pathfinder_file.c: 18:         Color_Value = color_cardCheck();
  1253   00203C  EC01  F007         	call	_color_cardCheck	;wreg free
  1254   002040  C05C  F0E3         	movff	?_color_cardCheck,_Color_Value
  1255   002044  C05D  F0E4         	movff	?_color_cardCheck+1,_Color_Value+1
  1256   002048                     
  1257                           ;pathfinder_file.c: 20:         LATHbits.LATH3 = 0;
  1258   002048  9680               	bcf	128,3,c	;volatile
  1259   00204A                     
  1260                           ;pathfinder_file.c: 21:         LATDbits.LATD7 = 0;
  1261   00204A  9E7C               	bcf	124,7,c	;volatile
  1262   00204C                     
  1263                           ;pathfinder_file.c: 24:         if(Color_Value != 0){
  1264   00204C  0100               	movlb	0	; () banked
  1265   00204E  51E3               	movf	_Color_Value& (0+255),w,b
  1266   002050  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1267   002052  B4D8               	btfsc	status,2,c
  1268   002054  EF2E  F010         	goto	u7041
  1269   002058  EF30  F010         	goto	u7040
  1270   00205C                     u7041:
  1271   00205C  EF00  F010         	goto	l5778
  1272   002060                     u7040:
  1273   002060                     
  1274                           ; BSR set to: 0
  1275                           ;pathfinder_file.c: 26:             Operation_History[Operation_Count] = Forward_Count +
      +                           10;
  1276   002060  0E3C               	movlw	low _Operation_History
  1277   002062  25E6               	addwf	_Operation_Count& (0+255),w,b
  1278   002064  6ED9               	movwf	fsr2l,c
  1279   002066  6ADA               	clrf	fsr2h,c
  1280   002068  0E01               	movlw	high _Operation_History
  1281   00206A  22DA               	addwfc	fsr2h,f,c
  1282   00206C  51E5               	movf	_Forward_Count& (0+255),w,b
  1283   00206E  0F0A               	addlw	10
  1284   002070  6EDF               	movwf	indf2,c
  1285   002072                     
  1286                           ; BSR set to: 0
  1287                           ;pathfinder_file.c: 27:             Forward_Count = 0;
  1288   002072  0E00               	movlw	0
  1289   002074  6FE5               	movwf	_Forward_Count& (0+255),b
  1290   002076                     
  1291                           ; BSR set to: 0
  1292                           ;pathfinder_file.c: 28:             Operation_Count++;
  1293   002076  2BE6               	incf	_Operation_Count& (0+255),f,b
  1294   002078                     
  1295                           ; BSR set to: 0
  1296                           ;pathfinder_file.c: 30:             if(Color_Value == 1){
  1297   002078  05E3               	decf	_Color_Value& (0+255),w,b
  1298   00207A  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1299   00207C  A4D8               	btfss	status,2,c
  1300   00207E  EF43  F010         	goto	u7051
  1301   002082  EF45  F010         	goto	u7050
  1302   002086                     u7051:
  1303   002086  EF79  F010         	goto	l5814
  1304   00208A                     u7050:
  1305   00208A                     
  1306                           ; BSR set to: 0
  1307                           ;pathfinder_file.c: 31:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1308   00208A  0E3C               	movlw	low _Operation_History
  1309   00208C  25E6               	addwf	_Operation_Count& (0+255),w,b
  1310   00208E  6ED9               	movwf	fsr2l,c
  1311   002090  6ADA               	clrf	fsr2h,c
  1312   002092  0E01               	movlw	high _Operation_History
  1313   002094  22DA               	addwfc	fsr2h,f,c
  1314   002096  C0E3  FFDF         	movff	_Color_Value,indf2
  1315   00209A                     
  1316                           ; BSR set to: 0
  1317                           ;pathfinder_file.c: 32:                 Operation_Count++;
  1318   00209A  2BE6               	incf	_Operation_Count& (0+255),f,b
  1319   00209C                     
  1320                           ; BSR set to: 0
  1321                           ;pathfinder_file.c: 33:                 backward(c->backward/2, mL, mR);
  1322   00209C  EE20 F006          	lfsr	2,6
  1323   0020A0  51DF               	movf	maze_search@c& (0+255),w,b
  1324   0020A2  26D9               	addwf	fsr2l,f,c
  1325   0020A4  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1326   0020A6  22DA               	addwfc	fsr2h,f,c
  1327   0020A8  50DF               	movf	indf2,w,c
  1328   0020AA  6E5E               	movwf	??_maze_search^0,c
  1329   0020AC  505E               	movf	??_maze_search^0,w,c
  1330   0020AE  6E01               	movwf	___awdiv@dividend^0,c
  1331   0020B0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1332   0020B2  0E00               	movlw	0
  1333   0020B4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1334   0020B6  0E02               	movlw	2
  1335   0020B8  6E03               	movwf	___awdiv@divisor^0,c
  1336   0020BA  ECDA  F01E         	call	___awdiv	;wreg free
  1337   0020BE  5001               	movf	?___awdiv^0,w,c
  1338   0020C0  0101               	movlb	1	; () banked
  1339   0020C2  6F8A               	movwf	_maze_search$2703& (0+255),b
  1340   0020C4                     
  1341                           ; BSR set to: 1
  1342                           ;pathfinder_file.c: 33:                 backward(c->backward/2, mL, mR);
  1343   0020C4  C0E1  F013         	movff	maze_search@mL,backward@mL
  1344   0020C8  C0E2  F014         	movff	maze_search@mR,backward@mR
  1345   0020CC  518A               	movf	_maze_search$2703& (0+255),w,b
  1346   0020CE  ECE1  F01B         	call	_backward
  1347   0020D2                     
  1348                           ;pathfinder_file.c: 34:                 rightTURN(c->right_90, mL, mR);
  1349   0020D2  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1350   0020D6  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1351   0020DA  0100               	movlb	0	; () banked
  1352   0020DC  EE20 F001          	lfsr	2,1
  1353   0020E0  51DF               	movf	maze_search@c& (0+255),w,b
  1354   0020E2  26D9               	addwf	fsr2l,f,c
  1355   0020E4  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1356   0020E6  22DA               	addwfc	fsr2h,f,c
  1357   0020E8  50DF               	movf	indf2,w,c
  1358   0020EA  EC63  F01A         	call	_rightTURN
  1359                           
  1360                           ;pathfinder_file.c: 35:             }
  1361   0020EE  EF00  F010         	goto	l5778
  1362   0020F2                     l5814:
  1363                           
  1364                           ; BSR set to: 0
  1365   0020F2  0E02               	movlw	2
  1366   0020F4  19E3               	xorwf	_Color_Value& (0+255),w,b
  1367   0020F6  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1368   0020F8  A4D8               	btfss	status,2,c
  1369   0020FA  EF81  F010         	goto	u7061
  1370   0020FE  EF83  F010         	goto	u7060
  1371   002102                     u7061:
  1372   002102  EFB7  F010         	goto	l5826
  1373   002106                     u7060:
  1374   002106                     
  1375                           ; BSR set to: 0
  1376                           ;pathfinder_file.c: 38:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1377   002106  0E3C               	movlw	low _Operation_History
  1378   002108  25E6               	addwf	_Operation_Count& (0+255),w,b
  1379   00210A  6ED9               	movwf	fsr2l,c
  1380   00210C  6ADA               	clrf	fsr2h,c
  1381   00210E  0E01               	movlw	high _Operation_History
  1382   002110  22DA               	addwfc	fsr2h,f,c
  1383   002112  C0E3  FFDF         	movff	_Color_Value,indf2
  1384   002116                     
  1385                           ; BSR set to: 0
  1386                           ;pathfinder_file.c: 39:                 Operation_Count++;
  1387   002116  2BE6               	incf	_Operation_Count& (0+255),f,b
  1388   002118                     
  1389                           ; BSR set to: 0
  1390                           ;pathfinder_file.c: 40:                 backward(c->backward/2, mL, mR);
  1391   002118  EE20 F006          	lfsr	2,6
  1392   00211C  51DF               	movf	maze_search@c& (0+255),w,b
  1393   00211E  26D9               	addwf	fsr2l,f,c
  1394   002120  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1395   002122  22DA               	addwfc	fsr2h,f,c
  1396   002124  50DF               	movf	indf2,w,c
  1397   002126  6E5E               	movwf	??_maze_search^0,c
  1398   002128  505E               	movf	??_maze_search^0,w,c
  1399   00212A  6E01               	movwf	___awdiv@dividend^0,c
  1400   00212C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1401   00212E  0E00               	movlw	0
  1402   002130  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1403   002132  0E02               	movlw	2
  1404   002134  6E03               	movwf	___awdiv@divisor^0,c
  1405   002136  ECDA  F01E         	call	___awdiv	;wreg free
  1406   00213A  5001               	movf	?___awdiv^0,w,c
  1407   00213C  0101               	movlb	1	; () banked
  1408   00213E  6F8A               	movwf	_maze_search$2703& (0+255),b
  1409   002140                     
  1410                           ; BSR set to: 1
  1411                           ;pathfinder_file.c: 40:                 backward(c->backward/2, mL, mR);
  1412   002140  C0E1  F013         	movff	maze_search@mL,backward@mL
  1413   002144  C0E2  F014         	movff	maze_search@mR,backward@mR
  1414   002148  518A               	movf	_maze_search$2703& (0+255),w,b
  1415   00214A  ECE1  F01B         	call	_backward
  1416   00214E                     
  1417                           ;pathfinder_file.c: 41:                 leftTURN(c->left_90, mL, mR);
  1418   00214E  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1419   002152  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1420   002156  0100               	movlb	0	; () banked
  1421   002158  EE20 F002          	lfsr	2,2
  1422   00215C  51DF               	movf	maze_search@c& (0+255),w,b
  1423   00215E  26D9               	addwf	fsr2l,f,c
  1424   002160  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1425   002162  22DA               	addwfc	fsr2h,f,c
  1426   002164  50DF               	movf	indf2,w,c
  1427   002166  EC22  F01B         	call	_leftTURN
  1428                           
  1429                           ;pathfinder_file.c: 42:             }
  1430   00216A  EF00  F010         	goto	l5778
  1431   00216E                     l5826:
  1432                           
  1433                           ; BSR set to: 0
  1434   00216E  0E03               	movlw	3
  1435   002170  19E3               	xorwf	_Color_Value& (0+255),w,b
  1436   002172  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1437   002174  A4D8               	btfss	status,2,c
  1438   002176  EFBF  F010         	goto	u7071
  1439   00217A  EFC1  F010         	goto	u7070
  1440   00217E                     u7071:
  1441   00217E  EF03  F011         	goto	l5840
  1442   002182                     u7070:
  1443   002182                     
  1444                           ; BSR set to: 0
  1445                           ;pathfinder_file.c: 45:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1446   002182  0E3C               	movlw	low _Operation_History
  1447   002184  25E6               	addwf	_Operation_Count& (0+255),w,b
  1448   002186  6ED9               	movwf	fsr2l,c
  1449   002188  6ADA               	clrf	fsr2h,c
  1450   00218A  0E01               	movlw	high _Operation_History
  1451   00218C  22DA               	addwfc	fsr2h,f,c
  1452   00218E  C0E3  FFDF         	movff	_Color_Value,indf2
  1453   002192                     
  1454                           ; BSR set to: 0
  1455                           ;pathfinder_file.c: 46:                 Operation_Count++;
  1456   002192  2BE6               	incf	_Operation_Count& (0+255),f,b
  1457   002194                     
  1458                           ; BSR set to: 0
  1459                           ;pathfinder_file.c: 47:                 backward(c->backward/2, mL, mR);
  1460   002194  EE20 F006          	lfsr	2,6
  1461   002198  51DF               	movf	maze_search@c& (0+255),w,b
  1462   00219A  26D9               	addwf	fsr2l,f,c
  1463   00219C  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1464   00219E  22DA               	addwfc	fsr2h,f,c
  1465   0021A0  50DF               	movf	indf2,w,c
  1466   0021A2  6E5E               	movwf	??_maze_search^0,c
  1467   0021A4  505E               	movf	??_maze_search^0,w,c
  1468   0021A6  6E01               	movwf	___awdiv@dividend^0,c
  1469   0021A8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1470   0021AA  0E00               	movlw	0
  1471   0021AC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1472   0021AE  0E02               	movlw	2
  1473   0021B0  6E03               	movwf	___awdiv@divisor^0,c
  1474   0021B2  ECDA  F01E         	call	___awdiv	;wreg free
  1475   0021B6  5001               	movf	?___awdiv^0,w,c
  1476   0021B8  0101               	movlb	1	; () banked
  1477   0021BA  6F8A               	movwf	_maze_search$2703& (0+255),b
  1478   0021BC                     
  1479                           ; BSR set to: 1
  1480                           ;pathfinder_file.c: 47:                 backward(c->backward/2, mL, mR);
  1481   0021BC  C0E1  F013         	movff	maze_search@mL,backward@mL
  1482   0021C0  C0E2  F014         	movff	maze_search@mR,backward@mR
  1483   0021C4  518A               	movf	_maze_search$2703& (0+255),w,b
  1484   0021C6  ECE1  F01B         	call	_backward
  1485   0021CA                     
  1486                           ;pathfinder_file.c: 48:                 rightTURN(c->right_90, mL, mR);
  1487   0021CA  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1488   0021CE  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1489   0021D2  0100               	movlb	0	; () banked
  1490   0021D4  EE20 F001          	lfsr	2,1
  1491   0021D8  51DF               	movf	maze_search@c& (0+255),w,b
  1492   0021DA  26D9               	addwf	fsr2l,f,c
  1493   0021DC  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1494   0021DE  22DA               	addwfc	fsr2h,f,c
  1495   0021E0  50DF               	movf	indf2,w,c
  1496   0021E2  EC63  F01A         	call	_rightTURN
  1497   0021E6                     
  1498                           ;pathfinder_file.c: 49:                 rightTURN(c->right_90, mL, mR);
  1499   0021E6  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1500   0021EA  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1501   0021EE  0100               	movlb	0	; () banked
  1502   0021F0  EE20 F001          	lfsr	2,1
  1503   0021F4  51DF               	movf	maze_search@c& (0+255),w,b
  1504   0021F6  26D9               	addwf	fsr2l,f,c
  1505   0021F8  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1506   0021FA  22DA               	addwfc	fsr2h,f,c
  1507   0021FC  50DF               	movf	indf2,w,c
  1508   0021FE  EC63  F01A         	call	_rightTURN
  1509                           
  1510                           ;pathfinder_file.c: 50:             }
  1511   002202  EF00  F010         	goto	l5778
  1512   002206                     l5840:
  1513                           
  1514                           ; BSR set to: 0
  1515   002206  0E04               	movlw	4
  1516   002208  19E3               	xorwf	_Color_Value& (0+255),w,b
  1517   00220A  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1518   00220C  A4D8               	btfss	status,2,c
  1519   00220E  EF0B  F011         	goto	u7081
  1520   002212  EF0D  F011         	goto	u7080
  1521   002216                     u7081:
  1522   002216  EF4F  F011         	goto	l5854
  1523   00221A                     u7080:
  1524   00221A                     
  1525                           ; BSR set to: 0
  1526                           ;pathfinder_file.c: 53:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1527   00221A  0E3C               	movlw	low _Operation_History
  1528   00221C  25E6               	addwf	_Operation_Count& (0+255),w,b
  1529   00221E  6ED9               	movwf	fsr2l,c
  1530   002220  6ADA               	clrf	fsr2h,c
  1531   002222  0E01               	movlw	high _Operation_History
  1532   002224  22DA               	addwfc	fsr2h,f,c
  1533   002226  C0E3  FFDF         	movff	_Color_Value,indf2
  1534   00222A                     
  1535                           ; BSR set to: 0
  1536                           ;pathfinder_file.c: 54:                 Operation_Count++;
  1537   00222A  2BE6               	incf	_Operation_Count& (0+255),f,b
  1538   00222C                     
  1539                           ; BSR set to: 0
  1540                           ;pathfinder_file.c: 55:                 backward(c->backward/2, mL, mR);
  1541   00222C  EE20 F006          	lfsr	2,6
  1542   002230  51DF               	movf	maze_search@c& (0+255),w,b
  1543   002232  26D9               	addwf	fsr2l,f,c
  1544   002234  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1545   002236  22DA               	addwfc	fsr2h,f,c
  1546   002238  50DF               	movf	indf2,w,c
  1547   00223A  6E5E               	movwf	??_maze_search^0,c
  1548   00223C  505E               	movf	??_maze_search^0,w,c
  1549   00223E  6E01               	movwf	___awdiv@dividend^0,c
  1550   002240  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1551   002242  0E00               	movlw	0
  1552   002244  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1553   002246  0E02               	movlw	2
  1554   002248  6E03               	movwf	___awdiv@divisor^0,c
  1555   00224A  ECDA  F01E         	call	___awdiv	;wreg free
  1556   00224E  5001               	movf	?___awdiv^0,w,c
  1557   002250  0101               	movlb	1	; () banked
  1558   002252  6F8A               	movwf	_maze_search$2703& (0+255),b
  1559   002254                     
  1560                           ; BSR set to: 1
  1561                           ;pathfinder_file.c: 55:                 backward(c->backward/2, mL, mR);
  1562   002254  C0E1  F013         	movff	maze_search@mL,backward@mL
  1563   002258  C0E2  F014         	movff	maze_search@mR,backward@mR
  1564   00225C  518A               	movf	_maze_search$2703& (0+255),w,b
  1565   00225E  ECE1  F01B         	call	_backward
  1566   002262                     
  1567                           ;pathfinder_file.c: 56:                 backward(c->backward, mL, mR);
  1568   002262  C0E1  F013         	movff	maze_search@mL,backward@mL
  1569   002266  C0E2  F014         	movff	maze_search@mR,backward@mR
  1570   00226A  0100               	movlb	0	; () banked
  1571   00226C  EE20 F006          	lfsr	2,6
  1572   002270  51DF               	movf	maze_search@c& (0+255),w,b
  1573   002272  26D9               	addwf	fsr2l,f,c
  1574   002274  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1575   002276  22DA               	addwfc	fsr2h,f,c
  1576   002278  50DF               	movf	indf2,w,c
  1577   00227A  ECE1  F01B         	call	_backward
  1578   00227E                     
  1579                           ;pathfinder_file.c: 57:                 rightTURN(c->right_90, mL, mR);
  1580   00227E  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1581   002282  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1582   002286  0100               	movlb	0	; () banked
  1583   002288  EE20 F001          	lfsr	2,1
  1584   00228C  51DF               	movf	maze_search@c& (0+255),w,b
  1585   00228E  26D9               	addwf	fsr2l,f,c
  1586   002290  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1587   002292  22DA               	addwfc	fsr2h,f,c
  1588   002294  50DF               	movf	indf2,w,c
  1589   002296  EC63  F01A         	call	_rightTURN
  1590                           
  1591                           ;pathfinder_file.c: 58:             }
  1592   00229A  EF00  F010         	goto	l5778
  1593   00229E                     l5854:
  1594                           
  1595                           ; BSR set to: 0
  1596   00229E  0E05               	movlw	5
  1597   0022A0  19E3               	xorwf	_Color_Value& (0+255),w,b
  1598   0022A2  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1599   0022A4  A4D8               	btfss	status,2,c
  1600   0022A6  EF57  F011         	goto	u7091
  1601   0022AA  EF59  F011         	goto	u7090
  1602   0022AE                     u7091:
  1603   0022AE  EF9B  F011         	goto	l5868
  1604   0022B2                     u7090:
  1605   0022B2                     
  1606                           ; BSR set to: 0
  1607                           ;pathfinder_file.c: 61:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1608   0022B2  0E3C               	movlw	low _Operation_History
  1609   0022B4  25E6               	addwf	_Operation_Count& (0+255),w,b
  1610   0022B6  6ED9               	movwf	fsr2l,c
  1611   0022B8  6ADA               	clrf	fsr2h,c
  1612   0022BA  0E01               	movlw	high _Operation_History
  1613   0022BC  22DA               	addwfc	fsr2h,f,c
  1614   0022BE  C0E3  FFDF         	movff	_Color_Value,indf2
  1615   0022C2                     
  1616                           ; BSR set to: 0
  1617                           ;pathfinder_file.c: 62:                 Operation_Count++;
  1618   0022C2  2BE6               	incf	_Operation_Count& (0+255),f,b
  1619   0022C4                     
  1620                           ; BSR set to: 0
  1621                           ;pathfinder_file.c: 63:                 backward(c->backward/2, mL, mR);
  1622   0022C4  EE20 F006          	lfsr	2,6
  1623   0022C8  51DF               	movf	maze_search@c& (0+255),w,b
  1624   0022CA  26D9               	addwf	fsr2l,f,c
  1625   0022CC  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1626   0022CE  22DA               	addwfc	fsr2h,f,c
  1627   0022D0  50DF               	movf	indf2,w,c
  1628   0022D2  6E5E               	movwf	??_maze_search^0,c
  1629   0022D4  505E               	movf	??_maze_search^0,w,c
  1630   0022D6  6E01               	movwf	___awdiv@dividend^0,c
  1631   0022D8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1632   0022DA  0E00               	movlw	0
  1633   0022DC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1634   0022DE  0E02               	movlw	2
  1635   0022E0  6E03               	movwf	___awdiv@divisor^0,c
  1636   0022E2  ECDA  F01E         	call	___awdiv	;wreg free
  1637   0022E6  5001               	movf	?___awdiv^0,w,c
  1638   0022E8  0101               	movlb	1	; () banked
  1639   0022EA  6F8A               	movwf	_maze_search$2703& (0+255),b
  1640   0022EC                     
  1641                           ; BSR set to: 1
  1642                           ;pathfinder_file.c: 63:                 backward(c->backward/2, mL, mR);
  1643   0022EC  C0E1  F013         	movff	maze_search@mL,backward@mL
  1644   0022F0  C0E2  F014         	movff	maze_search@mR,backward@mR
  1645   0022F4  518A               	movf	_maze_search$2703& (0+255),w,b
  1646   0022F6  ECE1  F01B         	call	_backward
  1647   0022FA                     
  1648                           ;pathfinder_file.c: 64:                 backward(c->backward, mL, mR);
  1649   0022FA  C0E1  F013         	movff	maze_search@mL,backward@mL
  1650   0022FE  C0E2  F014         	movff	maze_search@mR,backward@mR
  1651   002302  0100               	movlb	0	; () banked
  1652   002304  EE20 F006          	lfsr	2,6
  1653   002308  51DF               	movf	maze_search@c& (0+255),w,b
  1654   00230A  26D9               	addwf	fsr2l,f,c
  1655   00230C  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1656   00230E  22DA               	addwfc	fsr2h,f,c
  1657   002310  50DF               	movf	indf2,w,c
  1658   002312  ECE1  F01B         	call	_backward
  1659   002316                     
  1660                           ;pathfinder_file.c: 65:                 leftTURN(c->left_90, mL, mR);
  1661   002316  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1662   00231A  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1663   00231E  0100               	movlb	0	; () banked
  1664   002320  EE20 F002          	lfsr	2,2
  1665   002324  51DF               	movf	maze_search@c& (0+255),w,b
  1666   002326  26D9               	addwf	fsr2l,f,c
  1667   002328  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1668   00232A  22DA               	addwfc	fsr2h,f,c
  1669   00232C  50DF               	movf	indf2,w,c
  1670   00232E  EC22  F01B         	call	_leftTURN
  1671                           
  1672                           ;pathfinder_file.c: 66:             }
  1673   002332  EF00  F010         	goto	l5778
  1674   002336                     l5868:
  1675                           
  1676                           ; BSR set to: 0
  1677   002336  0E06               	movlw	6
  1678   002338  19E3               	xorwf	_Color_Value& (0+255),w,b
  1679   00233A  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1680   00233C  A4D8               	btfss	status,2,c
  1681   00233E  EFA3  F011         	goto	u7101
  1682   002342  EFA5  F011         	goto	u7100
  1683   002346                     u7101:
  1684   002346  EFD9  F011         	goto	l5880
  1685   00234A                     u7100:
  1686   00234A                     
  1687                           ; BSR set to: 0
  1688                           ;pathfinder_file.c: 69:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1689   00234A  0E3C               	movlw	low _Operation_History
  1690   00234C  25E6               	addwf	_Operation_Count& (0+255),w,b
  1691   00234E  6ED9               	movwf	fsr2l,c
  1692   002350  6ADA               	clrf	fsr2h,c
  1693   002352  0E01               	movlw	high _Operation_History
  1694   002354  22DA               	addwfc	fsr2h,f,c
  1695   002356  C0E3  FFDF         	movff	_Color_Value,indf2
  1696   00235A                     
  1697                           ; BSR set to: 0
  1698                           ;pathfinder_file.c: 70:                 Operation_Count++;
  1699   00235A  2BE6               	incf	_Operation_Count& (0+255),f,b
  1700   00235C                     
  1701                           ; BSR set to: 0
  1702                           ;pathfinder_file.c: 71:                 backward(c->backward/2, mL, mR);
  1703   00235C  EE20 F006          	lfsr	2,6
  1704   002360  51DF               	movf	maze_search@c& (0+255),w,b
  1705   002362  26D9               	addwf	fsr2l,f,c
  1706   002364  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1707   002366  22DA               	addwfc	fsr2h,f,c
  1708   002368  50DF               	movf	indf2,w,c
  1709   00236A  6E5E               	movwf	??_maze_search^0,c
  1710   00236C  505E               	movf	??_maze_search^0,w,c
  1711   00236E  6E01               	movwf	___awdiv@dividend^0,c
  1712   002370  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1713   002372  0E00               	movlw	0
  1714   002374  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1715   002376  0E02               	movlw	2
  1716   002378  6E03               	movwf	___awdiv@divisor^0,c
  1717   00237A  ECDA  F01E         	call	___awdiv	;wreg free
  1718   00237E  5001               	movf	?___awdiv^0,w,c
  1719   002380  0101               	movlb	1	; () banked
  1720   002382  6F8A               	movwf	_maze_search$2703& (0+255),b
  1721   002384                     
  1722                           ; BSR set to: 1
  1723                           ;pathfinder_file.c: 71:                 backward(c->backward/2, mL, mR);
  1724   002384  C0E1  F013         	movff	maze_search@mL,backward@mL
  1725   002388  C0E2  F014         	movff	maze_search@mR,backward@mR
  1726   00238C  518A               	movf	_maze_search$2703& (0+255),w,b
  1727   00238E  ECE1  F01B         	call	_backward
  1728   002392                     
  1729                           ;pathfinder_file.c: 72:                 rightTURN(c->right_135, mL, mR);
  1730   002392  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1731   002396  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1732   00239A  0100               	movlb	0	; () banked
  1733   00239C  EE20 F003          	lfsr	2,3
  1734   0023A0  51DF               	movf	maze_search@c& (0+255),w,b
  1735   0023A2  26D9               	addwf	fsr2l,f,c
  1736   0023A4  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1737   0023A6  22DA               	addwfc	fsr2h,f,c
  1738   0023A8  50DF               	movf	indf2,w,c
  1739   0023AA  EC63  F01A         	call	_rightTURN
  1740                           
  1741                           ;pathfinder_file.c: 73:             }
  1742   0023AE  EF00  F010         	goto	l5778
  1743   0023B2                     l5880:
  1744                           
  1745                           ; BSR set to: 0
  1746   0023B2  0E07               	movlw	7
  1747   0023B4  19E3               	xorwf	_Color_Value& (0+255),w,b
  1748   0023B6  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1749   0023B8  A4D8               	btfss	status,2,c
  1750   0023BA  EFE1  F011         	goto	u7111
  1751   0023BE  EFE3  F011         	goto	u7110
  1752   0023C2                     u7111:
  1753   0023C2  EF17  F012         	goto	l5892
  1754   0023C6                     u7110:
  1755   0023C6                     
  1756                           ; BSR set to: 0
  1757                           ;pathfinder_file.c: 76:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1758   0023C6  0E3C               	movlw	low _Operation_History
  1759   0023C8  25E6               	addwf	_Operation_Count& (0+255),w,b
  1760   0023CA  6ED9               	movwf	fsr2l,c
  1761   0023CC  6ADA               	clrf	fsr2h,c
  1762   0023CE  0E01               	movlw	high _Operation_History
  1763   0023D0  22DA               	addwfc	fsr2h,f,c
  1764   0023D2  C0E3  FFDF         	movff	_Color_Value,indf2
  1765   0023D6                     
  1766                           ; BSR set to: 0
  1767                           ;pathfinder_file.c: 77:                 Operation_Count++;
  1768   0023D6  2BE6               	incf	_Operation_Count& (0+255),f,b
  1769   0023D8                     
  1770                           ; BSR set to: 0
  1771                           ;pathfinder_file.c: 78:                 backward(c->backward/2, mL, mR);
  1772   0023D8  EE20 F006          	lfsr	2,6
  1773   0023DC  51DF               	movf	maze_search@c& (0+255),w,b
  1774   0023DE  26D9               	addwf	fsr2l,f,c
  1775   0023E0  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1776   0023E2  22DA               	addwfc	fsr2h,f,c
  1777   0023E4  50DF               	movf	indf2,w,c
  1778   0023E6  6E5E               	movwf	??_maze_search^0,c
  1779   0023E8  505E               	movf	??_maze_search^0,w,c
  1780   0023EA  6E01               	movwf	___awdiv@dividend^0,c
  1781   0023EC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1782   0023EE  0E00               	movlw	0
  1783   0023F0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1784   0023F2  0E02               	movlw	2
  1785   0023F4  6E03               	movwf	___awdiv@divisor^0,c
  1786   0023F6  ECDA  F01E         	call	___awdiv	;wreg free
  1787   0023FA  5001               	movf	?___awdiv^0,w,c
  1788   0023FC  0101               	movlb	1	; () banked
  1789   0023FE  6F8A               	movwf	_maze_search$2703& (0+255),b
  1790   002400                     
  1791                           ; BSR set to: 1
  1792                           ;pathfinder_file.c: 78:                 backward(c->backward/2, mL, mR);
  1793   002400  C0E1  F013         	movff	maze_search@mL,backward@mL
  1794   002404  C0E2  F014         	movff	maze_search@mR,backward@mR
  1795   002408  518A               	movf	_maze_search$2703& (0+255),w,b
  1796   00240A  ECE1  F01B         	call	_backward
  1797   00240E                     
  1798                           ;pathfinder_file.c: 79:                 leftTURN(c->left_135, mL, mR);
  1799   00240E  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1800   002412  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1801   002416  0100               	movlb	0	; () banked
  1802   002418  EE20 F004          	lfsr	2,4
  1803   00241C  51DF               	movf	maze_search@c& (0+255),w,b
  1804   00241E  26D9               	addwf	fsr2l,f,c
  1805   002420  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1806   002422  22DA               	addwfc	fsr2h,f,c
  1807   002424  50DF               	movf	indf2,w,c
  1808   002426  EC22  F01B         	call	_leftTURN
  1809                           
  1810                           ;pathfinder_file.c: 80:             }
  1811   00242A  EF00  F010         	goto	l5778
  1812   00242E                     l5892:
  1813                           
  1814                           ; BSR set to: 0
  1815   00242E  0E08               	movlw	8
  1816   002430  19E3               	xorwf	_Color_Value& (0+255),w,b
  1817   002432  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1818   002434  A4D8               	btfss	status,2,c
  1819   002436  EF1F  F012         	goto	u7121
  1820   00243A  EF21  F012         	goto	u7120
  1821   00243E                     u7121:
  1822   00243E  EF84  F012         	goto	l554
  1823   002442                     u7120:
  1824   002442                     
  1825                           ; BSR set to: 0
  1826                           ;pathfinder_file.c: 84:                 backward(c->backward/2, mL, mR);
  1827   002442  EE20 F006          	lfsr	2,6
  1828   002446  51DF               	movf	maze_search@c& (0+255),w,b
  1829   002448  26D9               	addwf	fsr2l,f,c
  1830   00244A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1831   00244C  22DA               	addwfc	fsr2h,f,c
  1832   00244E  50DF               	movf	indf2,w,c
  1833   002450  6E5E               	movwf	??_maze_search^0,c
  1834   002452  505E               	movf	??_maze_search^0,w,c
  1835   002454  6E01               	movwf	___awdiv@dividend^0,c
  1836   002456  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1837   002458  0E00               	movlw	0
  1838   00245A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1839   00245C  0E02               	movlw	2
  1840   00245E  6E03               	movwf	___awdiv@divisor^0,c
  1841   002460  ECDA  F01E         	call	___awdiv	;wreg free
  1842   002464  5001               	movf	?___awdiv^0,w,c
  1843   002466  0101               	movlb	1	; () banked
  1844   002468  6F8A               	movwf	_maze_search$2703& (0+255),b
  1845   00246A                     
  1846                           ; BSR set to: 1
  1847                           ;pathfinder_file.c: 84:                 backward(c->backward/2, mL, mR);
  1848   00246A  C0E1  F013         	movff	maze_search@mL,backward@mL
  1849   00246E  C0E2  F014         	movff	maze_search@mR,backward@mR
  1850   002472  518A               	movf	_maze_search$2703& (0+255),w,b
  1851   002474  ECE1  F01B         	call	_backward
  1852   002478                     
  1853                           ;pathfinder_file.c: 86:                 rightTURN(c->right_90, mL, mR);
  1854   002478  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1855   00247C  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1856   002480  0100               	movlb	0	; () banked
  1857   002482  EE20 F001          	lfsr	2,1
  1858   002486  51DF               	movf	maze_search@c& (0+255),w,b
  1859   002488  26D9               	addwf	fsr2l,f,c
  1860   00248A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1861   00248C  22DA               	addwfc	fsr2h,f,c
  1862   00248E  50DF               	movf	indf2,w,c
  1863   002490  EC63  F01A         	call	_rightTURN
  1864   002494                     
  1865                           ;pathfinder_file.c: 87:                 rightTURN(c->right_90, mL, mR);
  1866   002494  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1867   002498  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1868   00249C  0100               	movlb	0	; () banked
  1869   00249E  EE20 F001          	lfsr	2,1
  1870   0024A2  51DF               	movf	maze_search@c& (0+255),w,b
  1871   0024A4  26D9               	addwf	fsr2l,f,c
  1872   0024A6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1873   0024A8  22DA               	addwfc	fsr2h,f,c
  1874   0024AA  50DF               	movf	indf2,w,c
  1875   0024AC  EC63  F01A         	call	_rightTURN
  1876   0024B0                     
  1877                           ;pathfinder_file.c: 88:                 backward(c->backward, mL, mR);
  1878   0024B0  C0E1  F013         	movff	maze_search@mL,backward@mL
  1879   0024B4  C0E2  F014         	movff	maze_search@mR,backward@mR
  1880   0024B8  0100               	movlb	0	; () banked
  1881   0024BA  EE20 F006          	lfsr	2,6
  1882   0024BE  51DF               	movf	maze_search@c& (0+255),w,b
  1883   0024C0  26D9               	addwf	fsr2l,f,c
  1884   0024C2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1885   0024C4  22DA               	addwfc	fsr2h,f,c
  1886   0024C6  50DF               	movf	indf2,w,c
  1887   0024C8  ECE1  F01B         	call	_backward
  1888                           
  1889                           ;pathfinder_file.c: 89:                 forward((c->forward)/2, mL, mR);
  1890   0024CC  0100               	movlb	0	; () banked
  1891   0024CE  EE20 F005          	lfsr	2,5
  1892   0024D2  51DF               	movf	maze_search@c& (0+255),w,b
  1893   0024D4  26D9               	addwf	fsr2l,f,c
  1894   0024D6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1895   0024D8  22DA               	addwfc	fsr2h,f,c
  1896   0024DA  50DF               	movf	indf2,w,c
  1897   0024DC  6E5E               	movwf	??_maze_search^0,c
  1898   0024DE  505E               	movf	??_maze_search^0,w,c
  1899   0024E0  6E01               	movwf	___awdiv@dividend^0,c
  1900   0024E2  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1901   0024E4  0E00               	movlw	0
  1902   0024E6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1903   0024E8  0E02               	movlw	2
  1904   0024EA  6E03               	movwf	___awdiv@divisor^0,c
  1905   0024EC  ECDA  F01E         	call	___awdiv	;wreg free
  1906   0024F0  5001               	movf	?___awdiv^0,w,c
  1907   0024F2  0101               	movlb	1	; () banked
  1908   0024F4  6F89               	movwf	_maze_search$2704& (0+255),b
  1909   0024F6                     
  1910                           ; BSR set to: 1
  1911                           ;pathfinder_file.c: 89:                 forward((c->forward)/2, mL, mR);
  1912   0024F6  C0E1  F013         	movff	maze_search@mL,forward@mL
  1913   0024FA  C0E2  F014         	movff	maze_search@mR,forward@mR
  1914   0024FE  5189               	movf	_maze_search$2704& (0+255),w,b
  1915   002500  ECA3  F019         	call	_forward
  1916                           
  1917                           ;pathfinder_file.c: 90:                 break;
  1918   002504  EF86  F012         	goto	l562
  1919   002508                     l554:
  1920                           
  1921                           ; BSR set to: 0
  1922   002508  EF00  F010         	goto	l5778
  1923   00250C                     l562:
  1924   00250C  0012               	return		;funcret
  1925   00250E                     __end_of_maze_search:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _rightTURN *****************
  1929 ;; Defined at:
  1930 ;;		line 244 in file "dc_motor_v1.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  rotation_cal    1    wreg     unsigned char 
  1933 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  1934 ;;		 -> motorL(9), 
  1935 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  1936 ;;		 -> motorR(9), 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  1939 ;;  j               2   26[COMRAM] int 
  1940 ;;  i               2   24[COMRAM] int 
  1941 ;;  delay_time      2   30[COMRAM] int 
  1942 ;;  max_power       2   28[COMRAM] int 
  1943 ;;  acceleration    2    0        int 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;Total ram usage:       14 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 2
  1960 ;; This function calls:
  1961 ;;		___awdiv
  1962 ;;		_delay_ms_function
  1963 ;;		_setMotorPWM
  1964 ;; This function is called by:
  1965 ;;		_maze_search
  1966 ;;		_calibration_routine
  1967 ;;		_maze_return
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text3
  1972   0034C6                     __ptext3:
  1973                           	callstack 0
  1974   0034C6                     _rightTURN:
  1975                           	callstack 27
  1976                           
  1977                           ;incstack = 0
  1978                           ;rightTURN@rotation_calibration stored from wreg
  1979   0034C6  6E18               	movwf	rightTURN@rotation_calibration^0,c
  1980   0034C8                     
  1981                           ;dc_motor_v1.c: 245:     mL->direction = 1;
  1982   0034C8  5013               	movf	rightTURN@mL^0,w,c
  1983   0034CA  6ED9               	movwf	fsr2l,c
  1984   0034CC  6ADA               	clrf	fsr2h,c
  1985   0034CE  0E01               	movlw	1
  1986   0034D0  26D9               	addwf	fsr2l,f,c
  1987   0034D2  0E01               	movlw	1
  1988   0034D4  6EDF               	movwf	indf2,c
  1989                           
  1990                           ;dc_motor_v1.c: 246:     mR->direction = 0;
  1991   0034D6  5014               	movf	rightTURN@mR^0,w,c
  1992   0034D8  6ED9               	movwf	fsr2l,c
  1993   0034DA  6ADA               	clrf	fsr2h,c
  1994   0034DC  0E01               	movlw	1
  1995   0034DE  26D9               	addwf	fsr2l,f,c
  1996   0034E0  6ADF               	clrf	indf2,c
  1997   0034E2                     
  1998                           ;dc_motor_v1.c: 248:    int max_power = 40;
  1999   0034E2  0E00               	movlw	0
  2000   0034E4  6E1E               	movwf	(rightTURN@max_power+1)^0,c
  2001   0034E6  0E28               	movlw	40
  2002   0034E8  6E1D               	movwf	rightTURN@max_power^0,c
  2003   0034EA                     
  2004                           ;dc_motor_v1.c: 250:     int delay_time = acceleration_time/max_power;
  2005   0034EA  0E00               	movlw	0
  2006   0034EC  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2007   0034EE  0E64               	movlw	100
  2008   0034F0  6E01               	movwf	___awdiv@dividend^0,c
  2009   0034F2  0E00               	movlw	0
  2010   0034F4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2011   0034F6  0E28               	movlw	40
  2012   0034F8  6E03               	movwf	___awdiv@divisor^0,c
  2013   0034FA  ECDA  F01E         	call	___awdiv	;wreg free
  2014   0034FE  C001  F01F         	movff	?___awdiv,rightTURN@delay_time
  2015   003502  C002  F020         	movff	?___awdiv+1,rightTURN@delay_time+1
  2016   003506                     
  2017                           ;dc_motor_v1.c: 253:     for(int i=0; i< max_power; i++){
  2018   003506  0E00               	movlw	0
  2019   003508  6E1A               	movwf	(rightTURN@i+1)^0,c
  2020   00350A  0E00               	movlw	0
  2021   00350C  6E19               	movwf	rightTURN@i^0,c
  2022   00350E  EFAD  F01A         	goto	l5612
  2023   003512                     l5602:
  2024                           
  2025                           ;dc_motor_v1.c: 254:         mL->power = mL->power + 1;
  2026   003512  5013               	movf	rightTURN@mL^0,w,c
  2027   003514  6ED9               	movwf	fsr2l,c
  2028   003516  6ADA               	clrf	fsr2h,c
  2029   003518  5013               	movf	rightTURN@mL^0,w,c
  2030   00351A  6EE1               	movwf	fsr1l,c
  2031   00351C  6AE2               	clrf	fsr1h,c
  2032   00351E  50E7               	movf	indf1,w,c
  2033   003520  6E15               	movwf	??_rightTURN^0,c
  2034   003522  2815               	incf	??_rightTURN^0,w,c
  2035   003524  6EDF               	movwf	indf2,c
  2036                           
  2037                           ;dc_motor_v1.c: 255:         mR->power = mR->power + 1 ;
  2038   003526  5014               	movf	rightTURN@mR^0,w,c
  2039   003528  6ED9               	movwf	fsr2l,c
  2040   00352A  6ADA               	clrf	fsr2h,c
  2041   00352C  5014               	movf	rightTURN@mR^0,w,c
  2042   00352E  6EE1               	movwf	fsr1l,c
  2043   003530  6AE2               	clrf	fsr1h,c
  2044   003532  50E7               	movf	indf1,w,c
  2045   003534  6E15               	movwf	??_rightTURN^0,c
  2046   003536  2815               	incf	??_rightTURN^0,w,c
  2047   003538  6EDF               	movwf	indf2,c
  2048   00353A                     
  2049                           ;dc_motor_v1.c: 256:         setMotorPWM(mR);
  2050   00353A  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  2051   00353E  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2052   003542                     
  2053                           ;dc_motor_v1.c: 257:         setMotorPWM(mL);
  2054   003542  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  2055   003546  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2056   00354A                     
  2057                           ;dc_motor_v1.c: 258:         delay_ms_function(delay_time);
  2058   00354A  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  2059   00354E  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  2060   003552  ECB7  F021         	call	_delay_ms_function	;wreg free
  2061   003556                     
  2062                           ;dc_motor_v1.c: 259:     }
  2063   003556  4A19               	infsnz	rightTURN@i^0,f,c
  2064   003558  2A1A               	incf	(rightTURN@i+1)^0,f,c
  2065   00355A                     l5612:
  2066   00355A  501D               	movf	rightTURN@max_power^0,w,c
  2067   00355C  5C19               	subwf	rightTURN@i^0,w,c
  2068   00355E  501A               	movf	(rightTURN@i+1)^0,w,c
  2069   003560  0A80               	xorlw	128
  2070   003562  6E15               	movwf	??_rightTURN^0,c
  2071   003564  501E               	movf	(rightTURN@max_power+1)^0,w,c
  2072   003566  0A80               	xorlw	128
  2073   003568  5815               	subwfb	??_rightTURN^0,w,c
  2074   00356A  A0D8               	btfss	status,0,c
  2075   00356C  EFBA  F01A         	goto	u6801
  2076   003570  EFBC  F01A         	goto	u6800
  2077   003574                     u6801:
  2078   003574  EF89  F01A         	goto	l5602
  2079   003578                     u6800:
  2080   003578                     
  2081                           ;dc_motor_v1.c: 262:     for(int j=0; j<rotation_calibration; j++){
  2082   003578  0E00               	movlw	0
  2083   00357A  6E1C               	movwf	(rightTURN@j+1)^0,c
  2084   00357C  0E00               	movlw	0
  2085   00357E  6E1B               	movwf	rightTURN@j^0,c
  2086   003580  EFCB  F01A         	goto	l300
  2087   003584                     l5616:
  2088                           
  2089                           ;dc_motor_v1.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2090   003584  0ED0               	movlw	208
  2091   003586  6E15               	movwf	??_rightTURN^0,c
  2092   003588  0ECA               	movlw	202
  2093   00358A                     u7407:
  2094   00358A  2EE8               	decfsz	wreg,f,c
  2095   00358C  D7FE               	bra	u7407
  2096   00358E  2E15               	decfsz	??_rightTURN^0,f,c
  2097   003590  D7FC               	bra	u7407
  2098   003592                     
  2099                           ;dc_motor_v1.c: 264:     }
  2100   003592  4A1B               	infsnz	rightTURN@j^0,f,c
  2101   003594  2A1C               	incf	(rightTURN@j+1)^0,f,c
  2102   003596                     l300:
  2103   003596  5018               	movf	rightTURN@rotation_calibration^0,w,c
  2104   003598  6E15               	movwf	??_rightTURN^0,c
  2105   00359A  6A16               	clrf	(??_rightTURN+1)^0,c
  2106   00359C  5015               	movf	??_rightTURN^0,w,c
  2107   00359E  5C1B               	subwf	rightTURN@j^0,w,c
  2108   0035A0  501C               	movf	(rightTURN@j+1)^0,w,c
  2109   0035A2  0A80               	xorlw	128
  2110   0035A4  6E17               	movwf	(??_rightTURN+2)^0,c
  2111   0035A6  5016               	movf	(??_rightTURN+1)^0,w,c
  2112   0035A8  0A80               	xorlw	128
  2113   0035AA  5817               	subwfb	(??_rightTURN+2)^0,w,c
  2114   0035AC  A0D8               	btfss	status,0,c
  2115   0035AE  EFDB  F01A         	goto	u6811
  2116   0035B2  EFDD  F01A         	goto	u6810
  2117   0035B6                     u6811:
  2118   0035B6  EFC2  F01A         	goto	l5616
  2119   0035BA                     u6810:
  2120   0035BA  EF0B  F01B         	goto	l5634
  2121   0035BE                     l5620:
  2122                           
  2123                           ;dc_motor_v1.c: 268:         if(mR->power> 0 ){
  2124   0035BE  5014               	movf	rightTURN@mR^0,w,c
  2125   0035C0  6ED9               	movwf	fsr2l,c
  2126   0035C2  6ADA               	clrf	fsr2h,c
  2127   0035C4  50DF               	movf	indf2,w,c
  2128   0035C6  B4D8               	btfsc	status,2,c
  2129   0035C8  EFE8  F01A         	goto	u6821
  2130   0035CC  EFEA  F01A         	goto	u6820
  2131   0035D0                     u6821:
  2132   0035D0  EFEE  F01A         	goto	l5624
  2133   0035D4                     u6820:
  2134   0035D4                     
  2135                           ;dc_motor_v1.c: 269:             mR->power--;
  2136   0035D4  5014               	movf	rightTURN@mR^0,w,c
  2137   0035D6  6ED9               	movwf	fsr2l,c
  2138   0035D8  6ADA               	clrf	fsr2h,c
  2139   0035DA  06DF               	decf	indf2,f,c
  2140   0035DC                     l5624:
  2141                           
  2142                           ;dc_motor_v1.c: 271:         if(mL->power> 0 ){
  2143   0035DC  5013               	movf	rightTURN@mL^0,w,c
  2144   0035DE  6ED9               	movwf	fsr2l,c
  2145   0035E0  6ADA               	clrf	fsr2h,c
  2146   0035E2  50DF               	movf	indf2,w,c
  2147   0035E4  B4D8               	btfsc	status,2,c
  2148   0035E6  EFF7  F01A         	goto	u6831
  2149   0035EA  EFF9  F01A         	goto	u6830
  2150   0035EE                     u6831:
  2151   0035EE  EFFD  F01A         	goto	l5628
  2152   0035F2                     u6830:
  2153   0035F2                     
  2154                           ;dc_motor_v1.c: 272:             mL->power--;
  2155   0035F2  5013               	movf	rightTURN@mL^0,w,c
  2156   0035F4  6ED9               	movwf	fsr2l,c
  2157   0035F6  6ADA               	clrf	fsr2h,c
  2158   0035F8  06DF               	decf	indf2,f,c
  2159   0035FA                     l5628:
  2160                           
  2161                           ;dc_motor_v1.c: 274:         setMotorPWM(mR);
  2162   0035FA  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  2163   0035FE  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2164   003602                     
  2165                           ;dc_motor_v1.c: 275:         setMotorPWM(mL);
  2166   003602  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  2167   003606  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2168   00360A                     
  2169                           ;dc_motor_v1.c: 276:         delay_ms_function(delay_time);
  2170   00360A  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  2171   00360E  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  2172   003612  ECB7  F021         	call	_delay_ms_function	;wreg free
  2173   003616                     l5634:
  2174                           
  2175                           ;dc_motor_v1.c: 267:     while(mL->power || mR->power > 0){
  2176   003616  5013               	movf	rightTURN@mL^0,w,c
  2177   003618  6ED9               	movwf	fsr2l,c
  2178   00361A  6ADA               	clrf	fsr2h,c
  2179   00361C  50DF               	movf	indf2,w,c
  2180   00361E  A4D8               	btfss	status,2,c
  2181   003620  EF14  F01B         	goto	u6841
  2182   003624  EF16  F01B         	goto	u6840
  2183   003628                     u6841:
  2184   003628  EFDF  F01A         	goto	l5620
  2185   00362C                     u6840:
  2186   00362C  5014               	movf	rightTURN@mR^0,w,c
  2187   00362E  6ED9               	movwf	fsr2l,c
  2188   003630  6ADA               	clrf	fsr2h,c
  2189   003632  50DF               	movf	indf2,w,c
  2190   003634  A4D8               	btfss	status,2,c
  2191   003636  EF1F  F01B         	goto	u6851
  2192   00363A  EF21  F01B         	goto	u6850
  2193   00363E                     u6851:
  2194   00363E  EFDF  F01A         	goto	l5620
  2195   003642                     u6850:
  2196   003642  0012               	return		;funcret
  2197   003644                     __end_of_rightTURN:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _leftTURN *****************
  2201 ;; Defined at:
  2202 ;;		line 206 in file "dc_motor_v1.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  rotation_cal    1    wreg     unsigned char 
  2205 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  2206 ;;		 -> motorL(9), 
  2207 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  2208 ;;		 -> motorR(9), 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  2211 ;;  j               2   26[COMRAM] int 
  2212 ;;  i               2   24[COMRAM] int 
  2213 ;;  delay_time      2   30[COMRAM] int 
  2214 ;;  max_power       2   28[COMRAM] int 
  2215 ;;  acceleration    2    0        int 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;Total ram usage:       14 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 2
  2232 ;; This function calls:
  2233 ;;		___awdiv
  2234 ;;		_delay_ms_function
  2235 ;;		_setMotorPWM
  2236 ;; This function is called by:
  2237 ;;		_maze_search
  2238 ;;		_calibration_routine
  2239 ;;		_maze_return
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text4
  2244   003644                     __ptext4:
  2245                           	callstack 0
  2246   003644                     _leftTURN:
  2247                           	callstack 27
  2248                           
  2249                           ;incstack = 0
  2250                           ;leftTURN@rotation_calibration stored from wreg
  2251   003644  6E18               	movwf	leftTURN@rotation_calibration^0,c
  2252   003646                     
  2253                           ;dc_motor_v1.c: 207:     mL->direction = 0;
  2254   003646  5013               	movf	leftTURN@mL^0,w,c
  2255   003648  6ED9               	movwf	fsr2l,c
  2256   00364A  6ADA               	clrf	fsr2h,c
  2257   00364C  0E01               	movlw	1
  2258   00364E  26D9               	addwf	fsr2l,f,c
  2259   003650  6ADF               	clrf	indf2,c
  2260                           
  2261                           ;dc_motor_v1.c: 208:     mR->direction = 1;
  2262   003652  5014               	movf	leftTURN@mR^0,w,c
  2263   003654  6ED9               	movwf	fsr2l,c
  2264   003656  6ADA               	clrf	fsr2h,c
  2265   003658  0E01               	movlw	1
  2266   00365A  26D9               	addwf	fsr2l,f,c
  2267   00365C  0E01               	movlw	1
  2268   00365E  6EDF               	movwf	indf2,c
  2269   003660                     
  2270                           ;dc_motor_v1.c: 210:     int max_power = 40;
  2271   003660  0E00               	movlw	0
  2272   003662  6E1E               	movwf	(leftTURN@max_power+1)^0,c
  2273   003664  0E28               	movlw	40
  2274   003666  6E1D               	movwf	leftTURN@max_power^0,c
  2275   003668                     
  2276                           ;dc_motor_v1.c: 212:     int delay_time = acceleration_time/max_power;
  2277   003668  0E00               	movlw	0
  2278   00366A  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2279   00366C  0E64               	movlw	100
  2280   00366E  6E01               	movwf	___awdiv@dividend^0,c
  2281   003670  0E00               	movlw	0
  2282   003672  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2283   003674  0E28               	movlw	40
  2284   003676  6E03               	movwf	___awdiv@divisor^0,c
  2285   003678  ECDA  F01E         	call	___awdiv	;wreg free
  2286   00367C  C001  F01F         	movff	?___awdiv,leftTURN@delay_time
  2287   003680  C002  F020         	movff	?___awdiv+1,leftTURN@delay_time+1
  2288   003684                     
  2289                           ;dc_motor_v1.c: 215:     for(int i=0; i< max_power; i++){
  2290   003684  0E00               	movlw	0
  2291   003686  6E1A               	movwf	(leftTURN@i+1)^0,c
  2292   003688  0E00               	movlw	0
  2293   00368A  6E19               	movwf	leftTURN@i^0,c
  2294   00368C  EF6C  F01B         	goto	l5658
  2295   003690                     l5648:
  2296                           
  2297                           ;dc_motor_v1.c: 216:         mL->power = mL->power + 1;
  2298   003690  5013               	movf	leftTURN@mL^0,w,c
  2299   003692  6ED9               	movwf	fsr2l,c
  2300   003694  6ADA               	clrf	fsr2h,c
  2301   003696  5013               	movf	leftTURN@mL^0,w,c
  2302   003698  6EE1               	movwf	fsr1l,c
  2303   00369A  6AE2               	clrf	fsr1h,c
  2304   00369C  50E7               	movf	indf1,w,c
  2305   00369E  6E15               	movwf	??_leftTURN^0,c
  2306   0036A0  2815               	incf	??_leftTURN^0,w,c
  2307   0036A2  6EDF               	movwf	indf2,c
  2308                           
  2309                           ;dc_motor_v1.c: 217:         mR->power = mR->power + 1 ;
  2310   0036A4  5014               	movf	leftTURN@mR^0,w,c
  2311   0036A6  6ED9               	movwf	fsr2l,c
  2312   0036A8  6ADA               	clrf	fsr2h,c
  2313   0036AA  5014               	movf	leftTURN@mR^0,w,c
  2314   0036AC  6EE1               	movwf	fsr1l,c
  2315   0036AE  6AE2               	clrf	fsr1h,c
  2316   0036B0  50E7               	movf	indf1,w,c
  2317   0036B2  6E15               	movwf	??_leftTURN^0,c
  2318   0036B4  2815               	incf	??_leftTURN^0,w,c
  2319   0036B6  6EDF               	movwf	indf2,c
  2320   0036B8                     
  2321                           ;dc_motor_v1.c: 218:         setMotorPWM(mR);
  2322   0036B8  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  2323   0036BC  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2324   0036C0                     
  2325                           ;dc_motor_v1.c: 219:         setMotorPWM(mL);
  2326   0036C0  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  2327   0036C4  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2328   0036C8                     
  2329                           ;dc_motor_v1.c: 220:         delay_ms_function(delay_time);
  2330   0036C8  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  2331   0036CC  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  2332   0036D0  ECB7  F021         	call	_delay_ms_function	;wreg free
  2333   0036D4                     
  2334                           ;dc_motor_v1.c: 221:     }
  2335   0036D4  4A19               	infsnz	leftTURN@i^0,f,c
  2336   0036D6  2A1A               	incf	(leftTURN@i+1)^0,f,c
  2337   0036D8                     l5658:
  2338   0036D8  501D               	movf	leftTURN@max_power^0,w,c
  2339   0036DA  5C19               	subwf	leftTURN@i^0,w,c
  2340   0036DC  501A               	movf	(leftTURN@i+1)^0,w,c
  2341   0036DE  0A80               	xorlw	128
  2342   0036E0  6E15               	movwf	??_leftTURN^0,c
  2343   0036E2  501E               	movf	(leftTURN@max_power+1)^0,w,c
  2344   0036E4  0A80               	xorlw	128
  2345   0036E6  5815               	subwfb	??_leftTURN^0,w,c
  2346   0036E8  A0D8               	btfss	status,0,c
  2347   0036EA  EF79  F01B         	goto	u6861
  2348   0036EE  EF7B  F01B         	goto	u6860
  2349   0036F2                     u6861:
  2350   0036F2  EF48  F01B         	goto	l5648
  2351   0036F6                     u6860:
  2352   0036F6                     
  2353                           ;dc_motor_v1.c: 224:     for(int j=0; j<rotation_calibration; j++){
  2354   0036F6  0E00               	movlw	0
  2355   0036F8  6E1C               	movwf	(leftTURN@j+1)^0,c
  2356   0036FA  0E00               	movlw	0
  2357   0036FC  6E1B               	movwf	leftTURN@j^0,c
  2358   0036FE  EF8A  F01B         	goto	l286
  2359   003702                     l5662:
  2360                           
  2361                           ;dc_motor_v1.c: 225:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2362   003702  0ED0               	movlw	208
  2363   003704  6E15               	movwf	??_leftTURN^0,c
  2364   003706  0ECA               	movlw	202
  2365   003708                     u7417:
  2366   003708  2EE8               	decfsz	wreg,f,c
  2367   00370A  D7FE               	bra	u7417
  2368   00370C  2E15               	decfsz	??_leftTURN^0,f,c
  2369   00370E  D7FC               	bra	u7417
  2370   003710                     
  2371                           ;dc_motor_v1.c: 226:     }
  2372   003710  4A1B               	infsnz	leftTURN@j^0,f,c
  2373   003712  2A1C               	incf	(leftTURN@j+1)^0,f,c
  2374   003714                     l286:
  2375   003714  5018               	movf	leftTURN@rotation_calibration^0,w,c
  2376   003716  6E15               	movwf	??_leftTURN^0,c
  2377   003718  6A16               	clrf	(??_leftTURN+1)^0,c
  2378   00371A  5015               	movf	??_leftTURN^0,w,c
  2379   00371C  5C1B               	subwf	leftTURN@j^0,w,c
  2380   00371E  501C               	movf	(leftTURN@j+1)^0,w,c
  2381   003720  0A80               	xorlw	128
  2382   003722  6E17               	movwf	(??_leftTURN+2)^0,c
  2383   003724  5016               	movf	(??_leftTURN+1)^0,w,c
  2384   003726  0A80               	xorlw	128
  2385   003728  5817               	subwfb	(??_leftTURN+2)^0,w,c
  2386   00372A  A0D8               	btfss	status,0,c
  2387   00372C  EF9A  F01B         	goto	u6871
  2388   003730  EF9C  F01B         	goto	u6870
  2389   003734                     u6871:
  2390   003734  EF81  F01B         	goto	l5662
  2391   003738                     u6870:
  2392   003738  EFCA  F01B         	goto	l5680
  2393   00373C                     l5666:
  2394                           
  2395                           ;dc_motor_v1.c: 230:         if(mR->power> 0 ){
  2396   00373C  5014               	movf	leftTURN@mR^0,w,c
  2397   00373E  6ED9               	movwf	fsr2l,c
  2398   003740  6ADA               	clrf	fsr2h,c
  2399   003742  50DF               	movf	indf2,w,c
  2400   003744  B4D8               	btfsc	status,2,c
  2401   003746  EFA7  F01B         	goto	u6881
  2402   00374A  EFA9  F01B         	goto	u6880
  2403   00374E                     u6881:
  2404   00374E  EFAD  F01B         	goto	l5670
  2405   003752                     u6880:
  2406   003752                     
  2407                           ;dc_motor_v1.c: 231:             mR->power--;
  2408   003752  5014               	movf	leftTURN@mR^0,w,c
  2409   003754  6ED9               	movwf	fsr2l,c
  2410   003756  6ADA               	clrf	fsr2h,c
  2411   003758  06DF               	decf	indf2,f,c
  2412   00375A                     l5670:
  2413                           
  2414                           ;dc_motor_v1.c: 233:         if(mL->power> 0 ){
  2415   00375A  5013               	movf	leftTURN@mL^0,w,c
  2416   00375C  6ED9               	movwf	fsr2l,c
  2417   00375E  6ADA               	clrf	fsr2h,c
  2418   003760  50DF               	movf	indf2,w,c
  2419   003762  B4D8               	btfsc	status,2,c
  2420   003764  EFB6  F01B         	goto	u6891
  2421   003768  EFB8  F01B         	goto	u6890
  2422   00376C                     u6891:
  2423   00376C  EFBC  F01B         	goto	l5674
  2424   003770                     u6890:
  2425   003770                     
  2426                           ;dc_motor_v1.c: 234:             mL->power--;
  2427   003770  5013               	movf	leftTURN@mL^0,w,c
  2428   003772  6ED9               	movwf	fsr2l,c
  2429   003774  6ADA               	clrf	fsr2h,c
  2430   003776  06DF               	decf	indf2,f,c
  2431   003778                     l5674:
  2432                           
  2433                           ;dc_motor_v1.c: 236:         setMotorPWM(mR);
  2434   003778  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  2435   00377C  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2436   003780                     
  2437                           ;dc_motor_v1.c: 237:         setMotorPWM(mL);
  2438   003780  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  2439   003784  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2440   003788                     
  2441                           ;dc_motor_v1.c: 238:         delay_ms_function(delay_time);
  2442   003788  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  2443   00378C  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  2444   003790  ECB7  F021         	call	_delay_ms_function	;wreg free
  2445   003794                     l5680:
  2446                           
  2447                           ;dc_motor_v1.c: 229:     while(mL->power || mR->power > 0){
  2448   003794  5013               	movf	leftTURN@mL^0,w,c
  2449   003796  6ED9               	movwf	fsr2l,c
  2450   003798  6ADA               	clrf	fsr2h,c
  2451   00379A  50DF               	movf	indf2,w,c
  2452   00379C  A4D8               	btfss	status,2,c
  2453   00379E  EFD3  F01B         	goto	u6901
  2454   0037A2  EFD5  F01B         	goto	u6900
  2455   0037A6                     u6901:
  2456   0037A6  EF9E  F01B         	goto	l5666
  2457   0037AA                     u6900:
  2458   0037AA  5014               	movf	leftTURN@mR^0,w,c
  2459   0037AC  6ED9               	movwf	fsr2l,c
  2460   0037AE  6ADA               	clrf	fsr2h,c
  2461   0037B0  50DF               	movf	indf2,w,c
  2462   0037B2  A4D8               	btfss	status,2,c
  2463   0037B4  EFDE  F01B         	goto	u6911
  2464   0037B8  EFE0  F01B         	goto	u6910
  2465   0037BC                     u6911:
  2466   0037BC  EF9E  F01B         	goto	l5666
  2467   0037C0                     u6910:
  2468   0037C0  0012               	return		;funcret
  2469   0037C2                     __end_of_leftTURN:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _forward *****************
  2473 ;; Defined at:
  2474 ;;		line 122 in file "dc_motor_v1.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  Distance_Cal    1    wreg     unsigned char 
  2477 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  2478 ;;		 -> motorL(9), 
  2479 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  2480 ;;		 -> motorR(9), 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  2483 ;;  j               2   26[COMRAM] int 
  2484 ;;  i               2   24[COMRAM] int 
  2485 ;;  delay_time      2   30[COMRAM] int 
  2486 ;;  max_power       2   28[COMRAM] int 
  2487 ;;  acceleration    2    0        int 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2498 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2499 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2500 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;Total ram usage:       14 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 2
  2504 ;; This function calls:
  2505 ;;		___awdiv
  2506 ;;		_delay_ms_function
  2507 ;;		_setMotorPWM
  2508 ;; This function is called by:
  2509 ;;		_maze_search
  2510 ;;		_calibration_routine
  2511 ;;		_maze_return
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text5
  2516   003346                     __ptext5:
  2517                           	callstack 0
  2518   003346                     _forward:
  2519                           	callstack 27
  2520                           
  2521                           ;incstack = 0
  2522                           ;forward@Distance_Calibration stored from wreg
  2523   003346  6E18               	movwf	forward@Distance_Calibration^0,c
  2524   003348                     
  2525                           ;dc_motor_v1.c: 123:     mL->direction = 1;
  2526   003348  5013               	movf	forward@mL^0,w,c
  2527   00334A  6ED9               	movwf	fsr2l,c
  2528   00334C  6ADA               	clrf	fsr2h,c
  2529   00334E  0E01               	movlw	1
  2530   003350  26D9               	addwf	fsr2l,f,c
  2531   003352  0E01               	movlw	1
  2532   003354  6EDF               	movwf	indf2,c
  2533                           
  2534                           ;dc_motor_v1.c: 124:     mR->direction = 1;
  2535   003356  5014               	movf	forward@mR^0,w,c
  2536   003358  6ED9               	movwf	fsr2l,c
  2537   00335A  6ADA               	clrf	fsr2h,c
  2538   00335C  0E01               	movlw	1
  2539   00335E  26D9               	addwf	fsr2l,f,c
  2540   003360  0E01               	movlw	1
  2541   003362  6EDF               	movwf	indf2,c
  2542   003364                     
  2543                           ;dc_motor_v1.c: 131:     int max_power = 40;
  2544   003364  0E00               	movlw	0
  2545   003366  6E1E               	movwf	(forward@max_power+1)^0,c
  2546   003368  0E28               	movlw	40
  2547   00336A  6E1D               	movwf	forward@max_power^0,c
  2548   00336C                     
  2549                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  2550   00336C  0E00               	movlw	0
  2551   00336E  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2552   003370  0E64               	movlw	100
  2553   003372  6E01               	movwf	___awdiv@dividend^0,c
  2554   003374  0E00               	movlw	0
  2555   003376  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2556   003378  0E28               	movlw	40
  2557   00337A  6E03               	movwf	___awdiv@divisor^0,c
  2558   00337C  ECDA  F01E         	call	___awdiv	;wreg free
  2559   003380  C001  F01F         	movff	?___awdiv,forward@delay_time
  2560   003384  C002  F020         	movff	?___awdiv+1,forward@delay_time+1
  2561   003388                     
  2562                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  2563   003388  0E00               	movlw	0
  2564   00338A  6E1A               	movwf	(forward@i+1)^0,c
  2565   00338C  0E00               	movlw	0
  2566   00338E  6E19               	movwf	forward@i^0,c
  2567   003390  EFEE  F019         	goto	l5704
  2568   003394                     l5694:
  2569                           
  2570                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  2571   003394  5013               	movf	forward@mL^0,w,c
  2572   003396  6ED9               	movwf	fsr2l,c
  2573   003398  6ADA               	clrf	fsr2h,c
  2574   00339A  5013               	movf	forward@mL^0,w,c
  2575   00339C  6EE1               	movwf	fsr1l,c
  2576   00339E  6AE2               	clrf	fsr1h,c
  2577   0033A0  50E7               	movf	indf1,w,c
  2578   0033A2  6E15               	movwf	??_forward^0,c
  2579   0033A4  2815               	incf	??_forward^0,w,c
  2580   0033A6  6EDF               	movwf	indf2,c
  2581                           
  2582                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  2583   0033A8  5014               	movf	forward@mR^0,w,c
  2584   0033AA  6ED9               	movwf	fsr2l,c
  2585   0033AC  6ADA               	clrf	fsr2h,c
  2586   0033AE  5014               	movf	forward@mR^0,w,c
  2587   0033B0  6EE1               	movwf	fsr1l,c
  2588   0033B2  6AE2               	clrf	fsr1h,c
  2589   0033B4  50E7               	movf	indf1,w,c
  2590   0033B6  6E15               	movwf	??_forward^0,c
  2591   0033B8  2815               	incf	??_forward^0,w,c
  2592   0033BA  6EDF               	movwf	indf2,c
  2593   0033BC                     
  2594                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  2595   0033BC  C014  F00E         	movff	forward@mR,setMotorPWM@m
  2596   0033C0  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2597   0033C4                     
  2598                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  2599   0033C4  C013  F00E         	movff	forward@mL,setMotorPWM@m
  2600   0033C8  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2601   0033CC                     
  2602                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  2603   0033CC  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  2604   0033D0  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  2605   0033D4  ECB7  F021         	call	_delay_ms_function	;wreg free
  2606   0033D8                     
  2607                           ;dc_motor_v1.c: 142:     }
  2608   0033D8  4A19               	infsnz	forward@i^0,f,c
  2609   0033DA  2A1A               	incf	(forward@i+1)^0,f,c
  2610   0033DC                     l5704:
  2611   0033DC  501D               	movf	forward@max_power^0,w,c
  2612   0033DE  5C19               	subwf	forward@i^0,w,c
  2613   0033E0  501A               	movf	(forward@i+1)^0,w,c
  2614   0033E2  0A80               	xorlw	128
  2615   0033E4  6E15               	movwf	??_forward^0,c
  2616   0033E6  501E               	movf	(forward@max_power+1)^0,w,c
  2617   0033E8  0A80               	xorlw	128
  2618   0033EA  5815               	subwfb	??_forward^0,w,c
  2619   0033EC  A0D8               	btfss	status,0,c
  2620   0033EE  EFFB  F019         	goto	u6921
  2621   0033F2  EFFD  F019         	goto	u6920
  2622   0033F6                     u6921:
  2623   0033F6  EFCA  F019         	goto	l5694
  2624   0033FA                     u6920:
  2625   0033FA                     
  2626                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  2627   0033FA  0E00               	movlw	0
  2628   0033FC  6E1C               	movwf	(forward@j+1)^0,c
  2629   0033FE  0E00               	movlw	0
  2630   003400  6E1B               	movwf	forward@j^0,c
  2631   003402  EF0C  F01A         	goto	l258
  2632   003406                     l5708:
  2633                           
  2634                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2635   003406  0ED0               	movlw	208
  2636   003408  6E15               	movwf	??_forward^0,c
  2637   00340A  0ECA               	movlw	202
  2638   00340C                     u7427:
  2639   00340C  2EE8               	decfsz	wreg,f,c
  2640   00340E  D7FE               	bra	u7427
  2641   003410  2E15               	decfsz	??_forward^0,f,c
  2642   003412  D7FC               	bra	u7427
  2643   003414                     
  2644                           ;dc_motor_v1.c: 149:     }
  2645   003414  4A1B               	infsnz	forward@j^0,f,c
  2646   003416  2A1C               	incf	(forward@j+1)^0,f,c
  2647   003418                     l258:
  2648   003418  5018               	movf	forward@Distance_Calibration^0,w,c
  2649   00341A  6E15               	movwf	??_forward^0,c
  2650   00341C  6A16               	clrf	(??_forward+1)^0,c
  2651   00341E  5015               	movf	??_forward^0,w,c
  2652   003420  5C1B               	subwf	forward@j^0,w,c
  2653   003422  501C               	movf	(forward@j+1)^0,w,c
  2654   003424  0A80               	xorlw	128
  2655   003426  6E17               	movwf	(??_forward+2)^0,c
  2656   003428  5016               	movf	(??_forward+1)^0,w,c
  2657   00342A  0A80               	xorlw	128
  2658   00342C  5817               	subwfb	(??_forward+2)^0,w,c
  2659   00342E  A0D8               	btfss	status,0,c
  2660   003430  EF1C  F01A         	goto	u6931
  2661   003434  EF1E  F01A         	goto	u6930
  2662   003438                     u6931:
  2663   003438  EF03  F01A         	goto	l5708
  2664   00343C                     u6930:
  2665   00343C  EF4C  F01A         	goto	l5726
  2666   003440                     l5712:
  2667                           
  2668                           ;dc_motor_v1.c: 153:         if(mR->power> 0 ){
  2669   003440  5014               	movf	forward@mR^0,w,c
  2670   003442  6ED9               	movwf	fsr2l,c
  2671   003444  6ADA               	clrf	fsr2h,c
  2672   003446  50DF               	movf	indf2,w,c
  2673   003448  B4D8               	btfsc	status,2,c
  2674   00344A  EF29  F01A         	goto	u6941
  2675   00344E  EF2B  F01A         	goto	u6940
  2676   003452                     u6941:
  2677   003452  EF2F  F01A         	goto	l5716
  2678   003456                     u6940:
  2679   003456                     
  2680                           ;dc_motor_v1.c: 154:             mR->power--;
  2681   003456  5014               	movf	forward@mR^0,w,c
  2682   003458  6ED9               	movwf	fsr2l,c
  2683   00345A  6ADA               	clrf	fsr2h,c
  2684   00345C  06DF               	decf	indf2,f,c
  2685   00345E                     l5716:
  2686                           
  2687                           ;dc_motor_v1.c: 156:         if(mL->power> 0 ){
  2688   00345E  5013               	movf	forward@mL^0,w,c
  2689   003460  6ED9               	movwf	fsr2l,c
  2690   003462  6ADA               	clrf	fsr2h,c
  2691   003464  50DF               	movf	indf2,w,c
  2692   003466  B4D8               	btfsc	status,2,c
  2693   003468  EF38  F01A         	goto	u6951
  2694   00346C  EF3A  F01A         	goto	u6950
  2695   003470                     u6951:
  2696   003470  EF3E  F01A         	goto	l5720
  2697   003474                     u6950:
  2698   003474                     
  2699                           ;dc_motor_v1.c: 157:             mL->power--;
  2700   003474  5013               	movf	forward@mL^0,w,c
  2701   003476  6ED9               	movwf	fsr2l,c
  2702   003478  6ADA               	clrf	fsr2h,c
  2703   00347A  06DF               	decf	indf2,f,c
  2704   00347C                     l5720:
  2705                           
  2706                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  2707   00347C  C014  F00E         	movff	forward@mR,setMotorPWM@m
  2708   003480  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2709   003484                     
  2710                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  2711   003484  C013  F00E         	movff	forward@mL,setMotorPWM@m
  2712   003488  EC9F  F01C         	call	_setMotorPWM	;wreg free
  2713   00348C                     
  2714                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  2715   00348C  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  2716   003490  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  2717   003494  ECB7  F021         	call	_delay_ms_function	;wreg free
  2718   003498                     l5726:
  2719                           
  2720                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  2721   003498  5013               	movf	forward@mL^0,w,c
  2722   00349A  6ED9               	movwf	fsr2l,c
  2723   00349C  6ADA               	clrf	fsr2h,c
  2724   00349E  50DF               	movf	indf2,w,c
  2725   0034A0  A4D8               	btfss	status,2,c
  2726   0034A2  EF55  F01A         	goto	u6961
  2727   0034A6  EF57  F01A         	goto	u6960
  2728   0034AA                     u6961:
  2729   0034AA  EF20  F01A         	goto	l5712
  2730   0034AE                     u6960:
  2731   0034AE  5014               	movf	forward@mR^0,w,c
  2732   0034B0  6ED9               	movwf	fsr2l,c
  2733   0034B2  6ADA               	clrf	fsr2h,c
  2734   0034B4  50DF               	movf	indf2,w,c
  2735   0034B6  A4D8               	btfss	status,2,c
  2736   0034B8  EF60  F01A         	goto	u6971
  2737   0034BC  EF62  F01A         	goto	u6970
  2738   0034C0                     u6971:
  2739   0034C0  EF20  F01A         	goto	l5712
  2740   0034C4                     u6970:
  2741   0034C4  0012               	return		;funcret
  2742   0034C6                     __end_of_forward:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _color_click_init *****************
  2746 ;; Defined at:
  2747 ;;		line 7 in file "color.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;Total ram usage:        1 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 3
  2768 ;; This function calls:
  2769 ;;		_I2C_2_Master_Init
  2770 ;;		_color_writetoaddr
  2771 ;; This function is called by:
  2772 ;;		_maze_search
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text6
  2777   0042F8                     __ptext6:
  2778                           	callstack 0
  2779   0042F8                     _color_click_init:
  2780                           	callstack 26
  2781   0042F8                     
  2782                           ;color.c: 10:     I2C_2_Master_Init();
  2783   0042F8  ECCE  F021         	call	_I2C_2_Master_Init	;wreg free
  2784   0042FC                     
  2785                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  2786   0042FC  0E01               	movlw	1
  2787   0042FE  6E03               	movwf	color_writetoaddr@value^0,c
  2788   004300  0E00               	movlw	0
  2789   004302  EC0A  F022         	call	_color_writetoaddr
  2790   004306                     
  2791                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2792   004306  0E3F               	movlw	63
  2793   004308  6E05               	movwf	??_color_click_init^0,c
  2794   00430A  0E55               	movlw	85
  2795   00430C                     u7437:
  2796   00430C  2EE8               	decfsz	wreg,f,c
  2797   00430E  D7FE               	bra	u7437
  2798   004310  2E05               	decfsz	??_color_click_init^0,f,c
  2799   004312  D7FC               	bra	u7437
  2800   004314  0000               	nop	
  2801   004316                     
  2802                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  2803   004316  0E03               	movlw	3
  2804   004318  6E03               	movwf	color_writetoaddr@value^0,c
  2805   00431A  0E00               	movlw	0
  2806   00431C  EC0A  F022         	call	_color_writetoaddr
  2807   004320                     
  2808                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  2809   004320  0ED5               	movlw	213
  2810   004322  6E03               	movwf	color_writetoaddr@value^0,c
  2811   004324  0E01               	movlw	1
  2812   004326  EC0A  F022         	call	_color_writetoaddr
  2813   00432A                     
  2814                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  2815   00432A  9287               	bcf	135,1,c	;volatile
  2816   00432C                     
  2817                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  2818   00432C  9881               	bcf	129,4,c	;volatile
  2819   00432E                     
  2820                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  2821   00432E  9E86               	bcf	134,7,c	;volatile
  2822   004330                     
  2823                           ;color.c: 30:     LATGbits.LATG1 = 1;
  2824   004330  827F               	bsf	127,1,c	;volatile
  2825   004332                     
  2826                           ;color.c: 31:     LATAbits.LATA4 = 1;
  2827   004332  8879               	bsf	121,4,c	;volatile
  2828   004334                     
  2829                           ;color.c: 32:     LATFbits.LATF7 = 1;
  2830   004334  8E7E               	bsf	126,7,c	;volatile
  2831   004336  0012               	return		;funcret
  2832   004338                     __end_of_color_click_init:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _color_writetoaddr *****************
  2836 ;; Defined at:
  2837 ;;		line 37 in file "color.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  address         1    wreg     unsigned char 
  2840 ;;  value           1    2[COMRAM] unsigned char 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  address         1    3[COMRAM] unsigned char 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;Total ram usage:        2 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 2
  2859 ;; This function calls:
  2860 ;;		_I2C_2_Master_Start
  2861 ;;		_I2C_2_Master_Stop
  2862 ;;		_I2C_2_Master_Write
  2863 ;; This function is called by:
  2864 ;;		_color_click_init
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text7
  2869   004414                     __ptext7:
  2870                           	callstack 0
  2871   004414                     _color_writetoaddr:
  2872                           	callstack 26
  2873                           
  2874                           ;incstack = 0
  2875                           ;color_writetoaddr@address stored from wreg
  2876   004414  6E04               	movwf	color_writetoaddr@address^0,c
  2877   004416                     
  2878                           ;color.c: 38:     I2C_2_Master_Start();
  2879   004416  EC25  F022         	call	_I2C_2_Master_Start	;wreg free
  2880                           
  2881                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2882   00441A  0E52               	movlw	82
  2883   00441C  EC1A  F022         	call	_I2C_2_Master_Write
  2884                           
  2885                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  2886   004420  5004               	movf	color_writetoaddr@address^0,w,c
  2887   004422  0980               	iorlw	128
  2888   004424  EC1A  F022         	call	_I2C_2_Master_Write
  2889                           
  2890                           ;color.c: 41:     I2C_2_Master_Write(value);
  2891   004428  5003               	movf	color_writetoaddr@value^0,w,c
  2892   00442A  EC1A  F022         	call	_I2C_2_Master_Write
  2893                           
  2894                           ;color.c: 42:     I2C_2_Master_Stop();
  2895   00442E  EC20  F022         	call	_I2C_2_Master_Stop	;wreg free
  2896   004432  0012               	return		;funcret
  2897   004434                     __end_of_color_writetoaddr:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _I2C_2_Master_Init *****************
  2901 ;; Defined at:
  2902 ;;		line 4 in file "i2c.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_color_click_init
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text8
  2930   00439C                     __ptext8:
  2931                           	callstack 0
  2932   00439C                     _I2C_2_Master_Init:
  2933                           	callstack 28
  2934   00439C                     
  2935                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2936   00439C  010E               	movlb	14	; () banked
  2937   00439E  51D9               	movf	217,w,b	;volatile
  2938   0043A0  0BF0               	andlw	-16
  2939   0043A2  0908               	iorlw	8
  2940   0043A4  6FD9               	movwf	217,b	;volatile
  2941   0043A6                     
  2942                           ; BSR set to: 14
  2943                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2944   0043A6  8BD9               	bsf	217,5,b	;volatile
  2945                           
  2946                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2947   0043A8  0E9F               	movlw	159
  2948   0043AA  6FD6               	movwf	214,b	;volatile
  2949   0043AC                     
  2950                           ; BSR set to: 14
  2951                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2952   0043AC  8A84               	bsf	132,5,c	;volatile
  2953   0043AE                     
  2954                           ; BSR set to: 14
  2955                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2956   0043AE  8C84               	bsf	132,6,c	;volatile
  2957   0043B0                     
  2958                           ; BSR set to: 14
  2959                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2960   0043B0  9BA7               	bcf	167,5,b	;volatile
  2961   0043B2                     
  2962                           ; BSR set to: 14
  2963                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2964   0043B2  9DA7               	bcf	167,6,b	;volatile
  2965                           
  2966                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2967   0043B4  0E1D               	movlw	29
  2968   0043B6  6F1D               	movwf	29,b	;volatile
  2969                           
  2970                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2971   0043B8  0E1E               	movlw	30
  2972   0043BA  6F1C               	movwf	28,b	;volatile
  2973                           
  2974                           ;i2c.c: 18:   RD5PPS=0x1C;
  2975   0043BC  0E1C               	movlw	28
  2976   0043BE  6F6F               	movwf	111,b	;volatile
  2977                           
  2978                           ;i2c.c: 19:   RD6PPS=0x1B;
  2979   0043C0  0E1B               	movlw	27
  2980   0043C2  6F70               	movwf	112,b	;volatile
  2981   0043C4                     
  2982                           ; BSR set to: 14
  2983   0043C4  0012               	return		;funcret
  2984   0043C6                     __end_of_I2C_2_Master_Init:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _color_cardCheck *****************
  2988 ;; Defined at:
  2989 ;;		line 171 in file "color.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  V               4  123[BANK0 ] float 
  2994 ;;  S               4  119[BANK0 ] float 
  2995 ;;  H               4  115[BANK0 ] float 
  2996 ;;  c               4  109[BANK0 ] float 
  2997 ;;  b               4  105[BANK0 ] float 
  2998 ;;  g               4  101[BANK0 ] float 
  2999 ;;  r               4   97[BANK0 ] float 
  3000 ;;  card_color      2  113[BANK0 ] unsigned int 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  2   91[COMRAM] unsigned int 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;Total ram usage:       32 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 4
  3017 ;; This function calls:
  3018 ;;		_RGB_to_HSV
  3019 ;;		___flge
  3020 ;;		___xxtofl
  3021 ;;		_color_read_Blue
  3022 ;;		_color_read_Clear
  3023 ;;		_color_read_Green
  3024 ;;		_color_read_Red
  3025 ;; This function is called by:
  3026 ;;		_maze_search
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text9
  3031   000E02                     __ptext9:
  3032                           	callstack 0
  3033   000E02                     _color_cardCheck:
  3034                           	callstack 25
  3035   000E02                     
  3036                           ;color.c: 174:     float r = color_read_Red();
  3037   000E02  EC98  F020         	call	_color_read_Red	;wreg free
  3038   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  3039   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  3040   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  3041   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  3042   000E12  0E00               	movlw	0
  3043   000E14  ECC9  F018         	call	___xxtofl
  3044   000E18  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  3045   000E1C  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  3046   000E20  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  3047   000E24  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  3048                           
  3049                           ;color.c: 175:     float g = color_read_Green();
  3050   000E28  ECC0  F020         	call	_color_read_Green	;wreg free
  3051   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  3052   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  3053   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  3054   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  3055   000E38  0E00               	movlw	0
  3056   000E3A  ECC9  F018         	call	___xxtofl
  3057   000E3E  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  3058   000E42  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  3059   000E46  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  3060   000E4A  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  3061                           
  3062                           ;color.c: 176:     float b = color_read_Blue();
  3063   000E4E  EC10  F021         	call	_color_read_Blue	;wreg free
  3064   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  3065   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  3066   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  3067   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  3068   000E5E  0E00               	movlw	0
  3069   000E60  ECC9  F018         	call	___xxtofl
  3070   000E64  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  3071   000E68  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  3072   000E6C  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  3073   000E70  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  3074                           
  3075                           ;color.c: 179:     float c = color_read_Clear();
  3076   000E74  ECE8  F020         	call	_color_read_Clear	;wreg free
  3077   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  3078   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  3079   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  3080   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  3081   000E84  0E00               	movlw	0
  3082   000E86  ECC9  F018         	call	___xxtofl
  3083   000E8A  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  3084   000E8E  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  3085   000E92  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  3086   000E96  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  3087   000E9A                     
  3088                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  3089   000E9A  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  3090   000E9E  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  3091   000EA2  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  3092   000EA6  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  3093   000EAA  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  3094   000EAE  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  3095   000EB2  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  3096   000EB6  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  3097   000EBA  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  3098   000EBE  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  3099   000EC2  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  3100   000EC6  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  3101   000ECA  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  3102   000ECE  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  3103   000ED2  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  3104   000ED6  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  3105   000EDA  0ED3               	movlw	low color_cardCheck@H
  3106   000EDC  0100               	movlb	0	; () banked
  3107   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  3108   000EE0  0ED7               	movlw	low color_cardCheck@S
  3109   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  3110   000EE4  0EDB               	movlw	low color_cardCheck@V
  3111   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  3112   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  3113   000EEC                     
  3114                           ;color.c: 195:     unsigned int card_color = 0;
  3115   000EEC  0E00               	movlw	0
  3116   000EEE  0100               	movlb	0	; () banked
  3117   000EF0  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3118   000EF2  0E00               	movlw	0
  3119   000EF4  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3120   000EF6                     
  3121                           ; BSR set to: 0
  3122                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  3123   000EF6  0E00               	movlw	0
  3124   000EF8  6E01               	movwf	___flge@ff1^0,c
  3125   000EFA  0E80               	movlw	128
  3126   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  3127   000EFE  0EB1               	movlw	177
  3128   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  3129   000F02  0E43               	movlw	67
  3130   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  3131   000F06  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3132   000F0A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3133   000F0E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3134   000F12  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3135   000F16  EC58  F01E         	call	___flge	;wreg free
  3136   000F1A  B0D8               	btfsc	status,0,c
  3137   000F1C  EF92  F007         	goto	u6351
  3138   000F20  EF94  F007         	goto	u6350
  3139   000F24                     u6351:
  3140   000F24  EF18  F008         	goto	l5496
  3141   000F28                     u6350:
  3142   000F28  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3143   000F2C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3144   000F30  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3145   000F34  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3146   000F38  0E00               	movlw	0
  3147   000F3A  6E05               	movwf	___flge@ff2^0,c
  3148   000F3C  0E00               	movlw	0
  3149   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  3150   000F40  0EB4               	movlw	180
  3151   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  3152   000F44  0E43               	movlw	67
  3153   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  3154   000F48  EC58  F01E         	call	___flge	;wreg free
  3155   000F4C  B0D8               	btfsc	status,0,c
  3156   000F4E  EFAB  F007         	goto	u6361
  3157   000F52  EFAD  F007         	goto	u6360
  3158   000F56                     u6361:
  3159   000F56  EF18  F008         	goto	l5496
  3160   000F5A                     u6360:
  3161   000F5A  0E00               	movlw	0
  3162   000F5C  6E01               	movwf	___flge@ff1^0,c
  3163   000F5E  0E00               	movlw	0
  3164   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  3165   000F62  0EAA               	movlw	170
  3166   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  3167   000F66  0E42               	movlw	66
  3168   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  3169   000F6A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3170   000F6E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3171   000F72  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3172   000F76  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3173   000F7A  EC58  F01E         	call	___flge	;wreg free
  3174   000F7E  B0D8               	btfsc	status,0,c
  3175   000F80  EFC4  F007         	goto	u6371
  3176   000F84  EFC6  F007         	goto	u6370
  3177   000F88                     u6371:
  3178   000F88  EF18  F008         	goto	l5496
  3179   000F8C                     u6370:
  3180   000F8C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3181   000F90  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3182   000F94  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3183   000F98  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3184   000F9C  0E00               	movlw	0
  3185   000F9E  6E05               	movwf	___flge@ff2^0,c
  3186   000FA0  0E00               	movlw	0
  3187   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  3188   000FA4  0EB4               	movlw	180
  3189   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  3190   000FA8  0E42               	movlw	66
  3191   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  3192   000FAC  EC58  F01E         	call	___flge	;wreg free
  3193   000FB0  B0D8               	btfsc	status,0,c
  3194   000FB2  EFDD  F007         	goto	u6381
  3195   000FB6  EFDF  F007         	goto	u6380
  3196   000FBA                     u6381:
  3197   000FBA  EF18  F008         	goto	l5496
  3198   000FBE                     u6380:
  3199   000FBE  0E00               	movlw	0
  3200   000FC0  6E01               	movwf	___flge@ff1^0,c
  3201   000FC2  0E00               	movlw	0
  3202   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  3203   000FC6  0EA0               	movlw	160
  3204   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  3205   000FCA  0E42               	movlw	66
  3206   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  3207   000FCE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3208   000FD2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3209   000FD6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3210   000FDA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3211   000FDE  EC58  F01E         	call	___flge	;wreg free
  3212   000FE2  B0D8               	btfsc	status,0,c
  3213   000FE4  EFF6  F007         	goto	u6391
  3214   000FE8  EFF8  F007         	goto	u6390
  3215   000FEC                     u6391:
  3216   000FEC  EF18  F008         	goto	l5496
  3217   000FF0                     u6390:
  3218   000FF0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3219   000FF4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3220   000FF8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3221   000FFC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3222   001000  0E00               	movlw	0
  3223   001002  6E05               	movwf	___flge@ff2^0,c
  3224   001004  0E00               	movlw	0
  3225   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  3226   001008  0EAA               	movlw	170
  3227   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  3228   00100C  0E42               	movlw	66
  3229   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  3230   001010  EC58  F01E         	call	___flge	;wreg free
  3231   001014  B0D8               	btfsc	status,0,c
  3232   001016  EF0F  F008         	goto	u6401
  3233   00101A  EF11  F008         	goto	u6400
  3234   00101E                     u6401:
  3235   00101E  EF18  F008         	goto	l5496
  3236   001022                     u6400:
  3237   001022  0E00               	movlw	0
  3238   001024  0100               	movlb	0	; () banked
  3239   001026  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3240   001028  0E01               	movlw	1
  3241   00102A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3242   00102C  EF18  F00C         	goto	l5588
  3243   001030                     l5496:
  3244   001030  0E00               	movlw	0
  3245   001032  6E01               	movwf	___flge@ff1^0,c
  3246   001034  0E00               	movlw	0
  3247   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  3248   001038  0E86               	movlw	134
  3249   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  3250   00103C  0E42               	movlw	66
  3251   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  3252   001040  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3253   001044  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3254   001048  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3255   00104C  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3256   001050  EC58  F01E         	call	___flge	;wreg free
  3257   001054  B0D8               	btfsc	status,0,c
  3258   001056  EF2F  F008         	goto	u6411
  3259   00105A  EF31  F008         	goto	u6410
  3260   00105E                     u6411:
  3261   00105E  EFB5  F008         	goto	l5510
  3262   001062                     u6410:
  3263   001062  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3264   001066  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3265   00106A  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3266   00106E  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3267   001072  0E00               	movlw	0
  3268   001074  6E05               	movwf	___flge@ff2^0,c
  3269   001076  0E00               	movlw	0
  3270   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  3271   00107A  0E9E               	movlw	158
  3272   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  3273   00107E  0E42               	movlw	66
  3274   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  3275   001082  EC58  F01E         	call	___flge	;wreg free
  3276   001086  B0D8               	btfsc	status,0,c
  3277   001088  EF48  F008         	goto	u6421
  3278   00108C  EF4A  F008         	goto	u6420
  3279   001090                     u6421:
  3280   001090  EFB5  F008         	goto	l5510
  3281   001094                     u6420:
  3282   001094  0E00               	movlw	0
  3283   001096  6E01               	movwf	___flge@ff1^0,c
  3284   001098  0E00               	movlw	0
  3285   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  3286   00109C  0E48               	movlw	72
  3287   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  3288   0010A0  0E42               	movlw	66
  3289   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  3290   0010A4  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3291   0010A8  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3292   0010AC  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3293   0010B0  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3294   0010B4  EC58  F01E         	call	___flge	;wreg free
  3295   0010B8  B0D8               	btfsc	status,0,c
  3296   0010BA  EF61  F008         	goto	u6431
  3297   0010BE  EF63  F008         	goto	u6430
  3298   0010C2                     u6431:
  3299   0010C2  EFB5  F008         	goto	l5510
  3300   0010C6                     u6430:
  3301   0010C6  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3302   0010CA  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3303   0010CE  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3304   0010D2  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3305   0010D6  0E00               	movlw	0
  3306   0010D8  6E05               	movwf	___flge@ff2^0,c
  3307   0010DA  0E00               	movlw	0
  3308   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  3309   0010DE  0E64               	movlw	100
  3310   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  3311   0010E2  0E42               	movlw	66
  3312   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  3313   0010E6  EC58  F01E         	call	___flge	;wreg free
  3314   0010EA  B0D8               	btfsc	status,0,c
  3315   0010EC  EF7A  F008         	goto	u6441
  3316   0010F0  EF7C  F008         	goto	u6440
  3317   0010F4                     u6441:
  3318   0010F4  EFB5  F008         	goto	l5510
  3319   0010F8                     u6440:
  3320   0010F8  0E00               	movlw	0
  3321   0010FA  6E01               	movwf	___flge@ff1^0,c
  3322   0010FC  0E00               	movlw	0
  3323   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  3324   001100  0E20               	movlw	32
  3325   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  3326   001104  0E42               	movlw	66
  3327   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  3328   001108  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3329   00110C  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3330   001110  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3331   001114  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3332   001118  EC58  F01E         	call	___flge	;wreg free
  3333   00111C  B0D8               	btfsc	status,0,c
  3334   00111E  EF93  F008         	goto	u6451
  3335   001122  EF95  F008         	goto	u6450
  3336   001126                     u6451:
  3337   001126  EFB5  F008         	goto	l5510
  3338   00112A                     u6450:
  3339   00112A  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3340   00112E  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3341   001132  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3342   001136  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3343   00113A  0E00               	movlw	0
  3344   00113C  6E05               	movwf	___flge@ff2^0,c
  3345   00113E  0E00               	movlw	0
  3346   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  3347   001142  0E38               	movlw	56
  3348   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  3349   001146  0E42               	movlw	66
  3350   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  3351   00114A  EC58  F01E         	call	___flge	;wreg free
  3352   00114E  B0D8               	btfsc	status,0,c
  3353   001150  EFAC  F008         	goto	u6461
  3354   001154  EFAE  F008         	goto	u6460
  3355   001158                     u6461:
  3356   001158  EFB5  F008         	goto	l5510
  3357   00115C                     u6460:
  3358   00115C  0E00               	movlw	0
  3359   00115E  0100               	movlb	0	; () banked
  3360   001160  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3361   001162  0E02               	movlw	2
  3362   001164  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3363   001166  EF18  F00C         	goto	l5588
  3364   00116A                     l5510:
  3365   00116A  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3366   00116E  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3367   001172  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3368   001176  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3369   00117A  0E00               	movlw	0
  3370   00117C  6E05               	movwf	___flge@ff2^0,c
  3371   00117E  0E00               	movlw	0
  3372   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  3373   001182  0E20               	movlw	32
  3374   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  3375   001186  0E41               	movlw	65
  3376   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  3377   00118A  EC58  F01E         	call	___flge	;wreg free
  3378   00118E  B0D8               	btfsc	status,0,c
  3379   001190  EFCC  F008         	goto	u6471
  3380   001194  EFCE  F008         	goto	u6470
  3381   001198                     u6471:
  3382   001198  EF07  F009         	goto	l5518
  3383   00119C                     u6470:
  3384   00119C  0E00               	movlw	0
  3385   00119E  6E01               	movwf	___flge@ff1^0,c
  3386   0011A0  0E00               	movlw	0
  3387   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  3388   0011A4  0EF0               	movlw	240
  3389   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  3390   0011A8  0E41               	movlw	65
  3391   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  3392   0011AC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3393   0011B0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3394   0011B4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3395   0011B8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3396   0011BC  EC58  F01E         	call	___flge	;wreg free
  3397   0011C0  B0D8               	btfsc	status,0,c
  3398   0011C2  EFE5  F008         	goto	u6481
  3399   0011C6  EFE7  F008         	goto	u6480
  3400   0011CA                     u6481:
  3401   0011CA  EF07  F009         	goto	l5518
  3402   0011CE                     u6480:
  3403   0011CE  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3404   0011D2  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3405   0011D6  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3406   0011DA  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3407   0011DE  0E00               	movlw	0
  3408   0011E0  6E05               	movwf	___flge@ff2^0,c
  3409   0011E2  0E00               	movlw	0
  3410   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  3411   0011E6  0E0C               	movlw	12
  3412   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  3413   0011EA  0E42               	movlw	66
  3414   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  3415   0011EE  EC58  F01E         	call	___flge	;wreg free
  3416   0011F2  B0D8               	btfsc	status,0,c
  3417   0011F4  EFFE  F008         	goto	u6491
  3418   0011F8  EF00  F009         	goto	u6490
  3419   0011FC                     u6491:
  3420   0011FC  EF07  F009         	goto	l5518
  3421   001200                     u6490:
  3422   001200  0E00               	movlw	0
  3423   001202  0100               	movlb	0	; () banked
  3424   001204  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3425   001206  0E03               	movlw	3
  3426   001208  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3427   00120A  EF18  F00C         	goto	l5588
  3428   00120E                     l5518:
  3429   00120E  0E00               	movlw	0
  3430   001210  6E01               	movwf	___flge@ff1^0,c
  3431   001212  0E00               	movlw	0
  3432   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  3433   001216  0EA0               	movlw	160
  3434   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  3435   00121A  0E41               	movlw	65
  3436   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  3437   00121E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3438   001222  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3439   001226  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3440   00122A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3441   00122E  EC58  F01E         	call	___flge	;wreg free
  3442   001232  B0D8               	btfsc	status,0,c
  3443   001234  EF1E  F009         	goto	u6501
  3444   001238  EF20  F009         	goto	u6500
  3445   00123C                     u6501:
  3446   00123C  EFA4  F009         	goto	l5532
  3447   001240                     u6500:
  3448   001240  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3449   001244  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3450   001248  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3451   00124C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3452   001250  0E00               	movlw	0
  3453   001252  6E05               	movwf	___flge@ff2^0,c
  3454   001254  0E00               	movlw	0
  3455   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  3456   001258  0EC8               	movlw	200
  3457   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  3458   00125C  0E41               	movlw	65
  3459   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  3460   001260  EC58  F01E         	call	___flge	;wreg free
  3461   001264  B0D8               	btfsc	status,0,c
  3462   001266  EF37  F009         	goto	u6511
  3463   00126A  EF39  F009         	goto	u6510
  3464   00126E                     u6511:
  3465   00126E  EFA4  F009         	goto	l5532
  3466   001272                     u6510:
  3467   001272  0E00               	movlw	0
  3468   001274  6E01               	movwf	___flge@ff1^0,c
  3469   001276  0E00               	movlw	0
  3470   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  3471   00127A  0E82               	movlw	130
  3472   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  3473   00127E  0E42               	movlw	66
  3474   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  3475   001282  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3476   001286  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3477   00128A  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3478   00128E  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3479   001292  EC58  F01E         	call	___flge	;wreg free
  3480   001296  B0D8               	btfsc	status,0,c
  3481   001298  EF50  F009         	goto	u6521
  3482   00129C  EF52  F009         	goto	u6520
  3483   0012A0                     u6521:
  3484   0012A0  EFA4  F009         	goto	l5532
  3485   0012A4                     u6520:
  3486   0012A4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3487   0012A8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3488   0012AC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3489   0012B0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3490   0012B4  0E00               	movlw	0
  3491   0012B6  6E05               	movwf	___flge@ff2^0,c
  3492   0012B8  0E00               	movlw	0
  3493   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  3494   0012BC  0E8C               	movlw	140
  3495   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  3496   0012C0  0E42               	movlw	66
  3497   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  3498   0012C4  EC58  F01E         	call	___flge	;wreg free
  3499   0012C8  B0D8               	btfsc	status,0,c
  3500   0012CA  EF69  F009         	goto	u6531
  3501   0012CE  EF6B  F009         	goto	u6530
  3502   0012D2                     u6531:
  3503   0012D2  EFA4  F009         	goto	l5532
  3504   0012D6                     u6530:
  3505   0012D6  0E00               	movlw	0
  3506   0012D8  6E01               	movwf	___flge@ff1^0,c
  3507   0012DA  0E00               	movlw	0
  3508   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  3509   0012DE  0E58               	movlw	88
  3510   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  3511   0012E2  0E42               	movlw	66
  3512   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  3513   0012E6  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3514   0012EA  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3515   0012EE  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3516   0012F2  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3517   0012F6  EC58  F01E         	call	___flge	;wreg free
  3518   0012FA  B0D8               	btfsc	status,0,c
  3519   0012FC  EF82  F009         	goto	u6541
  3520   001300  EF84  F009         	goto	u6540
  3521   001304                     u6541:
  3522   001304  EFA4  F009         	goto	l5532
  3523   001308                     u6540:
  3524   001308  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3525   00130C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3526   001310  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3527   001314  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3528   001318  0E00               	movlw	0
  3529   00131A  6E05               	movwf	___flge@ff2^0,c
  3530   00131C  0E00               	movlw	0
  3531   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  3532   001320  0E64               	movlw	100
  3533   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  3534   001324  0E42               	movlw	66
  3535   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  3536   001328  EC58  F01E         	call	___flge	;wreg free
  3537   00132C  B0D8               	btfsc	status,0,c
  3538   00132E  EF9B  F009         	goto	u6551
  3539   001332  EF9D  F009         	goto	u6550
  3540   001336                     u6551:
  3541   001336  EFA4  F009         	goto	l5532
  3542   00133A                     u6550:
  3543   00133A  0E00               	movlw	0
  3544   00133C  0100               	movlb	0	; () banked
  3545   00133E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3546   001340  0E04               	movlw	4
  3547   001342  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3548   001344  EF18  F00C         	goto	l5588
  3549   001348                     l5532:
  3550   001348  0E00               	movlw	0
  3551   00134A  6E01               	movwf	___flge@ff1^0,c
  3552   00134C  0E00               	movlw	0
  3553   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  3554   001350  0E50               	movlw	80
  3555   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  3556   001354  0E41               	movlw	65
  3557   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  3558   001358  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3559   00135C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3560   001360  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3561   001364  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3562   001368  EC58  F01E         	call	___flge	;wreg free
  3563   00136C  B0D8               	btfsc	status,0,c
  3564   00136E  EFBB  F009         	goto	u6561
  3565   001372  EFBD  F009         	goto	u6560
  3566   001376                     u6561:
  3567   001376  EF41  F00A         	goto	l5546
  3568   00137A                     u6560:
  3569   00137A  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3570   00137E  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3571   001382  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3572   001386  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3573   00138A  0E00               	movlw	0
  3574   00138C  6E05               	movwf	___flge@ff2^0,c
  3575   00138E  0E00               	movlw	0
  3576   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  3577   001392  0E90               	movlw	144
  3578   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  3579   001396  0E41               	movlw	65
  3580   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  3581   00139A  EC58  F01E         	call	___flge	;wreg free
  3582   00139E  B0D8               	btfsc	status,0,c
  3583   0013A0  EFD4  F009         	goto	u6571
  3584   0013A4  EFD6  F009         	goto	u6570
  3585   0013A8                     u6571:
  3586   0013A8  EF41  F00A         	goto	l5546
  3587   0013AC                     u6570:
  3588   0013AC  0E00               	movlw	0
  3589   0013AE  6E01               	movwf	___flge@ff1^0,c
  3590   0013B0  0E00               	movlw	0
  3591   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  3592   0013B4  0E5C               	movlw	92
  3593   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  3594   0013B8  0E42               	movlw	66
  3595   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  3596   0013BC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3597   0013C0  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3598   0013C4  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3599   0013C8  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3600   0013CC  EC58  F01E         	call	___flge	;wreg free
  3601   0013D0  B0D8               	btfsc	status,0,c
  3602   0013D2  EFED  F009         	goto	u6581
  3603   0013D6  EFEF  F009         	goto	u6580
  3604   0013DA                     u6581:
  3605   0013DA  EF41  F00A         	goto	l5546
  3606   0013DE                     u6580:
  3607   0013DE  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3608   0013E2  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3609   0013E6  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3610   0013EA  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3611   0013EE  0E00               	movlw	0
  3612   0013F0  6E05               	movwf	___flge@ff2^0,c
  3613   0013F2  0E00               	movlw	0
  3614   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  3615   0013F6  0E70               	movlw	112
  3616   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  3617   0013FA  0E42               	movlw	66
  3618   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  3619   0013FE  EC58  F01E         	call	___flge	;wreg free
  3620   001402  B0D8               	btfsc	status,0,c
  3621   001404  EF06  F00A         	goto	u6591
  3622   001408  EF08  F00A         	goto	u6590
  3623   00140C                     u6591:
  3624   00140C  EF41  F00A         	goto	l5546
  3625   001410                     u6590:
  3626   001410  0E00               	movlw	0
  3627   001412  6E01               	movwf	___flge@ff1^0,c
  3628   001414  0E00               	movlw	0
  3629   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  3630   001418  0E48               	movlw	72
  3631   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  3632   00141C  0E42               	movlw	66
  3633   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  3634   001420  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3635   001424  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3636   001428  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3637   00142C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3638   001430  EC58  F01E         	call	___flge	;wreg free
  3639   001434  B0D8               	btfsc	status,0,c
  3640   001436  EF1F  F00A         	goto	u6601
  3641   00143A  EF21  F00A         	goto	u6600
  3642   00143E                     u6601:
  3643   00143E  EF41  F00A         	goto	l5546
  3644   001442                     u6600:
  3645   001442  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3646   001446  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3647   00144A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3648   00144E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3649   001452  0E00               	movlw	0
  3650   001454  6E05               	movwf	___flge@ff2^0,c
  3651   001456  0E00               	movlw	0
  3652   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  3653   00145A  0E58               	movlw	88
  3654   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  3655   00145E  0E42               	movlw	66
  3656   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  3657   001462  EC58  F01E         	call	___flge	;wreg free
  3658   001466  B0D8               	btfsc	status,0,c
  3659   001468  EF38  F00A         	goto	u6611
  3660   00146C  EF3A  F00A         	goto	u6610
  3661   001470                     u6611:
  3662   001470  EF41  F00A         	goto	l5546
  3663   001474                     u6610:
  3664   001474  0E00               	movlw	0
  3665   001476  0100               	movlb	0	; () banked
  3666   001478  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3667   00147A  0E05               	movlw	5
  3668   00147C  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3669   00147E  EF18  F00C         	goto	l5588
  3670   001482                     l5546:
  3671   001482  0E00               	movlw	0
  3672   001484  6E01               	movwf	___flge@ff1^0,c
  3673   001486  0E00               	movlw	0
  3674   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  3675   00148A  0EA0               	movlw	160
  3676   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  3677   00148E  0E40               	movlw	64
  3678   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  3679   001492  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3680   001496  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3681   00149A  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3682   00149E  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3683   0014A2  EC58  F01E         	call	___flge	;wreg free
  3684   0014A6  B0D8               	btfsc	status,0,c
  3685   0014A8  EF58  F00A         	goto	u6621
  3686   0014AC  EF5A  F00A         	goto	u6620
  3687   0014B0                     u6621:
  3688   0014B0  EFDE  F00A         	goto	l5560
  3689   0014B4                     u6620:
  3690   0014B4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3691   0014B8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3692   0014BC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3693   0014C0  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3694   0014C4  0E00               	movlw	0
  3695   0014C6  6E05               	movwf	___flge@ff2^0,c
  3696   0014C8  0E00               	movlw	0
  3697   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  3698   0014CC  0E20               	movlw	32
  3699   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  3700   0014D0  0E41               	movlw	65
  3701   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  3702   0014D4  EC58  F01E         	call	___flge	;wreg free
  3703   0014D8  B0D8               	btfsc	status,0,c
  3704   0014DA  EF71  F00A         	goto	u6631
  3705   0014DE  EF73  F00A         	goto	u6630
  3706   0014E2                     u6631:
  3707   0014E2  EFDE  F00A         	goto	l5560
  3708   0014E6                     u6630:
  3709   0014E6  0E00               	movlw	0
  3710   0014E8  6E01               	movwf	___flge@ff1^0,c
  3711   0014EA  0E00               	movlw	0
  3712   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  3713   0014EE  0E8C               	movlw	140
  3714   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  3715   0014F2  0E42               	movlw	66
  3716   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  3717   0014F6  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3718   0014FA  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3719   0014FE  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3720   001502  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3721   001506  EC58  F01E         	call	___flge	;wreg free
  3722   00150A  B0D8               	btfsc	status,0,c
  3723   00150C  EF8A  F00A         	goto	u6641
  3724   001510  EF8C  F00A         	goto	u6640
  3725   001514                     u6641:
  3726   001514  EFDE  F00A         	goto	l5560
  3727   001518                     u6640:
  3728   001518  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3729   00151C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3730   001520  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3731   001524  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3732   001528  0E00               	movlw	0
  3733   00152A  6E05               	movwf	___flge@ff2^0,c
  3734   00152C  0E00               	movlw	0
  3735   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  3736   001530  0E96               	movlw	150
  3737   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  3738   001534  0E42               	movlw	66
  3739   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  3740   001538  EC58  F01E         	call	___flge	;wreg free
  3741   00153C  B0D8               	btfsc	status,0,c
  3742   00153E  EFA3  F00A         	goto	u6651
  3743   001542  EFA5  F00A         	goto	u6650
  3744   001546                     u6651:
  3745   001546  EFDE  F00A         	goto	l5560
  3746   00154A                     u6650:
  3747   00154A  0E00               	movlw	0
  3748   00154C  6E01               	movwf	___flge@ff1^0,c
  3749   00154E  0E00               	movlw	0
  3750   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  3751   001552  0E78               	movlw	120
  3752   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  3753   001556  0E42               	movlw	66
  3754   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  3755   00155A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3756   00155E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3757   001562  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3758   001566  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3759   00156A  EC58  F01E         	call	___flge	;wreg free
  3760   00156E  B0D8               	btfsc	status,0,c
  3761   001570  EFBC  F00A         	goto	u6661
  3762   001574  EFBE  F00A         	goto	u6660
  3763   001578                     u6661:
  3764   001578  EFDE  F00A         	goto	l5560
  3765   00157C                     u6660:
  3766   00157C  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3767   001580  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3768   001584  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3769   001588  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3770   00158C  0E00               	movlw	0
  3771   00158E  6E05               	movwf	___flge@ff2^0,c
  3772   001590  0E00               	movlw	0
  3773   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  3774   001594  0E86               	movlw	134
  3775   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  3776   001598  0E42               	movlw	66
  3777   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  3778   00159C  EC58  F01E         	call	___flge	;wreg free
  3779   0015A0  B0D8               	btfsc	status,0,c
  3780   0015A2  EFD5  F00A         	goto	u6671
  3781   0015A6  EFD7  F00A         	goto	u6670
  3782   0015AA                     u6671:
  3783   0015AA  EFDE  F00A         	goto	l5560
  3784   0015AE                     u6670:
  3785   0015AE  0E00               	movlw	0
  3786   0015B0  0100               	movlb	0	; () banked
  3787   0015B2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3788   0015B4  0E06               	movlw	6
  3789   0015B6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3790   0015B8  EF18  F00C         	goto	l5588
  3791   0015BC                     l5560:
  3792   0015BC  0E00               	movlw	0
  3793   0015BE  6E01               	movwf	___flge@ff1^0,c
  3794   0015C0  0E00               	movlw	0
  3795   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  3796   0015C4  0E94               	movlw	148
  3797   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  3798   0015C8  0E42               	movlw	66
  3799   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  3800   0015CC  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3801   0015D0  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3802   0015D4  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3803   0015D8  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3804   0015DC  EC58  F01E         	call	___flge	;wreg free
  3805   0015E0  B0D8               	btfsc	status,0,c
  3806   0015E2  EFF5  F00A         	goto	u6681
  3807   0015E6  EFF7  F00A         	goto	u6680
  3808   0015EA                     u6681:
  3809   0015EA  EF7B  F00B         	goto	l5574
  3810   0015EE                     u6680:
  3811   0015EE  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3812   0015F2  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3813   0015F6  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3814   0015FA  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3815   0015FE  0E00               	movlw	0
  3816   001600  6E05               	movwf	___flge@ff2^0,c
  3817   001602  0E00               	movlw	0
  3818   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  3819   001606  0EAA               	movlw	170
  3820   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  3821   00160A  0E42               	movlw	66
  3822   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  3823   00160E  EC58  F01E         	call	___flge	;wreg free
  3824   001612  B0D8               	btfsc	status,0,c
  3825   001614  EF0E  F00B         	goto	u6691
  3826   001618  EF10  F00B         	goto	u6690
  3827   00161C                     u6691:
  3828   00161C  EF7B  F00B         	goto	l5574
  3829   001620                     u6690:
  3830   001620  0E00               	movlw	0
  3831   001622  6E01               	movwf	___flge@ff1^0,c
  3832   001624  0E00               	movlw	0
  3833   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  3834   001628  0EE0               	movlw	224
  3835   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  3836   00162C  0E41               	movlw	65
  3837   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  3838   001630  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3839   001634  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3840   001638  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3841   00163C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3842   001640  EC58  F01E         	call	___flge	;wreg free
  3843   001644  B0D8               	btfsc	status,0,c
  3844   001646  EF27  F00B         	goto	u6701
  3845   00164A  EF29  F00B         	goto	u6700
  3846   00164E                     u6701:
  3847   00164E  EF7B  F00B         	goto	l5574
  3848   001652                     u6700:
  3849   001652  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3850   001656  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3851   00165A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3852   00165E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3853   001662  0E00               	movlw	0
  3854   001664  6E05               	movwf	___flge@ff2^0,c
  3855   001666  0E00               	movlw	0
  3856   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  3857   00166A  0E04               	movlw	4
  3858   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  3859   00166E  0E42               	movlw	66
  3860   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  3861   001672  EC58  F01E         	call	___flge	;wreg free
  3862   001676  B0D8               	btfsc	status,0,c
  3863   001678  EF40  F00B         	goto	u6711
  3864   00167C  EF42  F00B         	goto	u6710
  3865   001680                     u6711:
  3866   001680  EF7B  F00B         	goto	l5574
  3867   001684                     u6710:
  3868   001684  0E00               	movlw	0
  3869   001686  6E01               	movwf	___flge@ff1^0,c
  3870   001688  0E00               	movlw	0
  3871   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  3872   00168C  0E14               	movlw	20
  3873   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  3874   001690  0E42               	movlw	66
  3875   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  3876   001694  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3877   001698  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3878   00169C  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3879   0016A0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3880   0016A4  EC58  F01E         	call	___flge	;wreg free
  3881   0016A8  B0D8               	btfsc	status,0,c
  3882   0016AA  EF59  F00B         	goto	u6721
  3883   0016AE  EF5B  F00B         	goto	u6720
  3884   0016B2                     u6721:
  3885   0016B2  EF7B  F00B         	goto	l5574
  3886   0016B6                     u6720:
  3887   0016B6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3888   0016BA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3889   0016BE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3890   0016C2  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3891   0016C6  0E00               	movlw	0
  3892   0016C8  6E05               	movwf	___flge@ff2^0,c
  3893   0016CA  0E00               	movlw	0
  3894   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  3895   0016CE  0E28               	movlw	40
  3896   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  3897   0016D2  0E42               	movlw	66
  3898   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  3899   0016D6  EC58  F01E         	call	___flge	;wreg free
  3900   0016DA  B0D8               	btfsc	status,0,c
  3901   0016DC  EF72  F00B         	goto	u6731
  3902   0016E0  EF74  F00B         	goto	u6730
  3903   0016E4                     u6731:
  3904   0016E4  EF7B  F00B         	goto	l5574
  3905   0016E8                     u6730:
  3906   0016E8  0E00               	movlw	0
  3907   0016EA  0100               	movlb	0	; () banked
  3908   0016EC  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3909   0016EE  0E07               	movlw	7
  3910   0016F0  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3911   0016F2  EF18  F00C         	goto	l5588
  3912   0016F6                     l5574:
  3913   0016F6  0E00               	movlw	0
  3914   0016F8  6E01               	movwf	___flge@ff1^0,c
  3915   0016FA  0E00               	movlw	0
  3916   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  3917   0016FE  0EB0               	movlw	176
  3918   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  3919   001702  0E41               	movlw	65
  3920   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  3921   001706  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3922   00170A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3923   00170E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3924   001712  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3925   001716  EC58  F01E         	call	___flge	;wreg free
  3926   00171A  B0D8               	btfsc	status,0,c
  3927   00171C  EF92  F00B         	goto	u6741
  3928   001720  EF94  F00B         	goto	u6740
  3929   001724                     u6741:
  3930   001724  EF18  F00C         	goto	l99
  3931   001728                     u6740:
  3932   001728  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3933   00172C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3934   001730  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3935   001734  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3936   001738  0E00               	movlw	0
  3937   00173A  6E05               	movwf	___flge@ff2^0,c
  3938   00173C  0E00               	movlw	0
  3939   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  3940   001740  0ED8               	movlw	216
  3941   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  3942   001744  0E41               	movlw	65
  3943   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  3944   001748  EC58  F01E         	call	___flge	;wreg free
  3945   00174C  B0D8               	btfsc	status,0,c
  3946   00174E  EFAB  F00B         	goto	u6751
  3947   001752  EFAD  F00B         	goto	u6750
  3948   001756                     u6751:
  3949   001756  EF18  F00C         	goto	l99
  3950   00175A                     u6750:
  3951   00175A  0E00               	movlw	0
  3952   00175C  6E01               	movwf	___flge@ff1^0,c
  3953   00175E  0E00               	movlw	0
  3954   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  3955   001762  0E40               	movlw	64
  3956   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  3957   001766  0E42               	movlw	66
  3958   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  3959   00176A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3960   00176E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3961   001772  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3962   001776  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3963   00177A  EC58  F01E         	call	___flge	;wreg free
  3964   00177E  B0D8               	btfsc	status,0,c
  3965   001780  EFC4  F00B         	goto	u6761
  3966   001784  EFC6  F00B         	goto	u6760
  3967   001788                     u6761:
  3968   001788  EF18  F00C         	goto	l99
  3969   00178C                     u6760:
  3970   00178C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3971   001790  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3972   001794  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3973   001798  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3974   00179C  0E00               	movlw	0
  3975   00179E  6E05               	movwf	___flge@ff2^0,c
  3976   0017A0  0E00               	movlw	0
  3977   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  3978   0017A4  0E54               	movlw	84
  3979   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  3980   0017A8  0E42               	movlw	66
  3981   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  3982   0017AC  EC58  F01E         	call	___flge	;wreg free
  3983   0017B0  B0D8               	btfsc	status,0,c
  3984   0017B2  EFDD  F00B         	goto	u6771
  3985   0017B6  EFDF  F00B         	goto	u6770
  3986   0017BA                     u6771:
  3987   0017BA  EF18  F00C         	goto	l99
  3988   0017BE                     u6770:
  3989   0017BE  0E00               	movlw	0
  3990   0017C0  6E01               	movwf	___flge@ff1^0,c
  3991   0017C2  0E00               	movlw	0
  3992   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  3993   0017C6  0E34               	movlw	52
  3994   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  3995   0017CA  0E42               	movlw	66
  3996   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  3997   0017CE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3998   0017D2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3999   0017D6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4000   0017DA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4001   0017DE  EC58  F01E         	call	___flge	;wreg free
  4002   0017E2  B0D8               	btfsc	status,0,c
  4003   0017E4  EFF6  F00B         	goto	u6781
  4004   0017E8  EFF8  F00B         	goto	u6780
  4005   0017EC                     u6781:
  4006   0017EC  EF18  F00C         	goto	l99
  4007   0017F0                     u6780:
  4008   0017F0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4009   0017F4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4010   0017F8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4011   0017FC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4012   001800  0E00               	movlw	0
  4013   001802  6E05               	movwf	___flge@ff2^0,c
  4014   001804  0E00               	movlw	0
  4015   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  4016   001808  0E48               	movlw	72
  4017   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  4018   00180C  0E42               	movlw	66
  4019   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  4020   001810  EC58  F01E         	call	___flge	;wreg free
  4021   001814  B0D8               	btfsc	status,0,c
  4022   001816  EF0F  F00C         	goto	u6791
  4023   00181A  EF11  F00C         	goto	u6790
  4024   00181E                     u6791:
  4025   00181E  EF18  F00C         	goto	l99
  4026   001822                     u6790:
  4027   001822  0E00               	movlw	0
  4028   001824  0100               	movlb	0	; () banked
  4029   001826  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4030   001828  0E08               	movlw	8
  4031   00182A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4032   00182C  EF18  F00C         	goto	l5588
  4033   001830                     l99:
  4034   001830                     l5588:
  4035                           
  4036                           ;color.c: 222:     return card_color;
  4037   001830  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  4038   001834  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  4039   001838  0012               	return		;funcret
  4040   00183A                     __end_of_color_cardCheck:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _color_read_Red *****************
  4044 ;; Defined at:
  4045 ;;		line 46 in file "color.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  tmp             2    9[COMRAM] unsigned int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    4[COMRAM] unsigned int 
  4052 ;; Registers used:
  4053 ;;		wreg, status,2, status,0, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;Total ram usage:        7 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 2
  4066 ;; This function calls:
  4067 ;;		_I2C_2_Master_Read
  4068 ;;		_I2C_2_Master_RepStart
  4069 ;;		_I2C_2_Master_Start
  4070 ;;		_I2C_2_Master_Stop
  4071 ;;		_I2C_2_Master_Write
  4072 ;; This function is called by:
  4073 ;;		_color_cardCheck
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text10
  4078   004130                     __ptext10:
  4079                           	callstack 0
  4080   004130                     _color_read_Red:
  4081                           	callstack 26
  4082   004130                     
  4083                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4084   004130  EC25  F022         	call	_I2C_2_Master_Start	;wreg free
  4085                           
  4086                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4087   004134  0E52               	movlw	82
  4088   004136  EC1A  F022         	call	_I2C_2_Master_Write
  4089                           
  4090                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  4091   00413A  0EB6               	movlw	182
  4092   00413C  EC1A  F022         	call	_I2C_2_Master_Write
  4093                           
  4094                           ;color.c: 52:  I2C_2_Master_RepStart();
  4095   004140  EC2A  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4096                           
  4097                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4098   004144  0E53               	movlw	83
  4099   004146  EC1A  F022         	call	_I2C_2_Master_Write
  4100                           
  4101                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4102   00414A  0E01               	movlw	1
  4103   00414C  EC5B  F021         	call	_I2C_2_Master_Read
  4104   004150  6E07               	movwf	??_color_read_Red^0,c
  4105   004152  5007               	movf	??_color_read_Red^0,w,c
  4106   004154  6E0A               	movwf	color_read_Red@tmp^0,c
  4107   004156  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4108                           
  4109                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4110   004158  0E00               	movlw	0
  4111   00415A  EC5B  F021         	call	_I2C_2_Master_Read
  4112   00415E  6E07               	movwf	??_color_read_Red^0,c
  4113   004160  5007               	movf	??_color_read_Red^0,w,c
  4114   004162  6E09               	movwf	(??_color_read_Red+2)^0,c
  4115   004164  6A08               	clrf	(??_color_read_Red+1)^0,c
  4116   004166  500A               	movf	color_read_Red@tmp^0,w,c
  4117   004168  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4118   00416A  6E0A               	movwf	color_read_Red@tmp^0,c
  4119   00416C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4120   00416E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4121   004170  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4122                           
  4123                           ;color.c: 56:  I2C_2_Master_Stop();
  4124   004172  EC20  F022         	call	_I2C_2_Master_Stop	;wreg free
  4125   004176                     
  4126                           ;color.c: 57:  return tmp;
  4127   004176  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4128   00417A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4129   00417E  0012               	return		;funcret
  4130   004180                     __end_of_color_read_Red:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _color_read_Green *****************
  4134 ;; Defined at:
  4135 ;;		line 60 in file "color.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  tmp             2    9[COMRAM] unsigned int 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2    4[COMRAM] unsigned int 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        7 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 2
  4156 ;; This function calls:
  4157 ;;		_I2C_2_Master_Read
  4158 ;;		_I2C_2_Master_RepStart
  4159 ;;		_I2C_2_Master_Start
  4160 ;;		_I2C_2_Master_Stop
  4161 ;;		_I2C_2_Master_Write
  4162 ;; This function is called by:
  4163 ;;		_color_cardCheck
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text11
  4168   004180                     __ptext11:
  4169                           	callstack 0
  4170   004180                     _color_read_Green:
  4171                           	callstack 26
  4172   004180                     
  4173                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4174   004180  EC25  F022         	call	_I2C_2_Master_Start	;wreg free
  4175                           
  4176                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4177   004184  0E52               	movlw	82
  4178   004186  EC1A  F022         	call	_I2C_2_Master_Write
  4179                           
  4180                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  4181   00418A  0EB8               	movlw	184
  4182   00418C  EC1A  F022         	call	_I2C_2_Master_Write
  4183                           
  4184                           ;color.c: 66:  I2C_2_Master_RepStart();
  4185   004190  EC2A  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4186                           
  4187                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4188   004194  0E53               	movlw	83
  4189   004196  EC1A  F022         	call	_I2C_2_Master_Write
  4190                           
  4191                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4192   00419A  0E01               	movlw	1
  4193   00419C  EC5B  F021         	call	_I2C_2_Master_Read
  4194   0041A0  6E07               	movwf	??_color_read_Green^0,c
  4195   0041A2  5007               	movf	??_color_read_Green^0,w,c
  4196   0041A4  6E0A               	movwf	color_read_Green@tmp^0,c
  4197   0041A6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4198                           
  4199                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4200   0041A8  0E00               	movlw	0
  4201   0041AA  EC5B  F021         	call	_I2C_2_Master_Read
  4202   0041AE  6E07               	movwf	??_color_read_Green^0,c
  4203   0041B0  5007               	movf	??_color_read_Green^0,w,c
  4204   0041B2  6E09               	movwf	(??_color_read_Green+2)^0,c
  4205   0041B4  6A08               	clrf	(??_color_read_Green+1)^0,c
  4206   0041B6  500A               	movf	color_read_Green@tmp^0,w,c
  4207   0041B8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4208   0041BA  6E0A               	movwf	color_read_Green@tmp^0,c
  4209   0041BC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4210   0041BE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4211   0041C0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4212                           
  4213                           ;color.c: 70:  I2C_2_Master_Stop();
  4214   0041C2  EC20  F022         	call	_I2C_2_Master_Stop	;wreg free
  4215   0041C6                     
  4216                           ;color.c: 71:  return tmp;
  4217   0041C6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4218   0041CA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4219   0041CE  0012               	return		;funcret
  4220   0041D0                     __end_of_color_read_Green:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _color_read_Clear *****************
  4224 ;; Defined at:
  4225 ;;		line 88 in file "color.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  tmp             2    9[COMRAM] unsigned int 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  2    4[COMRAM] unsigned int 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;Total ram usage:        7 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 2
  4246 ;; This function calls:
  4247 ;;		_I2C_2_Master_Read
  4248 ;;		_I2C_2_Master_RepStart
  4249 ;;		_I2C_2_Master_Start
  4250 ;;		_I2C_2_Master_Stop
  4251 ;;		_I2C_2_Master_Write
  4252 ;; This function is called by:
  4253 ;;		_color_cardCheck
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text12
  4258   0041D0                     __ptext12:
  4259                           	callstack 0
  4260   0041D0                     _color_read_Clear:
  4261                           	callstack 26
  4262   0041D0                     
  4263                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4264   0041D0  EC25  F022         	call	_I2C_2_Master_Start	;wreg free
  4265                           
  4266                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4267   0041D4  0E52               	movlw	82
  4268   0041D6  EC1A  F022         	call	_I2C_2_Master_Write
  4269                           
  4270                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  4271   0041DA  0EB4               	movlw	180
  4272   0041DC  EC1A  F022         	call	_I2C_2_Master_Write
  4273                           
  4274                           ;color.c: 96:  I2C_2_Master_RepStart();
  4275   0041E0  EC2A  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4276                           
  4277                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4278   0041E4  0E53               	movlw	83
  4279   0041E6  EC1A  F022         	call	_I2C_2_Master_Write
  4280                           
  4281                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4282   0041EA  0E01               	movlw	1
  4283   0041EC  EC5B  F021         	call	_I2C_2_Master_Read
  4284   0041F0  6E07               	movwf	??_color_read_Clear^0,c
  4285   0041F2  5007               	movf	??_color_read_Clear^0,w,c
  4286   0041F4  6E0A               	movwf	color_read_Clear@tmp^0,c
  4287   0041F6  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4288                           
  4289                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4290   0041F8  0E00               	movlw	0
  4291   0041FA  EC5B  F021         	call	_I2C_2_Master_Read
  4292   0041FE  6E07               	movwf	??_color_read_Clear^0,c
  4293   004200  5007               	movf	??_color_read_Clear^0,w,c
  4294   004202  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4295   004204  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4296   004206  500A               	movf	color_read_Clear@tmp^0,w,c
  4297   004208  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4298   00420A  6E0A               	movwf	color_read_Clear@tmp^0,c
  4299   00420C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4300   00420E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4301   004210  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4302                           
  4303                           ;color.c: 100:  I2C_2_Master_Stop();
  4304   004212  EC20  F022         	call	_I2C_2_Master_Stop	;wreg free
  4305   004216                     
  4306                           ;color.c: 101:  return tmp;
  4307   004216  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4308   00421A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4309   00421E  0012               	return		;funcret
  4310   004220                     __end_of_color_read_Clear:
  4311                           	callstack 0
  4312                           
  4313 ;; *************** function _color_read_Blue *****************
  4314 ;; Defined at:
  4315 ;;		line 74 in file "color.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  tmp             2    9[COMRAM] unsigned int 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  2    4[COMRAM] unsigned int 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;Total ram usage:        7 bytes
  4334 ;; Hardware stack levels used: 1
  4335 ;; Hardware stack levels required when called: 2
  4336 ;; This function calls:
  4337 ;;		_I2C_2_Master_Read
  4338 ;;		_I2C_2_Master_RepStart
  4339 ;;		_I2C_2_Master_Start
  4340 ;;		_I2C_2_Master_Stop
  4341 ;;		_I2C_2_Master_Write
  4342 ;; This function is called by:
  4343 ;;		_color_cardCheck
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text13
  4348   004220                     __ptext13:
  4349                           	callstack 0
  4350   004220                     _color_read_Blue:
  4351                           	callstack 26
  4352   004220                     
  4353                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4354   004220  EC25  F022         	call	_I2C_2_Master_Start	;wreg free
  4355                           
  4356                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4357   004224  0E52               	movlw	82
  4358   004226  EC1A  F022         	call	_I2C_2_Master_Write
  4359                           
  4360                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  4361   00422A  0EBA               	movlw	186
  4362   00422C  EC1A  F022         	call	_I2C_2_Master_Write
  4363                           
  4364                           ;color.c: 80:  I2C_2_Master_RepStart();
  4365   004230  EC2A  F022         	call	_I2C_2_Master_RepStart	;wreg free
  4366                           
  4367                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4368   004234  0E53               	movlw	83
  4369   004236  EC1A  F022         	call	_I2C_2_Master_Write
  4370                           
  4371                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4372   00423A  0E01               	movlw	1
  4373   00423C  EC5B  F021         	call	_I2C_2_Master_Read
  4374   004240  6E07               	movwf	??_color_read_Blue^0,c
  4375   004242  5007               	movf	??_color_read_Blue^0,w,c
  4376   004244  6E0A               	movwf	color_read_Blue@tmp^0,c
  4377   004246  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4378                           
  4379                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4380   004248  0E00               	movlw	0
  4381   00424A  EC5B  F021         	call	_I2C_2_Master_Read
  4382   00424E  6E07               	movwf	??_color_read_Blue^0,c
  4383   004250  5007               	movf	??_color_read_Blue^0,w,c
  4384   004252  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4385   004254  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4386   004256  500A               	movf	color_read_Blue@tmp^0,w,c
  4387   004258  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4388   00425A  6E0A               	movwf	color_read_Blue@tmp^0,c
  4389   00425C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4390   00425E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4391   004260  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4392                           
  4393                           ;color.c: 84:  I2C_2_Master_Stop();
  4394   004262  EC20  F022         	call	_I2C_2_Master_Stop	;wreg free
  4395   004266                     
  4396                           ;color.c: 85:  return tmp;
  4397   004266  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4398   00426A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4399   00426E  0012               	return		;funcret
  4400   004270                     __end_of_color_read_Blue:
  4401                           	callstack 0
  4402                           
  4403 ;; *************** function _I2C_2_Master_Write *****************
  4404 ;; Defined at:
  4405 ;;		line 45 in file "i2c.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  data_byte       1    wreg     unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  data_byte       1    1[COMRAM] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;Total ram usage:        1 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 1
  4426 ;; This function calls:
  4427 ;;		_I2C_2_Master_Idle
  4428 ;; This function is called by:
  4429 ;;		_color_writetoaddr
  4430 ;;		_color_read_Red
  4431 ;;		_color_read_Green
  4432 ;;		_color_read_Blue
  4433 ;;		_color_read_Clear
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text14
  4438   004434                     __ptext14:
  4439                           	callstack 0
  4440   004434                     _I2C_2_Master_Write:
  4441                           	callstack 26
  4442                           
  4443                           ;incstack = 0
  4444                           ;I2C_2_Master_Write@data_byte stored from wreg
  4445   004434  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4446   004436                     
  4447                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4448   004436  ECE3  F021         	call	_I2C_2_Master_Idle	;wreg free
  4449   00443A                     
  4450                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4451   00443A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4452   00443E  0012               	return		;funcret
  4453   004440                     __end_of_I2C_2_Master_Write:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _I2C_2_Master_Stop *****************
  4457 ;; Defined at:
  4458 ;;		line 39 in file "i2c.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; Hardware stack levels required when called: 1
  4479 ;; This function calls:
  4480 ;;		_I2C_2_Master_Idle
  4481 ;; This function is called by:
  4482 ;;		_color_writetoaddr
  4483 ;;		_color_read_Red
  4484 ;;		_color_read_Green
  4485 ;;		_color_read_Blue
  4486 ;;		_color_read_Clear
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text15
  4491   004440                     __ptext15:
  4492                           	callstack 0
  4493   004440                     _I2C_2_Master_Stop:
  4494                           	callstack 26
  4495   004440                     
  4496                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4497   004440  ECE3  F021         	call	_I2C_2_Master_Idle	;wreg free
  4498   004444                     
  4499                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4500   004444  010E               	movlb	14	; () banked
  4501   004446  85DA               	bsf	218,2,b	;volatile
  4502   004448                     
  4503                           ; BSR set to: 14
  4504   004448  0012               	return		;funcret
  4505   00444A                     __end_of_I2C_2_Master_Stop:
  4506                           	callstack 0
  4507                           
  4508 ;; *************** function _I2C_2_Master_Start *****************
  4509 ;; Defined at:
  4510 ;;		line 27 in file "i2c.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 1
  4531 ;; This function calls:
  4532 ;;		_I2C_2_Master_Idle
  4533 ;; This function is called by:
  4534 ;;		_color_writetoaddr
  4535 ;;		_color_read_Red
  4536 ;;		_color_read_Green
  4537 ;;		_color_read_Blue
  4538 ;;		_color_read_Clear
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text16
  4543   00444A                     __ptext16:
  4544                           	callstack 0
  4545   00444A                     _I2C_2_Master_Start:
  4546                           	callstack 26
  4547   00444A                     
  4548                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4549   00444A  ECE3  F021         	call	_I2C_2_Master_Idle	;wreg free
  4550   00444E                     
  4551                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4552   00444E  010E               	movlb	14	; () banked
  4553   004450  81DA               	bsf	218,0,b	;volatile
  4554   004452                     
  4555                           ; BSR set to: 14
  4556   004452  0012               	return		;funcret
  4557   004454                     __end_of_I2C_2_Master_Start:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _I2C_2_Master_RepStart *****************
  4561 ;; Defined at:
  4562 ;;		line 33 in file "i2c.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 1
  4583 ;; This function calls:
  4584 ;;		_I2C_2_Master_Idle
  4585 ;; This function is called by:
  4586 ;;		_color_read_Red
  4587 ;;		_color_read_Green
  4588 ;;		_color_read_Blue
  4589 ;;		_color_read_Clear
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text17
  4594   004454                     __ptext17:
  4595                           	callstack 0
  4596   004454                     _I2C_2_Master_RepStart:
  4597                           	callstack 26
  4598   004454                     
  4599                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4600   004454  ECE3  F021         	call	_I2C_2_Master_Idle	;wreg free
  4601   004458                     
  4602                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4603   004458  010E               	movlb	14	; () banked
  4604   00445A  83DA               	bsf	218,1,b	;volatile
  4605   00445C                     
  4606                           ; BSR set to: 14
  4607   00445C  0012               	return		;funcret
  4608   00445E                     __end_of_I2C_2_Master_RepStart:
  4609                           	callstack 0
  4610                           
  4611 ;; *************** function _I2C_2_Master_Read *****************
  4612 ;; Defined at:
  4613 ;;		line 51 in file "i2c.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  ack             1    wreg     unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  ack             1    2[COMRAM] unsigned char 
  4618 ;;  tmp             1    3[COMRAM] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      unsigned char 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4630 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4631 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;Total ram usage:        3 bytes
  4633 ;; Hardware stack levels used: 1
  4634 ;; Hardware stack levels required when called: 1
  4635 ;; This function calls:
  4636 ;;		_I2C_2_Master_Idle
  4637 ;; This function is called by:
  4638 ;;		_color_read_Red
  4639 ;;		_color_read_Green
  4640 ;;		_color_read_Blue
  4641 ;;		_color_read_Clear
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text18
  4646   0042B6                     __ptext18:
  4647                           	callstack 0
  4648   0042B6                     _I2C_2_Master_Read:
  4649                           	callstack 26
  4650                           
  4651                           ; BSR set to: 14
  4652                           ;incstack = 0
  4653                           ;I2C_2_Master_Read@ack stored from wreg
  4654   0042B6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4655   0042B8                     
  4656                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4657   0042B8  ECE3  F021         	call	_I2C_2_Master_Idle	;wreg free
  4658   0042BC                     
  4659                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4660   0042BC  010E               	movlb	14	; () banked
  4661   0042BE  87DA               	bsf	218,3,b	;volatile
  4662                           
  4663                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4664   0042C0  ECE3  F021         	call	_I2C_2_Master_Idle	;wreg free
  4665   0042C4                     
  4666                           ;i2c.c: 57:   tmp = SSP2BUF;
  4667   0042C4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4668                           
  4669                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4670   0042C8  ECE3  F021         	call	_I2C_2_Master_Idle	;wreg free
  4671   0042CC                     
  4672                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4673   0042CC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4674   0042CE  B4D8               	btfsc	status,2,c
  4675   0042D0  EF6C  F021         	goto	u6031
  4676   0042D4  EF70  F021         	goto	u6030
  4677   0042D8                     u6031:
  4678   0042D8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4679   0042DA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4680   0042DC  EF71  F021         	goto	u6048
  4681   0042E0                     u6030:
  4682   0042E0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4683   0042E2                     u6048:
  4684   0042E2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4685   0042E4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4686   0042E6  010E               	movlb	14	; () banked
  4687   0042E8  51DA               	movf	218,w,b	;volatile
  4688   0042EA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4689   0042EC  0BDF               	andlw	-33
  4690   0042EE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4691   0042F0  6FDA               	movwf	218,b	;volatile
  4692   0042F2                     
  4693                           ; BSR set to: 14
  4694                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4695   0042F2  89DA               	bsf	218,4,b	;volatile
  4696   0042F4                     
  4697                           ; BSR set to: 14
  4698                           ;i2c.c: 61:   return tmp;
  4699   0042F4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4700   0042F6                     
  4701                           ; BSR set to: 14
  4702   0042F6  0012               	return		;funcret
  4703   0042F8                     __end_of_I2C_2_Master_Read:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _I2C_2_Master_Idle *****************
  4707 ;; Defined at:
  4708 ;;		line 22 in file "i2c.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;Total ram usage:        1 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_I2C_2_Master_Start
  4732 ;;		_I2C_2_Master_RepStart
  4733 ;;		_I2C_2_Master_Stop
  4734 ;;		_I2C_2_Master_Write
  4735 ;;		_I2C_2_Master_Read
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text19
  4740   0043C6                     __ptext19:
  4741                           	callstack 0
  4742   0043C6                     _I2C_2_Master_Idle:
  4743                           	callstack 26
  4744   0043C6                     l402:
  4745   0043C6  010E               	movlb	14	; () banked
  4746   0043C8  B5D8               	btfsc	216,2,b	;volatile
  4747   0043CA  EFE9  F021         	goto	u5391
  4748   0043CE  EFEB  F021         	goto	u5390
  4749   0043D2                     u5391:
  4750   0043D2  EFE3  F021         	goto	l402
  4751   0043D6                     u5390:
  4752   0043D6                     
  4753                           ; BSR set to: 14
  4754   0043D6  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4755   0043DA  0E1F               	movlw	31
  4756   0043DC  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4757   0043DE  A4D8               	btfss	status,2,c
  4758   0043E0  EFF4  F021         	goto	u5401
  4759   0043E4  EFF6  F021         	goto	u5400
  4760   0043E8                     u5401:
  4761   0043E8  EFE3  F021         	goto	l402
  4762   0043EC                     u5400:
  4763   0043EC                     
  4764                           ; BSR set to: 14
  4765   0043EC  0012               	return		;funcret
  4766   0043EE                     __end_of_I2C_2_Master_Idle:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function _RGB_to_HSV *****************
  4770 ;; Defined at:
  4771 ;;		line 125 in file "color.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  R               4   10[BANK0 ] float 
  4774 ;;  G               4   14[BANK0 ] float 
  4775 ;;  B               4   18[BANK0 ] float 
  4776 ;;  C               4   22[BANK0 ] float 
  4777 ;;  H               1   26[BANK0 ] PTR float 
  4778 ;;		 -> color_cardCheck@H(4), 
  4779 ;;  S               1   27[BANK0 ] PTR float 
  4780 ;;		 -> color_cardCheck@S(4), 
  4781 ;;  V               1   28[BANK0 ] PTR float 
  4782 ;;		 -> color_cardCheck@V(4), 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  b               4   93[BANK0 ] float 
  4785 ;;  g               4   89[BANK0 ] float 
  4786 ;;  r               4   85[BANK0 ] float 
  4787 ;;  maxRGB          4   81[BANK0 ] float 
  4788 ;;  deltaRGB        4   77[BANK0 ] float 
  4789 ;;  H_temp          4   73[BANK0 ] float 
  4790 ;;  minRGB          4   57[BANK0 ] float 
  4791 ;;  c_norm          4   29[BANK0 ] float 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4801 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;Total ram usage:       87 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 3
  4808 ;; This function calls:
  4809 ;;		___fladd
  4810 ;;		___fldiv
  4811 ;;		___fleq
  4812 ;;		___flge
  4813 ;;		___flmul
  4814 ;;		___flsub
  4815 ;;		_custom_floatmodulo
  4816 ;; This function is called by:
  4817 ;;		_color_cardCheck
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text20
  4822   00183A                     __ptext20:
  4823                           	callstack 0
  4824   00183A                     _RGB_to_HSV:
  4825                           	callstack 25
  4826   00183A                     
  4827                           ;color.c: 128:     float r = R/65535.0;
  4828   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  4829   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  4830   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  4831   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  4832   00184A  0E00               	movlw	0
  4833   00184C  6E26               	movwf	___fldiv@a^0,c
  4834   00184E  0EFF               	movlw	255
  4835   001850  6E27               	movwf	(___fldiv@a+1)^0,c
  4836   001852  0E7F               	movlw	127
  4837   001854  6E28               	movwf	(___fldiv@a+2)^0,c
  4838   001856  0E47               	movlw	71
  4839   001858  6E29               	movwf	(___fldiv@a+3)^0,c
  4840   00185A  ECFC  F016         	call	___fldiv	;wreg free
  4841   00185E  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  4842   001862  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  4843   001866  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  4844   00186A  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  4845                           
  4846                           ;color.c: 129:     float g = G/65535.0;
  4847   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  4848   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  4849   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  4850   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  4851   00187E  0E00               	movlw	0
  4852   001880  6E26               	movwf	___fldiv@a^0,c
  4853   001882  0EFF               	movlw	255
  4854   001884  6E27               	movwf	(___fldiv@a+1)^0,c
  4855   001886  0E7F               	movlw	127
  4856   001888  6E28               	movwf	(___fldiv@a+2)^0,c
  4857   00188A  0E47               	movlw	71
  4858   00188C  6E29               	movwf	(___fldiv@a+3)^0,c
  4859   00188E  ECFC  F016         	call	___fldiv	;wreg free
  4860   001892  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  4861   001896  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  4862   00189A  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  4863   00189E  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  4864                           
  4865                           ;color.c: 130:     float b = B/65535.0;
  4866   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  4867   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  4868   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  4869   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  4870   0018B2  0E00               	movlw	0
  4871   0018B4  6E26               	movwf	___fldiv@a^0,c
  4872   0018B6  0EFF               	movlw	255
  4873   0018B8  6E27               	movwf	(___fldiv@a+1)^0,c
  4874   0018BA  0E7F               	movlw	127
  4875   0018BC  6E28               	movwf	(___fldiv@a+2)^0,c
  4876   0018BE  0E47               	movlw	71
  4877   0018C0  6E29               	movwf	(___fldiv@a+3)^0,c
  4878   0018C2  ECFC  F016         	call	___fldiv	;wreg free
  4879   0018C6  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  4880   0018CA  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  4881   0018CE  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  4882   0018D2  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  4883                           
  4884                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  4885   0018D6  0E00               	movlw	0
  4886   0018D8  6E26               	movwf	___fldiv@a^0,c
  4887   0018DA  0EFF               	movlw	255
  4888   0018DC  6E27               	movwf	(___fldiv@a+1)^0,c
  4889   0018DE  0E7F               	movlw	127
  4890   0018E0  6E28               	movwf	(___fldiv@a+2)^0,c
  4891   0018E2  0E47               	movlw	71
  4892   0018E4  6E29               	movwf	(___fldiv@a+3)^0,c
  4893   0018E6  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  4894   0018EA  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  4895   0018EE  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  4896   0018F2  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  4897   0018F6  ECFC  F016         	call	___fldiv	;wreg free
  4898   0018FA  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2698
  4899   0018FE  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2698+1
  4900   001902  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2698+2
  4901   001906  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2698+3
  4902                           
  4903                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  4904   00190A  0E00               	movlw	0
  4905   00190C  6E22               	movwf	___fldiv@b^0,c
  4906   00190E  0E00               	movlw	0
  4907   001910  6E23               	movwf	(___fldiv@b+1)^0,c
  4908   001912  0E80               	movlw	128
  4909   001914  6E24               	movwf	(___fldiv@b+2)^0,c
  4910   001916  0E3F               	movlw	63
  4911   001918  6E25               	movwf	(___fldiv@b+3)^0,c
  4912   00191A  C081  F026         	movff	_RGB_to_HSV$2698,___fldiv@a
  4913   00191E  C082  F027         	movff	_RGB_to_HSV$2698+1,___fldiv@a+1
  4914   001922  C083  F028         	movff	_RGB_to_HSV$2698+2,___fldiv@a+2
  4915   001926  C084  F029         	movff	_RGB_to_HSV$2698+3,___fldiv@a+3
  4916   00192A  ECFC  F016         	call	___fldiv	;wreg free
  4917   00192E  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  4918   001932  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  4919   001936  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  4920   00193A  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  4921                           
  4922                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  4923   00193E  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4924   001942  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4925   001946  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4926   00194A  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4927   00194E  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4928   001952  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4929   001956  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4930   00195A  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4931   00195E  EC58  F01E         	call	___flge	;wreg free
  4932   001962  A0D8               	btfss	status,0,c
  4933   001964  EFB6  F00C         	goto	u6141
  4934   001968  EFB8  F00C         	goto	u6140
  4935   00196C                     u6141:
  4936   00196C  EFED  F00C         	goto	l5334
  4937   001970                     u6140:
  4938   001970  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4939   001974  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4940   001978  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4941   00197C  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4942   001980  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4943   001984  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4944   001988  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4945   00198C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4946   001990  EC58  F01E         	call	___flge	;wreg free
  4947   001994  A0D8               	btfss	status,0,c
  4948   001996  EFCF  F00C         	goto	u6151
  4949   00199A  EFD1  F00C         	goto	u6150
  4950   00199E                     u6151:
  4951   00199E  EFDB  F00C         	goto	l58
  4952   0019A2                     u6150:
  4953   0019A2  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  4954   0019A6  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  4955   0019AA  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  4956   0019AE  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  4957   0019B2  EFE3  F00C         	goto	l60
  4958   0019B6                     l58:
  4959   0019B6  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  4960   0019BA  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  4961   0019BE  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  4962   0019C2  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  4963   0019C6                     l60:
  4964   0019C6  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  4965   0019CA  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  4966   0019CE  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  4967   0019D2  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  4968   0019D6  EF20  F00D         	goto	l5338
  4969   0019DA                     l5334:
  4970   0019DA  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4971   0019DE  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4972   0019E2  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4973   0019E6  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4974   0019EA  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4975   0019EE  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4976   0019F2  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4977   0019F6  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4978   0019FA  EC58  F01E         	call	___flge	;wreg free
  4979   0019FE  A0D8               	btfss	status,0,c
  4980   001A00  EF04  F00D         	goto	u6161
  4981   001A04  EF06  F00D         	goto	u6160
  4982   001A08                     u6161:
  4983   001A08  EF10  F00D         	goto	l62
  4984   001A0C                     u6160:
  4985   001A0C  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  4986   001A10  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  4987   001A14  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  4988   001A18  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  4989   001A1C  EF18  F00D         	goto	l64
  4990   001A20                     l62:
  4991   001A20  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  4992   001A24  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  4993   001A28  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  4994   001A2C  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  4995   001A30                     l64:
  4996   001A30  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  4997   001A34  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  4998   001A38  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  4999   001A3C  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  5000   001A40                     l5338:
  5001                           
  5002                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  5003   001A40  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  5004   001A44  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  5005   001A48  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  5006   001A4C  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  5007   001A50  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  5008   001A54  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  5009   001A58  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  5010   001A5C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  5011   001A60  EC58  F01E         	call	___flge	;wreg free
  5012   001A64  A0D8               	btfss	status,0,c
  5013   001A66  EF37  F00D         	goto	u6171
  5014   001A6A  EF39  F00D         	goto	u6170
  5015   001A6E                     u6171:
  5016   001A6E  EF6E  F00D         	goto	l5344
  5017   001A72                     u6170:
  5018   001A72  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  5019   001A76  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  5020   001A7A  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  5021   001A7E  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  5022   001A82  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  5023   001A86  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  5024   001A8A  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  5025   001A8E  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  5026   001A92  EC58  F01E         	call	___flge	;wreg free
  5027   001A96  A0D8               	btfss	status,0,c
  5028   001A98  EF50  F00D         	goto	u6181
  5029   001A9C  EF52  F00D         	goto	u6180
  5030   001AA0                     u6181:
  5031   001AA0  EF5C  F00D         	goto	l70
  5032   001AA4                     u6180:
  5033   001AA4  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  5034   001AA8  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  5035   001AAC  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  5036   001AB0  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  5037   001AB4  EF64  F00D         	goto	l72
  5038   001AB8                     l70:
  5039   001AB8  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  5040   001ABC  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  5041   001AC0  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  5042   001AC4  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  5043   001AC8                     l72:
  5044   001AC8  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  5045   001ACC  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  5046   001AD0  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  5047   001AD4  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  5048   001AD8  EFA1  F00D         	goto	l5348
  5049   001ADC                     l5344:
  5050   001ADC  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  5051   001AE0  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  5052   001AE4  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  5053   001AE8  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  5054   001AEC  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  5055   001AF0  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  5056   001AF4  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  5057   001AF8  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  5058   001AFC  EC58  F01E         	call	___flge	;wreg free
  5059   001B00  A0D8               	btfss	status,0,c
  5060   001B02  EF85  F00D         	goto	u6191
  5061   001B06  EF87  F00D         	goto	u6190
  5062   001B0A                     u6191:
  5063   001B0A  EF91  F00D         	goto	l74
  5064   001B0E                     u6190:
  5065   001B0E  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  5066   001B12  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  5067   001B16  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  5068   001B1A  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  5069   001B1E  EF99  F00D         	goto	l76
  5070   001B22                     l74:
  5071   001B22  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  5072   001B26  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  5073   001B2A  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  5074   001B2E  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  5075   001B32                     l76:
  5076   001B32  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  5077   001B36  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  5078   001B3A  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  5079   001B3E  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  5080   001B42                     l5348:
  5081                           
  5082                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  5083   001B42  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  5084   001B46  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  5085   001B4A  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  5086   001B4E  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  5087   001B52  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  5088   001B56  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  5089   001B5A  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  5090   001B5E  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  5091   001B62  EC38  F021         	call	___flsub	;wreg free
  5092   001B66  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  5093   001B6A  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  5094   001B6E  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  5095   001B72  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  5096                           
  5097                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  5098   001B76  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  5099   001B7A  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  5100   001B7E  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  5101   001B82  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  5102   001B86  0E00               	movlw	0
  5103   001B88  6E05               	movwf	___fleq@ff2^0,c
  5104   001B8A  0E00               	movlw	0
  5105   001B8C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5106   001B8E  0E00               	movlw	0
  5107   001B90  6E07               	movwf	(___fleq@ff2+2)^0,c
  5108   001B92  0E00               	movlw	0
  5109   001B94  6E08               	movwf	(___fleq@ff2+3)^0,c
  5110   001B96  EC3C  F01F         	call	___fleq	;wreg free
  5111   001B9A  A0D8               	btfss	status,0,c
  5112   001B9C  EFD2  F00D         	goto	u6201
  5113   001BA0  EFD4  F00D         	goto	u6200
  5114   001BA4                     u6201:
  5115   001BA4  EFDF  F00D         	goto	l5352
  5116   001BA8                     u6200:
  5117   001BA8  0E00               	movlw	0
  5118   001BAA  0100               	movlb	0	; () banked
  5119   001BAC  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  5120   001BAE  0E00               	movlw	0
  5121   001BB0  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  5122   001BB2  0E00               	movlw	0
  5123   001BB4  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  5124   001BB6  0E00               	movlw	0
  5125   001BB8  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  5126   001BBA  EF40  F00F         	goto	l5372
  5127   001BBE                     l5352:
  5128   001BBE  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  5129   001BC2  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  5130   001BC6  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  5131   001BCA  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  5132   001BCE  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  5133   001BD2  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  5134   001BD6  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  5135   001BDA  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  5136   001BDE  EC3C  F01F         	call	___fleq	;wreg free
  5137   001BE2  A0D8               	btfss	status,0,c
  5138   001BE4  EFF6  F00D         	goto	u6211
  5139   001BE8  EFF8  F00D         	goto	u6210
  5140   001BEC                     u6211:
  5141   001BEC  EF5A  F00E         	goto	l5360
  5142   001BF0                     u6210:
  5143   001BF0  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  5144   001BF4  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  5145   001BF8  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  5146   001BFC  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  5147   001C00  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  5148   001C04  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  5149   001C08  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  5150   001C0C  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  5151   001C10  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  5152   001C14  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  5153   001C18  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  5154   001C1C  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  5155   001C20  EC38  F021         	call	___flsub	;wreg free
  5156   001C24  C01A  F022         	movff	?___flsub,___fldiv@b
  5157   001C28  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  5158   001C2C  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  5159   001C30  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  5160   001C34  ECFC  F016         	call	___fldiv	;wreg free
  5161   001C38  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2699
  5162   001C3C  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2699+1
  5163   001C40  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2699+2
  5164   001C44  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2699+3
  5165   001C48  0E00               	movlw	0
  5166   001C4A  6E58               	movwf	custom_floatmodulo@y^0,c
  5167   001C4C  0E00               	movlw	0
  5168   001C4E  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  5169   001C50  0EC0               	movlw	192
  5170   001C52  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  5171   001C54  0E40               	movlw	64
  5172   001C56  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  5173   001C58  C085  F054         	movff	_RGB_to_HSV$2699,custom_floatmodulo@x
  5174   001C5C  C086  F055         	movff	_RGB_to_HSV$2699+1,custom_floatmodulo@x+1
  5175   001C60  C087  F056         	movff	_RGB_to_HSV$2699+2,custom_floatmodulo@x+2
  5176   001C64  C088  F057         	movff	_RGB_to_HSV$2699+3,custom_floatmodulo@x+3
  5177   001C68  EC49  F01D         	call	_custom_floatmodulo	;wreg free
  5178   001C6C  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2700
  5179   001C70  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2700+1
  5180   001C74  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2700+2
  5181   001C78  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2700+3
  5182   001C7C  C089  F03B         	movff	_RGB_to_HSV$2700,___flmul@b
  5183   001C80  C08A  F03C         	movff	_RGB_to_HSV$2700+1,___flmul@b+1
  5184   001C84  C08B  F03D         	movff	_RGB_to_HSV$2700+2,___flmul@b+2
  5185   001C88  C08C  F03E         	movff	_RGB_to_HSV$2700+3,___flmul@b+3
  5186   001C8C  0E00               	movlw	0
  5187   001C8E  6E3F               	movwf	___flmul@a^0,c
  5188   001C90  0E00               	movlw	0
  5189   001C92  6E40               	movwf	(___flmul@a+1)^0,c
  5190   001C94  0E70               	movlw	112
  5191   001C96  6E41               	movwf	(___flmul@a+2)^0,c
  5192   001C98  0E42               	movlw	66
  5193   001C9A  6E42               	movwf	(___flmul@a+3)^0,c
  5194   001C9C  ECE7  F014         	call	___flmul	;wreg free
  5195   001CA0  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  5196   001CA4  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  5197   001CA8  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  5198   001CAC  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  5199   001CB0  EF40  F00F         	goto	l5372
  5200   001CB4                     l5360:
  5201   001CB4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  5202   001CB8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  5203   001CBC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  5204   001CC0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  5205   001CC4  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  5206   001CC8  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  5207   001CCC  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  5208   001CD0  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  5209   001CD4  EC3C  F01F         	call	___fleq	;wreg free
  5210   001CD8  A0D8               	btfss	status,0,c
  5211   001CDA  EF71  F00E         	goto	u6221
  5212   001CDE  EF73  F00E         	goto	u6220
  5213   001CE2                     u6221:
  5214   001CE2  EFCD  F00E         	goto	l5366
  5215   001CE6                     u6220:
  5216   001CE6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  5217   001CEA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  5218   001CEE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  5219   001CF2  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  5220   001CF6  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  5221   001CFA  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  5222   001CFE  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  5223   001D02  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  5224   001D06  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  5225   001D0A  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  5226   001D0E  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  5227   001D12  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  5228   001D16  EC38  F021         	call	___flsub	;wreg free
  5229   001D1A  C01A  F022         	movff	?___flsub,___fldiv@b
  5230   001D1E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  5231   001D22  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  5232   001D26  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  5233   001D2A  ECFC  F016         	call	___fldiv	;wreg free
  5234   001D2E  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2701
  5235   001D32  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2701+1
  5236   001D36  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2701+2
  5237   001D3A  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2701+3
  5238   001D3E  0E00               	movlw	0
  5239   001D40  6E05               	movwf	___fladd@a^0,c
  5240   001D42  0E00               	movlw	0
  5241   001D44  6E06               	movwf	(___fladd@a+1)^0,c
  5242   001D46  0E00               	movlw	0
  5243   001D48  6E07               	movwf	(___fladd@a+2)^0,c
  5244   001D4A  0E40               	movlw	64
  5245   001D4C  6E08               	movwf	(___fladd@a+3)^0,c
  5246   001D4E  C0A5  F001         	movff	_RGB_to_HSV$2701,___fladd@b
  5247   001D52  C0A6  F002         	movff	_RGB_to_HSV$2701+1,___fladd@b+1
  5248   001D56  C0A7  F003         	movff	_RGB_to_HSV$2701+2,___fladd@b+2
  5249   001D5A  C0A8  F004         	movff	_RGB_to_HSV$2701+3,___fladd@b+3
  5250   001D5E  EC87  F012         	call	___fladd	;wreg free
  5251   001D62  C001  F03B         	movff	?___fladd,___flmul@b
  5252   001D66  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  5253   001D6A  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  5254   001D6E  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  5255   001D72  0E00               	movlw	0
  5256   001D74  6E3F               	movwf	___flmul@a^0,c
  5257   001D76  0E00               	movlw	0
  5258   001D78  6E40               	movwf	(___flmul@a+1)^0,c
  5259   001D7A  0E70               	movlw	112
  5260   001D7C  6E41               	movwf	(___flmul@a+2)^0,c
  5261   001D7E  0E42               	movlw	66
  5262   001D80  6E42               	movwf	(___flmul@a+3)^0,c
  5263   001D82  ECE7  F014         	call	___flmul	;wreg free
  5264   001D86  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  5265   001D8A  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  5266   001D8E  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  5267   001D92  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  5268   001D96  EF40  F00F         	goto	l5372
  5269   001D9A                     l5366:
  5270   001D9A  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  5271   001D9E  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  5272   001DA2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  5273   001DA6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  5274   001DAA  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  5275   001DAE  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  5276   001DB2  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  5277   001DB6  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  5278   001DBA  EC3C  F01F         	call	___fleq	;wreg free
  5279   001DBE  A0D8               	btfss	status,0,c
  5280   001DC0  EFE4  F00E         	goto	u6231
  5281   001DC4  EFE6  F00E         	goto	u6230
  5282   001DC8                     u6231:
  5283   001DC8  EF40  F00F         	goto	l80
  5284   001DCC                     u6230:
  5285   001DCC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  5286   001DD0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  5287   001DD4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  5288   001DD8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  5289   001DDC  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  5290   001DE0  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  5291   001DE4  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  5292   001DE8  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  5293   001DEC  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  5294   001DF0  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  5295   001DF4  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  5296   001DF8  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  5297   001DFC  EC38  F021         	call	___flsub	;wreg free
  5298   001E00  C01A  F022         	movff	?___flsub,___fldiv@b
  5299   001E04  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  5300   001E08  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  5301   001E0C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  5302   001E10  ECFC  F016         	call	___fldiv	;wreg free
  5303   001E14  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2701
  5304   001E18  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2701+1
  5305   001E1C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2701+2
  5306   001E20  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2701+3
  5307   001E24  0E00               	movlw	0
  5308   001E26  6E05               	movwf	___fladd@a^0,c
  5309   001E28  0E00               	movlw	0
  5310   001E2A  6E06               	movwf	(___fladd@a+1)^0,c
  5311   001E2C  0E80               	movlw	128
  5312   001E2E  6E07               	movwf	(___fladd@a+2)^0,c
  5313   001E30  0E40               	movlw	64
  5314   001E32  6E08               	movwf	(___fladd@a+3)^0,c
  5315   001E34  C0A5  F001         	movff	_RGB_to_HSV$2701,___fladd@b
  5316   001E38  C0A6  F002         	movff	_RGB_to_HSV$2701+1,___fladd@b+1
  5317   001E3C  C0A7  F003         	movff	_RGB_to_HSV$2701+2,___fladd@b+2
  5318   001E40  C0A8  F004         	movff	_RGB_to_HSV$2701+3,___fladd@b+3
  5319   001E44  EC87  F012         	call	___fladd	;wreg free
  5320   001E48  C001  F03B         	movff	?___fladd,___flmul@b
  5321   001E4C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  5322   001E50  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  5323   001E54  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  5324   001E58  0E00               	movlw	0
  5325   001E5A  6E3F               	movwf	___flmul@a^0,c
  5326   001E5C  0E00               	movlw	0
  5327   001E5E  6E40               	movwf	(___flmul@a+1)^0,c
  5328   001E60  0E70               	movlw	112
  5329   001E62  6E41               	movwf	(___flmul@a+2)^0,c
  5330   001E64  0E42               	movlw	66
  5331   001E66  6E42               	movwf	(___flmul@a+3)^0,c
  5332   001E68  ECE7  F014         	call	___flmul	;wreg free
  5333   001E6C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  5334   001E70  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  5335   001E74  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  5336   001E78  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  5337   001E7C  EF40  F00F         	goto	l5372
  5338   001E80                     l80:
  5339   001E80                     l5372:
  5340                           
  5341                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  5342   001E80  0100               	movlb	0	; () banked
  5343   001E82  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  5344   001E84  EF48  F00F         	goto	u6240
  5345   001E88  EF46  F00F         	goto	u6241
  5346   001E8C                     u6241:
  5347   001E8C  EF62  F00F         	goto	l5376
  5348   001E90                     u6240:
  5349   001E90                     
  5350                           ; BSR set to: 0
  5351   001E90  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  5352   001E94  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  5353   001E98  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  5354   001E9C  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  5355   001EA0  0E00               	movlw	0
  5356   001EA2  6E05               	movwf	___fladd@a^0,c
  5357   001EA4  0E00               	movlw	0
  5358   001EA6  6E06               	movwf	(___fladd@a+1)^0,c
  5359   001EA8  0EB4               	movlw	180
  5360   001EAA  6E07               	movwf	(___fladd@a+2)^0,c
  5361   001EAC  0E43               	movlw	67
  5362   001EAE  6E08               	movwf	(___fladd@a+3)^0,c
  5363   001EB0  EC87  F012         	call	___fladd	;wreg free
  5364   001EB4  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  5365   001EB8  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  5366   001EBC  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  5367   001EC0  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  5368   001EC4                     l5376:
  5369                           
  5370                           ;color.c: 158:     *H = H_temp;
  5371   001EC4  0100               	movlb	0	; () banked
  5372   001EC6  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  5373   001EC8  6ED9               	movwf	fsr2l,c
  5374   001ECA  6ADA               	clrf	fsr2h,c
  5375   001ECC  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  5376   001ED0  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  5377   001ED4  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  5378   001ED8  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  5379   001EDC                     
  5380                           ; BSR set to: 0
  5381                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  5382   001EDC  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  5383   001EE0  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  5384   001EE4  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  5385   001EE8  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  5386   001EEC  0E00               	movlw	0
  5387   001EEE  6E05               	movwf	___fleq@ff2^0,c
  5388   001EF0  0E00               	movlw	0
  5389   001EF2  6E06               	movwf	(___fleq@ff2+1)^0,c
  5390   001EF4  0E00               	movlw	0
  5391   001EF6  6E07               	movwf	(___fleq@ff2+2)^0,c
  5392   001EF8  0E00               	movlw	0
  5393   001EFA  6E08               	movwf	(___fleq@ff2+3)^0,c
  5394   001EFC  EC3C  F01F         	call	___fleq	;wreg free
  5395   001F00  A0D8               	btfss	status,0,c
  5396   001F02  EF85  F00F         	goto	u6251
  5397   001F06  EF87  F00F         	goto	u6250
  5398   001F0A                     u6251:
  5399   001F0A  EF95  F00F         	goto	l5382
  5400   001F0E                     u6250:
  5401   001F0E  0100               	movlb	0	; () banked
  5402   001F10  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  5403   001F12  6ED9               	movwf	fsr2l,c
  5404   001F14  6ADA               	clrf	fsr2h,c
  5405   001F16  0E00               	movlw	0
  5406   001F18  6EDE               	movwf	postinc2,c
  5407   001F1A  0E00               	movlw	0
  5408   001F1C  6EDE               	movwf	postinc2,c
  5409   001F1E  0E00               	movlw	0
  5410   001F20  6EDE               	movwf	postinc2,c
  5411   001F22  0E00               	movlw	0
  5412   001F24  6EDD               	movwf	postdec2,c
  5413   001F26  EFC5  F00F         	goto	l5384
  5414   001F2A                     l5382:
  5415                           
  5416                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  5417   001F2A  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  5418   001F2E  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  5419   001F32  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  5420   001F36  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  5421   001F3A  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  5422   001F3E  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  5423   001F42  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  5424   001F46  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  5425   001F4A  ECFC  F016         	call	___fldiv	;wreg free
  5426   001F4E  C022  F03B         	movff	?___fldiv,___flmul@b
  5427   001F52  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  5428   001F56  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  5429   001F5A  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  5430   001F5E  0E00               	movlw	0
  5431   001F60  6E3F               	movwf	___flmul@a^0,c
  5432   001F62  0E00               	movlw	0
  5433   001F64  6E40               	movwf	(___flmul@a+1)^0,c
  5434   001F66  0EC8               	movlw	200
  5435   001F68  6E41               	movwf	(___flmul@a+2)^0,c
  5436   001F6A  0E42               	movlw	66
  5437   001F6C  6E42               	movwf	(___flmul@a+3)^0,c
  5438   001F6E  ECE7  F014         	call	___flmul	;wreg free
  5439   001F72  0100               	movlb	0	; () banked
  5440   001F74  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  5441   001F76  6ED9               	movwf	fsr2l,c
  5442   001F78  6ADA               	clrf	fsr2h,c
  5443   001F7A  C03B  FFDE         	movff	?___flmul,postinc2
  5444   001F7E  C03C  FFDE         	movff	?___flmul+1,postinc2
  5445   001F82  C03D  FFDE         	movff	?___flmul+2,postinc2
  5446   001F86  C03E  FFDE         	movff	?___flmul+3,postinc2
  5447   001F8A                     l5384:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  5451   001F8A  0E00               	movlw	0
  5452   001F8C  6E3F               	movwf	___flmul@a^0,c
  5453   001F8E  0E00               	movlw	0
  5454   001F90  6E40               	movwf	(___flmul@a+1)^0,c
  5455   001F92  0EC8               	movlw	200
  5456   001F94  6E41               	movwf	(___flmul@a+2)^0,c
  5457   001F96  0E42               	movlw	66
  5458   001F98  6E42               	movwf	(___flmul@a+3)^0,c
  5459   001F9A  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  5460   001F9E  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  5461   001FA2  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  5462   001FA6  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  5463   001FAA  ECE7  F014         	call	___flmul	;wreg free
  5464   001FAE  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2702
  5465   001FB2  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2702+1
  5466   001FB6  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2702+2
  5467   001FBA  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2702+3
  5468   001FBE                     
  5469                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  5470   001FBE  C08D  F03B         	movff	_RGB_to_HSV$2702,___flmul@b
  5471   001FC2  C08E  F03C         	movff	_RGB_to_HSV$2702+1,___flmul@b+1
  5472   001FC6  C08F  F03D         	movff	_RGB_to_HSV$2702+2,___flmul@b+2
  5473   001FCA  C090  F03E         	movff	_RGB_to_HSV$2702+3,___flmul@b+3
  5474   001FCE  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  5475   001FD2  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  5476   001FD6  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  5477   001FDA  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  5478   001FDE  ECE7  F014         	call	___flmul	;wreg free
  5479   001FE2  0100               	movlb	0	; () banked
  5480   001FE4  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  5481   001FE6  6ED9               	movwf	fsr2l,c
  5482   001FE8  6ADA               	clrf	fsr2h,c
  5483   001FEA  C03B  FFDE         	movff	?___flmul,postinc2
  5484   001FEE  C03C  FFDE         	movff	?___flmul+1,postinc2
  5485   001FF2  C03D  FFDE         	movff	?___flmul+2,postinc2
  5486   001FF6  C03E  FFDE         	movff	?___flmul+3,postinc2
  5487   001FFA                     
  5488                           ; BSR set to: 0
  5489   001FFA  0012               	return		;funcret
  5490   001FFC                     __end_of_RGB_to_HSV:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function _custom_floatmodulo *****************
  5494 ;; Defined at:
  5495 ;;		line 106 in file "color.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  x               4   83[COMRAM] float 
  5498 ;;  y               4   87[COMRAM] float 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  remainder       4    4[BANK0 ] float 
  5501 ;;  quotient        4    0[BANK0 ] float 
  5502 ;;  intPart         2    8[BANK0 ] int 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  4   83[COMRAM] float 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5512 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;Total ram usage:       18 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; Hardware stack levels required when called: 2
  5519 ;; This function calls:
  5520 ;;		___fldiv
  5521 ;;		___fleq
  5522 ;;		___flmul
  5523 ;;		___flsub
  5524 ;;		___fltol
  5525 ;;		___xxtofl
  5526 ;; This function is called by:
  5527 ;;		_RGB_to_HSV
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text21
  5532   003A92                     __ptext21:
  5533                           	callstack 0
  5534   003A92                     _custom_floatmodulo:
  5535                           	callstack 25
  5536   003A92                     
  5537                           ;color.c: 108:     if (y == 0.0) {
  5538   003A92  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  5539   003A96  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  5540   003A9A  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  5541   003A9E  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  5542   003AA2  0E00               	movlw	0
  5543   003AA4  6E05               	movwf	___fleq@ff2^0,c
  5544   003AA6  0E00               	movlw	0
  5545   003AA8  6E06               	movwf	(___fleq@ff2+1)^0,c
  5546   003AAA  0E00               	movlw	0
  5547   003AAC  6E07               	movwf	(___fleq@ff2+2)^0,c
  5548   003AAE  0E00               	movlw	0
  5549   003AB0  6E08               	movwf	(___fleq@ff2+3)^0,c
  5550   003AB2  EC3C  F01F         	call	___fleq	;wreg free
  5551   003AB6  A0D8               	btfss	status,0,c
  5552   003AB8  EF60  F01D         	goto	u6051
  5553   003ABC  EF62  F01D         	goto	u6050
  5554   003AC0                     u6051:
  5555   003AC0  EF6C  F01D         	goto	l5232
  5556   003AC4                     u6050:
  5557   003AC4                     
  5558                           ;color.c: 109:         return 0.0;
  5559   003AC4  0E00               	movlw	0
  5560   003AC6  6E54               	movwf	?_custom_floatmodulo^0,c
  5561   003AC8  0E00               	movlw	0
  5562   003ACA  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  5563   003ACC  0E00               	movlw	0
  5564   003ACE  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  5565   003AD0  0E00               	movlw	0
  5566   003AD2  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  5567   003AD4  EFD4  F01D         	goto	l50
  5568   003AD8                     l5232:
  5569                           
  5570                           ;color.c: 113:     float quotient = x / y;
  5571   003AD8  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  5572   003ADC  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  5573   003AE0  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  5574   003AE4  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  5575   003AE8  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  5576   003AEC  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  5577   003AF0  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  5578   003AF4  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  5579   003AF8  ECFC  F016         	call	___fldiv	;wreg free
  5580   003AFC  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  5581   003B00  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  5582   003B04  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  5583   003B08  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  5584                           
  5585                           ;color.c: 116:     int intPart = (int)quotient;
  5586   003B0C  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  5587   003B10  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  5588   003B14  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  5589   003B18  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  5590   003B1C  ECD5  F01D         	call	___fltol	;wreg free
  5591   003B20  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  5592   003B24  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  5593   003B28                     
  5594                           ;color.c: 119:     float remainder = x - intPart * y;
  5595   003B28  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  5596   003B2C  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  5597   003B30  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  5598   003B34  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  5599   003B38  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  5600   003B3C  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  5601   003B40  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  5602   003B44  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  5603   003B48  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  5604   003B4C  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  5605   003B50  0E00               	movlw	0
  5606   003B52  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  5607   003B54  0EFF               	movlw	-1
  5608   003B56  6E0E               	movwf	(___xxtofl@val+2)^0,c
  5609   003B58  6E0F               	movwf	(___xxtofl@val+3)^0,c
  5610   003B5A  0E01               	movlw	1
  5611   003B5C  ECC9  F018         	call	___xxtofl
  5612   003B60  C00C  F03B         	movff	?___xxtofl,___flmul@b
  5613   003B64  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  5614   003B68  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  5615   003B6C  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  5616   003B70  ECE7  F014         	call	___flmul	;wreg free
  5617   003B74  C03B  F01E         	movff	?___flmul,___flsub@a
  5618   003B78  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  5619   003B7C  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  5620   003B80  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  5621   003B84  EC38  F021         	call	___flsub	;wreg free
  5622   003B88  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  5623   003B8C  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  5624   003B90  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  5625   003B94  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  5626   003B98                     
  5627                           ;color.c: 121:     return remainder;
  5628   003B98  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  5629   003B9C  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  5630   003BA0  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  5631   003BA4  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  5632   003BA8                     l50:
  5633   003BA8  0012               	return		;funcret
  5634   003BAA                     __end_of_custom_floatmodulo:
  5635                           	callstack 0
  5636                           
  5637 ;; *************** function ___xxtofl *****************
  5638 ;; Defined at:
  5639 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  sign            1    wreg     unsigned char 
  5642 ;;  val             4   11[COMRAM] long 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  sign            1   19[COMRAM] unsigned char 
  5645 ;;  arg             4   21[COMRAM] unsigned long 
  5646 ;;  exp             1   20[COMRAM] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  4   11[COMRAM] unsigned char 
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5659 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5660 ;;Total ram usage:       14 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_custom_floatmodulo
  5666 ;;		_color_cardCheck
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text22
  5671   003192                     __ptext22:
  5672                           	callstack 0
  5673   003192                     ___xxtofl:
  5674                           	callstack 28
  5675                           
  5676                           ;incstack = 0
  5677                           ;___xxtofl@sign stored from wreg
  5678   003192  6E14               	movwf	___xxtofl@sign^0,c
  5679   003194  5014               	movf	___xxtofl@sign^0,w,c
  5680   003196  B4D8               	btfsc	status,2,c
  5681   003198  EFD0  F018         	goto	u5931
  5682   00319C  EFD2  F018         	goto	u5930
  5683   0031A0                     u5931:
  5684   0031A0  EFF4  F018         	goto	l1252
  5685   0031A4                     u5930:
  5686   0031A4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5687   0031A6  EFD9  F018         	goto	u5940
  5688   0031AA  EFD7  F018         	goto	u5941
  5689   0031AE                     u5941:
  5690   0031AE  EFF4  F018         	goto	l1252
  5691   0031B2                     u5940:
  5692   0031B2  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  5693   0031B6  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  5694   0031BA  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  5695   0031BE  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  5696   0031C2  1E10               	comf	??___xxtofl^0,f,c
  5697   0031C4  1E11               	comf	(??___xxtofl+1)^0,f,c
  5698   0031C6  1E12               	comf	(??___xxtofl+2)^0,f,c
  5699   0031C8  1E13               	comf	(??___xxtofl+3)^0,f,c
  5700   0031CA  2A10               	incf	??___xxtofl^0,f,c
  5701   0031CC  0E00               	movlw	0
  5702   0031CE  2211               	addwfc	(??___xxtofl+1)^0,f,c
  5703   0031D0  2212               	addwfc	(??___xxtofl+2)^0,f,c
  5704   0031D2  2213               	addwfc	(??___xxtofl+3)^0,f,c
  5705   0031D4  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  5706   0031D8  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  5707   0031DC  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  5708   0031E0  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  5709   0031E4  EFFC  F018         	goto	l5156
  5710   0031E8                     l1252:
  5711   0031E8  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  5712   0031EC  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5713   0031F0  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5714   0031F4  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5715   0031F8                     l5156:
  5716   0031F8  500C               	movf	___xxtofl@val^0,w,c
  5717   0031FA  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  5718   0031FC  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  5719   0031FE  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  5720   003200  A4D8               	btfss	status,2,c
  5721   003202  EF05  F019         	goto	u5951
  5722   003206  EF07  F019         	goto	u5950
  5723   00320A                     u5951:
  5724   00320A  EF11  F019         	goto	l5162
  5725   00320E                     u5950:
  5726   00320E  0E00               	movlw	0
  5727   003210  6E0C               	movwf	?___xxtofl^0,c
  5728   003212  0E00               	movlw	0
  5729   003214  6E0D               	movwf	(?___xxtofl+1)^0,c
  5730   003216  0E00               	movlw	0
  5731   003218  6E0E               	movwf	(?___xxtofl+2)^0,c
  5732   00321A  0E00               	movlw	0
  5733   00321C  6E0F               	movwf	(?___xxtofl+3)^0,c
  5734   00321E  EFA2  F019         	goto	l1255
  5735   003222                     l5162:
  5736   003222  0E96               	movlw	150
  5737   003224  6E15               	movwf	___xxtofl@exp^0,c
  5738   003226  EF1B  F019         	goto	l5166
  5739   00322A                     l5164:
  5740   00322A  2A15               	incf	___xxtofl@exp^0,f,c
  5741   00322C  90D8               	bcf	status,0,c
  5742   00322E  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  5743   003230  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  5744   003232  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  5745   003234  3216               	rrcf	___xxtofl@arg^0,f,c
  5746   003236                     l5166:
  5747   003236  0E00               	movlw	0
  5748   003238  1416               	andwf	___xxtofl@arg^0,w,c
  5749   00323A  6E10               	movwf	??___xxtofl^0,c
  5750   00323C  0E00               	movlw	0
  5751   00323E  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  5752   003240  6E11               	movwf	(??___xxtofl+1)^0,c
  5753   003242  0E00               	movlw	0
  5754   003244  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  5755   003246  6E12               	movwf	(??___xxtofl+2)^0,c
  5756   003248  0EFE               	movlw	254
  5757   00324A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  5758   00324C  6E13               	movwf	(??___xxtofl+3)^0,c
  5759   00324E  5010               	movf	??___xxtofl^0,w,c
  5760   003250  1011               	iorwf	(??___xxtofl+1)^0,w,c
  5761   003252  1012               	iorwf	(??___xxtofl+2)^0,w,c
  5762   003254  1013               	iorwf	(??___xxtofl+3)^0,w,c
  5763   003256  A4D8               	btfss	status,2,c
  5764   003258  EF30  F019         	goto	u5961
  5765   00325C  EF32  F019         	goto	u5960
  5766   003260                     u5961:
  5767   003260  EF15  F019         	goto	l5164
  5768   003264                     u5960:
  5769   003264  EF40  F019         	goto	l1259
  5770   003268                     l5168:
  5771   003268  2A15               	incf	___xxtofl@exp^0,f,c
  5772   00326A  0E01               	movlw	1
  5773   00326C  2616               	addwf	___xxtofl@arg^0,f,c
  5774   00326E  0E00               	movlw	0
  5775   003270  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  5776   003272  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  5777   003274  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  5778   003276  90D8               	bcf	status,0,c
  5779   003278  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  5780   00327A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  5781   00327C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  5782   00327E  3216               	rrcf	___xxtofl@arg^0,f,c
  5783   003280                     l1259:
  5784   003280  0E00               	movlw	0
  5785   003282  1416               	andwf	___xxtofl@arg^0,w,c
  5786   003284  6E10               	movwf	??___xxtofl^0,c
  5787   003286  0E00               	movlw	0
  5788   003288  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  5789   00328A  6E11               	movwf	(??___xxtofl+1)^0,c
  5790   00328C  0E00               	movlw	0
  5791   00328E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  5792   003290  6E12               	movwf	(??___xxtofl+2)^0,c
  5793   003292  0EFF               	movlw	255
  5794   003294  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  5795   003296  6E13               	movwf	(??___xxtofl+3)^0,c
  5796   003298  5010               	movf	??___xxtofl^0,w,c
  5797   00329A  1011               	iorwf	(??___xxtofl+1)^0,w,c
  5798   00329C  1012               	iorwf	(??___xxtofl+2)^0,w,c
  5799   00329E  1013               	iorwf	(??___xxtofl+3)^0,w,c
  5800   0032A0  A4D8               	btfss	status,2,c
  5801   0032A2  EF55  F019         	goto	u5971
  5802   0032A6  EF57  F019         	goto	u5970
  5803   0032AA                     u5971:
  5804   0032AA  EF34  F019         	goto	l5168
  5805   0032AE                     u5970:
  5806   0032AE  EF5F  F019         	goto	l5176
  5807   0032B2                     l5174:
  5808   0032B2  0615               	decf	___xxtofl@exp^0,f,c
  5809   0032B4  90D8               	bcf	status,0,c
  5810   0032B6  3616               	rlcf	___xxtofl@arg^0,f,c
  5811   0032B8  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  5812   0032BA  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  5813   0032BC  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  5814   0032BE                     l5176:
  5815   0032BE  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  5816   0032C0  EF64  F019         	goto	u5981
  5817   0032C4  EF66  F019         	goto	u5980
  5818   0032C8                     u5981:
  5819   0032C8  EF6E  F019         	goto	l1266
  5820   0032CC                     u5980:
  5821   0032CC  0E02               	movlw	2
  5822   0032CE  6015               	cpfslt	___xxtofl@exp^0,c
  5823   0032D0  EF6C  F019         	goto	u5991
  5824   0032D4  EF6E  F019         	goto	u5990
  5825   0032D8                     u5991:
  5826   0032D8  EF59  F019         	goto	l5174
  5827   0032DC                     u5990:
  5828   0032DC                     l1266:
  5829   0032DC  B015               	btfsc	___xxtofl@exp^0,0,c
  5830   0032DE  EF73  F019         	goto	u6001
  5831   0032E2  EF75  F019         	goto	u6000
  5832   0032E6                     u6001:
  5833   0032E6  EF76  F019         	goto	l5182
  5834   0032EA                     u6000:
  5835   0032EA  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  5836   0032EC                     l5182:
  5837   0032EC  90D8               	bcf	status,0,c
  5838   0032EE  3215               	rrcf	___xxtofl@exp^0,f,c
  5839   0032F0  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  5840   0032F4  6A11               	clrf	(??___xxtofl+1)^0,c
  5841   0032F6  6A12               	clrf	(??___xxtofl+2)^0,c
  5842   0032F8  6A13               	clrf	(??___xxtofl+3)^0,c
  5843   0032FA  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  5844   0032FE  6A12               	clrf	(??___xxtofl+2)^0,c
  5845   003300  6A11               	clrf	(??___xxtofl+1)^0,c
  5846   003302  6A10               	clrf	??___xxtofl^0,c
  5847   003304  5010               	movf	??___xxtofl^0,w,c
  5848   003306  1216               	iorwf	___xxtofl@arg^0,f,c
  5849   003308  5011               	movf	(??___xxtofl+1)^0,w,c
  5850   00330A  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  5851   00330C  5012               	movf	(??___xxtofl+2)^0,w,c
  5852   00330E  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  5853   003310  5013               	movf	(??___xxtofl+3)^0,w,c
  5854   003312  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  5855   003314  5014               	movf	___xxtofl@sign^0,w,c
  5856   003316  B4D8               	btfsc	status,2,c
  5857   003318  EF90  F019         	goto	u6011
  5858   00331C  EF92  F019         	goto	u6010
  5859   003320                     u6011:
  5860   003320  EF9A  F019         	goto	l5192
  5861   003324                     u6010:
  5862   003324  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5863   003326  EF99  F019         	goto	u6020
  5864   00332A  EF97  F019         	goto	u6021
  5865   00332E                     u6021:
  5866   00332E  EF9A  F019         	goto	l5192
  5867   003332                     u6020:
  5868   003332  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  5869   003334                     l5192:
  5870   003334  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  5871   003338  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5872   00333C  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5873   003340  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5874   003344                     l1255:
  5875   003344  0012               	return		;funcret
  5876   003346                     __end_of___xxtofl:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function ___fltol *****************
  5880 ;; Defined at:
  5881 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  f1              4    0[COMRAM] unsigned char 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  exp1            1    9[COMRAM] unsigned char 
  5886 ;;  sign1           1    8[COMRAM] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  4    0[COMRAM] long 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5898 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;Total ram usage:       10 bytes
  5901 ;; Hardware stack levels used: 1
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_custom_floatmodulo
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text23
  5910   003BAA                     __ptext23:
  5911                           	callstack 0
  5912   003BAA                     ___fltol:
  5913                           	callstack 26
  5914   003BAA  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5915   003BAC  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5916   003BAE  6E0A               	movwf	___fltol@exp1^0,c
  5917   003BB0  500A               	movf	___fltol@exp1^0,w,c
  5918   003BB2  A4D8               	btfss	status,2,c
  5919   003BB4  EFDE  F01D         	goto	u5861
  5920   003BB8  EFE0  F01D         	goto	u5860
  5921   003BBC                     u5861:
  5922   003BBC  EFEA  F01D         	goto	l5112
  5923   003BC0                     u5860:
  5924   003BC0                     l5108:
  5925   003BC0  0E00               	movlw	0
  5926   003BC2  6E01               	movwf	?___fltol^0,c
  5927   003BC4  0E00               	movlw	0
  5928   003BC6  6E02               	movwf	(?___fltol+1)^0,c
  5929   003BC8  0E00               	movlw	0
  5930   003BCA  6E03               	movwf	(?___fltol+2)^0,c
  5931   003BCC  0E00               	movlw	0
  5932   003BCE  6E04               	movwf	(?___fltol+3)^0,c
  5933   003BD0  EF57  F01E         	goto	l894
  5934   003BD4                     l5112:
  5935   003BD4  C001  F005         	movff	___fltol@f1,??___fltol
  5936   003BD8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5937   003BDC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5938   003BE0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5939   003BE4  0E20               	movlw	32
  5940   003BE6  EFFA  F01D         	goto	u5870
  5941   003BEA                     u5875:
  5942   003BEA  90D8               	bcf	status,0,c
  5943   003BEC  3208               	rrcf	(??___fltol+3)^0,f,c
  5944   003BEE  3207               	rrcf	(??___fltol+2)^0,f,c
  5945   003BF0  3206               	rrcf	(??___fltol+1)^0,f,c
  5946   003BF2  3205               	rrcf	??___fltol^0,f,c
  5947   003BF4                     u5870:
  5948   003BF4  2EE8               	decfsz	wreg,f,c
  5949   003BF6  EFF5  F01D         	goto	u5875
  5950   003BFA  5005               	movf	??___fltol^0,w,c
  5951   003BFC  6E09               	movwf	___fltol@sign1^0,c
  5952   003BFE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5953   003C00  0EFF               	movlw	255
  5954   003C02  1601               	andwf	___fltol@f1^0,f,c
  5955   003C04  0EFF               	movlw	255
  5956   003C06  1602               	andwf	(___fltol@f1+1)^0,f,c
  5957   003C08  0EFF               	movlw	255
  5958   003C0A  1603               	andwf	(___fltol@f1+2)^0,f,c
  5959   003C0C  0E00               	movlw	0
  5960   003C0E  1604               	andwf	(___fltol@f1+3)^0,f,c
  5961   003C10  0E96               	movlw	150
  5962   003C12  5E0A               	subwf	___fltol@exp1^0,f,c
  5963   003C14  BE0A               	btfsc	___fltol@exp1^0,7,c
  5964   003C16  EF11  F01E         	goto	u5880
  5965   003C1A  EF0F  F01E         	goto	u5881
  5966   003C1E                     u5881:
  5967   003C1E  EF27  F01E         	goto	l5132
  5968   003C22                     u5880:
  5969   003C22  500A               	movf	___fltol@exp1^0,w,c
  5970   003C24  0A80               	xorlw	128
  5971   003C26  0F97               	addlw	151
  5972   003C28  B0D8               	btfsc	status,0,c
  5973   003C2A  EF19  F01E         	goto	u5891
  5974   003C2E  EF1B  F01E         	goto	u5890
  5975   003C32                     u5891:
  5976   003C32  EF1D  F01E         	goto	l5128
  5977   003C36                     u5890:
  5978   003C36  EFE0  F01D         	goto	l5108
  5979   003C3A                     l5128:
  5980   003C3A  90D8               	bcf	status,0,c
  5981   003C3C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5982   003C3E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5983   003C40  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5984   003C42  3201               	rrcf	___fltol@f1^0,f,c
  5985   003C44  3E0A               	incfsz	___fltol@exp1^0,f,c
  5986   003C46  EF1D  F01E         	goto	l5128
  5987   003C4A  EF3F  F01E         	goto	l5142
  5988   003C4E                     l5132:
  5989   003C4E  0E1F               	movlw	31
  5990   003C50  640A               	cpfsgt	___fltol@exp1^0,c
  5991   003C52  EF2D  F01E         	goto	u5901
  5992   003C56  EF2F  F01E         	goto	u5900
  5993   003C5A                     u5901:
  5994   003C5A  EF37  F01E         	goto	l5140
  5995   003C5E                     u5900:
  5996   003C5E  EFE0  F01D         	goto	l5108
  5997   003C62                     l5138:
  5998   003C62  90D8               	bcf	status,0,c
  5999   003C64  3601               	rlcf	___fltol@f1^0,f,c
  6000   003C66  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6001   003C68  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6002   003C6A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6003   003C6C  060A               	decf	___fltol@exp1^0,f,c
  6004   003C6E                     l5140:
  6005   003C6E  500A               	movf	___fltol@exp1^0,w,c
  6006   003C70  A4D8               	btfss	status,2,c
  6007   003C72  EF3D  F01E         	goto	u5911
  6008   003C76  EF3F  F01E         	goto	u5910
  6009   003C7A                     u5911:
  6010   003C7A  EF31  F01E         	goto	l5138
  6011   003C7E                     u5910:
  6012   003C7E                     l5142:
  6013   003C7E  5009               	movf	___fltol@sign1^0,w,c
  6014   003C80  B4D8               	btfsc	status,2,c
  6015   003C82  EF45  F01E         	goto	u5921
  6016   003C86  EF47  F01E         	goto	u5920
  6017   003C8A                     u5921:
  6018   003C8A  EF4F  F01E         	goto	l5146
  6019   003C8E                     u5920:
  6020   003C8E  1E04               	comf	(___fltol@f1+3)^0,f,c
  6021   003C90  1E03               	comf	(___fltol@f1+2)^0,f,c
  6022   003C92  1E02               	comf	(___fltol@f1+1)^0,f,c
  6023   003C94  6C01               	negf	___fltol@f1^0,c
  6024   003C96  0E00               	movlw	0
  6025   003C98  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6026   003C9A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6027   003C9C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6028   003C9E                     l5146:
  6029   003C9E  C001  F001         	movff	___fltol@f1,?___fltol
  6030   003CA2  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6031   003CA6  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6032   003CAA  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6033   003CAE                     l894:
  6034   003CAE  0012               	return		;funcret
  6035   003CB0                     __end_of___fltol:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function ___flsub *****************
  6039 ;; Defined at:
  6040 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  b               4   25[COMRAM] long 
  6043 ;;  a               4   29[COMRAM] long 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;		None
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  4   25[COMRAM] long 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6055 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;Total ram usage:        8 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 1
  6062 ;; This function calls:
  6063 ;;		___fladd
  6064 ;; This function is called by:
  6065 ;;		_custom_floatmodulo
  6066 ;;		_RGB_to_HSV
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text24
  6071   004270                     __ptext24:
  6072                           	callstack 0
  6073   004270                     ___flsub:
  6074                           	callstack 25
  6075   004270  0E00               	movlw	0
  6076   004272  1A1E               	xorwf	___flsub@a^0,f,c
  6077   004274  0E00               	movlw	0
  6078   004276  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6079   004278  0E00               	movlw	0
  6080   00427A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6081   00427C  0E80               	movlw	128
  6082   00427E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6083   004280  C01A  F001         	movff	___flsub@b,___fladd@b
  6084   004284  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6085   004288  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6086   00428C  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6087   004290  C01E  F005         	movff	___flsub@a,___fladd@a
  6088   004294  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6089   004298  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6090   00429C  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6091   0042A0  EC87  F012         	call	___fladd	;wreg free
  6092   0042A4  C001  F01A         	movff	?___fladd,?___flsub
  6093   0042A8  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6094   0042AC  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6095   0042B0  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6096   0042B4  0012               	return		;funcret
  6097   0042B6                     __end_of___flsub:
  6098                           	callstack 0
  6099                           
  6100 ;; *************** function ___fladd *****************
  6101 ;; Defined at:
  6102 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  b               4    0[COMRAM] long 
  6105 ;;  a               4    4[COMRAM] long 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  grs             1   15[COMRAM] unsigned char 
  6108 ;;  bexp            1   14[COMRAM] unsigned char 
  6109 ;;  aexp            1   13[COMRAM] unsigned char 
  6110 ;;  signs           1   12[COMRAM] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  4    0[COMRAM] unsigned char 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6120 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;Total ram usage:       16 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_RGB_to_HSV
  6130 ;;		___flsub
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text25
  6135   00250E                     __ptext25:
  6136                           	callstack 0
  6137   00250E                     ___fladd:
  6138                           	callstack 25
  6139   00250E  5004               	movf	(___fladd@b+3)^0,w,c
  6140   002510  0B80               	andlw	128
  6141   002512  6E0D               	movwf	___fladd@signs^0,c
  6142   002514  5004               	movf	(___fladd@b+3)^0,w,c
  6143   002516  2404               	addwf	(___fladd@b+3)^0,w,c
  6144   002518  6E0F               	movwf	___fladd@bexp^0,c
  6145   00251A  AE03               	btfss	(___fladd@b+2)^0,7,c
  6146   00251C  EF92  F012         	goto	u5001
  6147   002520  EF94  F012         	goto	u5000
  6148   002524                     u5001:
  6149   002524  EF95  F012         	goto	l4616
  6150   002528                     u5000:
  6151   002528  800F               	bsf	___fladd@bexp^0,0,c
  6152   00252A                     l4616:
  6153   00252A  500F               	movf	___fladd@bexp^0,w,c
  6154   00252C  B4D8               	btfsc	status,2,c
  6155   00252E  EF9B  F012         	goto	u5011
  6156   002532  EF9D  F012         	goto	u5010
  6157   002536                     u5011:
  6158   002536  EFB2  F012         	goto	l4626
  6159   00253A                     u5010:
  6160   00253A  280F               	incf	___fladd@bexp^0,w,c
  6161   00253C  A4D8               	btfss	status,2,c
  6162   00253E  EFA3  F012         	goto	u5021
  6163   002542  EFA5  F012         	goto	u5020
  6164   002546                     u5021:
  6165   002546  EFAD  F012         	goto	l4622
  6166   00254A                     u5020:
  6167   00254A  0E00               	movlw	0
  6168   00254C  6E01               	movwf	___fladd@b^0,c
  6169   00254E  0E00               	movlw	0
  6170   002550  6E02               	movwf	(___fladd@b+1)^0,c
  6171   002552  0E00               	movlw	0
  6172   002554  6E03               	movwf	(___fladd@b+2)^0,c
  6173   002556  0E00               	movlw	0
  6174   002558  6E04               	movwf	(___fladd@b+3)^0,c
  6175   00255A                     l4622:
  6176   00255A  8E03               	bsf	(___fladd@b+2)^0,7,c
  6177   00255C  0E00               	movlw	0
  6178   00255E  6E04               	movwf	(___fladd@b+3)^0,c
  6179   002560  EFBA  F012         	goto	l4628
  6180   002564                     l4626:
  6181   002564  0E00               	movlw	0
  6182   002566  6E01               	movwf	___fladd@b^0,c
  6183   002568  0E00               	movlw	0
  6184   00256A  6E02               	movwf	(___fladd@b+1)^0,c
  6185   00256C  0E00               	movlw	0
  6186   00256E  6E03               	movwf	(___fladd@b+2)^0,c
  6187   002570  0E00               	movlw	0
  6188   002572  6E04               	movwf	(___fladd@b+3)^0,c
  6189   002574                     l4628:
  6190   002574  5008               	movf	(___fladd@a+3)^0,w,c
  6191   002576  0B80               	andlw	128
  6192   002578  6E0E               	movwf	___fladd@aexp^0,c
  6193   00257A  500D               	movf	___fladd@signs^0,w,c
  6194   00257C  180E               	xorwf	___fladd@aexp^0,w,c
  6195   00257E  B4D8               	btfsc	status,2,c
  6196   002580  EFC4  F012         	goto	u5031
  6197   002584  EFC6  F012         	goto	u5030
  6198   002588                     u5031:
  6199   002588  EFC7  F012         	goto	l4634
  6200   00258C                     u5030:
  6201   00258C  8C0D               	bsf	___fladd@signs^0,6,c
  6202   00258E                     l4634:
  6203   00258E  5008               	movf	(___fladd@a+3)^0,w,c
  6204   002590  2408               	addwf	(___fladd@a+3)^0,w,c
  6205   002592  6E0E               	movwf	___fladd@aexp^0,c
  6206   002594  AE07               	btfss	(___fladd@a+2)^0,7,c
  6207   002596  EFCF  F012         	goto	u5041
  6208   00259A  EFD1  F012         	goto	u5040
  6209   00259E                     u5041:
  6210   00259E  EFD2  F012         	goto	l4640
  6211   0025A2                     u5040:
  6212   0025A2  800E               	bsf	___fladd@aexp^0,0,c
  6213   0025A4                     l4640:
  6214   0025A4  500E               	movf	___fladd@aexp^0,w,c
  6215   0025A6  B4D8               	btfsc	status,2,c
  6216   0025A8  EFD8  F012         	goto	u5051
  6217   0025AC  EFDA  F012         	goto	u5050
  6218   0025B0                     u5051:
  6219   0025B0  EFEF  F012         	goto	l4650
  6220   0025B4                     u5050:
  6221   0025B4  280E               	incf	___fladd@aexp^0,w,c
  6222   0025B6  A4D8               	btfss	status,2,c
  6223   0025B8  EFE0  F012         	goto	u5061
  6224   0025BC  EFE2  F012         	goto	u5060
  6225   0025C0                     u5061:
  6226   0025C0  EFEA  F012         	goto	l4646
  6227   0025C4                     u5060:
  6228   0025C4  0E00               	movlw	0
  6229   0025C6  6E05               	movwf	___fladd@a^0,c
  6230   0025C8  0E00               	movlw	0
  6231   0025CA  6E06               	movwf	(___fladd@a+1)^0,c
  6232   0025CC  0E00               	movlw	0
  6233   0025CE  6E07               	movwf	(___fladd@a+2)^0,c
  6234   0025D0  0E00               	movlw	0
  6235   0025D2  6E08               	movwf	(___fladd@a+3)^0,c
  6236   0025D4                     l4646:
  6237   0025D4  8E07               	bsf	(___fladd@a+2)^0,7,c
  6238   0025D6  0E00               	movlw	0
  6239   0025D8  6E08               	movwf	(___fladd@a+3)^0,c
  6240   0025DA  EFF7  F012         	goto	l4652
  6241   0025DE                     l4650:
  6242   0025DE  0E00               	movlw	0
  6243   0025E0  6E05               	movwf	___fladd@a^0,c
  6244   0025E2  0E00               	movlw	0
  6245   0025E4  6E06               	movwf	(___fladd@a+1)^0,c
  6246   0025E6  0E00               	movlw	0
  6247   0025E8  6E07               	movwf	(___fladd@a+2)^0,c
  6248   0025EA  0E00               	movlw	0
  6249   0025EC  6E08               	movwf	(___fladd@a+3)^0,c
  6250   0025EE                     l4652:
  6251   0025EE  500F               	movf	___fladd@bexp^0,w,c
  6252   0025F0  5C0E               	subwf	___fladd@aexp^0,w,c
  6253   0025F2  B0D8               	btfsc	status,0,c
  6254   0025F4  EFFE  F012         	goto	u5071
  6255   0025F8  EF00  F013         	goto	u5070
  6256   0025FC                     u5071:
  6257   0025FC  EF27  F013         	goto	l4688
  6258   002600                     u5070:
  6259   002600  AC0D               	btfss	___fladd@signs^0,6,c
  6260   002602  EF05  F013         	goto	u5081
  6261   002606  EF07  F013         	goto	u5080
  6262   00260A                     u5081:
  6263   00260A  EF09  F013         	goto	l4658
  6264   00260E                     u5080:
  6265   00260E  0E80               	movlw	128
  6266   002610  1A0D               	xorwf	___fladd@signs^0,f,c
  6267   002612                     l4658:
  6268   002612  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6269   002616  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6270   00261A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6271   00261E  C001  F010         	movff	___fladd@b,___fladd@grs
  6272   002622  C005  F001         	movff	___fladd@a,___fladd@b
  6273   002626  C010  F005         	movff	___fladd@grs,___fladd@a
  6274   00262A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6275   00262E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6276   002632  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6277   002636  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6278   00263A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6279   00263E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6280   002642  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6281   002646  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6282   00264A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6283   00264E                     l4688:
  6284   00264E  0E00               	movlw	0
  6285   002650  6E10               	movwf	___fladd@grs^0,c
  6286   002652  500F               	movf	___fladd@bexp^0,w,c
  6287   002654  C00E  F009         	movff	___fladd@aexp,??___fladd
  6288   002658  6A0A               	clrf	(??___fladd+1)^0,c
  6289   00265A  5E09               	subwf	??___fladd^0,f,c
  6290   00265C  0E00               	movlw	0
  6291   00265E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6292   002660  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6293   002662  EF3C  F013         	goto	u5091
  6294   002666  500A               	movf	(??___fladd+1)^0,w,c
  6295   002668  E109               	bnz	u5090
  6296   00266A  0E1A               	movlw	26
  6297   00266C  5C09               	subwf	??___fladd^0,w,c
  6298   00266E  A0D8               	btfss	status,0,c
  6299   002670  EF3C  F013         	goto	u5091
  6300   002674  EF3E  F013         	goto	u5090
  6301   002678                     u5091:
  6302   002678  EF75  F013         	goto	l1126
  6303   00267C                     u5090:
  6304   00267C  5001               	movf	___fladd@b^0,w,c
  6305   00267E  1002               	iorwf	(___fladd@b+1)^0,w,c
  6306   002680  1003               	iorwf	(___fladd@b+2)^0,w,c
  6307   002682  1004               	iorwf	(___fladd@b+3)^0,w,c
  6308   002684  A4D8               	btfss	status,2,c
  6309   002686  EF47  F013         	goto	u5101
  6310   00268A  EF4A  F013         	goto	u5100
  6311   00268E                     u5101:
  6312   00268E  0E01               	movlw	1
  6313   002690  EF4B  F013         	goto	u5110
  6314   002694                     u5100:
  6315   002694  0E00               	movlw	0
  6316   002696                     u5110:
  6317   002696  6E10               	movwf	___fladd@grs^0,c
  6318   002698  0E00               	movlw	0
  6319   00269A  6E01               	movwf	___fladd@b^0,c
  6320   00269C  0E00               	movlw	0
  6321   00269E  6E02               	movwf	(___fladd@b+1)^0,c
  6322   0026A0  0E00               	movlw	0
  6323   0026A2  6E03               	movwf	(___fladd@b+2)^0,c
  6324   0026A4  0E00               	movlw	0
  6325   0026A6  6E04               	movwf	(___fladd@b+3)^0,c
  6326   0026A8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6327   0026AC  EF7E  F013         	goto	l1125
  6328   0026B0                     l1127:
  6329   0026B0  A010               	btfss	___fladd@grs^0,0,c
  6330   0026B2  EF5D  F013         	goto	u5121
  6331   0026B6  EF5F  F013         	goto	u5120
  6332   0026BA                     u5121:
  6333   0026BA  EF65  F013         	goto	l4700
  6334   0026BE                     u5120:
  6335   0026BE  90D8               	bcf	status,0,c
  6336   0026C0  3010               	rrcf	___fladd@grs^0,w,c
  6337   0026C2  0901               	iorlw	1
  6338   0026C4  6E10               	movwf	___fladd@grs^0,c
  6339   0026C6  EF67  F013         	goto	l4702
  6340   0026CA                     l4700:
  6341   0026CA  90D8               	bcf	status,0,c
  6342   0026CC  3210               	rrcf	___fladd@grs^0,f,c
  6343   0026CE                     l4702:
  6344   0026CE  A001               	btfss	___fladd@b^0,0,c
  6345   0026D0  EF6C  F013         	goto	u5131
  6346   0026D4  EF6E  F013         	goto	u5130
  6347   0026D8                     u5131:
  6348   0026D8  EF6F  F013         	goto	l4706
  6349   0026DC                     u5130:
  6350   0026DC  8E10               	bsf	___fladd@grs^0,7,c
  6351   0026DE                     l4706:
  6352   0026DE  3404               	rlcf	(___fladd@b+3)^0,w,c
  6353   0026E0  3204               	rrcf	(___fladd@b+3)^0,f,c
  6354   0026E2  3203               	rrcf	(___fladd@b+2)^0,f,c
  6355   0026E4  3202               	rrcf	(___fladd@b+1)^0,f,c
  6356   0026E6  3201               	rrcf	___fladd@b^0,f,c
  6357   0026E8  2A0F               	incf	___fladd@bexp^0,f,c
  6358   0026EA                     l1126:
  6359   0026EA  500E               	movf	___fladd@aexp^0,w,c
  6360   0026EC  5C0F               	subwf	___fladd@bexp^0,w,c
  6361   0026EE  A0D8               	btfss	status,0,c
  6362   0026F0  EF7C  F013         	goto	u5141
  6363   0026F4  EF7E  F013         	goto	u5140
  6364   0026F8                     u5141:
  6365   0026F8  EF58  F013         	goto	l1127
  6366   0026FC                     u5140:
  6367   0026FC                     l1125:
  6368   0026FC  BC0D               	btfsc	___fladd@signs^0,6,c
  6369   0026FE  EF83  F013         	goto	u5151
  6370   002702  EF85  F013         	goto	u5150
  6371   002706                     u5151:
  6372   002706  EFC5  F013         	goto	l4734
  6373   00270A                     u5150:
  6374   00270A  500F               	movf	___fladd@bexp^0,w,c
  6375   00270C  A4D8               	btfss	status,2,c
  6376   00270E  EF8B  F013         	goto	u5161
  6377   002712  EF8D  F013         	goto	u5160
  6378   002716                     u5161:
  6379   002716  EF97  F013         	goto	l4716
  6380   00271A                     u5160:
  6381   00271A  0E00               	movlw	0
  6382   00271C  6E01               	movwf	?___fladd^0,c
  6383   00271E  0E00               	movlw	0
  6384   002720  6E02               	movwf	(?___fladd+1)^0,c
  6385   002722  0E00               	movlw	0
  6386   002724  6E03               	movwf	(?___fladd+2)^0,c
  6387   002726  0E00               	movlw	0
  6388   002728  6E04               	movwf	(?___fladd+3)^0,c
  6389   00272A  EFE6  F014         	goto	l1134
  6390   00272E                     l4716:
  6391   00272E  5005               	movf	___fladd@a^0,w,c
  6392   002730  2601               	addwf	___fladd@b^0,f,c
  6393   002732  5006               	movf	(___fladd@a+1)^0,w,c
  6394   002734  2202               	addwfc	(___fladd@b+1)^0,f,c
  6395   002736  5007               	movf	(___fladd@a+2)^0,w,c
  6396   002738  2203               	addwfc	(___fladd@b+2)^0,f,c
  6397   00273A  5008               	movf	(___fladd@a+3)^0,w,c
  6398   00273C  2204               	addwfc	(___fladd@b+3)^0,f,c
  6399   00273E  A004               	btfss	(___fladd@b+3)^0,0,c
  6400   002740  EFA4  F013         	goto	u5171
  6401   002744  EFA6  F013         	goto	u5170
  6402   002748                     u5171:
  6403   002748  EF52  F014         	goto	l4770
  6404   00274C                     u5170:
  6405   00274C  A010               	btfss	___fladd@grs^0,0,c
  6406   00274E  EFAB  F013         	goto	u5181
  6407   002752  EFAD  F013         	goto	u5180
  6408   002756                     u5181:
  6409   002756  EFB3  F013         	goto	l4724
  6410   00275A                     u5180:
  6411   00275A  90D8               	bcf	status,0,c
  6412   00275C  3010               	rrcf	___fladd@grs^0,w,c
  6413   00275E  0901               	iorlw	1
  6414   002760  6E10               	movwf	___fladd@grs^0,c
  6415   002762  EFB5  F013         	goto	l4726
  6416   002766                     l4724:
  6417   002766  90D8               	bcf	status,0,c
  6418   002768  3210               	rrcf	___fladd@grs^0,f,c
  6419   00276A                     l4726:
  6420   00276A  A001               	btfss	___fladd@b^0,0,c
  6421   00276C  EFBA  F013         	goto	u5191
  6422   002770  EFBC  F013         	goto	u5190
  6423   002774                     u5191:
  6424   002774  EFBD  F013         	goto	l4730
  6425   002778                     u5190:
  6426   002778  8E10               	bsf	___fladd@grs^0,7,c
  6427   00277A                     l4730:
  6428   00277A  3404               	rlcf	(___fladd@b+3)^0,w,c
  6429   00277C  3204               	rrcf	(___fladd@b+3)^0,f,c
  6430   00277E  3203               	rrcf	(___fladd@b+2)^0,f,c
  6431   002780  3202               	rrcf	(___fladd@b+1)^0,f,c
  6432   002782  3201               	rrcf	___fladd@b^0,f,c
  6433   002784  2A0F               	incf	___fladd@bexp^0,f,c
  6434   002786  EF52  F014         	goto	l4770
  6435   00278A                     l4734:
  6436   00278A  5005               	movf	___fladd@a^0,w,c
  6437   00278C  5C01               	subwf	___fladd@b^0,w,c
  6438   00278E  5006               	movf	(___fladd@a+1)^0,w,c
  6439   002790  5802               	subwfb	(___fladd@b+1)^0,w,c
  6440   002792  5007               	movf	(___fladd@a+2)^0,w,c
  6441   002794  5803               	subwfb	(___fladd@b+2)^0,w,c
  6442   002796  5004               	movf	(___fladd@b+3)^0,w,c
  6443   002798  0A80               	xorlw	128
  6444   00279A  6E09               	movwf	??___fladd^0,c
  6445   00279C  5008               	movf	(___fladd@a+3)^0,w,c
  6446   00279E  0A80               	xorlw	128
  6447   0027A0  5809               	subwfb	??___fladd^0,w,c
  6448   0027A2  B0D8               	btfsc	status,0,c
  6449   0027A4  EFD6  F013         	goto	u5201
  6450   0027A8  EFD8  F013         	goto	u5200
  6451   0027AC                     u5201:
  6452   0027AC  EF03  F014         	goto	l4744
  6453   0027B0                     u5200:
  6454   0027B0  5001               	movf	___fladd@b^0,w,c
  6455   0027B2  5C05               	subwf	___fladd@a^0,w,c
  6456   0027B4  6E09               	movwf	??___fladd^0,c
  6457   0027B6  5002               	movf	(___fladd@b+1)^0,w,c
  6458   0027B8  5806               	subwfb	(___fladd@a+1)^0,w,c
  6459   0027BA  6E0A               	movwf	(??___fladd+1)^0,c
  6460   0027BC  5003               	movf	(___fladd@b+2)^0,w,c
  6461   0027BE  5807               	subwfb	(___fladd@a+2)^0,w,c
  6462   0027C0  6E0B               	movwf	(??___fladd+2)^0,c
  6463   0027C2  5004               	movf	(___fladd@b+3)^0,w,c
  6464   0027C4  5808               	subwfb	(___fladd@a+3)^0,w,c
  6465   0027C6  6E0C               	movwf	(??___fladd+3)^0,c
  6466   0027C8  0EFF               	movlw	255
  6467   0027CA  2409               	addwf	??___fladd^0,w,c
  6468   0027CC  6E01               	movwf	___fladd@b^0,c
  6469   0027CE  0EFF               	movlw	255
  6470   0027D0  200A               	addwfc	(??___fladd+1)^0,w,c
  6471   0027D2  6E02               	movwf	(___fladd@b+1)^0,c
  6472   0027D4  0EFF               	movlw	255
  6473   0027D6  200B               	addwfc	(??___fladd+2)^0,w,c
  6474   0027D8  6E03               	movwf	(___fladd@b+2)^0,c
  6475   0027DA  0EFF               	movlw	255
  6476   0027DC  200C               	addwfc	(??___fladd+3)^0,w,c
  6477   0027DE  6E04               	movwf	(___fladd@b+3)^0,c
  6478   0027E0  0E80               	movlw	128
  6479   0027E2  1A0D               	xorwf	___fladd@signs^0,f,c
  6480   0027E4  6C10               	negf	___fladd@grs^0,c
  6481   0027E6  5010               	movf	___fladd@grs^0,w,c
  6482   0027E8  A4D8               	btfss	status,2,c
  6483   0027EA  EFF9  F013         	goto	u5211
  6484   0027EE  EFFB  F013         	goto	u5210
  6485   0027F2                     u5211:
  6486   0027F2  EF0B  F014         	goto	l1142
  6487   0027F6                     u5210:
  6488   0027F6  0E01               	movlw	1
  6489   0027F8  2601               	addwf	___fladd@b^0,f,c
  6490   0027FA  0E00               	movlw	0
  6491   0027FC  2202               	addwfc	(___fladd@b+1)^0,f,c
  6492   0027FE  2203               	addwfc	(___fladd@b+2)^0,f,c
  6493   002800  2204               	addwfc	(___fladd@b+3)^0,f,c
  6494   002802  EF0B  F014         	goto	l1142
  6495   002806                     l4744:
  6496   002806  5005               	movf	___fladd@a^0,w,c
  6497   002808  5E01               	subwf	___fladd@b^0,f,c
  6498   00280A  5006               	movf	(___fladd@a+1)^0,w,c
  6499   00280C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6500   00280E  5007               	movf	(___fladd@a+2)^0,w,c
  6501   002810  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6502   002812  5008               	movf	(___fladd@a+3)^0,w,c
  6503   002814  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6504   002816                     l1142:
  6505   002816  5001               	movf	___fladd@b^0,w,c
  6506   002818  1002               	iorwf	(___fladd@b+1)^0,w,c
  6507   00281A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6508   00281C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6509   00281E  A4D8               	btfss	status,2,c
  6510   002820  EF14  F014         	goto	u5221
  6511   002824  EF16  F014         	goto	u5220
  6512   002828                     u5221:
  6513   002828  EF4B  F014         	goto	l4768
  6514   00282C                     u5220:
  6515   00282C  5010               	movf	___fladd@grs^0,w,c
  6516   00282E  A4D8               	btfss	status,2,c
  6517   002830  EF1C  F014         	goto	u5231
  6518   002834  EF1E  F014         	goto	u5230
  6519   002838                     u5231:
  6520   002838  EF4B  F014         	goto	l4768
  6521   00283C                     u5230:
  6522   00283C  0E00               	movlw	0
  6523   00283E  6E01               	movwf	?___fladd^0,c
  6524   002840  0E00               	movlw	0
  6525   002842  6E02               	movwf	(?___fladd+1)^0,c
  6526   002844  0E00               	movlw	0
  6527   002846  6E03               	movwf	(?___fladd+2)^0,c
  6528   002848  0E00               	movlw	0
  6529   00284A  6E04               	movwf	(?___fladd+3)^0,c
  6530   00284C  EFE6  F014         	goto	l1134
  6531   002850                     l4752:
  6532   002850  90D8               	bcf	status,0,c
  6533   002852  3601               	rlcf	___fladd@b^0,f,c
  6534   002854  3602               	rlcf	(___fladd@b+1)^0,f,c
  6535   002856  3603               	rlcf	(___fladd@b+2)^0,f,c
  6536   002858  3604               	rlcf	(___fladd@b+3)^0,f,c
  6537   00285A  AE10               	btfss	___fladd@grs^0,7,c
  6538   00285C  EF32  F014         	goto	u5241
  6539   002860  EF34  F014         	goto	u5240
  6540   002864                     u5241:
  6541   002864  EF35  F014         	goto	l4758
  6542   002868                     u5240:
  6543   002868  8001               	bsf	___fladd@b^0,0,c
  6544   00286A                     l4758:
  6545   00286A  A010               	btfss	___fladd@grs^0,0,c
  6546   00286C  EF3A  F014         	goto	u5251
  6547   002870  EF3C  F014         	goto	u5250
  6548   002874                     u5251:
  6549   002874  EF40  F014         	goto	l4762
  6550   002878                     u5250:
  6551   002878  80D8               	bsf	status,0,c
  6552   00287A  3610               	rlcf	___fladd@grs^0,f,c
  6553   00287C  EF42  F014         	goto	l4764
  6554   002880                     l4762:
  6555   002880  90D8               	bcf	status,0,c
  6556   002882  3610               	rlcf	___fladd@grs^0,f,c
  6557   002884                     l4764:
  6558   002884  500F               	movf	___fladd@bexp^0,w,c
  6559   002886  B4D8               	btfsc	status,2,c
  6560   002888  EF48  F014         	goto	u5261
  6561   00288C  EF4A  F014         	goto	u5260
  6562   002890                     u5261:
  6563   002890  EF4B  F014         	goto	l4768
  6564   002894                     u5260:
  6565   002894  060F               	decf	___fladd@bexp^0,f,c
  6566   002896                     l4768:
  6567   002896  AE03               	btfss	(___fladd@b+2)^0,7,c
  6568   002898  EF50  F014         	goto	u5271
  6569   00289C  EF52  F014         	goto	u5270
  6570   0028A0                     u5271:
  6571   0028A0  EF28  F014         	goto	l4752
  6572   0028A4                     u5270:
  6573   0028A4                     l4770:
  6574   0028A4  0E00               	movlw	0
  6575   0028A6  6E0E               	movwf	___fladd@aexp^0,c
  6576   0028A8  AE10               	btfss	___fladd@grs^0,7,c
  6577   0028AA  EF59  F014         	goto	u5281
  6578   0028AE  EF5B  F014         	goto	u5280
  6579   0028B2                     u5281:
  6580   0028B2  EF73  F014         	goto	l1151
  6581   0028B6                     u5280:
  6582   0028B6  C010  F009         	movff	___fladd@grs,??___fladd
  6583   0028BA  0E7F               	movlw	127
  6584   0028BC  1609               	andwf	??___fladd^0,f,c
  6585   0028BE  B4D8               	btfsc	status,2,c
  6586   0028C0  EF64  F014         	goto	u5291
  6587   0028C4  EF66  F014         	goto	u5290
  6588   0028C8                     u5291:
  6589   0028C8  EF6A  F014         	goto	l1152
  6590   0028CC                     u5290:
  6591   0028CC                     l4776:
  6592   0028CC  0E01               	movlw	1
  6593   0028CE  6E0E               	movwf	___fladd@aexp^0,c
  6594   0028D0  EF73  F014         	goto	l1151
  6595   0028D4                     l1152:
  6596   0028D4  A001               	btfss	___fladd@b^0,0,c
  6597   0028D6  EF6F  F014         	goto	u5301
  6598   0028DA  EF71  F014         	goto	u5300
  6599   0028DE                     u5301:
  6600   0028DE  EF73  F014         	goto	l1151
  6601   0028E2                     u5300:
  6602   0028E2  EF66  F014         	goto	l4776
  6603   0028E6                     l1151:
  6604   0028E6  500E               	movf	___fladd@aexp^0,w,c
  6605   0028E8  B4D8               	btfsc	status,2,c
  6606   0028EA  EF79  F014         	goto	u5311
  6607   0028EE  EF7B  F014         	goto	u5310
  6608   0028F2                     u5311:
  6609   0028F2  EFA6  F014         	goto	l4788
  6610   0028F6                     u5310:
  6611   0028F6  0E01               	movlw	1
  6612   0028F8  2601               	addwf	___fladd@b^0,f,c
  6613   0028FA  0E00               	movlw	0
  6614   0028FC  2202               	addwfc	(___fladd@b+1)^0,f,c
  6615   0028FE  2203               	addwfc	(___fladd@b+2)^0,f,c
  6616   002900  2204               	addwfc	(___fladd@b+3)^0,f,c
  6617   002902  A004               	btfss	(___fladd@b+3)^0,0,c
  6618   002904  EF86  F014         	goto	u5321
  6619   002908  EF88  F014         	goto	u5320
  6620   00290C                     u5321:
  6621   00290C  EFA6  F014         	goto	l4788
  6622   002910                     u5320:
  6623   002910  C001  F009         	movff	___fladd@b,??___fladd
  6624   002914  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6625   002918  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6626   00291C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6627   002920  340C               	rlcf	(??___fladd+3)^0,w,c
  6628   002922  320C               	rrcf	(??___fladd+3)^0,f,c
  6629   002924  320B               	rrcf	(??___fladd+2)^0,f,c
  6630   002926  320A               	rrcf	(??___fladd+1)^0,f,c
  6631   002928  3209               	rrcf	??___fladd^0,f,c
  6632   00292A  C009  F001         	movff	??___fladd,___fladd@b
  6633   00292E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6634   002932  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6635   002936  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6636   00293A  280F               	incf	___fladd@bexp^0,w,c
  6637   00293C  B4D8               	btfsc	status,2,c
  6638   00293E  EFA3  F014         	goto	u5331
  6639   002942  EFA5  F014         	goto	u5330
  6640   002946                     u5331:
  6641   002946  EFA6  F014         	goto	l4788
  6642   00294A                     u5330:
  6643   00294A  2A0F               	incf	___fladd@bexp^0,f,c
  6644   00294C                     l4788:
  6645   00294C  280F               	incf	___fladd@bexp^0,w,c
  6646   00294E  B4D8               	btfsc	status,2,c
  6647   002950  EFAC  F014         	goto	u5341
  6648   002954  EFAE  F014         	goto	u5340
  6649   002958                     u5341:
  6650   002958  EFB6  F014         	goto	l4792
  6651   00295C                     u5340:
  6652   00295C  500F               	movf	___fladd@bexp^0,w,c
  6653   00295E  A4D8               	btfss	status,2,c
  6654   002960  EFB4  F014         	goto	u5351
  6655   002964  EFB6  F014         	goto	u5350
  6656   002968                     u5351:
  6657   002968  EFC8  F014         	goto	l4796
  6658   00296C                     u5350:
  6659   00296C                     l4792:
  6660   00296C  0E00               	movlw	0
  6661   00296E  6E01               	movwf	___fladd@b^0,c
  6662   002970  0E00               	movlw	0
  6663   002972  6E02               	movwf	(___fladd@b+1)^0,c
  6664   002974  0E00               	movlw	0
  6665   002976  6E03               	movwf	(___fladd@b+2)^0,c
  6666   002978  0E00               	movlw	0
  6667   00297A  6E04               	movwf	(___fladd@b+3)^0,c
  6668   00297C  500F               	movf	___fladd@bexp^0,w,c
  6669   00297E  A4D8               	btfss	status,2,c
  6670   002980  EFC4  F014         	goto	u5361
  6671   002984  EFC6  F014         	goto	u5360
  6672   002988                     u5361:
  6673   002988  EFC8  F014         	goto	l4796
  6674   00298C                     u5360:
  6675   00298C  0E00               	movlw	0
  6676   00298E  6E0D               	movwf	___fladd@signs^0,c
  6677   002990                     l4796:
  6678   002990  A00F               	btfss	___fladd@bexp^0,0,c
  6679   002992  EFCD  F014         	goto	u5371
  6680   002996  EFCF  F014         	goto	u5370
  6681   00299A                     u5371:
  6682   00299A  EFD2  F014         	goto	l4800
  6683   00299E                     u5370:
  6684   00299E  8E03               	bsf	(___fladd@b+2)^0,7,c
  6685   0029A0  EFD3  F014         	goto	l4802
  6686   0029A4                     l4800:
  6687   0029A4  9E03               	bcf	(___fladd@b+2)^0,7,c
  6688   0029A6                     l4802:
  6689   0029A6  90D8               	bcf	status,0,c
  6690   0029A8  300F               	rrcf	___fladd@bexp^0,w,c
  6691   0029AA  6E04               	movwf	(___fladd@b+3)^0,c
  6692   0029AC  AE0D               	btfss	___fladd@signs^0,7,c
  6693   0029AE  EFDB  F014         	goto	u5381
  6694   0029B2  EFDD  F014         	goto	u5380
  6695   0029B6                     u5381:
  6696   0029B6  EFDE  F014         	goto	l4808
  6697   0029BA                     u5380:
  6698   0029BA  8E04               	bsf	(___fladd@b+3)^0,7,c
  6699   0029BC                     l4808:
  6700   0029BC  C001  F001         	movff	___fladd@b,?___fladd
  6701   0029C0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6702   0029C4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6703   0029C8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6704   0029CC                     l1134:
  6705   0029CC  0012               	return		;funcret
  6706   0029CE                     __end_of___fladd:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function ___flmul *****************
  6710 ;; Defined at:
  6711 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  b               4   58[COMRAM] unsigned char 
  6714 ;;  a               4   62[COMRAM] unsigned char 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  prod            4   77[COMRAM] struct .
  6717 ;;  grs             4   72[COMRAM] unsigned long 
  6718 ;;  temp            2   81[COMRAM] struct .
  6719 ;;  bexp            1   76[COMRAM] unsigned char 
  6720 ;;  aexp            1   71[COMRAM] unsigned char 
  6721 ;;  sign            1   70[COMRAM] unsigned char 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  4   58[COMRAM] unsigned char 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0, prodl, prodh
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6731 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;Total ram usage:       25 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; This function calls:
  6738 ;;		Nothing
  6739 ;; This function is called by:
  6740 ;;		_custom_floatmodulo
  6741 ;;		_RGB_to_HSV
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text26
  6746   0029CE                     __ptext26:
  6747                           	callstack 0
  6748   0029CE                     ___flmul:
  6749                           	callstack 26
  6750   0029CE  503E               	movf	(___flmul@b+3)^0,w,c
  6751   0029D0  0B80               	andlw	128
  6752   0029D2  6E47               	movwf	___flmul@sign^0,c
  6753   0029D4  503E               	movf	(___flmul@b+3)^0,w,c
  6754   0029D6  243E               	addwf	(___flmul@b+3)^0,w,c
  6755   0029D8  6E4D               	movwf	___flmul@bexp^0,c
  6756   0029DA  AE3D               	btfss	(___flmul@b+2)^0,7,c
  6757   0029DC  EFF2  F014         	goto	u5641
  6758   0029E0  EFF4  F014         	goto	u5640
  6759   0029E4                     u5641:
  6760   0029E4  EFF5  F014         	goto	l4960
  6761   0029E8                     u5640:
  6762   0029E8  804D               	bsf	___flmul@bexp^0,0,c
  6763   0029EA                     l4960:
  6764   0029EA  504D               	movf	___flmul@bexp^0,w,c
  6765   0029EC  B4D8               	btfsc	status,2,c
  6766   0029EE  EFFB  F014         	goto	u5651
  6767   0029F2  EFFD  F014         	goto	u5650
  6768   0029F6                     u5651:
  6769   0029F6  EF10  F015         	goto	l4968
  6770   0029FA                     u5650:
  6771   0029FA  284D               	incf	___flmul@bexp^0,w,c
  6772   0029FC  A4D8               	btfss	status,2,c
  6773   0029FE  EF03  F015         	goto	u5661
  6774   002A02  EF05  F015         	goto	u5660
  6775   002A06                     u5661:
  6776   002A06  EF0D  F015         	goto	l4966
  6777   002A0A                     u5660:
  6778   002A0A  0E00               	movlw	0
  6779   002A0C  6E3B               	movwf	___flmul@b^0,c
  6780   002A0E  0E00               	movlw	0
  6781   002A10  6E3C               	movwf	(___flmul@b+1)^0,c
  6782   002A12  0E00               	movlw	0
  6783   002A14  6E3D               	movwf	(___flmul@b+2)^0,c
  6784   002A16  0E00               	movlw	0
  6785   002A18  6E3E               	movwf	(___flmul@b+3)^0,c
  6786   002A1A                     l4966:
  6787   002A1A  8E3D               	bsf	(___flmul@b+2)^0,7,c
  6788   002A1C  EF18  F015         	goto	l4970
  6789   002A20                     l4968:
  6790   002A20  0E00               	movlw	0
  6791   002A22  6E3B               	movwf	___flmul@b^0,c
  6792   002A24  0E00               	movlw	0
  6793   002A26  6E3C               	movwf	(___flmul@b+1)^0,c
  6794   002A28  0E00               	movlw	0
  6795   002A2A  6E3D               	movwf	(___flmul@b+2)^0,c
  6796   002A2C  0E00               	movlw	0
  6797   002A2E  6E3E               	movwf	(___flmul@b+3)^0,c
  6798   002A30                     l4970:
  6799   002A30  5042               	movf	(___flmul@a+3)^0,w,c
  6800   002A32  0B80               	andlw	128
  6801   002A34  1A47               	xorwf	___flmul@sign^0,f,c
  6802   002A36  5042               	movf	(___flmul@a+3)^0,w,c
  6803   002A38  2442               	addwf	(___flmul@a+3)^0,w,c
  6804   002A3A  6E48               	movwf	___flmul@aexp^0,c
  6805   002A3C  AE41               	btfss	(___flmul@a+2)^0,7,c
  6806   002A3E  EF23  F015         	goto	u5671
  6807   002A42  EF25  F015         	goto	u5670
  6808   002A46                     u5671:
  6809   002A46  EF26  F015         	goto	l4978
  6810   002A4A                     u5670:
  6811   002A4A  8048               	bsf	___flmul@aexp^0,0,c
  6812   002A4C                     l4978:
  6813   002A4C  5048               	movf	___flmul@aexp^0,w,c
  6814   002A4E  B4D8               	btfsc	status,2,c
  6815   002A50  EF2C  F015         	goto	u5681
  6816   002A54  EF2E  F015         	goto	u5680
  6817   002A58                     u5681:
  6818   002A58  EF41  F015         	goto	l4986
  6819   002A5C                     u5680:
  6820   002A5C  2848               	incf	___flmul@aexp^0,w,c
  6821   002A5E  A4D8               	btfss	status,2,c
  6822   002A60  EF34  F015         	goto	u5691
  6823   002A64  EF36  F015         	goto	u5690
  6824   002A68                     u5691:
  6825   002A68  EF3E  F015         	goto	l4984
  6826   002A6C                     u5690:
  6827   002A6C  0E00               	movlw	0
  6828   002A6E  6E3F               	movwf	___flmul@a^0,c
  6829   002A70  0E00               	movlw	0
  6830   002A72  6E40               	movwf	(___flmul@a+1)^0,c
  6831   002A74  0E00               	movlw	0
  6832   002A76  6E41               	movwf	(___flmul@a+2)^0,c
  6833   002A78  0E00               	movlw	0
  6834   002A7A  6E42               	movwf	(___flmul@a+3)^0,c
  6835   002A7C                     l4984:
  6836   002A7C  8E41               	bsf	(___flmul@a+2)^0,7,c
  6837   002A7E  EF49  F015         	goto	l1211
  6838   002A82                     l4986:
  6839   002A82  0E00               	movlw	0
  6840   002A84  6E3F               	movwf	___flmul@a^0,c
  6841   002A86  0E00               	movlw	0
  6842   002A88  6E40               	movwf	(___flmul@a+1)^0,c
  6843   002A8A  0E00               	movlw	0
  6844   002A8C  6E41               	movwf	(___flmul@a+2)^0,c
  6845   002A8E  0E00               	movlw	0
  6846   002A90  6E42               	movwf	(___flmul@a+3)^0,c
  6847   002A92                     l1211:
  6848   002A92  5048               	movf	___flmul@aexp^0,w,c
  6849   002A94  B4D8               	btfsc	status,2,c
  6850   002A96  EF4F  F015         	goto	u5701
  6851   002A9A  EF51  F015         	goto	u5700
  6852   002A9E                     u5701:
  6853   002A9E  EF59  F015         	goto	l4990
  6854   002AA2                     u5700:
  6855   002AA2  504D               	movf	___flmul@bexp^0,w,c
  6856   002AA4  A4D8               	btfss	status,2,c
  6857   002AA6  EF57  F015         	goto	u5711
  6858   002AAA  EF59  F015         	goto	u5710
  6859   002AAE                     u5711:
  6860   002AAE  EF63  F015         	goto	l4994
  6861   002AB2                     u5710:
  6862   002AB2                     l4990:
  6863   002AB2  0E00               	movlw	0
  6864   002AB4  6E3B               	movwf	?___flmul^0,c
  6865   002AB6  0E00               	movlw	0
  6866   002AB8  6E3C               	movwf	(?___flmul+1)^0,c
  6867   002ABA  0E00               	movlw	0
  6868   002ABC  6E3D               	movwf	(?___flmul+2)^0,c
  6869   002ABE  0E00               	movlw	0
  6870   002AC0  6E3E               	movwf	(?___flmul+3)^0,c
  6871   002AC2  EFFB  F016         	goto	l1215
  6872   002AC6                     l4994:
  6873   002AC6  5041               	movf	(___flmul@a+2)^0,w,c
  6874   002AC8  023B               	mulwf	___flmul@b^0,c
  6875   002ACA  CFF3 F052          	movff	prodl,___flmul@temp
  6876   002ACE  CFF4 F053          	movff	prodh,___flmul@temp+1
  6877   002AD2  5052               	movf	___flmul@temp^0,w,c
  6878   002AD4  6E49               	movwf	___flmul@grs^0,c
  6879   002AD6  6A4A               	clrf	(___flmul@grs+1)^0,c
  6880   002AD8  6A4B               	clrf	(___flmul@grs+2)^0,c
  6881   002ADA  6A4C               	clrf	(___flmul@grs+3)^0,c
  6882   002ADC  5053               	movf	(___flmul@temp+1)^0,w,c
  6883   002ADE  6E4E               	movwf	___flmul@prod^0,c
  6884   002AE0  6A4F               	clrf	(___flmul@prod+1)^0,c
  6885   002AE2  6A50               	clrf	(___flmul@prod+2)^0,c
  6886   002AE4  6A51               	clrf	(___flmul@prod+3)^0,c
  6887   002AE6  5040               	movf	(___flmul@a+1)^0,w,c
  6888   002AE8  023C               	mulwf	(___flmul@b+1)^0,c
  6889   002AEA  CFF3 F052          	movff	prodl,___flmul@temp
  6890   002AEE  CFF4 F053          	movff	prodh,___flmul@temp+1
  6891   002AF2  5052               	movf	___flmul@temp^0,w,c
  6892   002AF4  2649               	addwf	___flmul@grs^0,f,c
  6893   002AF6  0E00               	movlw	0
  6894   002AF8  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6895   002AFA  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6896   002AFC  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6897   002AFE  5053               	movf	(___flmul@temp+1)^0,w,c
  6898   002B00  264E               	addwf	___flmul@prod^0,f,c
  6899   002B02  0E00               	movlw	0
  6900   002B04  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6901   002B06  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6902   002B08  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6903   002B0A  503F               	movf	___flmul@a^0,w,c
  6904   002B0C  023D               	mulwf	(___flmul@b+2)^0,c
  6905   002B0E  CFF3 F052          	movff	prodl,___flmul@temp
  6906   002B12  CFF4 F053          	movff	prodh,___flmul@temp+1
  6907   002B16  5052               	movf	___flmul@temp^0,w,c
  6908   002B18  2649               	addwf	___flmul@grs^0,f,c
  6909   002B1A  0E00               	movlw	0
  6910   002B1C  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6911   002B1E  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6912   002B20  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6913   002B22  5053               	movf	(___flmul@temp+1)^0,w,c
  6914   002B24  264E               	addwf	___flmul@prod^0,f,c
  6915   002B26  0E00               	movlw	0
  6916   002B28  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6917   002B2A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6918   002B2C  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6919   002B2E  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
  6920   002B32  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
  6921   002B36  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
  6922   002B3A  6A49               	clrf	___flmul@grs^0,c
  6923   002B3C  503F               	movf	___flmul@a^0,w,c
  6924   002B3E  023C               	mulwf	(___flmul@b+1)^0,c
  6925   002B40  CFF3 F052          	movff	prodl,___flmul@temp
  6926   002B44  CFF4 F053          	movff	prodh,___flmul@temp+1
  6927   002B48  5052               	movf	___flmul@temp^0,w,c
  6928   002B4A  2649               	addwf	___flmul@grs^0,f,c
  6929   002B4C  5053               	movf	(___flmul@temp+1)^0,w,c
  6930   002B4E  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6931   002B50  0E00               	movlw	0
  6932   002B52  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6933   002B54  0E00               	movlw	0
  6934   002B56  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6935   002B58  5040               	movf	(___flmul@a+1)^0,w,c
  6936   002B5A  023B               	mulwf	___flmul@b^0,c
  6937   002B5C  CFF3 F052          	movff	prodl,___flmul@temp
  6938   002B60  CFF4 F053          	movff	prodh,___flmul@temp+1
  6939   002B64  5052               	movf	___flmul@temp^0,w,c
  6940   002B66  2649               	addwf	___flmul@grs^0,f,c
  6941   002B68  5053               	movf	(___flmul@temp+1)^0,w,c
  6942   002B6A  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6943   002B6C  0E00               	movlw	0
  6944   002B6E  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6945   002B70  0E00               	movlw	0
  6946   002B72  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6947   002B74  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
  6948   002B78  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
  6949   002B7C  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
  6950   002B80  6A49               	clrf	___flmul@grs^0,c
  6951   002B82  503F               	movf	___flmul@a^0,w,c
  6952   002B84  023B               	mulwf	___flmul@b^0,c
  6953   002B86  CFF3 F052          	movff	prodl,___flmul@temp
  6954   002B8A  CFF4 F053          	movff	prodh,___flmul@temp+1
  6955   002B8E  5052               	movf	___flmul@temp^0,w,c
  6956   002B90  2649               	addwf	___flmul@grs^0,f,c
  6957   002B92  5053               	movf	(___flmul@temp+1)^0,w,c
  6958   002B94  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6959   002B96  0E00               	movlw	0
  6960   002B98  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6961   002B9A  0E00               	movlw	0
  6962   002B9C  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6963   002B9E  5041               	movf	(___flmul@a+2)^0,w,c
  6964   002BA0  023C               	mulwf	(___flmul@b+1)^0,c
  6965   002BA2  CFF3 F052          	movff	prodl,___flmul@temp
  6966   002BA6  CFF4 F053          	movff	prodh,___flmul@temp+1
  6967   002BAA  5052               	movf	___flmul@temp^0,w,c
  6968   002BAC  264E               	addwf	___flmul@prod^0,f,c
  6969   002BAE  5053               	movf	(___flmul@temp+1)^0,w,c
  6970   002BB0  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6971   002BB2  0E00               	movlw	0
  6972   002BB4  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6973   002BB6  0E00               	movlw	0
  6974   002BB8  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6975   002BBA  5040               	movf	(___flmul@a+1)^0,w,c
  6976   002BBC  023D               	mulwf	(___flmul@b+2)^0,c
  6977   002BBE  CFF3 F052          	movff	prodl,___flmul@temp
  6978   002BC2  CFF4 F053          	movff	prodh,___flmul@temp+1
  6979   002BC6  5052               	movf	___flmul@temp^0,w,c
  6980   002BC8  264E               	addwf	___flmul@prod^0,f,c
  6981   002BCA  5053               	movf	(___flmul@temp+1)^0,w,c
  6982   002BCC  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6983   002BCE  0E00               	movlw	0
  6984   002BD0  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6985   002BD2  0E00               	movlw	0
  6986   002BD4  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6987   002BD6  5041               	movf	(___flmul@a+2)^0,w,c
  6988   002BD8  023D               	mulwf	(___flmul@b+2)^0,c
  6989   002BDA  CFF3 F052          	movff	prodl,___flmul@temp
  6990   002BDE  CFF4 F053          	movff	prodh,___flmul@temp+1
  6991   002BE2  5052               	movf	___flmul@temp^0,w,c
  6992   002BE4  6E43               	movwf	??___flmul^0,c
  6993   002BE6  5053               	movf	(___flmul@temp+1)^0,w,c
  6994   002BE8  6E44               	movwf	(??___flmul+1)^0,c
  6995   002BEA  6A45               	clrf	(??___flmul+2)^0,c
  6996   002BEC  6A46               	clrf	(??___flmul+3)^0,c
  6997   002BEE  C045  F046         	movff	??___flmul+2,??___flmul+3
  6998   002BF2  C044  F045         	movff	??___flmul+1,??___flmul+2
  6999   002BF6  C043  F044         	movff	??___flmul,??___flmul+1
  7000   002BFA  6A43               	clrf	??___flmul^0,c
  7001   002BFC  5043               	movf	??___flmul^0,w,c
  7002   002BFE  264E               	addwf	___flmul@prod^0,f,c
  7003   002C00  5044               	movf	(??___flmul+1)^0,w,c
  7004   002C02  224F               	addwfc	(___flmul@prod+1)^0,f,c
  7005   002C04  5045               	movf	(??___flmul+2)^0,w,c
  7006   002C06  2250               	addwfc	(___flmul@prod+2)^0,f,c
  7007   002C08  5046               	movf	(??___flmul+3)^0,w,c
  7008   002C0A  2251               	addwfc	(___flmul@prod+3)^0,f,c
  7009   002C0C  C049  F043         	movff	___flmul@grs,??___flmul
  7010   002C10  C04A  F044         	movff	___flmul@grs+1,??___flmul+1
  7011   002C14  C04B  F045         	movff	___flmul@grs+2,??___flmul+2
  7012   002C18  C04C  F046         	movff	___flmul@grs+3,??___flmul+3
  7013   002C1C  0E19               	movlw	25
  7014   002C1E  EF16  F016         	goto	u5720
  7015   002C22                     u5725:
  7016   002C22  90D8               	bcf	status,0,c
  7017   002C24  3246               	rrcf	(??___flmul+3)^0,f,c
  7018   002C26  3245               	rrcf	(??___flmul+2)^0,f,c
  7019   002C28  3244               	rrcf	(??___flmul+1)^0,f,c
  7020   002C2A  3243               	rrcf	??___flmul^0,f,c
  7021   002C2C                     u5720:
  7022   002C2C  2EE8               	decfsz	wreg,f,c
  7023   002C2E  EF11  F016         	goto	u5725
  7024   002C32  5043               	movf	??___flmul^0,w,c
  7025   002C34  264E               	addwf	___flmul@prod^0,f,c
  7026   002C36  5044               	movf	(??___flmul+1)^0,w,c
  7027   002C38  224F               	addwfc	(___flmul@prod+1)^0,f,c
  7028   002C3A  5045               	movf	(??___flmul+2)^0,w,c
  7029   002C3C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  7030   002C3E  5046               	movf	(??___flmul+3)^0,w,c
  7031   002C40  2251               	addwfc	(___flmul@prod+3)^0,f,c
  7032   002C42  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
  7033   002C46  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
  7034   002C4A  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
  7035   002C4E  6A49               	clrf	___flmul@grs^0,c
  7036   002C50  5048               	movf	___flmul@aexp^0,w,c
  7037   002C52  C04D  F043         	movff	___flmul@bexp,??___flmul
  7038   002C56  6A44               	clrf	(??___flmul+1)^0,c
  7039   002C58  2643               	addwf	??___flmul^0,f,c
  7040   002C5A  0E00               	movlw	0
  7041   002C5C  2244               	addwfc	(??___flmul+1)^0,f,c
  7042   002C5E  0E82               	movlw	130
  7043   002C60  2443               	addwf	??___flmul^0,w,c
  7044   002C62  6E52               	movwf	___flmul@temp^0,c
  7045   002C64  0EFF               	movlw	255
  7046   002C66  2044               	addwfc	(??___flmul+1)^0,w,c
  7047   002C68  6E53               	movwf	(___flmul@temp+1)^0,c
  7048   002C6A  EF4C  F016         	goto	l5042
  7049   002C6E                     l5036:
  7050   002C6E  90D8               	bcf	status,0,c
  7051   002C70  364E               	rlcf	___flmul@prod^0,f,c
  7052   002C72  364F               	rlcf	(___flmul@prod+1)^0,f,c
  7053   002C74  3650               	rlcf	(___flmul@prod+2)^0,f,c
  7054   002C76  3651               	rlcf	(___flmul@prod+3)^0,f,c
  7055   002C78  AE4C               	btfss	(___flmul@grs+3)^0,7,c
  7056   002C7A  EF41  F016         	goto	u5731
  7057   002C7E  EF43  F016         	goto	u5730
  7058   002C82                     u5731:
  7059   002C82  EF44  F016         	goto	l1218
  7060   002C86                     u5730:
  7061   002C86  804E               	bsf	___flmul@prod^0,0,c
  7062   002C88                     l1218:
  7063   002C88  90D8               	bcf	status,0,c
  7064   002C8A  3649               	rlcf	___flmul@grs^0,f,c
  7065   002C8C  364A               	rlcf	(___flmul@grs+1)^0,f,c
  7066   002C8E  364B               	rlcf	(___flmul@grs+2)^0,f,c
  7067   002C90  364C               	rlcf	(___flmul@grs+3)^0,f,c
  7068   002C92  0652               	decf	___flmul@temp^0,f,c
  7069   002C94  A0D8               	btfss	status,0,c
  7070   002C96  0653               	decf	(___flmul@temp+1)^0,f,c
  7071   002C98                     l5042:
  7072   002C98  AE50               	btfss	(___flmul@prod+2)^0,7,c
  7073   002C9A  EF51  F016         	goto	u5741
  7074   002C9E  EF53  F016         	goto	u5740
  7075   002CA2                     u5741:
  7076   002CA2  EF37  F016         	goto	l5036
  7077   002CA6                     u5740:
  7078   002CA6  0E00               	movlw	0
  7079   002CA8  6E48               	movwf	___flmul@aexp^0,c
  7080   002CAA  AE4C               	btfss	(___flmul@grs+3)^0,7,c
  7081   002CAC  EF5A  F016         	goto	u5751
  7082   002CB0  EF5C  F016         	goto	u5750
  7083   002CB4                     u5751:
  7084   002CB4  EF80  F016         	goto	l1220
  7085   002CB8                     u5750:
  7086   002CB8  0EFF               	movlw	255
  7087   002CBA  1449               	andwf	___flmul@grs^0,w,c
  7088   002CBC  6E43               	movwf	??___flmul^0,c
  7089   002CBE  0EFF               	movlw	255
  7090   002CC0  144A               	andwf	(___flmul@grs+1)^0,w,c
  7091   002CC2  6E44               	movwf	(??___flmul+1)^0,c
  7092   002CC4  0EFF               	movlw	255
  7093   002CC6  144B               	andwf	(___flmul@grs+2)^0,w,c
  7094   002CC8  6E45               	movwf	(??___flmul+2)^0,c
  7095   002CCA  0E7F               	movlw	127
  7096   002CCC  144C               	andwf	(___flmul@grs+3)^0,w,c
  7097   002CCE  6E46               	movwf	(??___flmul+3)^0,c
  7098   002CD0  5043               	movf	??___flmul^0,w,c
  7099   002CD2  1044               	iorwf	(??___flmul+1)^0,w,c
  7100   002CD4  1045               	iorwf	(??___flmul+2)^0,w,c
  7101   002CD6  1046               	iorwf	(??___flmul+3)^0,w,c
  7102   002CD8  B4D8               	btfsc	status,2,c
  7103   002CDA  EF71  F016         	goto	u5761
  7104   002CDE  EF73  F016         	goto	u5760
  7105   002CE2                     u5761:
  7106   002CE2  EF77  F016         	goto	l1221
  7107   002CE6                     u5760:
  7108   002CE6                     l5050:
  7109   002CE6  0E01               	movlw	1
  7110   002CE8  6E48               	movwf	___flmul@aexp^0,c
  7111   002CEA  EF80  F016         	goto	l1220
  7112   002CEE                     l1221:
  7113   002CEE  A04E               	btfss	___flmul@prod^0,0,c
  7114   002CF0  EF7C  F016         	goto	u5771
  7115   002CF4  EF7E  F016         	goto	u5770
  7116   002CF8                     u5771:
  7117   002CF8  EF80  F016         	goto	l1220
  7118   002CFC                     u5770:
  7119   002CFC  EF73  F016         	goto	l5050
  7120   002D00                     l1220:
  7121   002D00  5048               	movf	___flmul@aexp^0,w,c
  7122   002D02  B4D8               	btfsc	status,2,c
  7123   002D04  EF86  F016         	goto	u5781
  7124   002D08  EF88  F016         	goto	u5780
  7125   002D0C                     u5781:
  7126   002D0C  EFAC  F016         	goto	l5062
  7127   002D10                     u5780:
  7128   002D10  0E01               	movlw	1
  7129   002D12  264E               	addwf	___flmul@prod^0,f,c
  7130   002D14  0E00               	movlw	0
  7131   002D16  224F               	addwfc	(___flmul@prod+1)^0,f,c
  7132   002D18  2250               	addwfc	(___flmul@prod+2)^0,f,c
  7133   002D1A  2251               	addwfc	(___flmul@prod+3)^0,f,c
  7134   002D1C  A051               	btfss	(___flmul@prod+3)^0,0,c
  7135   002D1E  EF93  F016         	goto	u5791
  7136   002D22  EF95  F016         	goto	u5790
  7137   002D26                     u5791:
  7138   002D26  EFAC  F016         	goto	l5062
  7139   002D2A                     u5790:
  7140   002D2A  C04E  F043         	movff	___flmul@prod,??___flmul
  7141   002D2E  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  7142   002D32  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  7143   002D36  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  7144   002D3A  3446               	rlcf	(??___flmul+3)^0,w,c
  7145   002D3C  3246               	rrcf	(??___flmul+3)^0,f,c
  7146   002D3E  3245               	rrcf	(??___flmul+2)^0,f,c
  7147   002D40  3244               	rrcf	(??___flmul+1)^0,f,c
  7148   002D42  3243               	rrcf	??___flmul^0,f,c
  7149   002D44  C043  F04E         	movff	??___flmul,___flmul@prod
  7150   002D48  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  7151   002D4C  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  7152   002D50  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  7153   002D54  4A52               	infsnz	___flmul@temp^0,f,c
  7154   002D56  2A53               	incf	(___flmul@temp+1)^0,f,c
  7155   002D58                     l5062:
  7156   002D58  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  7157   002D5A  EFB7  F016         	goto	u5801
  7158   002D5E  5053               	movf	(___flmul@temp+1)^0,w,c
  7159   002D60  E108               	bnz	u5800
  7160   002D62  2852               	incf	___flmul@temp^0,w,c
  7161   002D64  A0D8               	btfss	status,0,c
  7162   002D66  EFB7  F016         	goto	u5801
  7163   002D6A  EFB9  F016         	goto	u5800
  7164   002D6E                     u5801:
  7165   002D6E  EFC3  F016         	goto	l5066
  7166   002D72                     u5800:
  7167   002D72  0E00               	movlw	0
  7168   002D74  6E4E               	movwf	___flmul@prod^0,c
  7169   002D76  0E00               	movlw	0
  7170   002D78  6E4F               	movwf	(___flmul@prod+1)^0,c
  7171   002D7A  0E80               	movlw	128
  7172   002D7C  6E50               	movwf	(___flmul@prod+2)^0,c
  7173   002D7E  0E7F               	movlw	127
  7174   002D80  6E51               	movwf	(___flmul@prod+3)^0,c
  7175   002D82  EFF1  F016         	goto	l5078
  7176   002D86                     l5066:
  7177   002D86  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  7178   002D88  EFD0  F016         	goto	u5810
  7179   002D8C  5053               	movf	(___flmul@temp+1)^0,w,c
  7180   002D8E  E106               	bnz	u5811
  7181   002D90  0452               	decf	___flmul@temp^0,w,c
  7182   002D92  B0D8               	btfsc	status,0,c
  7183   002D94  EFCE  F016         	goto	u5811
  7184   002D98  EFD0  F016         	goto	u5810
  7185   002D9C                     u5811:
  7186   002D9C  EFDC  F016         	goto	l1228
  7187   002DA0                     u5810:
  7188   002DA0  0E00               	movlw	0
  7189   002DA2  6E4E               	movwf	___flmul@prod^0,c
  7190   002DA4  0E00               	movlw	0
  7191   002DA6  6E4F               	movwf	(___flmul@prod+1)^0,c
  7192   002DA8  0E00               	movlw	0
  7193   002DAA  6E50               	movwf	(___flmul@prod+2)^0,c
  7194   002DAC  0E00               	movlw	0
  7195   002DAE  6E51               	movwf	(___flmul@prod+3)^0,c
  7196   002DB0  0E00               	movlw	0
  7197   002DB2  6E47               	movwf	___flmul@sign^0,c
  7198   002DB4  EFF1  F016         	goto	l5078
  7199   002DB8                     l1228:
  7200   002DB8  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  7201   002DBC  0EFF               	movlw	255
  7202   002DBE  164E               	andwf	___flmul@prod^0,f,c
  7203   002DC0  0EFF               	movlw	255
  7204   002DC2  164F               	andwf	(___flmul@prod+1)^0,f,c
  7205   002DC4  0E7F               	movlw	127
  7206   002DC6  1650               	andwf	(___flmul@prod+2)^0,f,c
  7207   002DC8  0E00               	movlw	0
  7208   002DCA  1651               	andwf	(___flmul@prod+3)^0,f,c
  7209   002DCC  A04D               	btfss	___flmul@bexp^0,0,c
  7210   002DCE  EFEB  F016         	goto	u5821
  7211   002DD2  EFED  F016         	goto	u5820
  7212   002DD6                     u5821:
  7213   002DD6  EFEE  F016         	goto	l5076
  7214   002DDA                     u5820:
  7215   002DDA  8E50               	bsf	(___flmul@prod+2)^0,7,c
  7216   002DDC                     l5076:
  7217   002DDC  90D8               	bcf	status,0,c
  7218   002DDE  304D               	rrcf	___flmul@bexp^0,w,c
  7219   002DE0  6E51               	movwf	(___flmul@prod+3)^0,c
  7220   002DE2                     l5078:
  7221   002DE2  5047               	movf	___flmul@sign^0,w,c
  7222   002DE4  1251               	iorwf	(___flmul@prod+3)^0,f,c
  7223   002DE6  C04E  F03B         	movff	___flmul@prod,?___flmul
  7224   002DEA  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  7225   002DEE  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  7226   002DF2  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  7227   002DF6                     l1215:
  7228   002DF6  0012               	return		;funcret
  7229   002DF8                     __end_of___flmul:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function ___fleq *****************
  7233 ;; Defined at:
  7234 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  ff1             4    0[COMRAM] unsigned char 
  7237 ;;  ff2             4    4[COMRAM] unsigned char 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;		None               void
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7249 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7252 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7253 ;;Total ram usage:       12 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_custom_floatmodulo
  7259 ;;		_RGB_to_HSV
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text27
  7264   003E78                     __ptext27:
  7265                           	callstack 0
  7266   003E78                     ___fleq:
  7267                           	callstack 26
  7268   003E78  0E00               	movlw	0
  7269   003E7A  1401               	andwf	___fleq@ff1^0,w,c
  7270   003E7C  6E09               	movwf	??___fleq^0,c
  7271   003E7E  0E00               	movlw	0
  7272   003E80  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7273   003E82  6E0A               	movwf	(??___fleq+1)^0,c
  7274   003E84  0E80               	movlw	128
  7275   003E86  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7276   003E88  6E0B               	movwf	(??___fleq+2)^0,c
  7277   003E8A  0E7F               	movlw	127
  7278   003E8C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7279   003E8E  6E0C               	movwf	(??___fleq+3)^0,c
  7280   003E90  5009               	movf	??___fleq^0,w,c
  7281   003E92  100A               	iorwf	(??___fleq+1)^0,w,c
  7282   003E94  100B               	iorwf	(??___fleq+2)^0,w,c
  7283   003E96  100C               	iorwf	(??___fleq+3)^0,w,c
  7284   003E98  A4D8               	btfss	status,2,c
  7285   003E9A  EF51  F01F         	goto	u5831
  7286   003E9E  EF53  F01F         	goto	u5830
  7287   003EA2                     u5831:
  7288   003EA2  EF5B  F01F         	goto	l5094
  7289   003EA6                     u5830:
  7290   003EA6  0E00               	movlw	0
  7291   003EA8  6E01               	movwf	___fleq@ff1^0,c
  7292   003EAA  0E00               	movlw	0
  7293   003EAC  6E02               	movwf	(___fleq@ff1+1)^0,c
  7294   003EAE  0E00               	movlw	0
  7295   003EB0  6E03               	movwf	(___fleq@ff1+2)^0,c
  7296   003EB2  0E00               	movlw	0
  7297   003EB4  6E04               	movwf	(___fleq@ff1+3)^0,c
  7298   003EB6                     l5094:
  7299   003EB6  0E00               	movlw	0
  7300   003EB8  1405               	andwf	___fleq@ff2^0,w,c
  7301   003EBA  6E09               	movwf	??___fleq^0,c
  7302   003EBC  0E00               	movlw	0
  7303   003EBE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7304   003EC0  6E0A               	movwf	(??___fleq+1)^0,c
  7305   003EC2  0E80               	movlw	128
  7306   003EC4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7307   003EC6  6E0B               	movwf	(??___fleq+2)^0,c
  7308   003EC8  0E7F               	movlw	127
  7309   003ECA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7310   003ECC  6E0C               	movwf	(??___fleq+3)^0,c
  7311   003ECE  5009               	movf	??___fleq^0,w,c
  7312   003ED0  100A               	iorwf	(??___fleq+1)^0,w,c
  7313   003ED2  100B               	iorwf	(??___fleq+2)^0,w,c
  7314   003ED4  100C               	iorwf	(??___fleq+3)^0,w,c
  7315   003ED6  A4D8               	btfss	status,2,c
  7316   003ED8  EF70  F01F         	goto	u5841
  7317   003EDC  EF72  F01F         	goto	u5840
  7318   003EE0                     u5841:
  7319   003EE0  EF7A  F01F         	goto	l5098
  7320   003EE4                     u5840:
  7321   003EE4  0E00               	movlw	0
  7322   003EE6  6E05               	movwf	___fleq@ff2^0,c
  7323   003EE8  0E00               	movlw	0
  7324   003EEA  6E06               	movwf	(___fleq@ff2+1)^0,c
  7325   003EEC  0E00               	movlw	0
  7326   003EEE  6E07               	movwf	(___fleq@ff2+2)^0,c
  7327   003EF0  0E00               	movlw	0
  7328   003EF2  6E08               	movwf	(___fleq@ff2+3)^0,c
  7329   003EF4                     l5098:
  7330   003EF4  5005               	movf	___fleq@ff2^0,w,c
  7331   003EF6  1801               	xorwf	___fleq@ff1^0,w,c
  7332   003EF8  E10F               	bnz	u5850
  7333   003EFA  5006               	movf	(___fleq@ff2+1)^0,w,c
  7334   003EFC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7335   003EFE  E10C               	bnz	u5850
  7336   003F00  5007               	movf	(___fleq@ff2+2)^0,w,c
  7337   003F02  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7338   003F04  E109               	bnz	u5850
  7339   003F06  5008               	movf	(___fleq@ff2+3)^0,w,c
  7340   003F08  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7341   003F0A  B4D8               	btfsc	status,2,c
  7342   003F0C  EF8A  F01F         	goto	u5851
  7343   003F10  EF8C  F01F         	goto	u5850
  7344   003F14                     u5851:
  7345   003F14  EF8F  F01F         	goto	l5102
  7346   003F18                     u5850:
  7347   003F18  90D8               	bcf	status,0,c
  7348   003F1A  EF90  F01F         	goto	l856
  7349   003F1E                     l5102:
  7350   003F1E  80D8               	bsf	status,0,c
  7351   003F20                     l856:
  7352   003F20  0012               	return		;funcret
  7353   003F22                     __end_of___fleq:
  7354                           	callstack 0
  7355                           
  7356 ;; *************** function ___fldiv *****************
  7357 ;; Defined at:
  7358 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  b               4   33[COMRAM] unsigned char 
  7361 ;;  a               4   37[COMRAM] unsigned char 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  grs             4   52[COMRAM] unsigned long 
  7364 ;;  rem             4   45[COMRAM] unsigned long 
  7365 ;;  new_exp         2   50[COMRAM] short 
  7366 ;;  aexp            1   57[COMRAM] unsigned char 
  7367 ;;  bexp            1   56[COMRAM] unsigned char 
  7368 ;;  sign            1   49[COMRAM] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  4   33[COMRAM] unsigned char 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7378 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;Total ram usage:       25 bytes
  7383 ;; Hardware stack levels used: 1
  7384 ;; This function calls:
  7385 ;;		Nothing
  7386 ;; This function is called by:
  7387 ;;		_custom_floatmodulo
  7388 ;;		_RGB_to_HSV
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text28
  7393   002DF8                     __ptext28:
  7394                           	callstack 0
  7395   002DF8                     ___fldiv:
  7396                           	callstack 26
  7397   002DF8  5025               	movf	(___fldiv@b+3)^0,w,c
  7398   002DFA  0B80               	andlw	128
  7399   002DFC  6E32               	movwf	___fldiv@sign^0,c
  7400   002DFE  5025               	movf	(___fldiv@b+3)^0,w,c
  7401   002E00  2425               	addwf	(___fldiv@b+3)^0,w,c
  7402   002E02  6E39               	movwf	___fldiv@bexp^0,c
  7403   002E04  AE24               	btfss	(___fldiv@b+2)^0,7,c
  7404   002E06  EF07  F017         	goto	u5411
  7405   002E0A  EF09  F017         	goto	u5410
  7406   002E0E                     u5411:
  7407   002E0E  EF0A  F017         	goto	l4822
  7408   002E12                     u5410:
  7409   002E12  8039               	bsf	___fldiv@bexp^0,0,c
  7410   002E14                     l4822:
  7411   002E14  5039               	movf	___fldiv@bexp^0,w,c
  7412   002E16  B4D8               	btfsc	status,2,c
  7413   002E18  EF10  F017         	goto	u5421
  7414   002E1C  EF12  F017         	goto	u5420
  7415   002E20                     u5421:
  7416   002E20  EF27  F017         	goto	l4832
  7417   002E24                     u5420:
  7418   002E24  2839               	incf	___fldiv@bexp^0,w,c
  7419   002E26  A4D8               	btfss	status,2,c
  7420   002E28  EF18  F017         	goto	u5431
  7421   002E2C  EF1A  F017         	goto	u5430
  7422   002E30                     u5431:
  7423   002E30  EF22  F017         	goto	l4828
  7424   002E34                     u5430:
  7425   002E34  0E00               	movlw	0
  7426   002E36  6E22               	movwf	___fldiv@b^0,c
  7427   002E38  0E00               	movlw	0
  7428   002E3A  6E23               	movwf	(___fldiv@b+1)^0,c
  7429   002E3C  0E00               	movlw	0
  7430   002E3E  6E24               	movwf	(___fldiv@b+2)^0,c
  7431   002E40  0E00               	movlw	0
  7432   002E42  6E25               	movwf	(___fldiv@b+3)^0,c
  7433   002E44                     l4828:
  7434   002E44  8E24               	bsf	(___fldiv@b+2)^0,7,c
  7435   002E46  0E00               	movlw	0
  7436   002E48  6E25               	movwf	(___fldiv@b+3)^0,c
  7437   002E4A  EF2F  F017         	goto	l4834
  7438   002E4E                     l4832:
  7439   002E4E  0E00               	movlw	0
  7440   002E50  6E22               	movwf	___fldiv@b^0,c
  7441   002E52  0E00               	movlw	0
  7442   002E54  6E23               	movwf	(___fldiv@b+1)^0,c
  7443   002E56  0E00               	movlw	0
  7444   002E58  6E24               	movwf	(___fldiv@b+2)^0,c
  7445   002E5A  0E00               	movlw	0
  7446   002E5C  6E25               	movwf	(___fldiv@b+3)^0,c
  7447   002E5E                     l4834:
  7448   002E5E  5029               	movf	(___fldiv@a+3)^0,w,c
  7449   002E60  0B80               	andlw	128
  7450   002E62  1A32               	xorwf	___fldiv@sign^0,f,c
  7451   002E64  5029               	movf	(___fldiv@a+3)^0,w,c
  7452   002E66  2429               	addwf	(___fldiv@a+3)^0,w,c
  7453   002E68  6E3A               	movwf	___fldiv@aexp^0,c
  7454   002E6A  AE28               	btfss	(___fldiv@a+2)^0,7,c
  7455   002E6C  EF3A  F017         	goto	u5441
  7456   002E70  EF3C  F017         	goto	u5440
  7457   002E74                     u5441:
  7458   002E74  EF3D  F017         	goto	l4842
  7459   002E78                     u5440:
  7460   002E78  803A               	bsf	___fldiv@aexp^0,0,c
  7461   002E7A                     l4842:
  7462   002E7A  503A               	movf	___fldiv@aexp^0,w,c
  7463   002E7C  B4D8               	btfsc	status,2,c
  7464   002E7E  EF43  F017         	goto	u5451
  7465   002E82  EF45  F017         	goto	u5450
  7466   002E86                     u5451:
  7467   002E86  EF5A  F017         	goto	l4852
  7468   002E8A                     u5450:
  7469   002E8A  283A               	incf	___fldiv@aexp^0,w,c
  7470   002E8C  A4D8               	btfss	status,2,c
  7471   002E8E  EF4B  F017         	goto	u5461
  7472   002E92  EF4D  F017         	goto	u5460
  7473   002E96                     u5461:
  7474   002E96  EF55  F017         	goto	l4848
  7475   002E9A                     u5460:
  7476   002E9A  0E00               	movlw	0
  7477   002E9C  6E26               	movwf	___fldiv@a^0,c
  7478   002E9E  0E00               	movlw	0
  7479   002EA0  6E27               	movwf	(___fldiv@a+1)^0,c
  7480   002EA2  0E00               	movlw	0
  7481   002EA4  6E28               	movwf	(___fldiv@a+2)^0,c
  7482   002EA6  0E00               	movlw	0
  7483   002EA8  6E29               	movwf	(___fldiv@a+3)^0,c
  7484   002EAA                     l4848:
  7485   002EAA  8E28               	bsf	(___fldiv@a+2)^0,7,c
  7486   002EAC  0E00               	movlw	0
  7487   002EAE  6E29               	movwf	(___fldiv@a+3)^0,c
  7488   002EB0  EF62  F017         	goto	l4854
  7489   002EB4                     l4852:
  7490   002EB4  0E00               	movlw	0
  7491   002EB6  6E26               	movwf	___fldiv@a^0,c
  7492   002EB8  0E00               	movlw	0
  7493   002EBA  6E27               	movwf	(___fldiv@a+1)^0,c
  7494   002EBC  0E00               	movlw	0
  7495   002EBE  6E28               	movwf	(___fldiv@a+2)^0,c
  7496   002EC0  0E00               	movlw	0
  7497   002EC2  6E29               	movwf	(___fldiv@a+3)^0,c
  7498   002EC4                     l4854:
  7499   002EC4  5026               	movf	___fldiv@a^0,w,c
  7500   002EC6  1027               	iorwf	(___fldiv@a+1)^0,w,c
  7501   002EC8  1028               	iorwf	(___fldiv@a+2)^0,w,c
  7502   002ECA  1029               	iorwf	(___fldiv@a+3)^0,w,c
  7503   002ECC  A4D8               	btfss	status,2,c
  7504   002ECE  EF6B  F017         	goto	u5471
  7505   002ED2  EF6D  F017         	goto	u5470
  7506   002ED6                     u5471:
  7507   002ED6  EF85  F017         	goto	l4866
  7508   002EDA                     u5470:
  7509   002EDA  0E00               	movlw	0
  7510   002EDC  6E22               	movwf	___fldiv@b^0,c
  7511   002EDE  0E00               	movlw	0
  7512   002EE0  6E23               	movwf	(___fldiv@b+1)^0,c
  7513   002EE2  0E00               	movlw	0
  7514   002EE4  6E24               	movwf	(___fldiv@b+2)^0,c
  7515   002EE6  0E00               	movlw	0
  7516   002EE8  6E25               	movwf	(___fldiv@b+3)^0,c
  7517   002EEA  0E80               	movlw	128
  7518   002EEC  1224               	iorwf	(___fldiv@b+2)^0,f,c
  7519   002EEE  0E7F               	movlw	127
  7520   002EF0  1225               	iorwf	(___fldiv@b+3)^0,f,c
  7521   002EF2                     l4860:
  7522   002EF2  5032               	movf	___fldiv@sign^0,w,c
  7523   002EF4  1225               	iorwf	(___fldiv@b+3)^0,f,c
  7524   002EF6  C022  F022         	movff	___fldiv@b,?___fldiv
  7525   002EFA  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  7526   002EFE  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  7527   002F02  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  7528   002F06  EFC8  F018         	goto	l1179
  7529   002F0A                     l4866:
  7530   002F0A  5039               	movf	___fldiv@bexp^0,w,c
  7531   002F0C  A4D8               	btfss	status,2,c
  7532   002F0E  EF8B  F017         	goto	u5481
  7533   002F12  EF8D  F017         	goto	u5480
  7534   002F16                     u5481:
  7535   002F16  EF97  F017         	goto	l4874
  7536   002F1A                     u5480:
  7537   002F1A  0E00               	movlw	0
  7538   002F1C  6E22               	movwf	?___fldiv^0,c
  7539   002F1E  0E00               	movlw	0
  7540   002F20  6E23               	movwf	(?___fldiv+1)^0,c
  7541   002F22  0E00               	movlw	0
  7542   002F24  6E24               	movwf	(?___fldiv+2)^0,c
  7543   002F26  0E00               	movlw	0
  7544   002F28  6E25               	movwf	(?___fldiv+3)^0,c
  7545   002F2A  EFC8  F018         	goto	l1179
  7546   002F2E                     l4874:
  7547   002F2E  503A               	movf	___fldiv@aexp^0,w,c
  7548   002F30  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  7549   002F34  6A2B               	clrf	(??___fldiv+1)^0,c
  7550   002F36  5E2A               	subwf	??___fldiv^0,f,c
  7551   002F38  0E00               	movlw	0
  7552   002F3A  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  7553   002F3C  0E7F               	movlw	127
  7554   002F3E  242A               	addwf	??___fldiv^0,w,c
  7555   002F40  6E33               	movwf	___fldiv@new_exp^0,c
  7556   002F42  0E00               	movlw	0
  7557   002F44  202B               	addwfc	(??___fldiv+1)^0,w,c
  7558   002F46  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  7559   002F48  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  7560   002F4C  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  7561   002F50  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  7562   002F54  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  7563   002F58  0E00               	movlw	0
  7564   002F5A  6E22               	movwf	___fldiv@b^0,c
  7565   002F5C  0E00               	movlw	0
  7566   002F5E  6E23               	movwf	(___fldiv@b+1)^0,c
  7567   002F60  0E00               	movlw	0
  7568   002F62  6E24               	movwf	(___fldiv@b+2)^0,c
  7569   002F64  0E00               	movlw	0
  7570   002F66  6E25               	movwf	(___fldiv@b+3)^0,c
  7571   002F68  0E00               	movlw	0
  7572   002F6A  6E35               	movwf	___fldiv@grs^0,c
  7573   002F6C  0E00               	movlw	0
  7574   002F6E  6E36               	movwf	(___fldiv@grs+1)^0,c
  7575   002F70  0E00               	movlw	0
  7576   002F72  6E37               	movwf	(___fldiv@grs+2)^0,c
  7577   002F74  0E00               	movlw	0
  7578   002F76  6E38               	movwf	(___fldiv@grs+3)^0,c
  7579   002F78  0E00               	movlw	0
  7580   002F7A  6E3A               	movwf	___fldiv@aexp^0,c
  7581   002F7C  EFF8  F017         	goto	l1181
  7582   002F80                     l4884:
  7583   002F80  503A               	movf	___fldiv@aexp^0,w,c
  7584   002F82  B4D8               	btfsc	status,2,c
  7585   002F84  EFC6  F017         	goto	u5491
  7586   002F88  EFC8  F017         	goto	u5490
  7587   002F8C                     u5491:
  7588   002F8C  EFDF  F017         	goto	l4892
  7589   002F90                     u5490:
  7590   002F90  90D8               	bcf	status,0,c
  7591   002F92  362E               	rlcf	___fldiv@rem^0,f,c
  7592   002F94  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  7593   002F96  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  7594   002F98  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  7595   002F9A  90D8               	bcf	status,0,c
  7596   002F9C  3622               	rlcf	___fldiv@b^0,f,c
  7597   002F9E  3623               	rlcf	(___fldiv@b+1)^0,f,c
  7598   002FA0  3624               	rlcf	(___fldiv@b+2)^0,f,c
  7599   002FA2  3625               	rlcf	(___fldiv@b+3)^0,f,c
  7600   002FA4  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  7601   002FA6  EFD7  F017         	goto	u5501
  7602   002FAA  EFD9  F017         	goto	u5500
  7603   002FAE                     u5501:
  7604   002FAE  EFDA  F017         	goto	l1184
  7605   002FB2                     u5500:
  7606   002FB2  8022               	bsf	___fldiv@b^0,0,c
  7607   002FB4                     l1184:
  7608   002FB4  90D8               	bcf	status,0,c
  7609   002FB6  3635               	rlcf	___fldiv@grs^0,f,c
  7610   002FB8  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  7611   002FBA  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  7612   002FBC  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  7613   002FBE                     l4892:
  7614   002FBE  5026               	movf	___fldiv@a^0,w,c
  7615   002FC0  5C2E               	subwf	___fldiv@rem^0,w,c
  7616   002FC2  5027               	movf	(___fldiv@a+1)^0,w,c
  7617   002FC4  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  7618   002FC6  5028               	movf	(___fldiv@a+2)^0,w,c
  7619   002FC8  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  7620   002FCA  5029               	movf	(___fldiv@a+3)^0,w,c
  7621   002FCC  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  7622   002FCE  A0D8               	btfss	status,0,c
  7623   002FD0  EFEC  F017         	goto	u5511
  7624   002FD4  EFEE  F017         	goto	u5510
  7625   002FD8                     u5511:
  7626   002FD8  EFF7  F017         	goto	l4898
  7627   002FDC                     u5510:
  7628   002FDC  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  7629   002FDE  5026               	movf	___fldiv@a^0,w,c
  7630   002FE0  5E2E               	subwf	___fldiv@rem^0,f,c
  7631   002FE2  5027               	movf	(___fldiv@a+1)^0,w,c
  7632   002FE4  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  7633   002FE6  5028               	movf	(___fldiv@a+2)^0,w,c
  7634   002FE8  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  7635   002FEA  5029               	movf	(___fldiv@a+3)^0,w,c
  7636   002FEC  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  7637   002FEE                     l4898:
  7638   002FEE  2A3A               	incf	___fldiv@aexp^0,f,c
  7639   002FF0                     l1181:
  7640   002FF0  0E19               	movlw	25
  7641   002FF2  643A               	cpfsgt	___fldiv@aexp^0,c
  7642   002FF4  EFFE  F017         	goto	u5521
  7643   002FF8  EF00  F018         	goto	u5520
  7644   002FFC                     u5521:
  7645   002FFC  EFC0  F017         	goto	l4884
  7646   003000                     u5520:
  7647   003000  502E               	movf	___fldiv@rem^0,w,c
  7648   003002  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  7649   003004  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  7650   003006  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  7651   003008  B4D8               	btfsc	status,2,c
  7652   00300A  EF09  F018         	goto	u5531
  7653   00300E  EF0B  F018         	goto	u5530
  7654   003012                     u5531:
  7655   003012  EF23  F018         	goto	l4910
  7656   003016                     u5530:
  7657   003016  8035               	bsf	___fldiv@grs^0,0,c
  7658   003018  EF23  F018         	goto	l4910
  7659   00301C                     l4904:
  7660   00301C  90D8               	bcf	status,0,c
  7661   00301E  3622               	rlcf	___fldiv@b^0,f,c
  7662   003020  3623               	rlcf	(___fldiv@b+1)^0,f,c
  7663   003022  3624               	rlcf	(___fldiv@b+2)^0,f,c
  7664   003024  3625               	rlcf	(___fldiv@b+3)^0,f,c
  7665   003026  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  7666   003028  EF18  F018         	goto	u5541
  7667   00302C  EF1A  F018         	goto	u5540
  7668   003030                     u5541:
  7669   003030  EF1B  F018         	goto	l1190
  7670   003034                     u5540:
  7671   003034  8022               	bsf	___fldiv@b^0,0,c
  7672   003036                     l1190:
  7673   003036  90D8               	bcf	status,0,c
  7674   003038  3635               	rlcf	___fldiv@grs^0,f,c
  7675   00303A  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  7676   00303C  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  7677   00303E  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  7678   003040  0633               	decf	___fldiv@new_exp^0,f,c
  7679   003042  A0D8               	btfss	status,0,c
  7680   003044  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  7681   003046                     l4910:
  7682   003046  AE24               	btfss	(___fldiv@b+2)^0,7,c
  7683   003048  EF28  F018         	goto	u5551
  7684   00304C  EF2A  F018         	goto	u5550
  7685   003050                     u5551:
  7686   003050  EF0E  F018         	goto	l4904
  7687   003054                     u5550:
  7688   003054  0E00               	movlw	0
  7689   003056  6E3A               	movwf	___fldiv@aexp^0,c
  7690   003058  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  7691   00305A  EF31  F018         	goto	u5561
  7692   00305E  EF33  F018         	goto	u5560
  7693   003062                     u5561:
  7694   003062  EF57  F018         	goto	l1192
  7695   003066                     u5560:
  7696   003066  0EFF               	movlw	255
  7697   003068  1435               	andwf	___fldiv@grs^0,w,c
  7698   00306A  6E2A               	movwf	??___fldiv^0,c
  7699   00306C  0EFF               	movlw	255
  7700   00306E  1436               	andwf	(___fldiv@grs+1)^0,w,c
  7701   003070  6E2B               	movwf	(??___fldiv+1)^0,c
  7702   003072  0EFF               	movlw	255
  7703   003074  1437               	andwf	(___fldiv@grs+2)^0,w,c
  7704   003076  6E2C               	movwf	(??___fldiv+2)^0,c
  7705   003078  0E7F               	movlw	127
  7706   00307A  1438               	andwf	(___fldiv@grs+3)^0,w,c
  7707   00307C  6E2D               	movwf	(??___fldiv+3)^0,c
  7708   00307E  502A               	movf	??___fldiv^0,w,c
  7709   003080  102B               	iorwf	(??___fldiv+1)^0,w,c
  7710   003082  102C               	iorwf	(??___fldiv+2)^0,w,c
  7711   003084  102D               	iorwf	(??___fldiv+3)^0,w,c
  7712   003086  B4D8               	btfsc	status,2,c
  7713   003088  EF48  F018         	goto	u5571
  7714   00308C  EF4A  F018         	goto	u5570
  7715   003090                     u5571:
  7716   003090  EF4E  F018         	goto	l1193
  7717   003094                     u5570:
  7718   003094                     l4918:
  7719   003094  0E01               	movlw	1
  7720   003096  6E3A               	movwf	___fldiv@aexp^0,c
  7721   003098  EF57  F018         	goto	l1192
  7722   00309C                     l1193:
  7723   00309C  A022               	btfss	___fldiv@b^0,0,c
  7724   00309E  EF53  F018         	goto	u5581
  7725   0030A2  EF55  F018         	goto	u5580
  7726   0030A6                     u5581:
  7727   0030A6  EF57  F018         	goto	l1192
  7728   0030AA                     u5580:
  7729   0030AA  EF4A  F018         	goto	l4918
  7730   0030AE                     l1192:
  7731   0030AE  503A               	movf	___fldiv@aexp^0,w,c
  7732   0030B0  B4D8               	btfsc	status,2,c
  7733   0030B2  EF5D  F018         	goto	u5591
  7734   0030B6  EF5F  F018         	goto	u5590
  7735   0030BA                     u5591:
  7736   0030BA  EF83  F018         	goto	l4930
  7737   0030BE                     u5590:
  7738   0030BE  0E01               	movlw	1
  7739   0030C0  2622               	addwf	___fldiv@b^0,f,c
  7740   0030C2  0E00               	movlw	0
  7741   0030C4  2223               	addwfc	(___fldiv@b+1)^0,f,c
  7742   0030C6  2224               	addwfc	(___fldiv@b+2)^0,f,c
  7743   0030C8  2225               	addwfc	(___fldiv@b+3)^0,f,c
  7744   0030CA  A025               	btfss	(___fldiv@b+3)^0,0,c
  7745   0030CC  EF6A  F018         	goto	u5601
  7746   0030D0  EF6C  F018         	goto	u5600
  7747   0030D4                     u5601:
  7748   0030D4  EF83  F018         	goto	l4930
  7749   0030D8                     u5600:
  7750   0030D8  C022  F02A         	movff	___fldiv@b,??___fldiv
  7751   0030DC  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  7752   0030E0  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  7753   0030E4  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  7754   0030E8  342D               	rlcf	(??___fldiv+3)^0,w,c
  7755   0030EA  322D               	rrcf	(??___fldiv+3)^0,f,c
  7756   0030EC  322C               	rrcf	(??___fldiv+2)^0,f,c
  7757   0030EE  322B               	rrcf	(??___fldiv+1)^0,f,c
  7758   0030F0  322A               	rrcf	??___fldiv^0,f,c
  7759   0030F2  C02A  F022         	movff	??___fldiv,___fldiv@b
  7760   0030F6  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  7761   0030FA  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  7762   0030FE  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  7763   003102  4A33               	infsnz	___fldiv@new_exp^0,f,c
  7764   003104  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  7765   003106                     l4930:
  7766   003106  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7767   003108  EF8E  F018         	goto	u5611
  7768   00310C  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  7769   00310E  E108               	bnz	u5610
  7770   003110  2833               	incf	___fldiv@new_exp^0,w,c
  7771   003112  A0D8               	btfss	status,0,c
  7772   003114  EF8E  F018         	goto	u5611
  7773   003118  EF90  F018         	goto	u5610
  7774   00311C                     u5611:
  7775   00311C  EF9B  F018         	goto	l4934
  7776   003120                     u5610:
  7777   003120  0E00               	movlw	0
  7778   003122  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  7779   003124  6833               	setf	___fldiv@new_exp^0,c
  7780   003126  0E00               	movlw	0
  7781   003128  6E22               	movwf	___fldiv@b^0,c
  7782   00312A  0E00               	movlw	0
  7783   00312C  6E23               	movwf	(___fldiv@b+1)^0,c
  7784   00312E  0E00               	movlw	0
  7785   003130  6E24               	movwf	(___fldiv@b+2)^0,c
  7786   003132  0E00               	movlw	0
  7787   003134  6E25               	movwf	(___fldiv@b+3)^0,c
  7788   003136                     l4934:
  7789   003136  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7790   003138  EFA8  F018         	goto	u5620
  7791   00313C  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  7792   00313E  E106               	bnz	u5621
  7793   003140  0433               	decf	___fldiv@new_exp^0,w,c
  7794   003142  B0D8               	btfsc	status,0,c
  7795   003144  EFA6  F018         	goto	u5621
  7796   003148  EFA8  F018         	goto	u5620
  7797   00314C                     u5621:
  7798   00314C  EFB6  F018         	goto	l4938
  7799   003150                     u5620:
  7800   003150  0E00               	movlw	0
  7801   003152  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  7802   003154  0E00               	movlw	0
  7803   003156  6E33               	movwf	___fldiv@new_exp^0,c
  7804   003158  0E00               	movlw	0
  7805   00315A  6E22               	movwf	___fldiv@b^0,c
  7806   00315C  0E00               	movlw	0
  7807   00315E  6E23               	movwf	(___fldiv@b+1)^0,c
  7808   003160  0E00               	movlw	0
  7809   003162  6E24               	movwf	(___fldiv@b+2)^0,c
  7810   003164  0E00               	movlw	0
  7811   003166  6E25               	movwf	(___fldiv@b+3)^0,c
  7812   003168  0E00               	movlw	0
  7813   00316A  6E32               	movwf	___fldiv@sign^0,c
  7814   00316C                     l4938:
  7815   00316C  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  7816   003170  A039               	btfss	___fldiv@bexp^0,0,c
  7817   003172  EFBD  F018         	goto	u5631
  7818   003176  EFBF  F018         	goto	u5630
  7819   00317A                     u5631:
  7820   00317A  EFC2  F018         	goto	l4944
  7821   00317E                     u5630:
  7822   00317E  8E24               	bsf	(___fldiv@b+2)^0,7,c
  7823   003180  EFC3  F018         	goto	l4946
  7824   003184                     l4944:
  7825   003184  9E24               	bcf	(___fldiv@b+2)^0,7,c
  7826   003186                     l4946:
  7827   003186  90D8               	bcf	status,0,c
  7828   003188  3039               	rrcf	___fldiv@bexp^0,w,c
  7829   00318A  6E25               	movwf	(___fldiv@b+3)^0,c
  7830   00318C  EF79  F017         	goto	l4860
  7831   003190                     l1179:
  7832   003190  0012               	return		;funcret
  7833   003192                     __end_of___fldiv:
  7834                           	callstack 0
  7835                           
  7836 ;; *************** function ___flge *****************
  7837 ;; Defined at:
  7838 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  ff1             4    0[COMRAM] unsigned char 
  7841 ;;  ff2             4    4[COMRAM] unsigned char 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;		None               void
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7853 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7855 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7856 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;Total ram usage:       12 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_RGB_to_HSV
  7863 ;;		_color_cardCheck
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text29
  7868   003CB0                     __ptext29:
  7869                           	callstack 0
  7870   003CB0                     ___flge:
  7871                           	callstack 28
  7872   003CB0  0E00               	movlw	0
  7873   003CB2  1401               	andwf	___flge@ff1^0,w,c
  7874   003CB4  6E09               	movwf	??___flge^0,c
  7875   003CB6  0E00               	movlw	0
  7876   003CB8  1402               	andwf	(___flge@ff1+1)^0,w,c
  7877   003CBA  6E0A               	movwf	(??___flge+1)^0,c
  7878   003CBC  0E80               	movlw	128
  7879   003CBE  1403               	andwf	(___flge@ff1+2)^0,w,c
  7880   003CC0  6E0B               	movwf	(??___flge+2)^0,c
  7881   003CC2  0E7F               	movlw	127
  7882   003CC4  1404               	andwf	(___flge@ff1+3)^0,w,c
  7883   003CC6  6E0C               	movwf	(??___flge+3)^0,c
  7884   003CC8  5009               	movf	??___flge^0,w,c
  7885   003CCA  100A               	iorwf	(??___flge+1)^0,w,c
  7886   003CCC  100B               	iorwf	(??___flge+2)^0,w,c
  7887   003CCE  100C               	iorwf	(??___flge+3)^0,w,c
  7888   003CD0  A4D8               	btfss	status,2,c
  7889   003CD2  EF6D  F01E         	goto	u6061
  7890   003CD6  EF6F  F01E         	goto	u6060
  7891   003CDA                     u6061:
  7892   003CDA  EF77  F01E         	goto	l5250
  7893   003CDE                     u6060:
  7894   003CDE  0E00               	movlw	0
  7895   003CE0  6E01               	movwf	___flge@ff1^0,c
  7896   003CE2  0E00               	movlw	0
  7897   003CE4  6E02               	movwf	(___flge@ff1+1)^0,c
  7898   003CE6  0E00               	movlw	0
  7899   003CE8  6E03               	movwf	(___flge@ff1+2)^0,c
  7900   003CEA  0E00               	movlw	0
  7901   003CEC  6E04               	movwf	(___flge@ff1+3)^0,c
  7902   003CEE                     l5250:
  7903   003CEE  0E00               	movlw	0
  7904   003CF0  1405               	andwf	___flge@ff2^0,w,c
  7905   003CF2  6E09               	movwf	??___flge^0,c
  7906   003CF4  0E00               	movlw	0
  7907   003CF6  1406               	andwf	(___flge@ff2+1)^0,w,c
  7908   003CF8  6E0A               	movwf	(??___flge+1)^0,c
  7909   003CFA  0E80               	movlw	128
  7910   003CFC  1407               	andwf	(___flge@ff2+2)^0,w,c
  7911   003CFE  6E0B               	movwf	(??___flge+2)^0,c
  7912   003D00  0E7F               	movlw	127
  7913   003D02  1408               	andwf	(___flge@ff2+3)^0,w,c
  7914   003D04  6E0C               	movwf	(??___flge+3)^0,c
  7915   003D06  5009               	movf	??___flge^0,w,c
  7916   003D08  100A               	iorwf	(??___flge+1)^0,w,c
  7917   003D0A  100B               	iorwf	(??___flge+2)^0,w,c
  7918   003D0C  100C               	iorwf	(??___flge+3)^0,w,c
  7919   003D0E  A4D8               	btfss	status,2,c
  7920   003D10  EF8C  F01E         	goto	u6071
  7921   003D14  EF8E  F01E         	goto	u6070
  7922   003D18                     u6071:
  7923   003D18  EF96  F01E         	goto	l5254
  7924   003D1C                     u6070:
  7925   003D1C  0E00               	movlw	0
  7926   003D1E  6E05               	movwf	___flge@ff2^0,c
  7927   003D20  0E00               	movlw	0
  7928   003D22  6E06               	movwf	(___flge@ff2+1)^0,c
  7929   003D24  0E00               	movlw	0
  7930   003D26  6E07               	movwf	(___flge@ff2+2)^0,c
  7931   003D28  0E00               	movlw	0
  7932   003D2A  6E08               	movwf	(___flge@ff2+3)^0,c
  7933   003D2C                     l5254:
  7934   003D2C  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7935   003D2E  EF9B  F01E         	goto	u6081
  7936   003D32  EF9D  F01E         	goto	u6080
  7937   003D36                     u6081:
  7938   003D36  EFA6  F01E         	goto	l5258
  7939   003D3A                     u6080:
  7940   003D3A  6C01               	negf	___flge@ff1^0,c
  7941   003D3C  1E02               	comf	(___flge@ff1+1)^0,f,c
  7942   003D3E  B0D8               	btfsc	status,0,c
  7943   003D40  2A02               	incf	(___flge@ff1+1)^0,f,c
  7944   003D42  1E03               	comf	(___flge@ff1+2)^0,f,c
  7945   003D44  B0D8               	btfsc	status,0,c
  7946   003D46  2A03               	incf	(___flge@ff1+2)^0,f,c
  7947   003D48  0E80               	movlw	128
  7948   003D4A  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7949   003D4C                     l5258:
  7950   003D4C  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7951   003D4E  EFAB  F01E         	goto	u6091
  7952   003D52  EFAD  F01E         	goto	u6090
  7953   003D56                     u6091:
  7954   003D56  EFB6  F01E         	goto	l862
  7955   003D5A                     u6090:
  7956   003D5A  6C05               	negf	___flge@ff2^0,c
  7957   003D5C  1E06               	comf	(___flge@ff2+1)^0,f,c
  7958   003D5E  B0D8               	btfsc	status,0,c
  7959   003D60  2A06               	incf	(___flge@ff2+1)^0,f,c
  7960   003D62  1E07               	comf	(___flge@ff2+2)^0,f,c
  7961   003D64  B0D8               	btfsc	status,0,c
  7962   003D66  2A07               	incf	(___flge@ff2+2)^0,f,c
  7963   003D68  0E80               	movlw	128
  7964   003D6A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7965   003D6C                     l862:
  7966   003D6C  0E00               	movlw	0
  7967   003D6E  1A01               	xorwf	___flge@ff1^0,f,c
  7968   003D70  0E00               	movlw	0
  7969   003D72  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7970   003D74  0E00               	movlw	0
  7971   003D76  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7972   003D78  0E80               	movlw	128
  7973   003D7A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7974   003D7C  0E00               	movlw	0
  7975   003D7E  1A05               	xorwf	___flge@ff2^0,f,c
  7976   003D80  0E00               	movlw	0
  7977   003D82  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7978   003D84  0E00               	movlw	0
  7979   003D86  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7980   003D88  0E80               	movlw	128
  7981   003D8A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7982   003D8C  5005               	movf	___flge@ff2^0,w,c
  7983   003D8E  5C01               	subwf	___flge@ff1^0,w,c
  7984   003D90  5006               	movf	(___flge@ff2+1)^0,w,c
  7985   003D92  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7986   003D94  5007               	movf	(___flge@ff2+2)^0,w,c
  7987   003D96  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7988   003D98  5008               	movf	(___flge@ff2+3)^0,w,c
  7989   003D9A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7990   003D9C  B0D8               	btfsc	status,0,c
  7991   003D9E  EFD3  F01E         	goto	u6101
  7992   003DA2  EFD5  F01E         	goto	u6100
  7993   003DA6                     u6101:
  7994   003DA6  EFD8  F01E         	goto	l5264
  7995   003DAA                     u6100:
  7996   003DAA  90D8               	bcf	status,0,c
  7997   003DAC  EFD9  F01E         	goto	l867
  7998   003DB0                     l5264:
  7999   003DB0  80D8               	bsf	status,0,c
  8000   003DB2                     l867:
  8001   003DB2  0012               	return		;funcret
  8002   003DB4                     __end_of___flge:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function _backward *****************
  8006 ;; Defined at:
  8007 ;;		line 166 in file "dc_motor_v1.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  Distance_Cal    1    wreg     unsigned char 
  8010 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8011 ;;		 -> motorL(9), 
  8012 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8013 ;;		 -> motorR(9), 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  8016 ;;  j               2   26[COMRAM] int 
  8017 ;;  i               2   24[COMRAM] int 
  8018 ;;  delay_time      2   30[COMRAM] int 
  8019 ;;  max_power       2   28[COMRAM] int 
  8020 ;;  acceleration    2    0        int 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8033 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8034 ;;Total ram usage:       14 bytes
  8035 ;; Hardware stack levels used: 1
  8036 ;; Hardware stack levels required when called: 2
  8037 ;; This function calls:
  8038 ;;		___awdiv
  8039 ;;		_delay_ms_function
  8040 ;;		_setMotorPWM
  8041 ;; This function is called by:
  8042 ;;		_maze_search
  8043 ;;		_calibration_routine
  8044 ;;		_maze_return
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text30
  8049   0037C2                     __ptext30:
  8050                           	callstack 0
  8051   0037C2                     _backward:
  8052                           	callstack 27
  8053                           
  8054                           ;incstack = 0
  8055                           ;backward@Distance_Calibration stored from wreg
  8056   0037C2  6E18               	movwf	backward@Distance_Calibration^0,c
  8057   0037C4                     
  8058                           ;dc_motor_v1.c: 167:     mL->direction = 0;
  8059   0037C4  5013               	movf	backward@mL^0,w,c
  8060   0037C6  6ED9               	movwf	fsr2l,c
  8061   0037C8  6ADA               	clrf	fsr2h,c
  8062   0037CA  0E01               	movlw	1
  8063   0037CC  26D9               	addwf	fsr2l,f,c
  8064   0037CE  6ADF               	clrf	indf2,c
  8065                           
  8066                           ;dc_motor_v1.c: 168:     mR->direction = 0;
  8067   0037D0  5014               	movf	backward@mR^0,w,c
  8068   0037D2  6ED9               	movwf	fsr2l,c
  8069   0037D4  6ADA               	clrf	fsr2h,c
  8070   0037D6  0E01               	movlw	1
  8071   0037D8  26D9               	addwf	fsr2l,f,c
  8072   0037DA  6ADF               	clrf	indf2,c
  8073   0037DC                     
  8074                           ;dc_motor_v1.c: 171:     int max_power = 40;
  8075   0037DC  0E00               	movlw	0
  8076   0037DE  6E1E               	movwf	(backward@max_power+1)^0,c
  8077   0037E0  0E28               	movlw	40
  8078   0037E2  6E1D               	movwf	backward@max_power^0,c
  8079   0037E4                     
  8080                           ;dc_motor_v1.c: 173:     int delay_time = acceleration_time/max_power;
  8081   0037E4  0E00               	movlw	0
  8082   0037E6  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8083   0037E8  0E64               	movlw	100
  8084   0037EA  6E01               	movwf	___awdiv@dividend^0,c
  8085   0037EC  0E00               	movlw	0
  8086   0037EE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8087   0037F0  0E28               	movlw	40
  8088   0037F2  6E03               	movwf	___awdiv@divisor^0,c
  8089   0037F4  ECDA  F01E         	call	___awdiv	;wreg free
  8090   0037F8  C001  F01F         	movff	?___awdiv,backward@delay_time
  8091   0037FC  C002  F020         	movff	?___awdiv+1,backward@delay_time+1
  8092   003800                     
  8093                           ;dc_motor_v1.c: 176:     for(int i=0; i< max_power; i++){
  8094   003800  0E00               	movlw	0
  8095   003802  6E1A               	movwf	(backward@i+1)^0,c
  8096   003804  0E00               	movlw	0
  8097   003806  6E19               	movwf	backward@i^0,c
  8098   003808  EF2A  F01C         	goto	l5750
  8099   00380C                     l5740:
  8100                           
  8101                           ;dc_motor_v1.c: 177:         mL->power = mL->power + 1;
  8102   00380C  5013               	movf	backward@mL^0,w,c
  8103   00380E  6ED9               	movwf	fsr2l,c
  8104   003810  6ADA               	clrf	fsr2h,c
  8105   003812  5013               	movf	backward@mL^0,w,c
  8106   003814  6EE1               	movwf	fsr1l,c
  8107   003816  6AE2               	clrf	fsr1h,c
  8108   003818  50E7               	movf	indf1,w,c
  8109   00381A  6E15               	movwf	??_backward^0,c
  8110   00381C  2815               	incf	??_backward^0,w,c
  8111   00381E  6EDF               	movwf	indf2,c
  8112                           
  8113                           ;dc_motor_v1.c: 178:         mR->power = mR->power + 1 ;
  8114   003820  5014               	movf	backward@mR^0,w,c
  8115   003822  6ED9               	movwf	fsr2l,c
  8116   003824  6ADA               	clrf	fsr2h,c
  8117   003826  5014               	movf	backward@mR^0,w,c
  8118   003828  6EE1               	movwf	fsr1l,c
  8119   00382A  6AE2               	clrf	fsr1h,c
  8120   00382C  50E7               	movf	indf1,w,c
  8121   00382E  6E15               	movwf	??_backward^0,c
  8122   003830  2815               	incf	??_backward^0,w,c
  8123   003832  6EDF               	movwf	indf2,c
  8124   003834                     
  8125                           ;dc_motor_v1.c: 179:         setMotorPWM(mR);
  8126   003834  C014  F00E         	movff	backward@mR,setMotorPWM@m
  8127   003838  EC9F  F01C         	call	_setMotorPWM	;wreg free
  8128   00383C                     
  8129                           ;dc_motor_v1.c: 180:         setMotorPWM(mL);
  8130   00383C  C013  F00E         	movff	backward@mL,setMotorPWM@m
  8131   003840  EC9F  F01C         	call	_setMotorPWM	;wreg free
  8132   003844                     
  8133                           ;dc_motor_v1.c: 181:         delay_ms_function(delay_time);
  8134   003844  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  8135   003848  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  8136   00384C  ECB7  F021         	call	_delay_ms_function	;wreg free
  8137   003850                     
  8138                           ;dc_motor_v1.c: 182:     }
  8139   003850  4A19               	infsnz	backward@i^0,f,c
  8140   003852  2A1A               	incf	(backward@i+1)^0,f,c
  8141   003854                     l5750:
  8142   003854  501D               	movf	backward@max_power^0,w,c
  8143   003856  5C19               	subwf	backward@i^0,w,c
  8144   003858  501A               	movf	(backward@i+1)^0,w,c
  8145   00385A  0A80               	xorlw	128
  8146   00385C  6E15               	movwf	??_backward^0,c
  8147   00385E  501E               	movf	(backward@max_power+1)^0,w,c
  8148   003860  0A80               	xorlw	128
  8149   003862  5815               	subwfb	??_backward^0,w,c
  8150   003864  A0D8               	btfss	status,0,c
  8151   003866  EF37  F01C         	goto	u6981
  8152   00386A  EF39  F01C         	goto	u6980
  8153   00386E                     u6981:
  8154   00386E  EF06  F01C         	goto	l5740
  8155   003872                     u6980:
  8156   003872                     
  8157                           ;dc_motor_v1.c: 185:     for(int j=0; j<Distance_Calibration; j++){
  8158   003872  0E00               	movlw	0
  8159   003874  6E1C               	movwf	(backward@j+1)^0,c
  8160   003876  0E00               	movlw	0
  8161   003878  6E1B               	movwf	backward@j^0,c
  8162   00387A  EF48  F01C         	goto	l272
  8163   00387E                     l5754:
  8164                           
  8165                           ;dc_motor_v1.c: 186:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8166   00387E  0ED0               	movlw	208
  8167   003880  6E15               	movwf	??_backward^0,c
  8168   003882  0ECA               	movlw	202
  8169   003884                     u7447:
  8170   003884  2EE8               	decfsz	wreg,f,c
  8171   003886  D7FE               	bra	u7447
  8172   003888  2E15               	decfsz	??_backward^0,f,c
  8173   00388A  D7FC               	bra	u7447
  8174   00388C                     
  8175                           ;dc_motor_v1.c: 187:     }
  8176   00388C  4A1B               	infsnz	backward@j^0,f,c
  8177   00388E  2A1C               	incf	(backward@j+1)^0,f,c
  8178   003890                     l272:
  8179   003890  5018               	movf	backward@Distance_Calibration^0,w,c
  8180   003892  6E15               	movwf	??_backward^0,c
  8181   003894  6A16               	clrf	(??_backward+1)^0,c
  8182   003896  5015               	movf	??_backward^0,w,c
  8183   003898  5C1B               	subwf	backward@j^0,w,c
  8184   00389A  501C               	movf	(backward@j+1)^0,w,c
  8185   00389C  0A80               	xorlw	128
  8186   00389E  6E17               	movwf	(??_backward+2)^0,c
  8187   0038A0  5016               	movf	(??_backward+1)^0,w,c
  8188   0038A2  0A80               	xorlw	128
  8189   0038A4  5817               	subwfb	(??_backward+2)^0,w,c
  8190   0038A6  A0D8               	btfss	status,0,c
  8191   0038A8  EF58  F01C         	goto	u6991
  8192   0038AC  EF5A  F01C         	goto	u6990
  8193   0038B0                     u6991:
  8194   0038B0  EF3F  F01C         	goto	l5754
  8195   0038B4                     u6990:
  8196   0038B4  EF88  F01C         	goto	l5772
  8197   0038B8                     l5758:
  8198                           
  8199                           ;dc_motor_v1.c: 191:         if(mR->power> 0 ){
  8200   0038B8  5014               	movf	backward@mR^0,w,c
  8201   0038BA  6ED9               	movwf	fsr2l,c
  8202   0038BC  6ADA               	clrf	fsr2h,c
  8203   0038BE  50DF               	movf	indf2,w,c
  8204   0038C0  B4D8               	btfsc	status,2,c
  8205   0038C2  EF65  F01C         	goto	u7001
  8206   0038C6  EF67  F01C         	goto	u7000
  8207   0038CA                     u7001:
  8208   0038CA  EF6B  F01C         	goto	l5762
  8209   0038CE                     u7000:
  8210   0038CE                     
  8211                           ;dc_motor_v1.c: 192:             mR->power--;
  8212   0038CE  5014               	movf	backward@mR^0,w,c
  8213   0038D0  6ED9               	movwf	fsr2l,c
  8214   0038D2  6ADA               	clrf	fsr2h,c
  8215   0038D4  06DF               	decf	indf2,f,c
  8216   0038D6                     l5762:
  8217                           
  8218                           ;dc_motor_v1.c: 194:         if(mL->power> 0 ){
  8219   0038D6  5013               	movf	backward@mL^0,w,c
  8220   0038D8  6ED9               	movwf	fsr2l,c
  8221   0038DA  6ADA               	clrf	fsr2h,c
  8222   0038DC  50DF               	movf	indf2,w,c
  8223   0038DE  B4D8               	btfsc	status,2,c
  8224   0038E0  EF74  F01C         	goto	u7011
  8225   0038E4  EF76  F01C         	goto	u7010
  8226   0038E8                     u7011:
  8227   0038E8  EF7A  F01C         	goto	l5766
  8228   0038EC                     u7010:
  8229   0038EC                     
  8230                           ;dc_motor_v1.c: 195:             mL->power--;
  8231   0038EC  5013               	movf	backward@mL^0,w,c
  8232   0038EE  6ED9               	movwf	fsr2l,c
  8233   0038F0  6ADA               	clrf	fsr2h,c
  8234   0038F2  06DF               	decf	indf2,f,c
  8235   0038F4                     l5766:
  8236                           
  8237                           ;dc_motor_v1.c: 197:         setMotorPWM(mR);
  8238   0038F4  C014  F00E         	movff	backward@mR,setMotorPWM@m
  8239   0038F8  EC9F  F01C         	call	_setMotorPWM	;wreg free
  8240   0038FC                     
  8241                           ;dc_motor_v1.c: 198:         setMotorPWM(mL);
  8242   0038FC  C013  F00E         	movff	backward@mL,setMotorPWM@m
  8243   003900  EC9F  F01C         	call	_setMotorPWM	;wreg free
  8244   003904                     
  8245                           ;dc_motor_v1.c: 199:         delay_ms_function(delay_time);
  8246   003904  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  8247   003908  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  8248   00390C  ECB7  F021         	call	_delay_ms_function	;wreg free
  8249   003910                     l5772:
  8250                           
  8251                           ;dc_motor_v1.c: 190:     while(mL->power || mR->power > 0){
  8252   003910  5013               	movf	backward@mL^0,w,c
  8253   003912  6ED9               	movwf	fsr2l,c
  8254   003914  6ADA               	clrf	fsr2h,c
  8255   003916  50DF               	movf	indf2,w,c
  8256   003918  A4D8               	btfss	status,2,c
  8257   00391A  EF91  F01C         	goto	u7021
  8258   00391E  EF93  F01C         	goto	u7020
  8259   003922                     u7021:
  8260   003922  EF5C  F01C         	goto	l5758
  8261   003926                     u7020:
  8262   003926  5014               	movf	backward@mR^0,w,c
  8263   003928  6ED9               	movwf	fsr2l,c
  8264   00392A  6ADA               	clrf	fsr2h,c
  8265   00392C  50DF               	movf	indf2,w,c
  8266   00392E  A4D8               	btfss	status,2,c
  8267   003930  EF9C  F01C         	goto	u7031
  8268   003934  EF9E  F01C         	goto	u7030
  8269   003938                     u7031:
  8270   003938  EF5C  F01C         	goto	l5758
  8271   00393C                     u7030:
  8272   00393C  0012               	return		;funcret
  8273   00393E                     __end_of_backward:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function _setMotorPWM *****************
  8277 ;; Defined at:
  8278 ;;		line 75 in file "dc_motor_v1.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  m               1   13[COMRAM] PTR struct DC_motor
  8281 ;;		 -> motorR(9), motorL(9), 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  negDuty         1   17[COMRAM] unsigned char 
  8284 ;;  posDuty         1   16[COMRAM] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8298 ;;Total ram usage:        5 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 1
  8301 ;; This function calls:
  8302 ;;		___lwdiv
  8303 ;;		___wmul
  8304 ;; This function is called by:
  8305 ;;		_forward
  8306 ;;		_backward
  8307 ;;		_leftTURN
  8308 ;;		_rightTURN
  8309 ;;		_stop
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text31
  8314   00393E                     __ptext31:
  8315                           	callstack 0
  8316   00393E                     _setMotorPWM:
  8317                           	callstack 27
  8318   00393E                     
  8319                           ;dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 76: {;dc_motor_v1.c: 77
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 79:     if(m->brakemode) {
  8320   00393E  500E               	movf	setMotorPWM@m^0,w,c
  8321   003940  6ED9               	movwf	fsr2l,c
  8322   003942  6ADA               	clrf	fsr2h,c
  8323   003944  0E02               	movlw	2
  8324   003946  26D9               	addwf	fsr2l,f,c
  8325   003948  50DF               	movf	indf2,w,c
  8326   00394A  B4D8               	btfsc	status,2,c
  8327   00394C  EFAA  F01C         	goto	u6271
  8328   003950  EFAC  F01C         	goto	u6270
  8329   003954                     u6271:
  8330   003954  EFDC  F01C         	goto	l5400
  8331   003958                     u6270:
  8332   003958                     
  8333                           ;dc_motor_v1.c: 80:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  8334   003958  500E               	movf	setMotorPWM@m^0,w,c
  8335   00395A  6ED9               	movwf	fsr2l,c
  8336   00395C  6ADA               	clrf	fsr2h,c
  8337   00395E  50DF               	movf	indf2,w,c
  8338   003960  6E0F               	movwf	??_setMotorPWM^0,c
  8339   003962  500F               	movf	??_setMotorPWM^0,w,c
  8340   003964  6E01               	movwf	___wmul@multiplier^0,c
  8341   003966  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8342   003968  500E               	movf	setMotorPWM@m^0,w,c
  8343   00396A  6ED9               	movwf	fsr2l,c
  8344   00396C  6ADA               	clrf	fsr2h,c
  8345   00396E  0E03               	movlw	3
  8346   003970  26D9               	addwf	fsr2l,f,c
  8347   003972  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8348   003976  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8349   00397A  ECF7  F021         	call	___wmul	;wreg free
  8350   00397E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8351   003982  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8352   003986  0E00               	movlw	0
  8353   003988  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8354   00398A  0E64               	movlw	100
  8355   00398C  6E09               	movwf	___lwdiv@divisor^0,c
  8356   00398E  EC2F  F020         	call	___lwdiv	;wreg free
  8357   003992  500E               	movf	setMotorPWM@m^0,w,c
  8358   003994  6ED9               	movwf	fsr2l,c
  8359   003996  6ADA               	clrf	fsr2h,c
  8360   003998  0E03               	movlw	3
  8361   00399A  26D9               	addwf	fsr2l,f,c
  8362   00399C  50DF               	movf	indf2,w,c
  8363   00399E  6E10               	movwf	(??_setMotorPWM+1)^0,c
  8364   0039A0  5007               	movf	?___lwdiv^0,w,c
  8365   0039A2  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  8366   0039A4  6E11               	movwf	setMotorPWM@posDuty^0,c
  8367   0039A6                     
  8368                           ;dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  8369   0039A6  500E               	movf	setMotorPWM@m^0,w,c
  8370   0039A8  6ED9               	movwf	fsr2l,c
  8371   0039AA  6ADA               	clrf	fsr2h,c
  8372   0039AC  0E03               	movlw	3
  8373   0039AE  26D9               	addwf	fsr2l,f,c
  8374   0039B0  50DF               	movf	indf2,w,c
  8375   0039B2  6E12               	movwf	setMotorPWM@negDuty^0,c
  8376                           
  8377                           ;dc_motor_v1.c: 82:     }
  8378   0039B4  EFFD  F01C         	goto	l5404
  8379   0039B8                     l5400:
  8380                           
  8381                           ;dc_motor_v1.c: 84:         posDuty=0;
  8382   0039B8  0E00               	movlw	0
  8383   0039BA  6E11               	movwf	setMotorPWM@posDuty^0,c
  8384   0039BC                     
  8385                           ;dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8386   0039BC  500E               	movf	setMotorPWM@m^0,w,c
  8387   0039BE  6ED9               	movwf	fsr2l,c
  8388   0039C0  6ADA               	clrf	fsr2h,c
  8389   0039C2  50DF               	movf	indf2,w,c
  8390   0039C4  6E0F               	movwf	??_setMotorPWM^0,c
  8391   0039C6  500F               	movf	??_setMotorPWM^0,w,c
  8392   0039C8  6E01               	movwf	___wmul@multiplier^0,c
  8393   0039CA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8394   0039CC  500E               	movf	setMotorPWM@m^0,w,c
  8395   0039CE  6ED9               	movwf	fsr2l,c
  8396   0039D0  6ADA               	clrf	fsr2h,c
  8397   0039D2  0E03               	movlw	3
  8398   0039D4  26D9               	addwf	fsr2l,f,c
  8399   0039D6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8400   0039DA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8401   0039DE  ECF7  F021         	call	___wmul	;wreg free
  8402   0039E2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8403   0039E6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8404   0039EA  0E00               	movlw	0
  8405   0039EC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8406   0039EE  0E64               	movlw	100
  8407   0039F0  6E09               	movwf	___lwdiv@divisor^0,c
  8408   0039F2  EC2F  F020         	call	___lwdiv	;wreg free
  8409   0039F6  5007               	movf	?___lwdiv^0,w,c
  8410   0039F8  6E12               	movwf	setMotorPWM@negDuty^0,c
  8411   0039FA                     l5404:
  8412                           
  8413                           ;dc_motor_v1.c: 88:     if (m->direction) {
  8414   0039FA  500E               	movf	setMotorPWM@m^0,w,c
  8415   0039FC  6ED9               	movwf	fsr2l,c
  8416   0039FE  6ADA               	clrf	fsr2h,c
  8417   003A00  0E01               	movlw	1
  8418   003A02  26D9               	addwf	fsr2l,f,c
  8419   003A04  50DF               	movf	indf2,w,c
  8420   003A06  B4D8               	btfsc	status,2,c
  8421   003A08  EF08  F01D         	goto	u6281
  8422   003A0C  EF0A  F01D         	goto	u6280
  8423   003A10                     u6281:
  8424   003A10  EF2A  F01D         	goto	l5408
  8425   003A14                     u6280:
  8426   003A14                     
  8427                           ;dc_motor_v1.c: 89:         *(m->posDutyHighByte)=posDuty;
  8428   003A14  500E               	movf	setMotorPWM@m^0,w,c
  8429   003A16  6ED9               	movwf	fsr2l,c
  8430   003A18  6ADA               	clrf	fsr2h,c
  8431   003A1A  0E05               	movlw	5
  8432   003A1C  26D9               	addwf	fsr2l,f,c
  8433   003A1E  CFDE F00F          	movff	postinc2,??_setMotorPWM
  8434   003A22  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  8435   003A26  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  8436   003A2A  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8437   003A2E  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  8438                           
  8439                           ;dc_motor_v1.c: 90:         *(m->negDutyHighByte)=negDuty;
  8440   003A32  500E               	movf	setMotorPWM@m^0,w,c
  8441   003A34  6ED9               	movwf	fsr2l,c
  8442   003A36  6ADA               	clrf	fsr2h,c
  8443   003A38  0E07               	movlw	7
  8444   003A3A  26D9               	addwf	fsr2l,f,c
  8445   003A3C  CFDE F00F          	movff	postinc2,??_setMotorPWM
  8446   003A40  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  8447   003A44  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  8448   003A48  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8449   003A4C  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  8450                           
  8451                           ;dc_motor_v1.c: 91:     } else {
  8452   003A50  EF48  F01D         	goto	l244
  8453   003A54                     l5408:
  8454                           
  8455                           ;dc_motor_v1.c: 92:         *(m->posDutyHighByte)=negDuty;
  8456   003A54  500E               	movf	setMotorPWM@m^0,w,c
  8457   003A56  6ED9               	movwf	fsr2l,c
  8458   003A58  6ADA               	clrf	fsr2h,c
  8459   003A5A  0E05               	movlw	5
  8460   003A5C  26D9               	addwf	fsr2l,f,c
  8461   003A5E  CFDE F00F          	movff	postinc2,??_setMotorPWM
  8462   003A62  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  8463   003A66  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  8464   003A6A  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8465   003A6E  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  8466                           
  8467                           ;dc_motor_v1.c: 93:         *(m->negDutyHighByte)=posDuty;
  8468   003A72  500E               	movf	setMotorPWM@m^0,w,c
  8469   003A74  6ED9               	movwf	fsr2l,c
  8470   003A76  6ADA               	clrf	fsr2h,c
  8471   003A78  0E07               	movlw	7
  8472   003A7A  26D9               	addwf	fsr2l,f,c
  8473   003A7C  CFDE F00F          	movff	postinc2,??_setMotorPWM
  8474   003A80  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  8475   003A84  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  8476   003A88  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8477   003A8C  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  8478   003A90                     l244:
  8479   003A90  0012               	return		;funcret
  8480   003A92                     __end_of_setMotorPWM:
  8481                           	callstack 0
  8482                           
  8483 ;; *************** function ___wmul *****************
  8484 ;; Defined at:
  8485 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  multiplier      2    0[COMRAM] unsigned int 
  8488 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  product         2    4[COMRAM] unsigned int 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  2    0[COMRAM] unsigned int 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2, status,0, prodl, prodh
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8503 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8504 ;;Total ram usage:        6 bytes
  8505 ;; Hardware stack levels used: 1
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_setMotorPWM
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text32
  8514   0043EE                     __ptext32:
  8515                           	callstack 0
  8516   0043EE                     ___wmul:
  8517                           	callstack 27
  8518   0043EE  5001               	movf	___wmul@multiplier^0,w,c
  8519   0043F0  0203               	mulwf	___wmul@multiplicand^0,c
  8520   0043F2  CFF3 F005          	movff	prodl,___wmul@product
  8521   0043F6  CFF4 F006          	movff	prodh,___wmul@product+1
  8522   0043FA  5001               	movf	___wmul@multiplier^0,w,c
  8523   0043FC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8524   0043FE  50F3               	movf	243,w,c
  8525   004400  2606               	addwf	(___wmul@product+1)^0,f,c
  8526   004402  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8527   004404  0203               	mulwf	___wmul@multiplicand^0,c
  8528   004406  50F3               	movf	243,w,c
  8529   004408  2606               	addwf	(___wmul@product+1)^0,f,c
  8530   00440A  C005  F001         	movff	___wmul@product,?___wmul
  8531   00440E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8532   004412  0012               	return		;funcret
  8533   004414                     __end_of___wmul:
  8534                           	callstack 0
  8535                           
  8536 ;; *************** function ___lwdiv *****************
  8537 ;; Defined at:
  8538 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  dividend        2    6[COMRAM] unsigned int 
  8541 ;;  divisor         2    8[COMRAM] unsigned int 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  quotient        2   11[COMRAM] unsigned int 
  8544 ;;  counter         1   10[COMRAM] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  2    6[COMRAM] unsigned int 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2, status,0
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;Total ram usage:        7 bytes
  8559 ;; Hardware stack levels used: 1
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_setMotorPWM
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text33
  8568   00405E                     __ptext33:
  8569                           	callstack 0
  8570   00405E                     ___lwdiv:
  8571                           	callstack 27
  8572   00405E  0E00               	movlw	0
  8573   004060  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  8574   004062  0E00               	movlw	0
  8575   004064  6E0C               	movwf	___lwdiv@quotient^0,c
  8576   004066  5009               	movf	___lwdiv@divisor^0,w,c
  8577   004068  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8578   00406A  B4D8               	btfsc	status,2,c
  8579   00406C  EF3A  F020         	goto	u6111
  8580   004070  EF3C  F020         	goto	u6110
  8581   004074                     u6111:
  8582   004074  EF64  F020         	goto	l1088
  8583   004078                     u6110:
  8584   004078  0E01               	movlw	1
  8585   00407A  6E0B               	movwf	___lwdiv@counter^0,c
  8586   00407C  EF44  F020         	goto	l5276
  8587   004080                     l5274:
  8588   004080  90D8               	bcf	status,0,c
  8589   004082  3609               	rlcf	___lwdiv@divisor^0,f,c
  8590   004084  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8591   004086  2A0B               	incf	___lwdiv@counter^0,f,c
  8592   004088                     l5276:
  8593   004088  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8594   00408A  EF49  F020         	goto	u6121
  8595   00408E  EF4B  F020         	goto	u6120
  8596   004092                     u6121:
  8597   004092  EF40  F020         	goto	l5274
  8598   004096                     u6120:
  8599   004096                     l5278:
  8600   004096  90D8               	bcf	status,0,c
  8601   004098  360C               	rlcf	___lwdiv@quotient^0,f,c
  8602   00409A  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8603   00409C  5009               	movf	___lwdiv@divisor^0,w,c
  8604   00409E  5C07               	subwf	___lwdiv@dividend^0,w,c
  8605   0040A0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8606   0040A2  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8607   0040A4  A0D8               	btfss	status,0,c
  8608   0040A6  EF57  F020         	goto	u6131
  8609   0040AA  EF59  F020         	goto	u6130
  8610   0040AE                     u6131:
  8611   0040AE  EF5E  F020         	goto	l5286
  8612   0040B2                     u6130:
  8613   0040B2  5009               	movf	___lwdiv@divisor^0,w,c
  8614   0040B4  5E07               	subwf	___lwdiv@dividend^0,f,c
  8615   0040B6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8616   0040B8  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8617   0040BA  800C               	bsf	___lwdiv@quotient^0,0,c
  8618   0040BC                     l5286:
  8619   0040BC  90D8               	bcf	status,0,c
  8620   0040BE  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8621   0040C0  3209               	rrcf	___lwdiv@divisor^0,f,c
  8622   0040C2  2E0B               	decfsz	___lwdiv@counter^0,f,c
  8623   0040C4  EF4B  F020         	goto	l5278
  8624   0040C8                     l1088:
  8625   0040C8  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
  8626   0040CC  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8627   0040D0  0012               	return		;funcret
  8628   0040D2                     __end_of___lwdiv:
  8629                           	callstack 0
  8630                           
  8631 ;; *************** function _delay_ms_function *****************
  8632 ;; Defined at:
  8633 ;;		line 67 in file "dc_motor_v1.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  milliseconds    2    0[COMRAM] unsigned int 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;		None
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;Total ram usage:        3 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_forward
  8657 ;;		_backward
  8658 ;;		_leftTURN
  8659 ;;		_rightTURN
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           	psect	text34
  8664   00436E                     __ptext34:
  8665                           	callstack 0
  8666   00436E                     _delay_ms_function:
  8667                           	callstack 28
  8668   00436E                     
  8669                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  8670   00436E  EFC4  F021         	goto	l234
  8671   004372                     l5390:
  8672                           
  8673                           ;dc_motor_v1.c: 69:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8674   004372  0E15               	movlw	21
  8675   004374  6E03               	movwf	??_delay_ms_function^0,c
  8676   004376  0EC6               	movlw	198
  8677   004378                     u7457:
  8678   004378  2EE8               	decfsz	wreg,f,c
  8679   00437A  D7FE               	bra	u7457
  8680   00437C  2E03               	decfsz	??_delay_ms_function^0,f,c
  8681   00437E  D7FC               	bra	u7457
  8682   004380  D000               	nop2	
  8683   004382                     
  8684                           ;dc_motor_v1.c: 70:         milliseconds--;
  8685   004382  0601               	decf	delay_ms_function@milliseconds^0,f,c
  8686   004384  A0D8               	btfss	status,0,c
  8687   004386  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  8688   004388                     l234:
  8689                           
  8690                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  8691   004388  5001               	movf	delay_ms_function@milliseconds^0,w,c
  8692   00438A  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  8693   00438C  A4D8               	btfss	status,2,c
  8694   00438E  EFCB  F021         	goto	u6261
  8695   004392  EFCD  F021         	goto	u6260
  8696   004396                     u6261:
  8697   004396  EFB9  F021         	goto	l5390
  8698   00439A                     u6260:
  8699   00439A  0012               	return		;funcret
  8700   00439C                     __end_of_delay_ms_function:
  8701                           	callstack 0
  8702                           
  8703 ;; *************** function ___awdiv *****************
  8704 ;; Defined at:
  8705 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  dividend        2    0[COMRAM] int 
  8708 ;;  divisor         2    2[COMRAM] int 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  quotient        2    6[COMRAM] int 
  8711 ;;  sign            1    5[COMRAM] unsigned char 
  8712 ;;  counter         1    4[COMRAM] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  2    0[COMRAM] int 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;Total ram usage:        8 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; This function calls:
  8729 ;;		Nothing
  8730 ;; This function is called by:
  8731 ;;		_forward
  8732 ;;		_backward
  8733 ;;		_leftTURN
  8734 ;;		_rightTURN
  8735 ;;		_maze_search
  8736 ;;		_maze_return
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text35
  8741   003DB4                     __ptext35:
  8742                           	callstack 0
  8743   003DB4                     ___awdiv:
  8744                           	callstack 28
  8745   003DB4  0E00               	movlw	0
  8746   003DB6  6E06               	movwf	___awdiv@sign^0,c
  8747   003DB8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8748   003DBA  EFE3  F01E         	goto	u6290
  8749   003DBE  EFE1  F01E         	goto	u6291
  8750   003DC2                     u6291:
  8751   003DC2  EFE9  F01E         	goto	l5418
  8752   003DC6                     u6290:
  8753   003DC6  6C03               	negf	___awdiv@divisor^0,c
  8754   003DC8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8755   003DCA  B0D8               	btfsc	status,0,c
  8756   003DCC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8757   003DCE  0E01               	movlw	1
  8758   003DD0  6E06               	movwf	___awdiv@sign^0,c
  8759   003DD2                     l5418:
  8760   003DD2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8761   003DD4  EFF0  F01E         	goto	u6300
  8762   003DD8  EFEE  F01E         	goto	u6301
  8763   003DDC                     u6301:
  8764   003DDC  EFF6  F01E         	goto	l5424
  8765   003DE0                     u6300:
  8766   003DE0  6C01               	negf	___awdiv@dividend^0,c
  8767   003DE2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8768   003DE4  B0D8               	btfsc	status,0,c
  8769   003DE6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8770   003DE8  0E01               	movlw	1
  8771   003DEA  1A06               	xorwf	___awdiv@sign^0,f,c
  8772   003DEC                     l5424:
  8773   003DEC  0E00               	movlw	0
  8774   003DEE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8775   003DF0  0E00               	movlw	0
  8776   003DF2  6E07               	movwf	___awdiv@quotient^0,c
  8777   003DF4  5003               	movf	___awdiv@divisor^0,w,c
  8778   003DF6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8779   003DF8  B4D8               	btfsc	status,2,c
  8780   003DFA  EF01  F01F         	goto	u6311
  8781   003DFE  EF03  F01F         	goto	u6310
  8782   003E02                     u6311:
  8783   003E02  EF2B  F01F         	goto	l5446
  8784   003E06                     u6310:
  8785   003E06  0E01               	movlw	1
  8786   003E08  6E05               	movwf	___awdiv@counter^0,c
  8787   003E0A  EF0B  F01F         	goto	l5432
  8788   003E0E                     l5430:
  8789   003E0E  90D8               	bcf	status,0,c
  8790   003E10  3603               	rlcf	___awdiv@divisor^0,f,c
  8791   003E12  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8792   003E14  2A05               	incf	___awdiv@counter^0,f,c
  8793   003E16                     l5432:
  8794   003E16  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8795   003E18  EF10  F01F         	goto	u6321
  8796   003E1C  EF12  F01F         	goto	u6320
  8797   003E20                     u6321:
  8798   003E20  EF07  F01F         	goto	l5430
  8799   003E24                     u6320:
  8800   003E24                     l5434:
  8801   003E24  90D8               	bcf	status,0,c
  8802   003E26  3607               	rlcf	___awdiv@quotient^0,f,c
  8803   003E28  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8804   003E2A  5003               	movf	___awdiv@divisor^0,w,c
  8805   003E2C  5C01               	subwf	___awdiv@dividend^0,w,c
  8806   003E2E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8807   003E30  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8808   003E32  A0D8               	btfss	status,0,c
  8809   003E34  EF1E  F01F         	goto	u6331
  8810   003E38  EF20  F01F         	goto	u6330
  8811   003E3C                     u6331:
  8812   003E3C  EF25  F01F         	goto	l5442
  8813   003E40                     u6330:
  8814   003E40  5003               	movf	___awdiv@divisor^0,w,c
  8815   003E42  5E01               	subwf	___awdiv@dividend^0,f,c
  8816   003E44  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8817   003E46  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8818   003E48  8007               	bsf	___awdiv@quotient^0,0,c
  8819   003E4A                     l5442:
  8820   003E4A  90D8               	bcf	status,0,c
  8821   003E4C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8822   003E4E  3203               	rrcf	___awdiv@divisor^0,f,c
  8823   003E50  2E05               	decfsz	___awdiv@counter^0,f,c
  8824   003E52  EF12  F01F         	goto	l5434
  8825   003E56                     l5446:
  8826   003E56  5006               	movf	___awdiv@sign^0,w,c
  8827   003E58  B4D8               	btfsc	status,2,c
  8828   003E5A  EF31  F01F         	goto	u6341
  8829   003E5E  EF33  F01F         	goto	u6340
  8830   003E62                     u6341:
  8831   003E62  EF37  F01F         	goto	l5450
  8832   003E66                     u6340:
  8833   003E66  6C07               	negf	___awdiv@quotient^0,c
  8834   003E68  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8835   003E6A  B0D8               	btfsc	status,0,c
  8836   003E6C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8837   003E6E                     l5450:
  8838   003E6E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8839   003E72  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8840   003E76  0012               	return		;funcret
  8841   003E78                     __end_of___awdiv:
  8842                           	callstack 0
  8843                           
  8844 ;; *************** function _initDCmotorsPWM *****************
  8845 ;; Defined at:
  8846 ;;		line 5 in file "dc_motor_v1.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1    wreg      void 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;Total ram usage:        2 bytes
  8865 ;; Hardware stack levels used: 1
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_main
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text36
  8874   003FCA                     __ptext36:
  8875                           	callstack 0
  8876   003FCA                     _initDCmotorsPWM:
  8877                           	callstack 30
  8878   003FCA                     
  8879                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  8880   003FCA  9485               	bcf	133,2,c	;volatile
  8881                           
  8882                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  8883   003FCC  9885               	bcf	133,4,c	;volatile
  8884                           
  8885                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  8886   003FCE  9E83               	bcf	131,7,c	;volatile
  8887                           
  8888                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  8889   003FD0  9C87               	bcf	135,6,c	;volatile
  8890                           
  8891                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  8892   003FD2  947D               	bcf	125,2,c	;volatile
  8893                           
  8894                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  8895   003FD4  987D               	bcf	125,4,c	;volatile
  8896                           
  8897                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  8898   003FD6  9E7B               	bcf	123,7,c	;volatile
  8899                           
  8900                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  8901   003FD8  9C7F               	bcf	127,6,c	;volatile
  8902   003FDA                     
  8903                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  8904   003FDA  0E05               	movlw	5
  8905   003FDC  010E               	movlb	14	; () banked
  8906   003FDE  6F74               	movwf	116,b	;volatile
  8907                           
  8908                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  8909   003FE0  0E06               	movlw	6
  8910   003FE2  6F76               	movwf	118,b	;volatile
  8911                           
  8912                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  8913   003FE4  0E07               	movlw	7
  8914   003FE6  6F69               	movwf	105,b	;volatile
  8915                           
  8916                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  8917   003FE8  0E08               	movlw	8
  8918   003FEA  6F88               	movwf	136,b	;volatile
  8919                           
  8920                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  8921   003FEC  50BD               	movf	189,w,c	;volatile
  8922   003FEE  0B8F               	andlw	-113
  8923   003FF0  0940               	iorlw	64
  8924   003FF2  6EBD               	movwf	189,c	;volatile
  8925                           
  8926                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  8927   003FF4  0EE0               	movlw	-32
  8928   003FF6  16BE               	andwf	190,f,c	;volatile
  8929                           
  8930                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  8931   003FF8  50BF               	movf	191,w,c	;volatile
  8932   003FFA  0BF0               	andlw	-16
  8933   003FFC  0901               	iorlw	1
  8934   003FFE  6EBF               	movwf	191,c	;volatile
  8935   004000                     
  8936                           ; BSR set to: 14
  8937                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  8938   004000  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  8939   004004                     
  8940                           ; BSR set to: 14
  8941                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  8942   004004  8EBD               	bsf	189,7,c	;volatile
  8943                           
  8944                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  8945   004006  0E00               	movlw	0
  8946   004008  6EAA               	movwf	170,c	;volatile
  8947                           
  8948                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  8949   00400A  0E00               	movlw	0
  8950   00400C  6EA6               	movwf	166,c	;volatile
  8951                           
  8952                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  8953   00400E  0E00               	movlw	0
  8954   004010  010F               	movlb	15	; () banked
  8955   004012  6F25               	movwf	37,b	;volatile
  8956                           
  8957                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  8958   004014  0E00               	movlw	0
  8959   004016  6F21               	movwf	33,b	;volatile
  8960                           
  8961                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  8962   004018  0EFC               	movlw	-4
  8963   00401A  16AD               	andwf	173,f,c	;volatile
  8964                           
  8965                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  8966   00401C  0EF3               	movlw	-13
  8967   00401E  16AD               	andwf	173,f,c	;volatile
  8968                           
  8969                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  8970   004020  0ECF               	movlw	-49
  8971   004022  16AD               	andwf	173,f,c	;volatile
  8972                           
  8973                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  8974   004024  0E3F               	movlw	-193
  8975   004026  16AD               	andwf	173,f,c	;volatile
  8976   004028                     
  8977                           ; BSR set to: 15
  8978                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  8979   004028  88AB               	bsf	171,4,c	;volatile
  8980                           
  8981                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  8982   00402A  50AB               	movf	171,w,c	;volatile
  8983   00402C  0BF0               	andlw	-16
  8984   00402E  090C               	iorlw	12
  8985   004030  6EAB               	movwf	171,c	;volatile
  8986   004032                     
  8987                           ; BSR set to: 15
  8988                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  8989   004032  8EAB               	bsf	171,7,c	;volatile
  8990   004034                     
  8991                           ; BSR set to: 15
  8992                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  8993   004034  88A7               	bsf	167,4,c	;volatile
  8994                           
  8995                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  8996   004036  50A7               	movf	167,w,c	;volatile
  8997   004038  0BF0               	andlw	-16
  8998   00403A  090C               	iorlw	12
  8999   00403C  6EA7               	movwf	167,c	;volatile
  9000   00403E                     
  9001                           ; BSR set to: 15
  9002                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  9003   00403E  8EA7               	bsf	167,7,c	;volatile
  9004   004040                     
  9005                           ; BSR set to: 15
  9006                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  9007   004040  8926               	bsf	38,4,b	;volatile
  9008                           
  9009                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  9010   004042  5126               	movf	38,w,b	;volatile
  9011   004044  0BF0               	andlw	-16
  9012   004046  090C               	iorlw	12
  9013   004048  6F26               	movwf	38,b	;volatile
  9014   00404A                     
  9015                           ; BSR set to: 15
  9016                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  9017   00404A  8F26               	bsf	38,7,b	;volatile
  9018   00404C                     
  9019                           ; BSR set to: 15
  9020                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  9021   00404C  8922               	bsf	34,4,b	;volatile
  9022                           
  9023                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  9024   00404E  5122               	movf	34,w,b	;volatile
  9025   004050  0BF0               	andlw	-16
  9026   004052  090C               	iorlw	12
  9027   004054  6F22               	movwf	34,b	;volatile
  9028   004056                     
  9029                           ; BSR set to: 15
  9030                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  9031   004056  8F22               	bsf	34,7,b	;volatile
  9032   004058                     
  9033                           ; BSR set to: 15
  9034                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  9035   004058  9688               	bcf	136,3,c	;volatile
  9036   00405A                     
  9037                           ; BSR set to: 15
  9038                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  9039   00405A  9680               	bcf	128,3,c	;volatile
  9040   00405C                     
  9041                           ; BSR set to: 15
  9042   00405C  0012               	return		;funcret
  9043   00405E                     __end_of_initDCmotorsPWM:
  9044                           	callstack 0
  9045                           
  9046                           	psect	smallconst
  9047   000E00                     __psmallconst:
  9048                           	callstack 0
  9049   000E00  00                 	db	0
  9050   000E01  00                 	db	0	; dummy byte at the end
  9051   000000                     
  9052                           	psect	rparam
  9053   000000                     
  9054                           	psect	config
  9055                           
  9056                           ;Config register CONFIG1L @ 0x300000
  9057                           ;	External Oscillator mode Selection bits
  9058                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9059                           ;	Power-up default value for COSC bits
  9060                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9061   300000                     	org	3145728
  9062   300000  AA                 	db	170
  9063                           
  9064                           ;Config register CONFIG1H @ 0x300001
  9065                           ;	unspecified, using default values
  9066                           ;	Clock Out Enable bit
  9067                           ;	CLKOUTEN = 0x1, unprogrammed default
  9068                           ;	Clock Switch Enable bit
  9069                           ;	CSWEN = 0x1, unprogrammed default
  9070                           ;	Fail-Safe Clock Monitor Enable bit
  9071                           ;	FCMEN = 0x1, unprogrammed default
  9072   300001                     	org	3145729
  9073   300001  FF                 	db	255
  9074                           
  9075                           ;Config register CONFIG3L @ 0x300004
  9076                           ;	WDT Period Select bits
  9077                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9078                           ;	WDT operating mode
  9079                           ;	WDTE = OFF, WDT Disabled
  9080   300004                     	org	3145732
  9081   300004  9F                 	db	159
  9082                           
  9083                           ;Config register CONFIG3H @ 0x300005
  9084                           ;	unspecified, using default values
  9085                           ;	WDT Window Select bits
  9086                           ;	WDTCWS = 0x7, unprogrammed default
  9087                           ;	WDT input clock selector
  9088                           ;	WDTCCS = 0x7, unprogrammed default
  9089   300005                     	org	3145733
  9090   300005  FF                 	db	255
  9091                           tosu	equ	0xFFF
  9092                           tosh	equ	0xFFE
  9093                           tosl	equ	0xFFD
  9094                           stkptr	equ	0xFFC
  9095                           pclatu	equ	0xFFB
  9096                           pclath	equ	0xFFA
  9097                           pcl	equ	0xFF9
  9098                           tblptru	equ	0xFF8
  9099                           tblptrh	equ	0xFF7
  9100                           tblptrl	equ	0xFF6
  9101                           tablat	equ	0xFF5
  9102                           prodh	equ	0xFF4
  9103                           prodl	equ	0xFF3
  9104                           indf0	equ	0xFEF
  9105                           postinc0	equ	0xFEE
  9106                           postdec0	equ	0xFED
  9107                           preinc0	equ	0xFEC
  9108                           plusw0	equ	0xFEB
  9109                           fsr0h	equ	0xFEA
  9110                           fsr0l	equ	0xFE9
  9111                           wreg	equ	0xFE8
  9112                           indf1	equ	0xFE7
  9113                           postinc1	equ	0xFE6
  9114                           postdec1	equ	0xFE5
  9115                           preinc1	equ	0xFE4
  9116                           plusw1	equ	0xFE3
  9117                           fsr1h	equ	0xFE2
  9118                           fsr1l	equ	0xFE1
  9119                           bsr	equ	0xFE0
  9120                           indf2	equ	0xFDF
  9121                           postinc2	equ	0xFDE
  9122                           postdec2	equ	0xFDD
  9123                           preinc2	equ	0xFDC
  9124                           plusw2	equ	0xFDB
  9125                           fsr2h	equ	0xFDA
  9126                           fsr2l	equ	0xFD9
  9127                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    131     159
    BANK1           256      2     139
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    backward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    maze_search@c	PTR struct calibration_structure size(2) Largest target is 7
		 -> calibration(BANK1[7]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 


Critical Paths under _main in COMRAM

    _main->_maze_search
    _maze_search->_color_cardCheck
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    _main->_maze_search

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  107513
                    _initDCmotorsPWM
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          8     4      4  107319
                                             93 COMRAM     2     2      0
                                            127 BANK0      4     0      4
                                              0 BANK1      2     2      0
                            ___awdiv
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                           16    14      2   11345
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                            16    14      2    9545
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                             16    14      2   10445
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   57696
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          87    68     19   44962
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   15403
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     926
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     427
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4907
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3802
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1490
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3623
                                             33 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    9446
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _backward                                            16    14      2   11705
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    3081
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     472
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     481
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     754
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    3505
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initDCmotorsPWM
   _maze_search
     ___awdiv
     _backward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      8B       7       54.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     189      58        0.0%
DATA                 0      0     189       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 22:24:24 2024

                 _color_read_Red 4130                     ___fldiv@aexp 003A                     ___fldiv@bexp 0039  
                   ___fldiv@sign 0032                  _color_read_Blue 4220                               l31 4336  
                             l40 41CE                               l50 3BA8                               l34 4432  
                             l43 426E                               l60 19C6                               l37 417E  
                             l70 1AB8                               l62 1A20                               l46 421E  
                             l80 1E80                               l72 1AC8                               l64 1A30  
                             l74 1B22                               l58 19B6                               l76 1B32  
                             l87 1FFA                               l99 1830                     ___awdiv@sign 0006  
            ___wmul@multiplicand 0003                 _color_read_Clear 41D0                 _color_read_Green 4180  
                            l105 1838                              l300 3596                              l132 40D2  
                            l231 405C                              l136 412E                              l234 4388  
                            l402 43C6                              l411 445C                              l244 3A90  
                            l420 42F6                              l308 3642                              l237 439A  
                            l405 43EC                              l414 4448                              l280 393C  
                            l272 3890                              l408 4452                              l417 443E  
                            l266 34C4                              l258 3418                              l294 37C0  
                            l286 3714                              l562 250C                              l554 2508  
                            l399 43C4                              l828 3E76                              l597 4412  
                            l862 3D6C                              l856 3F20                              l867 3DB2  
                            l894 3CAE                              wreg 0FE8                     ___flmul@aexp 0048  
                   ___flmul@bexp 004D                     ___flmul@sign 0047                     ___flmul@temp 0052  
                   ___flmul@prod 004E                     ___fltol@exp1 000A                             l1211 2A92  
                           l1220 2D00                             l1221 2CEE                             l1125 26FC  
                           l1142 2816                             l1134 29CC                             l1126 26EA  
                           l1215 2DF6                             l1151 28E6                             l1127 26B0  
                           l1152 28D4                             l1218 2C88                             l1228 2DB8  
                           l1252 31E8                             l1181 2FF0                             l1190 3036  
                           l1095 40D0                             l1167 42B4                             l1255 3344  
                           l1088 40C8                             l1192 30AE                             l1184 2FB4  
                           l1193 309C                             l1266 32DC                             l1179 3190  
                           l1259 3280                             l5000 2AF2                             l5010 2B3C  
                           l5002 2AFE                             l5100 3F18                             l5020 2B8E  
                           l5012 2B48                             l5004 2B16                             l5102 3F1E  
                           l5030 2C0C                             l5022 2B9E                             l5014 2B58  
                           l5006 2B22                             l4150 40D4                             l4160 3FCA  
                           l5040 2C86                             l5032 2C42                             l5024 2BBA  
                           l5016 2B64                             l5008 2B2E                             l5120 3C14  
                           l5112 3BD4                             l5200 4436                             l4152 40EC  
                           l6000 3F60                             l4170 4032                             l4162 3FDA  
                           l5050 2CE6                             l5042 2C98                             l5034 2C50  
                           l5026 2BC6                             l5018 2B74                             l5130 3C44  
                           l5122 3C22                             l5114 3BFE                             l5106 3BAA  
                           l5210 4458                             l5202 443A                             l4154 4106  
                           l6010 3F7C                             l6002 3F68                             l4180 404C  
                           l4172 4034                             l4164 4000                             l5060 2D54  
                           l5044 2CA6                             l5036 2C6E                             l5028 2BE2  
                           l5140 3C6E                             l5132 3C4E                             l5116 3C00  
                           l5108 3BC0                             l5220 42F2                             l5212 42B8  
                           l5204 4440                             l5300 43B2                             l4156 4114  
                           l6020 3F88                             l6012 3F7E                             l6004 3F70  
                           l4182 4056                             l4174 403E                             l4166 4004  
                           l5070 2DBC                             l5054 2D10                             l5062 2D58  
                           l5046 2CAA                             l5038 2C78                             l5142 3C7E  
                           l5118 3C10                             l5150 3194                             l5222 42F4  
                           l5214 42BC                             l5206 4444                             l5310 4180  
                           l5302 4416                             l4158 412C                             l6030 3F9C  
                           l6022 3F8A                             l6014 3F80                             l6006 3F78  
                           l4184 4058                             l4176 4040                             l4168 4028  
                           l5240 43EE                             l5400 39B8                             l5080 2DE6  
                           l5072 2DCC                             l5064 2D72                             l5056 2D1C  
                           l5048 2CB8                             l5144 3C8E                             l5128 3C3A  
                           l5152 31A4                             l5232 3AD8                             l5216 42C4  
                           l5208 4454                             l5312 41C6                             l5304 4130  
                           l6032 3FA0                             l6024 3F90                             l6016 3F82  
                           l6008 3F7A                             l4186 405A                             l4178 404A  
                           l5410 3DB4                             l5242 440A                             l5402 39BC  
                           l5250 3CEE                             l5090 3E78                             l5074 2DDA  
                           l5066 2D86                             l5058 2D2A                             l4610 250E  
                           l5146 3C9E                             l5138 3C62                             l5170 326A  
                           l5162 3222                             l5154 31B2                             l5234 3B28  
                           l5226 3A92                             l5330 1970                             l5218 42CC  
                           l5322 41D0                             l5306 4176                             l6034 3FA4  
                           l6026 3F94                             l6018 3F86                             l5420 3DE0  
                           l5412 3DB8                             l5404 39FA                             l5260 3D5A  
                           l5252 3D1C                             l5092 3EA6                             l5076 2DDC  
                           l5068 2DA0                             l4700 26CA                             l4620 254A  
                           l4612 251A                             l5084 4270                             l5180 32EA  
                           l5172 3276                             l5164 322A                             l5156 31F8  
                           l5236 3B98                             l5228 3AC4                             l5340 1A72  
                           l5332 19A2                             l5316 4220                             l5324 4216  
                           l5500 1094                             l6036 3FA8                             l6028 3F98  
                           l5430 3E0E                             l5422 3DE8                             l5414 3DC6  
                           l5270 4066                             l5406 3A14                             l5262 3DAA  
                           l5254 3D2C                             l5246 3CB0                             l5094 3EB6  
                           l5078 2DE2                             l4710 270A                             l4702 26CE  
                           l4630 257A                             l4622 255A                             l4614 2528  
                           l5086 4280                             l5190 3332                             l5182 32EC  
                           l5174 32B2                             l5166 3236                             l5158 320E  
                           l5350 1BA8                             l5342 1AA4                             l5334 19DA  
                           l5318 4266                             l5502 10C6                             l5510 116A  
                           l6038 3FAC                             l5440 3E48                             l5432 3E16  
                           l5424 3DEC                             l5416 3DCE                             l5280 409C  
                           l5272 4078                             l5408 3A54                             l5264 3DB0  
                           l5256 3D3A                             l5248 3CDE                             l5096 3EE4  
                           l4800 29A4                             l4720 274C                             l4712 271A  
                           l4704 26DC                             l4640 25A4                             l4632 258C  
                           l4624 255C                             l4616 252A                             l5192 3334  
                           l5184 32F0                             l5176 32BE                             l5168 3268  
                           l5360 1CB4                             l5352 1BBE                             l5344 1ADC  
                           l5336 1A0C                             l5328 183A                             l5520 1240  
                           l5512 119C                             l5504 10F8                             l5600 3506  
                           l5450 3E6E                             l5442 3E4A                             l5434 3E24  
                           l5426 3DF4                             l5418 3DD2                             l5282 40B2  
                           l5274 4080                             l5258 3D4C                             l5098 3EF4  
                           l4802 29A6                             l4730 277A                             l4722 275A  
                           l4706 26DE                             l4642 25B4                             l4650 25DE  
                           l4634 258E                             l4618 253A                             l4626 2564  
                           l5186 3314                             l5178 32CC                             l5370 1E24  
                           l5362 1CE6                             l5354 1BF0                             l5346 1B0E  
                           l5338 1A40                             l5530 133A                             l5522 1272  
                           l5514 11CE                             l5506 112A                             l5290 439C  
                           l5610 3556                             l5602 3512                             l5444 3E50  
                           l5436 3E2A                             l5428 3E06                             l5284 40BA  
                           l5276 4088                             l5268 405E                             l4900 3000  
                           l4820 2E12                             l4804 29AC                             l4740 27E6  
                           l4732 2784                             l4724 2766                             l4716 272E  
                           l4708 26E8                             l4660 2616                             l4652 25EE  
                           l4644 25C4                             l4636 2594                             l4628 2574  
                           l5188 3324                             l5380 1F0E                             l5364 1D3E  
                           l5356 1C48                             l5372 1E80                             l5348 1B42  
                           l4812 43C6                             l5196 444A                             l5540 1410  
                           l5524 12A4                             l5532 1348                             l5516 1200  
                           l5508 115C                             l5292 43A6                             l5460 4316  
                           l5700 33CC                             l5620 35BE                             l5604 353A  
                           l5612 355A                             l5438 3E40                             l5446 3E56  
                           l5390 4372                             l5286 40BC                             l5278 4096  
                           l4902 3016                             l4910 3046                             l4830 2E46  
                           l4822 2E14                             l4806 29BA                             l4742 27F6  
                           l4726 276A                             l4718 273E                             l4734 278A  
                           l4670 262A                             l4662 261A                             l4654 2600  
                           l4646 25D4                             l4638 25A2                             l5382 1F2A  
                           l5374 1E90                             l5366 1D9A                             l5358 1C7C  
                           l4814 43D6                             l5198 444E                             l5550 14E6  
                           l5542 1442                             l5534 137A                             l5526 12D6  
                           l5518 120E                             l5294 43AC                             l5470 4330  
                           l5462 4320                             l5454 42F8                             l5710 3414  
                           l5702 33D8                             l5630 3602                             l5622 35D4  
                           l5614 3578                             l5606 3542                             l5448 3E66  
                           l5392 4382                             l5288 40C2                             l4912 3054  
                           l4904 301C                             l4840 2E78                             l4824 2E24  
                           l4832 2E4E                             l4816 2DF8                             l4808 29BC  
                           l4760 2878                             l4752 2850                             l4736 27B0  
                           l4744 2806                             l4728 2778                             l4680 263E  
                           l4672 262E                             l4664 261E                             l4656 260E  
                           l4648 25D6                             l5384 1F8A                             l5376 1EC4  
                           l5368 1DCC                             l5552 1518                             l5560 15BC  
                           l5544 1474                             l5536 13AC                             l5528 1308  
                           l5480 0EEC                             l5296 43AE                             l5472 4332  
                           l5464 432A                             l5456 42FC                             l5720 347C  
                           l5712 3440                             l5704 33DC                             l5640 3660  
                           l5632 360A                             l5624 35DC                             l5616 3584  
                           l5608 354A                             l5800 2076                             l5394 393E  
                           l5730 37C4                             l4922 30BE                             l4930 3106  
                           l4914 3058                             l4906 3026                             l4850 2EAC  
                           l4842 2E7A                             l4834 2E5E                             l4826 2E34  
                           l4818 2E04                             l4762 2880                             l4754 285A  
                           l4746 282C                             l4738 27E4                             l4770 28A4  
                           l4690 2652                             l4682 2642                             l4674 2632  
                           l4666 2622                             l4658 2612                             l5386 1FBE  
                           l5378 1EDC                             l5570 16B6                             l5562 15EE  
                           l5554 154A                             l5538 13DE                             l5546 1482  
                           l5490 0FBE                             l5482 0EF6                             l5298 43B0  
                           l5474 4334                             l5466 432C                             l5458 4306  
                           l5722 3484                             l5714 3456                             l5706 33FA  
                           l5650 36B8                             l5642 3668                             l5626 35F2  
                           l5634 3616                             l5618 3592                             l5810 20C4  
                           l5802 2078                             l5388 436E                             l5396 3958  
                           l5740 380C                             l5732 37DC                             l4940 3170  
                           l4932 3120                             l4924 30CA                             l4916 3066  
                           l4908 3034                             l4860 2EF2                             l4844 2E8A  
                           l4852 2EB4                             l4836 2E64                             l4828 2E44  
                           l4780 28F6                             l4772 28A8                             l4764 2884  
                           l4756 2868                             l4748 283C                             l4692 267C  
                           l4684 2646                             l4676 2636                             l4668 2626  
                           l5580 178C                             l5572 16E8                             l5564 1620  
                           l5556 157C                             l5548 14B4                             l5492 0FF0  
                           l5484 0F28                             l5476 0E02                             l5468 432E  
                           l5724 348C                             l5716 345E                             l5708 3406  
                           l5660 36F6                             l5652 36C0                             l5644 3668  
                           l5636 362C                             l5628 35FA                             l5900 2494  
                           l5820 2118                             l5812 20D2                             l5804 208A  
                           l5398 39A6                             l5742 3834                             l5750 3854  
                           l5734 37E4                             l4942 317E                             l4934 3136  
                           l4926 30D8                             l4918 3094                             l4870 2F1A  
                           l4862 2EF6                             l4854 2EC4                             l4846 2E9A  
                           l4838 2E6A                             l4790 295C                             l4782 2902  
                           l4774 28B6                             l4766 2894                             l4758 286A  
                           l4694 2698                             l4686 264A                             l4678 263A  
                           l5582 17BE                             l5566 1652                             l5574 16F6  
                           l5558 15AE                             l5494 1022                             l5486 0F5A  
                           l5478 0E9A                             l5718 3474                             l5726 3498  
                           l5670 375A                             l5662 3702                             l5654 36C8  
                           l5646 3684                             l5638 3646                             l5902 24B0  
                           l5830 2192                             l5822 2140                             l5806 209A  
                           l5814 20F2                             l5760 38CE                             l5752 3872  
                           l5744 383C                             l5736 37E4                             l4944 3184  
                           l4936 3150                             l4928 3102                             l4880 2F68  
                           l4856 2EDA                             l4848 2EAA                             l4960 29EA  
                           l4792 296C                             l4784 2910                             l4776 28CC  
                           l4768 2896                             l4696 26A8                             l4688 264E  
                           l5584 17F0                             l5576 1728                             l5568 1684  
                           l5488 0F8C                             l5496 1030                             l5728 34AE  
                           l5672 3770                             l5680 3794                             l5664 3710  
                           l5656 36D4                             l5648 3690                             l5592 34C8  
                           l5904 24F6                             l5832 2194                             l5840 2206  
                           l5824 214E                             l5816 2106                             l5808 209C  
                           l5770 3904                             l5762 38D6                             l5754 387E  
                           l5746 3844                             l5738 3800                             l4946 3186  
                           l4938 316C                             l4890 2FB2                             l4882 2F78  
                           l4874 2F2E                             l4858 2EEA                             l4866 2F0A  
                           l4970 2A30                             l4962 29FA                             l4954 29CE  
                           l4794 298C                             l4786 294A                             l4698 26BE  
                           l5586 1822                             l5578 175A                             l5498 1062  
                           l5690 336C                             l5682 37AA                             l5674 3778  
                           l5666 373C                             l5658 36D8                             l5594 34E2  
                           l5850 2262                             l5842 221A                             l5834 21BC  
                           l5818 2116                             l5826 216E                             l5764 38EC  
                           l5772 3910                             l5756 388C                             l5748 3850  
                           l4892 2FBE                             l4884 2F80                             l4876 2F48  
                           l4868 2F1A                             l4980 2A5C                             l4972 2A36  
                           l4964 2A0A                             l4956 29DA                             l4796 2990  
                           l4788 294C                             l5588 1830                             l5692 3388  
                           l5684 3348                             l5676 3780                             l5668 3752  
                           l5596 34EA                             l5860 22C4                             l5852 227E  
                           l5844 222A                             l5836 21CA                             l5828 2182  
                           l5780 2018                             l5774 3926                             l5766 38F4  
                           l5758 38B8                             l4894 2FDC                             l4886 2F90  
                           l4878 2F58                             l4990 2AB2                             l4982 2A6C  
                           l4974 2A3C                             l4966 2A1A                             l4958 29E8  
                           l4798 299E                             l5694 3394                             l5686 3364  
                           l5678 3788                             l5598 34EA                             l5870 234A  
                           l5862 22EC                             l5846 222C                             l5854 229E  
                           l5838 21E6                             l5790 2048                             l5782 201A  
                           l5768 38FC                             l4896 2FDE                             l4888 2FA4  
                           l4984 2A7C                             l4976 2A4A                             l4968 2A20  
                           l5696 33BC                             l5688 336C                             l5872 235A  
                           l5880 23B2                             l5864 22FA                             l5856 22B2  
                           l5848 2254                             l5792 204A                             l5784 201C  
                           l5776 1FFC                             l4898 2FEE                             l4994 2AC6  
                           l4986 2A82                             l4978 2A4C                             l5698 33C4  
                           l5890 240E                             l5882 23C6                             l5874 235C  
                           l5866 2316                             l5858 22C2                             l5794 204C  
                           l5786 2038                             l5778 2000                             l4996 2AD2  
                           l4988 2AA2                             l5884 23D6                             l5892 242E  
                           l5876 2384                             l5868 2336                             l5796 2060  
                           l5788 203C                             l5980 3F22                             l4998 2ADC  
                           l5894 2442                             l5886 23D8                             l5878 2392  
                           l5798 2072                             l5990 3F44                             l5982 3F2E  
                           l5896 246A                             l5888 2400                             l5992 3F4C  
                           l5984 3F34                             l5898 2478                             l5994 3F54  
                           l5986 3F38                             l5978 3F22                             l5996 3F58  
                           l5988 3F3C                             l5998 3F5C                     _BAUD4CONbits 0EE9  
                           u5000 2528                             u5001 2524                             u5010 253A  
                           _T2PR 0FBC                             u5011 2536                             u5100 2694  
                           u5020 254A                             u5101 268E                             u5021 2546  
                           u5110 2696                             u5030 258C                             u5031 2588  
                           u5200 27B0                             u5120 26BE                             u5040 25A2  
                           u6000 32EA                             u5201 27AC                             u5121 26BA  
                           u5041 259E                             u6001 32E6                             u5210 27F6  
                           u5130 26DC                             u5050 25B4                             u6010 3324  
                           u5211 27F2                             u5131 26D8                             u5051 25B0  
                           u6011 3320                             u6100 3DAA                             u5300 28E2  
                           u5220 282C                             u5140 26FC                             u5060 25C4  
                           u6020 3332                             u6101 3DA6                             u5301 28DE  
                           u5221 2828                             u5141 26F8                             u5061 25C0  
                           u6021 332E                             u6110 4078                             u5310 28F6  
                           u5230 283C                             u5150 270A                             u5070 2600  
                           u6030 42E0                             u6111 4074                             u5311 28F2  
                           u5231 2838                             u5151 2706                             u5071 25FC  
                           u6031 42D8                             u6120 4096                             u7000 38CE  
                           u5320 2910                             u5240 2868                             u5160 271A  
                           u5080 260E                             u6200 1BA8                             u5400 43EC  
                           u4600 4114                             u6121 4092                             u7001 38CA  
                           u5321 290C                             u5241 2864                             u5161 2716  
                           u5081 260A                             u6201 1BA4                             u5401 43E8  
                           u4601 4110                             u6130 40B2                             u7010 38EC  
                           u5410 2E12                             u5330 294A                             u5250 2878  
                           u5170 274C                             u5090 267C                             u6050 3AC4  
                           u6210 1BF0                             u6131 40AE                             u7011 38E8  
                           u5411 2E0E                             u5331 2946                             u5251 2874  
                           u5171 2748                             u5091 2678                             u6051 3AC0  
                           u6211 1BEC                             u6300 3DE0                             u7020 3926  
                           u6060 3CDE                             u5500 2FB2                             u5420 2E24  
                           u5340 295C                             u5260 2894                             u5180 275A  
                           u6220 1CE6                             u6140 1970                             u7100 234A  
                           u6301 3DDC                             u7021 3922                             u6061 3CDA  
                           u5501 2FAE                             u5421 2E20                             u5341 2958  
                           u5261 2890                             u5181 2756                             u6221 1CE2  
                           u6141 196C                             u7101 2346                             u6310 3E06  
                           u7030 393C                             u6070 3D1C                             u5510 2FDC  
                           u5430 2E34                             u5350 296C                             u5270 28A4  
                           u5190 2778                             u6230 1DCC                             u6150 19A2  
                           u7110 23C6                             u6311 3E02                             u7031 3938  
                           u6071 3D18                             u5511 2FD8                             u5431 2E30  
                           u5351 2968                             u5271 28A0                             u5191 2774  
                           u6231 1DC8                             u6151 199E                             u7111 23C2  
                           u6320 3E24                             u6080 3D3A                             u5600 30D8  
                           u5520 3000                             u5440 2E78                             u5360 298C  
                           u5280 28B6                             u6240 1E90                             u6160 1A0C  
                           u6048 42E2                             u6400 1022                             u7120 2442  
                           u7040 2060                             u6321 3E20                             u6081 3D36  
                           u5601 30D4                             u5521 2FFC                             u5441 2E74  
                           u5361 2988                             u5281 28B2                             u6241 1E8C  
                           u6161 1A08                             u6401 101E                             u7121 243E  
                           u7041 205C                             u6330 3E40                             u6090 3D5A  
                           u5610 3120                             u5530 3016                             u5450 2E8A  
                           u5370 299E                             u5290 28CC                             u6250 1F0E  
                           u6170 1A72                             u6410 1062                             u7050 208A  
                           u6331 3E3C                             u6091 3D56                             u5611 311C  
                           u5531 3012                             u5451 2E86                             u5371 299A  
                           u5291 28C8                             u6251 1F0A                             u6171 1A6E  
                           u6411 105E                             u7051 2086                             u6340 3E66  
                           u6260 439A                             u5620 3150                             u5540 3034  
                           u5460 2E9A                             u5700 2AA2                             u5380 29BA  
                           u6180 1AA4                             u6500 1240                             u6420 1094  
                           u7060 2106                             u6341 3E62                             u6261 4396  
                           u5621 314C                             u5541 3030                             u5461 2E96  
                           u5701 2A9E                             u5381 29B6                             u6181 1AA0  
                           u6501 123C                             u6421 1090                             u7061 2102  
                           u6270 3958                             u5630 317E                             u5550 3054  
                           u5470 2EDA                             u5710 2AB2                             u6190 1B0E  
                           u5390 43D6                             u6510 1272                             u6430 10C6  
                           u6350 0F28                             u7070 2182                             u6271 3954  
                           u5631 317A                             u5551 3050                             u5471 2ED6  
                           u5711 2AAE                             u6191 1B0A                             u5391 43D2  
                           u6511 126E                             u6431 10C2                             u6351 0F24  
                           u7071 217E                             u6280 3A14                             u5560 3066  
                           u5480 2F1A                             u5800 2D72                             u5720 2C2C  
                           u5640 29E8                             u6600 1442                             u6520 12A4  
                           u6440 10F8                             u6360 0F5A                             u7080 221A  
                           u6281 3A10                             u5561 3062                             u5481 2F16  
                           u5801 2D6E                             u5641 29E4                             u6601 143E  
                           u6521 12A0                             u6441 10F4                             u6361 0F56  
                           u7081 2216                             u6290 3DC6                             u5570 3094  
                           u5490 2F90                             u5810 2DA0                             u5730 2C86  
                           u5650 29FA                             u6610 1474                             u6530 12D6  
                           u6450 112A                             u6370 0F8C                             u7090 22B2  
                           u6291 3DC2                             u5571 3090                             u5491 2F8C  
                           u5811 2D9C                             u5731 2C82                             u5651 29F6  
                           u6611 1470                             u6531 12D2                             u6451 1126  
                           u6371 0F88                             u7091 22AE                             u5580 30AA  
                           u5820 2DDA                             u5740 2CA6                             u5660 2A0A  
                           u5900 3C5E                             u6700 1652                             u6620 14B4  
                           u6540 1308                             u6460 115C                             u6380 0FBE  
                           u5581 30A6                             u5821 2DD6                             u5741 2CA2  
                           u5725 2C22                             u5661 2A06                             u5901 3C5A  
                           u6701 164E                             u6621 14B0                             u6541 1304  
                           u6461 1158                             u6381 0FBA                             u5590 30BE  
                           u5830 3EA6                             u5750 2CB8                             u5670 2A4A  
                           u5910 3C7E                             u6710 1684                             u6630 14E6  
                           u6550 133A                             u6470 119C                             u6390 0FF0  
                           u5591 30BA                             u5831 3EA2                             u5751 2CB4  
                           u5671 2A46                             u5911 3C7A                             u6711 1680  
                           u6631 14E2                             u6551 1336                             u6471 1198  
                           u6391 0FEC                             u7407 358A                             u5840 3EE4  
                           u5760 2CE6                             u5680 2A5C                             u5920 3C8E  
                           u6720 16B6                             u6640 1518                             u6560 137A  
                           u6480 11CE                             u6800 3578                             u5841 3EE0  
                           u5761 2CE2                             u5681 2A58                             u5921 3C8A  
                           u6721 16B2                             u6641 1514                             u6561 1376  
                           u6481 11CA                             u7417 3708                             u6801 3574  
                           u5850 3F18                             u5770 2CFC                             u5690 2A6C  
                           u5930 31A4                             u6730 16E8                             u6650 154A  
                           u6570 13AC                             u6490 1200                             u6810 35BA  
                           u5851 3F14                             u5771 2CF8                             u5691 2A68  
                           u5931 31A0                             u6731 16E4                             u6651 1546  
                           u6571 13A8                             u6491 11FC                             u7427 340C  
                           u6811 35B6                             u5780 2D10                             u5860 3BC0  
                           u5940 31B2                             u6740 1728                             u6660 157C  
                           u6580 13DE                             u6900 37AA                             u6820 35D4  
                           u5781 2D0C                             u5861 3BBC                             u5941 31AE  
                           u6741 1724                             u6661 1578                             u6581 13DA  
                           u7437 430C                             u6901 37A6                             u6821 35D0  
                           u5790 2D2A                             u5870 3BF4                             u5950 320E  
                           u6750 175A                             u6670 15AE                             u6590 1410  
                           u6910 37C0                             u6830 35F2                             u7447 3884  
                           u5791 2D26                             u5951 320A                             u6751 1756  
                           u6671 15AA                             u6591 140C                             u6911 37BC  
                           u6831 35EE                             u7367 40DE                             u5880 3C22  
                           u5960 3264                             u6760 178C                             u6680 15EE  
                           u6920 33FA                             u6840 362C                             u7457 4378  
                           u5881 3C1E                             u5961 3260                             u6761 1788  
                           u6681 15EA                             u6921 33F6                             u6841 3628  
                           u7377 40F8                             u5890 3C36                             u5970 32AE  
                           u6770 17BE                             u6690 1620                             u6930 343C  
                           u6850 3642                             u5891 3C32                             u5875 3BEA  
                           u5971 32AA                             u6771 17BA                             u6691 161C  
                           u6931 3438                             u6851 363E                             u7387 411E  
                           u5980 32CC                             u6780 17F0                             u6940 3456  
                           u6860 36F6                             u5981 32C8                             u6781 17EC  
                           u6941 3452                             u6861 36F2                             u7397 200A  
                           u5990 32DC                             u6790 1822                             u6950 3474  
                           u6870 3738                             u5991 32D8                             u6791 181E  
                           u6951 3470                             u6871 3734                             u6960 34AE  
                           u6880 3752                             u6961 34AA                             u6881 374E  
                           u6970 34C4                             u6890 3770                             u6971 34C0  
                           u6891 376C                             u6980 3872                             u6981 386E  
                           u6990 38B4                             u6991 38B0                             _main 3F22  
                           _temp 00FE                             fsr1h 0FE2                             fsr2h 0FDA  
                           indf1 0FE7                             indf2 0FDF                             fsr1l 0FE1  
                           fsr2l 0FD9                             prodh 0FF4                             prodl 0FF3  
                           start 0000                  ___fldiv@new_exp 0033           __end_of_color_read_Red 4180  
                   ___param_bank 0000          __end_of_color_cardCheck 183A                    ___fltol@sign1 0009  
                __end_of___fladd 29CE                            ?_main 0001                  __end_of___fldiv 3192  
                __end_of___awdiv 3E78                  __end_of___flmul 2DF8                  __end_of___flsub 42B6  
                __end_of___fltol 3CB0                  ___awdiv@divisor 0003                      ?_RGB_to_HSV 006A  
                __end_of___lwdiv 40D2                  ___awdiv@counter 0005                     ?_maze_search 00DF  
     __end_of_I2C_2_Master_Start 4454       __end_of_I2C_2_Master_Write 4440                  __end_of_forward 34C6  
                          tablat 0FF5                            status 0FD8          __end_of_color_read_Blue 4270  
          _I2C_2_Master_RepStart 4454                  ?_color_read_Red 0005                  __initialization 4338  
                   __end_of_main 3FCA                           ??_main 0060                    _Forward_Count 00E5  
                  __activetblptr 0000                     ?_setMotorPWM 000E                           _CCPR1H 0FAA  
                         _CCPR2H 0FA6                           _CCPR3H 0F25                           _CCPR4H 0F21  
               ___awdiv@dividend 0001                           _RC0PPS 0E62                           _RC4REG 0EE3  
                         _RE2PPS 0E74                           _RD5PPS 0E6F                           _RC7PPS 0E69  
                         _RD6PPS 0E70                           _RE4PPS 0E76                           _RG6PPS 0E88  
               __end_of_backward 393E         __end_of_color_click_init 4338                           _RX4PPS 0E15  
               forward@max_power 001D                           _TX4REG 0EE4                 __end_of___xxtofl 3346  
                   _CCPTMRS0bits 0FAD                      _Color_Value 00E3                           ___flge 3CB0  
                         ___fleq 3E78                 ?_color_cardCheck 005C                 __end_of_leftTURN 37C2  
                      ??___fladd 0009                           ___wmul 43EE                        ??___fldiv 002A  
                      ??___awdiv 0005                        ??___flmul 0043                        ??___flsub 0022  
                      ??___fltol 0005                        ??___lwdiv 000B    delay_ms_function@milliseconds 0001  
                         _length 00FD                           clear_0 4356                           clear_1 4362  
               ___awdiv@quotient 0007                           _motorL 00F4                           _motorR 00EB  
                         isa$std 0001                        ??_forward 0015    rightTURN@rotation_calibration 0018  
                   __mediumconst 0000                           tblptrh 0FF7                           tblptrl 0FF6  
                         tblptru 0FF8                  _Operation_Count 00E6                ??_initDCmotorsPWM 0003  
                     ___flge@ff1 0001                       ___flge@ff2 0005                     ___xxtofl@arg 0016  
                   ___xxtofl@exp 0015                     ___xxtofl@val 000C                       ___fleq@ff1 0001  
                     ___fleq@ff2 0005                       __accesstop 0060          __end_of__initialization 4368  
       __end_of_color_read_Clear 4220         __end_of_color_read_Green 41D0           ?_I2C_2_Master_RepStart 0001  
                  ___rparam_used 0001                       ___fltol@f1 0001                 ?_color_read_Blue 0005  
                 __pcstackCOMRAM 0001                     __pidataBANK0 445E                forward@delay_time 001F  
                 _RGB_to_HSV$321 009D                   _RGB_to_HSV$322 00A1                   _RGB_to_HSV$318 0091  
                 _RGB_to_HSV$319 0095               RGB_to_HSV@deltaRGB 00AD                       __pbssBANK0 00E3  
                     __pbssBANK1 0100                _color_writetoaddr 4414                     _T2CLKCONbits 0FBF  
                        ?___flge 0001                          ?___fleq 0001               ?_color_writetoaddr 0003  
                        ?___wmul 0001               backward@delay_time 001F              ??_color_writetoaddr 0004  
                      ?_backward 0013                     ??_RGB_to_HSV 005C                _delay_ms_function 436E  
                     backward@mL 0013                       backward@mR 0014                        ?___xxtofl 000C  
             ?_delay_ms_function 0001                          _SP4BRGH 0EE6                          _SP4BRGL 0EE5  
                        _SSP2ADD 0ED6                          _SSP2BUF 0ED5                      rightTURN@mL 0013  
                    rightTURN@mR 0014                        ?_leftTURN 0013              ??_delay_ms_function 0003  
         color_writetoaddr@value 0003                 ??_color_read_Red 0007        __end_of_color_writetoaddr 4434  
                    RGB_to_HSV@B 0072                      RGB_to_HSV@C 0076                      RGB_to_HSV@G 006E  
                    RGB_to_HSV@H 007A                      RGB_to_HSV@R 006A                      RGB_to_HSV@S 007B  
                    RGB_to_HSV@V 007C                      RGB_to_HSV@b 00BD                      RGB_to_HSV@g 00B9  
             _I2C_2_Master_Start 444A                      RGB_to_HSV@r 00B5               _I2C_2_Master_Write 4434  
                        __Hparam 0000               __end_of_RGB_to_HSV 1FFC                          __Lparam 0000  
              color_read_Red@tmp 000A                          ___fladd 250E                          ___fldiv 2DF8  
                        ___awdiv 3DB4                          ___flmul 29CE                          ___flsub 4270  
                        ___fltol 3BAA              ?_I2C_2_Master_Start 0001                          ___lwdiv 405E  
            ?_I2C_2_Master_Write 0001                     __psmallconst 0E00        __end_of_delay_ms_function 439C  
                        __pcinit 4338                          __ramtop 0E00                          __ptext0 3F22  
                        __ptext1 40D2                          __ptext2 1FFC                          __ptext3 34C6  
                        __ptext4 3644                          __ptext5 3346                          __ptext6 42F8  
                        __ptext7 4414                          __ptext8 439C                          __ptext9 0E02  
                     ??_backward 0015                        _T2CONbits 0FBD                          _forward 3346  
                     ??___xxtofl 0010                        _T2HLTbits 0FBE                    _RxBufWriteCnt 00EA  
           ??_I2C_2_Master_Start 0002             ??_I2C_2_Master_Write 0002                     maze_search@c 00DF  
           end_of_initialization 4368                       ??_leftTURN 0015                __end_of_rightTURN 3644  
               _maze_search$2703 018A                 _maze_search$2704 0189          _pause_until_RF2_pressed 40D2  
             leftTURN@delay_time 001F                ?_color_click_init 0001               ??_color_click_init 0005  
                        postdec2 0FDD                          postinc0 0FEE                          postinc2 0FDE  
                _initDCmotorsPWM 3FCA                        _PORTFbits 0F8E               setMotorPWM@negDuty 0012  
                    ___fladd@grs 0010                    ___xxtofl@sign 0014                        _TRISAbits 0F81  
             setMotorPWM@posDuty 0011                        _TRISCbits 0F83                        _TRISDbits 0F84  
                      _TRISEbits 0F85                        _TRISFbits 0F86                        _TRISGbits 0F87  
                      _TRISHbits 0F88                      ___fldiv@grs 0035                      ___fldiv@rem 002E  
       color_writetoaddr@address 0004          ??_I2C_2_Master_RepStart 0002                      ___flmul@grs 0049  
                    _CCP1CONbits 0FAB                ?_color_read_Clear 0005                     _EUSART4RXbuf 016E  
                   _EUSART4TXbuf 0100                      _CCP2CONbits 0FA7                ?_color_read_Green 0005  
                    _CCP3CONbits 0F26      forward@Distance_Calibration 0018                      _CCP4CONbits 0F22  
             ??_color_read_Clear 0007               ??_color_read_Green 0007               rightTURN@max_power 001D  
                     leftTURN@mL 0013                       leftTURN@mR 0014       __end_of_custom_floatmodulo 3BAA  
                 __end_of___flge 3DB4                   __end_of___fleq 3F22                   __end_of___wmul 4414  
      color_cardCheck@card_color 00D1                 RGB_to_HSV@H_temp 00A9              color_read_Clear@tmp 000A  
            start_initialization 4338                    _TxBufWriteCnt 00E8     leftTURN@rotation_calibration 0018  
               RGB_to_HSV@c_norm 007D        ??_pause_until_RF2_pressed 0001                 RGB_to_HSV@maxRGB 00B1  
               RGB_to_HSV@minRGB 0099                  _RGB_to_HSV$2700 0089                  _RGB_to_HSV$2701 00A5  
                _RGB_to_HSV$2702 008D                  _RGB_to_HSV$2698 0081                  _RGB_to_HSV$2699 0085  
            color_read_Green@tmp 000A          __end_of_initDCmotorsPWM 405E                         ??___flge 0009  
                       ??___fleq 0009                         ??___wmul 0005              custom_floatmodulo@x 0054  
            custom_floatmodulo@y 0058                      __pdataBANK0 00FD                      _calibration 0182  
                      ___fladd@a 0005                        ___fladd@b 0001                    ??_maze_search 005E  
   backward@Distance_Calibration 0018                        ___fldiv@a 0026                        ___fldiv@b 0022  
                      ___flmul@a 003F                        ___flmul@b 003B                        ___flsub@a 001E  
                      ___flsub@b 001A                    __pcstackBANK0 0060                    __pcstackBANK1 0189  
      custom_floatmodulo@intPart 0068                 ___lwdiv@dividend 0007  __end_of_pause_until_RF2_pressed 4130  
                       ?___fladd 0001                         ?___fldiv 0022                         ?___awdiv 0001  
                       ?___flmul 003B                         ?___flsub 001A                         ?___fltol 0001  
                       ?___lwdiv 0007                        backward@i 0019                        backward@j 001B  
                     rightTURN@i 0019                       rightTURN@j 001B             I2C_2_Master_Read@ack 0003  
           I2C_2_Master_Read@tmp 0004                      __smallconst 0E00                         ?_forward 0013  
              _I2C_2_Master_Idle 43C6                _I2C_2_Master_Init 439C                _I2C_2_Master_Read 42B6  
              _I2C_2_Master_Stop 4440                     _RxBufReadCnt 00E9               ?_I2C_2_Master_Idle 0001  
             ?_I2C_2_Master_Init 0001               ?_I2C_2_Master_Read 0001                    ??_setMotorPWM 000F  
             ?_I2C_2_Master_Stop 0001                 ___lwdiv@quotient 000C         initDCmotorsPWM@PWMperiod 0001  
              ??_color_cardCheck 005E              __end_of_maze_search 250E                backward@max_power 001D  
            ??_I2C_2_Master_Idle 0001              ??_I2C_2_Master_Init 0001              ??_I2C_2_Master_Read 0002  
                 ___wmul@product 0005                         _LATAbits 0F79              ??_I2C_2_Master_Stop 0002  
                       _LATCbits 0F7B                         _LATDbits 0F7C                         _LATEbits 0F7D  
                       _LATFbits 0F7E                         _LATGbits 0F7F                         _LATHbits 0F80  
                      _rightTURN 34C6                         _PIE4bits 0E2D                         _PIR4bits 0E37  
               ?_initDCmotorsPWM 0001                         _SSP2CON2 0EDA                         _SSP2STAT 0ED8  
      __end_of_I2C_2_Master_Idle 43EE        __end_of_I2C_2_Master_Init 43C6        __end_of_I2C_2_Master_Read 42F8  
              ___wmul@multiplier 0001        __end_of_I2C_2_Master_Stop 444A                     setMotorPWM@m 000E  
    I2C_2_Master_Write@data_byte 0002                ??_color_read_Blue 0007                leftTURN@max_power 001D  
                   _TxBufReadCnt 00E7                        leftTURN@i 0019                        leftTURN@j 001B  
  __end_of_I2C_2_Master_RepStart 445E               color_read_Blue@tmp 000A              __end_of_setMotorPWM 3A92  
                     ?_rightTURN 0013                         __Hrparam 0000                         __Lrparam 0000  
                      forward@mL 0013                        forward@mR 0014                         _backward 37C2  
                     _ANSELDbits 0EA7                       _ANSELFbits 0EB4                      _maze_search 1FFC  
                       ___xxtofl 3192               _custom_floatmodulo 3A92                  ___lwdiv@divisor 0009  
                ___lwdiv@counter 000B                         __ptext10 4130                         __ptext11 4180  
                       __ptext20 183A                         __ptext12 41D0                         __ptext21 3A92  
                       __ptext13 4220                         __ptext30 37C2                         __ptext22 3192  
                       __ptext14 4434                         __ptext31 393E                         __ptext23 3BAA  
                       __ptext15 4440                         __ptext32 43EE                         __ptext24 4270  
                       __ptext16 444A                         __ptext33 405E                         __ptext25 250E  
                       __ptext17 4454                         __ptext34 436E                         __ptext26 29CE  
                       __ptext18 42B6                         __ptext35 3DB4                         __ptext27 3E78  
                       __ptext19 43C6                         __ptext36 3FCA                         __ptext28 2DF8  
                       __ptext29 3CB0      custom_floatmodulo@remainder 0064                     _SSP2CON1bits 0ED9  
                   _SSP2CON2bits 0EDA                         _leftTURN 3644              ?_custom_floatmodulo 0054  
                       isa$xinst 0000                       _RC4STAbits 0EE7             ??_custom_floatmodulo 005C  
                  maze_search@mL 00E1                    maze_search@mR 00E2                         forward@i 0019  
                       forward@j 001B                      _setMotorPWM 393E                      ??_rightTURN 0015  
     custom_floatmodulo@quotient 0060                 _color_click_init 42F8                  _color_cardCheck 0E02  
                     _RGB_to_HSV 183A                _Operation_History 013C                       _SSP2DATPPS 0E1D  
                     _SSP2CLKPPS 0E1C         ?_pause_until_RF2_pressed 0001                 color_cardCheck@H 00D3  
               color_cardCheck@S 00D7                 color_cardCheck@V 00DB                 color_cardCheck@b 00C9  
               color_cardCheck@c 00CD                 color_cardCheck@g 00C5                 color_cardCheck@r 00C1  
                  ___fladd@signs 000D                       _TX4STAbits 0EE8              rightTURN@delay_time 001F  
                   ___fladd@aexp 000E                     ___fladd@bexp 000F  
