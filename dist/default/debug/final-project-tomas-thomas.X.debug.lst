

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 02:00:53 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 21/07/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97                           	psect	idataBANK0
    98   004880                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _temp
   102   004880  07                 	db	7
   103   000000                     _TX4REG	set	3812
   104   000000                     _RC4STAbits	set	3815
   105   000000                     _SP4BRGH	set	3814
   106   000000                     _LATEbits	set	3965
   107   000000                     _TRISEbits	set	3973
   108   000000                     _LATFbits	set	3966
   109   000000                     _LATGbits	set	3967
   110   000000                     _SSP2CON2bits	set	3802
   111   000000                     _RX4PPS	set	3605
   112   000000                     _SSP2CLKPPS	set	3612
   113   000000                     _SSP2DATPPS	set	3613
   114   000000                     _RC7PPS	set	3689
   115   000000                     _RE2PPS	set	3700
   116   000000                     _LATAbits	set	3961
   117   000000                     _LATDbits	set	3964
   118   000000                     _LATHbits	set	3968
   119   000000                     _PORTFbits	set	3982
   120   000000                     _CCPR2H	set	4006
   121   000000                     _CCPR1H	set	4010
   122   000000                     _T2PR	set	4028
   123   000000                     _T2CONbits	set	4029
   124   000000                     _TRISCbits	set	3971
   125   000000                     _TRISDbits	set	3972
   126   000000                     _TRISFbits	set	3974
   127   000000                     _TRISAbits	set	3969
   128   000000                     _TRISGbits	set	3975
   129   000000                     _TRISHbits	set	3976
   130   000000                     _LATCbits	set	3963
   131   000000                     _RE4PPS	set	3702
   132   000000                     _RG6PPS	set	3720
   133   000000                     _RD5PPS	set	3695
   134   000000                     _ANSELDbits	set	3751
   135   000000                     _SSP2ADD	set	3798
   136   000000                     _SSP2CON1bits	set	3801
   137   000000                     _CCPR4H	set	3873
   138   000000                     _CCPR3H	set	3877
   139   000000                     _T2CLKCONbits	set	4031
   140   000000                     _T2HLTbits	set	4030
   141   000000                     _CCP1CONbits	set	4011
   142   000000                     _CCPTMRS0bits	set	4013
   143   000000                     _CCP2CONbits	set	4007
   144   000000                     _CCP3CONbits	set	3878
   145   000000                     _CCP4CONbits	set	3874
   146   000000                     _RC4REG	set	3811
   147   000000                     _SP4BRGL	set	3813
   148   000000                     _TX4STAbits	set	3816
   149   000000                     _BAUD4CONbits	set	3817
   150   000000                     _SSP2CON2	set	3802
   151   000000                     _SSP2STAT	set	3800
   152   000000                     _SSP2BUF	set	3797
   153   000000                     _PIE4bits	set	3629
   154   000000                     _PIR4bits	set	3639
   155   000000                     _RC0PPS	set	3682
   156   000000                     _RD6PPS	set	3696
   157                           
   158                           	psect	smallconst
   159   000E00                     __psmallconst:
   160                           	callstack 0
   161   000E00  00                 	db	0
   162   000E01                     STR_1:
   163   000E01  72                 	db	114	;'r'
   164   000E02  3A                 	db	58	;':'
   165   000E03  25                 	db	37
   166   000E04  2E                 	db	46
   167   000E05  32                 	db	50	;'2'
   168   000E06  66                 	db	102	;'f'
   169   000E07  20                 	db	32
   170   000E08  67                 	db	103	;'g'
   171   000E09  3A                 	db	58	;':'
   172   000E0A  20                 	db	32
   173   000E0B  25                 	db	37
   174   000E0C  2E                 	db	46
   175   000E0D  32                 	db	50	;'2'
   176   000E0E  66                 	db	102	;'f'
   177   000E0F  20                 	db	32
   178   000E10  62                 	db	98	;'b'
   179   000E11  3A                 	db	58	;':'
   180   000E12  20                 	db	32
   181   000E13  25                 	db	37
   182   000E14  2E                 	db	46
   183   000E15  32                 	db	50	;'2'
   184   000E16  66                 	db	102	;'f'
   185   000E17  20                 	db	32
   186   000E18  63                 	db	99	;'c'
   187   000E19  3A                 	db	58	;':'
   188   000E1A  25                 	db	37
   189   000E1B  2E                 	db	46
   190   000E1C  32                 	db	50	;'2'
   191   000E1D  66                 	db	102	;'f'
   192   000E1E  00                 	db	0
   193   000E1F                     STR_2:
   194   000E1F  69                 	db	105	;'i'
   195   000E20  6E                 	db	110	;'n'
   196   000E21  66                 	db	102	;'f'
   197   000E22  00                 	db	0
   198   000E23                     STR_5:
   199   000E23  6E                 	db	110	;'n'
   200   000E24  61                 	db	97	;'a'
   201   000E25  6E                 	db	110	;'n'
   202   000E26  00                 	db	0
   203   000E27  00                 	db	0	; dummy byte at the end
   204   000000                     
   205                           ; #config settings
   206                           
   207                           	psect	cinit
   208   0046F4                     __pcinit:
   209                           	callstack 0
   210   0046F4                     start_initialization:
   211                           	callstack 0
   212   0046F4                     __initialization:
   213                           	callstack 0
   214                           
   215                           ; Initialize objects allocated to BANK0 (1 bytes)
   216                           ; load TBLPTR registers with __pidataBANK0
   217   0046F4  0E80               	movlw	low __pidataBANK0
   218   0046F6  6EF6               	movwf	tblptrl,c
   219   0046F8  0E48               	movlw	high __pidataBANK0
   220   0046FA  6EF7               	movwf	tblptrh,c
   221   0046FC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   222   0046FE  6EF8               	movwf	tblptru,c
   223   004700  0009               	tblrd		*+	;fetch initializer
   224   004702  CFF5 F0FF          	movff	tablat,__pdataBANK0
   225                           
   226                           ; Clear objects allocated to BANK2 (60 bytes)
   227   004706  EE02  F000         	lfsr	0,__pbssBANK2
   228   00470A  0E3C               	movlw	60
   229   00470C                     clear_0:
   230   00470C  6AEE               	clrf	postinc0,c
   231   00470E  06E8               	decf	wreg,f,c
   232   004710  E1FD               	bnz	clear_0
   233                           
   234                           ; Clear objects allocated to BANK1 (137 bytes)
   235   004712  EE01  F000         	lfsr	0,__pbssBANK1
   236   004716  0E89               	movlw	137
   237   004718                     clear_1:
   238   004718  6AEE               	clrf	postinc0,c
   239   00471A  06E8               	decf	wreg,f,c
   240   00471C  E1FD               	bnz	clear_1
   241                           
   242                           ; Clear objects allocated to BANK0 (7 bytes)
   243   00471E  EE00  F0F8         	lfsr	0,__pbssBANK0
   244   004722  0E07               	movlw	7
   245   004724                     clear_2:
   246   004724  6AEE               	clrf	postinc0,c
   247   004726  06E8               	decf	wreg,f,c
   248   004728  E1FD               	bnz	clear_2
   249   00472A                     end_of_initialization:
   250                           	callstack 0
   251   00472A                     __end_of__initialization:
   252                           	callstack 0
   253   00472A  0100               	movlb	0
   254   00472C  EF24  F024         	goto	_main	;jump to C main() function
   255                           
   256                           	psect	bssBANK0
   257   0000F8                     __pbssBANK0:
   258                           	callstack 0
   259   0000F8                     _prec:
   260                           	callstack 0
   261   0000F8                     	ds	2
   262   0000FA                     _flags:
   263                           	callstack 0
   264   0000FA                     	ds	1
   265   0000FB                     _TxBufReadCnt:
   266                           	callstack 0
   267   0000FB                     	ds	1
   268   0000FC                     _TxBufWriteCnt:
   269                           	callstack 0
   270   0000FC                     	ds	1
   271   0000FD                     _RxBufReadCnt:
   272                           	callstack 0
   273   0000FD                     	ds	1
   274   0000FE                     _RxBufWriteCnt:
   275                           	callstack 0
   276   0000FE                     	ds	1
   277                           
   278                           	psect	dataBANK0
   279   0000FF                     __pdataBANK0:
   280                           	callstack 0
   281   0000FF                     _temp:
   282                           	callstack 0
   283   0000FF                     	ds	1
   284                           
   285                           	psect	bssBANK1
   286   000100                     __pbssBANK1:
   287                           	callstack 0
   288   000100                     _EUSART4RXbuf:
   289                           	callstack 0
   290   000100                     	ds	20
   291   000114                     _motorR:
   292                           	callstack 0
   293   000114                     	ds	9
   294   00011D                     _motorL:
   295                           	callstack 0
   296   00011D                     	ds	9
   297   000126                     _calibration:
   298                           	callstack 0
   299   000126                     	ds	9
   300   00012F                     floorf@F521:
   301                           	callstack 0
   302   00012F                     	ds	4
   303   000133                     ___fpclassifyf@F465:
   304                           	callstack 0
   305   000133                     	ds	4
   306   000137                     _width:
   307                           	callstack 0
   308   000137                     	ds	2
   309   000139                     _dbuf:
   310                           	callstack 0
   311   000139                     	ds	80
   312                           
   313                           	psect	bssBANK2
   314   000200                     __pbssBANK2:
   315                           	callstack 0
   316   000200                     _EUSART4TXbuf:
   317                           	callstack 0
   318   000200                     	ds	60
   319                           
   320                           	psect	cstackBANK1
   321   000189                     __pcstackBANK1:
   322                           	callstack 0
   323   000189                     RGB_to_HSV@senddata:
   324                           	callstack 0
   325                           
   326                           ; 25 bytes @ 0x0
   327   000189                     	ds	25
   328   0001A2                     RGB_to_HSV@c:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x19
   332   0001A2                     	ds	4
   333   0001A6                     RGB_to_HSV@c_norm:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x1D
   337   0001A6                     	ds	4
   338   0001AA                     _RGB_to_HSV$2734:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x21
   342   0001AA                     	ds	4
   343   0001AE                     _RGB_to_HSV$2735:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x25
   347   0001AE                     	ds	4
   348   0001B2                     _RGB_to_HSV$2736:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x29
   352   0001B2                     	ds	4
   353   0001B6                     _RGB_to_HSV$2738:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x2D
   357   0001B6                     	ds	4
   358   0001BA                     _RGB_to_HSV$626:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x31
   362   0001BA                     	ds	4
   363   0001BE                     _RGB_to_HSV$627:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x35
   367   0001BE                     	ds	4
   368   0001C2                     RGB_to_HSV@minRGB:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x39
   372   0001C2                     	ds	4
   373   0001C6                     _RGB_to_HSV$629:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x3D
   377   0001C6                     	ds	4
   378   0001CA                     _RGB_to_HSV$630:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x41
   382   0001CA                     	ds	4
   383   0001CE                     _RGB_to_HSV$2737:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x45
   387   0001CE                     	ds	4
   388   0001D2                     RGB_to_HSV@H_temp:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x49
   392   0001D2                     	ds	4
   393   0001D6                     RGB_to_HSV@deltaRGB:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x4D
   397   0001D6                     	ds	4
   398   0001DA                     RGB_to_HSV@maxRGB:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x51
   402   0001DA                     	ds	4
   403   0001DE                     RGB_to_HSV@r:
   404                           	callstack 0
   405                           
   406                           ; 4 bytes @ 0x55
   407   0001DE                     	ds	4
   408   0001E2                     RGB_to_HSV@g:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x59
   412   0001E2                     	ds	4
   413   0001E6                     RGB_to_HSV@b:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x5D
   417   0001E6                     	ds	4
   418                           
   419                           	psect	cstackBANK0
   420   000060                     __pcstackBANK0:
   421                           	callstack 0
   422   000060                     efgtoa@fp:
   423                           	callstack 0
   424   000060                     custom_floatmodulo@quotient:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x0
   428   000060                     	ds	1
   429   000061                     efgtoa@f:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x1
   433   000061                     	ds	3
   434   000064                     custom_floatmodulo@remainder:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x4
   438   000064                     	ds	1
   439   000065                     efgtoa@c:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x5
   443   000065                     	ds	1
   444   000066                     ??_efgtoa:
   445                           
   446                           ; 1 bytes @ 0x6
   447   000066                     	ds	2
   448   000068                     custom_floatmodulo@intPart:
   449                           	callstack 0
   450   000068                     efgtoa@ne:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x8
   454   000068                     	ds	2
   455   00006A                     efgtoa@p:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0xA
   459   00006A                     	ds	2
   460   00006C                     efgtoa@t:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xC
   464   00006C                     	ds	2
   465   00006E                     _efgtoa$2369:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xE
   469   00006E                     	ds	2
   470   000070                     efgtoa@pp:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x10
   474   000070                     	ds	1
   475   000071                     efgtoa@mode:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x11
   479   000071                     	ds	1
   480   000072                     efgtoa@nmode:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x12
   484   000072                     	ds	1
   485   000073                     efgtoa@d:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x13
   489   000073                     	ds	2
   490   000075                     efgtoa@m:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x15
   494   000075                     	ds	2
   495   000077                     efgtoa@e:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x17
   499   000077                     	ds	2
   500   000079                     efgtoa@w:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x19
   504   000079                     	ds	2
   505   00007B                     efgtoa@ou:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x1B
   509   00007B                     	ds	4
   510   00007F                     efgtoa@i:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x1F
   514   00007F                     	ds	2
   515   000081                     efgtoa@h:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x21
   519   000081                     	ds	4
   520   000085                     efgtoa@l:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x25
   524   000085                     	ds	4
   525   000089                     efgtoa@sign:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x29
   529   000089                     	ds	1
   530   00008A                     efgtoa@g:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x2A
   534   00008A                     	ds	4
   535   00008E                     efgtoa@n:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x2E
   539   00008E                     	ds	2
   540   000090                     efgtoa@u:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x30
   544   000090                     	ds	4
   545   000094                     vfpfcnvrt@fp:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x34
   549   000094                     	ds	1
   550   000095                     vfpfcnvrt@fmt:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x35
   554   000095                     	ds	1
   555   000096                     vfpfcnvrt@ap:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x36
   559   000096                     	ds	1
   560   000097                     ??_vfpfcnvrt:
   561                           
   562                           ; 1 bytes @ 0x37
   563   000097                     	ds	2
   564   000099                     vfpfcnvrt@convarg:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x39
   568   000099                     	ds	4
   569   00009D                     vfpfcnvrt@c:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x3D
   573   00009D                     	ds	1
   574   00009E                     vfpfcnvrt@cp:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x3E
   578   00009E                     	ds	1
   579   00009F                     ?_vfprintf:
   580                           	callstack 0
   581   00009F                     vfprintf@fp:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x3F
   585   00009F                     	ds	1
   586   0000A0                     vfprintf@fmt:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x40
   590   0000A0                     	ds	1
   591   0000A1                     vfprintf@ap:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x41
   595   0000A1                     	ds	1
   596   0000A2                     vfprintf@cfmt:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x42
   600   0000A2                     	ds	1
   601   0000A3                     ?_sprintf:
   602                           	callstack 0
   603   0000A3                     sprintf@s:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x43
   607   0000A3                     	ds	2
   608   0000A5                     sprintf@fmt:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x45
   612   0000A5                     	ds	17
   613   0000B6                     sprintf@ap:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x56
   617   0000B6                     	ds	1
   618   0000B7                     sprintf@f:
   619                           	callstack 0
   620                           
   621                           ; 12 bytes @ 0x57
   622   0000B7                     	ds	12
   623   0000C3                     RGB_to_HSV@R:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x63
   627   0000C3                     	ds	4
   628   0000C7                     RGB_to_HSV@G:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x67
   632   0000C7                     	ds	4
   633   0000CB                     RGB_to_HSV@B:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x6B
   637   0000CB                     	ds	4
   638   0000CF                     RGB_to_HSV@C:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x6F
   642   0000CF                     	ds	4
   643   0000D3                     RGB_to_HSV@H:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x73
   647   0000D3                     	ds	1
   648   0000D4                     RGB_to_HSV@S:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x74
   652   0000D4                     	ds	1
   653   0000D5                     RGB_to_HSV@V:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x75
   657   0000D5                     	ds	1
   658   0000D6                     ??_RGB_to_HSV:
   659                           
   660                           ; 1 bytes @ 0x76
   661   0000D6                     	ds	2
   662   0000D8                     ?_color_cardCheck:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x78
   666   0000D8                     	ds	2
   667   0000DA                     color_cardCheck@r:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x7A
   671   0000DA                     	ds	4
   672   0000DE                     color_cardCheck@g:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x7E
   676   0000DE                     	ds	4
   677   0000E2                     color_cardCheck@b:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x82
   681   0000E2                     	ds	4
   682   0000E6                     color_cardCheck@c:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x86
   686   0000E6                     	ds	4
   687   0000EA                     color_cardCheck@card_color:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x8A
   691   0000EA                     	ds	2
   692   0000EC                     color_cardCheck@H:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x8C
   696   0000EC                     	ds	4
   697   0000F0                     color_cardCheck@S:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x90
   701   0000F0                     	ds	4
   702   0000F4                     color_cardCheck@V:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x94
   706   0000F4                     	ds	4
   707                           
   708                           	psect	cstackCOMRAM
   709   000001                     __pcstackCOMRAM:
   710                           	callstack 0
   711   000001                     ??_I2C_2_Master_Idle:
   712   000001                     ?___fpclassifyf:
   713                           	callstack 0
   714   000001                     ?___wmul:
   715                           	callstack 0
   716   000001                     ?___fladd:
   717                           	callstack 0
   718   000001                     ?_labs:
   719                           	callstack 0
   720   000001                     ?___flneg:
   721                           	callstack 0
   722   000001                     ?___fltol:
   723                           	callstack 0
   724   000001                     sendCharSerial4@charToSend:
   725                           	callstack 0
   726   000001                     ___wmul@multiplier:
   727                           	callstack 0
   728   000001                     memcpy@d1:
   729                           	callstack 0
   730   000001                     fputc@c:
   731                           	callstack 0
   732   000001                     strcpy@dest:
   733                           	callstack 0
   734   000001                     ___fleq@ff1:
   735                           	callstack 0
   736   000001                     ___flneg@f1:
   737                           	callstack 0
   738   000001                     ___fltol@f1:
   739                           	callstack 0
   740   000001                     ___fladd@b:
   741                           	callstack 0
   742   000001                     ___fpclassifyf@x:
   743                           	callstack 0
   744   000001                     labs@a:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x0
   748   000001                     	ds	1
   749   000002                     ??_I2C_2_Master_Read:
   750   000002                     I2C_2_Master_Write@data_byte:
   751                           	callstack 0
   752   000002                     sendStringSerial4@string:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x1
   756   000002                     	ds	1
   757   000003                     color_writetoaddr@value:
   758                           	callstack 0
   759   000003                     I2C_2_Master_Read@ack:
   760                           	callstack 0
   761   000003                     fputc@fp:
   762                           	callstack 0
   763   000003                     strcpy@src:
   764                           	callstack 0
   765   000003                     ___wmul@multiplicand:
   766                           	callstack 0
   767   000003                     memcpy@s1:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x2
   771   000003                     	ds	1
   772   000004                     ??_fputc:
   773   000004                     ??_strcpy:
   774   000004                     color_writetoaddr@address:
   775                           	callstack 0
   776   000004                     I2C_2_Master_Read@tmp:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x3
   780   000004                     	ds	1
   781   000005                     ??___fpclassifyf:
   782   000005                     ??_labs:
   783   000005                     ??_color_click_init:
   784   000005                     ??___fltol:
   785   000005                     ?_color_read_Red:
   786                           	callstack 0
   787   000005                     ?_color_read_Green:
   788                           	callstack 0
   789   000005                     ?_color_read_Blue:
   790                           	callstack 0
   791   000005                     ?_color_read_Clear:
   792                           	callstack 0
   793   000005                     ___wmul@product:
   794                           	callstack 0
   795   000005                     memcpy@n:
   796                           	callstack 0
   797   000005                     strcpy@d:
   798                           	callstack 0
   799   000005                     ___fleq@ff2:
   800                           	callstack 0
   801   000005                     ___fladd@a:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x4
   805   000005                     	ds	2
   806   000007                     ??_color_read_Red:
   807   000007                     ??_color_read_Green:
   808   000007                     ??_color_read_Blue:
   809   000007                     ??_color_read_Clear:
   810   000007                     ?_read_prec_or_width:
   811                           	callstack 0
   812   000007                     read_prec_or_width@fmt:
   813                           	callstack 0
   814   000007                     memcpy@tmp:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x6
   818   000007                     	ds	1
   819   000008                     read_prec_or_width@ap:
   820                           	callstack 0
   821   000008                     memcpy@d:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x7
   825   000008                     	ds	1
   826   000009                     ??___fladd:
   827   000009                     ??___fleq:
   828   000009                     ___fltol@sign1:
   829                           	callstack 0
   830   000009                     read_prec_or_width@c:
   831                           	callstack 0
   832   000009                     ___fpclassifyf@e:
   833                           	callstack 0
   834   000009                     fputs@s:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x8
   838   000009                     	ds	1
   839   00000A                     ___fltol@exp1:
   840                           	callstack 0
   841   00000A                     color_read_Red@tmp:
   842                           	callstack 0
   843   00000A                     color_read_Green@tmp:
   844                           	callstack 0
   845   00000A                     color_read_Blue@tmp:
   846                           	callstack 0
   847   00000A                     color_read_Clear@tmp:
   848                           	callstack 0
   849   00000A                     read_prec_or_width@n:
   850                           	callstack 0
   851   00000A                     memcpy@s:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x9
   855   00000A                     	ds	1
   856   00000B                     fputs@fp:
   857                           	callstack 0
   858   00000B                     ___fpclassifyf@u:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0xA
   862   00000B                     	ds	1
   863   00000C                     ?___xxtofl:
   864                           	callstack 0
   865   00000C                     fputs@c:
   866                           	callstack 0
   867   00000C                     ___xxtofl@val:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0xB
   871   00000C                     	ds	1
   872   00000D                     ___fladd@signs:
   873                           	callstack 0
   874   00000D                     fputs@i:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0xC
   878   00000D                     	ds	1
   879   00000E                     ___fladd@aexp:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0xD
   883   00000E                     	ds	1
   884   00000F                     ___fladd@bexp:
   885                           	callstack 0
   886   00000F                     pad@fp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0xE
   890   00000F                     	ds	1
   891   000010                     ??___xxtofl:
   892   000010                     ___fladd@grs:
   893                           	callstack 0
   894   000010                     pad@buf:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0xF
   898   000010                     	ds	2
   899   000012                     pad@p:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x11
   903   000012                     	ds	2
   904   000014                     ??_pad:
   905   000014                     ___xxtofl@sign:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x13
   909   000014                     	ds	1
   910   000015                     ___xxtofl@exp:
   911                           	callstack 0
   912   000015                     pad@i:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x14
   916   000015                     	ds	1
   917   000016                     ___xxtofl@arg:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x15
   921   000016                     	ds	4
   922   00001A                     ?___flsub:
   923                           	callstack 0
   924   00001A                     ___flsub@b:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x19
   928   00001A                     	ds	4
   929   00001E                     ___flsub@a:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x1D
   933   00001E                     	ds	4
   934   000022                     ?___fldiv:
   935                           	callstack 0
   936   000022                     ___fldiv@b:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x21
   940   000022                     	ds	4
   941   000026                     ___fldiv@a:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x25
   945   000026                     	ds	4
   946   00002A                     ??___fldiv:
   947                           
   948                           ; 1 bytes @ 0x29
   949   00002A                     	ds	4
   950   00002E                     ___fldiv@rem:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x2D
   954   00002E                     	ds	4
   955   000032                     ___fldiv@sign:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x31
   959   000032                     	ds	1
   960   000033                     ___fldiv@new_exp:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x32
   964   000033                     	ds	2
   965   000035                     ___fldiv@grs:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x34
   969   000035                     	ds	4
   970   000039                     ___fldiv@bexp:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x38
   974   000039                     	ds	1
   975   00003A                     ___fldiv@aexp:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x39
   979   00003A                     	ds	1
   980   00003B                     ?___flmul:
   981                           	callstack 0
   982   00003B                     ?_floorf:
   983                           	callstack 0
   984   00003B                     ___flmul@b:
   985                           	callstack 0
   986   00003B                     floorf@x:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x3A
   990   00003B                     	ds	4
   991   00003F                     ??_floorf:
   992   00003F                     ___flmul@a:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x3E
   996   00003F                     	ds	4
   997   000043                     ??___flmul:
   998                           
   999                           ; 1 bytes @ 0x42
  1000   000043                     	ds	2
  1001   000045                     floorf@m:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x44
  1005   000045                     	ds	2
  1006   000047                     ___flmul@sign:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x46
  1010   000047                     	ds	1
  1011   000048                     ___flmul@grs:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x47
  1015   000048                     	ds	1
  1016   000049                     floorf@e:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x48
  1020   000049                     	ds	2
  1021   00004B                     floorf@u:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x4A
  1025   00004B                     	ds	1
  1026   00004C                     ___flmul@aexp:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x4B
  1030   00004C                     	ds	1
  1031   00004D                     ___flmul@bexp:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x4C
  1035   00004D                     	ds	1
  1036   00004E                     ___flmul@prod:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x4D
  1040   00004E                     	ds	4
  1041   000052                     ___flmul@temp:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x51
  1045   000052                     	ds	2
  1046   000054                     ?_custom_floatmodulo:
  1047                           	callstack 0
  1048   000054                     custom_floatmodulo@x:
  1049                           	callstack 0
  1050   000054                     ___flge@ff1:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x53
  1054   000054                     	ds	4
  1055   000058                     custom_floatmodulo@y:
  1056                           	callstack 0
  1057   000058                     ___flge@ff2:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x57
  1061   000058                     	ds	4
  1062   00005C                     ??___flge:
  1063                           
  1064                           ; 1 bytes @ 0x5B
  1065   00005C                     	ds	4
  1066   000060                     
  1067                           ; 1 bytes @ 0x5F
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 17 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  a               2    0        unsigned int 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels required when called: 10
  1093 ;; This function calls:
  1094 ;;		_color_cardCheck
  1095 ;;		_color_click_init
  1096 ;; This function is called by:
  1097 ;;		Startup code after reset
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text0
  1102   004848                     __ptext0:
  1103                           	callstack 0
  1104   004848                     _main:
  1105                           	callstack 21
  1106   004848                     
  1107                           ;main.c: 21:     color_click_init();
  1108   004848  EC8E  F022         	call	_color_click_init	;wreg free
  1109   00484C  EC14  F007         	call	_color_cardCheck	;wreg free
  1110   004850  EF00  F000         	goto	start
  1111   004854                     __end_of_main:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _color_click_init *****************
  1115 ;; Defined at:
  1116 ;;		line 7 in file "color.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;Total ram usage:        1 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 3
  1137 ;; This function calls:
  1138 ;;		_I2C_2_Master_Init
  1139 ;;		_color_writetoaddr
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text1
  1146   00451C                     __ptext1:
  1147                           	callstack 0
  1148   00451C                     _color_click_init:
  1149                           	callstack 27
  1150   00451C                     
  1151                           ;color.c: 10:     I2C_2_Master_Init();
  1152   00451C  ECCC  F023         	call	_I2C_2_Master_Init	;wreg free
  1153   004520                     
  1154                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1155   004520  0E01               	movlw	1
  1156   004522  6E03               	movwf	color_writetoaddr@value^0,c
  1157   004524  0E00               	movlw	0
  1158   004526  EC08  F024         	call	_color_writetoaddr
  1159   00452A                     
  1160                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1161   00452A  0E3F               	movlw	63
  1162   00452C  6E05               	movwf	??_color_click_init^0,c
  1163   00452E  0E55               	movlw	85
  1164   004530                     u6437:
  1165   004530  2EE8               	decfsz	wreg,f,c
  1166   004532  D7FE               	bra	u6437
  1167   004534  2E05               	decfsz	??_color_click_init^0,f,c
  1168   004536  D7FC               	bra	u6437
  1169   004538  0000               	nop	
  1170   00453A                     
  1171                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1172   00453A  0E03               	movlw	3
  1173   00453C  6E03               	movwf	color_writetoaddr@value^0,c
  1174   00453E  0E00               	movlw	0
  1175   004540  EC08  F024         	call	_color_writetoaddr
  1176   004544                     
  1177                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1178   004544  0ED5               	movlw	213
  1179   004546  6E03               	movwf	color_writetoaddr@value^0,c
  1180   004548  0E01               	movlw	1
  1181   00454A  EC08  F024         	call	_color_writetoaddr
  1182   00454E                     
  1183                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  1184   00454E  9287               	bcf	135,1,c	;volatile
  1185   004550                     
  1186                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  1187   004550  9881               	bcf	129,4,c	;volatile
  1188   004552                     
  1189                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  1190   004552  9E86               	bcf	134,7,c	;volatile
  1191   004554                     
  1192                           ;color.c: 30:     LATGbits.LATG1 = 1;
  1193   004554  827F               	bsf	127,1,c	;volatile
  1194   004556                     
  1195                           ;color.c: 31:     LATAbits.LATA4 = 1;
  1196   004556  8879               	bsf	121,4,c	;volatile
  1197   004558                     
  1198                           ;color.c: 32:     LATFbits.LATF7 = 1;
  1199   004558  8E7E               	bsf	126,7,c	;volatile
  1200   00455A                     
  1201                           ;color.c: 35:     TRISHbits.TRISH1 = 0;
  1202   00455A  9288               	bcf	136,1,c	;volatile
  1203   00455C                     
  1204                           ;color.c: 36:     LATHbits.LATH1 = 1;
  1205   00455C  8280               	bsf	128,1,c	;volatile
  1206   00455E                     
  1207                           ;color.c: 38:     TRISDbits.TRISD4 = 0;
  1208   00455E  9884               	bcf	132,4,c	;volatile
  1209   004560                     
  1210                           ;color.c: 39:     LATDbits.LATD4 = 1;
  1211   004560  887C               	bsf	124,4,c	;volatile
  1212   004562                     
  1213                           ;color.c: 41:     TRISDbits.TRISD3 = 0;
  1214   004562  9684               	bcf	132,3,c	;volatile
  1215   004564                     
  1216                           ;color.c: 42:     LATDbits.LATD3 = 1;
  1217   004564  867C               	bsf	124,3,c	;volatile
  1218   004566  0012               	return		;funcret
  1219   004568                     __end_of_color_click_init:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _color_writetoaddr *****************
  1223 ;; Defined at:
  1224 ;;		line 45 in file "color.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  address         1    wreg     unsigned char 
  1227 ;;  value           1    2[COMRAM] unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  address         1    3[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;Total ram usage:        2 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 2
  1246 ;; This function calls:
  1247 ;;		_I2C_2_Master_Start
  1248 ;;		_I2C_2_Master_Stop
  1249 ;;		_I2C_2_Master_Write
  1250 ;; This function is called by:
  1251 ;;		_color_click_init
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text2
  1256   004810                     __ptext2:
  1257                           	callstack 0
  1258   004810                     _color_writetoaddr:
  1259                           	callstack 27
  1260                           
  1261                           ;incstack = 0
  1262                           ;color_writetoaddr@address stored from wreg
  1263   004810  6E04               	movwf	color_writetoaddr@address^0,c
  1264   004812                     
  1265                           ;color.c: 46:     I2C_2_Master_Start();
  1266   004812  EC35  F024         	call	_I2C_2_Master_Start	;wreg free
  1267                           
  1268                           ;color.c: 47:     I2C_2_Master_Write(0x52 | 0x00);
  1269   004816  0E52               	movlw	82
  1270   004818  EC2A  F024         	call	_I2C_2_Master_Write
  1271                           
  1272                           ;color.c: 48:     I2C_2_Master_Write(0x80 | address);
  1273   00481C  5004               	movf	color_writetoaddr@address^0,w,c
  1274   00481E  0980               	iorlw	128
  1275   004820  EC2A  F024         	call	_I2C_2_Master_Write
  1276                           
  1277                           ;color.c: 49:     I2C_2_Master_Write(value);
  1278   004824  5003               	movf	color_writetoaddr@value^0,w,c
  1279   004826  EC2A  F024         	call	_I2C_2_Master_Write
  1280                           
  1281                           ;color.c: 50:     I2C_2_Master_Stop();
  1282   00482A  EC30  F024         	call	_I2C_2_Master_Stop	;wreg free
  1283   00482E  0012               	return		;funcret
  1284   004830                     __end_of_color_writetoaddr:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _I2C_2_Master_Init *****************
  1288 ;; Defined at:
  1289 ;;		line 4 in file "i2c.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_color_click_init
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text3
  1317   004798                     __ptext3:
  1318                           	callstack 0
  1319   004798                     _I2C_2_Master_Init:
  1320                           	callstack 29
  1321   004798                     
  1322                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1323   004798  010E               	movlb	14	; () banked
  1324   00479A  51D9               	movf	217,w,b	;volatile
  1325   00479C  0BF0               	andlw	-16
  1326   00479E  0908               	iorlw	8
  1327   0047A0  6FD9               	movwf	217,b	;volatile
  1328   0047A2                     
  1329                           ; BSR set to: 14
  1330                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1331   0047A2  8BD9               	bsf	217,5,b	;volatile
  1332                           
  1333                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1334   0047A4  0E9F               	movlw	159
  1335   0047A6  6FD6               	movwf	214,b	;volatile
  1336   0047A8                     
  1337                           ; BSR set to: 14
  1338                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1339   0047A8  8A84               	bsf	132,5,c	;volatile
  1340   0047AA                     
  1341                           ; BSR set to: 14
  1342                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1343   0047AA  8C84               	bsf	132,6,c	;volatile
  1344   0047AC                     
  1345                           ; BSR set to: 14
  1346                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1347   0047AC  9BA7               	bcf	167,5,b	;volatile
  1348   0047AE                     
  1349                           ; BSR set to: 14
  1350                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1351   0047AE  9DA7               	bcf	167,6,b	;volatile
  1352                           
  1353                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1354   0047B0  0E1D               	movlw	29
  1355   0047B2  6F1D               	movwf	29,b	;volatile
  1356                           
  1357                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1358   0047B4  0E1E               	movlw	30
  1359   0047B6  6F1C               	movwf	28,b	;volatile
  1360                           
  1361                           ;i2c.c: 18:   RD5PPS=0x1C;
  1362   0047B8  0E1C               	movlw	28
  1363   0047BA  6F6F               	movwf	111,b	;volatile
  1364                           
  1365                           ;i2c.c: 19:   RD6PPS=0x1B;
  1366   0047BC  0E1B               	movlw	27
  1367   0047BE  6F70               	movwf	112,b	;volatile
  1368   0047C0                     
  1369                           ; BSR set to: 14
  1370   0047C0  0012               	return		;funcret
  1371   0047C2                     __end_of_I2C_2_Master_Init:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _color_cardCheck *****************
  1375 ;; Defined at:
  1376 ;;		line 190 in file "color.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  V               4  148[BANK0 ] float 
  1381 ;;  S               4  144[BANK0 ] float 
  1382 ;;  H               4  140[BANK0 ] float 
  1383 ;;  c               4  134[BANK0 ] float 
  1384 ;;  b               4  130[BANK0 ] float 
  1385 ;;  g               4  126[BANK0 ] float 
  1386 ;;  r               4  122[BANK0 ] float 
  1387 ;;  card_color      2  138[BANK0 ] unsigned int 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2  120[BANK0 ] unsigned int 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;Total ram usage:       32 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 9
  1404 ;; This function calls:
  1405 ;;		_RGB_to_HSV
  1406 ;;		___flge
  1407 ;;		___xxtofl
  1408 ;;		_color_read_Blue
  1409 ;;		_color_read_Clear
  1410 ;;		_color_read_Green
  1411 ;;		_color_read_Red
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text4
  1418   000E28                     __ptext4:
  1419                           	callstack 0
  1420   000E28                     _color_cardCheck:
  1421                           	callstack 21
  1422   000E28                     
  1423                           ;color.c: 193:     float r = color_read_Red();
  1424   000E28  ECC6  F021         	call	_color_read_Red	;wreg free
  1425   000E2C  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1426   000E30  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1427   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1428   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1429   000E38  0E00               	movlw	0
  1430   000E3A  EC75  F01D         	call	___xxtofl
  1431   000E3E  C00C  F0DA         	movff	?___xxtofl,color_cardCheck@r
  1432   000E42  C00D  F0DB         	movff	?___xxtofl+1,color_cardCheck@r+1
  1433   000E46  C00E  F0DC         	movff	?___xxtofl+2,color_cardCheck@r+2
  1434   000E4A  C00F  F0DD         	movff	?___xxtofl+3,color_cardCheck@r+3
  1435                           
  1436                           ;color.c: 194:     float g = color_read_Green();
  1437   000E4E  ECEE  F021         	call	_color_read_Green	;wreg free
  1438   000E52  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1439   000E56  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1440   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1441   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1442   000E5E  0E00               	movlw	0
  1443   000E60  EC75  F01D         	call	___xxtofl
  1444   000E64  C00C  F0DE         	movff	?___xxtofl,color_cardCheck@g
  1445   000E68  C00D  F0DF         	movff	?___xxtofl+1,color_cardCheck@g+1
  1446   000E6C  C00E  F0E0         	movff	?___xxtofl+2,color_cardCheck@g+2
  1447   000E70  C00F  F0E1         	movff	?___xxtofl+3,color_cardCheck@g+3
  1448                           
  1449                           ;color.c: 195:     float b = color_read_Blue();
  1450   000E74  EC3E  F022         	call	_color_read_Blue	;wreg free
  1451   000E78  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1452   000E7C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1453   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1454   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1455   000E84  0E00               	movlw	0
  1456   000E86  EC75  F01D         	call	___xxtofl
  1457   000E8A  C00C  F0E2         	movff	?___xxtofl,color_cardCheck@b
  1458   000E8E  C00D  F0E3         	movff	?___xxtofl+1,color_cardCheck@b+1
  1459   000E92  C00E  F0E4         	movff	?___xxtofl+2,color_cardCheck@b+2
  1460   000E96  C00F  F0E5         	movff	?___xxtofl+3,color_cardCheck@b+3
  1461                           
  1462                           ;color.c: 198:     float c = color_read_Clear();
  1463   000E9A  EC16  F022         	call	_color_read_Clear	;wreg free
  1464   000E9E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1465   000EA2  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1466   000EA6  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1467   000EA8  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1468   000EAA  0E00               	movlw	0
  1469   000EAC  EC75  F01D         	call	___xxtofl
  1470   000EB0  C00C  F0E6         	movff	?___xxtofl,color_cardCheck@c
  1471   000EB4  C00D  F0E7         	movff	?___xxtofl+1,color_cardCheck@c+1
  1472   000EB8  C00E  F0E8         	movff	?___xxtofl+2,color_cardCheck@c+2
  1473   000EBC  C00F  F0E9         	movff	?___xxtofl+3,color_cardCheck@c+3
  1474   000EC0                     
  1475                           ;color.c: 201:     float H;;color.c: 202:     float S;;color.c: 203:     float V;;color.
      +                          c: 205:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  1476   000EC0  C0DA  F0C3         	movff	color_cardCheck@r,RGB_to_HSV@R
  1477   000EC4  C0DB  F0C4         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  1478   000EC8  C0DC  F0C5         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  1479   000ECC  C0DD  F0C6         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  1480   000ED0  C0DE  F0C7         	movff	color_cardCheck@g,RGB_to_HSV@G
  1481   000ED4  C0DF  F0C8         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  1482   000ED8  C0E0  F0C9         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  1483   000EDC  C0E1  F0CA         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  1484   000EE0  C0E2  F0CB         	movff	color_cardCheck@b,RGB_to_HSV@B
  1485   000EE4  C0E3  F0CC         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  1486   000EE8  C0E4  F0CD         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  1487   000EEC  C0E5  F0CE         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  1488   000EF0  C0E6  F0CF         	movff	color_cardCheck@c,RGB_to_HSV@C
  1489   000EF4  C0E7  F0D0         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  1490   000EF8  C0E8  F0D1         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  1491   000EFC  C0E9  F0D2         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  1492   000F00  0EEC               	movlw	low color_cardCheck@H
  1493   000F02  0100               	movlb	0	; () banked
  1494   000F04  6FD3               	movwf	RGB_to_HSV@H& (0+255),b
  1495   000F06  0EF0               	movlw	low color_cardCheck@S
  1496   000F08  6FD4               	movwf	RGB_to_HSV@S& (0+255),b
  1497   000F0A  0EF4               	movlw	low color_cardCheck@V
  1498   000F0C  6FD5               	movwf	RGB_to_HSV@V& (0+255),b
  1499   000F0E  EC24  F011         	call	_RGB_to_HSV	;wreg free
  1500   000F12                     
  1501                           ;color.c: 214:     unsigned int card_color = 0;
  1502   000F12  0E00               	movlw	0
  1503   000F14  0100               	movlb	0	; () banked
  1504   000F16  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1505   000F18  0E00               	movlw	0
  1506   000F1A  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  1507   000F1C                     
  1508                           ; BSR set to: 0
  1509                           ;color.c: 217:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  1510   000F1C  0E00               	movlw	0
  1511   000F1E  6E54               	movwf	___flge@ff1^0,c
  1512   000F20  0E80               	movlw	128
  1513   000F22  6E55               	movwf	(___flge@ff1+1)^0,c
  1514   000F24  0EB1               	movlw	177
  1515   000F26  6E56               	movwf	(___flge@ff1+2)^0,c
  1516   000F28  0E43               	movlw	67
  1517   000F2A  6E57               	movwf	(___flge@ff1+3)^0,c
  1518   000F2C  C0EC  F058         	movff	color_cardCheck@H,___flge@ff2
  1519   000F30  C0ED  F059         	movff	color_cardCheck@H+1,___flge@ff2+1
  1520   000F34  C0EE  F05A         	movff	color_cardCheck@H+2,___flge@ff2+2
  1521   000F38  C0EF  F05B         	movff	color_cardCheck@H+3,___flge@ff2+3
  1522   000F3C  EC5E  F01F         	call	___flge	;wreg free
  1523   000F40  B0D8               	btfsc	status,0,c
  1524   000F42  EFA5  F007         	goto	u5981
  1525   000F46  EFA7  F007         	goto	u5980
  1526   000F4A                     u5981:
  1527   000F4A  EF2B  F008         	goto	l5156
  1528   000F4E                     u5980:
  1529   000F4E  C0EC  F054         	movff	color_cardCheck@H,___flge@ff1
  1530   000F52  C0ED  F055         	movff	color_cardCheck@H+1,___flge@ff1+1
  1531   000F56  C0EE  F056         	movff	color_cardCheck@H+2,___flge@ff1+2
  1532   000F5A  C0EF  F057         	movff	color_cardCheck@H+3,___flge@ff1+3
  1533   000F5E  0E00               	movlw	0
  1534   000F60  6E58               	movwf	___flge@ff2^0,c
  1535   000F62  0E00               	movlw	0
  1536   000F64  6E59               	movwf	(___flge@ff2+1)^0,c
  1537   000F66  0EB4               	movlw	180
  1538   000F68  6E5A               	movwf	(___flge@ff2+2)^0,c
  1539   000F6A  0E43               	movlw	67
  1540   000F6C  6E5B               	movwf	(___flge@ff2+3)^0,c
  1541   000F6E  EC5E  F01F         	call	___flge	;wreg free
  1542   000F72  B0D8               	btfsc	status,0,c
  1543   000F74  EFBE  F007         	goto	u5991
  1544   000F78  EFC0  F007         	goto	u5990
  1545   000F7C                     u5991:
  1546   000F7C  EF2B  F008         	goto	l5156
  1547   000F80                     u5990:
  1548   000F80  0E00               	movlw	0
  1549   000F82  6E54               	movwf	___flge@ff1^0,c
  1550   000F84  0E00               	movlw	0
  1551   000F86  6E55               	movwf	(___flge@ff1+1)^0,c
  1552   000F88  0EAA               	movlw	170
  1553   000F8A  6E56               	movwf	(___flge@ff1+2)^0,c
  1554   000F8C  0E42               	movlw	66
  1555   000F8E  6E57               	movwf	(___flge@ff1+3)^0,c
  1556   000F90  C0F0  F058         	movff	color_cardCheck@S,___flge@ff2
  1557   000F94  C0F1  F059         	movff	color_cardCheck@S+1,___flge@ff2+1
  1558   000F98  C0F2  F05A         	movff	color_cardCheck@S+2,___flge@ff2+2
  1559   000F9C  C0F3  F05B         	movff	color_cardCheck@S+3,___flge@ff2+3
  1560   000FA0  EC5E  F01F         	call	___flge	;wreg free
  1561   000FA4  B0D8               	btfsc	status,0,c
  1562   000FA6  EFD7  F007         	goto	u6001
  1563   000FAA  EFD9  F007         	goto	u6000
  1564   000FAE                     u6001:
  1565   000FAE  EF2B  F008         	goto	l5156
  1566   000FB2                     u6000:
  1567   000FB2  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  1568   000FB6  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  1569   000FBA  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  1570   000FBE  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  1571   000FC2  0E00               	movlw	0
  1572   000FC4  6E58               	movwf	___flge@ff2^0,c
  1573   000FC6  0E00               	movlw	0
  1574   000FC8  6E59               	movwf	(___flge@ff2+1)^0,c
  1575   000FCA  0EB4               	movlw	180
  1576   000FCC  6E5A               	movwf	(___flge@ff2+2)^0,c
  1577   000FCE  0E42               	movlw	66
  1578   000FD0  6E5B               	movwf	(___flge@ff2+3)^0,c
  1579   000FD2  EC5E  F01F         	call	___flge	;wreg free
  1580   000FD6  B0D8               	btfsc	status,0,c
  1581   000FD8  EFF0  F007         	goto	u6011
  1582   000FDC  EFF2  F007         	goto	u6010
  1583   000FE0                     u6011:
  1584   000FE0  EF2B  F008         	goto	l5156
  1585   000FE4                     u6010:
  1586   000FE4  0E00               	movlw	0
  1587   000FE6  6E54               	movwf	___flge@ff1^0,c
  1588   000FE8  0E00               	movlw	0
  1589   000FEA  6E55               	movwf	(___flge@ff1+1)^0,c
  1590   000FEC  0EA0               	movlw	160
  1591   000FEE  6E56               	movwf	(___flge@ff1+2)^0,c
  1592   000FF0  0E42               	movlw	66
  1593   000FF2  6E57               	movwf	(___flge@ff1+3)^0,c
  1594   000FF4  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  1595   000FF8  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  1596   000FFC  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  1597   001000  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  1598   001004  EC5E  F01F         	call	___flge	;wreg free
  1599   001008  B0D8               	btfsc	status,0,c
  1600   00100A  EF09  F008         	goto	u6021
  1601   00100E  EF0B  F008         	goto	u6020
  1602   001012                     u6021:
  1603   001012  EF2B  F008         	goto	l5156
  1604   001016                     u6020:
  1605   001016  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  1606   00101A  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  1607   00101E  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  1608   001022  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  1609   001026  0E00               	movlw	0
  1610   001028  6E58               	movwf	___flge@ff2^0,c
  1611   00102A  0E00               	movlw	0
  1612   00102C  6E59               	movwf	(___flge@ff2+1)^0,c
  1613   00102E  0EAA               	movlw	170
  1614   001030  6E5A               	movwf	(___flge@ff2+2)^0,c
  1615   001032  0E42               	movlw	66
  1616   001034  6E5B               	movwf	(___flge@ff2+3)^0,c
  1617   001036  EC5E  F01F         	call	___flge	;wreg free
  1618   00103A  B0D8               	btfsc	status,0,c
  1619   00103C  EF22  F008         	goto	u6031
  1620   001040  EF24  F008         	goto	u6030
  1621   001044                     u6031:
  1622   001044  EF2B  F008         	goto	l5156
  1623   001048                     u6030:
  1624   001048  0E00               	movlw	0
  1625   00104A  0100               	movlb	0	; () banked
  1626   00104C  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1627   00104E  0E01               	movlw	1
  1628   001050  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  1629   001052  EF2B  F00C         	goto	l5248
  1630   001056                     l5156:
  1631   001056  0E00               	movlw	0
  1632   001058  6E54               	movwf	___flge@ff1^0,c
  1633   00105A  0E00               	movlw	0
  1634   00105C  6E55               	movwf	(___flge@ff1+1)^0,c
  1635   00105E  0E86               	movlw	134
  1636   001060  6E56               	movwf	(___flge@ff1+2)^0,c
  1637   001062  0E42               	movlw	66
  1638   001064  6E57               	movwf	(___flge@ff1+3)^0,c
  1639   001066  C0EC  F058         	movff	color_cardCheck@H,___flge@ff2
  1640   00106A  C0ED  F059         	movff	color_cardCheck@H+1,___flge@ff2+1
  1641   00106E  C0EE  F05A         	movff	color_cardCheck@H+2,___flge@ff2+2
  1642   001072  C0EF  F05B         	movff	color_cardCheck@H+3,___flge@ff2+3
  1643   001076  EC5E  F01F         	call	___flge	;wreg free
  1644   00107A  B0D8               	btfsc	status,0,c
  1645   00107C  EF42  F008         	goto	u6041
  1646   001080  EF44  F008         	goto	u6040
  1647   001084                     u6041:
  1648   001084  EFC8  F008         	goto	l5170
  1649   001088                     u6040:
  1650   001088  C0EC  F054         	movff	color_cardCheck@H,___flge@ff1
  1651   00108C  C0ED  F055         	movff	color_cardCheck@H+1,___flge@ff1+1
  1652   001090  C0EE  F056         	movff	color_cardCheck@H+2,___flge@ff1+2
  1653   001094  C0EF  F057         	movff	color_cardCheck@H+3,___flge@ff1+3
  1654   001098  0E00               	movlw	0
  1655   00109A  6E58               	movwf	___flge@ff2^0,c
  1656   00109C  0E00               	movlw	0
  1657   00109E  6E59               	movwf	(___flge@ff2+1)^0,c
  1658   0010A0  0E9E               	movlw	158
  1659   0010A2  6E5A               	movwf	(___flge@ff2+2)^0,c
  1660   0010A4  0E42               	movlw	66
  1661   0010A6  6E5B               	movwf	(___flge@ff2+3)^0,c
  1662   0010A8  EC5E  F01F         	call	___flge	;wreg free
  1663   0010AC  B0D8               	btfsc	status,0,c
  1664   0010AE  EF5B  F008         	goto	u6051
  1665   0010B2  EF5D  F008         	goto	u6050
  1666   0010B6                     u6051:
  1667   0010B6  EFC8  F008         	goto	l5170
  1668   0010BA                     u6050:
  1669   0010BA  0E00               	movlw	0
  1670   0010BC  6E54               	movwf	___flge@ff1^0,c
  1671   0010BE  0E00               	movlw	0
  1672   0010C0  6E55               	movwf	(___flge@ff1+1)^0,c
  1673   0010C2  0E48               	movlw	72
  1674   0010C4  6E56               	movwf	(___flge@ff1+2)^0,c
  1675   0010C6  0E42               	movlw	66
  1676   0010C8  6E57               	movwf	(___flge@ff1+3)^0,c
  1677   0010CA  C0F0  F058         	movff	color_cardCheck@S,___flge@ff2
  1678   0010CE  C0F1  F059         	movff	color_cardCheck@S+1,___flge@ff2+1
  1679   0010D2  C0F2  F05A         	movff	color_cardCheck@S+2,___flge@ff2+2
  1680   0010D6  C0F3  F05B         	movff	color_cardCheck@S+3,___flge@ff2+3
  1681   0010DA  EC5E  F01F         	call	___flge	;wreg free
  1682   0010DE  B0D8               	btfsc	status,0,c
  1683   0010E0  EF74  F008         	goto	u6061
  1684   0010E4  EF76  F008         	goto	u6060
  1685   0010E8                     u6061:
  1686   0010E8  EFC8  F008         	goto	l5170
  1687   0010EC                     u6060:
  1688   0010EC  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  1689   0010F0  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  1690   0010F4  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  1691   0010F8  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  1692   0010FC  0E00               	movlw	0
  1693   0010FE  6E58               	movwf	___flge@ff2^0,c
  1694   001100  0E00               	movlw	0
  1695   001102  6E59               	movwf	(___flge@ff2+1)^0,c
  1696   001104  0E64               	movlw	100
  1697   001106  6E5A               	movwf	(___flge@ff2+2)^0,c
  1698   001108  0E42               	movlw	66
  1699   00110A  6E5B               	movwf	(___flge@ff2+3)^0,c
  1700   00110C  EC5E  F01F         	call	___flge	;wreg free
  1701   001110  B0D8               	btfsc	status,0,c
  1702   001112  EF8D  F008         	goto	u6071
  1703   001116  EF8F  F008         	goto	u6070
  1704   00111A                     u6071:
  1705   00111A  EFC8  F008         	goto	l5170
  1706   00111E                     u6070:
  1707   00111E  0E00               	movlw	0
  1708   001120  6E54               	movwf	___flge@ff1^0,c
  1709   001122  0E00               	movlw	0
  1710   001124  6E55               	movwf	(___flge@ff1+1)^0,c
  1711   001126  0E20               	movlw	32
  1712   001128  6E56               	movwf	(___flge@ff1+2)^0,c
  1713   00112A  0E42               	movlw	66
  1714   00112C  6E57               	movwf	(___flge@ff1+3)^0,c
  1715   00112E  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  1716   001132  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  1717   001136  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  1718   00113A  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  1719   00113E  EC5E  F01F         	call	___flge	;wreg free
  1720   001142  B0D8               	btfsc	status,0,c
  1721   001144  EFA6  F008         	goto	u6081
  1722   001148  EFA8  F008         	goto	u6080
  1723   00114C                     u6081:
  1724   00114C  EFC8  F008         	goto	l5170
  1725   001150                     u6080:
  1726   001150  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  1727   001154  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  1728   001158  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  1729   00115C  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  1730   001160  0E00               	movlw	0
  1731   001162  6E58               	movwf	___flge@ff2^0,c
  1732   001164  0E00               	movlw	0
  1733   001166  6E59               	movwf	(___flge@ff2+1)^0,c
  1734   001168  0E38               	movlw	56
  1735   00116A  6E5A               	movwf	(___flge@ff2+2)^0,c
  1736   00116C  0E42               	movlw	66
  1737   00116E  6E5B               	movwf	(___flge@ff2+3)^0,c
  1738   001170  EC5E  F01F         	call	___flge	;wreg free
  1739   001174  B0D8               	btfsc	status,0,c
  1740   001176  EFBF  F008         	goto	u6091
  1741   00117A  EFC1  F008         	goto	u6090
  1742   00117E                     u6091:
  1743   00117E  EFC8  F008         	goto	l5170
  1744   001182                     u6090:
  1745   001182  0E00               	movlw	0
  1746   001184  0100               	movlb	0	; () banked
  1747   001186  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1748   001188  0E02               	movlw	2
  1749   00118A  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  1750   00118C  EF2B  F00C         	goto	l5248
  1751   001190                     l5170:
  1752   001190  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  1753   001194  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  1754   001198  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  1755   00119C  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  1756   0011A0  0E00               	movlw	0
  1757   0011A2  6E58               	movwf	___flge@ff2^0,c
  1758   0011A4  0E00               	movlw	0
  1759   0011A6  6E59               	movwf	(___flge@ff2+1)^0,c
  1760   0011A8  0E20               	movlw	32
  1761   0011AA  6E5A               	movwf	(___flge@ff2+2)^0,c
  1762   0011AC  0E41               	movlw	65
  1763   0011AE  6E5B               	movwf	(___flge@ff2+3)^0,c
  1764   0011B0  EC5E  F01F         	call	___flge	;wreg free
  1765   0011B4  B0D8               	btfsc	status,0,c
  1766   0011B6  EFDF  F008         	goto	u6101
  1767   0011BA  EFE1  F008         	goto	u6100
  1768   0011BE                     u6101:
  1769   0011BE  EF1A  F009         	goto	l5178
  1770   0011C2                     u6100:
  1771   0011C2  0E00               	movlw	0
  1772   0011C4  6E54               	movwf	___flge@ff1^0,c
  1773   0011C6  0E00               	movlw	0
  1774   0011C8  6E55               	movwf	(___flge@ff1+1)^0,c
  1775   0011CA  0EF0               	movlw	240
  1776   0011CC  6E56               	movwf	(___flge@ff1+2)^0,c
  1777   0011CE  0E41               	movlw	65
  1778   0011D0  6E57               	movwf	(___flge@ff1+3)^0,c
  1779   0011D2  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  1780   0011D6  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  1781   0011DA  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  1782   0011DE  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  1783   0011E2  EC5E  F01F         	call	___flge	;wreg free
  1784   0011E6  B0D8               	btfsc	status,0,c
  1785   0011E8  EFF8  F008         	goto	u6111
  1786   0011EC  EFFA  F008         	goto	u6110
  1787   0011F0                     u6111:
  1788   0011F0  EF1A  F009         	goto	l5178
  1789   0011F4                     u6110:
  1790   0011F4  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  1791   0011F8  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  1792   0011FC  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  1793   001200  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  1794   001204  0E00               	movlw	0
  1795   001206  6E58               	movwf	___flge@ff2^0,c
  1796   001208  0E00               	movlw	0
  1797   00120A  6E59               	movwf	(___flge@ff2+1)^0,c
  1798   00120C  0E0C               	movlw	12
  1799   00120E  6E5A               	movwf	(___flge@ff2+2)^0,c
  1800   001210  0E42               	movlw	66
  1801   001212  6E5B               	movwf	(___flge@ff2+3)^0,c
  1802   001214  EC5E  F01F         	call	___flge	;wreg free
  1803   001218  B0D8               	btfsc	status,0,c
  1804   00121A  EF11  F009         	goto	u6121
  1805   00121E  EF13  F009         	goto	u6120
  1806   001222                     u6121:
  1807   001222  EF1A  F009         	goto	l5178
  1808   001226                     u6120:
  1809   001226  0E00               	movlw	0
  1810   001228  0100               	movlb	0	; () banked
  1811   00122A  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1812   00122C  0E03               	movlw	3
  1813   00122E  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  1814   001230  EF2B  F00C         	goto	l5248
  1815   001234                     l5178:
  1816   001234  0E00               	movlw	0
  1817   001236  6E54               	movwf	___flge@ff1^0,c
  1818   001238  0E00               	movlw	0
  1819   00123A  6E55               	movwf	(___flge@ff1+1)^0,c
  1820   00123C  0EA0               	movlw	160
  1821   00123E  6E56               	movwf	(___flge@ff1+2)^0,c
  1822   001240  0E41               	movlw	65
  1823   001242  6E57               	movwf	(___flge@ff1+3)^0,c
  1824   001244  C0EC  F058         	movff	color_cardCheck@H,___flge@ff2
  1825   001248  C0ED  F059         	movff	color_cardCheck@H+1,___flge@ff2+1
  1826   00124C  C0EE  F05A         	movff	color_cardCheck@H+2,___flge@ff2+2
  1827   001250  C0EF  F05B         	movff	color_cardCheck@H+3,___flge@ff2+3
  1828   001254  EC5E  F01F         	call	___flge	;wreg free
  1829   001258  B0D8               	btfsc	status,0,c
  1830   00125A  EF31  F009         	goto	u6131
  1831   00125E  EF33  F009         	goto	u6130
  1832   001262                     u6131:
  1833   001262  EFB7  F009         	goto	l5192
  1834   001266                     u6130:
  1835   001266  C0EC  F054         	movff	color_cardCheck@H,___flge@ff1
  1836   00126A  C0ED  F055         	movff	color_cardCheck@H+1,___flge@ff1+1
  1837   00126E  C0EE  F056         	movff	color_cardCheck@H+2,___flge@ff1+2
  1838   001272  C0EF  F057         	movff	color_cardCheck@H+3,___flge@ff1+3
  1839   001276  0E00               	movlw	0
  1840   001278  6E58               	movwf	___flge@ff2^0,c
  1841   00127A  0E00               	movlw	0
  1842   00127C  6E59               	movwf	(___flge@ff2+1)^0,c
  1843   00127E  0EC8               	movlw	200
  1844   001280  6E5A               	movwf	(___flge@ff2+2)^0,c
  1845   001282  0E41               	movlw	65
  1846   001284  6E5B               	movwf	(___flge@ff2+3)^0,c
  1847   001286  EC5E  F01F         	call	___flge	;wreg free
  1848   00128A  B0D8               	btfsc	status,0,c
  1849   00128C  EF4A  F009         	goto	u6141
  1850   001290  EF4C  F009         	goto	u6140
  1851   001294                     u6141:
  1852   001294  EFB7  F009         	goto	l5192
  1853   001298                     u6140:
  1854   001298  0E00               	movlw	0
  1855   00129A  6E54               	movwf	___flge@ff1^0,c
  1856   00129C  0E00               	movlw	0
  1857   00129E  6E55               	movwf	(___flge@ff1+1)^0,c
  1858   0012A0  0E82               	movlw	130
  1859   0012A2  6E56               	movwf	(___flge@ff1+2)^0,c
  1860   0012A4  0E42               	movlw	66
  1861   0012A6  6E57               	movwf	(___flge@ff1+3)^0,c
  1862   0012A8  C0F0  F058         	movff	color_cardCheck@S,___flge@ff2
  1863   0012AC  C0F1  F059         	movff	color_cardCheck@S+1,___flge@ff2+1
  1864   0012B0  C0F2  F05A         	movff	color_cardCheck@S+2,___flge@ff2+2
  1865   0012B4  C0F3  F05B         	movff	color_cardCheck@S+3,___flge@ff2+3
  1866   0012B8  EC5E  F01F         	call	___flge	;wreg free
  1867   0012BC  B0D8               	btfsc	status,0,c
  1868   0012BE  EF63  F009         	goto	u6151
  1869   0012C2  EF65  F009         	goto	u6150
  1870   0012C6                     u6151:
  1871   0012C6  EFB7  F009         	goto	l5192
  1872   0012CA                     u6150:
  1873   0012CA  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  1874   0012CE  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  1875   0012D2  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  1876   0012D6  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  1877   0012DA  0E00               	movlw	0
  1878   0012DC  6E58               	movwf	___flge@ff2^0,c
  1879   0012DE  0E00               	movlw	0
  1880   0012E0  6E59               	movwf	(___flge@ff2+1)^0,c
  1881   0012E2  0E8C               	movlw	140
  1882   0012E4  6E5A               	movwf	(___flge@ff2+2)^0,c
  1883   0012E6  0E42               	movlw	66
  1884   0012E8  6E5B               	movwf	(___flge@ff2+3)^0,c
  1885   0012EA  EC5E  F01F         	call	___flge	;wreg free
  1886   0012EE  B0D8               	btfsc	status,0,c
  1887   0012F0  EF7C  F009         	goto	u6161
  1888   0012F4  EF7E  F009         	goto	u6160
  1889   0012F8                     u6161:
  1890   0012F8  EFB7  F009         	goto	l5192
  1891   0012FC                     u6160:
  1892   0012FC  0E00               	movlw	0
  1893   0012FE  6E54               	movwf	___flge@ff1^0,c
  1894   001300  0E00               	movlw	0
  1895   001302  6E55               	movwf	(___flge@ff1+1)^0,c
  1896   001304  0E58               	movlw	88
  1897   001306  6E56               	movwf	(___flge@ff1+2)^0,c
  1898   001308  0E42               	movlw	66
  1899   00130A  6E57               	movwf	(___flge@ff1+3)^0,c
  1900   00130C  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  1901   001310  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  1902   001314  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  1903   001318  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  1904   00131C  EC5E  F01F         	call	___flge	;wreg free
  1905   001320  B0D8               	btfsc	status,0,c
  1906   001322  EF95  F009         	goto	u6171
  1907   001326  EF97  F009         	goto	u6170
  1908   00132A                     u6171:
  1909   00132A  EFB7  F009         	goto	l5192
  1910   00132E                     u6170:
  1911   00132E  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  1912   001332  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  1913   001336  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  1914   00133A  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  1915   00133E  0E00               	movlw	0
  1916   001340  6E58               	movwf	___flge@ff2^0,c
  1917   001342  0E00               	movlw	0
  1918   001344  6E59               	movwf	(___flge@ff2+1)^0,c
  1919   001346  0E64               	movlw	100
  1920   001348  6E5A               	movwf	(___flge@ff2+2)^0,c
  1921   00134A  0E42               	movlw	66
  1922   00134C  6E5B               	movwf	(___flge@ff2+3)^0,c
  1923   00134E  EC5E  F01F         	call	___flge	;wreg free
  1924   001352  B0D8               	btfsc	status,0,c
  1925   001354  EFAE  F009         	goto	u6181
  1926   001358  EFB0  F009         	goto	u6180
  1927   00135C                     u6181:
  1928   00135C  EFB7  F009         	goto	l5192
  1929   001360                     u6180:
  1930   001360  0E00               	movlw	0
  1931   001362  0100               	movlb	0	; () banked
  1932   001364  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1933   001366  0E04               	movlw	4
  1934   001368  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  1935   00136A  EF2B  F00C         	goto	l5248
  1936   00136E                     l5192:
  1937   00136E  0E00               	movlw	0
  1938   001370  6E54               	movwf	___flge@ff1^0,c
  1939   001372  0E00               	movlw	0
  1940   001374  6E55               	movwf	(___flge@ff1+1)^0,c
  1941   001376  0E50               	movlw	80
  1942   001378  6E56               	movwf	(___flge@ff1+2)^0,c
  1943   00137A  0E41               	movlw	65
  1944   00137C  6E57               	movwf	(___flge@ff1+3)^0,c
  1945   00137E  C0EC  F058         	movff	color_cardCheck@H,___flge@ff2
  1946   001382  C0ED  F059         	movff	color_cardCheck@H+1,___flge@ff2+1
  1947   001386  C0EE  F05A         	movff	color_cardCheck@H+2,___flge@ff2+2
  1948   00138A  C0EF  F05B         	movff	color_cardCheck@H+3,___flge@ff2+3
  1949   00138E  EC5E  F01F         	call	___flge	;wreg free
  1950   001392  B0D8               	btfsc	status,0,c
  1951   001394  EFCE  F009         	goto	u6191
  1952   001398  EFD0  F009         	goto	u6190
  1953   00139C                     u6191:
  1954   00139C  EF54  F00A         	goto	l5206
  1955   0013A0                     u6190:
  1956   0013A0  C0EC  F054         	movff	color_cardCheck@H,___flge@ff1
  1957   0013A4  C0ED  F055         	movff	color_cardCheck@H+1,___flge@ff1+1
  1958   0013A8  C0EE  F056         	movff	color_cardCheck@H+2,___flge@ff1+2
  1959   0013AC  C0EF  F057         	movff	color_cardCheck@H+3,___flge@ff1+3
  1960   0013B0  0E00               	movlw	0
  1961   0013B2  6E58               	movwf	___flge@ff2^0,c
  1962   0013B4  0E00               	movlw	0
  1963   0013B6  6E59               	movwf	(___flge@ff2+1)^0,c
  1964   0013B8  0E90               	movlw	144
  1965   0013BA  6E5A               	movwf	(___flge@ff2+2)^0,c
  1966   0013BC  0E41               	movlw	65
  1967   0013BE  6E5B               	movwf	(___flge@ff2+3)^0,c
  1968   0013C0  EC5E  F01F         	call	___flge	;wreg free
  1969   0013C4  B0D8               	btfsc	status,0,c
  1970   0013C6  EFE7  F009         	goto	u6201
  1971   0013CA  EFE9  F009         	goto	u6200
  1972   0013CE                     u6201:
  1973   0013CE  EF54  F00A         	goto	l5206
  1974   0013D2                     u6200:
  1975   0013D2  0E00               	movlw	0
  1976   0013D4  6E54               	movwf	___flge@ff1^0,c
  1977   0013D6  0E00               	movlw	0
  1978   0013D8  6E55               	movwf	(___flge@ff1+1)^0,c
  1979   0013DA  0E5C               	movlw	92
  1980   0013DC  6E56               	movwf	(___flge@ff1+2)^0,c
  1981   0013DE  0E42               	movlw	66
  1982   0013E0  6E57               	movwf	(___flge@ff1+3)^0,c
  1983   0013E2  C0F0  F058         	movff	color_cardCheck@S,___flge@ff2
  1984   0013E6  C0F1  F059         	movff	color_cardCheck@S+1,___flge@ff2+1
  1985   0013EA  C0F2  F05A         	movff	color_cardCheck@S+2,___flge@ff2+2
  1986   0013EE  C0F3  F05B         	movff	color_cardCheck@S+3,___flge@ff2+3
  1987   0013F2  EC5E  F01F         	call	___flge	;wreg free
  1988   0013F6  B0D8               	btfsc	status,0,c
  1989   0013F8  EF00  F00A         	goto	u6211
  1990   0013FC  EF02  F00A         	goto	u6210
  1991   001400                     u6211:
  1992   001400  EF54  F00A         	goto	l5206
  1993   001404                     u6210:
  1994   001404  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  1995   001408  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  1996   00140C  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  1997   001410  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  1998   001414  0E00               	movlw	0
  1999   001416  6E58               	movwf	___flge@ff2^0,c
  2000   001418  0E00               	movlw	0
  2001   00141A  6E59               	movwf	(___flge@ff2+1)^0,c
  2002   00141C  0E70               	movlw	112
  2003   00141E  6E5A               	movwf	(___flge@ff2+2)^0,c
  2004   001420  0E42               	movlw	66
  2005   001422  6E5B               	movwf	(___flge@ff2+3)^0,c
  2006   001424  EC5E  F01F         	call	___flge	;wreg free
  2007   001428  B0D8               	btfsc	status,0,c
  2008   00142A  EF19  F00A         	goto	u6221
  2009   00142E  EF1B  F00A         	goto	u6220
  2010   001432                     u6221:
  2011   001432  EF54  F00A         	goto	l5206
  2012   001436                     u6220:
  2013   001436  0E00               	movlw	0
  2014   001438  6E54               	movwf	___flge@ff1^0,c
  2015   00143A  0E00               	movlw	0
  2016   00143C  6E55               	movwf	(___flge@ff1+1)^0,c
  2017   00143E  0E48               	movlw	72
  2018   001440  6E56               	movwf	(___flge@ff1+2)^0,c
  2019   001442  0E42               	movlw	66
  2020   001444  6E57               	movwf	(___flge@ff1+3)^0,c
  2021   001446  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  2022   00144A  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  2023   00144E  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  2024   001452  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  2025   001456  EC5E  F01F         	call	___flge	;wreg free
  2026   00145A  B0D8               	btfsc	status,0,c
  2027   00145C  EF32  F00A         	goto	u6231
  2028   001460  EF34  F00A         	goto	u6230
  2029   001464                     u6231:
  2030   001464  EF54  F00A         	goto	l5206
  2031   001468                     u6230:
  2032   001468  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  2033   00146C  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  2034   001470  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  2035   001474  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  2036   001478  0E00               	movlw	0
  2037   00147A  6E58               	movwf	___flge@ff2^0,c
  2038   00147C  0E00               	movlw	0
  2039   00147E  6E59               	movwf	(___flge@ff2+1)^0,c
  2040   001480  0E58               	movlw	88
  2041   001482  6E5A               	movwf	(___flge@ff2+2)^0,c
  2042   001484  0E42               	movlw	66
  2043   001486  6E5B               	movwf	(___flge@ff2+3)^0,c
  2044   001488  EC5E  F01F         	call	___flge	;wreg free
  2045   00148C  B0D8               	btfsc	status,0,c
  2046   00148E  EF4B  F00A         	goto	u6241
  2047   001492  EF4D  F00A         	goto	u6240
  2048   001496                     u6241:
  2049   001496  EF54  F00A         	goto	l5206
  2050   00149A                     u6240:
  2051   00149A  0E00               	movlw	0
  2052   00149C  0100               	movlb	0	; () banked
  2053   00149E  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2054   0014A0  0E05               	movlw	5
  2055   0014A2  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  2056   0014A4  EF2B  F00C         	goto	l5248
  2057   0014A8                     l5206:
  2058   0014A8  0E00               	movlw	0
  2059   0014AA  6E54               	movwf	___flge@ff1^0,c
  2060   0014AC  0E00               	movlw	0
  2061   0014AE  6E55               	movwf	(___flge@ff1+1)^0,c
  2062   0014B0  0EA0               	movlw	160
  2063   0014B2  6E56               	movwf	(___flge@ff1+2)^0,c
  2064   0014B4  0E40               	movlw	64
  2065   0014B6  6E57               	movwf	(___flge@ff1+3)^0,c
  2066   0014B8  C0EC  F058         	movff	color_cardCheck@H,___flge@ff2
  2067   0014BC  C0ED  F059         	movff	color_cardCheck@H+1,___flge@ff2+1
  2068   0014C0  C0EE  F05A         	movff	color_cardCheck@H+2,___flge@ff2+2
  2069   0014C4  C0EF  F05B         	movff	color_cardCheck@H+3,___flge@ff2+3
  2070   0014C8  EC5E  F01F         	call	___flge	;wreg free
  2071   0014CC  B0D8               	btfsc	status,0,c
  2072   0014CE  EF6B  F00A         	goto	u6251
  2073   0014D2  EF6D  F00A         	goto	u6250
  2074   0014D6                     u6251:
  2075   0014D6  EFF1  F00A         	goto	l5220
  2076   0014DA                     u6250:
  2077   0014DA  C0EC  F054         	movff	color_cardCheck@H,___flge@ff1
  2078   0014DE  C0ED  F055         	movff	color_cardCheck@H+1,___flge@ff1+1
  2079   0014E2  C0EE  F056         	movff	color_cardCheck@H+2,___flge@ff1+2
  2080   0014E6  C0EF  F057         	movff	color_cardCheck@H+3,___flge@ff1+3
  2081   0014EA  0E00               	movlw	0
  2082   0014EC  6E58               	movwf	___flge@ff2^0,c
  2083   0014EE  0E00               	movlw	0
  2084   0014F0  6E59               	movwf	(___flge@ff2+1)^0,c
  2085   0014F2  0E20               	movlw	32
  2086   0014F4  6E5A               	movwf	(___flge@ff2+2)^0,c
  2087   0014F6  0E41               	movlw	65
  2088   0014F8  6E5B               	movwf	(___flge@ff2+3)^0,c
  2089   0014FA  EC5E  F01F         	call	___flge	;wreg free
  2090   0014FE  B0D8               	btfsc	status,0,c
  2091   001500  EF84  F00A         	goto	u6261
  2092   001504  EF86  F00A         	goto	u6260
  2093   001508                     u6261:
  2094   001508  EFF1  F00A         	goto	l5220
  2095   00150C                     u6260:
  2096   00150C  0E00               	movlw	0
  2097   00150E  6E54               	movwf	___flge@ff1^0,c
  2098   001510  0E00               	movlw	0
  2099   001512  6E55               	movwf	(___flge@ff1+1)^0,c
  2100   001514  0E8C               	movlw	140
  2101   001516  6E56               	movwf	(___flge@ff1+2)^0,c
  2102   001518  0E42               	movlw	66
  2103   00151A  6E57               	movwf	(___flge@ff1+3)^0,c
  2104   00151C  C0F0  F058         	movff	color_cardCheck@S,___flge@ff2
  2105   001520  C0F1  F059         	movff	color_cardCheck@S+1,___flge@ff2+1
  2106   001524  C0F2  F05A         	movff	color_cardCheck@S+2,___flge@ff2+2
  2107   001528  C0F3  F05B         	movff	color_cardCheck@S+3,___flge@ff2+3
  2108   00152C  EC5E  F01F         	call	___flge	;wreg free
  2109   001530  B0D8               	btfsc	status,0,c
  2110   001532  EF9D  F00A         	goto	u6271
  2111   001536  EF9F  F00A         	goto	u6270
  2112   00153A                     u6271:
  2113   00153A  EFF1  F00A         	goto	l5220
  2114   00153E                     u6270:
  2115   00153E  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  2116   001542  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  2117   001546  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  2118   00154A  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  2119   00154E  0E00               	movlw	0
  2120   001550  6E58               	movwf	___flge@ff2^0,c
  2121   001552  0E00               	movlw	0
  2122   001554  6E59               	movwf	(___flge@ff2+1)^0,c
  2123   001556  0E96               	movlw	150
  2124   001558  6E5A               	movwf	(___flge@ff2+2)^0,c
  2125   00155A  0E42               	movlw	66
  2126   00155C  6E5B               	movwf	(___flge@ff2+3)^0,c
  2127   00155E  EC5E  F01F         	call	___flge	;wreg free
  2128   001562  B0D8               	btfsc	status,0,c
  2129   001564  EFB6  F00A         	goto	u6281
  2130   001568  EFB8  F00A         	goto	u6280
  2131   00156C                     u6281:
  2132   00156C  EFF1  F00A         	goto	l5220
  2133   001570                     u6280:
  2134   001570  0E00               	movlw	0
  2135   001572  6E54               	movwf	___flge@ff1^0,c
  2136   001574  0E00               	movlw	0
  2137   001576  6E55               	movwf	(___flge@ff1+1)^0,c
  2138   001578  0E78               	movlw	120
  2139   00157A  6E56               	movwf	(___flge@ff1+2)^0,c
  2140   00157C  0E42               	movlw	66
  2141   00157E  6E57               	movwf	(___flge@ff1+3)^0,c
  2142   001580  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  2143   001584  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  2144   001588  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  2145   00158C  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  2146   001590  EC5E  F01F         	call	___flge	;wreg free
  2147   001594  B0D8               	btfsc	status,0,c
  2148   001596  EFCF  F00A         	goto	u6291
  2149   00159A  EFD1  F00A         	goto	u6290
  2150   00159E                     u6291:
  2151   00159E  EFF1  F00A         	goto	l5220
  2152   0015A2                     u6290:
  2153   0015A2  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  2154   0015A6  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  2155   0015AA  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  2156   0015AE  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  2157   0015B2  0E00               	movlw	0
  2158   0015B4  6E58               	movwf	___flge@ff2^0,c
  2159   0015B6  0E00               	movlw	0
  2160   0015B8  6E59               	movwf	(___flge@ff2+1)^0,c
  2161   0015BA  0E86               	movlw	134
  2162   0015BC  6E5A               	movwf	(___flge@ff2+2)^0,c
  2163   0015BE  0E42               	movlw	66
  2164   0015C0  6E5B               	movwf	(___flge@ff2+3)^0,c
  2165   0015C2  EC5E  F01F         	call	___flge	;wreg free
  2166   0015C6  B0D8               	btfsc	status,0,c
  2167   0015C8  EFE8  F00A         	goto	u6301
  2168   0015CC  EFEA  F00A         	goto	u6300
  2169   0015D0                     u6301:
  2170   0015D0  EFF1  F00A         	goto	l5220
  2171   0015D4                     u6300:
  2172   0015D4  0E00               	movlw	0
  2173   0015D6  0100               	movlb	0	; () banked
  2174   0015D8  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2175   0015DA  0E06               	movlw	6
  2176   0015DC  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  2177   0015DE  EF2B  F00C         	goto	l5248
  2178   0015E2                     l5220:
  2179   0015E2  0E00               	movlw	0
  2180   0015E4  6E54               	movwf	___flge@ff1^0,c
  2181   0015E6  0E00               	movlw	0
  2182   0015E8  6E55               	movwf	(___flge@ff1+1)^0,c
  2183   0015EA  0E94               	movlw	148
  2184   0015EC  6E56               	movwf	(___flge@ff1+2)^0,c
  2185   0015EE  0E42               	movlw	66
  2186   0015F0  6E57               	movwf	(___flge@ff1+3)^0,c
  2187   0015F2  C0EC  F058         	movff	color_cardCheck@H,___flge@ff2
  2188   0015F6  C0ED  F059         	movff	color_cardCheck@H+1,___flge@ff2+1
  2189   0015FA  C0EE  F05A         	movff	color_cardCheck@H+2,___flge@ff2+2
  2190   0015FE  C0EF  F05B         	movff	color_cardCheck@H+3,___flge@ff2+3
  2191   001602  EC5E  F01F         	call	___flge	;wreg free
  2192   001606  B0D8               	btfsc	status,0,c
  2193   001608  EF08  F00B         	goto	u6311
  2194   00160C  EF0A  F00B         	goto	u6310
  2195   001610                     u6311:
  2196   001610  EF8E  F00B         	goto	l5234
  2197   001614                     u6310:
  2198   001614  C0EC  F054         	movff	color_cardCheck@H,___flge@ff1
  2199   001618  C0ED  F055         	movff	color_cardCheck@H+1,___flge@ff1+1
  2200   00161C  C0EE  F056         	movff	color_cardCheck@H+2,___flge@ff1+2
  2201   001620  C0EF  F057         	movff	color_cardCheck@H+3,___flge@ff1+3
  2202   001624  0E00               	movlw	0
  2203   001626  6E58               	movwf	___flge@ff2^0,c
  2204   001628  0E00               	movlw	0
  2205   00162A  6E59               	movwf	(___flge@ff2+1)^0,c
  2206   00162C  0EAA               	movlw	170
  2207   00162E  6E5A               	movwf	(___flge@ff2+2)^0,c
  2208   001630  0E42               	movlw	66
  2209   001632  6E5B               	movwf	(___flge@ff2+3)^0,c
  2210   001634  EC5E  F01F         	call	___flge	;wreg free
  2211   001638  B0D8               	btfsc	status,0,c
  2212   00163A  EF21  F00B         	goto	u6321
  2213   00163E  EF23  F00B         	goto	u6320
  2214   001642                     u6321:
  2215   001642  EF8E  F00B         	goto	l5234
  2216   001646                     u6320:
  2217   001646  0E00               	movlw	0
  2218   001648  6E54               	movwf	___flge@ff1^0,c
  2219   00164A  0E00               	movlw	0
  2220   00164C  6E55               	movwf	(___flge@ff1+1)^0,c
  2221   00164E  0EE0               	movlw	224
  2222   001650  6E56               	movwf	(___flge@ff1+2)^0,c
  2223   001652  0E41               	movlw	65
  2224   001654  6E57               	movwf	(___flge@ff1+3)^0,c
  2225   001656  C0F0  F058         	movff	color_cardCheck@S,___flge@ff2
  2226   00165A  C0F1  F059         	movff	color_cardCheck@S+1,___flge@ff2+1
  2227   00165E  C0F2  F05A         	movff	color_cardCheck@S+2,___flge@ff2+2
  2228   001662  C0F3  F05B         	movff	color_cardCheck@S+3,___flge@ff2+3
  2229   001666  EC5E  F01F         	call	___flge	;wreg free
  2230   00166A  B0D8               	btfsc	status,0,c
  2231   00166C  EF3A  F00B         	goto	u6331
  2232   001670  EF3C  F00B         	goto	u6330
  2233   001674                     u6331:
  2234   001674  EF8E  F00B         	goto	l5234
  2235   001678                     u6330:
  2236   001678  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  2237   00167C  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  2238   001680  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  2239   001684  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  2240   001688  0E00               	movlw	0
  2241   00168A  6E58               	movwf	___flge@ff2^0,c
  2242   00168C  0E00               	movlw	0
  2243   00168E  6E59               	movwf	(___flge@ff2+1)^0,c
  2244   001690  0E04               	movlw	4
  2245   001692  6E5A               	movwf	(___flge@ff2+2)^0,c
  2246   001694  0E42               	movlw	66
  2247   001696  6E5B               	movwf	(___flge@ff2+3)^0,c
  2248   001698  EC5E  F01F         	call	___flge	;wreg free
  2249   00169C  B0D8               	btfsc	status,0,c
  2250   00169E  EF53  F00B         	goto	u6341
  2251   0016A2  EF55  F00B         	goto	u6340
  2252   0016A6                     u6341:
  2253   0016A6  EF8E  F00B         	goto	l5234
  2254   0016AA                     u6340:
  2255   0016AA  0E00               	movlw	0
  2256   0016AC  6E54               	movwf	___flge@ff1^0,c
  2257   0016AE  0E00               	movlw	0
  2258   0016B0  6E55               	movwf	(___flge@ff1+1)^0,c
  2259   0016B2  0E14               	movlw	20
  2260   0016B4  6E56               	movwf	(___flge@ff1+2)^0,c
  2261   0016B6  0E42               	movlw	66
  2262   0016B8  6E57               	movwf	(___flge@ff1+3)^0,c
  2263   0016BA  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  2264   0016BE  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  2265   0016C2  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  2266   0016C6  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  2267   0016CA  EC5E  F01F         	call	___flge	;wreg free
  2268   0016CE  B0D8               	btfsc	status,0,c
  2269   0016D0  EF6C  F00B         	goto	u6351
  2270   0016D4  EF6E  F00B         	goto	u6350
  2271   0016D8                     u6351:
  2272   0016D8  EF8E  F00B         	goto	l5234
  2273   0016DC                     u6350:
  2274   0016DC  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  2275   0016E0  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  2276   0016E4  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  2277   0016E8  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  2278   0016EC  0E00               	movlw	0
  2279   0016EE  6E58               	movwf	___flge@ff2^0,c
  2280   0016F0  0E00               	movlw	0
  2281   0016F2  6E59               	movwf	(___flge@ff2+1)^0,c
  2282   0016F4  0E28               	movlw	40
  2283   0016F6  6E5A               	movwf	(___flge@ff2+2)^0,c
  2284   0016F8  0E42               	movlw	66
  2285   0016FA  6E5B               	movwf	(___flge@ff2+3)^0,c
  2286   0016FC  EC5E  F01F         	call	___flge	;wreg free
  2287   001700  B0D8               	btfsc	status,0,c
  2288   001702  EF85  F00B         	goto	u6361
  2289   001706  EF87  F00B         	goto	u6360
  2290   00170A                     u6361:
  2291   00170A  EF8E  F00B         	goto	l5234
  2292   00170E                     u6360:
  2293   00170E  0E00               	movlw	0
  2294   001710  0100               	movlb	0	; () banked
  2295   001712  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2296   001714  0E07               	movlw	7
  2297   001716  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  2298   001718  EF2B  F00C         	goto	l5248
  2299   00171C                     l5234:
  2300   00171C  0E00               	movlw	0
  2301   00171E  6E54               	movwf	___flge@ff1^0,c
  2302   001720  0E00               	movlw	0
  2303   001722  6E55               	movwf	(___flge@ff1+1)^0,c
  2304   001724  0EB0               	movlw	176
  2305   001726  6E56               	movwf	(___flge@ff1+2)^0,c
  2306   001728  0E41               	movlw	65
  2307   00172A  6E57               	movwf	(___flge@ff1+3)^0,c
  2308   00172C  C0EC  F058         	movff	color_cardCheck@H,___flge@ff2
  2309   001730  C0ED  F059         	movff	color_cardCheck@H+1,___flge@ff2+1
  2310   001734  C0EE  F05A         	movff	color_cardCheck@H+2,___flge@ff2+2
  2311   001738  C0EF  F05B         	movff	color_cardCheck@H+3,___flge@ff2+3
  2312   00173C  EC5E  F01F         	call	___flge	;wreg free
  2313   001740  B0D8               	btfsc	status,0,c
  2314   001742  EFA5  F00B         	goto	u6371
  2315   001746  EFA7  F00B         	goto	u6370
  2316   00174A                     u6371:
  2317   00174A  EF2B  F00C         	goto	l160
  2318   00174E                     u6370:
  2319   00174E  C0EC  F054         	movff	color_cardCheck@H,___flge@ff1
  2320   001752  C0ED  F055         	movff	color_cardCheck@H+1,___flge@ff1+1
  2321   001756  C0EE  F056         	movff	color_cardCheck@H+2,___flge@ff1+2
  2322   00175A  C0EF  F057         	movff	color_cardCheck@H+3,___flge@ff1+3
  2323   00175E  0E00               	movlw	0
  2324   001760  6E58               	movwf	___flge@ff2^0,c
  2325   001762  0E00               	movlw	0
  2326   001764  6E59               	movwf	(___flge@ff2+1)^0,c
  2327   001766  0ED8               	movlw	216
  2328   001768  6E5A               	movwf	(___flge@ff2+2)^0,c
  2329   00176A  0E41               	movlw	65
  2330   00176C  6E5B               	movwf	(___flge@ff2+3)^0,c
  2331   00176E  EC5E  F01F         	call	___flge	;wreg free
  2332   001772  B0D8               	btfsc	status,0,c
  2333   001774  EFBE  F00B         	goto	u6381
  2334   001778  EFC0  F00B         	goto	u6380
  2335   00177C                     u6381:
  2336   00177C  EF2B  F00C         	goto	l160
  2337   001780                     u6380:
  2338   001780  0E00               	movlw	0
  2339   001782  6E54               	movwf	___flge@ff1^0,c
  2340   001784  0E00               	movlw	0
  2341   001786  6E55               	movwf	(___flge@ff1+1)^0,c
  2342   001788  0E40               	movlw	64
  2343   00178A  6E56               	movwf	(___flge@ff1+2)^0,c
  2344   00178C  0E42               	movlw	66
  2345   00178E  6E57               	movwf	(___flge@ff1+3)^0,c
  2346   001790  C0F0  F058         	movff	color_cardCheck@S,___flge@ff2
  2347   001794  C0F1  F059         	movff	color_cardCheck@S+1,___flge@ff2+1
  2348   001798  C0F2  F05A         	movff	color_cardCheck@S+2,___flge@ff2+2
  2349   00179C  C0F3  F05B         	movff	color_cardCheck@S+3,___flge@ff2+3
  2350   0017A0  EC5E  F01F         	call	___flge	;wreg free
  2351   0017A4  B0D8               	btfsc	status,0,c
  2352   0017A6  EFD7  F00B         	goto	u6391
  2353   0017AA  EFD9  F00B         	goto	u6390
  2354   0017AE                     u6391:
  2355   0017AE  EF2B  F00C         	goto	l160
  2356   0017B2                     u6390:
  2357   0017B2  C0F0  F054         	movff	color_cardCheck@S,___flge@ff1
  2358   0017B6  C0F1  F055         	movff	color_cardCheck@S+1,___flge@ff1+1
  2359   0017BA  C0F2  F056         	movff	color_cardCheck@S+2,___flge@ff1+2
  2360   0017BE  C0F3  F057         	movff	color_cardCheck@S+3,___flge@ff1+3
  2361   0017C2  0E00               	movlw	0
  2362   0017C4  6E58               	movwf	___flge@ff2^0,c
  2363   0017C6  0E00               	movlw	0
  2364   0017C8  6E59               	movwf	(___flge@ff2+1)^0,c
  2365   0017CA  0E54               	movlw	84
  2366   0017CC  6E5A               	movwf	(___flge@ff2+2)^0,c
  2367   0017CE  0E42               	movlw	66
  2368   0017D0  6E5B               	movwf	(___flge@ff2+3)^0,c
  2369   0017D2  EC5E  F01F         	call	___flge	;wreg free
  2370   0017D6  B0D8               	btfsc	status,0,c
  2371   0017D8  EFF0  F00B         	goto	u6401
  2372   0017DC  EFF2  F00B         	goto	u6400
  2373   0017E0                     u6401:
  2374   0017E0  EF2B  F00C         	goto	l160
  2375   0017E4                     u6400:
  2376   0017E4  0E00               	movlw	0
  2377   0017E6  6E54               	movwf	___flge@ff1^0,c
  2378   0017E8  0E00               	movlw	0
  2379   0017EA  6E55               	movwf	(___flge@ff1+1)^0,c
  2380   0017EC  0E34               	movlw	52
  2381   0017EE  6E56               	movwf	(___flge@ff1+2)^0,c
  2382   0017F0  0E42               	movlw	66
  2383   0017F2  6E57               	movwf	(___flge@ff1+3)^0,c
  2384   0017F4  C0F4  F058         	movff	color_cardCheck@V,___flge@ff2
  2385   0017F8  C0F5  F059         	movff	color_cardCheck@V+1,___flge@ff2+1
  2386   0017FC  C0F6  F05A         	movff	color_cardCheck@V+2,___flge@ff2+2
  2387   001800  C0F7  F05B         	movff	color_cardCheck@V+3,___flge@ff2+3
  2388   001804  EC5E  F01F         	call	___flge	;wreg free
  2389   001808  B0D8               	btfsc	status,0,c
  2390   00180A  EF09  F00C         	goto	u6411
  2391   00180E  EF0B  F00C         	goto	u6410
  2392   001812                     u6411:
  2393   001812  EF2B  F00C         	goto	l160
  2394   001816                     u6410:
  2395   001816  C0F4  F054         	movff	color_cardCheck@V,___flge@ff1
  2396   00181A  C0F5  F055         	movff	color_cardCheck@V+1,___flge@ff1+1
  2397   00181E  C0F6  F056         	movff	color_cardCheck@V+2,___flge@ff1+2
  2398   001822  C0F7  F057         	movff	color_cardCheck@V+3,___flge@ff1+3
  2399   001826  0E00               	movlw	0
  2400   001828  6E58               	movwf	___flge@ff2^0,c
  2401   00182A  0E00               	movlw	0
  2402   00182C  6E59               	movwf	(___flge@ff2+1)^0,c
  2403   00182E  0E48               	movlw	72
  2404   001830  6E5A               	movwf	(___flge@ff2+2)^0,c
  2405   001832  0E42               	movlw	66
  2406   001834  6E5B               	movwf	(___flge@ff2+3)^0,c
  2407   001836  EC5E  F01F         	call	___flge	;wreg free
  2408   00183A  B0D8               	btfsc	status,0,c
  2409   00183C  EF22  F00C         	goto	u6421
  2410   001840  EF24  F00C         	goto	u6420
  2411   001844                     u6421:
  2412   001844  EF2B  F00C         	goto	l160
  2413   001848                     u6420:
  2414   001848  0E00               	movlw	0
  2415   00184A  0100               	movlb	0	; () banked
  2416   00184C  6FEB               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2417   00184E  0E08               	movlw	8
  2418   001850  6FEA               	movwf	color_cardCheck@card_color& (0+255),b
  2419   001852  EF2B  F00C         	goto	l5248
  2420   001856                     l160:
  2421   001856                     l5248:
  2422                           
  2423                           ;color.c: 241:     return card_color;
  2424   001856  C0EA  F0D8         	movff	color_cardCheck@card_color,?_color_cardCheck
  2425   00185A  C0EB  F0D9         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  2426   00185E  0012               	return		;funcret
  2427   001860                     __end_of_color_cardCheck:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _color_read_Red *****************
  2431 ;; Defined at:
  2432 ;;		line 54 in file "color.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  tmp             2    9[COMRAM] unsigned int 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2    4[COMRAM] unsigned int 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;Total ram usage:        7 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 2
  2453 ;; This function calls:
  2454 ;;		_I2C_2_Master_Read
  2455 ;;		_I2C_2_Master_RepStart
  2456 ;;		_I2C_2_Master_Start
  2457 ;;		_I2C_2_Master_Stop
  2458 ;;		_I2C_2_Master_Write
  2459 ;; This function is called by:
  2460 ;;		_color_cardCheck
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text5
  2465   00438C                     __ptext5:
  2466                           	callstack 0
  2467   00438C                     _color_read_Red:
  2468                           	callstack 27
  2469   00438C                     
  2470                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
  2471   00438C  EC35  F024         	call	_I2C_2_Master_Start	;wreg free
  2472                           
  2473                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  2474   004390  0E52               	movlw	82
  2475   004392  EC2A  F024         	call	_I2C_2_Master_Write
  2476                           
  2477                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x16);
  2478   004396  0EB6               	movlw	182
  2479   004398  EC2A  F024         	call	_I2C_2_Master_Write
  2480                           
  2481                           ;color.c: 60:  I2C_2_Master_RepStart();
  2482   00439C  EC3A  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2483                           
  2484                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  2485   0043A0  0E53               	movlw	83
  2486   0043A2  EC2A  F024         	call	_I2C_2_Master_Write
  2487                           
  2488                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
  2489   0043A6  0E01               	movlw	1
  2490   0043A8  ECFA  F022         	call	_I2C_2_Master_Read
  2491   0043AC  6E07               	movwf	??_color_read_Red^0,c
  2492   0043AE  5007               	movf	??_color_read_Red^0,w,c
  2493   0043B0  6E0A               	movwf	color_read_Red@tmp^0,c
  2494   0043B2  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2495                           
  2496                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2497   0043B4  0E00               	movlw	0
  2498   0043B6  ECFA  F022         	call	_I2C_2_Master_Read
  2499   0043BA  6E07               	movwf	??_color_read_Red^0,c
  2500   0043BC  5007               	movf	??_color_read_Red^0,w,c
  2501   0043BE  6E09               	movwf	(??_color_read_Red+2)^0,c
  2502   0043C0  6A08               	clrf	(??_color_read_Red+1)^0,c
  2503   0043C2  500A               	movf	color_read_Red@tmp^0,w,c
  2504   0043C4  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2505   0043C6  6E0A               	movwf	color_read_Red@tmp^0,c
  2506   0043C8  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2507   0043CA  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2508   0043CC  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2509                           
  2510                           ;color.c: 64:  I2C_2_Master_Stop();
  2511   0043CE  EC30  F024         	call	_I2C_2_Master_Stop	;wreg free
  2512   0043D2                     
  2513                           ;color.c: 65:  return tmp;
  2514   0043D2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2515   0043D6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2516   0043DA  0012               	return		;funcret
  2517   0043DC                     __end_of_color_read_Red:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _color_read_Green *****************
  2521 ;; Defined at:
  2522 ;;		line 68 in file "color.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  tmp             2    9[COMRAM] unsigned int 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    4[COMRAM] unsigned int 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2538 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2540 ;;Total ram usage:        7 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 2
  2543 ;; This function calls:
  2544 ;;		_I2C_2_Master_Read
  2545 ;;		_I2C_2_Master_RepStart
  2546 ;;		_I2C_2_Master_Start
  2547 ;;		_I2C_2_Master_Stop
  2548 ;;		_I2C_2_Master_Write
  2549 ;; This function is called by:
  2550 ;;		_color_cardCheck
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text6
  2555   0043DC                     __ptext6:
  2556                           	callstack 0
  2557   0043DC                     _color_read_Green:
  2558                           	callstack 27
  2559   0043DC                     
  2560                           ;color.c: 70:  unsigned int tmp;;color.c: 71:  I2C_2_Master_Start();
  2561   0043DC  EC35  F024         	call	_I2C_2_Master_Start	;wreg free
  2562                           
  2563                           ;color.c: 72:  I2C_2_Master_Write(0x52 | 0x00);
  2564   0043E0  0E52               	movlw	82
  2565   0043E2  EC2A  F024         	call	_I2C_2_Master_Write
  2566                           
  2567                           ;color.c: 73:  I2C_2_Master_Write(0xA0 | 0x18);
  2568   0043E6  0EB8               	movlw	184
  2569   0043E8  EC2A  F024         	call	_I2C_2_Master_Write
  2570                           
  2571                           ;color.c: 74:  I2C_2_Master_RepStart();
  2572   0043EC  EC3A  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2573                           
  2574                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x01);
  2575   0043F0  0E53               	movlw	83
  2576   0043F2  EC2A  F024         	call	_I2C_2_Master_Write
  2577                           
  2578                           ;color.c: 76:  tmp=I2C_2_Master_Read(1);
  2579   0043F6  0E01               	movlw	1
  2580   0043F8  ECFA  F022         	call	_I2C_2_Master_Read
  2581   0043FC  6E07               	movwf	??_color_read_Green^0,c
  2582   0043FE  5007               	movf	??_color_read_Green^0,w,c
  2583   004400  6E0A               	movwf	color_read_Green@tmp^0,c
  2584   004402  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2585                           
  2586                           ;color.c: 77:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2587   004404  0E00               	movlw	0
  2588   004406  ECFA  F022         	call	_I2C_2_Master_Read
  2589   00440A  6E07               	movwf	??_color_read_Green^0,c
  2590   00440C  5007               	movf	??_color_read_Green^0,w,c
  2591   00440E  6E09               	movwf	(??_color_read_Green+2)^0,c
  2592   004410  6A08               	clrf	(??_color_read_Green+1)^0,c
  2593   004412  500A               	movf	color_read_Green@tmp^0,w,c
  2594   004414  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2595   004416  6E0A               	movwf	color_read_Green@tmp^0,c
  2596   004418  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2597   00441A  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2598   00441C  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2599                           
  2600                           ;color.c: 78:  I2C_2_Master_Stop();
  2601   00441E  EC30  F024         	call	_I2C_2_Master_Stop	;wreg free
  2602   004422                     
  2603                           ;color.c: 79:  return tmp;
  2604   004422  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2605   004426  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2606   00442A  0012               	return		;funcret
  2607   00442C                     __end_of_color_read_Green:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _color_read_Clear *****************
  2611 ;; Defined at:
  2612 ;;		line 96 in file "color.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  tmp             2    9[COMRAM] unsigned int 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2    4[COMRAM] unsigned int 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;Total ram usage:        7 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 2
  2633 ;; This function calls:
  2634 ;;		_I2C_2_Master_Read
  2635 ;;		_I2C_2_Master_RepStart
  2636 ;;		_I2C_2_Master_Start
  2637 ;;		_I2C_2_Master_Stop
  2638 ;;		_I2C_2_Master_Write
  2639 ;; This function is called by:
  2640 ;;		_color_cardCheck
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text7
  2645   00442C                     __ptext7:
  2646                           	callstack 0
  2647   00442C                     _color_read_Clear:
  2648                           	callstack 27
  2649   00442C                     
  2650                           ;color.c: 100:  unsigned int tmp;;color.c: 101:  I2C_2_Master_Start();
  2651   00442C  EC35  F024         	call	_I2C_2_Master_Start	;wreg free
  2652                           
  2653                           ;color.c: 102:  I2C_2_Master_Write(0x52 | 0x00);
  2654   004430  0E52               	movlw	82
  2655   004432  EC2A  F024         	call	_I2C_2_Master_Write
  2656                           
  2657                           ;color.c: 103:  I2C_2_Master_Write(0xA0 | 0x14);
  2658   004436  0EB4               	movlw	180
  2659   004438  EC2A  F024         	call	_I2C_2_Master_Write
  2660                           
  2661                           ;color.c: 104:  I2C_2_Master_RepStart();
  2662   00443C  EC3A  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2663                           
  2664                           ;color.c: 105:  I2C_2_Master_Write(0x52 | 0x01);
  2665   004440  0E53               	movlw	83
  2666   004442  EC2A  F024         	call	_I2C_2_Master_Write
  2667                           
  2668                           ;color.c: 106:  tmp=I2C_2_Master_Read(1);
  2669   004446  0E01               	movlw	1
  2670   004448  ECFA  F022         	call	_I2C_2_Master_Read
  2671   00444C  6E07               	movwf	??_color_read_Clear^0,c
  2672   00444E  5007               	movf	??_color_read_Clear^0,w,c
  2673   004450  6E0A               	movwf	color_read_Clear@tmp^0,c
  2674   004452  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2675                           
  2676                           ;color.c: 107:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2677   004454  0E00               	movlw	0
  2678   004456  ECFA  F022         	call	_I2C_2_Master_Read
  2679   00445A  6E07               	movwf	??_color_read_Clear^0,c
  2680   00445C  5007               	movf	??_color_read_Clear^0,w,c
  2681   00445E  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2682   004460  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2683   004462  500A               	movf	color_read_Clear@tmp^0,w,c
  2684   004464  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2685   004466  6E0A               	movwf	color_read_Clear@tmp^0,c
  2686   004468  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2687   00446A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2688   00446C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2689                           
  2690                           ;color.c: 108:  I2C_2_Master_Stop();
  2691   00446E  EC30  F024         	call	_I2C_2_Master_Stop	;wreg free
  2692   004472                     
  2693                           ;color.c: 109:  return tmp;
  2694   004472  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2695   004476  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2696   00447A  0012               	return		;funcret
  2697   00447C                     __end_of_color_read_Clear:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _color_read_Blue *****************
  2701 ;; Defined at:
  2702 ;;		line 82 in file "color.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  tmp             2    9[COMRAM] unsigned int 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  2    4[COMRAM] unsigned int 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;Total ram usage:        7 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 2
  2723 ;; This function calls:
  2724 ;;		_I2C_2_Master_Read
  2725 ;;		_I2C_2_Master_RepStart
  2726 ;;		_I2C_2_Master_Start
  2727 ;;		_I2C_2_Master_Stop
  2728 ;;		_I2C_2_Master_Write
  2729 ;; This function is called by:
  2730 ;;		_color_cardCheck
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text8
  2735   00447C                     __ptext8:
  2736                           	callstack 0
  2737   00447C                     _color_read_Blue:
  2738                           	callstack 27
  2739   00447C                     
  2740                           ;color.c: 84:  unsigned int tmp;;color.c: 85:  I2C_2_Master_Start();
  2741   00447C  EC35  F024         	call	_I2C_2_Master_Start	;wreg free
  2742                           
  2743                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  2744   004480  0E52               	movlw	82
  2745   004482  EC2A  F024         	call	_I2C_2_Master_Write
  2746                           
  2747                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x1A);
  2748   004486  0EBA               	movlw	186
  2749   004488  EC2A  F024         	call	_I2C_2_Master_Write
  2750                           
  2751                           ;color.c: 88:  I2C_2_Master_RepStart();
  2752   00448C  EC3A  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2753                           
  2754                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  2755   004490  0E53               	movlw	83
  2756   004492  EC2A  F024         	call	_I2C_2_Master_Write
  2757                           
  2758                           ;color.c: 90:  tmp=I2C_2_Master_Read(1);
  2759   004496  0E01               	movlw	1
  2760   004498  ECFA  F022         	call	_I2C_2_Master_Read
  2761   00449C  6E07               	movwf	??_color_read_Blue^0,c
  2762   00449E  5007               	movf	??_color_read_Blue^0,w,c
  2763   0044A0  6E0A               	movwf	color_read_Blue@tmp^0,c
  2764   0044A2  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2765                           
  2766                           ;color.c: 91:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2767   0044A4  0E00               	movlw	0
  2768   0044A6  ECFA  F022         	call	_I2C_2_Master_Read
  2769   0044AA  6E07               	movwf	??_color_read_Blue^0,c
  2770   0044AC  5007               	movf	??_color_read_Blue^0,w,c
  2771   0044AE  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2772   0044B0  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2773   0044B2  500A               	movf	color_read_Blue@tmp^0,w,c
  2774   0044B4  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2775   0044B6  6E0A               	movwf	color_read_Blue@tmp^0,c
  2776   0044B8  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2777   0044BA  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2778   0044BC  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2779                           
  2780                           ;color.c: 92:  I2C_2_Master_Stop();
  2781   0044BE  EC30  F024         	call	_I2C_2_Master_Stop	;wreg free
  2782   0044C2                     
  2783                           ;color.c: 93:  return tmp;
  2784   0044C2  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2785   0044C6  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2786   0044CA  0012               	return		;funcret
  2787   0044CC                     __end_of_color_read_Blue:
  2788                           	callstack 0
  2789                           
  2790 ;; *************** function _I2C_2_Master_Write *****************
  2791 ;; Defined at:
  2792 ;;		line 45 in file "i2c.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  data_byte       1    wreg     unsigned char 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  data_byte       1    1[COMRAM] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;Total ram usage:        1 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 1
  2813 ;; This function calls:
  2814 ;;		_I2C_2_Master_Idle
  2815 ;; This function is called by:
  2816 ;;		_color_writetoaddr
  2817 ;;		_color_read_Red
  2818 ;;		_color_read_Green
  2819 ;;		_color_read_Blue
  2820 ;;		_color_read_Clear
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text9
  2825   004854                     __ptext9:
  2826                           	callstack 0
  2827   004854                     _I2C_2_Master_Write:
  2828                           	callstack 27
  2829                           
  2830                           ;incstack = 0
  2831                           ;I2C_2_Master_Write@data_byte stored from wreg
  2832   004854  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2833   004856                     
  2834                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2835   004856  ECE1  F023         	call	_I2C_2_Master_Idle	;wreg free
  2836   00485A                     
  2837                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2838   00485A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2839   00485E  0012               	return		;funcret
  2840   004860                     __end_of_I2C_2_Master_Write:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _I2C_2_Master_Stop *****************
  2844 ;; Defined at:
  2845 ;;		line 39 in file "i2c.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 1
  2866 ;; This function calls:
  2867 ;;		_I2C_2_Master_Idle
  2868 ;; This function is called by:
  2869 ;;		_color_writetoaddr
  2870 ;;		_color_read_Red
  2871 ;;		_color_read_Green
  2872 ;;		_color_read_Blue
  2873 ;;		_color_read_Clear
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text10
  2878   004860                     __ptext10:
  2879                           	callstack 0
  2880   004860                     _I2C_2_Master_Stop:
  2881                           	callstack 27
  2882   004860                     
  2883                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2884   004860  ECE1  F023         	call	_I2C_2_Master_Idle	;wreg free
  2885   004864                     
  2886                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2887   004864  010E               	movlb	14	; () banked
  2888   004866  85DA               	bsf	218,2,b	;volatile
  2889   004868                     
  2890                           ; BSR set to: 14
  2891   004868  0012               	return		;funcret
  2892   00486A                     __end_of_I2C_2_Master_Stop:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _I2C_2_Master_Start *****************
  2896 ;; Defined at:
  2897 ;;		line 27 in file "i2c.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 1
  2918 ;; This function calls:
  2919 ;;		_I2C_2_Master_Idle
  2920 ;; This function is called by:
  2921 ;;		_color_writetoaddr
  2922 ;;		_color_read_Red
  2923 ;;		_color_read_Green
  2924 ;;		_color_read_Blue
  2925 ;;		_color_read_Clear
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text11
  2930   00486A                     __ptext11:
  2931                           	callstack 0
  2932   00486A                     _I2C_2_Master_Start:
  2933                           	callstack 27
  2934   00486A                     
  2935                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2936   00486A  ECE1  F023         	call	_I2C_2_Master_Idle	;wreg free
  2937   00486E                     
  2938                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2939   00486E  010E               	movlb	14	; () banked
  2940   004870  81DA               	bsf	218,0,b	;volatile
  2941   004872                     
  2942                           ; BSR set to: 14
  2943   004872  0012               	return		;funcret
  2944   004874                     __end_of_I2C_2_Master_Start:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _I2C_2_Master_RepStart *****************
  2948 ;; Defined at:
  2949 ;;		line 33 in file "i2c.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		_I2C_2_Master_Idle
  2972 ;; This function is called by:
  2973 ;;		_color_read_Red
  2974 ;;		_color_read_Green
  2975 ;;		_color_read_Blue
  2976 ;;		_color_read_Clear
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text12
  2981   004874                     __ptext12:
  2982                           	callstack 0
  2983   004874                     _I2C_2_Master_RepStart:
  2984                           	callstack 27
  2985   004874                     
  2986                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2987   004874  ECE1  F023         	call	_I2C_2_Master_Idle	;wreg free
  2988   004878                     
  2989                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2990   004878  010E               	movlb	14	; () banked
  2991   00487A  83DA               	bsf	218,1,b	;volatile
  2992   00487C                     
  2993                           ; BSR set to: 14
  2994   00487C  0012               	return		;funcret
  2995   00487E                     __end_of_I2C_2_Master_RepStart:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _I2C_2_Master_Read *****************
  2999 ;; Defined at:
  3000 ;;		line 51 in file "i2c.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  ack             1    wreg     unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  ack             1    2[COMRAM] unsigned char 
  3005 ;;  tmp             1    3[COMRAM] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      unsigned char 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;Total ram usage:        3 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 1
  3022 ;; This function calls:
  3023 ;;		_I2C_2_Master_Idle
  3024 ;; This function is called by:
  3025 ;;		_color_read_Red
  3026 ;;		_color_read_Green
  3027 ;;		_color_read_Blue
  3028 ;;		_color_read_Clear
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text13
  3033   0045F4                     __ptext13:
  3034                           	callstack 0
  3035   0045F4                     _I2C_2_Master_Read:
  3036                           	callstack 27
  3037                           
  3038                           ; BSR set to: 14
  3039                           ;incstack = 0
  3040                           ;I2C_2_Master_Read@ack stored from wreg
  3041   0045F4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3042   0045F6                     
  3043                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3044   0045F6  ECE1  F023         	call	_I2C_2_Master_Idle	;wreg free
  3045   0045FA                     
  3046                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3047   0045FA  010E               	movlb	14	; () banked
  3048   0045FC  87DA               	bsf	218,3,b	;volatile
  3049                           
  3050                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3051   0045FE  ECE1  F023         	call	_I2C_2_Master_Idle	;wreg free
  3052   004602                     
  3053                           ;i2c.c: 57:   tmp = SSP2BUF;
  3054   004602  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3055                           
  3056                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3057   004606  ECE1  F023         	call	_I2C_2_Master_Idle	;wreg free
  3058   00460A                     
  3059                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3060   00460A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3061   00460C  B4D8               	btfsc	status,2,c
  3062   00460E  EF0B  F023         	goto	u4531
  3063   004612  EF0F  F023         	goto	u4530
  3064   004616                     u4531:
  3065   004616  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3066   004618  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3067   00461A  EF10  F023         	goto	u4548
  3068   00461E                     u4530:
  3069   00461E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3070   004620                     u4548:
  3071   004620  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3072   004622  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3073   004624  010E               	movlb	14	; () banked
  3074   004626  51DA               	movf	218,w,b	;volatile
  3075   004628  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3076   00462A  0BDF               	andlw	-33
  3077   00462C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3078   00462E  6FDA               	movwf	218,b	;volatile
  3079   004630                     
  3080                           ; BSR set to: 14
  3081                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3082   004630  89DA               	bsf	218,4,b	;volatile
  3083   004632                     
  3084                           ; BSR set to: 14
  3085                           ;i2c.c: 61:   return tmp;
  3086   004632  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3087   004634                     
  3088                           ; BSR set to: 14
  3089   004634  0012               	return		;funcret
  3090   004636                     __end_of_I2C_2_Master_Read:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function _I2C_2_Master_Idle *****************
  3094 ;; Defined at:
  3095 ;;		line 22 in file "i2c.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;Total ram usage:        1 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_I2C_2_Master_Start
  3119 ;;		_I2C_2_Master_RepStart
  3120 ;;		_I2C_2_Master_Stop
  3121 ;;		_I2C_2_Master_Write
  3122 ;;		_I2C_2_Master_Read
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text14
  3127   0047C2                     __ptext14:
  3128                           	callstack 0
  3129   0047C2                     _I2C_2_Master_Idle:
  3130                           	callstack 27
  3131   0047C2                     l320:
  3132   0047C2  010E               	movlb	14	; () banked
  3133   0047C4  B5D8               	btfsc	216,2,b	;volatile
  3134   0047C6  EFE7  F023         	goto	u4391
  3135   0047CA  EFE9  F023         	goto	u4390
  3136   0047CE                     u4391:
  3137   0047CE  EFE1  F023         	goto	l320
  3138   0047D2                     u4390:
  3139   0047D2                     
  3140                           ; BSR set to: 14
  3141   0047D2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3142   0047D6  0E1F               	movlw	31
  3143   0047D8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3144   0047DA  A4D8               	btfss	status,2,c
  3145   0047DC  EFF2  F023         	goto	u4401
  3146   0047E0  EFF4  F023         	goto	u4400
  3147   0047E4                     u4401:
  3148   0047E4  EFE1  F023         	goto	l320
  3149   0047E8                     u4400:
  3150   0047E8                     
  3151                           ; BSR set to: 14
  3152   0047E8  0012               	return		;funcret
  3153   0047EA                     __end_of_I2C_2_Master_Idle:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _RGB_to_HSV *****************
  3157 ;; Defined at:
  3158 ;;		line 133 in file "color.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  R               4   99[BANK0 ] float 
  3161 ;;  G               4  103[BANK0 ] float 
  3162 ;;  B               4  107[BANK0 ] float 
  3163 ;;  C               4  111[BANK0 ] float 
  3164 ;;  H               1  115[BANK0 ] PTR float 
  3165 ;;		 -> color_cardCheck@H(4), 
  3166 ;;  S               1  116[BANK0 ] PTR float 
  3167 ;;		 -> color_cardCheck@S(4), 
  3168 ;;  V               1  117[BANK0 ] PTR float 
  3169 ;;		 -> color_cardCheck@V(4), 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  senddata       25    0[BANK1 ] unsigned char [25]
  3172 ;;  b               4   93[BANK1 ] float 
  3173 ;;  g               4   89[BANK1 ] float 
  3174 ;;  r               4   85[BANK1 ] float 
  3175 ;;  maxRGB          4   81[BANK1 ] float 
  3176 ;;  deltaRGB        4   77[BANK1 ] float 
  3177 ;;  H_temp          4   73[BANK1 ] float 
  3178 ;;  minRGB          4   57[BANK1 ] float 
  3179 ;;  c_norm          4   29[BANK1 ] float 
  3180 ;;  c               4   25[BANK1 ] float 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3190 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;      Locals:         0       0      97       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Totals:         0      21      97       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;Total ram usage:      118 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 8
  3197 ;; This function calls:
  3198 ;;		___fladd
  3199 ;;		___fldiv
  3200 ;;		___fleq
  3201 ;;		___flge
  3202 ;;		___flmul
  3203 ;;		___flsub
  3204 ;;		_custom_floatmodulo
  3205 ;;		_sendStringSerial4
  3206 ;;		_sprintf
  3207 ;; This function is called by:
  3208 ;;		_color_cardCheck
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text15
  3213   002248                     __ptext15:
  3214                           	callstack 0
  3215   002248                     _RGB_to_HSV:
  3216                           	callstack 21
  3217   002248                     
  3218                           ;color.c: 139:     float r = R;
  3219   002248  C0C3  F1DE         	movff	RGB_to_HSV@R,RGB_to_HSV@r
  3220   00224C  C0C4  F1DF         	movff	RGB_to_HSV@R+1,RGB_to_HSV@r+1
  3221   002250  C0C5  F1E0         	movff	RGB_to_HSV@R+2,RGB_to_HSV@r+2
  3222   002254  C0C6  F1E1         	movff	RGB_to_HSV@R+3,RGB_to_HSV@r+3
  3223                           
  3224                           ;color.c: 140:     float g = G;
  3225   002258  C0C7  F1E2         	movff	RGB_to_HSV@G,RGB_to_HSV@g
  3226   00225C  C0C8  F1E3         	movff	RGB_to_HSV@G+1,RGB_to_HSV@g+1
  3227   002260  C0C9  F1E4         	movff	RGB_to_HSV@G+2,RGB_to_HSV@g+2
  3228   002264  C0CA  F1E5         	movff	RGB_to_HSV@G+3,RGB_to_HSV@g+3
  3229                           
  3230                           ;color.c: 141:     float b = B;
  3231   002268  C0CB  F1E6         	movff	RGB_to_HSV@B,RGB_to_HSV@b
  3232   00226C  C0CC  F1E7         	movff	RGB_to_HSV@B+1,RGB_to_HSV@b+1
  3233   002270  C0CD  F1E8         	movff	RGB_to_HSV@B+2,RGB_to_HSV@b+2
  3234   002274  C0CE  F1E9         	movff	RGB_to_HSV@B+3,RGB_to_HSV@b+3
  3235                           
  3236                           ;color.c: 142:     float c = C;
  3237   002278  C0CF  F1A2         	movff	RGB_to_HSV@C,RGB_to_HSV@c
  3238   00227C  C0D0  F1A3         	movff	RGB_to_HSV@C+1,RGB_to_HSV@c+1
  3239   002280  C0D1  F1A4         	movff	RGB_to_HSV@C+2,RGB_to_HSV@c+2
  3240   002284  C0D2  F1A5         	movff	RGB_to_HSV@C+3,RGB_to_HSV@c+3
  3241   002288                     
  3242                           ;color.c: 145:     char senddata[25];;color.c: 146:     sprintf(senddata,"r:%.2f g: %.2f
      +                           b: %.2f c:%.2f",r,g,b,c);
  3243   002288  0E89               	movlw	low RGB_to_HSV@senddata
  3244   00228A  0100               	movlb	0	; () banked
  3245   00228C  6FA3               	movwf	sprintf@s& (0+255),b
  3246   00228E  0E01               	movlw	high RGB_to_HSV@senddata
  3247   002290  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  3248   002292  0E01               	movlw	low STR_1
  3249   002294  6FA5               	movwf	sprintf@fmt& (0+255),b
  3250   002296  C1DE  F0A6         	movff	RGB_to_HSV@r,?_sprintf+3
  3251   00229A  C1DF  F0A7         	movff	RGB_to_HSV@r+1,?_sprintf+4
  3252   00229E  C1E0  F0A8         	movff	RGB_to_HSV@r+2,?_sprintf+5
  3253   0022A2  C1E1  F0A9         	movff	RGB_to_HSV@r+3,?_sprintf+6
  3254   0022A6  C1E2  F0AA         	movff	RGB_to_HSV@g,?_sprintf+7
  3255   0022AA  C1E3  F0AB         	movff	RGB_to_HSV@g+1,?_sprintf+8
  3256   0022AE  C1E4  F0AC         	movff	RGB_to_HSV@g+2,?_sprintf+9
  3257   0022B2  C1E5  F0AD         	movff	RGB_to_HSV@g+3,?_sprintf+10
  3258   0022B6  C1E6  F0AE         	movff	RGB_to_HSV@b,?_sprintf+11
  3259   0022BA  C1E7  F0AF         	movff	RGB_to_HSV@b+1,?_sprintf+12
  3260   0022BE  C1E8  F0B0         	movff	RGB_to_HSV@b+2,?_sprintf+13
  3261   0022C2  C1E9  F0B1         	movff	RGB_to_HSV@b+3,?_sprintf+14
  3262   0022C6  C1A2  F0B2         	movff	RGB_to_HSV@c,?_sprintf+15
  3263   0022CA  C1A3  F0B3         	movff	RGB_to_HSV@c+1,?_sprintf+16
  3264   0022CE  C1A4  F0B4         	movff	RGB_to_HSV@c+2,?_sprintf+17
  3265   0022D2  C1A5  F0B5         	movff	RGB_to_HSV@c+3,?_sprintf+18
  3266   0022D6  EC1B  F023         	call	_sprintf	;wreg free
  3267   0022DA                     
  3268                           ;color.c: 147:     sendStringSerial4(senddata);
  3269   0022DA  0E89               	movlw	low RGB_to_HSV@senddata
  3270   0022DC  6E02               	movwf	sendStringSerial4@string^0,c
  3271   0022DE  0E01               	movlw	high RGB_to_HSV@senddata
  3272   0022E0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3273   0022E2  ECB4  F023         	call	_sendStringSerial4	;wreg free
  3274   0022E6                     
  3275                           ;color.c: 148:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3276   0022E6  0E05               	movlw	5
  3277   0022E8  0100               	movlb	0	; () banked
  3278   0022EA  6FD7               	movwf	(??_RGB_to_HSV+1)& (0+255),b
  3279   0022EC  0E0F               	movlw	15
  3280   0022EE  6FD6               	movwf	??_RGB_to_HSV& (0+255),b
  3281   0022F0  0EF1               	movlw	241
  3282   0022F2                     u6447:
  3283   0022F2  2EE8               	decfsz	wreg,f,c
  3284   0022F4  D7FE               	bra	u6447
  3285   0022F6  2FD6               	decfsz	??_RGB_to_HSV& (0+255),f,b
  3286   0022F8  D7FC               	bra	u6447
  3287   0022FA  2FD7               	decfsz	(??_RGB_to_HSV+1)& (0+255),f,b
  3288   0022FC  D7FA               	bra	u6447
  3289   0022FE                     
  3290                           ;color.c: 154:     float c_norm = 1.0 /(C/65535.0);
  3291   0022FE  0E00               	movlw	0
  3292   002300  6E26               	movwf	___fldiv@a^0,c
  3293   002302  0EFF               	movlw	255
  3294   002304  6E27               	movwf	(___fldiv@a+1)^0,c
  3295   002306  0E7F               	movlw	127
  3296   002308  6E28               	movwf	(___fldiv@a+2)^0,c
  3297   00230A  0E47               	movlw	71
  3298   00230C  6E29               	movwf	(___fldiv@a+3)^0,c
  3299   00230E  C0CF  F022         	movff	RGB_to_HSV@C,___fldiv@b
  3300   002312  C0D0  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  3301   002316  C0D1  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  3302   00231A  C0D2  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  3303   00231E  EC87  F019         	call	___fldiv	;wreg free
  3304   002322  C022  F1AA         	movff	?___fldiv,_RGB_to_HSV$2734
  3305   002326  C023  F1AB         	movff	?___fldiv+1,_RGB_to_HSV$2734+1
  3306   00232A  C024  F1AC         	movff	?___fldiv+2,_RGB_to_HSV$2734+2
  3307   00232E  C025  F1AD         	movff	?___fldiv+3,_RGB_to_HSV$2734+3
  3308   002332                     
  3309                           ;color.c: 154:     float c_norm = 1.0 /(C/65535.0);
  3310   002332  0E00               	movlw	0
  3311   002334  6E22               	movwf	___fldiv@b^0,c
  3312   002336  0E00               	movlw	0
  3313   002338  6E23               	movwf	(___fldiv@b+1)^0,c
  3314   00233A  0E80               	movlw	128
  3315   00233C  6E24               	movwf	(___fldiv@b+2)^0,c
  3316   00233E  0E3F               	movlw	63
  3317   002340  6E25               	movwf	(___fldiv@b+3)^0,c
  3318   002342  C1AA  F026         	movff	_RGB_to_HSV$2734,___fldiv@a
  3319   002346  C1AB  F027         	movff	_RGB_to_HSV$2734+1,___fldiv@a+1
  3320   00234A  C1AC  F028         	movff	_RGB_to_HSV$2734+2,___fldiv@a+2
  3321   00234E  C1AD  F029         	movff	_RGB_to_HSV$2734+3,___fldiv@a+3
  3322   002352  EC87  F019         	call	___fldiv	;wreg free
  3323   002356  C022  F1A6         	movff	?___fldiv,RGB_to_HSV@c_norm
  3324   00235A  C023  F1A7         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  3325   00235E  C024  F1A8         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  3326   002362  C025  F1A9         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  3327   002366                     
  3328                           ;color.c: 157:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  3329   002366  C1E2  F054         	movff	RGB_to_HSV@g,___flge@ff1
  3330   00236A  C1E3  F055         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  3331   00236E  C1E4  F056         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  3332   002372  C1E5  F057         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  3333   002376  C1DE  F058         	movff	RGB_to_HSV@r,___flge@ff2
  3334   00237A  C1DF  F059         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  3335   00237E  C1E0  F05A         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  3336   002382  C1E1  F05B         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  3337   002386  EC5E  F01F         	call	___flge	;wreg free
  3338   00238A  A0D8               	btfss	status,0,c
  3339   00238C  EFCA  F011         	goto	u5861
  3340   002390  EFCC  F011         	goto	u5860
  3341   002394                     u5861:
  3342   002394  EF01  F012         	goto	l5082
  3343   002398                     u5860:
  3344   002398  C1E6  F054         	movff	RGB_to_HSV@b,___flge@ff1
  3345   00239C  C1E7  F055         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  3346   0023A0  C1E8  F056         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  3347   0023A4  C1E9  F057         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  3348   0023A8  C1E2  F058         	movff	RGB_to_HSV@g,___flge@ff2
  3349   0023AC  C1E3  F059         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  3350   0023B0  C1E4  F05A         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  3351   0023B4  C1E5  F05B         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  3352   0023B8  EC5E  F01F         	call	___flge	;wreg free
  3353   0023BC  A0D8               	btfss	status,0,c
  3354   0023BE  EFE3  F011         	goto	u5871
  3355   0023C2  EFE5  F011         	goto	u5870
  3356   0023C6                     u5871:
  3357   0023C6  EFEF  F011         	goto	l119
  3358   0023CA                     u5870:
  3359   0023CA  C1E6  F1BA         	movff	RGB_to_HSV@b,_RGB_to_HSV$626
  3360   0023CE  C1E7  F1BB         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$626+1
  3361   0023D2  C1E8  F1BC         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$626+2
  3362   0023D6  C1E9  F1BD         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$626+3
  3363   0023DA  EFF7  F011         	goto	l121
  3364   0023DE                     l119:
  3365   0023DE  C1E2  F1BA         	movff	RGB_to_HSV@g,_RGB_to_HSV$626
  3366   0023E2  C1E3  F1BB         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$626+1
  3367   0023E6  C1E4  F1BC         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$626+2
  3368   0023EA  C1E5  F1BD         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$626+3
  3369   0023EE                     l121:
  3370   0023EE  C1BA  F1DA         	movff	_RGB_to_HSV$626,RGB_to_HSV@maxRGB
  3371   0023F2  C1BB  F1DB         	movff	_RGB_to_HSV$626+1,RGB_to_HSV@maxRGB+1
  3372   0023F6  C1BC  F1DC         	movff	_RGB_to_HSV$626+2,RGB_to_HSV@maxRGB+2
  3373   0023FA  C1BD  F1DD         	movff	_RGB_to_HSV$626+3,RGB_to_HSV@maxRGB+3
  3374   0023FE  EF34  F012         	goto	l5086
  3375   002402                     l5082:
  3376   002402  C1E6  F054         	movff	RGB_to_HSV@b,___flge@ff1
  3377   002406  C1E7  F055         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  3378   00240A  C1E8  F056         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  3379   00240E  C1E9  F057         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  3380   002412  C1DE  F058         	movff	RGB_to_HSV@r,___flge@ff2
  3381   002416  C1DF  F059         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  3382   00241A  C1E0  F05A         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  3383   00241E  C1E1  F05B         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  3384   002422  EC5E  F01F         	call	___flge	;wreg free
  3385   002426  A0D8               	btfss	status,0,c
  3386   002428  EF18  F012         	goto	u5881
  3387   00242C  EF1A  F012         	goto	u5880
  3388   002430                     u5881:
  3389   002430  EF24  F012         	goto	l123
  3390   002434                     u5880:
  3391   002434  C1E6  F1BE         	movff	RGB_to_HSV@b,_RGB_to_HSV$627
  3392   002438  C1E7  F1BF         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$627+1
  3393   00243C  C1E8  F1C0         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$627+2
  3394   002440  C1E9  F1C1         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$627+3
  3395   002444  EF2C  F012         	goto	l125
  3396   002448                     l123:
  3397   002448  C1DE  F1BE         	movff	RGB_to_HSV@r,_RGB_to_HSV$627
  3398   00244C  C1DF  F1BF         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$627+1
  3399   002450  C1E0  F1C0         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$627+2
  3400   002454  C1E1  F1C1         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$627+3
  3401   002458                     l125:
  3402   002458  C1BE  F1DA         	movff	_RGB_to_HSV$627,RGB_to_HSV@maxRGB
  3403   00245C  C1BF  F1DB         	movff	_RGB_to_HSV$627+1,RGB_to_HSV@maxRGB+1
  3404   002460  C1C0  F1DC         	movff	_RGB_to_HSV$627+2,RGB_to_HSV@maxRGB+2
  3405   002464  C1C1  F1DD         	movff	_RGB_to_HSV$627+3,RGB_to_HSV@maxRGB+3
  3406   002468                     l5086:
  3407                           
  3408                           ;color.c: 158:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  3409   002468  C1DE  F054         	movff	RGB_to_HSV@r,___flge@ff1
  3410   00246C  C1DF  F055         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  3411   002470  C1E0  F056         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  3412   002474  C1E1  F057         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  3413   002478  C1E2  F058         	movff	RGB_to_HSV@g,___flge@ff2
  3414   00247C  C1E3  F059         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  3415   002480  C1E4  F05A         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  3416   002484  C1E5  F05B         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  3417   002488  EC5E  F01F         	call	___flge	;wreg free
  3418   00248C  A0D8               	btfss	status,0,c
  3419   00248E  EF4B  F012         	goto	u5891
  3420   002492  EF4D  F012         	goto	u5890
  3421   002496                     u5891:
  3422   002496  EF82  F012         	goto	l5092
  3423   00249A                     u5890:
  3424   00249A  C1E2  F054         	movff	RGB_to_HSV@g,___flge@ff1
  3425   00249E  C1E3  F055         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  3426   0024A2  C1E4  F056         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  3427   0024A6  C1E5  F057         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  3428   0024AA  C1E6  F058         	movff	RGB_to_HSV@b,___flge@ff2
  3429   0024AE  C1E7  F059         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  3430   0024B2  C1E8  F05A         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  3431   0024B6  C1E9  F05B         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  3432   0024BA  EC5E  F01F         	call	___flge	;wreg free
  3433   0024BE  A0D8               	btfss	status,0,c
  3434   0024C0  EF64  F012         	goto	u5901
  3435   0024C4  EF66  F012         	goto	u5900
  3436   0024C8                     u5901:
  3437   0024C8  EF70  F012         	goto	l131
  3438   0024CC                     u5900:
  3439   0024CC  C1E6  F1C6         	movff	RGB_to_HSV@b,_RGB_to_HSV$629
  3440   0024D0  C1E7  F1C7         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$629+1
  3441   0024D4  C1E8  F1C8         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$629+2
  3442   0024D8  C1E9  F1C9         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$629+3
  3443   0024DC  EF78  F012         	goto	l133
  3444   0024E0                     l131:
  3445   0024E0  C1E2  F1C6         	movff	RGB_to_HSV@g,_RGB_to_HSV$629
  3446   0024E4  C1E3  F1C7         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$629+1
  3447   0024E8  C1E4  F1C8         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$629+2
  3448   0024EC  C1E5  F1C9         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$629+3
  3449   0024F0                     l133:
  3450   0024F0  C1C6  F1C2         	movff	_RGB_to_HSV$629,RGB_to_HSV@minRGB
  3451   0024F4  C1C7  F1C3         	movff	_RGB_to_HSV$629+1,RGB_to_HSV@minRGB+1
  3452   0024F8  C1C8  F1C4         	movff	_RGB_to_HSV$629+2,RGB_to_HSV@minRGB+2
  3453   0024FC  C1C9  F1C5         	movff	_RGB_to_HSV$629+3,RGB_to_HSV@minRGB+3
  3454   002500  EFB5  F012         	goto	l5096
  3455   002504                     l5092:
  3456   002504  C1DE  F054         	movff	RGB_to_HSV@r,___flge@ff1
  3457   002508  C1DF  F055         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  3458   00250C  C1E0  F056         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  3459   002510  C1E1  F057         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  3460   002514  C1E6  F058         	movff	RGB_to_HSV@b,___flge@ff2
  3461   002518  C1E7  F059         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  3462   00251C  C1E8  F05A         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  3463   002520  C1E9  F05B         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  3464   002524  EC5E  F01F         	call	___flge	;wreg free
  3465   002528  A0D8               	btfss	status,0,c
  3466   00252A  EF99  F012         	goto	u5911
  3467   00252E  EF9B  F012         	goto	u5910
  3468   002532                     u5911:
  3469   002532  EFA5  F012         	goto	l135
  3470   002536                     u5910:
  3471   002536  C1E6  F1CA         	movff	RGB_to_HSV@b,_RGB_to_HSV$630
  3472   00253A  C1E7  F1CB         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$630+1
  3473   00253E  C1E8  F1CC         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$630+2
  3474   002542  C1E9  F1CD         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$630+3
  3475   002546  EFAD  F012         	goto	l137
  3476   00254A                     l135:
  3477   00254A  C1DE  F1CA         	movff	RGB_to_HSV@r,_RGB_to_HSV$630
  3478   00254E  C1DF  F1CB         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$630+1
  3479   002552  C1E0  F1CC         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$630+2
  3480   002556  C1E1  F1CD         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$630+3
  3481   00255A                     l137:
  3482   00255A  C1CA  F1C2         	movff	_RGB_to_HSV$630,RGB_to_HSV@minRGB
  3483   00255E  C1CB  F1C3         	movff	_RGB_to_HSV$630+1,RGB_to_HSV@minRGB+1
  3484   002562  C1CC  F1C4         	movff	_RGB_to_HSV$630+2,RGB_to_HSV@minRGB+2
  3485   002566  C1CD  F1C5         	movff	_RGB_to_HSV$630+3,RGB_to_HSV@minRGB+3
  3486   00256A                     l5096:
  3487                           
  3488                           ;color.c: 159:     float deltaRGB = maxRGB - minRGB;
  3489   00256A  C1DA  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  3490   00256E  C1DB  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  3491   002572  C1DC  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  3492   002576  C1DD  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  3493   00257A  C1C2  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  3494   00257E  C1C3  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  3495   002582  C1C4  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  3496   002586  C1C5  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  3497   00258A  ECD7  F022         	call	___flsub	;wreg free
  3498   00258E  C01A  F1D6         	movff	?___flsub,RGB_to_HSV@deltaRGB
  3499   002592  C01B  F1D7         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  3500   002596  C01C  F1D8         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  3501   00259A  C01D  F1D9         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  3502                           
  3503                           ;color.c: 164:     float H_temp;;color.c: 166:     if (deltaRGB == 0) {H_temp = 0;}
  3504   00259E  C1D6  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  3505   0025A2  C1D7  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  3506   0025A6  C1D8  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  3507   0025AA  C1D9  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  3508   0025AE  0E00               	movlw	0
  3509   0025B0  6E05               	movwf	___fleq@ff2^0,c
  3510   0025B2  0E00               	movlw	0
  3511   0025B4  6E06               	movwf	(___fleq@ff2+1)^0,c
  3512   0025B6  0E00               	movlw	0
  3513   0025B8  6E07               	movwf	(___fleq@ff2+2)^0,c
  3514   0025BA  0E00               	movlw	0
  3515   0025BC  6E08               	movwf	(___fleq@ff2+3)^0,c
  3516   0025BE  EC13  F021         	call	___fleq	;wreg free
  3517   0025C2  A0D8               	btfss	status,0,c
  3518   0025C4  EFE6  F012         	goto	u5921
  3519   0025C8  EFE8  F012         	goto	u5920
  3520   0025CC                     u5921:
  3521   0025CC  EFF3  F012         	goto	l5100
  3522   0025D0                     u5920:
  3523   0025D0  0E00               	movlw	0
  3524   0025D2  0101               	movlb	1	; () banked
  3525   0025D4  6FD2               	movwf	RGB_to_HSV@H_temp& (0+255),b
  3526   0025D6  0E00               	movlw	0
  3527   0025D8  6FD3               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  3528   0025DA  0E00               	movlw	0
  3529   0025DC  6FD4               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  3530   0025DE  0E00               	movlw	0
  3531   0025E0  6FD5               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  3532   0025E2  EF54  F014         	goto	l5120
  3533   0025E6                     l5100:
  3534   0025E6  C1DA  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  3535   0025EA  C1DB  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  3536   0025EE  C1DC  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  3537   0025F2  C1DD  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  3538   0025F6  C1DE  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  3539   0025FA  C1DF  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  3540   0025FE  C1E0  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  3541   002602  C1E1  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  3542   002606  EC13  F021         	call	___fleq	;wreg free
  3543   00260A  A0D8               	btfss	status,0,c
  3544   00260C  EF0A  F013         	goto	u5931
  3545   002610  EF0C  F013         	goto	u5930
  3546   002614                     u5931:
  3547   002614  EF6E  F013         	goto	l5108
  3548   002618                     u5930:
  3549   002618  C1D6  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  3550   00261C  C1D7  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  3551   002620  C1D8  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  3552   002624  C1D9  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  3553   002628  C1E6  F01E         	movff	RGB_to_HSV@b,___flsub@a
  3554   00262C  C1E7  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  3555   002630  C1E8  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  3556   002634  C1E9  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  3557   002638  C1E2  F01A         	movff	RGB_to_HSV@g,___flsub@b
  3558   00263C  C1E3  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  3559   002640  C1E4  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  3560   002644  C1E5  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  3561   002648  ECD7  F022         	call	___flsub	;wreg free
  3562   00264C  C01A  F022         	movff	?___flsub,___fldiv@b
  3563   002650  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  3564   002654  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  3565   002658  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  3566   00265C  EC87  F019         	call	___fldiv	;wreg free
  3567   002660  C022  F1AE         	movff	?___fldiv,_RGB_to_HSV$2735
  3568   002664  C023  F1AF         	movff	?___fldiv+1,_RGB_to_HSV$2735+1
  3569   002668  C024  F1B0         	movff	?___fldiv+2,_RGB_to_HSV$2735+2
  3570   00266C  C025  F1B1         	movff	?___fldiv+3,_RGB_to_HSV$2735+3
  3571   002670  0E00               	movlw	0
  3572   002672  6E58               	movwf	custom_floatmodulo@y^0,c
  3573   002674  0E00               	movlw	0
  3574   002676  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  3575   002678  0EC0               	movlw	192
  3576   00267A  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  3577   00267C  0E40               	movlw	64
  3578   00267E  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  3579   002680  C1AE  F054         	movff	_RGB_to_HSV$2735,custom_floatmodulo@x
  3580   002684  C1AF  F055         	movff	_RGB_to_HSV$2735+1,custom_floatmodulo@x+1
  3581   002688  C1B0  F056         	movff	_RGB_to_HSV$2735+2,custom_floatmodulo@x+2
  3582   00268C  C1B1  F057         	movff	_RGB_to_HSV$2735+3,custom_floatmodulo@x+3
  3583   002690  EC4F  F01E         	call	_custom_floatmodulo	;wreg free
  3584   002694  C054  F1B2         	movff	?_custom_floatmodulo,_RGB_to_HSV$2736
  3585   002698  C055  F1B3         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2736+1
  3586   00269C  C056  F1B4         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2736+2
  3587   0026A0  C057  F1B5         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2736+3
  3588   0026A4  C1B2  F03B         	movff	_RGB_to_HSV$2736,___flmul@b
  3589   0026A8  C1B3  F03C         	movff	_RGB_to_HSV$2736+1,___flmul@b+1
  3590   0026AC  C1B4  F03D         	movff	_RGB_to_HSV$2736+2,___flmul@b+2
  3591   0026B0  C1B5  F03E         	movff	_RGB_to_HSV$2736+3,___flmul@b+3
  3592   0026B4  0E00               	movlw	0
  3593   0026B6  6E3F               	movwf	___flmul@a^0,c
  3594   0026B8  0E00               	movlw	0
  3595   0026BA  6E40               	movwf	(___flmul@a+1)^0,c
  3596   0026BC  0E70               	movlw	112
  3597   0026BE  6E41               	movwf	(___flmul@a+2)^0,c
  3598   0026C0  0E42               	movlw	66
  3599   0026C2  6E42               	movwf	(___flmul@a+3)^0,c
  3600   0026C4  EC72  F017         	call	___flmul	;wreg free
  3601   0026C8  C03B  F1D2         	movff	?___flmul,RGB_to_HSV@H_temp
  3602   0026CC  C03C  F1D3         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  3603   0026D0  C03D  F1D4         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  3604   0026D4  C03E  F1D5         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  3605   0026D8  EF54  F014         	goto	l5120
  3606   0026DC                     l5108:
  3607   0026DC  C1DA  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  3608   0026E0  C1DB  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  3609   0026E4  C1DC  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  3610   0026E8  C1DD  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  3611   0026EC  C1E2  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  3612   0026F0  C1E3  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  3613   0026F4  C1E4  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  3614   0026F8  C1E5  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  3615   0026FC  EC13  F021         	call	___fleq	;wreg free
  3616   002700  A0D8               	btfss	status,0,c
  3617   002702  EF85  F013         	goto	u5941
  3618   002706  EF87  F013         	goto	u5940
  3619   00270A                     u5941:
  3620   00270A  EFE1  F013         	goto	l5114
  3621   00270E                     u5940:
  3622   00270E  C1D6  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  3623   002712  C1D7  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  3624   002716  C1D8  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  3625   00271A  C1D9  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  3626   00271E  C1DE  F01E         	movff	RGB_to_HSV@r,___flsub@a
  3627   002722  C1DF  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  3628   002726  C1E0  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  3629   00272A  C1E1  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  3630   00272E  C1E6  F01A         	movff	RGB_to_HSV@b,___flsub@b
  3631   002732  C1E7  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  3632   002736  C1E8  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  3633   00273A  C1E9  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  3634   00273E  ECD7  F022         	call	___flsub	;wreg free
  3635   002742  C01A  F022         	movff	?___flsub,___fldiv@b
  3636   002746  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  3637   00274A  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  3638   00274E  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  3639   002752  EC87  F019         	call	___fldiv	;wreg free
  3640   002756  C022  F1CE         	movff	?___fldiv,_RGB_to_HSV$2737
  3641   00275A  C023  F1CF         	movff	?___fldiv+1,_RGB_to_HSV$2737+1
  3642   00275E  C024  F1D0         	movff	?___fldiv+2,_RGB_to_HSV$2737+2
  3643   002762  C025  F1D1         	movff	?___fldiv+3,_RGB_to_HSV$2737+3
  3644   002766  0E00               	movlw	0
  3645   002768  6E05               	movwf	___fladd@a^0,c
  3646   00276A  0E00               	movlw	0
  3647   00276C  6E06               	movwf	(___fladd@a+1)^0,c
  3648   00276E  0E00               	movlw	0
  3649   002770  6E07               	movwf	(___fladd@a+2)^0,c
  3650   002772  0E40               	movlw	64
  3651   002774  6E08               	movwf	(___fladd@a+3)^0,c
  3652   002776  C1CE  F001         	movff	_RGB_to_HSV$2737,___fladd@b
  3653   00277A  C1CF  F002         	movff	_RGB_to_HSV$2737+1,___fladd@b+1
  3654   00277E  C1D0  F003         	movff	_RGB_to_HSV$2737+2,___fladd@b+2
  3655   002782  C1D1  F004         	movff	_RGB_to_HSV$2737+3,___fladd@b+3
  3656   002786  EC12  F015         	call	___fladd	;wreg free
  3657   00278A  C001  F03B         	movff	?___fladd,___flmul@b
  3658   00278E  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  3659   002792  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  3660   002796  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  3661   00279A  0E00               	movlw	0
  3662   00279C  6E3F               	movwf	___flmul@a^0,c
  3663   00279E  0E00               	movlw	0
  3664   0027A0  6E40               	movwf	(___flmul@a+1)^0,c
  3665   0027A2  0E70               	movlw	112
  3666   0027A4  6E41               	movwf	(___flmul@a+2)^0,c
  3667   0027A6  0E42               	movlw	66
  3668   0027A8  6E42               	movwf	(___flmul@a+3)^0,c
  3669   0027AA  EC72  F017         	call	___flmul	;wreg free
  3670   0027AE  C03B  F1D2         	movff	?___flmul,RGB_to_HSV@H_temp
  3671   0027B2  C03C  F1D3         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  3672   0027B6  C03D  F1D4         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  3673   0027BA  C03E  F1D5         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  3674   0027BE  EF54  F014         	goto	l5120
  3675   0027C2                     l5114:
  3676   0027C2  C1DA  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  3677   0027C6  C1DB  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  3678   0027CA  C1DC  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  3679   0027CE  C1DD  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  3680   0027D2  C1E6  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  3681   0027D6  C1E7  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  3682   0027DA  C1E8  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  3683   0027DE  C1E9  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  3684   0027E2  EC13  F021         	call	___fleq	;wreg free
  3685   0027E6  A0D8               	btfss	status,0,c
  3686   0027E8  EFF8  F013         	goto	u5951
  3687   0027EC  EFFA  F013         	goto	u5950
  3688   0027F0                     u5951:
  3689   0027F0  EF54  F014         	goto	l141
  3690   0027F4                     u5950:
  3691   0027F4  C1D6  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  3692   0027F8  C1D7  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  3693   0027FC  C1D8  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  3694   002800  C1D9  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  3695   002804  C1E2  F01E         	movff	RGB_to_HSV@g,___flsub@a
  3696   002808  C1E3  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  3697   00280C  C1E4  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  3698   002810  C1E5  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  3699   002814  C1DE  F01A         	movff	RGB_to_HSV@r,___flsub@b
  3700   002818  C1DF  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  3701   00281C  C1E0  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  3702   002820  C1E1  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  3703   002824  ECD7  F022         	call	___flsub	;wreg free
  3704   002828  C01A  F022         	movff	?___flsub,___fldiv@b
  3705   00282C  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  3706   002830  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  3707   002834  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  3708   002838  EC87  F019         	call	___fldiv	;wreg free
  3709   00283C  C022  F1CE         	movff	?___fldiv,_RGB_to_HSV$2737
  3710   002840  C023  F1CF         	movff	?___fldiv+1,_RGB_to_HSV$2737+1
  3711   002844  C024  F1D0         	movff	?___fldiv+2,_RGB_to_HSV$2737+2
  3712   002848  C025  F1D1         	movff	?___fldiv+3,_RGB_to_HSV$2737+3
  3713   00284C  0E00               	movlw	0
  3714   00284E  6E05               	movwf	___fladd@a^0,c
  3715   002850  0E00               	movlw	0
  3716   002852  6E06               	movwf	(___fladd@a+1)^0,c
  3717   002854  0E80               	movlw	128
  3718   002856  6E07               	movwf	(___fladd@a+2)^0,c
  3719   002858  0E40               	movlw	64
  3720   00285A  6E08               	movwf	(___fladd@a+3)^0,c
  3721   00285C  C1CE  F001         	movff	_RGB_to_HSV$2737,___fladd@b
  3722   002860  C1CF  F002         	movff	_RGB_to_HSV$2737+1,___fladd@b+1
  3723   002864  C1D0  F003         	movff	_RGB_to_HSV$2737+2,___fladd@b+2
  3724   002868  C1D1  F004         	movff	_RGB_to_HSV$2737+3,___fladd@b+3
  3725   00286C  EC12  F015         	call	___fladd	;wreg free
  3726   002870  C001  F03B         	movff	?___fladd,___flmul@b
  3727   002874  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  3728   002878  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  3729   00287C  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  3730   002880  0E00               	movlw	0
  3731   002882  6E3F               	movwf	___flmul@a^0,c
  3732   002884  0E00               	movlw	0
  3733   002886  6E40               	movwf	(___flmul@a+1)^0,c
  3734   002888  0E70               	movlw	112
  3735   00288A  6E41               	movwf	(___flmul@a+2)^0,c
  3736   00288C  0E42               	movlw	66
  3737   00288E  6E42               	movwf	(___flmul@a+3)^0,c
  3738   002890  EC72  F017         	call	___flmul	;wreg free
  3739   002894  C03B  F1D2         	movff	?___flmul,RGB_to_HSV@H_temp
  3740   002898  C03C  F1D3         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  3741   00289C  C03D  F1D4         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  3742   0028A0  C03E  F1D5         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  3743   0028A4  EF54  F014         	goto	l5120
  3744   0028A8                     l141:
  3745   0028A8                     l5120:
  3746                           
  3747                           ;color.c: 174:     if (H_temp < 0) {H_temp = H_temp + 360;}
  3748   0028A8  0101               	movlb	1	; () banked
  3749   0028AA  BFD5               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  3750   0028AC  EF5C  F014         	goto	u5960
  3751   0028B0  EF5A  F014         	goto	u5961
  3752   0028B4                     u5961:
  3753   0028B4  EF76  F014         	goto	l5124
  3754   0028B8                     u5960:
  3755   0028B8                     
  3756                           ; BSR set to: 1
  3757   0028B8  C1D2  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  3758   0028BC  C1D3  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  3759   0028C0  C1D4  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  3760   0028C4  C1D5  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  3761   0028C8  0E00               	movlw	0
  3762   0028CA  6E05               	movwf	___fladd@a^0,c
  3763   0028CC  0E00               	movlw	0
  3764   0028CE  6E06               	movwf	(___fladd@a+1)^0,c
  3765   0028D0  0EB4               	movlw	180
  3766   0028D2  6E07               	movwf	(___fladd@a+2)^0,c
  3767   0028D4  0E43               	movlw	67
  3768   0028D6  6E08               	movwf	(___fladd@a+3)^0,c
  3769   0028D8  EC12  F015         	call	___fladd	;wreg free
  3770   0028DC  C001  F1D2         	movff	?___fladd,RGB_to_HSV@H_temp
  3771   0028E0  C002  F1D3         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  3772   0028E4  C003  F1D4         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  3773   0028E8  C004  F1D5         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  3774   0028EC                     l5124:
  3775                           
  3776                           ;color.c: 177:     *H = H_temp;
  3777   0028EC  0100               	movlb	0	; () banked
  3778   0028EE  51D3               	movf	RGB_to_HSV@H& (0+255),w,b
  3779   0028F0  6ED9               	movwf	fsr2l,c
  3780   0028F2  6ADA               	clrf	fsr2h,c
  3781   0028F4  C1D2  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  3782   0028F8  C1D3  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  3783   0028FC  C1D4  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  3784   002900  C1D5  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  3785   002904                     
  3786                           ; BSR set to: 0
  3787                           ;color.c: 180:     if (maxRGB == 0) {*S = 0;}
  3788   002904  C1DA  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  3789   002908  C1DB  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  3790   00290C  C1DC  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  3791   002910  C1DD  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  3792   002914  0E00               	movlw	0
  3793   002916  6E05               	movwf	___fleq@ff2^0,c
  3794   002918  0E00               	movlw	0
  3795   00291A  6E06               	movwf	(___fleq@ff2+1)^0,c
  3796   00291C  0E00               	movlw	0
  3797   00291E  6E07               	movwf	(___fleq@ff2+2)^0,c
  3798   002920  0E00               	movlw	0
  3799   002922  6E08               	movwf	(___fleq@ff2+3)^0,c
  3800   002924  EC13  F021         	call	___fleq	;wreg free
  3801   002928  A0D8               	btfss	status,0,c
  3802   00292A  EF99  F014         	goto	u5971
  3803   00292E  EF9B  F014         	goto	u5970
  3804   002932                     u5971:
  3805   002932  EFA9  F014         	goto	l5130
  3806   002936                     u5970:
  3807   002936  0100               	movlb	0	; () banked
  3808   002938  51D4               	movf	RGB_to_HSV@S& (0+255),w,b
  3809   00293A  6ED9               	movwf	fsr2l,c
  3810   00293C  6ADA               	clrf	fsr2h,c
  3811   00293E  0E00               	movlw	0
  3812   002940  6EDE               	movwf	postinc2,c
  3813   002942  0E00               	movlw	0
  3814   002944  6EDE               	movwf	postinc2,c
  3815   002946  0E00               	movlw	0
  3816   002948  6EDE               	movwf	postinc2,c
  3817   00294A  0E00               	movlw	0
  3818   00294C  6EDD               	movwf	postdec2,c
  3819   00294E  EFD9  F014         	goto	l5132
  3820   002952                     l5130:
  3821                           
  3822                           ;color.c: 183:         *S = (deltaRGB/maxRGB) * 100.0;
  3823   002952  C1DA  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  3824   002956  C1DB  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  3825   00295A  C1DC  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  3826   00295E  C1DD  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  3827   002962  C1D6  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  3828   002966  C1D7  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  3829   00296A  C1D8  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  3830   00296E  C1D9  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  3831   002972  EC87  F019         	call	___fldiv	;wreg free
  3832   002976  C022  F03B         	movff	?___fldiv,___flmul@b
  3833   00297A  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  3834   00297E  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  3835   002982  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  3836   002986  0E00               	movlw	0
  3837   002988  6E3F               	movwf	___flmul@a^0,c
  3838   00298A  0E00               	movlw	0
  3839   00298C  6E40               	movwf	(___flmul@a+1)^0,c
  3840   00298E  0EC8               	movlw	200
  3841   002990  6E41               	movwf	(___flmul@a+2)^0,c
  3842   002992  0E42               	movlw	66
  3843   002994  6E42               	movwf	(___flmul@a+3)^0,c
  3844   002996  EC72  F017         	call	___flmul	;wreg free
  3845   00299A  0100               	movlb	0	; () banked
  3846   00299C  51D4               	movf	RGB_to_HSV@S& (0+255),w,b
  3847   00299E  6ED9               	movwf	fsr2l,c
  3848   0029A0  6ADA               	clrf	fsr2h,c
  3849   0029A2  C03B  FFDE         	movff	?___flmul,postinc2
  3850   0029A6  C03C  FFDE         	movff	?___flmul+1,postinc2
  3851   0029AA  C03D  FFDE         	movff	?___flmul+2,postinc2
  3852   0029AE  C03E  FFDE         	movff	?___flmul+3,postinc2
  3853   0029B2                     l5132:
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;color.c: 187:     *V = maxRGB * 100.0 * c_norm;
  3857   0029B2  0E00               	movlw	0
  3858   0029B4  6E3F               	movwf	___flmul@a^0,c
  3859   0029B6  0E00               	movlw	0
  3860   0029B8  6E40               	movwf	(___flmul@a+1)^0,c
  3861   0029BA  0EC8               	movlw	200
  3862   0029BC  6E41               	movwf	(___flmul@a+2)^0,c
  3863   0029BE  0E42               	movlw	66
  3864   0029C0  6E42               	movwf	(___flmul@a+3)^0,c
  3865   0029C2  C1DA  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  3866   0029C6  C1DB  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  3867   0029CA  C1DC  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  3868   0029CE  C1DD  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  3869   0029D2  EC72  F017         	call	___flmul	;wreg free
  3870   0029D6  C03B  F1B6         	movff	?___flmul,_RGB_to_HSV$2738
  3871   0029DA  C03C  F1B7         	movff	?___flmul+1,_RGB_to_HSV$2738+1
  3872   0029DE  C03D  F1B8         	movff	?___flmul+2,_RGB_to_HSV$2738+2
  3873   0029E2  C03E  F1B9         	movff	?___flmul+3,_RGB_to_HSV$2738+3
  3874   0029E6                     
  3875                           ;color.c: 187:     *V = maxRGB * 100.0 * c_norm;
  3876   0029E6  C1B6  F03B         	movff	_RGB_to_HSV$2738,___flmul@b
  3877   0029EA  C1B7  F03C         	movff	_RGB_to_HSV$2738+1,___flmul@b+1
  3878   0029EE  C1B8  F03D         	movff	_RGB_to_HSV$2738+2,___flmul@b+2
  3879   0029F2  C1B9  F03E         	movff	_RGB_to_HSV$2738+3,___flmul@b+3
  3880   0029F6  C1A6  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  3881   0029FA  C1A7  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  3882   0029FE  C1A8  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  3883   002A02  C1A9  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  3884   002A06  EC72  F017         	call	___flmul	;wreg free
  3885   002A0A  0100               	movlb	0	; () banked
  3886   002A0C  51D5               	movf	RGB_to_HSV@V& (0+255),w,b
  3887   002A0E  6ED9               	movwf	fsr2l,c
  3888   002A10  6ADA               	clrf	fsr2h,c
  3889   002A12  C03B  FFDE         	movff	?___flmul,postinc2
  3890   002A16  C03C  FFDE         	movff	?___flmul+1,postinc2
  3891   002A1A  C03D  FFDE         	movff	?___flmul+2,postinc2
  3892   002A1E  C03E  FFDE         	movff	?___flmul+3,postinc2
  3893   002A22                     
  3894                           ; BSR set to: 0
  3895   002A22  0012               	return		;funcret
  3896   002A24                     __end_of_RGB_to_HSV:
  3897                           	callstack 0
  3898                           
  3899 ;; *************** function _sprintf *****************
  3900 ;; Defined at:
  3901 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  s               2   67[BANK0 ] PTR unsigned char 
  3904 ;;		 -> RGB_to_HSV@senddata(25), 
  3905 ;;  fmt             1   69[BANK0 ] PTR const unsigned char 
  3906 ;;		 -> STR_1(30), 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  f              12   87[BANK0 ] struct _IO_FILE
  3909 ;;  ret             2    0        int 
  3910 ;;  ap              1   86[BANK0 ] PTR void [1]
  3911 ;;		 -> ?_sprintf(2), 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  2   67[BANK0 ] int 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3921 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3922 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;Total ram usage:       32 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 7
  3928 ;; This function calls:
  3929 ;;		_vfprintf
  3930 ;; This function is called by:
  3931 ;;		_RGB_to_HSV
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text16
  3936   004636                     __ptext16:
  3937                           	callstack 0
  3938   004636                     _sprintf:
  3939                           	callstack 21
  3940   004636  0EA6               	movlw	low (?_sprintf+3)
  3941   004638  0100               	movlb	0	; () banked
  3942   00463A  6FB6               	movwf	sprintf@ap& (0+255),b
  3943   00463C  C0A3  F0B7         	movff	sprintf@s,sprintf@f
  3944   004640  C0A4  F0B8         	movff	sprintf@s+1,sprintf@f+1
  3945   004644                     
  3946                           ; BSR set to: 0
  3947   004644  0E00               	movlw	0
  3948   004646  6FBB               	movwf	(sprintf@f+4)& (0+255),b
  3949   004648  0E00               	movlw	0
  3950   00464A  6FBA               	movwf	(sprintf@f+3)& (0+255),b
  3951   00464C                     
  3952                           ; BSR set to: 0
  3953   00464C  0E00               	movlw	0
  3954   00464E  6FC2               	movwf	(sprintf@f+11)& (0+255),b
  3955   004650  0E00               	movlw	0
  3956   004652  6FC1               	movwf	(sprintf@f+10)& (0+255),b
  3957   004654                     
  3958                           ; BSR set to: 0
  3959   004654  0EB7               	movlw	low sprintf@f
  3960   004656  6F9F               	movwf	vfprintf@fp& (0+255),b
  3961   004658  C0A5  F0A0         	movff	sprintf@fmt,vfprintf@fmt
  3962   00465C  0EB6               	movlw	low sprintf@ap
  3963   00465E  6FA1               	movwf	vfprintf@ap& (0+255),b
  3964   004660  ECB4  F022         	call	_vfprintf	;wreg free
  3965   004664  0100               	movlb	0	; () banked
  3966   004666  51BA               	movf	(sprintf@f+3)& (0+255),w,b
  3967   004668  25A3               	addwf	sprintf@s& (0+255),w,b
  3968   00466A  6ED9               	movwf	fsr2l,c
  3969   00466C  51BB               	movf	(sprintf@f+4)& (0+255),w,b
  3970   00466E  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  3971   004670  6EDA               	movwf	fsr2h,c
  3972   004672  6ADF               	clrf	indf2,c
  3973   004674                     
  3974                           ; BSR set to: 0
  3975   004674  0012               	return		;funcret
  3976   004676                     __end_of_sprintf:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _vfprintf *****************
  3980 ;; Defined at:
  3981 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
  3984 ;;		 -> sprintf@f(12), 
  3985 ;;  fmt             1   64[BANK0 ] PTR const unsigned char 
  3986 ;;		 -> STR_1(30), 
  3987 ;;  ap              1   65[BANK0 ] PTR PTR void 
  3988 ;;		 -> sprintf@ap(1), 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  cfmt            1   66[BANK0 ] PTR unsigned char 
  3991 ;;		 -> STR_1(30), 
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  2   63[BANK0 ] int 
  3994 ;; Registers used:
  3995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4001 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;Total ram usage:        4 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 6
  4008 ;; This function calls:
  4009 ;;		_vfpfcnvrt
  4010 ;; This function is called by:
  4011 ;;		_sprintf
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text17
  4016   004568                     __ptext17:
  4017                           	callstack 0
  4018   004568                     _vfprintf:
  4019                           	callstack 21
  4020   004568                     
  4021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4022   004568  C0A0  F0A2         	movff	vfprintf@fmt,vfprintf@cfmt
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4025   00456C  EFC1  F022         	goto	l5046
  4026   004570                     l5044:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4029   004570  C09F  F094         	movff	vfprintf@fp,vfpfcnvrt@fp
  4030   004574  0EA2               	movlw	low vfprintf@cfmt
  4031   004576  0100               	movlb	0	; () banked
  4032   004578  6F95               	movwf	vfpfcnvrt@fmt& (0+255),b
  4033   00457A  C0A1  F096         	movff	vfprintf@ap,vfpfcnvrt@ap
  4034   00457E  EC54  F01B         	call	_vfpfcnvrt	;wreg free
  4035   004582                     l5046:
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4038   004582  C0A2  FFF6         	movff	vfprintf@cfmt,tblptrl
  4039   004586                     	if	1	;There is more than 1 active tblptr byte
  4040   004586  0E0E               	movlw	high __smallconst
  4041   004588  6EF7               	movwf	tblptrh,c
  4042   00458A                     	endif
  4043   00458A                     	if	0	;tblptru may be non-zero
  4044   00458A                     	endif
  4045   00458A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4046   00458A  0E00               	movlw	low (__smallconst shr (0+16))
  4047   00458C  6EF8               	movwf	tblptru,c
  4048   00458E                     	endif
  4049   00458E  0008               	tblrd		*
  4050   004590  50F5               	movf	tablat,w,c
  4051   004592  0900               	iorlw	0
  4052   004594  A4D8               	btfss	status,2,c
  4053   004596  EFCF  F022         	goto	u5851
  4054   00459A  EFD1  F022         	goto	u5850
  4055   00459E                     u5851:
  4056   00459E  EFB8  F022         	goto	l5044
  4057   0045A2                     u5850:
  4058   0045A2                     
  4059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4060   0045A2  0E00               	movlw	0
  4061   0045A4  0100               	movlb	0	; () banked
  4062   0045A6  6FA0               	movwf	(?_vfprintf+1)& (0+255),b
  4063   0045A8  0E00               	movlw	0
  4064   0045AA  6F9F               	movwf	?_vfprintf& (0+255),b
  4065   0045AC                     
  4066                           ; BSR set to: 0
  4067   0045AC  0012               	return		;funcret
  4068   0045AE                     __end_of_vfprintf:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _vfpfcnvrt *****************
  4072 ;; Defined at:
  4073 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  fp              1   52[BANK0 ] PTR struct _IO_FILE
  4076 ;;		 -> sprintf@f(12), 
  4077 ;;  fmt             1   53[BANK0 ] PTR PTR unsigned char 
  4078 ;;		 -> vfprintf@cfmt(1), 
  4079 ;;  ap              1   54[BANK0 ] PTR PTR void 
  4080 ;;		 -> sprintf@ap(1), 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  convarg         4   57[BANK0 ] struct .
  4083 ;;  cp              1   62[BANK0 ] PTR unsigned char 
  4084 ;;		 -> STR_1(30), 
  4085 ;;  c               1   61[BANK0 ] unsigned char 
  4086 ;;  done            1    0        _Bool 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4096 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;Total ram usage:       11 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 5
  4103 ;; This function calls:
  4104 ;;		_efgtoa
  4105 ;;		_fputc
  4106 ;;		_read_prec_or_width
  4107 ;; This function is called by:
  4108 ;;		_vfprintf
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text18
  4113   0036A8                     __ptext18:
  4114                           	callstack 0
  4115   0036A8                     _vfpfcnvrt:
  4116                           	callstack 21
  4117   0036A8                     
  4118                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4119   0036A8  0100               	movlb	0	; () banked
  4120   0036AA  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4121   0036AC  6ED9               	movwf	fsr2l,c
  4122   0036AE  6ADA               	clrf	fsr2h,c
  4123   0036B0  CFDF FFF6          	movff	indf2,tblptrl
  4124   0036B4                     	if	1	;There is more than 1 active tblptr byte
  4125   0036B4  0E0E               	movlw	high __smallconst
  4126   0036B6  6EF7               	movwf	tblptrh,c
  4127   0036B8                     	endif
  4128   0036B8                     	if	0	;tblptru may be non-zero
  4129   0036B8                     	endif
  4130   0036B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4131   0036B8  0E00               	movlw	low (__smallconst shr (0+16))
  4132   0036BA  6EF8               	movwf	tblptru,c
  4133   0036BC                     	endif
  4134   0036BC  0008               	tblrd		*
  4135   0036BE  50F5               	movf	tablat,w,c
  4136   0036C0  0A25               	xorlw	37
  4137   0036C2  A4D8               	btfss	status,2,c
  4138   0036C4  EF66  F01B         	goto	u5821
  4139   0036C8  EF68  F01B         	goto	u5820
  4140   0036CC                     u5821:
  4141   0036CC  EF58  F01C         	goto	l5024
  4142   0036D0                     u5820:
  4143   0036D0                     
  4144                           ; BSR set to: 0
  4145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4146   0036D0  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4147   0036D2  6ED9               	movwf	fsr2l,c
  4148   0036D4  6ADA               	clrf	fsr2h,c
  4149   0036D6  2ADF               	incf	indf2,f,c
  4150   0036D8                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4153   0036D8  0E00               	movlw	0
  4154   0036DA  0101               	movlb	1	; () banked
  4155   0036DC  6F38               	movwf	(_width+1)& (0+255),b
  4156   0036DE  0E00               	movlw	0
  4157   0036E0  6F37               	movwf	_width& (0+255),b
  4158   0036E2  C137  F0FA         	movff	_width,_flags
  4159   0036E6                     
  4160                           ; BSR set to: 1
  4161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4162   0036E6  0100               	movlb	0	; () banked
  4163   0036E8  69F8               	setf	_prec& (0+255),b
  4164   0036EA  69F9               	setf	(_prec+1)& (0+255),b
  4165   0036EC                     
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  4168   0036EC  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4169   0036EE  6ED9               	movwf	fsr2l,c
  4170   0036F0  6ADA               	clrf	fsr2h,c
  4171   0036F2  CFDF FFF6          	movff	indf2,tblptrl
  4172   0036F6                     	if	1	;There is more than 1 active tblptr byte
  4173   0036F6  0E0E               	movlw	high __smallconst
  4174   0036F8  6EF7               	movwf	tblptrh,c
  4175   0036FA                     	endif
  4176   0036FA                     	if	0	;tblptru may be non-zero
  4177   0036FA                     	endif
  4178   0036FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4179   0036FA  0E00               	movlw	low (__smallconst shr (0+16))
  4180   0036FC  6EF8               	movwf	tblptru,c
  4181   0036FE                     	endif
  4182   0036FE  0008               	tblrd		*
  4183   003700  50F5               	movf	tablat,w,c
  4184   003702  0A2E               	xorlw	46
  4185   003704  A4D8               	btfss	status,2,c
  4186   003706  EF87  F01B         	goto	u5831
  4187   00370A  EF89  F01B         	goto	u5830
  4188   00370E                     u5831:
  4189   00370E  EF97  F01B         	goto	l4986
  4190   003712                     u5830:
  4191   003712                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  4194   003712  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4195   003714  6ED9               	movwf	fsr2l,c
  4196   003716  6ADA               	clrf	fsr2h,c
  4197   003718  2ADF               	incf	indf2,f,c
  4198   00371A                     
  4199                           ; BSR set to: 0
  4200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  4201   00371A  C095  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  4202   00371E  C096  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  4203   003722  ECBC  F020         	call	_read_prec_or_width	;wreg free
  4204   003726  C007  F0F8         	movff	?_read_prec_or_width,_prec
  4205   00372A  C008  F0F9         	movff	?_read_prec_or_width+1,_prec+1
  4206   00372E                     l4986:
  4207                           
  4208                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  4209   00372E  0100               	movlb	0	; () banked
  4210   003730  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4211   003732  6ED9               	movwf	fsr2l,c
  4212   003734  6ADA               	clrf	fsr2h,c
  4213   003736  50DF               	movf	indf2,w,c
  4214   003738  6F9E               	movwf	vfpfcnvrt@cp& (0+255),b
  4215   00373A                     
  4216                           ; BSR set to: 0
  4217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  4218   00373A  C09E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4219   00373E                     	if	1	;There is more than 1 active tblptr byte
  4220   00373E  0E0E               	movlw	high __smallconst
  4221   003740  6EF7               	movwf	tblptrh,c
  4222   003742                     	endif
  4223   003742                     	if	0	;tblptru may be non-zero
  4224   003742                     	endif
  4225   003742                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4226   003742  0E00               	movlw	low (__smallconst shr (0+16))
  4227   003744  6EF8               	movwf	tblptru,c
  4228   003746                     	endif
  4229   003746  0008               	tblrd		*
  4230   003748  CFF5 F09D          	movff	tablat,vfpfcnvrt@c
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  4233   00374C  EFB3  F01B         	goto	l4998
  4234   003750                     l4990:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  4238   003750  2B9E               	incf	vfpfcnvrt@cp& (0+255),f,b
  4239                           
  4240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  4241   003752  EFCC  F01B         	goto	l5000
  4242   003756                     l4992:
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  4246   003756  0E6C               	movlw	108
  4247   003758  6F9D               	movwf	vfpfcnvrt@c& (0+255),b
  4248                           
  4249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  4250   00375A  EFCC  F01B         	goto	l5000
  4251   00375E                     l4994:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  4255   00375E  0E00               	movlw	0
  4256   003760  6F9D               	movwf	vfpfcnvrt@c& (0+255),b
  4257                           
  4258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  4259   003762  EFCC  F01B         	goto	l5000
  4260   003766                     l4998:
  4261                           
  4262                           ; BSR set to: 0
  4263   003766  519D               	movf	vfpfcnvrt@c& (0+255),w,b
  4264   003768  6F97               	movwf	??_vfpfcnvrt& (0+255),b
  4265   00376A  6B98               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4266                           
  4267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4268                           ; Switch size 1, requested type "simple"
  4269                           ; Number of cases is 1, Range of values is 0 to 0
  4270                           ; switch strategies available:
  4271                           ; Name         Instructions Cycles
  4272                           ; simple_byte            4     3 (average)
  4273                           ;	Chosen strategy is simple_byte
  4274   00376C  5198               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4275   00376E  0A00               	xorlw	0	; case 0
  4276   003770  B4D8               	btfsc	status,2,c
  4277   003772  EFBD  F01B         	goto	l5316
  4278   003776  EFAF  F01B         	goto	l4994
  4279   00377A                     l5316:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ; Switch size 1, requested type "simple"
  4283                           ; Number of cases is 3, Range of values is 76 to 108
  4284                           ; switch strategies available:
  4285                           ; Name         Instructions Cycles
  4286                           ; simple_byte           10     6 (average)
  4287                           ;	Chosen strategy is simple_byte
  4288   00377A  5197               	movf	??_vfpfcnvrt& (0+255),w,b
  4289   00377C  0A4C               	xorlw	76	; case 76
  4290   00377E  B4D8               	btfsc	status,2,c
  4291   003780  EFA8  F01B         	goto	l4990
  4292   003784  0A2A               	xorlw	42	; case 102
  4293   003786  B4D8               	btfsc	status,2,c
  4294   003788  EFAB  F01B         	goto	l4992
  4295   00378C  0A0A               	xorlw	10	; case 108
  4296   00378E  B4D8               	btfsc	status,2,c
  4297   003790  EFA8  F01B         	goto	l4990
  4298   003794  EFAF  F01B         	goto	l4994
  4299   003798                     l5000:
  4300                           
  4301                           ; BSR set to: 0
  4302   003798  C09E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4303   00379C                     	if	1	;There is more than 1 active tblptr byte
  4304   00379C  0E0E               	movlw	high __smallconst
  4305   00379E  6EF7               	movwf	tblptrh,c
  4306   0037A0                     	endif
  4307   0037A0                     	if	0	;tblptru may be non-zero
  4308   0037A0                     	endif
  4309   0037A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4310   0037A0  0E00               	movlw	low (__smallconst shr (0+16))
  4311   0037A2  6EF8               	movwf	tblptru,c
  4312   0037A4                     	endif
  4313   0037A4  0008               	tblrd		*
  4314   0037A6  50F5               	movf	tablat,w,c
  4315   0037A8  0A66               	xorlw	102
  4316   0037AA  A4D8               	btfss	status,2,c
  4317   0037AC  EFDA  F01B         	goto	u5841
  4318   0037B0  EFDC  F01B         	goto	u5840
  4319   0037B4                     u5841:
  4320   0037B4  EF51  F01C         	goto	l5020
  4321   0037B8                     u5840:
  4322   0037B8  EF06  F01C         	goto	l5008
  4323   0037BC                     l5002:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4327   0037BC  5196               	movf	vfpfcnvrt@ap& (0+255),w,b
  4328   0037BE  6ED9               	movwf	fsr2l,c
  4329   0037C0  6ADA               	clrf	fsr2h,c
  4330   0037C2  CFDF F097          	movff	indf2,??_vfpfcnvrt
  4331   0037C6  0E04               	movlw	4
  4332   0037C8  26DF               	addwf	indf2,f,c
  4333   0037CA  5197               	movf	??_vfpfcnvrt& (0+255),w,b
  4334   0037CC  6ED9               	movwf	fsr2l,c
  4335   0037CE  6ADA               	clrf	fsr2h,c
  4336   0037D0  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg
  4337   0037D4  CFDE F09A          	movff	postinc2,vfpfcnvrt@convarg+1
  4338   0037D8  CFDE F09B          	movff	postinc2,vfpfcnvrt@convarg+2
  4339   0037DC  CFDE F09C          	movff	postinc2,vfpfcnvrt@convarg+3
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  4342   0037E0  EF1B  F01C         	goto	l5010
  4343   0037E4                     l5004:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4347   0037E4  5196               	movf	vfpfcnvrt@ap& (0+255),w,b
  4348   0037E6  6ED9               	movwf	fsr2l,c
  4349   0037E8  6ADA               	clrf	fsr2h,c
  4350   0037EA  CFDF F097          	movff	indf2,??_vfpfcnvrt
  4351   0037EE  0E04               	movlw	4
  4352   0037F0  26DF               	addwf	indf2,f,c
  4353   0037F2  5197               	movf	??_vfpfcnvrt& (0+255),w,b
  4354   0037F4  6ED9               	movwf	fsr2l,c
  4355   0037F6  6ADA               	clrf	fsr2h,c
  4356   0037F8  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg
  4357   0037FC  CFDE F09A          	movff	postinc2,vfpfcnvrt@convarg+1
  4358   003800  CFDE F09B          	movff	postinc2,vfpfcnvrt@convarg+2
  4359   003804  CFDE F09C          	movff	postinc2,vfpfcnvrt@convarg+3
  4360                           
  4361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  4362   003808  EF1B  F01C         	goto	l5010
  4363   00380C                     l5008:
  4364                           
  4365                           ; BSR set to: 0
  4366   00380C  519D               	movf	vfpfcnvrt@c& (0+255),w,b
  4367   00380E  6F97               	movwf	??_vfpfcnvrt& (0+255),b
  4368   003810  6B98               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4369                           
  4370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4371                           ; Switch size 1, requested type "simple"
  4372                           ; Number of cases is 1, Range of values is 0 to 0
  4373                           ; switch strategies available:
  4374                           ; Name         Instructions Cycles
  4375                           ; simple_byte            4     3 (average)
  4376                           ;	Chosen strategy is simple_byte
  4377   003812  5198               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4378   003814  0A00               	xorlw	0	; case 0
  4379   003816  B4D8               	btfsc	status,2,c
  4380   003818  EF10  F01C         	goto	l5318
  4381   00381C  EF1B  F01C         	goto	l5010
  4382   003820                     l5318:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ; Switch size 1, requested type "simple"
  4386                           ; Number of cases is 2, Range of values is 76 to 108
  4387                           ; switch strategies available:
  4388                           ; Name         Instructions Cycles
  4389                           ; simple_byte            7     4 (average)
  4390                           ;	Chosen strategy is simple_byte
  4391   003820  5197               	movf	??_vfpfcnvrt& (0+255),w,b
  4392   003822  0A4C               	xorlw	76	; case 76
  4393   003824  B4D8               	btfsc	status,2,c
  4394   003826  EFF2  F01B         	goto	l5004
  4395   00382A  0A20               	xorlw	32	; case 108
  4396   00382C  B4D8               	btfsc	status,2,c
  4397   00382E  EFDE  F01B         	goto	l5002
  4398   003832  EF1B  F01C         	goto	l5010
  4399   003836                     l5010:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  4403   003836  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4404   003838  6ED9               	movwf	fsr2l,c
  4405   00383A  6ADA               	clrf	fsr2h,c
  4406   00383C  299E               	incf	vfpfcnvrt@cp& (0+255),w,b
  4407   00383E  6EDF               	movwf	indf2,c
  4408                           
  4409                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  4410   003840  EF39  F01C         	goto	l5018
  4411   003844                     l5012:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  4415   003844  C094  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  4416   003848  C099  F061         	movff	vfpfcnvrt@convarg,efgtoa@f
  4417   00384C  C09A  F062         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  4418   003850  C09B  F063         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  4419   003854  C09C  F064         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  4420   003858  C09E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4421   00385C                     	if	1	;There is more than 1 active tblptr byte
  4422   00385C  0E0E               	movlw	high __smallconst
  4423   00385E  6EF7               	movwf	tblptrh,c
  4424   003860                     	endif
  4425   003860                     	if	0	;tblptru may be non-zero
  4426   003860                     	endif
  4427   003860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4428   003860  0E00               	movlw	low (__smallconst shr (0+16))
  4429   003862  6EF8               	movwf	tblptru,c
  4430   003864                     	endif
  4431   003864  0008               	tblrd		*
  4432   003866  CFF5 F065          	movff	tablat,efgtoa@c
  4433   00386A  EC30  F00C         	call	_efgtoa	;wreg free
  4434   00386E  EF6B  F01C         	goto	l1231
  4435   003872                     l5018:
  4436                           
  4437                           ; BSR set to: 0
  4438   003872  C09E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4439   003876                     	if	1	;There is more than 1 active tblptr byte
  4440   003876  0E0E               	movlw	high __smallconst
  4441   003878  6EF7               	movwf	tblptrh,c
  4442   00387A                     	endif
  4443   00387A                     	if	0	;tblptru may be non-zero
  4444   00387A                     	endif
  4445   00387A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4446   00387A  0E00               	movlw	low (__smallconst shr (0+16))
  4447   00387C  6EF8               	movwf	tblptru,c
  4448   00387E                     	endif
  4449   00387E  0008               	tblrd		*
  4450   003880  50F5               	movf	tablat,w,c
  4451   003882  6F97               	movwf	??_vfpfcnvrt& (0+255),b
  4452   003884  6B98               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4453                           
  4454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4455                           ; Switch size 1, requested type "simple"
  4456                           ; Number of cases is 1, Range of values is 0 to 0
  4457                           ; switch strategies available:
  4458                           ; Name         Instructions Cycles
  4459                           ; simple_byte            4     3 (average)
  4460                           ;	Chosen strategy is simple_byte
  4461   003886  5198               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4462   003888  0A00               	xorlw	0	; case 0
  4463   00388A  B4D8               	btfsc	status,2,c
  4464   00388C  EF4A  F01C         	goto	l5320
  4465   003890  EF51  F01C         	goto	l5020
  4466   003894                     l5320:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ; Switch size 1, requested type "simple"
  4470                           ; Number of cases is 1, Range of values is 102 to 102
  4471                           ; switch strategies available:
  4472                           ; Name         Instructions Cycles
  4473                           ; simple_byte            4     3 (average)
  4474                           ;	Chosen strategy is simple_byte
  4475   003894  5197               	movf	??_vfpfcnvrt& (0+255),w,b
  4476   003896  0A66               	xorlw	102	; case 102
  4477   003898  B4D8               	btfsc	status,2,c
  4478   00389A  EF22  F01C         	goto	l5012
  4479   00389E  EF51  F01C         	goto	l5020
  4480   0038A2                     l5020:
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4483   0038A2  0100               	movlb	0	; () banked
  4484   0038A4  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4485   0038A6  6ED9               	movwf	fsr2l,c
  4486   0038A8  6ADA               	clrf	fsr2h,c
  4487   0038AA  2ADF               	incf	indf2,f,c
  4488   0038AC  EF6B  F01C         	goto	l1231
  4489   0038B0                     l5024:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4493   0038B0  5195               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4494   0038B2  6ED9               	movwf	fsr2l,c
  4495   0038B4  6ADA               	clrf	fsr2h,c
  4496   0038B6  CFDF FFF6          	movff	indf2,tblptrl
  4497   0038BA                     	if	1	;There is more than 1 active tblptr byte
  4498   0038BA  0E0E               	movlw	high __smallconst
  4499   0038BC  6EF7               	movwf	tblptrh,c
  4500   0038BE                     	endif
  4501   0038BE                     	if	0	;tblptru may be non-zero
  4502   0038BE                     	endif
  4503   0038BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4504   0038BE  0E00               	movlw	low (__smallconst shr (0+16))
  4505   0038C0  6EF8               	movwf	tblptru,c
  4506   0038C2                     	endif
  4507   0038C2  0008               	tblrd		*
  4508   0038C4  50F5               	movf	tablat,w,c
  4509   0038C6  6E01               	movwf	fputc@c^0,c
  4510   0038C8  6A02               	clrf	(fputc@c+1)^0,c
  4511   0038CA  C094  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4512   0038CE  EC5F  F020         	call	_fputc	;wreg free
  4513   0038D2  EF51  F01C         	goto	l5020
  4514   0038D6                     l1231:
  4515   0038D6  0012               	return		;funcret
  4516   0038D8                     __end_of_vfpfcnvrt:
  4517                           	callstack 0
  4518                           
  4519 ;; *************** function _read_prec_or_width *****************
  4520 ;; Defined at:
  4521 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  4524 ;;		 -> vfprintf@cfmt(1), 
  4525 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  4526 ;;		 -> sprintf@ap(1), 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  c               1    8[COMRAM] unsigned char 
  4529 ;;  n               2    9[COMRAM] int 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    6[COMRAM] int 
  4532 ;; Registers used:
  4533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4540 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;Total ram usage:        5 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 1
  4546 ;; This function calls:
  4547 ;;		___wmul
  4548 ;; This function is called by:
  4549 ;;		_vfpfcnvrt
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text19
  4554   004178                     __ptext19:
  4555                           	callstack 0
  4556   004178                     _read_prec_or_width:
  4557                           	callstack 24
  4558   004178                     
  4559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4560   004178  0E00               	movlw	0
  4561   00417A  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  4562   00417C  0E00               	movlw	0
  4563   00417E  6E0A               	movwf	read_prec_or_width@n^0,c
  4564   004180                     
  4565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4566   004180  5007               	movf	read_prec_or_width@fmt^0,w,c
  4567   004182  6ED9               	movwf	fsr2l,c
  4568   004184  6ADA               	clrf	fsr2h,c
  4569   004186  CFDF FFF6          	movff	indf2,tblptrl
  4570   00418A                     	if	1	;There is more than 1 active tblptr byte
  4571   00418A  0E0E               	movlw	high __smallconst
  4572   00418C  6EF7               	movwf	tblptrh,c
  4573   00418E                     	endif
  4574   00418E                     	if	0	;tblptru may be non-zero
  4575   00418E                     	endif
  4576   00418E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4577   00418E  0E00               	movlw	low (__smallconst shr (0+16))
  4578   004190  6EF8               	movwf	tblptru,c
  4579   004192                     	endif
  4580   004192  0008               	tblrd		*
  4581   004194  50F5               	movf	tablat,w,c
  4582   004196  0A2A               	xorlw	42
  4583   004198  A4D8               	btfss	status,2,c
  4584   00419A  EFD1  F020         	goto	u4341
  4585   00419E  EFD3  F020         	goto	u4340
  4586   0041A2                     u4341:
  4587   0041A2  EFF9  F020         	goto	l3984
  4588   0041A6                     u4340:
  4589   0041A6                     
  4590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4591   0041A6  5007               	movf	read_prec_or_width@fmt^0,w,c
  4592   0041A8  6ED9               	movwf	fsr2l,c
  4593   0041AA  6ADA               	clrf	fsr2h,c
  4594   0041AC  2ADF               	incf	indf2,f,c
  4595   0041AE                     
  4596                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4597   0041AE  5008               	movf	read_prec_or_width@ap^0,w,c
  4598   0041B0  6ED9               	movwf	fsr2l,c
  4599   0041B2  6ADA               	clrf	fsr2h,c
  4600   0041B4  0E02               	movlw	2
  4601   0041B6  26DF               	addwf	indf2,f,c
  4602   0041B8  5CDF               	subwf	indf2,w,c
  4603   0041BA  6ED9               	movwf	fsr2l,c
  4604   0041BC  6ADA               	clrf	fsr2h,c
  4605   0041BE  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  4606   0041C2  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4609   0041C6  EF0E  F021         	goto	l1207
  4610   0041CA                     l3980:
  4611                           
  4612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4613   0041CA  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  4614   0041CE  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  4615   0041D2  0E00               	movlw	0
  4616   0041D4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4617   0041D6  0E0A               	movlw	10
  4618   0041D8  6E03               	movwf	___wmul@multiplicand^0,c
  4619   0041DA  ECF5  F023         	call	___wmul	;wreg free
  4620   0041DE  5009               	movf	read_prec_or_width@c^0,w,c
  4621   0041E0  2401               	addwf	?___wmul^0,w,c
  4622   0041E2  6E0A               	movwf	read_prec_or_width@n^0,c
  4623   0041E4  0E00               	movlw	0
  4624   0041E6  2002               	addwfc	(?___wmul+1)^0,w,c
  4625   0041E8  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  4626   0041EA                     
  4627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4628   0041EA  5007               	movf	read_prec_or_width@fmt^0,w,c
  4629   0041EC  6ED9               	movwf	fsr2l,c
  4630   0041EE  6ADA               	clrf	fsr2h,c
  4631   0041F0  2ADF               	incf	indf2,f,c
  4632   0041F2                     l3984:
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4635   0041F2  5007               	movf	read_prec_or_width@fmt^0,w,c
  4636   0041F4  6ED9               	movwf	fsr2l,c
  4637   0041F6  6ADA               	clrf	fsr2h,c
  4638   0041F8  CFDF FFF6          	movff	indf2,tblptrl
  4639   0041FC                     	if	1	;There is more than 1 active tblptr byte
  4640   0041FC  0E0E               	movlw	high __smallconst
  4641   0041FE  6EF7               	movwf	tblptrh,c
  4642   004200                     	endif
  4643   004200                     	if	0	;tblptru may be non-zero
  4644   004200                     	endif
  4645   004200                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4646   004200  0E00               	movlw	low (__smallconst shr (0+16))
  4647   004202  6EF8               	movwf	tblptru,c
  4648   004204                     	endif
  4649   004204  0008               	tblrd		*
  4650   004206  50F5               	movf	tablat,w,c
  4651   004208  0FD0               	addlw	208
  4652   00420A  6E09               	movwf	read_prec_or_width@c^0,c
  4653   00420C  0E09               	movlw	9
  4654   00420E  6409               	cpfsgt	read_prec_or_width@c^0,c
  4655   004210  EF0C  F021         	goto	u4351
  4656   004214  EF0E  F021         	goto	u4350
  4657   004218                     u4351:
  4658   004218  EFE5  F020         	goto	l3980
  4659   00421C                     u4350:
  4660   00421C                     l1207:
  4661                           
  4662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4663   00421C  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  4664   004220  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  4665   004224  0012               	return		;funcret
  4666   004226                     __end_of_read_prec_or_width:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function ___wmul *****************
  4670 ;; Defined at:
  4671 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  multiplier      2    0[COMRAM] unsigned int 
  4674 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  product         2    4[COMRAM] unsigned int 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  2    0[COMRAM] unsigned int 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0, prodl, prodh
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;Total ram usage:        6 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_read_prec_or_width
  4696 ;;		_setMotorPWM
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text20
  4701   0047EA                     __ptext20:
  4702                           	callstack 0
  4703   0047EA                     ___wmul:
  4704                           	callstack 24
  4705   0047EA  5001               	movf	___wmul@multiplier^0,w,c
  4706   0047EC  0203               	mulwf	___wmul@multiplicand^0,c
  4707   0047EE  CFF3 F005          	movff	prodl,___wmul@product
  4708   0047F2  CFF4 F006          	movff	prodh,___wmul@product+1
  4709   0047F6  5001               	movf	___wmul@multiplier^0,w,c
  4710   0047F8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4711   0047FA  50F3               	movf	243,w,c
  4712   0047FC  2606               	addwf	(___wmul@product+1)^0,f,c
  4713   0047FE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4714   004800  0203               	mulwf	___wmul@multiplicand^0,c
  4715   004802  50F3               	movf	243,w,c
  4716   004804  2606               	addwf	(___wmul@product+1)^0,f,c
  4717   004806  C005  F001         	movff	___wmul@product,?___wmul
  4718   00480A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4719   00480E  0012               	return		;funcret
  4720   004810                     __end_of___wmul:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _efgtoa *****************
  4724 ;; Defined at:
  4725 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  4728 ;;		 -> sprintf@f(12), 
  4729 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  4730 ;;  c               1    5[BANK0 ] unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  u               4   48[BANK0 ] struct flui
  4733 ;;  g               4   42[BANK0 ] struct flui
  4734 ;;  l               4   37[BANK0 ] struct flui
  4735 ;;  h               4   33[BANK0 ] struct flui
  4736 ;;  ou              4   27[BANK0 ] struct flui
  4737 ;;  n               2   46[BANK0 ] int 
  4738 ;;  i               2   31[BANK0 ] int 
  4739 ;;  w               2   25[BANK0 ] int 
  4740 ;;  e               2   23[BANK0 ] int 
  4741 ;;  m               2   21[BANK0 ] int 
  4742 ;;  d               2   19[BANK0 ] int 
  4743 ;;  t               2   12[BANK0 ] int 
  4744 ;;  p               2   10[BANK0 ] int 
  4745 ;;  ne              2    8[BANK0 ] int 
  4746 ;;  sign            1   41[BANK0 ] unsigned char 
  4747 ;;  nmode           1   18[BANK0 ] unsigned char 
  4748 ;;  mode            1   17[BANK0 ] unsigned char 
  4749 ;;  pp              1   16[BANK0 ] unsigned char 
  4750 ;;  esign           1    0        unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4760 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4761 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4763 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;Total ram usage:       52 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 4
  4767 ;; This function calls:
  4768 ;;		___fladd
  4769 ;;		___fldiv
  4770 ;;		___fleq
  4771 ;;		___flge
  4772 ;;		___flmul
  4773 ;;		___flneg
  4774 ;;		___flsub
  4775 ;;		___fltol
  4776 ;;		___fpclassifyf
  4777 ;;		_floorf
  4778 ;;		_labs
  4779 ;;		_memcpy
  4780 ;;		_pad
  4781 ;;		_strcpy
  4782 ;; This function is called by:
  4783 ;;		_vfpfcnvrt
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text21
  4788   001860                     __ptext21:
  4789                           	callstack 0
  4790   001860                     _efgtoa:
  4791                           	callstack 21
  4792   001860                     
  4793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  4794   001860  0E00               	movlw	0
  4795   001862  0100               	movlb	0	; () banked
  4796   001864  6F89               	movwf	efgtoa@sign& (0+255),b
  4797   001866                     
  4798                           ; BSR set to: 0
  4799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4800   001866  C061  F08A         	movff	efgtoa@f,efgtoa@g
  4801   00186A  C062  F08B         	movff	efgtoa@f+1,efgtoa@g+1
  4802   00186E  C063  F08C         	movff	efgtoa@f+2,efgtoa@g+2
  4803   001872  C064  F08D         	movff	efgtoa@f+3,efgtoa@g+3
  4804   001876                     
  4805                           ; BSR set to: 0
  4806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  4807   001876  BF8D               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4808   001878  EF42  F00C         	goto	u5500
  4809   00187C  EF40  F00C         	goto	u5501
  4810   001880                     u5501:
  4811   001880  EF56  F00C         	goto	l4760
  4812   001884                     u5500:
  4813   001884                     
  4814                           ; BSR set to: 0
  4815                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  4816   001884  0E01               	movlw	1
  4817   001886  6F89               	movwf	efgtoa@sign& (0+255),b
  4818   001888                     
  4819                           ; BSR set to: 0
  4820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  4821   001888  C08A  F001         	movff	efgtoa@g,___flneg@f1
  4822   00188C  C08B  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4823   001890  C08C  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4824   001894  C08D  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4825   001898  EC98  F023         	call	___flneg	;wreg free
  4826   00189C  C001  F08A         	movff	?___flneg,efgtoa@g
  4827   0018A0  C002  F08B         	movff	?___flneg+1,efgtoa@g+1
  4828   0018A4  C003  F08C         	movff	?___flneg+2,efgtoa@g+2
  4829   0018A8  C004  F08D         	movff	?___flneg+3,efgtoa@g+3
  4830   0018AC                     l4760:
  4831                           
  4832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  4833   0018AC  0E00               	movlw	0
  4834   0018AE  0100               	movlb	0	; () banked
  4835   0018B0  6F8F               	movwf	(efgtoa@n+1)& (0+255),b
  4836   0018B2  0E00               	movlw	0
  4837   0018B4  6F8E               	movwf	efgtoa@n& (0+255),b
  4838   0018B6                     
  4839                           ; BSR set to: 0
  4840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  4841   0018B6  C137  F079         	movff	_width,efgtoa@w
  4842   0018BA  C138  F07A         	movff	_width+1,efgtoa@w+1
  4843   0018BE                     
  4844                           ; BSR set to: 0
  4845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  4846   0018BE  5189               	movf	efgtoa@sign& (0+255),w,b
  4847   0018C0  B4D8               	btfsc	status,2,c
  4848   0018C2  EF65  F00C         	goto	u5511
  4849   0018C6  EF67  F00C         	goto	u5510
  4850   0018CA                     u5511:
  4851   0018CA  EF7B  F00C         	goto	l4774
  4852   0018CE                     u5510:
  4853   0018CE                     
  4854                           ; BSR set to: 0
  4855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  4856   0018CE  5189               	movf	efgtoa@sign& (0+255),w,b
  4857   0018D0  A4D8               	btfss	status,2,c
  4858   0018D2  EF6D  F00C         	goto	u5521
  4859   0018D6  EF6F  F00C         	goto	u5520
  4860   0018DA                     u5521:
  4861   0018DA  EF75  F00C         	goto	l4770
  4862   0018DE                     u5520:
  4863   0018DE                     
  4864                           ; BSR set to: 0
  4865   0018DE  0E00               	movlw	0
  4866   0018E0  6F6F               	movwf	(_efgtoa$2369+1)& (0+255),b
  4867   0018E2  0E2B               	movlw	43
  4868   0018E4  6F6E               	movwf	_efgtoa$2369& (0+255),b
  4869   0018E6  EF79  F00C         	goto	l4772
  4870   0018EA                     l4770:
  4871                           
  4872                           ; BSR set to: 0
  4873   0018EA  0E00               	movlw	0
  4874   0018EC  6F6F               	movwf	(_efgtoa$2369+1)& (0+255),b
  4875   0018EE  0E2D               	movlw	45
  4876   0018F0  6F6E               	movwf	_efgtoa$2369& (0+255),b
  4877   0018F2                     l4772:
  4878                           
  4879                           ; BSR set to: 0
  4880   0018F2  C06E  F089         	movff	_efgtoa$2369,efgtoa@sign
  4881   0018F6                     l4774:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4885   0018F6  C08A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4886   0018FA  C08B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4887   0018FE  C08C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4888   001902  C08D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4889   001906  ECE0  F01F         	call	___fpclassifyf	;wreg free
  4890   00190A  0401               	decf	?___fpclassifyf^0,w,c
  4891   00190C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4892   00190E  A4D8               	btfss	status,2,c
  4893   001910  EF8C  F00C         	goto	u5531
  4894   001914  EF8E  F00C         	goto	u5530
  4895   001918                     u5531:
  4896   001918  EFBD  F00C         	goto	l4792
  4897   00191C                     u5530:
  4898   00191C                     
  4899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4900   00191C  0100               	movlb	0	; () banked
  4901   00191E  5189               	movf	efgtoa@sign& (0+255),w,b
  4902   001920  B4D8               	btfsc	status,2,c
  4903   001922  EF95  F00C         	goto	u5541
  4904   001926  EF97  F00C         	goto	u5540
  4905   00192A                     u5541:
  4906   00192A  EFA0  F00C         	goto	l4784
  4907   00192E                     u5540:
  4908   00192E                     
  4909                           ; BSR set to: 0
  4910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4911   00192E  C089  F139         	movff	efgtoa@sign,_dbuf
  4912   001932                     
  4913                           ; BSR set to: 0
  4914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  4915   001932  0779               	decf	efgtoa@w& (0+255),f,b
  4916   001934  A0D8               	btfss	status,0,c
  4917   001936  077A               	decf	(efgtoa@w+1)& (0+255),f,b
  4918   001938                     
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4921   001938  0E00               	movlw	0
  4922   00193A  6F8F               	movwf	(efgtoa@n+1)& (0+255),b
  4923   00193C  0E01               	movlw	1
  4924   00193E  6F8E               	movwf	efgtoa@n& (0+255),b
  4925   001940                     l4784:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4929   001940  0E39               	movlw	low _dbuf
  4930   001942  258E               	addwf	efgtoa@n& (0+255),w,b
  4931   001944  6E01               	movwf	strcpy@dest^0,c
  4932   001946  0E01               	movlw	high _dbuf
  4933   001948  218F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4934   00194A  6E02               	movwf	(strcpy@dest+1)^0,c
  4935   00194C  0E1F               	movlw	low STR_2
  4936   00194E  6E03               	movwf	strcpy@src^0,c
  4937   001950  EC5B  F023         	call	_strcpy	;wreg free
  4938   001954                     l4786:
  4939                           
  4940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4941   001954  0100               	movlb	0	; () banked
  4942   001956  0EFD               	movlw	253
  4943   001958  2779               	addwf	efgtoa@w& (0+255),f,b
  4944   00195A  0EFF               	movlw	255
  4945   00195C  237A               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4946   00195E                     
  4947                           ; BSR set to: 0
  4948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4949   00195E  C060  F00F         	movff	efgtoa@fp,pad@fp
  4950   001962  0E39               	movlw	low _dbuf
  4951   001964  6E10               	movwf	pad@buf^0,c
  4952   001966  0E01               	movlw	high _dbuf
  4953   001968  6E11               	movwf	(pad@buf+1)^0,c
  4954   00196A  C079  F012         	movff	efgtoa@w,pad@p
  4955   00196E  C07A  F013         	movff	efgtoa@w+1,pad@p+1
  4956   001972  EC68  F021         	call	_pad	;wreg free
  4957   001976  EF23  F011         	goto	l1162
  4958   00197A                     l4792:
  4959                           
  4960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4961   00197A  C08A  F001         	movff	efgtoa@g,___fpclassifyf@x
  4962   00197E  C08B  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4963   001982  C08C  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4964   001986  C08D  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4965   00198A  ECE0  F01F         	call	___fpclassifyf	;wreg free
  4966   00198E  5001               	movf	?___fpclassifyf^0,w,c
  4967   001990  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4968   001992  A4D8               	btfss	status,2,c
  4969   001994  EFCE  F00C         	goto	u5551
  4970   001998  EFD0  F00C         	goto	u5550
  4971   00199C                     u5551:
  4972   00199C  EFEE  F00C         	goto	l4810
  4973   0019A0                     u5550:
  4974   0019A0                     
  4975                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  4976   0019A0  0100               	movlb	0	; () banked
  4977   0019A2  5189               	movf	efgtoa@sign& (0+255),w,b
  4978   0019A4  B4D8               	btfsc	status,2,c
  4979   0019A6  EFD7  F00C         	goto	u5561
  4980   0019AA  EFD9  F00C         	goto	u5560
  4981   0019AE                     u5561:
  4982   0019AE  EFE2  F00C         	goto	l4802
  4983   0019B2                     u5560:
  4984   0019B2                     
  4985                           ; BSR set to: 0
  4986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  4987   0019B2  C089  F139         	movff	efgtoa@sign,_dbuf
  4988   0019B6                     
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  4991   0019B6  0779               	decf	efgtoa@w& (0+255),f,b
  4992   0019B8  A0D8               	btfss	status,0,c
  4993   0019BA  077A               	decf	(efgtoa@w+1)& (0+255),f,b
  4994   0019BC                     
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4997   0019BC  0E00               	movlw	0
  4998   0019BE  6F8F               	movwf	(efgtoa@n+1)& (0+255),b
  4999   0019C0  0E01               	movlw	1
  5000   0019C2  6F8E               	movwf	efgtoa@n& (0+255),b
  5001   0019C4                     l4802:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  5005   0019C4  0E39               	movlw	low _dbuf
  5006   0019C6  258E               	addwf	efgtoa@n& (0+255),w,b
  5007   0019C8  6E01               	movwf	strcpy@dest^0,c
  5008   0019CA  0E01               	movlw	high _dbuf
  5009   0019CC  218F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5010   0019CE  6E02               	movwf	(strcpy@dest+1)^0,c
  5011   0019D0  0E23               	movlw	low STR_5
  5012   0019D2  6E03               	movwf	strcpy@src^0,c
  5013   0019D4  EC5B  F023         	call	_strcpy	;wreg free
  5014   0019D8  EFAA  F00C         	goto	l4786
  5015   0019DC                     l4810:
  5016                           
  5017                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  5018   0019DC  0E00               	movlw	0
  5019   0019DE  0100               	movlb	0	; () banked
  5020   0019E0  6F90               	movwf	efgtoa@u& (0+255),b
  5021   0019E2  0E00               	movlw	0
  5022   0019E4  6F91               	movwf	(efgtoa@u+1)& (0+255),b
  5023   0019E6  0E80               	movlw	128
  5024   0019E8  6F92               	movwf	(efgtoa@u+2)& (0+255),b
  5025   0019EA  0E3F               	movlw	63
  5026   0019EC  6F93               	movwf	(efgtoa@u+3)& (0+255),b
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  5029   0019EE  0E00               	movlw	0
  5030   0019F0  6F78               	movwf	(efgtoa@e+1)& (0+255),b
  5031   0019F2  0E00               	movlw	0
  5032   0019F4  6F77               	movwf	efgtoa@e& (0+255),b
  5033   0019F6                     
  5034                           ; BSR set to: 0
  5035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  5036   0019F6  C08A  F001         	movff	efgtoa@g,___fleq@ff1
  5037   0019FA  C08B  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5038   0019FE  C08C  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5039   001A02  C08D  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5040   001A06  0E00               	movlw	0
  5041   001A08  6E05               	movwf	___fleq@ff2^0,c
  5042   001A0A  0E00               	movlw	0
  5043   001A0C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5044   001A0E  0E00               	movlw	0
  5045   001A10  6E07               	movwf	(___fleq@ff2+2)^0,c
  5046   001A12  0E00               	movlw	0
  5047   001A14  6E08               	movwf	(___fleq@ff2+3)^0,c
  5048   001A16  EC13  F021         	call	___fleq	;wreg free
  5049   001A1A  B0D8               	btfsc	status,0,c
  5050   001A1C  EF12  F00D         	goto	u5571
  5051   001A20  EF14  F00D         	goto	u5570
  5052   001A24                     u5571:
  5053   001A24  EFF3  F00D         	goto	l1165
  5054   001A28                     u5570:
  5055   001A28  EF21  F00D         	goto	l4818
  5056   001A2C                     l1167:
  5057                           
  5058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  5059   001A2C  C07B  F090         	movff	efgtoa@ou,efgtoa@u
  5060   001A30  C07C  F091         	movff	efgtoa@ou+1,efgtoa@u+1
  5061   001A34  C07D  F092         	movff	efgtoa@ou+2,efgtoa@u+2
  5062   001A38  C07E  F093         	movff	efgtoa@ou+3,efgtoa@u+3
  5063   001A3C                     
  5064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  5065   001A3C  0100               	movlb	0	; () banked
  5066   001A3E  4B77               	infsnz	efgtoa@e& (0+255),f,b
  5067   001A40  2B78               	incf	(efgtoa@e+1)& (0+255),f,b
  5068   001A42                     l4818:
  5069                           
  5070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  5071   001A42  C090  F03B         	movff	efgtoa@u,___flmul@b
  5072   001A46  C091  F03C         	movff	efgtoa@u+1,___flmul@b+1
  5073   001A4A  C092  F03D         	movff	efgtoa@u+2,___flmul@b+2
  5074   001A4E  C093  F03E         	movff	efgtoa@u+3,___flmul@b+3
  5075   001A52  0E00               	movlw	0
  5076   001A54  6E3F               	movwf	___flmul@a^0,c
  5077   001A56  0E00               	movlw	0
  5078   001A58  6E40               	movwf	(___flmul@a+1)^0,c
  5079   001A5A  0E20               	movlw	32
  5080   001A5C  6E41               	movwf	(___flmul@a+2)^0,c
  5081   001A5E  0E41               	movlw	65
  5082   001A60  6E42               	movwf	(___flmul@a+3)^0,c
  5083   001A62  EC72  F017         	call	___flmul	;wreg free
  5084   001A66  C03B  F07B         	movff	?___flmul,efgtoa@ou
  5085   001A6A  C03C  F07C         	movff	?___flmul+1,efgtoa@ou+1
  5086   001A6E  C03D  F07D         	movff	?___flmul+2,efgtoa@ou+2
  5087   001A72  C03E  F07E         	movff	?___flmul+3,efgtoa@ou+3
  5088   001A76  0100               	movlb	0	; () banked
  5089   001A78  517B               	movf	efgtoa@ou& (0+255),w,b
  5090   001A7A  5D8A               	subwf	efgtoa@g& (0+255),w,b
  5091   001A7C  6E01               	movwf	labs@a^0,c
  5092   001A7E  517C               	movf	(efgtoa@ou+1)& (0+255),w,b
  5093   001A80  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
  5094   001A82  6E02               	movwf	(labs@a+1)^0,c
  5095   001A84  517D               	movf	(efgtoa@ou+2)& (0+255),w,b
  5096   001A86  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
  5097   001A88  6E03               	movwf	(labs@a+2)^0,c
  5098   001A8A  517E               	movf	(efgtoa@ou+3)& (0+255),w,b
  5099   001A8C  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
  5100   001A8E  6E04               	movwf	(labs@a+3)^0,c
  5101   001A90  EC9B  F021         	call	_labs	;wreg free
  5102   001A94  BE04               	btfsc	(?_labs+3)^0,7,c
  5103   001A96  EF58  F00D         	goto	u5581
  5104   001A9A  5004               	movf	(?_labs+3)^0,w,c
  5105   001A9C  1003               	iorwf	(?_labs+2)^0,w,c
  5106   001A9E  1002               	iorwf	(?_labs+1)^0,w,c
  5107   001AA0  E109               	bnz	u5580
  5108   001AA2  0E02               	movlw	2
  5109   001AA4  5C01               	subwf	?_labs^0,w,c
  5110   001AA6  A0D8               	btfss	status,0,c
  5111   001AA8  EF58  F00D         	goto	u5581
  5112   001AAC  EF5A  F00D         	goto	u5580
  5113   001AB0                     u5581:
  5114   001AB0  EF16  F00D         	goto	l1167
  5115   001AB4                     u5580:
  5116   001AB4  C07B  F054         	movff	efgtoa@ou,___flge@ff1
  5117   001AB8  C07C  F055         	movff	efgtoa@ou+1,___flge@ff1+1
  5118   001ABC  C07D  F056         	movff	efgtoa@ou+2,___flge@ff1+2
  5119   001AC0  C07E  F057         	movff	efgtoa@ou+3,___flge@ff1+3
  5120   001AC4  C08A  F058         	movff	efgtoa@g,___flge@ff2
  5121   001AC8  C08B  F059         	movff	efgtoa@g+1,___flge@ff2+1
  5122   001ACC  C08C  F05A         	movff	efgtoa@g+2,___flge@ff2+2
  5123   001AD0  C08D  F05B         	movff	efgtoa@g+3,___flge@ff2+3
  5124   001AD4  EC5E  F01F         	call	___flge	;wreg free
  5125   001AD8  A0D8               	btfss	status,0,c
  5126   001ADA  EF71  F00D         	goto	u5591
  5127   001ADE  EF73  F00D         	goto	u5590
  5128   001AE2                     u5591:
  5129   001AE2  EF16  F00D         	goto	l1167
  5130   001AE6                     u5590:
  5131   001AE6                     
  5132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  5133   001AE6  0100               	movlb	0	; () banked
  5134   001AE8  5190               	movf	efgtoa@u& (0+255),w,b
  5135   001AEA  5D8A               	subwf	efgtoa@g& (0+255),w,b
  5136   001AEC  6E01               	movwf	labs@a^0,c
  5137   001AEE  5191               	movf	(efgtoa@u+1)& (0+255),w,b
  5138   001AF0  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
  5139   001AF2  6E02               	movwf	(labs@a+1)^0,c
  5140   001AF4  5192               	movf	(efgtoa@u+2)& (0+255),w,b
  5141   001AF6  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
  5142   001AF8  6E03               	movwf	(labs@a+2)^0,c
  5143   001AFA  5193               	movf	(efgtoa@u+3)& (0+255),w,b
  5144   001AFC  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
  5145   001AFE  6E04               	movwf	(labs@a+3)^0,c
  5146   001B00  EC9B  F021         	call	_labs	;wreg free
  5147   001B04  BE04               	btfsc	(?_labs+3)^0,7,c
  5148   001B06  EF92  F00D         	goto	u5600
  5149   001B0A  5004               	movf	(?_labs+3)^0,w,c
  5150   001B0C  1003               	iorwf	(?_labs+2)^0,w,c
  5151   001B0E  1002               	iorwf	(?_labs+1)^0,w,c
  5152   001B10  E107               	bnz	u5601
  5153   001B12  0E02               	movlw	2
  5154   001B14  5C01               	subwf	?_labs^0,w,c
  5155   001B16  B0D8               	btfsc	status,0,c
  5156   001B18  EF90  F00D         	goto	u5601
  5157   001B1C  EF92  F00D         	goto	u5600
  5158   001B20                     u5601:
  5159   001B20  EFDA  F00D         	goto	l4836
  5160   001B24                     u5600:
  5161   001B24                     l4826:
  5162                           
  5163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  5164   001B24  C090  F08A         	movff	efgtoa@u,efgtoa@g
  5165   001B28  C091  F08B         	movff	efgtoa@u+1,efgtoa@g+1
  5166   001B2C  C092  F08C         	movff	efgtoa@u+2,efgtoa@g+2
  5167   001B30  C093  F08D         	movff	efgtoa@u+3,efgtoa@g+3
  5168                           
  5169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  5170   001B34  EFF3  F00D         	goto	l1165
  5171   001B38                     l4828:
  5172                           
  5173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  5174   001B38  C090  F022         	movff	efgtoa@u,___fldiv@b
  5175   001B3C  C091  F023         	movff	efgtoa@u+1,___fldiv@b+1
  5176   001B40  C092  F024         	movff	efgtoa@u+2,___fldiv@b+2
  5177   001B44  C093  F025         	movff	efgtoa@u+3,___fldiv@b+3
  5178   001B48  0E00               	movlw	0
  5179   001B4A  6E26               	movwf	___fldiv@a^0,c
  5180   001B4C  0E00               	movlw	0
  5181   001B4E  6E27               	movwf	(___fldiv@a+1)^0,c
  5182   001B50  0E20               	movlw	32
  5183   001B52  6E28               	movwf	(___fldiv@a+2)^0,c
  5184   001B54  0E41               	movlw	65
  5185   001B56  6E29               	movwf	(___fldiv@a+3)^0,c
  5186   001B58  EC87  F019         	call	___fldiv	;wreg free
  5187   001B5C  C022  F090         	movff	?___fldiv,efgtoa@u
  5188   001B60  C023  F091         	movff	?___fldiv+1,efgtoa@u+1
  5189   001B64  C024  F092         	movff	?___fldiv+2,efgtoa@u+2
  5190   001B68  C025  F093         	movff	?___fldiv+3,efgtoa@u+3
  5191   001B6C                     
  5192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  5193   001B6C  0100               	movlb	0	; () banked
  5194   001B6E  0777               	decf	efgtoa@e& (0+255),f,b
  5195   001B70  A0D8               	btfss	status,0,c
  5196   001B72  0778               	decf	(efgtoa@e+1)& (0+255),f,b
  5197   001B74                     
  5198                           ; BSR set to: 0
  5199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  5200   001B74  5190               	movf	efgtoa@u& (0+255),w,b
  5201   001B76  5D8A               	subwf	efgtoa@g& (0+255),w,b
  5202   001B78  6E01               	movwf	labs@a^0,c
  5203   001B7A  5191               	movf	(efgtoa@u+1)& (0+255),w,b
  5204   001B7C  598B               	subwfb	(efgtoa@g+1)& (0+255),w,b
  5205   001B7E  6E02               	movwf	(labs@a+1)^0,c
  5206   001B80  5192               	movf	(efgtoa@u+2)& (0+255),w,b
  5207   001B82  598C               	subwfb	(efgtoa@g+2)& (0+255),w,b
  5208   001B84  6E03               	movwf	(labs@a+2)^0,c
  5209   001B86  5193               	movf	(efgtoa@u+3)& (0+255),w,b
  5210   001B88  598D               	subwfb	(efgtoa@g+3)& (0+255),w,b
  5211   001B8A  6E04               	movwf	(labs@a+3)^0,c
  5212   001B8C  EC9B  F021         	call	_labs	;wreg free
  5213   001B90  BE04               	btfsc	(?_labs+3)^0,7,c
  5214   001B92  EFD8  F00D         	goto	u5610
  5215   001B96  5004               	movf	(?_labs+3)^0,w,c
  5216   001B98  1003               	iorwf	(?_labs+2)^0,w,c
  5217   001B9A  1002               	iorwf	(?_labs+1)^0,w,c
  5218   001B9C  E107               	bnz	u5611
  5219   001B9E  0E02               	movlw	2
  5220   001BA0  5C01               	subwf	?_labs^0,w,c
  5221   001BA2  B0D8               	btfsc	status,0,c
  5222   001BA4  EFD6  F00D         	goto	u5611
  5223   001BA8  EFD8  F00D         	goto	u5610
  5224   001BAC                     u5611:
  5225   001BAC  EFDA  F00D         	goto	l4836
  5226   001BB0                     u5610:
  5227   001BB0  EF92  F00D         	goto	l4826
  5228   001BB4                     l4836:
  5229                           
  5230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  5231   001BB4  C08A  F054         	movff	efgtoa@g,___flge@ff1
  5232   001BB8  C08B  F055         	movff	efgtoa@g+1,___flge@ff1+1
  5233   001BBC  C08C  F056         	movff	efgtoa@g+2,___flge@ff1+2
  5234   001BC0  C08D  F057         	movff	efgtoa@g+3,___flge@ff1+3
  5235   001BC4  C090  F058         	movff	efgtoa@u,___flge@ff2
  5236   001BC8  C091  F059         	movff	efgtoa@u+1,___flge@ff2+1
  5237   001BCC  C092  F05A         	movff	efgtoa@u+2,___flge@ff2+2
  5238   001BD0  C093  F05B         	movff	efgtoa@u+3,___flge@ff2+3
  5239   001BD4  EC5E  F01F         	call	___flge	;wreg free
  5240   001BD8  A0D8               	btfss	status,0,c
  5241   001BDA  EFF1  F00D         	goto	u5621
  5242   001BDE  EFF3  F00D         	goto	u5620
  5243   001BE2                     u5621:
  5244   001BE2  EF9C  F00D         	goto	l4828
  5245   001BE6                     u5620:
  5246   001BE6                     l1165:
  5247                           
  5248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  5249   001BE6  C065  F071         	movff	efgtoa@c,efgtoa@mode
  5250                           
  5251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  5252   001BEA  C071  F072         	movff	efgtoa@mode,efgtoa@nmode
  5253   001BEE                     
  5254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  5255   001BEE  0100               	movlb	0	; () banked
  5256   001BF0  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  5257   001BF2  EFFD  F00D         	goto	u5631
  5258   001BF6  EFFF  F00D         	goto	u5630
  5259   001BFA                     u5631:
  5260   001BFA  EF05  F00E         	goto	l4842
  5261   001BFE                     u5630:
  5262   001BFE                     
  5263                           ; BSR set to: 0
  5264   001BFE  C0F8  F06A         	movff	_prec,efgtoa@p
  5265   001C02  C0F9  F06B         	movff	_prec+1,efgtoa@p+1
  5266   001C06  EF09  F00E         	goto	l4844
  5267   001C0A                     l4842:
  5268                           
  5269                           ; BSR set to: 0
  5270   001C0A  0E00               	movlw	0
  5271   001C0C  6F6B               	movwf	(efgtoa@p+1)& (0+255),b
  5272   001C0E  0E06               	movlw	6
  5273   001C10  6F6A               	movwf	efgtoa@p& (0+255),b
  5274   001C12                     l4844:
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  5278   001C12  C06A  F075         	movff	efgtoa@p,efgtoa@m
  5279   001C16  C06B  F076         	movff	efgtoa@p+1,efgtoa@m+1
  5280   001C1A                     
  5281                           ; BSR set to: 0
  5282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  5283   001C1A  4B75               	infsnz	efgtoa@m& (0+255),f,b
  5284   001C1C  2B76               	incf	(efgtoa@m+1)& (0+255),f,b
  5285   001C1E                     
  5286                           ; BSR set to: 0
  5287                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  5288   001C1E  0E66               	movlw	102
  5289   001C20  1972               	xorwf	efgtoa@nmode& (0+255),w,b
  5290   001C22  A4D8               	btfss	status,2,c
  5291   001C24  EF16  F00E         	goto	u5641
  5292   001C28  EF18  F00E         	goto	u5640
  5293   001C2C                     u5641:
  5294   001C2C  EF38  F00E         	goto	l4858
  5295   001C30                     u5640:
  5296   001C30                     
  5297                           ; BSR set to: 0
  5298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  5299   001C30  BF78               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5300   001C32  EF1F  F00E         	goto	u5650
  5301   001C36  EF1D  F00E         	goto	u5651
  5302   001C3A                     u5651:
  5303   001C3A  EF2B  F00E         	goto	l4854
  5304   001C3E                     u5650:
  5305   001C3E                     
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  5308   001C3E  0E00               	movlw	0
  5309   001C40  6F90               	movwf	efgtoa@u& (0+255),b
  5310   001C42  0E00               	movlw	0
  5311   001C44  6F91               	movwf	(efgtoa@u+1)& (0+255),b
  5312   001C46  0E80               	movlw	128
  5313   001C48  6F92               	movwf	(efgtoa@u+2)& (0+255),b
  5314   001C4A  0E3F               	movlw	63
  5315   001C4C  6F93               	movwf	(efgtoa@u+3)& (0+255),b
  5316                           
  5317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  5318   001C4E  0E00               	movlw	0
  5319   001C50  6F78               	movwf	(efgtoa@e+1)& (0+255),b
  5320   001C52  0E00               	movlw	0
  5321   001C54  6F77               	movwf	efgtoa@e& (0+255),b
  5322   001C56                     l4854:
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  5326   001C56  0E67               	movlw	103
  5327   001C58  1971               	xorwf	efgtoa@mode& (0+255),w,b
  5328   001C5A  B4D8               	btfsc	status,2,c
  5329   001C5C  EF32  F00E         	goto	u5661
  5330   001C60  EF34  F00E         	goto	u5660
  5331   001C64                     u5661:
  5332   001C64  EF38  F00E         	goto	l4858
  5333   001C68                     u5660:
  5334   001C68                     
  5335                           ; BSR set to: 0
  5336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  5337   001C68  5177               	movf	efgtoa@e& (0+255),w,b
  5338   001C6A  2775               	addwf	efgtoa@m& (0+255),f,b
  5339   001C6C  5178               	movf	(efgtoa@e+1)& (0+255),w,b
  5340   001C6E  2376               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5341   001C70                     l4858:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  5345   001C70  0E00               	movlw	0
  5346   001C72  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  5347   001C74  0E00               	movlw	0
  5348   001C76  6F7F               	movwf	efgtoa@i& (0+255),b
  5349   001C78                     
  5350                           ; BSR set to: 0
  5351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  5352   001C78  C08A  F081         	movff	efgtoa@g,efgtoa@h
  5353   001C7C  C08B  F082         	movff	efgtoa@g+1,efgtoa@h+1
  5354   001C80  C08C  F083         	movff	efgtoa@g+2,efgtoa@h+2
  5355   001C84  C08D  F084         	movff	efgtoa@g+3,efgtoa@h+3
  5356   001C88                     
  5357                           ; BSR set to: 0
  5358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  5359   001C88  C090  F07B         	movff	efgtoa@u,efgtoa@ou
  5360   001C8C  C091  F07C         	movff	efgtoa@u+1,efgtoa@ou+1
  5361   001C90  C092  F07D         	movff	efgtoa@u+2,efgtoa@ou+2
  5362   001C94  C093  F07E         	movff	efgtoa@u+3,efgtoa@ou+3
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5365   001C98  EFC9  F00E         	goto	l4872
  5366   001C9C                     l4864:
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  5370   001C9C  C081  F022         	movff	efgtoa@h,___fldiv@b
  5371   001CA0  C082  F023         	movff	efgtoa@h+1,___fldiv@b+1
  5372   001CA4  C083  F024         	movff	efgtoa@h+2,___fldiv@b+2
  5373   001CA8  C084  F025         	movff	efgtoa@h+3,___fldiv@b+3
  5374   001CAC  C090  F026         	movff	efgtoa@u,___fldiv@a
  5375   001CB0  C091  F027         	movff	efgtoa@u+1,___fldiv@a+1
  5376   001CB4  C092  F028         	movff	efgtoa@u+2,___fldiv@a+2
  5377   001CB8  C093  F029         	movff	efgtoa@u+3,___fldiv@a+3
  5378   001CBC  EC87  F019         	call	___fldiv	;wreg free
  5379   001CC0  C022  F03B         	movff	?___fldiv,floorf@x
  5380   001CC4  C023  F03C         	movff	?___fldiv+1,floorf@x+1
  5381   001CC8  C024  F03D         	movff	?___fldiv+2,floorf@x+2
  5382   001CCC  C025  F03E         	movff	?___fldiv+3,floorf@x+3
  5383   001CD0  EC6C  F01C         	call	_floorf	;wreg free
  5384   001CD4  C03B  F085         	movff	?_floorf,efgtoa@l
  5385   001CD8  C03C  F086         	movff	?_floorf+1,efgtoa@l+1
  5386   001CDC  C03D  F087         	movff	?_floorf+2,efgtoa@l+2
  5387   001CE0  C03E  F088         	movff	?_floorf+3,efgtoa@l+3
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  5390   001CE4  C085  F001         	movff	efgtoa@l,___fltol@f1
  5391   001CE8  C086  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5392   001CEC  C087  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5393   001CF0  C088  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5394   001CF4  ECDB  F01E         	call	___fltol	;wreg free
  5395   001CF8  C001  F073         	movff	?___fltol,efgtoa@d
  5396   001CFC  C002  F074         	movff	?___fltol+1,efgtoa@d+1
  5397   001D00                     
  5398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  5399   001D00  C081  F01A         	movff	efgtoa@h,___flsub@b
  5400   001D04  C082  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5401   001D08  C083  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5402   001D0C  C084  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5403   001D10  C085  F03F         	movff	efgtoa@l,___flmul@a
  5404   001D14  C086  F040         	movff	efgtoa@l+1,___flmul@a+1
  5405   001D18  C087  F041         	movff	efgtoa@l+2,___flmul@a+2
  5406   001D1C  C088  F042         	movff	efgtoa@l+3,___flmul@a+3
  5407   001D20  C090  F03B         	movff	efgtoa@u,___flmul@b
  5408   001D24  C091  F03C         	movff	efgtoa@u+1,___flmul@b+1
  5409   001D28  C092  F03D         	movff	efgtoa@u+2,___flmul@b+2
  5410   001D2C  C093  F03E         	movff	efgtoa@u+3,___flmul@b+3
  5411   001D30  EC72  F017         	call	___flmul	;wreg free
  5412   001D34  C03B  F01E         	movff	?___flmul,___flsub@a
  5413   001D38  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  5414   001D3C  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  5415   001D40  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  5416   001D44  ECD7  F022         	call	___flsub	;wreg free
  5417   001D48  C01A  F081         	movff	?___flsub,efgtoa@h
  5418   001D4C  C01B  F082         	movff	?___flsub+1,efgtoa@h+1
  5419   001D50  C01C  F083         	movff	?___flsub+2,efgtoa@h+2
  5420   001D54  C01D  F084         	movff	?___flsub+3,efgtoa@h+3
  5421   001D58                     
  5422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  5423   001D58  C090  F022         	movff	efgtoa@u,___fldiv@b
  5424   001D5C  C091  F023         	movff	efgtoa@u+1,___fldiv@b+1
  5425   001D60  C092  F024         	movff	efgtoa@u+2,___fldiv@b+2
  5426   001D64  C093  F025         	movff	efgtoa@u+3,___fldiv@b+3
  5427   001D68  0E00               	movlw	0
  5428   001D6A  6E26               	movwf	___fldiv@a^0,c
  5429   001D6C  0E00               	movlw	0
  5430   001D6E  6E27               	movwf	(___fldiv@a+1)^0,c
  5431   001D70  0E20               	movlw	32
  5432   001D72  6E28               	movwf	(___fldiv@a+2)^0,c
  5433   001D74  0E41               	movlw	65
  5434   001D76  6E29               	movwf	(___fldiv@a+3)^0,c
  5435   001D78  EC87  F019         	call	___fldiv	;wreg free
  5436   001D7C  C022  F090         	movff	?___fldiv,efgtoa@u
  5437   001D80  C023  F091         	movff	?___fldiv+1,efgtoa@u+1
  5438   001D84  C024  F092         	movff	?___fldiv+2,efgtoa@u+2
  5439   001D88  C025  F093         	movff	?___fldiv+3,efgtoa@u+3
  5440   001D8C                     
  5441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  5442   001D8C  0100               	movlb	0	; () banked
  5443   001D8E  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  5444   001D90  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  5445   001D92                     l4872:
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  5449   001D92  5175               	movf	efgtoa@m& (0+255),w,b
  5450   001D94  5D7F               	subwf	efgtoa@i& (0+255),w,b
  5451   001D96  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5452   001D98  0A80               	xorlw	128
  5453   001D9A  6F66               	movwf	??_efgtoa& (0+255),b
  5454   001D9C  5176               	movf	(efgtoa@m+1)& (0+255),w,b
  5455   001D9E  0A80               	xorlw	128
  5456   001DA0  5966               	subwfb	??_efgtoa& (0+255),w,b
  5457   001DA2  A0D8               	btfss	status,0,c
  5458   001DA4  EFD6  F00E         	goto	u5671
  5459   001DA8  EFD8  F00E         	goto	u5670
  5460   001DAC                     u5671:
  5461   001DAC  EF4E  F00E         	goto	l4864
  5462   001DB0                     u5670:
  5463   001DB0                     
  5464                           ; BSR set to: 0
  5465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  5466   001DB0  C090  F03B         	movff	efgtoa@u,___flmul@b
  5467   001DB4  C091  F03C         	movff	efgtoa@u+1,___flmul@b+1
  5468   001DB8  C092  F03D         	movff	efgtoa@u+2,___flmul@b+2
  5469   001DBC  C093  F03E         	movff	efgtoa@u+3,___flmul@b+3
  5470   001DC0  0E00               	movlw	0
  5471   001DC2  6E3F               	movwf	___flmul@a^0,c
  5472   001DC4  0E00               	movlw	0
  5473   001DC6  6E40               	movwf	(___flmul@a+1)^0,c
  5474   001DC8  0EA0               	movlw	160
  5475   001DCA  6E41               	movwf	(___flmul@a+2)^0,c
  5476   001DCC  0E40               	movlw	64
  5477   001DCE  6E42               	movwf	(___flmul@a+3)^0,c
  5478   001DD0  EC72  F017         	call	___flmul	;wreg free
  5479   001DD4  C03B  F085         	movff	?___flmul,efgtoa@l
  5480   001DD8  C03C  F086         	movff	?___flmul+1,efgtoa@l+1
  5481   001DDC  C03D  F087         	movff	?___flmul+2,efgtoa@l+2
  5482   001DE0  C03E  F088         	movff	?___flmul+3,efgtoa@l+3
  5483   001DE4                     
  5484                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  5485   001DE4  C081  F054         	movff	efgtoa@h,___flge@ff1
  5486   001DE8  C082  F055         	movff	efgtoa@h+1,___flge@ff1+1
  5487   001DEC  C083  F056         	movff	efgtoa@h+2,___flge@ff1+2
  5488   001DF0  C084  F057         	movff	efgtoa@h+3,___flge@ff1+3
  5489   001DF4  C085  F058         	movff	efgtoa@l,___flge@ff2
  5490   001DF8  C086  F059         	movff	efgtoa@l+1,___flge@ff2+1
  5491   001DFC  C087  F05A         	movff	efgtoa@l+2,___flge@ff2+2
  5492   001E00  C088  F05B         	movff	efgtoa@l+3,___flge@ff2+3
  5493   001E04  EC5E  F01F         	call	___flge	;wreg free
  5494   001E08  B0D8               	btfsc	status,0,c
  5495   001E0A  EF09  F00F         	goto	u5681
  5496   001E0E  EF0B  F00F         	goto	u5680
  5497   001E12                     u5681:
  5498   001E12  EF16  F00F         	goto	l4880
  5499   001E16                     u5680:
  5500   001E16                     
  5501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  5502   001E16  0E00               	movlw	0
  5503   001E18  0100               	movlb	0	; () banked
  5504   001E1A  6F85               	movwf	efgtoa@l& (0+255),b
  5505   001E1C  0E00               	movlw	0
  5506   001E1E  6F86               	movwf	(efgtoa@l+1)& (0+255),b
  5507   001E20  0E00               	movlw	0
  5508   001E22  6F87               	movwf	(efgtoa@l+2)& (0+255),b
  5509   001E24  0E00               	movlw	0
  5510   001E26  6F88               	movwf	(efgtoa@l+3)& (0+255),b
  5511                           
  5512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  5513   001E28  EF3F  F00F         	goto	l4886
  5514   001E2C                     l4880:
  5515                           
  5516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  5517   001E2C  C081  F001         	movff	efgtoa@h,___fleq@ff1
  5518   001E30  C082  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5519   001E34  C083  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5520   001E38  C084  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5521   001E3C  C085  F005         	movff	efgtoa@l,___fleq@ff2
  5522   001E40  C086  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5523   001E44  C087  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5524   001E48  C088  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5525   001E4C  EC13  F021         	call	___fleq	;wreg free
  5526   001E50  A0D8               	btfss	status,0,c
  5527   001E52  EF2D  F00F         	goto	u5691
  5528   001E56  EF2F  F00F         	goto	u5690
  5529   001E5A                     u5691:
  5530   001E5A  EF3F  F00F         	goto	l4886
  5531   001E5E                     u5690:
  5532   001E5E  0100               	movlb	0	; () banked
  5533   001E60  B173               	btfsc	efgtoa@d& (0+255),0,b
  5534   001E62  EF35  F00F         	goto	u5701
  5535   001E66  EF37  F00F         	goto	u5700
  5536   001E6A                     u5701:
  5537   001E6A  EF3F  F00F         	goto	l4886
  5538   001E6E                     u5700:
  5539   001E6E                     
  5540                           ; BSR set to: 0
  5541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  5542   001E6E  0E00               	movlw	0
  5543   001E70  6F85               	movwf	efgtoa@l& (0+255),b
  5544   001E72  0E00               	movlw	0
  5545   001E74  6F86               	movwf	(efgtoa@l+1)& (0+255),b
  5546   001E76  0E00               	movlw	0
  5547   001E78  6F87               	movwf	(efgtoa@l+2)& (0+255),b
  5548   001E7A  0E00               	movlw	0
  5549   001E7C  6F88               	movwf	(efgtoa@l+3)& (0+255),b
  5550   001E7E                     l4886:
  5551                           
  5552                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  5553   001E7E  C08A  F001         	movff	efgtoa@g,___fladd@b
  5554   001E82  C08B  F002         	movff	efgtoa@g+1,___fladd@b+1
  5555   001E86  C08C  F003         	movff	efgtoa@g+2,___fladd@b+2
  5556   001E8A  C08D  F004         	movff	efgtoa@g+3,___fladd@b+3
  5557   001E8E  C085  F005         	movff	efgtoa@l,___fladd@a
  5558   001E92  C086  F006         	movff	efgtoa@l+1,___fladd@a+1
  5559   001E96  C087  F007         	movff	efgtoa@l+2,___fladd@a+2
  5560   001E9A  C088  F008         	movff	efgtoa@l+3,___fladd@a+3
  5561   001E9E  EC12  F015         	call	___fladd	;wreg free
  5562   001EA2  C001  F081         	movff	?___fladd,efgtoa@h
  5563   001EA6  C002  F082         	movff	?___fladd+1,efgtoa@h+1
  5564   001EAA  C003  F083         	movff	?___fladd+2,efgtoa@h+2
  5565   001EAE  C004  F084         	movff	?___fladd+3,efgtoa@h+3
  5566   001EB2                     
  5567                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  5568   001EB2  C081  F054         	movff	efgtoa@h,___flge@ff1
  5569   001EB6  C082  F055         	movff	efgtoa@h+1,___flge@ff1+1
  5570   001EBA  C083  F056         	movff	efgtoa@h+2,___flge@ff1+2
  5571   001EBE  C084  F057         	movff	efgtoa@h+3,___flge@ff1+3
  5572   001EC2  0E00               	movlw	0
  5573   001EC4  6E3F               	movwf	___flmul@a^0,c
  5574   001EC6  0E00               	movlw	0
  5575   001EC8  6E40               	movwf	(___flmul@a+1)^0,c
  5576   001ECA  0E20               	movlw	32
  5577   001ECC  6E41               	movwf	(___flmul@a+2)^0,c
  5578   001ECE  0E41               	movlw	65
  5579   001ED0  6E42               	movwf	(___flmul@a+3)^0,c
  5580   001ED2  C07B  F03B         	movff	efgtoa@ou,___flmul@b
  5581   001ED6  C07C  F03C         	movff	efgtoa@ou+1,___flmul@b+1
  5582   001EDA  C07D  F03D         	movff	efgtoa@ou+2,___flmul@b+2
  5583   001EDE  C07E  F03E         	movff	efgtoa@ou+3,___flmul@b+3
  5584   001EE2  EC72  F017         	call	___flmul	;wreg free
  5585   001EE6  C03B  F058         	movff	?___flmul,___flge@ff2
  5586   001EEA  C03C  F059         	movff	?___flmul+1,___flge@ff2+1
  5587   001EEE  C03D  F05A         	movff	?___flmul+2,___flge@ff2+2
  5588   001EF2  C03E  F05B         	movff	?___flmul+3,___flge@ff2+3
  5589   001EF6  EC5E  F01F         	call	___flge	;wreg free
  5590   001EFA  A0D8               	btfss	status,0,c
  5591   001EFC  EF82  F00F         	goto	u5711
  5592   001F00  EF84  F00F         	goto	u5710
  5593   001F04                     u5711:
  5594   001F04  EFAD  F00F         	goto	l4898
  5595   001F08                     u5710:
  5596   001F08                     
  5597                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  5598   001F08  0100               	movlb	0	; () banked
  5599   001F0A  4B77               	infsnz	efgtoa@e& (0+255),f,b
  5600   001F0C  2B78               	incf	(efgtoa@e+1)& (0+255),f,b
  5601   001F0E                     
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  5604   001F0E  C07B  F03B         	movff	efgtoa@ou,___flmul@b
  5605   001F12  C07C  F03C         	movff	efgtoa@ou+1,___flmul@b+1
  5606   001F16  C07D  F03D         	movff	efgtoa@ou+2,___flmul@b+2
  5607   001F1A  C07E  F03E         	movff	efgtoa@ou+3,___flmul@b+3
  5608   001F1E  0E00               	movlw	0
  5609   001F20  6E3F               	movwf	___flmul@a^0,c
  5610   001F22  0E00               	movlw	0
  5611   001F24  6E40               	movwf	(___flmul@a+1)^0,c
  5612   001F26  0E20               	movlw	32
  5613   001F28  6E41               	movwf	(___flmul@a+2)^0,c
  5614   001F2A  0E41               	movlw	65
  5615   001F2C  6E42               	movwf	(___flmul@a+3)^0,c
  5616   001F2E  EC72  F017         	call	___flmul	;wreg free
  5617   001F32  C03B  F07B         	movff	?___flmul,efgtoa@ou
  5618   001F36  C03C  F07C         	movff	?___flmul+1,efgtoa@ou+1
  5619   001F3A  C03D  F07D         	movff	?___flmul+2,efgtoa@ou+2
  5620   001F3E  C03E  F07E         	movff	?___flmul+3,efgtoa@ou+3
  5621   001F42                     
  5622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  5623   001F42  0E66               	movlw	102
  5624   001F44  0100               	movlb	0	; () banked
  5625   001F46  1972               	xorwf	efgtoa@nmode& (0+255),w,b
  5626   001F48  A4D8               	btfss	status,2,c
  5627   001F4A  EFA9  F00F         	goto	u5721
  5628   001F4E  EFAB  F00F         	goto	u5720
  5629   001F52                     u5721:
  5630   001F52  EFAD  F00F         	goto	l4898
  5631   001F56                     u5720:
  5632   001F56                     
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  5635   001F56  4B75               	infsnz	efgtoa@m& (0+255),f,b
  5636   001F58  2B76               	incf	(efgtoa@m+1)& (0+255),f,b
  5637   001F5A                     l4898:
  5638                           
  5639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  5640   001F5A  C07B  F090         	movff	efgtoa@ou,efgtoa@u
  5641   001F5E  C07C  F091         	movff	efgtoa@ou+1,efgtoa@u+1
  5642   001F62  C07D  F092         	movff	efgtoa@ou+2,efgtoa@u+2
  5643   001F66  C07E  F093         	movff	efgtoa@ou+3,efgtoa@u+3
  5644   001F6A                     
  5645                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  5646   001F6A  C077  F068         	movff	efgtoa@e,efgtoa@ne
  5647   001F6E  C078  F069         	movff	efgtoa@e+1,efgtoa@ne+1
  5648   001F72                     
  5649                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  5650   001F72  0E00               	movlw	0
  5651   001F74  0100               	movlb	0	; () banked
  5652   001F76  6F70               	movwf	efgtoa@pp& (0+255),b
  5653   001F78                     
  5654                           ; BSR set to: 0
  5655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  5656   001F78  0E00               	movlw	0
  5657   001F7A  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  5658   001F7C  0E00               	movlw	0
  5659   001F7E  6F6C               	movwf	efgtoa@t& (0+255),b
  5660   001F80                     
  5661                           ; BSR set to: 0
  5662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  5663   001F80  0E00               	movlw	0
  5664   001F82  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  5665   001F84  0E00               	movlw	0
  5666   001F86  6F7F               	movwf	efgtoa@i& (0+255),b
  5667                           
  5668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5669   001F88  EFAB  F010         	goto	l4948
  5670   001F8C                     l4908:
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  5674   001F8C  C081  F022         	movff	efgtoa@h,___fldiv@b
  5675   001F90  C082  F023         	movff	efgtoa@h+1,___fldiv@b+1
  5676   001F94  C083  F024         	movff	efgtoa@h+2,___fldiv@b+2
  5677   001F98  C084  F025         	movff	efgtoa@h+3,___fldiv@b+3
  5678   001F9C  C090  F026         	movff	efgtoa@u,___fldiv@a
  5679   001FA0  C091  F027         	movff	efgtoa@u+1,___fldiv@a+1
  5680   001FA4  C092  F028         	movff	efgtoa@u+2,___fldiv@a+2
  5681   001FA8  C093  F029         	movff	efgtoa@u+3,___fldiv@a+3
  5682   001FAC  EC87  F019         	call	___fldiv	;wreg free
  5683   001FB0  C022  F03B         	movff	?___fldiv,floorf@x
  5684   001FB4  C023  F03C         	movff	?___fldiv+1,floorf@x+1
  5685   001FB8  C024  F03D         	movff	?___fldiv+2,floorf@x+2
  5686   001FBC  C025  F03E         	movff	?___fldiv+3,floorf@x+3
  5687   001FC0  EC6C  F01C         	call	_floorf	;wreg free
  5688   001FC4  C03B  F085         	movff	?_floorf,efgtoa@l
  5689   001FC8  C03C  F086         	movff	?_floorf+1,efgtoa@l+1
  5690   001FCC  C03D  F087         	movff	?_floorf+2,efgtoa@l+2
  5691   001FD0  C03E  F088         	movff	?_floorf+3,efgtoa@l+3
  5692                           
  5693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5694   001FD4  C085  F001         	movff	efgtoa@l,___fltol@f1
  5695   001FD8  C086  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5696   001FDC  C087  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5697   001FE0  C088  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5698   001FE4  ECDB  F01E         	call	___fltol	;wreg free
  5699   001FE8  BE02               	btfsc	(?___fltol+1)^0,7,c
  5700   001FEA  EF02  F010         	goto	u5730
  5701   001FEE  5002               	movf	(?___fltol+1)^0,w,c
  5702   001FF0  E107               	bnz	u5731
  5703   001FF2  0E0A               	movlw	10
  5704   001FF4  5C01               	subwf	?___fltol^0,w,c
  5705   001FF6  B0D8               	btfsc	status,0,c
  5706   001FF8  EF00  F010         	goto	u5731
  5707   001FFC  EF02  F010         	goto	u5730
  5708   002000                     u5731:
  5709   002000  EF12  F010         	goto	l4912
  5710   002004                     u5730:
  5711   002004  C085  F001         	movff	efgtoa@l,___fltol@f1
  5712   002008  C086  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5713   00200C  C087  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5714   002010  C088  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5715   002014  ECDB  F01E         	call	___fltol	;wreg free
  5716   002018  C001  F073         	movff	?___fltol,efgtoa@d
  5717   00201C  C002  F074         	movff	?___fltol+1,efgtoa@d+1
  5718   002020  EF17  F010         	goto	l1195
  5719   002024                     l4912:
  5720   002024  0E00               	movlw	0
  5721   002026  0100               	movlb	0	; () banked
  5722   002028  6F74               	movwf	(efgtoa@d+1)& (0+255),b
  5723   00202A  0E09               	movlw	9
  5724   00202C  6F73               	movwf	efgtoa@d& (0+255),b
  5725   00202E                     l1195:
  5726                           
  5727                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  5728   00202E  0100               	movlb	0	; () banked
  5729   002030  5170               	movf	efgtoa@pp& (0+255),w,b
  5730   002032  A4D8               	btfss	status,2,c
  5731   002034  EF1E  F010         	goto	u5741
  5732   002038  EF20  F010         	goto	u5740
  5733   00203C                     u5741:
  5734   00203C  EF48  F010         	goto	l4932
  5735   002040                     u5740:
  5736   002040                     
  5737                           ; BSR set to: 0
  5738   002040  BF69               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5739   002042  EF27  F010         	goto	u5750
  5740   002046  EF25  F010         	goto	u5751
  5741   00204A                     u5751:
  5742   00204A  EF48  F010         	goto	l4932
  5743   00204E                     u5750:
  5744   00204E                     
  5745                           ; BSR set to: 0
  5746                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  5747   00204E  0E39               	movlw	low _dbuf
  5748   002050  258E               	addwf	efgtoa@n& (0+255),w,b
  5749   002052  6ED9               	movwf	fsr2l,c
  5750   002054  0E01               	movlw	high _dbuf
  5751   002056  218F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5752   002058  6EDA               	movwf	fsr2h,c
  5753   00205A  0E2E               	movlw	46
  5754   00205C  6EDF               	movwf	indf2,c
  5755   00205E                     
  5756                           ; BSR set to: 0
  5757   00205E  4B8E               	infsnz	efgtoa@n& (0+255),f,b
  5758   002060  2B8F               	incf	(efgtoa@n+1)& (0+255),f,b
  5759   002062                     
  5760                           ; BSR set to: 0
  5761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  5762   002062  0779               	decf	efgtoa@w& (0+255),f,b
  5763   002064  A0D8               	btfss	status,0,c
  5764   002066  077A               	decf	(efgtoa@w+1)& (0+255),f,b
  5765   002068                     
  5766                           ; BSR set to: 0
  5767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  5768   002068  0E01               	movlw	1
  5769   00206A  6F70               	movwf	efgtoa@pp& (0+255),b
  5770   00206C  EF48  F010         	goto	l4932
  5771   002070                     l4924:
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  5775   002070  0E39               	movlw	low _dbuf
  5776   002072  258E               	addwf	efgtoa@n& (0+255),w,b
  5777   002074  6ED9               	movwf	fsr2l,c
  5778   002076  0E01               	movlw	high _dbuf
  5779   002078  218F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5780   00207A  6EDA               	movwf	fsr2h,c
  5781   00207C  0E30               	movlw	48
  5782   00207E  6EDF               	movwf	indf2,c
  5783   002080                     
  5784                           ; BSR set to: 0
  5785   002080  4B8E               	infsnz	efgtoa@n& (0+255),f,b
  5786   002082  2B8F               	incf	(efgtoa@n+1)& (0+255),f,b
  5787   002084                     
  5788                           ; BSR set to: 0
  5789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  5790   002084  0779               	decf	efgtoa@w& (0+255),f,b
  5791   002086  A0D8               	btfss	status,0,c
  5792   002088  077A               	decf	(efgtoa@w+1)& (0+255),f,b
  5793   00208A                     
  5794                           ; BSR set to: 0
  5795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  5796   00208A  076C               	decf	efgtoa@t& (0+255),f,b
  5797   00208C  A0D8               	btfss	status,0,c
  5798   00208E  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  5799   002090                     l4932:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  5803   002090  516C               	movf	efgtoa@t& (0+255),w,b
  5804   002092  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5805   002094  A4D8               	btfss	status,2,c
  5806   002096  EF4F  F010         	goto	u5761
  5807   00209A  EF51  F010         	goto	u5760
  5808   00209E                     u5761:
  5809   00209E  EF38  F010         	goto	l4924
  5810   0020A2                     u5760:
  5811   0020A2                     
  5812                           ; BSR set to: 0
  5813                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5814   0020A2  0E39               	movlw	low _dbuf
  5815   0020A4  258E               	addwf	efgtoa@n& (0+255),w,b
  5816   0020A6  6ED9               	movwf	fsr2l,c
  5817   0020A8  0E01               	movlw	high _dbuf
  5818   0020AA  218F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5819   0020AC  6EDA               	movwf	fsr2h,c
  5820   0020AE  5173               	movf	efgtoa@d& (0+255),w,b
  5821   0020B0  0F30               	addlw	48
  5822   0020B2  6EDF               	movwf	indf2,c
  5823   0020B4                     
  5824                           ; BSR set to: 0
  5825   0020B4  4B8E               	infsnz	efgtoa@n& (0+255),f,b
  5826   0020B6  2B8F               	incf	(efgtoa@n+1)& (0+255),f,b
  5827   0020B8                     
  5828                           ; BSR set to: 0
  5829                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  5830   0020B8  0779               	decf	efgtoa@w& (0+255),f,b
  5831   0020BA  A0D8               	btfss	status,0,c
  5832   0020BC  077A               	decf	(efgtoa@w+1)& (0+255),f,b
  5833   0020BE                     
  5834                           ; BSR set to: 0
  5835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  5836   0020BE  C081  F01A         	movff	efgtoa@h,___flsub@b
  5837   0020C2  C082  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5838   0020C6  C083  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5839   0020CA  C084  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5840   0020CE  C085  F03F         	movff	efgtoa@l,___flmul@a
  5841   0020D2  C086  F040         	movff	efgtoa@l+1,___flmul@a+1
  5842   0020D6  C087  F041         	movff	efgtoa@l+2,___flmul@a+2
  5843   0020DA  C088  F042         	movff	efgtoa@l+3,___flmul@a+3
  5844   0020DE  C090  F03B         	movff	efgtoa@u,___flmul@b
  5845   0020E2  C091  F03C         	movff	efgtoa@u+1,___flmul@b+1
  5846   0020E6  C092  F03D         	movff	efgtoa@u+2,___flmul@b+2
  5847   0020EA  C093  F03E         	movff	efgtoa@u+3,___flmul@b+3
  5848   0020EE  EC72  F017         	call	___flmul	;wreg free
  5849   0020F2  C03B  F01E         	movff	?___flmul,___flsub@a
  5850   0020F6  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  5851   0020FA  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  5852   0020FE  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  5853   002102  ECD7  F022         	call	___flsub	;wreg free
  5854   002106  C01A  F081         	movff	?___flsub,efgtoa@h
  5855   00210A  C01B  F082         	movff	?___flsub+1,efgtoa@h+1
  5856   00210E  C01C  F083         	movff	?___flsub+2,efgtoa@h+2
  5857   002112  C01D  F084         	movff	?___flsub+3,efgtoa@h+3
  5858   002116                     
  5859                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  5860   002116  C090  F022         	movff	efgtoa@u,___fldiv@b
  5861   00211A  C091  F023         	movff	efgtoa@u+1,___fldiv@b+1
  5862   00211E  C092  F024         	movff	efgtoa@u+2,___fldiv@b+2
  5863   002122  C093  F025         	movff	efgtoa@u+3,___fldiv@b+3
  5864   002126  0E00               	movlw	0
  5865   002128  6E26               	movwf	___fldiv@a^0,c
  5866   00212A  0E00               	movlw	0
  5867   00212C  6E27               	movwf	(___fldiv@a+1)^0,c
  5868   00212E  0E20               	movlw	32
  5869   002130  6E28               	movwf	(___fldiv@a+2)^0,c
  5870   002132  0E41               	movlw	65
  5871   002134  6E29               	movwf	(___fldiv@a+3)^0,c
  5872   002136  EC87  F019         	call	___fldiv	;wreg free
  5873   00213A  C022  F090         	movff	?___fldiv,efgtoa@u
  5874   00213E  C023  F091         	movff	?___fldiv+1,efgtoa@u+1
  5875   002142  C024  F092         	movff	?___fldiv+2,efgtoa@u+2
  5876   002146  C025  F093         	movff	?___fldiv+3,efgtoa@u+3
  5877   00214A                     
  5878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  5879   00214A  0100               	movlb	0	; () banked
  5880   00214C  0768               	decf	efgtoa@ne& (0+255),f,b
  5881   00214E  A0D8               	btfss	status,0,c
  5882   002150  0769               	decf	(efgtoa@ne+1)& (0+255),f,b
  5883   002152                     
  5884                           ; BSR set to: 0
  5885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  5886   002152  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  5887   002154  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  5888   002156                     l4948:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5892   002156  5175               	movf	efgtoa@m& (0+255),w,b
  5893   002158  5D7F               	subwf	efgtoa@i& (0+255),w,b
  5894   00215A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5895   00215C  0A80               	xorlw	128
  5896   00215E  6F66               	movwf	??_efgtoa& (0+255),b
  5897   002160  5176               	movf	(efgtoa@m+1)& (0+255),w,b
  5898   002162  0A80               	xorlw	128
  5899   002164  5966               	subwfb	??_efgtoa& (0+255),w,b
  5900   002166  B0D8               	btfsc	status,0,c
  5901   002168  EFB8  F010         	goto	u5771
  5902   00216C  EFBA  F010         	goto	u5770
  5903   002170                     u5771:
  5904   002170  EFC8  F010         	goto	l4952
  5905   002174                     u5770:
  5906   002174                     
  5907                           ; BSR set to: 0
  5908   002174  BF8F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5909   002176  EFC6  F010         	goto	u5781
  5910   00217A  518F               	movf	(efgtoa@n+1)& (0+255),w,b
  5911   00217C  E109               	bnz	u5780
  5912   00217E  0E4B               	movlw	75
  5913   002180  5D8E               	subwf	efgtoa@n& (0+255),w,b
  5914   002182  A0D8               	btfss	status,0,c
  5915   002184  EFC6  F010         	goto	u5781
  5916   002188  EFC8  F010         	goto	u5780
  5917   00218C                     u5781:
  5918   00218C  EFC6  F00F         	goto	l4908
  5919   002190                     u5780:
  5920   002190                     l4952:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5924   002190  0E00               	movlw	0
  5925   002192  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  5926   002194  0E4F               	movlw	79
  5927   002196  6F7F               	movwf	efgtoa@i& (0+255),b
  5928   002198                     
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5931   002198  0E39               	movlw	low _dbuf
  5932   00219A  257F               	addwf	efgtoa@i& (0+255),w,b
  5933   00219C  6ED9               	movwf	fsr2l,c
  5934   00219E  0E01               	movlw	high _dbuf
  5935   0021A0  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5936   0021A2  6EDA               	movwf	fsr2h,c
  5937   0021A4  6ADF               	clrf	indf2,c
  5938   0021A6                     
  5939                           ; BSR set to: 0
  5940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5941   0021A6  0E39               	movlw	low _dbuf
  5942   0021A8  6F66               	movwf	??_efgtoa& (0+255),b
  5943   0021AA  0E01               	movlw	high _dbuf
  5944   0021AC  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5945   0021AE  518E               	movf	efgtoa@n& (0+255),w,b
  5946   0021B0  5F66               	subwf	??_efgtoa& (0+255),f,b
  5947   0021B2  518F               	movf	(efgtoa@n+1)& (0+255),w,b
  5948   0021B4  5B67               	subwfb	(??_efgtoa+1)& (0+255),f,b
  5949   0021B6  517F               	movf	efgtoa@i& (0+255),w,b
  5950   0021B8  2566               	addwf	??_efgtoa& (0+255),w,b
  5951   0021BA  6E01               	movwf	memcpy@d1^0,c
  5952   0021BC  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5953   0021BE  2167               	addwfc	(??_efgtoa+1)& (0+255),w,b
  5954   0021C0  6E02               	movwf	(memcpy@d1+1)^0,c
  5955   0021C2  0E39               	movlw	low _dbuf
  5956   0021C4  6E03               	movwf	memcpy@s1^0,c
  5957   0021C6  0E01               	movlw	high _dbuf
  5958   0021C8  6E04               	movwf	(memcpy@s1+1)^0,c
  5959   0021CA  C08E  F005         	movff	efgtoa@n,memcpy@n
  5960   0021CE  C08F  F006         	movff	efgtoa@n+1,memcpy@n+1
  5961   0021D2  EC66  F022         	call	_memcpy	;wreg free
  5962   0021D6                     
  5963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5964   0021D6  0100               	movlb	0	; () banked
  5965   0021D8  518E               	movf	efgtoa@n& (0+255),w,b
  5966   0021DA  5D7F               	subwf	efgtoa@i& (0+255),w,b
  5967   0021DC  6F8E               	movwf	efgtoa@n& (0+255),b
  5968   0021DE  518F               	movf	(efgtoa@n+1)& (0+255),w,b
  5969   0021E0  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5970   0021E2  6F8F               	movwf	(efgtoa@n+1)& (0+255),b
  5971   0021E4                     
  5972                           ; BSR set to: 0
  5973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5974   0021E4  5189               	movf	efgtoa@sign& (0+255),w,b
  5975   0021E6  A4D8               	btfss	status,2,c
  5976   0021E8  EFF8  F010         	goto	u5791
  5977   0021EC  EFFB  F010         	goto	u5790
  5978   0021F0                     u5791:
  5979   0021F0  0E01               	movlw	1
  5980   0021F2  EFFC  F010         	goto	u5800
  5981   0021F6                     u5790:
  5982   0021F6  0E00               	movlw	0
  5983   0021F8                     u5800:
  5984   0021F8  6F7F               	movwf	efgtoa@i& (0+255),b
  5985   0021FA  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  5986   0021FC                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5989   0021FC  5189               	movf	efgtoa@sign& (0+255),w,b
  5990   0021FE  B4D8               	btfsc	status,2,c
  5991   002200  EF04  F011         	goto	u5811
  5992   002204  EF06  F011         	goto	u5810
  5993   002208                     u5811:
  5994   002208  EF11  F011         	goto	l4966
  5995   00220C                     u5810:
  5996   00220C                     
  5997                           ; BSR set to: 0
  5998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5999   00220C  078E               	decf	efgtoa@n& (0+255),f,b
  6000   00220E  A0D8               	btfss	status,0,c
  6001   002210  078F               	decf	(efgtoa@n+1)& (0+255),f,b
  6002   002212  0E39               	movlw	low _dbuf
  6003   002214  258E               	addwf	efgtoa@n& (0+255),w,b
  6004   002216  6ED9               	movwf	fsr2l,c
  6005   002218  0E01               	movlw	high _dbuf
  6006   00221A  218F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6007   00221C  6EDA               	movwf	fsr2h,c
  6008   00221E  C089  FFDF         	movff	efgtoa@sign,indf2
  6009   002222                     l4966:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  6013   002222  517F               	movf	efgtoa@i& (0+255),w,b
  6014   002224  5F79               	subwf	efgtoa@w& (0+255),f,b
  6015   002226  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  6016   002228  5B7A               	subwfb	(efgtoa@w+1)& (0+255),f,b
  6017   00222A                     
  6018                           ; BSR set to: 0
  6019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  6020   00222A  C060  F00F         	movff	efgtoa@fp,pad@fp
  6021   00222E  0E39               	movlw	low _dbuf
  6022   002230  258E               	addwf	efgtoa@n& (0+255),w,b
  6023   002232  6E10               	movwf	pad@buf^0,c
  6024   002234  0E01               	movlw	high _dbuf
  6025   002236  218F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6026   002238  6E11               	movwf	(pad@buf+1)^0,c
  6027   00223A  C079  F012         	movff	efgtoa@w,pad@p
  6028   00223E  C07A  F013         	movff	efgtoa@w+1,pad@p+1
  6029   002242  EC68  F021         	call	_pad	;wreg free
  6030   002246                     l1162:
  6031   002246  0012               	return		;funcret
  6032   002248                     __end_of_efgtoa:
  6033                           	callstack 0
  6034                           
  6035 ;; *************** function _strcpy *****************
  6036 ;; Defined at:
  6037 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6040 ;;		 -> dbuf(80), 
  6041 ;;  src             1    2[COMRAM] PTR const unsigned char 
  6042 ;;		 -> STR_5(4), STR_2(4), 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  d               2    4[COMRAM] PTR unsigned char 
  6045 ;;		 -> dbuf(80), 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  2    0[COMRAM] PTR unsigned char 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6055 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;Total ram usage:        6 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_efgtoa
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text22
  6069   0046B6                     __ptext22:
  6070                           	callstack 0
  6071   0046B6                     _strcpy:
  6072                           	callstack 24
  6073   0046B6  C001  F005         	movff	strcpy@dest,strcpy@d
  6074   0046BA  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  6075   0046BE                     l4736:
  6076   0046BE  2A03               	incf	strcpy@src^0,f,c
  6077   0046C0  0403               	decf	strcpy@src^0,w,c
  6078   0046C2  6E04               	movwf	??_strcpy^0,c
  6079   0046C4  C004  FFF6         	movff	??_strcpy,tblptrl
  6080   0046C8                     	if	1	;There is more than 1 active tblptr byte
  6081   0046C8  0E0E               	movlw	high __smallconst
  6082   0046CA  6EF7               	movwf	tblptrh,c
  6083   0046CC                     	endif
  6084   0046CC                     	if	0	;tblptru may be non-zero
  6085   0046CC                     	endif
  6086   0046CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6087   0046CC  0E00               	movlw	low (__smallconst shr (0+16))
  6088   0046CE  6EF8               	movwf	tblptru,c
  6089   0046D0                     	endif
  6090   0046D0  C005  FFD9         	movff	strcpy@d,fsr2l
  6091   0046D4  C006  FFDA         	movff	strcpy@d+1,fsr2h
  6092   0046D8  4A05               	infsnz	strcpy@d^0,f,c
  6093   0046DA  2A06               	incf	(strcpy@d+1)^0,f,c
  6094   0046DC  0008               	tblrd		*
  6095   0046DE  CFF5 FFDF          	movff	tablat,indf2
  6096   0046E2  50DF               	movf	indf2,w,c
  6097   0046E4  A4D8               	btfss	status,2,c
  6098   0046E6  EF77  F023         	goto	u5481
  6099   0046EA  EF79  F023         	goto	u5480
  6100   0046EE                     u5481:
  6101   0046EE  EF5F  F023         	goto	l4736
  6102   0046F2                     u5480:
  6103   0046F2  0012               	return		;funcret
  6104   0046F4                     __end_of_strcpy:
  6105                           	callstack 0
  6106                           
  6107 ;; *************** function _pad *****************
  6108 ;; Defined at:
  6109 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6112 ;;		 -> sprintf@f(12), 
  6113 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6114 ;;		 -> dbuf(80), 
  6115 ;;  p               2   17[COMRAM] int 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  i               2   20[COMRAM] int 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6127 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;Total ram usage:        8 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 3
  6134 ;; This function calls:
  6135 ;;		_fputc
  6136 ;;		_fputs
  6137 ;; This function is called by:
  6138 ;;		_efgtoa
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text23
  6143   0042D0                     __ptext23:
  6144                           	callstack 0
  6145   0042D0                     _pad:
  6146                           	callstack 21
  6147   0042D0                     
  6148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6149   0042D0  BE13               	btfsc	(pad@p+1)^0,7,c
  6150   0042D2  EF6F  F021         	goto	u5460
  6151   0042D6  EF6D  F021         	goto	u5461
  6152   0042DA                     u5461:
  6153   0042DA  EF73  F021         	goto	l1147
  6154   0042DE                     u5460:
  6155   0042DE                     
  6156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6157   0042DE  0E00               	movlw	0
  6158   0042E0  6E13               	movwf	(pad@p+1)^0,c
  6159   0042E2  0E00               	movlw	0
  6160   0042E4  6E12               	movwf	pad@p^0,c
  6161   0042E6                     l1147:
  6162                           
  6163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6164   0042E6  0E00               	movlw	0
  6165   0042E8  6E16               	movwf	(pad@i+1)^0,c
  6166   0042EA  0E00               	movlw	0
  6167   0042EC  6E15               	movwf	pad@i^0,c
  6168                           
  6169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6170   0042EE  EF83  F021         	goto	l4730
  6171   0042F2                     l4726:
  6172                           
  6173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6174   0042F2  0E00               	movlw	0
  6175   0042F4  6E02               	movwf	(fputc@c+1)^0,c
  6176   0042F6  0E20               	movlw	32
  6177   0042F8  6E01               	movwf	fputc@c^0,c
  6178   0042FA  C00F  F003         	movff	pad@fp,fputc@fp
  6179   0042FE  EC5F  F020         	call	_fputc	;wreg free
  6180   004302                     
  6181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6182   004302  4A15               	infsnz	pad@i^0,f,c
  6183   004304  2A16               	incf	(pad@i+1)^0,f,c
  6184   004306                     l4730:
  6185                           
  6186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6187   004306  5012               	movf	pad@p^0,w,c
  6188   004308  5C15               	subwf	pad@i^0,w,c
  6189   00430A  5016               	movf	(pad@i+1)^0,w,c
  6190   00430C  0A80               	xorlw	128
  6191   00430E  6E14               	movwf	??_pad^0,c
  6192   004310  5013               	movf	(pad@p+1)^0,w,c
  6193   004312  0A80               	xorlw	128
  6194   004314  5814               	subwfb	??_pad^0,w,c
  6195   004316  A0D8               	btfss	status,0,c
  6196   004318  EF90  F021         	goto	u5471
  6197   00431C  EF92  F021         	goto	u5470
  6198   004320                     u5471:
  6199   004320  EF79  F021         	goto	l4726
  6200   004324                     u5470:
  6201   004324                     
  6202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6203   004324  C010  F009         	movff	pad@buf,fputs@s
  6204   004328  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6205   00432C  C00F  F00B         	movff	pad@fp,fputs@fp
  6206   004330  EC3B  F023         	call	_fputs	;wreg free
  6207   004334  0012               	return		;funcret
  6208   004336                     __end_of_pad:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function _fputs *****************
  6212 ;; Defined at:
  6213 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6216 ;;		 -> dbuf(80), 
  6217 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6218 ;;		 -> sprintf@f(12), 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  i               2   12[COMRAM] int 
  6221 ;;  c               1   11[COMRAM] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  2    8[COMRAM] int 
  6224 ;; Registers used:
  6225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6231 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6232 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6235 ;;Total ram usage:        6 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; Hardware stack levels required when called: 2
  6238 ;; This function calls:
  6239 ;;		_fputc
  6240 ;; This function is called by:
  6241 ;;		_pad
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           	psect	text24
  6246   004676                     __ptext24:
  6247                           	callstack 0
  6248   004676                     _fputs:
  6249                           	callstack 21
  6250   004676  0E00               	movlw	0
  6251   004678  6E0E               	movwf	(fputs@i+1)^0,c
  6252   00467A  0E00               	movlw	0
  6253   00467C  6E0D               	movwf	fputs@i^0,c
  6254   00467E  EF4A  F023         	goto	l4720
  6255   004682                     l4716:
  6256   004682  C00C  F001         	movff	fputs@c,fputc@c
  6257   004686  6A02               	clrf	(fputc@c+1)^0,c
  6258   004688  C00B  F003         	movff	fputs@fp,fputc@fp
  6259   00468C  EC5F  F020         	call	_fputc	;wreg free
  6260   004690  4A0D               	infsnz	fputs@i^0,f,c
  6261   004692  2A0E               	incf	(fputs@i+1)^0,f,c
  6262   004694                     l4720:
  6263   004694  500D               	movf	fputs@i^0,w,c
  6264   004696  2409               	addwf	fputs@s^0,w,c
  6265   004698  6ED9               	movwf	fsr2l,c
  6266   00469A  500E               	movf	(fputs@i+1)^0,w,c
  6267   00469C  200A               	addwfc	(fputs@s+1)^0,w,c
  6268   00469E  6EDA               	movwf	fsr2h,c
  6269   0046A0  50DF               	movf	indf2,w,c
  6270   0046A2  6E0C               	movwf	fputs@c^0,c
  6271   0046A4  500C               	movf	fputs@c^0,w,c
  6272   0046A6  A4D8               	btfss	status,2,c
  6273   0046A8  EF58  F023         	goto	u5451
  6274   0046AC  EF5A  F023         	goto	u5450
  6275   0046B0                     u5451:
  6276   0046B0  EF41  F023         	goto	l4716
  6277   0046B4                     u5450:
  6278   0046B4  0012               	return		;funcret
  6279   0046B6                     __end_of_fputs:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _fputc *****************
  6283 ;; Defined at:
  6284 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  c               2    0[COMRAM] int 
  6287 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6288 ;;		 -> sprintf@f(12), 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;		None
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  2    0[COMRAM] int 
  6293 ;; Registers used:
  6294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6300 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;Total ram usage:        8 bytes
  6305 ;; Hardware stack levels used: 1
  6306 ;; Hardware stack levels required when called: 1
  6307 ;; This function calls:
  6308 ;;		_putch
  6309 ;; This function is called by:
  6310 ;;		_pad
  6311 ;;		_vfpfcnvrt
  6312 ;;		_fputs
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text25
  6317   0040BE                     __ptext25:
  6318                           	callstack 0
  6319   0040BE                     _fputc:
  6320                           	callstack 24
  6321   0040BE  5003               	movf	fputc@fp^0,w,c
  6322   0040C0  B4D8               	btfsc	status,2,c
  6323   0040C2  EF65  F020         	goto	u2781
  6324   0040C6  EF67  F020         	goto	u2780
  6325   0040CA                     u2781:
  6326   0040CA  EF6F  F020         	goto	l3074
  6327   0040CE                     u2780:
  6328   0040CE  5003               	movf	fputc@fp^0,w,c
  6329   0040D0  A4D8               	btfss	status,2,c
  6330   0040D2  EF6D  F020         	goto	u2791
  6331   0040D6  EF6F  F020         	goto	u2790
  6332   0040DA                     u2791:
  6333   0040DA  EF74  F020         	goto	l3076
  6334   0040DE                     u2790:
  6335   0040DE                     l3074:
  6336   0040DE  5001               	movf	fputc@c^0,w,c
  6337   0040E0  EC3F  F024         	call	_putch
  6338   0040E4  EFBB  F020         	goto	l1287
  6339   0040E8                     l3076:
  6340   0040E8  5003               	movf	fputc@fp^0,w,c
  6341   0040EA  6ED9               	movwf	fsr2l,c
  6342   0040EC  6ADA               	clrf	fsr2h,c
  6343   0040EE  0E0A               	movlw	10
  6344   0040F0  26D9               	addwf	fsr2l,f,c
  6345   0040F2  50DE               	movf	postinc2,w,c
  6346   0040F4  10DE               	iorwf	postinc2,w,c
  6347   0040F6  B4D8               	btfsc	status,2,c
  6348   0040F8  EF80  F020         	goto	u2801
  6349   0040FC  EF82  F020         	goto	u2800
  6350   004100                     u2801:
  6351   004100  EF9B  F020         	goto	l3080
  6352   004104                     u2800:
  6353   004104  5003               	movf	fputc@fp^0,w,c
  6354   004106  6ED9               	movwf	fsr2l,c
  6355   004108  6ADA               	clrf	fsr2h,c
  6356   00410A  0E0A               	movlw	10
  6357   00410C  26D9               	addwf	fsr2l,f,c
  6358   00410E  5003               	movf	fputc@fp^0,w,c
  6359   004110  6EE1               	movwf	fsr1l,c
  6360   004112  6AE2               	clrf	fsr1h,c
  6361   004114  0E03               	movlw	3
  6362   004116  26E1               	addwf	fsr1l,f,c
  6363   004118  50DE               	movf	postinc2,w,c
  6364   00411A  5CE6               	subwf	postinc1,w,c
  6365   00411C  50E6               	movf	postinc1,w,c
  6366   00411E  0A80               	xorlw	128
  6367   004120  6E08               	movwf	(??_fputc+4)^0,c
  6368   004122  50DE               	movf	postinc2,w,c
  6369   004124  0A80               	xorlw	128
  6370   004126  5808               	subwfb	(??_fputc+4)^0,w,c
  6371   004128  B0D8               	btfsc	status,0,c
  6372   00412A  EF99  F020         	goto	u2811
  6373   00412E  EF9B  F020         	goto	u2810
  6374   004132                     u2811:
  6375   004132  EFBB  F020         	goto	l1287
  6376   004136                     u2810:
  6377   004136                     l3080:
  6378   004136  5003               	movf	fputc@fp^0,w,c
  6379   004138  6ED9               	movwf	fsr2l,c
  6380   00413A  6ADA               	clrf	fsr2h,c
  6381   00413C  0E03               	movlw	3
  6382   00413E  26D9               	addwf	fsr2l,f,c
  6383   004140  CFDE F004          	movff	postinc2,??_fputc
  6384   004144  CFDD F005          	movff	postdec2,??_fputc+1
  6385   004148  5003               	movf	fputc@fp^0,w,c
  6386   00414A  6ED9               	movwf	fsr2l,c
  6387   00414C  6ADA               	clrf	fsr2h,c
  6388   00414E  CFDE F006          	movff	postinc2,??_fputc+2
  6389   004152  CFDD F007          	movff	postdec2,??_fputc+3
  6390   004156  5004               	movf	??_fputc^0,w,c
  6391   004158  2406               	addwf	(??_fputc+2)^0,w,c
  6392   00415A  6ED9               	movwf	fsr2l,c
  6393   00415C  5005               	movf	(??_fputc+1)^0,w,c
  6394   00415E  2007               	addwfc	(??_fputc+3)^0,w,c
  6395   004160  6EDA               	movwf	fsr2h,c
  6396   004162  C001  FFDF         	movff	fputc@c,indf2
  6397   004166  5003               	movf	fputc@fp^0,w,c
  6398   004168  6ED9               	movwf	fsr2l,c
  6399   00416A  6ADA               	clrf	fsr2h,c
  6400   00416C  0E03               	movlw	3
  6401   00416E  26D9               	addwf	fsr2l,f,c
  6402   004170  2ADE               	incf	postinc2,f,c
  6403   004172  0E00               	movlw	0
  6404   004174  22DD               	addwfc	postdec2,f,c
  6405   004176                     l1287:
  6406   004176  0012               	return		;funcret
  6407   004178                     __end_of_fputc:
  6408                           	callstack 0
  6409                           
  6410 ;; *************** function _putch *****************
  6411 ;; Defined at:
  6412 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  c               1    wreg     unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  c               1    0[COMRAM] unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_fputc
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text26
  6440   00487E                     __ptext26:
  6441                           	callstack 0
  6442   00487E                     _putch:
  6443                           	callstack 24
  6444   00487E  0012               	return		;funcret
  6445   004880                     __end_of_putch:
  6446                           	callstack 0
  6447                           
  6448 ;; *************** function _memcpy *****************
  6449 ;; Defined at:
  6450 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  d1              2    0[COMRAM] PTR void 
  6453 ;;		 -> dbuf(80), 
  6454 ;;  s1              2    2[COMRAM] PTR const void 
  6455 ;;		 -> dbuf(80), 
  6456 ;;  n               2    4[COMRAM] unsigned int 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6459 ;;		 -> dbuf(80), 
  6460 ;;  d               2    7[COMRAM] PTR unsigned char 
  6461 ;;		 -> dbuf(80), 
  6462 ;;  tmp             1    6[COMRAM] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2    0[COMRAM] PTR void 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6472 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;Total ram usage:       11 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_efgtoa
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text27
  6486   0044CC                     __ptext27:
  6487                           	callstack 0
  6488   0044CC                     _memcpy:
  6489                           	callstack 24
  6490   0044CC  C003  F00A         	movff	memcpy@s1,memcpy@s
  6491   0044D0  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  6492   0044D4  C001  F008         	movff	memcpy@d1,memcpy@d
  6493   0044D8  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  6494   0044DC  EF80  F022         	goto	l4748
  6495   0044E0                     l4740:
  6496   0044E0  C00A  FFD9         	movff	memcpy@s,fsr2l
  6497   0044E4  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  6498   0044E8  50DF               	movf	indf2,w,c
  6499   0044EA  6E07               	movwf	memcpy@tmp^0,c
  6500   0044EC  4A0A               	infsnz	memcpy@s^0,f,c
  6501   0044EE  2A0B               	incf	(memcpy@s+1)^0,f,c
  6502   0044F0  C008  FFD9         	movff	memcpy@d,fsr2l
  6503   0044F4  C009  FFDA         	movff	memcpy@d+1,fsr2h
  6504   0044F8  C007  FFDF         	movff	memcpy@tmp,indf2
  6505   0044FC  4A08               	infsnz	memcpy@d^0,f,c
  6506   0044FE  2A09               	incf	(memcpy@d+1)^0,f,c
  6507   004500                     l4748:
  6508   004500  0605               	decf	memcpy@n^0,f,c
  6509   004502  A0D8               	btfss	status,0,c
  6510   004504  0606               	decf	(memcpy@n+1)^0,f,c
  6511   004506  2805               	incf	memcpy@n^0,w,c
  6512   004508  E106               	bnz	u5491
  6513   00450A  2806               	incf	(memcpy@n+1)^0,w,c
  6514   00450C  A4D8               	btfss	status,2,c
  6515   00450E  EF8B  F022         	goto	u5491
  6516   004512  EF8D  F022         	goto	u5490
  6517   004516                     u5491:
  6518   004516  EF70  F022         	goto	l4740
  6519   00451A                     u5490:
  6520   00451A  0012               	return		;funcret
  6521   00451C                     __end_of_memcpy:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _labs *****************
  6525 ;; Defined at:
  6526 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  a               4    0[COMRAM] long 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  4    0[COMRAM] long 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;Total ram usage:        8 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_efgtoa
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text28
  6554   004336                     __ptext28:
  6555                           	callstack 0
  6556   004336                     _labs:
  6557                           	callstack 24
  6558   004336  BE04               	btfsc	(labs@a+3)^0,7,c
  6559   004338  EFA0  F021         	goto	u3901
  6560   00433C  EFA2  F021         	goto	u3900
  6561   004340                     u3901:
  6562   004340  EFAC  F021         	goto	l3706
  6563   004344                     u3900:
  6564   004344  C001  F001         	movff	labs@a,?_labs
  6565   004348  C002  F002         	movff	labs@a+1,?_labs+1
  6566   00434C  C003  F003         	movff	labs@a+2,?_labs+2
  6567   004350  C004  F004         	movff	labs@a+3,?_labs+3
  6568   004354  EFC5  F021         	goto	l1269
  6569   004358                     l3706:
  6570   004358  C001  F005         	movff	labs@a,??_labs
  6571   00435C  C002  F006         	movff	labs@a+1,??_labs+1
  6572   004360  C003  F007         	movff	labs@a+2,??_labs+2
  6573   004364  C004  F008         	movff	labs@a+3,??_labs+3
  6574   004368  1E05               	comf	??_labs^0,f,c
  6575   00436A  1E06               	comf	(??_labs+1)^0,f,c
  6576   00436C  1E07               	comf	(??_labs+2)^0,f,c
  6577   00436E  1E08               	comf	(??_labs+3)^0,f,c
  6578   004370  2A05               	incf	??_labs^0,f,c
  6579   004372  0E00               	movlw	0
  6580   004374  2206               	addwfc	(??_labs+1)^0,f,c
  6581   004376  2207               	addwfc	(??_labs+2)^0,f,c
  6582   004378  2208               	addwfc	(??_labs+3)^0,f,c
  6583   00437A  C005  F001         	movff	??_labs,?_labs
  6584   00437E  C006  F002         	movff	??_labs+1,?_labs+1
  6585   004382  C007  F003         	movff	??_labs+2,?_labs+2
  6586   004386  C008  F004         	movff	??_labs+3,?_labs+3
  6587   00438A                     l1269:
  6588   00438A  0012               	return		;funcret
  6589   00438C                     __end_of_labs:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function _floorf *****************
  6593 ;; Defined at:
  6594 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  x               4   58[COMRAM] float 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  u               4   74[COMRAM] struct .
  6599 ;;  m               4   68[COMRAM] unsigned long 
  6600 ;;  e               2   72[COMRAM] int 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  4   58[COMRAM] float 
  6603 ;; Registers used:
  6604 ;;		wreg, status,2, status,0
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6612 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6613 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6614 ;;Total ram usage:       20 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_efgtoa
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text29
  6624   0038D8                     __ptext29:
  6625                           	callstack 0
  6626   0038D8                     _floorf:
  6627                           	callstack 24
  6628   0038D8  C12F  F04B         	movff	floorf@F521,floorf@u
  6629   0038DC  C130  F04C         	movff	floorf@F521+1,floorf@u+1
  6630   0038E0  C131  F04D         	movff	floorf@F521+2,floorf@u+2
  6631   0038E4  C132  F04E         	movff	floorf@F521+3,floorf@u+3
  6632   0038E8  C03B  F04B         	movff	floorf@x,floorf@u
  6633   0038EC  C03C  F04C         	movff	floorf@x+1,floorf@u+1
  6634   0038F0  C03D  F04D         	movff	floorf@x+2,floorf@u+2
  6635   0038F4  C03E  F04E         	movff	floorf@x+3,floorf@u+3
  6636   0038F8  0E81               	movlw	129
  6637   0038FA  6E3F               	movwf	??_floorf^0,c
  6638   0038FC  0EFF               	movlw	255
  6639   0038FE  6E40               	movwf	(??_floorf+1)^0,c
  6640   003900  C04B  F041         	movff	floorf@u,??_floorf+2
  6641   003904  C04C  F042         	movff	floorf@u+1,??_floorf+3
  6642   003908  C04D  F043         	movff	floorf@u+2,??_floorf+4
  6643   00390C  C04E  F044         	movff	floorf@u+3,??_floorf+5
  6644   003910  0E18               	movlw	24
  6645   003912  EF90  F01C         	goto	u3910
  6646   003916                     u3915:
  6647   003916  90D8               	bcf	status,0,c
  6648   003918  3244               	rrcf	(??_floorf+5)^0,f,c
  6649   00391A  3243               	rrcf	(??_floorf+4)^0,f,c
  6650   00391C  3242               	rrcf	(??_floorf+3)^0,f,c
  6651   00391E  3241               	rrcf	(??_floorf+2)^0,f,c
  6652   003920                     u3910:
  6653   003920  2EE8               	decfsz	wreg,f,c
  6654   003922  EF8B  F01C         	goto	u3915
  6655   003926  5041               	movf	(??_floorf+2)^0,w,c
  6656   003928  243F               	addwf	??_floorf^0,w,c
  6657   00392A  6E49               	movwf	floorf@e^0,c
  6658   00392C  0E00               	movlw	0
  6659   00392E  2040               	addwfc	(??_floorf+1)^0,w,c
  6660   003930  6E4A               	movwf	(floorf@e+1)^0,c
  6661   003932  BE4A               	btfsc	(floorf@e+1)^0,7,c
  6662   003934  EFA5  F01C         	goto	u3921
  6663   003938  504A               	movf	(floorf@e+1)^0,w,c
  6664   00393A  E109               	bnz	u3920
  6665   00393C  0E17               	movlw	23
  6666   00393E  5C49               	subwf	floorf@e^0,w,c
  6667   003940  A0D8               	btfss	status,0,c
  6668   003942  EFA5  F01C         	goto	u3921
  6669   003946  EFA7  F01C         	goto	u3920
  6670   00394A                     u3921:
  6671   00394A  EFB1  F01C         	goto	l3716
  6672   00394E                     u3920:
  6673   00394E                     l3714:
  6674   00394E  C03B  F03B         	movff	floorf@x,?_floorf
  6675   003952  C03C  F03C         	movff	floorf@x+1,?_floorf+1
  6676   003956  C03D  F03D         	movff	floorf@x+2,?_floorf+2
  6677   00395A  C03E  F03E         	movff	floorf@x+3,?_floorf+3
  6678   00395E  EF74  F01D         	goto	l1255
  6679   003962                     l3716:
  6680   003962  BE4A               	btfsc	(floorf@e+1)^0,7,c
  6681   003964  EFB6  F01C         	goto	u3931
  6682   003968  EFB8  F01C         	goto	u3930
  6683   00396C                     u3931:
  6684   00396C  EF28  F01D         	goto	l3726
  6685   003970                     u3930:
  6686   003970  C049  F03F         	movff	floorf@e,??_floorf
  6687   003974  0EFF               	movlw	255
  6688   003976  6E40               	movwf	(??_floorf+1)^0,c
  6689   003978  0EFF               	movlw	255
  6690   00397A  6E41               	movwf	(??_floorf+2)^0,c
  6691   00397C  0E7F               	movlw	127
  6692   00397E  6E42               	movwf	(??_floorf+3)^0,c
  6693   003980  0E00               	movlw	0
  6694   003982  6E43               	movwf	(??_floorf+4)^0,c
  6695   003984                     u3945:
  6696   003984  663F               	tstfsz	??_floorf^0,c
  6697   003986  EFC7  F01C         	goto	u3946
  6698   00398A  EFCF  F01C         	goto	u3947
  6699   00398E                     u3946:
  6700   00398E  3443               	rlcf	(??_floorf+4)^0,w,c
  6701   003990  3243               	rrcf	(??_floorf+4)^0,f,c
  6702   003992  3242               	rrcf	(??_floorf+3)^0,f,c
  6703   003994  3241               	rrcf	(??_floorf+2)^0,f,c
  6704   003996  3240               	rrcf	(??_floorf+1)^0,f,c
  6705   003998  2E3F               	decfsz	??_floorf^0,f,c
  6706   00399A  EFC2  F01C         	goto	u3945
  6707   00399E                     u3947:
  6708   00399E  C040  F045         	movff	??_floorf+1,floorf@m
  6709   0039A2  C041  F046         	movff	??_floorf+2,floorf@m+1
  6710   0039A6  C042  F047         	movff	??_floorf+3,floorf@m+2
  6711   0039AA  C043  F048         	movff	??_floorf+4,floorf@m+3
  6712   0039AE  5045               	movf	floorf@m^0,w,c
  6713   0039B0  144B               	andwf	floorf@u^0,w,c
  6714   0039B2  6E3F               	movwf	??_floorf^0,c
  6715   0039B4  5046               	movf	(floorf@m+1)^0,w,c
  6716   0039B6  144C               	andwf	(floorf@u+1)^0,w,c
  6717   0039B8  6E40               	movwf	(??_floorf+1)^0,c
  6718   0039BA  5047               	movf	(floorf@m+2)^0,w,c
  6719   0039BC  144D               	andwf	(floorf@u+2)^0,w,c
  6720   0039BE  6E41               	movwf	(??_floorf+2)^0,c
  6721   0039C0  5048               	movf	(floorf@m+3)^0,w,c
  6722   0039C2  144E               	andwf	(floorf@u+3)^0,w,c
  6723   0039C4  6E42               	movwf	(??_floorf+3)^0,c
  6724   0039C6  503F               	movf	??_floorf^0,w,c
  6725   0039C8  1040               	iorwf	(??_floorf+1)^0,w,c
  6726   0039CA  1041               	iorwf	(??_floorf+2)^0,w,c
  6727   0039CC  1042               	iorwf	(??_floorf+3)^0,w,c
  6728   0039CE  A4D8               	btfss	status,2,c
  6729   0039D0  EFEC  F01C         	goto	u3951
  6730   0039D4  EFEE  F01C         	goto	u3950
  6731   0039D8                     u3951:
  6732   0039D8  EFF0  F01C         	goto	l3722
  6733   0039DC                     u3950:
  6734   0039DC  EFA7  F01C         	goto	l3714
  6735   0039E0                     l3722:
  6736   0039E0  C04B  F03F         	movff	floorf@u,??_floorf
  6737   0039E4  C04C  F040         	movff	floorf@u+1,??_floorf+1
  6738   0039E8  C04D  F041         	movff	floorf@u+2,??_floorf+2
  6739   0039EC  C04E  F042         	movff	floorf@u+3,??_floorf+3
  6740   0039F0  0E20               	movlw	32
  6741   0039F2  EF00  F01D         	goto	u3960
  6742   0039F6                     u3965:
  6743   0039F6  90D8               	bcf	status,0,c
  6744   0039F8  3242               	rrcf	(??_floorf+3)^0,f,c
  6745   0039FA  3241               	rrcf	(??_floorf+2)^0,f,c
  6746   0039FC  3240               	rrcf	(??_floorf+1)^0,f,c
  6747   0039FE  323F               	rrcf	??_floorf^0,f,c
  6748   003A00                     u3960:
  6749   003A00  2EE8               	decfsz	wreg,f,c
  6750   003A02  EFFB  F01C         	goto	u3965
  6751   003A06  503F               	movf	??_floorf^0,w,c
  6752   003A08  1040               	iorwf	(??_floorf+1)^0,w,c
  6753   003A0A  1041               	iorwf	(??_floorf+2)^0,w,c
  6754   003A0C  1042               	iorwf	(??_floorf+3)^0,w,c
  6755   003A0E  B4D8               	btfsc	status,2,c
  6756   003A10  EF0C  F01D         	goto	u3971
  6757   003A14  EF0E  F01D         	goto	u3970
  6758   003A18                     u3971:
  6759   003A18  EF16  F01D         	goto	l1258
  6760   003A1C                     u3970:
  6761   003A1C  5045               	movf	floorf@m^0,w,c
  6762   003A1E  264B               	addwf	floorf@u^0,f,c
  6763   003A20  5046               	movf	(floorf@m+1)^0,w,c
  6764   003A22  224C               	addwfc	(floorf@u+1)^0,f,c
  6765   003A24  5047               	movf	(floorf@m+2)^0,w,c
  6766   003A26  224D               	addwfc	(floorf@u+2)^0,f,c
  6767   003A28  5048               	movf	(floorf@m+3)^0,w,c
  6768   003A2A  224E               	addwfc	(floorf@u+3)^0,f,c
  6769   003A2C                     l1258:
  6770   003A2C  1C45               	comf	floorf@m^0,w,c
  6771   003A2E  6E3F               	movwf	??_floorf^0,c
  6772   003A30  1C46               	comf	(floorf@m+1)^0,w,c
  6773   003A32  6E40               	movwf	(??_floorf+1)^0,c
  6774   003A34  1C47               	comf	(floorf@m+2)^0,w,c
  6775   003A36  6E41               	movwf	(??_floorf+2)^0,c
  6776   003A38  1C48               	comf	(floorf@m+3)^0,w,c
  6777   003A3A  6E42               	movwf	(??_floorf+3)^0,c
  6778   003A3C  503F               	movf	??_floorf^0,w,c
  6779   003A3E  164B               	andwf	floorf@u^0,f,c
  6780   003A40  5040               	movf	(??_floorf+1)^0,w,c
  6781   003A42  164C               	andwf	(floorf@u+1)^0,f,c
  6782   003A44  5041               	movf	(??_floorf+2)^0,w,c
  6783   003A46  164D               	andwf	(floorf@u+2)^0,f,c
  6784   003A48  5042               	movf	(??_floorf+3)^0,w,c
  6785   003A4A  164E               	andwf	(floorf@u+3)^0,f,c
  6786   003A4C  EF6C  F01D         	goto	l3734
  6787   003A50                     l3726:
  6788   003A50  C04B  F03F         	movff	floorf@u,??_floorf
  6789   003A54  C04C  F040         	movff	floorf@u+1,??_floorf+1
  6790   003A58  C04D  F041         	movff	floorf@u+2,??_floorf+2
  6791   003A5C  C04E  F042         	movff	floorf@u+3,??_floorf+3
  6792   003A60  0E20               	movlw	32
  6793   003A62  EF38  F01D         	goto	u3980
  6794   003A66                     u3985:
  6795   003A66  90D8               	bcf	status,0,c
  6796   003A68  3242               	rrcf	(??_floorf+3)^0,f,c
  6797   003A6A  3241               	rrcf	(??_floorf+2)^0,f,c
  6798   003A6C  3240               	rrcf	(??_floorf+1)^0,f,c
  6799   003A6E  323F               	rrcf	??_floorf^0,f,c
  6800   003A70                     u3980:
  6801   003A70  2EE8               	decfsz	wreg,f,c
  6802   003A72  EF33  F01D         	goto	u3985
  6803   003A76  503F               	movf	??_floorf^0,w,c
  6804   003A78  1040               	iorwf	(??_floorf+1)^0,w,c
  6805   003A7A  1041               	iorwf	(??_floorf+2)^0,w,c
  6806   003A7C  1042               	iorwf	(??_floorf+3)^0,w,c
  6807   003A7E  A4D8               	btfss	status,2,c
  6808   003A80  EF44  F01D         	goto	u3991
  6809   003A84  EF46  F01D         	goto	u3990
  6810   003A88                     u3991:
  6811   003A88  EF50  F01D         	goto	l3730
  6812   003A8C                     u3990:
  6813   003A8C  0E00               	movlw	0
  6814   003A8E  6E4B               	movwf	floorf@u^0,c
  6815   003A90  0E00               	movlw	0
  6816   003A92  6E4C               	movwf	(floorf@u+1)^0,c
  6817   003A94  0E00               	movlw	0
  6818   003A96  6E4D               	movwf	(floorf@u+2)^0,c
  6819   003A98  0E00               	movlw	0
  6820   003A9A  6E4E               	movwf	(floorf@u+3)^0,c
  6821   003A9C  EF6C  F01D         	goto	l3734
  6822   003AA0                     l3730:
  6823   003AA0  90D8               	bcf	status,0,c
  6824   003AA2  344B               	rlcf	floorf@u^0,w,c
  6825   003AA4  6E3F               	movwf	??_floorf^0,c
  6826   003AA6  344C               	rlcf	(floorf@u+1)^0,w,c
  6827   003AA8  6E40               	movwf	(??_floorf+1)^0,c
  6828   003AAA  344D               	rlcf	(floorf@u+2)^0,w,c
  6829   003AAC  6E41               	movwf	(??_floorf+2)^0,c
  6830   003AAE  344E               	rlcf	(floorf@u+3)^0,w,c
  6831   003AB0  6E42               	movwf	(??_floorf+3)^0,c
  6832   003AB2  503F               	movf	??_floorf^0,w,c
  6833   003AB4  1040               	iorwf	(??_floorf+1)^0,w,c
  6834   003AB6  1041               	iorwf	(??_floorf+2)^0,w,c
  6835   003AB8  1042               	iorwf	(??_floorf+3)^0,w,c
  6836   003ABA  B4D8               	btfsc	status,2,c
  6837   003ABC  EF62  F01D         	goto	u4001
  6838   003AC0  EF64  F01D         	goto	u4000
  6839   003AC4                     u4001:
  6840   003AC4  EF6C  F01D         	goto	l3734
  6841   003AC8                     u4000:
  6842   003AC8  0E00               	movlw	0
  6843   003ACA  6E4B               	movwf	floorf@u^0,c
  6844   003ACC  0E00               	movlw	0
  6845   003ACE  6E4C               	movwf	(floorf@u+1)^0,c
  6846   003AD0  0E80               	movlw	128
  6847   003AD2  6E4D               	movwf	(floorf@u+2)^0,c
  6848   003AD4  0EBF               	movlw	191
  6849   003AD6  6E4E               	movwf	(floorf@u+3)^0,c
  6850   003AD8                     l3734:
  6851   003AD8  C04B  F03B         	movff	floorf@u,?_floorf
  6852   003ADC  C04C  F03C         	movff	floorf@u+1,?_floorf+1
  6853   003AE0  C04D  F03D         	movff	floorf@u+2,?_floorf+2
  6854   003AE4  C04E  F03E         	movff	floorf@u+3,?_floorf+3
  6855   003AE8                     l1255:
  6856   003AE8  0012               	return		;funcret
  6857   003AEA                     __end_of_floorf:
  6858                           	callstack 0
  6859                           
  6860 ;; *************** function ___fpclassifyf *****************
  6861 ;; Defined at:
  6862 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  x               4    0[COMRAM] float 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  u               4   10[COMRAM] struct .
  6867 ;;  e               2    8[COMRAM] int 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  2    0[COMRAM] int 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;Total ram usage:       14 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_efgtoa
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text30
  6891   003FC0                     __ptext30:
  6892                           	callstack 0
  6893   003FC0                     ___fpclassifyf:
  6894                           	callstack 24
  6895   003FC0  C133  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6896   003FC4  C134  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6897   003FC8  C135  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6898   003FCC  C136  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6899   003FD0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6900   003FD4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6901   003FD8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6902   003FDC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6903   003FE0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6904   003FE4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6905   003FE8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6906   003FEC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6907   003FF0  0E18               	movlw	24
  6908   003FF2  EF00  F020         	goto	u3820
  6909   003FF6                     u3825:
  6910   003FF6  90D8               	bcf	status,0,c
  6911   003FF8  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6912   003FFA  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6913   003FFC  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6914   003FFE  3205               	rrcf	??___fpclassifyf^0,f,c
  6915   004000                     u3820:
  6916   004000  2EE8               	decfsz	wreg,f,c
  6917   004002  EFFB  F01F         	goto	u3825
  6918   004006  5005               	movf	??___fpclassifyf^0,w,c
  6919   004008  6E09               	movwf	___fpclassifyf@e^0,c
  6920   00400A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6921   00400C  5009               	movf	___fpclassifyf@e^0,w,c
  6922   00400E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6923   004010  A4D8               	btfss	status,2,c
  6924   004012  EF0D  F020         	goto	u3831
  6925   004016  EF0F  F020         	goto	u3830
  6926   00401A                     u3831:
  6927   00401A  EF2F  F020         	goto	l3688
  6928   00401E                     u3830:
  6929   00401E  90D8               	bcf	status,0,c
  6930   004020  340B               	rlcf	___fpclassifyf@u^0,w,c
  6931   004022  6E05               	movwf	??___fpclassifyf^0,c
  6932   004024  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6933   004026  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6934   004028  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6935   00402A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6936   00402C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6937   00402E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6938   004030  5005               	movf	??___fpclassifyf^0,w,c
  6939   004032  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6940   004034  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6941   004036  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6942   004038  A4D8               	btfss	status,2,c
  6943   00403A  EF21  F020         	goto	u3841
  6944   00403E  EF23  F020         	goto	u3840
  6945   004042                     u3841:
  6946   004042  EF29  F020         	goto	l3684
  6947   004046                     u3840:
  6948   004046  0E00               	movlw	0
  6949   004048  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6950   00404A  0E02               	movlw	2
  6951   00404C  6E01               	movwf	?___fpclassifyf^0,c
  6952   00404E  EF5E  F020         	goto	l1248
  6953   004052                     l3684:
  6954   004052  0E00               	movlw	0
  6955   004054  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6956   004056  0E03               	movlw	3
  6957   004058  6E01               	movwf	?___fpclassifyf^0,c
  6958   00405A  EF5E  F020         	goto	l1248
  6959   00405E                     l3688:
  6960   00405E  2809               	incf	___fpclassifyf@e^0,w,c
  6961   004060  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6962   004062  A4D8               	btfss	status,2,c
  6963   004064  EF36  F020         	goto	u3851
  6964   004068  EF38  F020         	goto	u3850
  6965   00406C                     u3851:
  6966   00406C  EF5A  F020         	goto	l3694
  6967   004070                     u3850:
  6968   004070  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6969   004074  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6970   004078  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6971   00407C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6972   004080  0E09               	movlw	9
  6973   004082                     u3865:
  6974   004082  90D8               	bcf	status,0,c
  6975   004084  3605               	rlcf	??___fpclassifyf^0,f,c
  6976   004086  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6977   004088  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6978   00408A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6979   00408C  2EE8               	decfsz	wreg,f,c
  6980   00408E  EF41  F020         	goto	u3865
  6981   004092  5005               	movf	??___fpclassifyf^0,w,c
  6982   004094  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6983   004096  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6984   004098  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6985   00409A  B4D8               	btfsc	status,2,c
  6986   00409C  EF52  F020         	goto	u3871
  6987   0040A0  EF55  F020         	goto	u3870
  6988   0040A4                     u3871:
  6989   0040A4  0E01               	movlw	1
  6990   0040A6  EF56  F020         	goto	u3880
  6991   0040AA                     u3870:
  6992   0040AA  0E00               	movlw	0
  6993   0040AC                     u3880:
  6994   0040AC  6E01               	movwf	?___fpclassifyf^0,c
  6995   0040AE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6996   0040B0  EF5E  F020         	goto	l1248
  6997   0040B4                     l3694:
  6998   0040B4  0E00               	movlw	0
  6999   0040B6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7000   0040B8  0E04               	movlw	4
  7001   0040BA  6E01               	movwf	?___fpclassifyf^0,c
  7002   0040BC                     l1248:
  7003   0040BC  0012               	return		;funcret
  7004   0040BE                     __end_of___fpclassifyf:
  7005                           	callstack 0
  7006                           
  7007 ;; *************** function ___flneg *****************
  7008 ;; Defined at:
  7009 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  f1              4    0[COMRAM] int 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  4    0[COMRAM] int 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7027 ;;Total ram usage:        4 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_efgtoa
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text31
  7037   004730                     __ptext31:
  7038                           	callstack 0
  7039   004730                     ___flneg:
  7040                           	callstack 24
  7041   004730  5001               	movf	___flneg@f1^0,w,c
  7042   004732  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7043   004734  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7044   004736  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7045   004738  B4D8               	btfsc	status,2,c
  7046   00473A  EFA1  F023         	goto	u3721
  7047   00473E  EFA3  F023         	goto	u3720
  7048   004742                     u3721:
  7049   004742  EFAB  F023         	goto	l3616
  7050   004746                     u3720:
  7051   004746  0E00               	movlw	0
  7052   004748  1A01               	xorwf	___flneg@f1^0,f,c
  7053   00474A  0E00               	movlw	0
  7054   00474C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7055   00474E  0E00               	movlw	0
  7056   004750  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7057   004752  0E80               	movlw	128
  7058   004754  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7059   004756                     l3616:
  7060   004756  C001  F001         	movff	___flneg@f1,?___flneg
  7061   00475A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7062   00475E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7063   004762  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7064   004766  0012               	return		;funcret
  7065   004768                     __end_of___flneg:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function ___flge *****************
  7069 ;; Defined at:
  7070 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  ff1             4   83[COMRAM] int 
  7073 ;;  ff2             4   87[COMRAM] int 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;		None               void
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7085 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;Total ram usage:       12 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_RGB_to_HSV
  7095 ;;		_color_cardCheck
  7096 ;;		_efgtoa
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text32
  7101   003EBC                     __ptext32:
  7102                           	callstack 0
  7103   003EBC                     ___flge:
  7104                           	callstack 29
  7105   003EBC  0E00               	movlw	0
  7106   003EBE  1454               	andwf	___flge@ff1^0,w,c
  7107   003EC0  6E5C               	movwf	??___flge^0,c
  7108   003EC2  0E00               	movlw	0
  7109   003EC4  1455               	andwf	(___flge@ff1+1)^0,w,c
  7110   003EC6  6E5D               	movwf	(??___flge+1)^0,c
  7111   003EC8  0E80               	movlw	128
  7112   003ECA  1456               	andwf	(___flge@ff1+2)^0,w,c
  7113   003ECC  6E5E               	movwf	(??___flge+2)^0,c
  7114   003ECE  0E7F               	movlw	127
  7115   003ED0  1457               	andwf	(___flge@ff1+3)^0,w,c
  7116   003ED2  6E5F               	movwf	(??___flge+3)^0,c
  7117   003ED4  505C               	movf	??___flge^0,w,c
  7118   003ED6  105D               	iorwf	(??___flge+1)^0,w,c
  7119   003ED8  105E               	iorwf	(??___flge+2)^0,w,c
  7120   003EDA  105F               	iorwf	(??___flge+3)^0,w,c
  7121   003EDC  A4D8               	btfss	status,2,c
  7122   003EDE  EF73  F01F         	goto	u3671
  7123   003EE2  EF75  F01F         	goto	u3670
  7124   003EE6                     u3671:
  7125   003EE6  EF7D  F01F         	goto	l3594
  7126   003EEA                     u3670:
  7127   003EEA  0E00               	movlw	0
  7128   003EEC  6E54               	movwf	___flge@ff1^0,c
  7129   003EEE  0E00               	movlw	0
  7130   003EF0  6E55               	movwf	(___flge@ff1+1)^0,c
  7131   003EF2  0E00               	movlw	0
  7132   003EF4  6E56               	movwf	(___flge@ff1+2)^0,c
  7133   003EF6  0E00               	movlw	0
  7134   003EF8  6E57               	movwf	(___flge@ff1+3)^0,c
  7135   003EFA                     l3594:
  7136   003EFA  0E00               	movlw	0
  7137   003EFC  1458               	andwf	___flge@ff2^0,w,c
  7138   003EFE  6E5C               	movwf	??___flge^0,c
  7139   003F00  0E00               	movlw	0
  7140   003F02  1459               	andwf	(___flge@ff2+1)^0,w,c
  7141   003F04  6E5D               	movwf	(??___flge+1)^0,c
  7142   003F06  0E80               	movlw	128
  7143   003F08  145A               	andwf	(___flge@ff2+2)^0,w,c
  7144   003F0A  6E5E               	movwf	(??___flge+2)^0,c
  7145   003F0C  0E7F               	movlw	127
  7146   003F0E  145B               	andwf	(___flge@ff2+3)^0,w,c
  7147   003F10  6E5F               	movwf	(??___flge+3)^0,c
  7148   003F12  505C               	movf	??___flge^0,w,c
  7149   003F14  105D               	iorwf	(??___flge+1)^0,w,c
  7150   003F16  105E               	iorwf	(??___flge+2)^0,w,c
  7151   003F18  105F               	iorwf	(??___flge+3)^0,w,c
  7152   003F1A  A4D8               	btfss	status,2,c
  7153   003F1C  EF92  F01F         	goto	u3681
  7154   003F20  EF94  F01F         	goto	u3680
  7155   003F24                     u3681:
  7156   003F24  EF9C  F01F         	goto	l3598
  7157   003F28                     u3680:
  7158   003F28  0E00               	movlw	0
  7159   003F2A  6E58               	movwf	___flge@ff2^0,c
  7160   003F2C  0E00               	movlw	0
  7161   003F2E  6E59               	movwf	(___flge@ff2+1)^0,c
  7162   003F30  0E00               	movlw	0
  7163   003F32  6E5A               	movwf	(___flge@ff2+2)^0,c
  7164   003F34  0E00               	movlw	0
  7165   003F36  6E5B               	movwf	(___flge@ff2+3)^0,c
  7166   003F38                     l3598:
  7167   003F38  AE57               	btfss	(___flge@ff1+3)^0,7,c
  7168   003F3A  EFA1  F01F         	goto	u3691
  7169   003F3E  EFA3  F01F         	goto	u3690
  7170   003F42                     u3691:
  7171   003F42  EFAC  F01F         	goto	l3602
  7172   003F46                     u3690:
  7173   003F46  6C54               	negf	___flge@ff1^0,c
  7174   003F48  1E55               	comf	(___flge@ff1+1)^0,f,c
  7175   003F4A  B0D8               	btfsc	status,0,c
  7176   003F4C  2A55               	incf	(___flge@ff1+1)^0,f,c
  7177   003F4E  1E56               	comf	(___flge@ff1+2)^0,f,c
  7178   003F50  B0D8               	btfsc	status,0,c
  7179   003F52  2A56               	incf	(___flge@ff1+2)^0,f,c
  7180   003F54  0E80               	movlw	128
  7181   003F56  5657               	subfwb	(___flge@ff1+3)^0,f,c
  7182   003F58                     l3602:
  7183   003F58  AE5B               	btfss	(___flge@ff2+3)^0,7,c
  7184   003F5A  EFB1  F01F         	goto	u3701
  7185   003F5E  EFB3  F01F         	goto	u3700
  7186   003F62                     u3701:
  7187   003F62  EFBC  F01F         	goto	l707
  7188   003F66                     u3700:
  7189   003F66  6C58               	negf	___flge@ff2^0,c
  7190   003F68  1E59               	comf	(___flge@ff2+1)^0,f,c
  7191   003F6A  B0D8               	btfsc	status,0,c
  7192   003F6C  2A59               	incf	(___flge@ff2+1)^0,f,c
  7193   003F6E  1E5A               	comf	(___flge@ff2+2)^0,f,c
  7194   003F70  B0D8               	btfsc	status,0,c
  7195   003F72  2A5A               	incf	(___flge@ff2+2)^0,f,c
  7196   003F74  0E80               	movlw	128
  7197   003F76  565B               	subfwb	(___flge@ff2+3)^0,f,c
  7198   003F78                     l707:
  7199   003F78  0E00               	movlw	0
  7200   003F7A  1A54               	xorwf	___flge@ff1^0,f,c
  7201   003F7C  0E00               	movlw	0
  7202   003F7E  1A55               	xorwf	(___flge@ff1+1)^0,f,c
  7203   003F80  0E00               	movlw	0
  7204   003F82  1A56               	xorwf	(___flge@ff1+2)^0,f,c
  7205   003F84  0E80               	movlw	128
  7206   003F86  1A57               	xorwf	(___flge@ff1+3)^0,f,c
  7207   003F88  0E00               	movlw	0
  7208   003F8A  1A58               	xorwf	___flge@ff2^0,f,c
  7209   003F8C  0E00               	movlw	0
  7210   003F8E  1A59               	xorwf	(___flge@ff2+1)^0,f,c
  7211   003F90  0E00               	movlw	0
  7212   003F92  1A5A               	xorwf	(___flge@ff2+2)^0,f,c
  7213   003F94  0E80               	movlw	128
  7214   003F96  1A5B               	xorwf	(___flge@ff2+3)^0,f,c
  7215   003F98  5058               	movf	___flge@ff2^0,w,c
  7216   003F9A  5C54               	subwf	___flge@ff1^0,w,c
  7217   003F9C  5059               	movf	(___flge@ff2+1)^0,w,c
  7218   003F9E  5855               	subwfb	(___flge@ff1+1)^0,w,c
  7219   003FA0  505A               	movf	(___flge@ff2+2)^0,w,c
  7220   003FA2  5856               	subwfb	(___flge@ff1+2)^0,w,c
  7221   003FA4  505B               	movf	(___flge@ff2+3)^0,w,c
  7222   003FA6  5857               	subwfb	(___flge@ff1+3)^0,w,c
  7223   003FA8  B0D8               	btfsc	status,0,c
  7224   003FAA  EFD9  F01F         	goto	u3711
  7225   003FAE  EFDB  F01F         	goto	u3710
  7226   003FB2                     u3711:
  7227   003FB2  EFDE  F01F         	goto	l3608
  7228   003FB6                     u3710:
  7229   003FB6  90D8               	bcf	status,0,c
  7230   003FB8  EFDF  F01F         	goto	l712
  7231   003FBC                     l3608:
  7232   003FBC  80D8               	bsf	status,0,c
  7233   003FBE                     l712:
  7234   003FBE  0012               	return		;funcret
  7235   003FC0                     __end_of___flge:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function _sendStringSerial4 *****************
  7239 ;; Defined at:
  7240 ;;		line 94 in file "serial.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  string          2    1[COMRAM] PTR unsigned char 
  7243 ;;		 -> RGB_to_HSV@senddata(25), 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;Total ram usage:        2 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 1
  7262 ;; This function calls:
  7263 ;;		_sendCharSerial4
  7264 ;; This function is called by:
  7265 ;;		_RGB_to_HSV
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text33
  7270   004768                     __ptext33:
  7271                           	callstack 0
  7272   004768                     _sendStringSerial4:
  7273                           	callstack 27
  7274   004768                     
  7275                           ;serial.c: 96:     while(*string != 0){
  7276   004768  EFBF  F023         	goto	l4182
  7277   00476C                     l4178:
  7278                           
  7279                           ;serial.c: 97:   sendCharSerial4(*string++);
  7280   00476C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7281   004770  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7282   004774  50DF               	movf	indf2,w,c
  7283   004776  EC18  F024         	call	_sendCharSerial4
  7284   00477A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7285   00477C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7286   00477E                     l4182:
  7287                           
  7288                           ;serial.c: 96:     while(*string != 0){
  7289   00477E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7290   004782  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7291   004786  50DF               	movf	indf2,w,c
  7292   004788  A4D8               	btfss	status,2,c
  7293   00478A  EFC9  F023         	goto	u4561
  7294   00478E  EFCB  F023         	goto	u4560
  7295   004792                     u4561:
  7296   004792  EFB6  F023         	goto	l4178
  7297   004796                     u4560:
  7298   004796  0012               	return		;funcret
  7299   004798                     __end_of_sendStringSerial4:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _sendCharSerial4 *****************
  7303 ;; Defined at:
  7304 ;;		line 87 in file "serial.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  charToSend      1    wreg     unsigned char 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  charToSend      1    0[COMRAM] unsigned char 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;Total ram usage:        1 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_sendStringSerial4
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text34
  7332   004830                     __ptext34:
  7333                           	callstack 0
  7334   004830                     _sendCharSerial4:
  7335                           	callstack 27
  7336                           
  7337                           ;incstack = 0
  7338                           ;sendCharSerial4@charToSend stored from wreg
  7339   004830  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7340   004832                     l401:
  7341   004832  010E               	movlb	14	; () banked
  7342   004834  A537               	btfss	55,2,b	;volatile
  7343   004836  EF1F  F024         	goto	u4411
  7344   00483A  EF21  F024         	goto	u4410
  7345   00483E                     u4411:
  7346   00483E  EF19  F024         	goto	l401
  7347   004842                     u4410:
  7348   004842                     
  7349                           ; BSR set to: 14
  7350                           ;serial.c: 89:     TX4REG = charToSend;
  7351   004842  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7352   004846                     
  7353                           ; BSR set to: 14
  7354   004846  0012               	return		;funcret
  7355   004848                     __end_of_sendCharSerial4:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _custom_floatmodulo *****************
  7359 ;; Defined at:
  7360 ;;		line 114 in file "color.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  x               4   83[COMRAM] float 
  7363 ;;  y               4   87[COMRAM] float 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  remainder       4    4[BANK0 ] float 
  7366 ;;  quotient        4    0[BANK0 ] float 
  7367 ;;  intPart         2    8[BANK0 ] int 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  4   83[COMRAM] float 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7377 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;Total ram usage:       18 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 2
  7384 ;; This function calls:
  7385 ;;		___fldiv
  7386 ;;		___fleq
  7387 ;;		___flmul
  7388 ;;		___flsub
  7389 ;;		___fltol
  7390 ;;		___xxtofl
  7391 ;; This function is called by:
  7392 ;;		_RGB_to_HSV
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text35
  7397   003C9E                     __ptext35:
  7398                           	callstack 0
  7399   003C9E                     _custom_floatmodulo:
  7400                           	callstack 26
  7401   003C9E                     
  7402                           ;color.c: 116:     if (y == 0.0) {
  7403   003C9E  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  7404   003CA2  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  7405   003CA6  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  7406   003CAA  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  7407   003CAE  0E00               	movlw	0
  7408   003CB0  6E05               	movwf	___fleq@ff2^0,c
  7409   003CB2  0E00               	movlw	0
  7410   003CB4  6E06               	movwf	(___fleq@ff2+1)^0,c
  7411   003CB6  0E00               	movlw	0
  7412   003CB8  6E07               	movwf	(___fleq@ff2+2)^0,c
  7413   003CBA  0E00               	movlw	0
  7414   003CBC  6E08               	movwf	(___fleq@ff2+3)^0,c
  7415   003CBE  EC13  F021         	call	___fleq	;wreg free
  7416   003CC2  A0D8               	btfss	status,0,c
  7417   003CC4  EF66  F01E         	goto	u4551
  7418   003CC8  EF68  F01E         	goto	u4550
  7419   003CCC                     u4551:
  7420   003CCC  EF72  F01E         	goto	l4156
  7421   003CD0                     u4550:
  7422   003CD0                     
  7423                           ;color.c: 117:         return 0.0;
  7424   003CD0  0E00               	movlw	0
  7425   003CD2  6E54               	movwf	?_custom_floatmodulo^0,c
  7426   003CD4  0E00               	movlw	0
  7427   003CD6  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  7428   003CD8  0E00               	movlw	0
  7429   003CDA  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  7430   003CDC  0E00               	movlw	0
  7431   003CDE  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  7432   003CE0  EFDA  F01E         	goto	l111
  7433   003CE4                     l4156:
  7434                           
  7435                           ;color.c: 121:     float quotient = x / y;
  7436   003CE4  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  7437   003CE8  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  7438   003CEC  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  7439   003CF0  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  7440   003CF4  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  7441   003CF8  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  7442   003CFC  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  7443   003D00  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  7444   003D04  EC87  F019         	call	___fldiv	;wreg free
  7445   003D08  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  7446   003D0C  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  7447   003D10  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  7448   003D14  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  7449                           
  7450                           ;color.c: 124:     int intPart = (int)quotient;
  7451   003D18  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  7452   003D1C  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  7453   003D20  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  7454   003D24  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  7455   003D28  ECDB  F01E         	call	___fltol	;wreg free
  7456   003D2C  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  7457   003D30  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  7458   003D34                     
  7459                           ;color.c: 127:     float remainder = x - intPart * y;
  7460   003D34  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  7461   003D38  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  7462   003D3C  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  7463   003D40  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  7464   003D44  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  7465   003D48  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  7466   003D4C  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  7467   003D50  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  7468   003D54  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  7469   003D58  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  7470   003D5C  0E00               	movlw	0
  7471   003D5E  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  7472   003D60  0EFF               	movlw	-1
  7473   003D62  6E0E               	movwf	(___xxtofl@val+2)^0,c
  7474   003D64  6E0F               	movwf	(___xxtofl@val+3)^0,c
  7475   003D66  0E01               	movlw	1
  7476   003D68  EC75  F01D         	call	___xxtofl
  7477   003D6C  C00C  F03B         	movff	?___xxtofl,___flmul@b
  7478   003D70  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  7479   003D74  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  7480   003D78  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  7481   003D7C  EC72  F017         	call	___flmul	;wreg free
  7482   003D80  C03B  F01E         	movff	?___flmul,___flsub@a
  7483   003D84  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  7484   003D88  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  7485   003D8C  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  7486   003D90  ECD7  F022         	call	___flsub	;wreg free
  7487   003D94  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  7488   003D98  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  7489   003D9C  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  7490   003DA0  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  7491   003DA4                     
  7492                           ;color.c: 129:     return remainder;
  7493   003DA4  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  7494   003DA8  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  7495   003DAC  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  7496   003DB0  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  7497   003DB4                     l111:
  7498   003DB4  0012               	return		;funcret
  7499   003DB6                     __end_of_custom_floatmodulo:
  7500                           	callstack 0
  7501                           
  7502 ;; *************** function ___xxtofl *****************
  7503 ;; Defined at:
  7504 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  sign            1    wreg     unsigned char 
  7507 ;;  val             4   11[COMRAM] long 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  sign            1   19[COMRAM] unsigned char 
  7510 ;;  arg             4   21[COMRAM] unsigned long 
  7511 ;;  exp             1   20[COMRAM] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  4   11[COMRAM] unsigned char 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;Total ram usage:       14 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_custom_floatmodulo
  7531 ;;		_color_cardCheck
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text36
  7536   003AEA                     __ptext36:
  7537                           	callstack 0
  7538   003AEA                     ___xxtofl:
  7539                           	callstack 29
  7540                           
  7541                           ;incstack = 0
  7542                           ;___xxtofl@sign stored from wreg
  7543   003AEA  6E14               	movwf	___xxtofl@sign^0,c
  7544   003AEC  5014               	movf	___xxtofl@sign^0,w,c
  7545   003AEE  B4D8               	btfsc	status,2,c
  7546   003AF0  EF7C  F01D         	goto	u4421
  7547   003AF4  EF7E  F01D         	goto	u4420
  7548   003AF8                     u4421:
  7549   003AF8  EFA0  F01D         	goto	l1097
  7550   003AFC                     u4420:
  7551   003AFC  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7552   003AFE  EF85  F01D         	goto	u4430
  7553   003B02  EF83  F01D         	goto	u4431
  7554   003B06                     u4431:
  7555   003B06  EFA0  F01D         	goto	l1097
  7556   003B0A                     u4430:
  7557   003B0A  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  7558   003B0E  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  7559   003B12  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  7560   003B16  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  7561   003B1A  1E10               	comf	??___xxtofl^0,f,c
  7562   003B1C  1E11               	comf	(??___xxtofl+1)^0,f,c
  7563   003B1E  1E12               	comf	(??___xxtofl+2)^0,f,c
  7564   003B20  1E13               	comf	(??___xxtofl+3)^0,f,c
  7565   003B22  2A10               	incf	??___xxtofl^0,f,c
  7566   003B24  0E00               	movlw	0
  7567   003B26  2211               	addwfc	(??___xxtofl+1)^0,f,c
  7568   003B28  2212               	addwfc	(??___xxtofl+2)^0,f,c
  7569   003B2A  2213               	addwfc	(??___xxtofl+3)^0,f,c
  7570   003B2C  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  7571   003B30  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  7572   003B34  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  7573   003B38  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  7574   003B3C  EFA8  F01D         	goto	l4070
  7575   003B40                     l1097:
  7576   003B40  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  7577   003B44  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7578   003B48  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7579   003B4C  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7580   003B50                     l4070:
  7581   003B50  500C               	movf	___xxtofl@val^0,w,c
  7582   003B52  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  7583   003B54  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  7584   003B56  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  7585   003B58  A4D8               	btfss	status,2,c
  7586   003B5A  EFB1  F01D         	goto	u4441
  7587   003B5E  EFB3  F01D         	goto	u4440
  7588   003B62                     u4441:
  7589   003B62  EFBD  F01D         	goto	l4076
  7590   003B66                     u4440:
  7591   003B66  0E00               	movlw	0
  7592   003B68  6E0C               	movwf	?___xxtofl^0,c
  7593   003B6A  0E00               	movlw	0
  7594   003B6C  6E0D               	movwf	(?___xxtofl+1)^0,c
  7595   003B6E  0E00               	movlw	0
  7596   003B70  6E0E               	movwf	(?___xxtofl+2)^0,c
  7597   003B72  0E00               	movlw	0
  7598   003B74  6E0F               	movwf	(?___xxtofl+3)^0,c
  7599   003B76  EF4E  F01E         	goto	l1100
  7600   003B7A                     l4076:
  7601   003B7A  0E96               	movlw	150
  7602   003B7C  6E15               	movwf	___xxtofl@exp^0,c
  7603   003B7E  EFC7  F01D         	goto	l4080
  7604   003B82                     l4078:
  7605   003B82  2A15               	incf	___xxtofl@exp^0,f,c
  7606   003B84  90D8               	bcf	status,0,c
  7607   003B86  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7608   003B88  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7609   003B8A  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7610   003B8C  3216               	rrcf	___xxtofl@arg^0,f,c
  7611   003B8E                     l4080:
  7612   003B8E  0E00               	movlw	0
  7613   003B90  1416               	andwf	___xxtofl@arg^0,w,c
  7614   003B92  6E10               	movwf	??___xxtofl^0,c
  7615   003B94  0E00               	movlw	0
  7616   003B96  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7617   003B98  6E11               	movwf	(??___xxtofl+1)^0,c
  7618   003B9A  0E00               	movlw	0
  7619   003B9C  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7620   003B9E  6E12               	movwf	(??___xxtofl+2)^0,c
  7621   003BA0  0EFE               	movlw	254
  7622   003BA2  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7623   003BA4  6E13               	movwf	(??___xxtofl+3)^0,c
  7624   003BA6  5010               	movf	??___xxtofl^0,w,c
  7625   003BA8  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7626   003BAA  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7627   003BAC  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7628   003BAE  A4D8               	btfss	status,2,c
  7629   003BB0  EFDC  F01D         	goto	u4451
  7630   003BB4  EFDE  F01D         	goto	u4450
  7631   003BB8                     u4451:
  7632   003BB8  EFC1  F01D         	goto	l4078
  7633   003BBC                     u4450:
  7634   003BBC  EFEC  F01D         	goto	l1104
  7635   003BC0                     l4082:
  7636   003BC0  2A15               	incf	___xxtofl@exp^0,f,c
  7637   003BC2  0E01               	movlw	1
  7638   003BC4  2616               	addwf	___xxtofl@arg^0,f,c
  7639   003BC6  0E00               	movlw	0
  7640   003BC8  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  7641   003BCA  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  7642   003BCC  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  7643   003BCE  90D8               	bcf	status,0,c
  7644   003BD0  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7645   003BD2  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7646   003BD4  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7647   003BD6  3216               	rrcf	___xxtofl@arg^0,f,c
  7648   003BD8                     l1104:
  7649   003BD8  0E00               	movlw	0
  7650   003BDA  1416               	andwf	___xxtofl@arg^0,w,c
  7651   003BDC  6E10               	movwf	??___xxtofl^0,c
  7652   003BDE  0E00               	movlw	0
  7653   003BE0  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7654   003BE2  6E11               	movwf	(??___xxtofl+1)^0,c
  7655   003BE4  0E00               	movlw	0
  7656   003BE6  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7657   003BE8  6E12               	movwf	(??___xxtofl+2)^0,c
  7658   003BEA  0EFF               	movlw	255
  7659   003BEC  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7660   003BEE  6E13               	movwf	(??___xxtofl+3)^0,c
  7661   003BF0  5010               	movf	??___xxtofl^0,w,c
  7662   003BF2  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7663   003BF4  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7664   003BF6  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7665   003BF8  A4D8               	btfss	status,2,c
  7666   003BFA  EF01  F01E         	goto	u4461
  7667   003BFE  EF03  F01E         	goto	u4460
  7668   003C02                     u4461:
  7669   003C02  EFE0  F01D         	goto	l4082
  7670   003C06                     u4460:
  7671   003C06  EF0B  F01E         	goto	l4090
  7672   003C0A                     l4088:
  7673   003C0A  0615               	decf	___xxtofl@exp^0,f,c
  7674   003C0C  90D8               	bcf	status,0,c
  7675   003C0E  3616               	rlcf	___xxtofl@arg^0,f,c
  7676   003C10  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  7677   003C12  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  7678   003C14  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  7679   003C16                     l4090:
  7680   003C16  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  7681   003C18  EF10  F01E         	goto	u4471
  7682   003C1C  EF12  F01E         	goto	u4470
  7683   003C20                     u4471:
  7684   003C20  EF1A  F01E         	goto	l1111
  7685   003C24                     u4470:
  7686   003C24  0E02               	movlw	2
  7687   003C26  6015               	cpfslt	___xxtofl@exp^0,c
  7688   003C28  EF18  F01E         	goto	u4481
  7689   003C2C  EF1A  F01E         	goto	u4480
  7690   003C30                     u4481:
  7691   003C30  EF05  F01E         	goto	l4088
  7692   003C34                     u4480:
  7693   003C34                     l1111:
  7694   003C34  B015               	btfsc	___xxtofl@exp^0,0,c
  7695   003C36  EF1F  F01E         	goto	u4491
  7696   003C3A  EF21  F01E         	goto	u4490
  7697   003C3E                     u4491:
  7698   003C3E  EF22  F01E         	goto	l4096
  7699   003C42                     u4490:
  7700   003C42  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  7701   003C44                     l4096:
  7702   003C44  90D8               	bcf	status,0,c
  7703   003C46  3215               	rrcf	___xxtofl@exp^0,f,c
  7704   003C48  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  7705   003C4C  6A11               	clrf	(??___xxtofl+1)^0,c
  7706   003C4E  6A12               	clrf	(??___xxtofl+2)^0,c
  7707   003C50  6A13               	clrf	(??___xxtofl+3)^0,c
  7708   003C52  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  7709   003C56  6A12               	clrf	(??___xxtofl+2)^0,c
  7710   003C58  6A11               	clrf	(??___xxtofl+1)^0,c
  7711   003C5A  6A10               	clrf	??___xxtofl^0,c
  7712   003C5C  5010               	movf	??___xxtofl^0,w,c
  7713   003C5E  1216               	iorwf	___xxtofl@arg^0,f,c
  7714   003C60  5011               	movf	(??___xxtofl+1)^0,w,c
  7715   003C62  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  7716   003C64  5012               	movf	(??___xxtofl+2)^0,w,c
  7717   003C66  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  7718   003C68  5013               	movf	(??___xxtofl+3)^0,w,c
  7719   003C6A  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  7720   003C6C  5014               	movf	___xxtofl@sign^0,w,c
  7721   003C6E  B4D8               	btfsc	status,2,c
  7722   003C70  EF3C  F01E         	goto	u4501
  7723   003C74  EF3E  F01E         	goto	u4500
  7724   003C78                     u4501:
  7725   003C78  EF46  F01E         	goto	l4106
  7726   003C7C                     u4500:
  7727   003C7C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7728   003C7E  EF45  F01E         	goto	u4510
  7729   003C82  EF43  F01E         	goto	u4511
  7730   003C86                     u4511:
  7731   003C86  EF46  F01E         	goto	l4106
  7732   003C8A                     u4510:
  7733   003C8A  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  7734   003C8C                     l4106:
  7735   003C8C  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  7736   003C90  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7737   003C94  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7738   003C98  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7739   003C9C                     l1100:
  7740   003C9C  0012               	return		;funcret
  7741   003C9E                     __end_of___xxtofl:
  7742                           	callstack 0
  7743                           
  7744 ;; *************** function ___fltol *****************
  7745 ;; Defined at:
  7746 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  f1              4    0[COMRAM] unsigned char 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  exp1            1    9[COMRAM] unsigned char 
  7751 ;;  sign1           1    8[COMRAM] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  4    0[COMRAM] long 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;Total ram usage:       10 bytes
  7766 ;; Hardware stack levels used: 1
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_custom_floatmodulo
  7771 ;;		_efgtoa
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text37
  7776   003DB6                     __ptext37:
  7777                           	callstack 0
  7778   003DB6                     ___fltol:
  7779                           	callstack 24
  7780   003DB6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7781   003DB8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7782   003DBA  6E0A               	movwf	___fltol@exp1^0,c
  7783   003DBC  500A               	movf	___fltol@exp1^0,w,c
  7784   003DBE  A4D8               	btfss	status,2,c
  7785   003DC0  EFE4  F01E         	goto	u3731
  7786   003DC4  EFE6  F01E         	goto	u3730
  7787   003DC8                     u3731:
  7788   003DC8  EFF0  F01E         	goto	l3626
  7789   003DCC                     u3730:
  7790   003DCC                     l3622:
  7791   003DCC  0E00               	movlw	0
  7792   003DCE  6E01               	movwf	?___fltol^0,c
  7793   003DD0  0E00               	movlw	0
  7794   003DD2  6E02               	movwf	(?___fltol+1)^0,c
  7795   003DD4  0E00               	movlw	0
  7796   003DD6  6E03               	movwf	(?___fltol+2)^0,c
  7797   003DD8  0E00               	movlw	0
  7798   003DDA  6E04               	movwf	(?___fltol+3)^0,c
  7799   003DDC  EF5D  F01F         	goto	l739
  7800   003DE0                     l3626:
  7801   003DE0  C001  F005         	movff	___fltol@f1,??___fltol
  7802   003DE4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7803   003DE8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7804   003DEC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7805   003DF0  0E20               	movlw	32
  7806   003DF2  EF00  F01F         	goto	u3740
  7807   003DF6                     u3745:
  7808   003DF6  90D8               	bcf	status,0,c
  7809   003DF8  3208               	rrcf	(??___fltol+3)^0,f,c
  7810   003DFA  3207               	rrcf	(??___fltol+2)^0,f,c
  7811   003DFC  3206               	rrcf	(??___fltol+1)^0,f,c
  7812   003DFE  3205               	rrcf	??___fltol^0,f,c
  7813   003E00                     u3740:
  7814   003E00  2EE8               	decfsz	wreg,f,c
  7815   003E02  EFFB  F01E         	goto	u3745
  7816   003E06  5005               	movf	??___fltol^0,w,c
  7817   003E08  6E09               	movwf	___fltol@sign1^0,c
  7818   003E0A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7819   003E0C  0EFF               	movlw	255
  7820   003E0E  1601               	andwf	___fltol@f1^0,f,c
  7821   003E10  0EFF               	movlw	255
  7822   003E12  1602               	andwf	(___fltol@f1+1)^0,f,c
  7823   003E14  0EFF               	movlw	255
  7824   003E16  1603               	andwf	(___fltol@f1+2)^0,f,c
  7825   003E18  0E00               	movlw	0
  7826   003E1A  1604               	andwf	(___fltol@f1+3)^0,f,c
  7827   003E1C  0E96               	movlw	150
  7828   003E1E  5E0A               	subwf	___fltol@exp1^0,f,c
  7829   003E20  BE0A               	btfsc	___fltol@exp1^0,7,c
  7830   003E22  EF17  F01F         	goto	u3750
  7831   003E26  EF15  F01F         	goto	u3751
  7832   003E2A                     u3751:
  7833   003E2A  EF2D  F01F         	goto	l3646
  7834   003E2E                     u3750:
  7835   003E2E  500A               	movf	___fltol@exp1^0,w,c
  7836   003E30  0A80               	xorlw	128
  7837   003E32  0F97               	addlw	151
  7838   003E34  B0D8               	btfsc	status,0,c
  7839   003E36  EF1F  F01F         	goto	u3761
  7840   003E3A  EF21  F01F         	goto	u3760
  7841   003E3E                     u3761:
  7842   003E3E  EF23  F01F         	goto	l3642
  7843   003E42                     u3760:
  7844   003E42  EFE6  F01E         	goto	l3622
  7845   003E46                     l3642:
  7846   003E46  90D8               	bcf	status,0,c
  7847   003E48  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7848   003E4A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7849   003E4C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7850   003E4E  3201               	rrcf	___fltol@f1^0,f,c
  7851   003E50  3E0A               	incfsz	___fltol@exp1^0,f,c
  7852   003E52  EF23  F01F         	goto	l3642
  7853   003E56  EF45  F01F         	goto	l3656
  7854   003E5A                     l3646:
  7855   003E5A  0E1F               	movlw	31
  7856   003E5C  640A               	cpfsgt	___fltol@exp1^0,c
  7857   003E5E  EF33  F01F         	goto	u3771
  7858   003E62  EF35  F01F         	goto	u3770
  7859   003E66                     u3771:
  7860   003E66  EF3D  F01F         	goto	l3654
  7861   003E6A                     u3770:
  7862   003E6A  EFE6  F01E         	goto	l3622
  7863   003E6E                     l3652:
  7864   003E6E  90D8               	bcf	status,0,c
  7865   003E70  3601               	rlcf	___fltol@f1^0,f,c
  7866   003E72  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7867   003E74  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7868   003E76  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7869   003E78  060A               	decf	___fltol@exp1^0,f,c
  7870   003E7A                     l3654:
  7871   003E7A  500A               	movf	___fltol@exp1^0,w,c
  7872   003E7C  A4D8               	btfss	status,2,c
  7873   003E7E  EF43  F01F         	goto	u3781
  7874   003E82  EF45  F01F         	goto	u3780
  7875   003E86                     u3781:
  7876   003E86  EF37  F01F         	goto	l3652
  7877   003E8A                     u3780:
  7878   003E8A                     l3656:
  7879   003E8A  5009               	movf	___fltol@sign1^0,w,c
  7880   003E8C  B4D8               	btfsc	status,2,c
  7881   003E8E  EF4B  F01F         	goto	u3791
  7882   003E92  EF4D  F01F         	goto	u3790
  7883   003E96                     u3791:
  7884   003E96  EF55  F01F         	goto	l3660
  7885   003E9A                     u3790:
  7886   003E9A  1E04               	comf	(___fltol@f1+3)^0,f,c
  7887   003E9C  1E03               	comf	(___fltol@f1+2)^0,f,c
  7888   003E9E  1E02               	comf	(___fltol@f1+1)^0,f,c
  7889   003EA0  6C01               	negf	___fltol@f1^0,c
  7890   003EA2  0E00               	movlw	0
  7891   003EA4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7892   003EA6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7893   003EA8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7894   003EAA                     l3660:
  7895   003EAA  C001  F001         	movff	___fltol@f1,?___fltol
  7896   003EAE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7897   003EB2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7898   003EB6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7899   003EBA                     l739:
  7900   003EBA  0012               	return		;funcret
  7901   003EBC                     __end_of___fltol:
  7902                           	callstack 0
  7903                           
  7904 ;; *************** function ___flsub *****************
  7905 ;; Defined at:
  7906 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  b               4   25[COMRAM] long 
  7909 ;;  a               4   29[COMRAM] long 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;		None
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  4   25[COMRAM] long 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7921 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;Total ram usage:        8 bytes
  7926 ;; Hardware stack levels used: 1
  7927 ;; Hardware stack levels required when called: 1
  7928 ;; This function calls:
  7929 ;;		___fladd
  7930 ;; This function is called by:
  7931 ;;		_custom_floatmodulo
  7932 ;;		_RGB_to_HSV
  7933 ;;		_efgtoa
  7934 ;; This function uses a non-reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text38
  7938   0045AE                     __ptext38:
  7939                           	callstack 0
  7940   0045AE                     ___flsub:
  7941                           	callstack 23
  7942   0045AE  0E00               	movlw	0
  7943   0045B0  1A1E               	xorwf	___flsub@a^0,f,c
  7944   0045B2  0E00               	movlw	0
  7945   0045B4  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7946   0045B6  0E00               	movlw	0
  7947   0045B8  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7948   0045BA  0E80               	movlw	128
  7949   0045BC  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7950   0045BE  C01A  F001         	movff	___flsub@b,___fladd@b
  7951   0045C2  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7952   0045C6  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7953   0045CA  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7954   0045CE  C01E  F005         	movff	___flsub@a,___fladd@a
  7955   0045D2  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7956   0045D6  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7957   0045DA  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7958   0045DE  EC12  F015         	call	___fladd	;wreg free
  7959   0045E2  C001  F01A         	movff	?___fladd,?___flsub
  7960   0045E6  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7961   0045EA  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7962   0045EE  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7963   0045F2  0012               	return		;funcret
  7964   0045F4                     __end_of___flsub:
  7965                           	callstack 0
  7966                           
  7967 ;; *************** function ___fladd *****************
  7968 ;; Defined at:
  7969 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  b               4    0[COMRAM] long 
  7972 ;;  a               4    4[COMRAM] long 
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;  grs             1   15[COMRAM] unsigned char 
  7975 ;;  bexp            1   14[COMRAM] unsigned char 
  7976 ;;  aexp            1   13[COMRAM] unsigned char 
  7977 ;;  signs           1   12[COMRAM] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  4    0[COMRAM] unsigned char 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2, status,0
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7987 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7988 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;Total ram usage:       16 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_RGB_to_HSV
  7997 ;;		___flsub
  7998 ;;		_efgtoa
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text39
  8003   002A24                     __ptext39:
  8004                           	callstack 0
  8005   002A24                     ___fladd:
  8006                           	callstack 23
  8007   002A24  5004               	movf	(___fladd@b+3)^0,w,c
  8008   002A26  0B80               	andlw	128
  8009   002A28  6E0D               	movwf	___fladd@signs^0,c
  8010   002A2A  5004               	movf	(___fladd@b+3)^0,w,c
  8011   002A2C  2404               	addwf	(___fladd@b+3)^0,w,c
  8012   002A2E  6E0F               	movwf	___fladd@bexp^0,c
  8013   002A30  AE03               	btfss	(___fladd@b+2)^0,7,c
  8014   002A32  EF1D  F015         	goto	u2821
  8015   002A36  EF1F  F015         	goto	u2820
  8016   002A3A                     u2821:
  8017   002A3A  EF20  F015         	goto	l3090
  8018   002A3E                     u2820:
  8019   002A3E  800F               	bsf	___fladd@bexp^0,0,c
  8020   002A40                     l3090:
  8021   002A40  500F               	movf	___fladd@bexp^0,w,c
  8022   002A42  B4D8               	btfsc	status,2,c
  8023   002A44  EF26  F015         	goto	u2831
  8024   002A48  EF28  F015         	goto	u2830
  8025   002A4C                     u2831:
  8026   002A4C  EF3D  F015         	goto	l3100
  8027   002A50                     u2830:
  8028   002A50  280F               	incf	___fladd@bexp^0,w,c
  8029   002A52  A4D8               	btfss	status,2,c
  8030   002A54  EF2E  F015         	goto	u2841
  8031   002A58  EF30  F015         	goto	u2840
  8032   002A5C                     u2841:
  8033   002A5C  EF38  F015         	goto	l3096
  8034   002A60                     u2840:
  8035   002A60  0E00               	movlw	0
  8036   002A62  6E01               	movwf	___fladd@b^0,c
  8037   002A64  0E00               	movlw	0
  8038   002A66  6E02               	movwf	(___fladd@b+1)^0,c
  8039   002A68  0E00               	movlw	0
  8040   002A6A  6E03               	movwf	(___fladd@b+2)^0,c
  8041   002A6C  0E00               	movlw	0
  8042   002A6E  6E04               	movwf	(___fladd@b+3)^0,c
  8043   002A70                     l3096:
  8044   002A70  8E03               	bsf	(___fladd@b+2)^0,7,c
  8045   002A72  0E00               	movlw	0
  8046   002A74  6E04               	movwf	(___fladd@b+3)^0,c
  8047   002A76  EF45  F015         	goto	l3102
  8048   002A7A                     l3100:
  8049   002A7A  0E00               	movlw	0
  8050   002A7C  6E01               	movwf	___fladd@b^0,c
  8051   002A7E  0E00               	movlw	0
  8052   002A80  6E02               	movwf	(___fladd@b+1)^0,c
  8053   002A82  0E00               	movlw	0
  8054   002A84  6E03               	movwf	(___fladd@b+2)^0,c
  8055   002A86  0E00               	movlw	0
  8056   002A88  6E04               	movwf	(___fladd@b+3)^0,c
  8057   002A8A                     l3102:
  8058   002A8A  5008               	movf	(___fladd@a+3)^0,w,c
  8059   002A8C  0B80               	andlw	128
  8060   002A8E  6E0E               	movwf	___fladd@aexp^0,c
  8061   002A90  500D               	movf	___fladd@signs^0,w,c
  8062   002A92  180E               	xorwf	___fladd@aexp^0,w,c
  8063   002A94  B4D8               	btfsc	status,2,c
  8064   002A96  EF4F  F015         	goto	u2851
  8065   002A9A  EF51  F015         	goto	u2850
  8066   002A9E                     u2851:
  8067   002A9E  EF52  F015         	goto	l3108
  8068   002AA2                     u2850:
  8069   002AA2  8C0D               	bsf	___fladd@signs^0,6,c
  8070   002AA4                     l3108:
  8071   002AA4  5008               	movf	(___fladd@a+3)^0,w,c
  8072   002AA6  2408               	addwf	(___fladd@a+3)^0,w,c
  8073   002AA8  6E0E               	movwf	___fladd@aexp^0,c
  8074   002AAA  AE07               	btfss	(___fladd@a+2)^0,7,c
  8075   002AAC  EF5A  F015         	goto	u2861
  8076   002AB0  EF5C  F015         	goto	u2860
  8077   002AB4                     u2861:
  8078   002AB4  EF5D  F015         	goto	l3114
  8079   002AB8                     u2860:
  8080   002AB8  800E               	bsf	___fladd@aexp^0,0,c
  8081   002ABA                     l3114:
  8082   002ABA  500E               	movf	___fladd@aexp^0,w,c
  8083   002ABC  B4D8               	btfsc	status,2,c
  8084   002ABE  EF63  F015         	goto	u2871
  8085   002AC2  EF65  F015         	goto	u2870
  8086   002AC6                     u2871:
  8087   002AC6  EF7A  F015         	goto	l3124
  8088   002ACA                     u2870:
  8089   002ACA  280E               	incf	___fladd@aexp^0,w,c
  8090   002ACC  A4D8               	btfss	status,2,c
  8091   002ACE  EF6B  F015         	goto	u2881
  8092   002AD2  EF6D  F015         	goto	u2880
  8093   002AD6                     u2881:
  8094   002AD6  EF75  F015         	goto	l3120
  8095   002ADA                     u2880:
  8096   002ADA  0E00               	movlw	0
  8097   002ADC  6E05               	movwf	___fladd@a^0,c
  8098   002ADE  0E00               	movlw	0
  8099   002AE0  6E06               	movwf	(___fladd@a+1)^0,c
  8100   002AE2  0E00               	movlw	0
  8101   002AE4  6E07               	movwf	(___fladd@a+2)^0,c
  8102   002AE6  0E00               	movlw	0
  8103   002AE8  6E08               	movwf	(___fladd@a+3)^0,c
  8104   002AEA                     l3120:
  8105   002AEA  8E07               	bsf	(___fladd@a+2)^0,7,c
  8106   002AEC  0E00               	movlw	0
  8107   002AEE  6E08               	movwf	(___fladd@a+3)^0,c
  8108   002AF0  EF82  F015         	goto	l3126
  8109   002AF4                     l3124:
  8110   002AF4  0E00               	movlw	0
  8111   002AF6  6E05               	movwf	___fladd@a^0,c
  8112   002AF8  0E00               	movlw	0
  8113   002AFA  6E06               	movwf	(___fladd@a+1)^0,c
  8114   002AFC  0E00               	movlw	0
  8115   002AFE  6E07               	movwf	(___fladd@a+2)^0,c
  8116   002B00  0E00               	movlw	0
  8117   002B02  6E08               	movwf	(___fladd@a+3)^0,c
  8118   002B04                     l3126:
  8119   002B04  500F               	movf	___fladd@bexp^0,w,c
  8120   002B06  5C0E               	subwf	___fladd@aexp^0,w,c
  8121   002B08  B0D8               	btfsc	status,0,c
  8122   002B0A  EF89  F015         	goto	u2891
  8123   002B0E  EF8B  F015         	goto	u2890
  8124   002B12                     u2891:
  8125   002B12  EFB2  F015         	goto	l3162
  8126   002B16                     u2890:
  8127   002B16  AC0D               	btfss	___fladd@signs^0,6,c
  8128   002B18  EF90  F015         	goto	u2901
  8129   002B1C  EF92  F015         	goto	u2900
  8130   002B20                     u2901:
  8131   002B20  EF94  F015         	goto	l3132
  8132   002B24                     u2900:
  8133   002B24  0E80               	movlw	128
  8134   002B26  1A0D               	xorwf	___fladd@signs^0,f,c
  8135   002B28                     l3132:
  8136   002B28  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8137   002B2C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8138   002B30  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8139   002B34  C001  F010         	movff	___fladd@b,___fladd@grs
  8140   002B38  C005  F001         	movff	___fladd@a,___fladd@b
  8141   002B3C  C010  F005         	movff	___fladd@grs,___fladd@a
  8142   002B40  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8143   002B44  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8144   002B48  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8145   002B4C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8146   002B50  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8147   002B54  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8148   002B58  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8149   002B5C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8150   002B60  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8151   002B64                     l3162:
  8152   002B64  0E00               	movlw	0
  8153   002B66  6E10               	movwf	___fladd@grs^0,c
  8154   002B68  500F               	movf	___fladd@bexp^0,w,c
  8155   002B6A  C00E  F009         	movff	___fladd@aexp,??___fladd
  8156   002B6E  6A0A               	clrf	(??___fladd+1)^0,c
  8157   002B70  5E09               	subwf	??___fladd^0,f,c
  8158   002B72  0E00               	movlw	0
  8159   002B74  5A0A               	subwfb	(??___fladd+1)^0,f,c
  8160   002B76  BE0A               	btfsc	(??___fladd+1)^0,7,c
  8161   002B78  EFC7  F015         	goto	u2911
  8162   002B7C  500A               	movf	(??___fladd+1)^0,w,c
  8163   002B7E  E109               	bnz	u2910
  8164   002B80  0E1A               	movlw	26
  8165   002B82  5C09               	subwf	??___fladd^0,w,c
  8166   002B84  A0D8               	btfss	status,0,c
  8167   002B86  EFC7  F015         	goto	u2911
  8168   002B8A  EFC9  F015         	goto	u2910
  8169   002B8E                     u2911:
  8170   002B8E  EF00  F016         	goto	l971
  8171   002B92                     u2910:
  8172   002B92  5001               	movf	___fladd@b^0,w,c
  8173   002B94  1002               	iorwf	(___fladd@b+1)^0,w,c
  8174   002B96  1003               	iorwf	(___fladd@b+2)^0,w,c
  8175   002B98  1004               	iorwf	(___fladd@b+3)^0,w,c
  8176   002B9A  A4D8               	btfss	status,2,c
  8177   002B9C  EFD2  F015         	goto	u2921
  8178   002BA0  EFD5  F015         	goto	u2920
  8179   002BA4                     u2921:
  8180   002BA4  0E01               	movlw	1
  8181   002BA6  EFD6  F015         	goto	u2930
  8182   002BAA                     u2920:
  8183   002BAA  0E00               	movlw	0
  8184   002BAC                     u2930:
  8185   002BAC  6E10               	movwf	___fladd@grs^0,c
  8186   002BAE  0E00               	movlw	0
  8187   002BB0  6E01               	movwf	___fladd@b^0,c
  8188   002BB2  0E00               	movlw	0
  8189   002BB4  6E02               	movwf	(___fladd@b+1)^0,c
  8190   002BB6  0E00               	movlw	0
  8191   002BB8  6E03               	movwf	(___fladd@b+2)^0,c
  8192   002BBA  0E00               	movlw	0
  8193   002BBC  6E04               	movwf	(___fladd@b+3)^0,c
  8194   002BBE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8195   002BC2  EF09  F016         	goto	l970
  8196   002BC6                     l972:
  8197   002BC6  A010               	btfss	___fladd@grs^0,0,c
  8198   002BC8  EFE8  F015         	goto	u2941
  8199   002BCC  EFEA  F015         	goto	u2940
  8200   002BD0                     u2941:
  8201   002BD0  EFF0  F015         	goto	l3174
  8202   002BD4                     u2940:
  8203   002BD4  90D8               	bcf	status,0,c
  8204   002BD6  3010               	rrcf	___fladd@grs^0,w,c
  8205   002BD8  0901               	iorlw	1
  8206   002BDA  6E10               	movwf	___fladd@grs^0,c
  8207   002BDC  EFF2  F015         	goto	l3176
  8208   002BE0                     l3174:
  8209   002BE0  90D8               	bcf	status,0,c
  8210   002BE2  3210               	rrcf	___fladd@grs^0,f,c
  8211   002BE4                     l3176:
  8212   002BE4  A001               	btfss	___fladd@b^0,0,c
  8213   002BE6  EFF7  F015         	goto	u2951
  8214   002BEA  EFF9  F015         	goto	u2950
  8215   002BEE                     u2951:
  8216   002BEE  EFFA  F015         	goto	l3180
  8217   002BF2                     u2950:
  8218   002BF2  8E10               	bsf	___fladd@grs^0,7,c
  8219   002BF4                     l3180:
  8220   002BF4  3404               	rlcf	(___fladd@b+3)^0,w,c
  8221   002BF6  3204               	rrcf	(___fladd@b+3)^0,f,c
  8222   002BF8  3203               	rrcf	(___fladd@b+2)^0,f,c
  8223   002BFA  3202               	rrcf	(___fladd@b+1)^0,f,c
  8224   002BFC  3201               	rrcf	___fladd@b^0,f,c
  8225   002BFE  2A0F               	incf	___fladd@bexp^0,f,c
  8226   002C00                     l971:
  8227   002C00  500E               	movf	___fladd@aexp^0,w,c
  8228   002C02  5C0F               	subwf	___fladd@bexp^0,w,c
  8229   002C04  A0D8               	btfss	status,0,c
  8230   002C06  EF07  F016         	goto	u2961
  8231   002C0A  EF09  F016         	goto	u2960
  8232   002C0E                     u2961:
  8233   002C0E  EFE3  F015         	goto	l972
  8234   002C12                     u2960:
  8235   002C12                     l970:
  8236   002C12  BC0D               	btfsc	___fladd@signs^0,6,c
  8237   002C14  EF0E  F016         	goto	u2971
  8238   002C18  EF10  F016         	goto	u2970
  8239   002C1C                     u2971:
  8240   002C1C  EF50  F016         	goto	l3208
  8241   002C20                     u2970:
  8242   002C20  500F               	movf	___fladd@bexp^0,w,c
  8243   002C22  A4D8               	btfss	status,2,c
  8244   002C24  EF16  F016         	goto	u2981
  8245   002C28  EF18  F016         	goto	u2980
  8246   002C2C                     u2981:
  8247   002C2C  EF22  F016         	goto	l3190
  8248   002C30                     u2980:
  8249   002C30  0E00               	movlw	0
  8250   002C32  6E01               	movwf	?___fladd^0,c
  8251   002C34  0E00               	movlw	0
  8252   002C36  6E02               	movwf	(?___fladd+1)^0,c
  8253   002C38  0E00               	movlw	0
  8254   002C3A  6E03               	movwf	(?___fladd+2)^0,c
  8255   002C3C  0E00               	movlw	0
  8256   002C3E  6E04               	movwf	(?___fladd+3)^0,c
  8257   002C40  EF71  F017         	goto	l979
  8258   002C44                     l3190:
  8259   002C44  5005               	movf	___fladd@a^0,w,c
  8260   002C46  2601               	addwf	___fladd@b^0,f,c
  8261   002C48  5006               	movf	(___fladd@a+1)^0,w,c
  8262   002C4A  2202               	addwfc	(___fladd@b+1)^0,f,c
  8263   002C4C  5007               	movf	(___fladd@a+2)^0,w,c
  8264   002C4E  2203               	addwfc	(___fladd@b+2)^0,f,c
  8265   002C50  5008               	movf	(___fladd@a+3)^0,w,c
  8266   002C52  2204               	addwfc	(___fladd@b+3)^0,f,c
  8267   002C54  A004               	btfss	(___fladd@b+3)^0,0,c
  8268   002C56  EF2F  F016         	goto	u2991
  8269   002C5A  EF31  F016         	goto	u2990
  8270   002C5E                     u2991:
  8271   002C5E  EFDD  F016         	goto	l3244
  8272   002C62                     u2990:
  8273   002C62  A010               	btfss	___fladd@grs^0,0,c
  8274   002C64  EF36  F016         	goto	u3001
  8275   002C68  EF38  F016         	goto	u3000
  8276   002C6C                     u3001:
  8277   002C6C  EF3E  F016         	goto	l3198
  8278   002C70                     u3000:
  8279   002C70  90D8               	bcf	status,0,c
  8280   002C72  3010               	rrcf	___fladd@grs^0,w,c
  8281   002C74  0901               	iorlw	1
  8282   002C76  6E10               	movwf	___fladd@grs^0,c
  8283   002C78  EF40  F016         	goto	l3200
  8284   002C7C                     l3198:
  8285   002C7C  90D8               	bcf	status,0,c
  8286   002C7E  3210               	rrcf	___fladd@grs^0,f,c
  8287   002C80                     l3200:
  8288   002C80  A001               	btfss	___fladd@b^0,0,c
  8289   002C82  EF45  F016         	goto	u3011
  8290   002C86  EF47  F016         	goto	u3010
  8291   002C8A                     u3011:
  8292   002C8A  EF48  F016         	goto	l3204
  8293   002C8E                     u3010:
  8294   002C8E  8E10               	bsf	___fladd@grs^0,7,c
  8295   002C90                     l3204:
  8296   002C90  3404               	rlcf	(___fladd@b+3)^0,w,c
  8297   002C92  3204               	rrcf	(___fladd@b+3)^0,f,c
  8298   002C94  3203               	rrcf	(___fladd@b+2)^0,f,c
  8299   002C96  3202               	rrcf	(___fladd@b+1)^0,f,c
  8300   002C98  3201               	rrcf	___fladd@b^0,f,c
  8301   002C9A  2A0F               	incf	___fladd@bexp^0,f,c
  8302   002C9C  EFDD  F016         	goto	l3244
  8303   002CA0                     l3208:
  8304   002CA0  5005               	movf	___fladd@a^0,w,c
  8305   002CA2  5C01               	subwf	___fladd@b^0,w,c
  8306   002CA4  5006               	movf	(___fladd@a+1)^0,w,c
  8307   002CA6  5802               	subwfb	(___fladd@b+1)^0,w,c
  8308   002CA8  5007               	movf	(___fladd@a+2)^0,w,c
  8309   002CAA  5803               	subwfb	(___fladd@b+2)^0,w,c
  8310   002CAC  5004               	movf	(___fladd@b+3)^0,w,c
  8311   002CAE  0A80               	xorlw	128
  8312   002CB0  6E09               	movwf	??___fladd^0,c
  8313   002CB2  5008               	movf	(___fladd@a+3)^0,w,c
  8314   002CB4  0A80               	xorlw	128
  8315   002CB6  5809               	subwfb	??___fladd^0,w,c
  8316   002CB8  B0D8               	btfsc	status,0,c
  8317   002CBA  EF61  F016         	goto	u3021
  8318   002CBE  EF63  F016         	goto	u3020
  8319   002CC2                     u3021:
  8320   002CC2  EF8E  F016         	goto	l3218
  8321   002CC6                     u3020:
  8322   002CC6  5001               	movf	___fladd@b^0,w,c
  8323   002CC8  5C05               	subwf	___fladd@a^0,w,c
  8324   002CCA  6E09               	movwf	??___fladd^0,c
  8325   002CCC  5002               	movf	(___fladd@b+1)^0,w,c
  8326   002CCE  5806               	subwfb	(___fladd@a+1)^0,w,c
  8327   002CD0  6E0A               	movwf	(??___fladd+1)^0,c
  8328   002CD2  5003               	movf	(___fladd@b+2)^0,w,c
  8329   002CD4  5807               	subwfb	(___fladd@a+2)^0,w,c
  8330   002CD6  6E0B               	movwf	(??___fladd+2)^0,c
  8331   002CD8  5004               	movf	(___fladd@b+3)^0,w,c
  8332   002CDA  5808               	subwfb	(___fladd@a+3)^0,w,c
  8333   002CDC  6E0C               	movwf	(??___fladd+3)^0,c
  8334   002CDE  0EFF               	movlw	255
  8335   002CE0  2409               	addwf	??___fladd^0,w,c
  8336   002CE2  6E01               	movwf	___fladd@b^0,c
  8337   002CE4  0EFF               	movlw	255
  8338   002CE6  200A               	addwfc	(??___fladd+1)^0,w,c
  8339   002CE8  6E02               	movwf	(___fladd@b+1)^0,c
  8340   002CEA  0EFF               	movlw	255
  8341   002CEC  200B               	addwfc	(??___fladd+2)^0,w,c
  8342   002CEE  6E03               	movwf	(___fladd@b+2)^0,c
  8343   002CF0  0EFF               	movlw	255
  8344   002CF2  200C               	addwfc	(??___fladd+3)^0,w,c
  8345   002CF4  6E04               	movwf	(___fladd@b+3)^0,c
  8346   002CF6  0E80               	movlw	128
  8347   002CF8  1A0D               	xorwf	___fladd@signs^0,f,c
  8348   002CFA  6C10               	negf	___fladd@grs^0,c
  8349   002CFC  5010               	movf	___fladd@grs^0,w,c
  8350   002CFE  A4D8               	btfss	status,2,c
  8351   002D00  EF84  F016         	goto	u3031
  8352   002D04  EF86  F016         	goto	u3030
  8353   002D08                     u3031:
  8354   002D08  EF96  F016         	goto	l987
  8355   002D0C                     u3030:
  8356   002D0C  0E01               	movlw	1
  8357   002D0E  2601               	addwf	___fladd@b^0,f,c
  8358   002D10  0E00               	movlw	0
  8359   002D12  2202               	addwfc	(___fladd@b+1)^0,f,c
  8360   002D14  2203               	addwfc	(___fladd@b+2)^0,f,c
  8361   002D16  2204               	addwfc	(___fladd@b+3)^0,f,c
  8362   002D18  EF96  F016         	goto	l987
  8363   002D1C                     l3218:
  8364   002D1C  5005               	movf	___fladd@a^0,w,c
  8365   002D1E  5E01               	subwf	___fladd@b^0,f,c
  8366   002D20  5006               	movf	(___fladd@a+1)^0,w,c
  8367   002D22  5A02               	subwfb	(___fladd@b+1)^0,f,c
  8368   002D24  5007               	movf	(___fladd@a+2)^0,w,c
  8369   002D26  5A03               	subwfb	(___fladd@b+2)^0,f,c
  8370   002D28  5008               	movf	(___fladd@a+3)^0,w,c
  8371   002D2A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  8372   002D2C                     l987:
  8373   002D2C  5001               	movf	___fladd@b^0,w,c
  8374   002D2E  1002               	iorwf	(___fladd@b+1)^0,w,c
  8375   002D30  1003               	iorwf	(___fladd@b+2)^0,w,c
  8376   002D32  1004               	iorwf	(___fladd@b+3)^0,w,c
  8377   002D34  A4D8               	btfss	status,2,c
  8378   002D36  EF9F  F016         	goto	u3041
  8379   002D3A  EFA1  F016         	goto	u3040
  8380   002D3E                     u3041:
  8381   002D3E  EFD6  F016         	goto	l3242
  8382   002D42                     u3040:
  8383   002D42  5010               	movf	___fladd@grs^0,w,c
  8384   002D44  A4D8               	btfss	status,2,c
  8385   002D46  EFA7  F016         	goto	u3051
  8386   002D4A  EFA9  F016         	goto	u3050
  8387   002D4E                     u3051:
  8388   002D4E  EFD6  F016         	goto	l3242
  8389   002D52                     u3050:
  8390   002D52  0E00               	movlw	0
  8391   002D54  6E01               	movwf	?___fladd^0,c
  8392   002D56  0E00               	movlw	0
  8393   002D58  6E02               	movwf	(?___fladd+1)^0,c
  8394   002D5A  0E00               	movlw	0
  8395   002D5C  6E03               	movwf	(?___fladd+2)^0,c
  8396   002D5E  0E00               	movlw	0
  8397   002D60  6E04               	movwf	(?___fladd+3)^0,c
  8398   002D62  EF71  F017         	goto	l979
  8399   002D66                     l3226:
  8400   002D66  90D8               	bcf	status,0,c
  8401   002D68  3601               	rlcf	___fladd@b^0,f,c
  8402   002D6A  3602               	rlcf	(___fladd@b+1)^0,f,c
  8403   002D6C  3603               	rlcf	(___fladd@b+2)^0,f,c
  8404   002D6E  3604               	rlcf	(___fladd@b+3)^0,f,c
  8405   002D70  AE10               	btfss	___fladd@grs^0,7,c
  8406   002D72  EFBD  F016         	goto	u3061
  8407   002D76  EFBF  F016         	goto	u3060
  8408   002D7A                     u3061:
  8409   002D7A  EFC0  F016         	goto	l3232
  8410   002D7E                     u3060:
  8411   002D7E  8001               	bsf	___fladd@b^0,0,c
  8412   002D80                     l3232:
  8413   002D80  A010               	btfss	___fladd@grs^0,0,c
  8414   002D82  EFC5  F016         	goto	u3071
  8415   002D86  EFC7  F016         	goto	u3070
  8416   002D8A                     u3071:
  8417   002D8A  EFCB  F016         	goto	l3236
  8418   002D8E                     u3070:
  8419   002D8E  80D8               	bsf	status,0,c
  8420   002D90  3610               	rlcf	___fladd@grs^0,f,c
  8421   002D92  EFCD  F016         	goto	l3238
  8422   002D96                     l3236:
  8423   002D96  90D8               	bcf	status,0,c
  8424   002D98  3610               	rlcf	___fladd@grs^0,f,c
  8425   002D9A                     l3238:
  8426   002D9A  500F               	movf	___fladd@bexp^0,w,c
  8427   002D9C  B4D8               	btfsc	status,2,c
  8428   002D9E  EFD3  F016         	goto	u3081
  8429   002DA2  EFD5  F016         	goto	u3080
  8430   002DA6                     u3081:
  8431   002DA6  EFD6  F016         	goto	l3242
  8432   002DAA                     u3080:
  8433   002DAA  060F               	decf	___fladd@bexp^0,f,c
  8434   002DAC                     l3242:
  8435   002DAC  AE03               	btfss	(___fladd@b+2)^0,7,c
  8436   002DAE  EFDB  F016         	goto	u3091
  8437   002DB2  EFDD  F016         	goto	u3090
  8438   002DB6                     u3091:
  8439   002DB6  EFB3  F016         	goto	l3226
  8440   002DBA                     u3090:
  8441   002DBA                     l3244:
  8442   002DBA  0E00               	movlw	0
  8443   002DBC  6E0E               	movwf	___fladd@aexp^0,c
  8444   002DBE  AE10               	btfss	___fladd@grs^0,7,c
  8445   002DC0  EFE4  F016         	goto	u3101
  8446   002DC4  EFE6  F016         	goto	u3100
  8447   002DC8                     u3101:
  8448   002DC8  EFFE  F016         	goto	l996
  8449   002DCC                     u3100:
  8450   002DCC  C010  F009         	movff	___fladd@grs,??___fladd
  8451   002DD0  0E7F               	movlw	127
  8452   002DD2  1609               	andwf	??___fladd^0,f,c
  8453   002DD4  B4D8               	btfsc	status,2,c
  8454   002DD6  EFEF  F016         	goto	u3111
  8455   002DDA  EFF1  F016         	goto	u3110
  8456   002DDE                     u3111:
  8457   002DDE  EFF5  F016         	goto	l997
  8458   002DE2                     u3110:
  8459   002DE2                     l3250:
  8460   002DE2  0E01               	movlw	1
  8461   002DE4  6E0E               	movwf	___fladd@aexp^0,c
  8462   002DE6  EFFE  F016         	goto	l996
  8463   002DEA                     l997:
  8464   002DEA  A001               	btfss	___fladd@b^0,0,c
  8465   002DEC  EFFA  F016         	goto	u3121
  8466   002DF0  EFFC  F016         	goto	u3120
  8467   002DF4                     u3121:
  8468   002DF4  EFFE  F016         	goto	l996
  8469   002DF8                     u3120:
  8470   002DF8  EFF1  F016         	goto	l3250
  8471   002DFC                     l996:
  8472   002DFC  500E               	movf	___fladd@aexp^0,w,c
  8473   002DFE  B4D8               	btfsc	status,2,c
  8474   002E00  EF04  F017         	goto	u3131
  8475   002E04  EF06  F017         	goto	u3130
  8476   002E08                     u3131:
  8477   002E08  EF31  F017         	goto	l3262
  8478   002E0C                     u3130:
  8479   002E0C  0E01               	movlw	1
  8480   002E0E  2601               	addwf	___fladd@b^0,f,c
  8481   002E10  0E00               	movlw	0
  8482   002E12  2202               	addwfc	(___fladd@b+1)^0,f,c
  8483   002E14  2203               	addwfc	(___fladd@b+2)^0,f,c
  8484   002E16  2204               	addwfc	(___fladd@b+3)^0,f,c
  8485   002E18  A004               	btfss	(___fladd@b+3)^0,0,c
  8486   002E1A  EF11  F017         	goto	u3141
  8487   002E1E  EF13  F017         	goto	u3140
  8488   002E22                     u3141:
  8489   002E22  EF31  F017         	goto	l3262
  8490   002E26                     u3140:
  8491   002E26  C001  F009         	movff	___fladd@b,??___fladd
  8492   002E2A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8493   002E2E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8494   002E32  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8495   002E36  340C               	rlcf	(??___fladd+3)^0,w,c
  8496   002E38  320C               	rrcf	(??___fladd+3)^0,f,c
  8497   002E3A  320B               	rrcf	(??___fladd+2)^0,f,c
  8498   002E3C  320A               	rrcf	(??___fladd+1)^0,f,c
  8499   002E3E  3209               	rrcf	??___fladd^0,f,c
  8500   002E40  C009  F001         	movff	??___fladd,___fladd@b
  8501   002E44  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8502   002E48  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8503   002E4C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8504   002E50  280F               	incf	___fladd@bexp^0,w,c
  8505   002E52  B4D8               	btfsc	status,2,c
  8506   002E54  EF2E  F017         	goto	u3151
  8507   002E58  EF30  F017         	goto	u3150
  8508   002E5C                     u3151:
  8509   002E5C  EF31  F017         	goto	l3262
  8510   002E60                     u3150:
  8511   002E60  2A0F               	incf	___fladd@bexp^0,f,c
  8512   002E62                     l3262:
  8513   002E62  280F               	incf	___fladd@bexp^0,w,c
  8514   002E64  B4D8               	btfsc	status,2,c
  8515   002E66  EF37  F017         	goto	u3161
  8516   002E6A  EF39  F017         	goto	u3160
  8517   002E6E                     u3161:
  8518   002E6E  EF41  F017         	goto	l3266
  8519   002E72                     u3160:
  8520   002E72  500F               	movf	___fladd@bexp^0,w,c
  8521   002E74  A4D8               	btfss	status,2,c
  8522   002E76  EF3F  F017         	goto	u3171
  8523   002E7A  EF41  F017         	goto	u3170
  8524   002E7E                     u3171:
  8525   002E7E  EF53  F017         	goto	l3270
  8526   002E82                     u3170:
  8527   002E82                     l3266:
  8528   002E82  0E00               	movlw	0
  8529   002E84  6E01               	movwf	___fladd@b^0,c
  8530   002E86  0E00               	movlw	0
  8531   002E88  6E02               	movwf	(___fladd@b+1)^0,c
  8532   002E8A  0E00               	movlw	0
  8533   002E8C  6E03               	movwf	(___fladd@b+2)^0,c
  8534   002E8E  0E00               	movlw	0
  8535   002E90  6E04               	movwf	(___fladd@b+3)^0,c
  8536   002E92  500F               	movf	___fladd@bexp^0,w,c
  8537   002E94  A4D8               	btfss	status,2,c
  8538   002E96  EF4F  F017         	goto	u3181
  8539   002E9A  EF51  F017         	goto	u3180
  8540   002E9E                     u3181:
  8541   002E9E  EF53  F017         	goto	l3270
  8542   002EA2                     u3180:
  8543   002EA2  0E00               	movlw	0
  8544   002EA4  6E0D               	movwf	___fladd@signs^0,c
  8545   002EA6                     l3270:
  8546   002EA6  A00F               	btfss	___fladd@bexp^0,0,c
  8547   002EA8  EF58  F017         	goto	u3191
  8548   002EAC  EF5A  F017         	goto	u3190
  8549   002EB0                     u3191:
  8550   002EB0  EF5D  F017         	goto	l3274
  8551   002EB4                     u3190:
  8552   002EB4  8E03               	bsf	(___fladd@b+2)^0,7,c
  8553   002EB6  EF5E  F017         	goto	l3276
  8554   002EBA                     l3274:
  8555   002EBA  9E03               	bcf	(___fladd@b+2)^0,7,c
  8556   002EBC                     l3276:
  8557   002EBC  90D8               	bcf	status,0,c
  8558   002EBE  300F               	rrcf	___fladd@bexp^0,w,c
  8559   002EC0  6E04               	movwf	(___fladd@b+3)^0,c
  8560   002EC2  AE0D               	btfss	___fladd@signs^0,7,c
  8561   002EC4  EF66  F017         	goto	u3201
  8562   002EC8  EF68  F017         	goto	u3200
  8563   002ECC                     u3201:
  8564   002ECC  EF69  F017         	goto	l3282
  8565   002ED0                     u3200:
  8566   002ED0  8E04               	bsf	(___fladd@b+3)^0,7,c
  8567   002ED2                     l3282:
  8568   002ED2  C001  F001         	movff	___fladd@b,?___fladd
  8569   002ED6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8570   002EDA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8571   002EDE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8572   002EE2                     l979:
  8573   002EE2  0012               	return		;funcret
  8574   002EE4                     __end_of___fladd:
  8575                           	callstack 0
  8576                           
  8577 ;; *************** function ___flmul *****************
  8578 ;; Defined at:
  8579 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  b               4   58[COMRAM] unsigned char 
  8582 ;;  a               4   62[COMRAM] unsigned char 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  prod            4   77[COMRAM] struct .
  8585 ;;  grs             4   71[COMRAM] unsigned long 
  8586 ;;  temp            2   81[COMRAM] struct .
  8587 ;;  bexp            1   76[COMRAM] unsigned char 
  8588 ;;  aexp            1   75[COMRAM] unsigned char 
  8589 ;;  sign            1   70[COMRAM] unsigned char 
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  4   58[COMRAM] unsigned char 
  8592 ;; Registers used:
  8593 ;;		wreg, status,2, status,0, prodl, prodh
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;Total ram usage:       25 bytes
  8604 ;; Hardware stack levels used: 1
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		_custom_floatmodulo
  8609 ;;		_RGB_to_HSV
  8610 ;;		_efgtoa
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text40
  8615   002EE4                     __ptext40:
  8616                           	callstack 0
  8617   002EE4                     ___flmul:
  8618                           	callstack 24
  8619   002EE4  503E               	movf	(___flmul@b+3)^0,w,c
  8620   002EE6  0B80               	andlw	128
  8621   002EE8  6E47               	movwf	___flmul@sign^0,c
  8622   002EEA  503E               	movf	(___flmul@b+3)^0,w,c
  8623   002EEC  243E               	addwf	(___flmul@b+3)^0,w,c
  8624   002EEE  6E4D               	movwf	___flmul@bexp^0,c
  8625   002EF0  AE3D               	btfss	(___flmul@b+2)^0,7,c
  8626   002EF2  EF7D  F017         	goto	u3451
  8627   002EF6  EF7F  F017         	goto	u3450
  8628   002EFA                     u3451:
  8629   002EFA  EF80  F017         	goto	l3444
  8630   002EFE                     u3450:
  8631   002EFE  804D               	bsf	___flmul@bexp^0,0,c
  8632   002F00                     l3444:
  8633   002F00  504D               	movf	___flmul@bexp^0,w,c
  8634   002F02  B4D8               	btfsc	status,2,c
  8635   002F04  EF86  F017         	goto	u3461
  8636   002F08  EF88  F017         	goto	u3460
  8637   002F0C                     u3461:
  8638   002F0C  EF9B  F017         	goto	l3452
  8639   002F10                     u3460:
  8640   002F10  284D               	incf	___flmul@bexp^0,w,c
  8641   002F12  A4D8               	btfss	status,2,c
  8642   002F14  EF8E  F017         	goto	u3471
  8643   002F18  EF90  F017         	goto	u3470
  8644   002F1C                     u3471:
  8645   002F1C  EF98  F017         	goto	l3450
  8646   002F20                     u3470:
  8647   002F20  0E00               	movlw	0
  8648   002F22  6E3B               	movwf	___flmul@b^0,c
  8649   002F24  0E00               	movlw	0
  8650   002F26  6E3C               	movwf	(___flmul@b+1)^0,c
  8651   002F28  0E00               	movlw	0
  8652   002F2A  6E3D               	movwf	(___flmul@b+2)^0,c
  8653   002F2C  0E00               	movlw	0
  8654   002F2E  6E3E               	movwf	(___flmul@b+3)^0,c
  8655   002F30                     l3450:
  8656   002F30  8E3D               	bsf	(___flmul@b+2)^0,7,c
  8657   002F32  EFA3  F017         	goto	l3454
  8658   002F36                     l3452:
  8659   002F36  0E00               	movlw	0
  8660   002F38  6E3B               	movwf	___flmul@b^0,c
  8661   002F3A  0E00               	movlw	0
  8662   002F3C  6E3C               	movwf	(___flmul@b+1)^0,c
  8663   002F3E  0E00               	movlw	0
  8664   002F40  6E3D               	movwf	(___flmul@b+2)^0,c
  8665   002F42  0E00               	movlw	0
  8666   002F44  6E3E               	movwf	(___flmul@b+3)^0,c
  8667   002F46                     l3454:
  8668   002F46  5042               	movf	(___flmul@a+3)^0,w,c
  8669   002F48  0B80               	andlw	128
  8670   002F4A  1A47               	xorwf	___flmul@sign^0,f,c
  8671   002F4C  5042               	movf	(___flmul@a+3)^0,w,c
  8672   002F4E  2442               	addwf	(___flmul@a+3)^0,w,c
  8673   002F50  6E4C               	movwf	___flmul@aexp^0,c
  8674   002F52  AE41               	btfss	(___flmul@a+2)^0,7,c
  8675   002F54  EFAE  F017         	goto	u3481
  8676   002F58  EFB0  F017         	goto	u3480
  8677   002F5C                     u3481:
  8678   002F5C  EFB1  F017         	goto	l3462
  8679   002F60                     u3480:
  8680   002F60  804C               	bsf	___flmul@aexp^0,0,c
  8681   002F62                     l3462:
  8682   002F62  504C               	movf	___flmul@aexp^0,w,c
  8683   002F64  B4D8               	btfsc	status,2,c
  8684   002F66  EFB7  F017         	goto	u3491
  8685   002F6A  EFB9  F017         	goto	u3490
  8686   002F6E                     u3491:
  8687   002F6E  EFCC  F017         	goto	l3470
  8688   002F72                     u3490:
  8689   002F72  284C               	incf	___flmul@aexp^0,w,c
  8690   002F74  A4D8               	btfss	status,2,c
  8691   002F76  EFBF  F017         	goto	u3501
  8692   002F7A  EFC1  F017         	goto	u3500
  8693   002F7E                     u3501:
  8694   002F7E  EFC9  F017         	goto	l3468
  8695   002F82                     u3500:
  8696   002F82  0E00               	movlw	0
  8697   002F84  6E3F               	movwf	___flmul@a^0,c
  8698   002F86  0E00               	movlw	0
  8699   002F88  6E40               	movwf	(___flmul@a+1)^0,c
  8700   002F8A  0E00               	movlw	0
  8701   002F8C  6E41               	movwf	(___flmul@a+2)^0,c
  8702   002F8E  0E00               	movlw	0
  8703   002F90  6E42               	movwf	(___flmul@a+3)^0,c
  8704   002F92                     l3468:
  8705   002F92  8E41               	bsf	(___flmul@a+2)^0,7,c
  8706   002F94  EFD4  F017         	goto	l1056
  8707   002F98                     l3470:
  8708   002F98  0E00               	movlw	0
  8709   002F9A  6E3F               	movwf	___flmul@a^0,c
  8710   002F9C  0E00               	movlw	0
  8711   002F9E  6E40               	movwf	(___flmul@a+1)^0,c
  8712   002FA0  0E00               	movlw	0
  8713   002FA2  6E41               	movwf	(___flmul@a+2)^0,c
  8714   002FA4  0E00               	movlw	0
  8715   002FA6  6E42               	movwf	(___flmul@a+3)^0,c
  8716   002FA8                     l1056:
  8717   002FA8  504C               	movf	___flmul@aexp^0,w,c
  8718   002FAA  B4D8               	btfsc	status,2,c
  8719   002FAC  EFDA  F017         	goto	u3511
  8720   002FB0  EFDC  F017         	goto	u3510
  8721   002FB4                     u3511:
  8722   002FB4  EFE4  F017         	goto	l3474
  8723   002FB8                     u3510:
  8724   002FB8  504D               	movf	___flmul@bexp^0,w,c
  8725   002FBA  A4D8               	btfss	status,2,c
  8726   002FBC  EFE2  F017         	goto	u3521
  8727   002FC0  EFE4  F017         	goto	u3520
  8728   002FC4                     u3521:
  8729   002FC4  EFEE  F017         	goto	l3478
  8730   002FC8                     u3520:
  8731   002FC8                     l3474:
  8732   002FC8  0E00               	movlw	0
  8733   002FCA  6E3B               	movwf	?___flmul^0,c
  8734   002FCC  0E00               	movlw	0
  8735   002FCE  6E3C               	movwf	(?___flmul+1)^0,c
  8736   002FD0  0E00               	movlw	0
  8737   002FD2  6E3D               	movwf	(?___flmul+2)^0,c
  8738   002FD4  0E00               	movlw	0
  8739   002FD6  6E3E               	movwf	(?___flmul+3)^0,c
  8740   002FD8  EF86  F019         	goto	l1060
  8741   002FDC                     l3478:
  8742   002FDC  5041               	movf	(___flmul@a+2)^0,w,c
  8743   002FDE  023B               	mulwf	___flmul@b^0,c
  8744   002FE0  CFF3 F052          	movff	prodl,___flmul@temp
  8745   002FE4  CFF4 F053          	movff	prodh,___flmul@temp+1
  8746   002FE8  5052               	movf	___flmul@temp^0,w,c
  8747   002FEA  6E48               	movwf	___flmul@grs^0,c
  8748   002FEC  6A49               	clrf	(___flmul@grs+1)^0,c
  8749   002FEE  6A4A               	clrf	(___flmul@grs+2)^0,c
  8750   002FF0  6A4B               	clrf	(___flmul@grs+3)^0,c
  8751   002FF2  5053               	movf	(___flmul@temp+1)^0,w,c
  8752   002FF4  6E4E               	movwf	___flmul@prod^0,c
  8753   002FF6  6A4F               	clrf	(___flmul@prod+1)^0,c
  8754   002FF8  6A50               	clrf	(___flmul@prod+2)^0,c
  8755   002FFA  6A51               	clrf	(___flmul@prod+3)^0,c
  8756   002FFC  5040               	movf	(___flmul@a+1)^0,w,c
  8757   002FFE  023C               	mulwf	(___flmul@b+1)^0,c
  8758   003000  CFF3 F052          	movff	prodl,___flmul@temp
  8759   003004  CFF4 F053          	movff	prodh,___flmul@temp+1
  8760   003008  5052               	movf	___flmul@temp^0,w,c
  8761   00300A  2648               	addwf	___flmul@grs^0,f,c
  8762   00300C  0E00               	movlw	0
  8763   00300E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8764   003010  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8765   003012  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8766   003014  5053               	movf	(___flmul@temp+1)^0,w,c
  8767   003016  264E               	addwf	___flmul@prod^0,f,c
  8768   003018  0E00               	movlw	0
  8769   00301A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8770   00301C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8771   00301E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8772   003020  503F               	movf	___flmul@a^0,w,c
  8773   003022  023D               	mulwf	(___flmul@b+2)^0,c
  8774   003024  CFF3 F052          	movff	prodl,___flmul@temp
  8775   003028  CFF4 F053          	movff	prodh,___flmul@temp+1
  8776   00302C  5052               	movf	___flmul@temp^0,w,c
  8777   00302E  2648               	addwf	___flmul@grs^0,f,c
  8778   003030  0E00               	movlw	0
  8779   003032  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8780   003034  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8781   003036  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8782   003038  5053               	movf	(___flmul@temp+1)^0,w,c
  8783   00303A  264E               	addwf	___flmul@prod^0,f,c
  8784   00303C  0E00               	movlw	0
  8785   00303E  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8786   003040  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8787   003042  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8788   003044  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8789   003048  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8790   00304C  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8791   003050  6A48               	clrf	___flmul@grs^0,c
  8792   003052  503F               	movf	___flmul@a^0,w,c
  8793   003054  023C               	mulwf	(___flmul@b+1)^0,c
  8794   003056  CFF3 F052          	movff	prodl,___flmul@temp
  8795   00305A  CFF4 F053          	movff	prodh,___flmul@temp+1
  8796   00305E  5052               	movf	___flmul@temp^0,w,c
  8797   003060  2648               	addwf	___flmul@grs^0,f,c
  8798   003062  5053               	movf	(___flmul@temp+1)^0,w,c
  8799   003064  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8800   003066  0E00               	movlw	0
  8801   003068  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8802   00306A  0E00               	movlw	0
  8803   00306C  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8804   00306E  5040               	movf	(___flmul@a+1)^0,w,c
  8805   003070  023B               	mulwf	___flmul@b^0,c
  8806   003072  CFF3 F052          	movff	prodl,___flmul@temp
  8807   003076  CFF4 F053          	movff	prodh,___flmul@temp+1
  8808   00307A  5052               	movf	___flmul@temp^0,w,c
  8809   00307C  2648               	addwf	___flmul@grs^0,f,c
  8810   00307E  5053               	movf	(___flmul@temp+1)^0,w,c
  8811   003080  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8812   003082  0E00               	movlw	0
  8813   003084  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8814   003086  0E00               	movlw	0
  8815   003088  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8816   00308A  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8817   00308E  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8818   003092  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8819   003096  6A48               	clrf	___flmul@grs^0,c
  8820   003098  503F               	movf	___flmul@a^0,w,c
  8821   00309A  023B               	mulwf	___flmul@b^0,c
  8822   00309C  CFF3 F052          	movff	prodl,___flmul@temp
  8823   0030A0  CFF4 F053          	movff	prodh,___flmul@temp+1
  8824   0030A4  5052               	movf	___flmul@temp^0,w,c
  8825   0030A6  2648               	addwf	___flmul@grs^0,f,c
  8826   0030A8  5053               	movf	(___flmul@temp+1)^0,w,c
  8827   0030AA  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8828   0030AC  0E00               	movlw	0
  8829   0030AE  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8830   0030B0  0E00               	movlw	0
  8831   0030B2  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8832   0030B4  5041               	movf	(___flmul@a+2)^0,w,c
  8833   0030B6  023C               	mulwf	(___flmul@b+1)^0,c
  8834   0030B8  CFF3 F052          	movff	prodl,___flmul@temp
  8835   0030BC  CFF4 F053          	movff	prodh,___flmul@temp+1
  8836   0030C0  5052               	movf	___flmul@temp^0,w,c
  8837   0030C2  264E               	addwf	___flmul@prod^0,f,c
  8838   0030C4  5053               	movf	(___flmul@temp+1)^0,w,c
  8839   0030C6  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8840   0030C8  0E00               	movlw	0
  8841   0030CA  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8842   0030CC  0E00               	movlw	0
  8843   0030CE  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8844   0030D0  5040               	movf	(___flmul@a+1)^0,w,c
  8845   0030D2  023D               	mulwf	(___flmul@b+2)^0,c
  8846   0030D4  CFF3 F052          	movff	prodl,___flmul@temp
  8847   0030D8  CFF4 F053          	movff	prodh,___flmul@temp+1
  8848   0030DC  5052               	movf	___flmul@temp^0,w,c
  8849   0030DE  264E               	addwf	___flmul@prod^0,f,c
  8850   0030E0  5053               	movf	(___flmul@temp+1)^0,w,c
  8851   0030E2  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8852   0030E4  0E00               	movlw	0
  8853   0030E6  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8854   0030E8  0E00               	movlw	0
  8855   0030EA  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8856   0030EC  5041               	movf	(___flmul@a+2)^0,w,c
  8857   0030EE  023D               	mulwf	(___flmul@b+2)^0,c
  8858   0030F0  CFF3 F052          	movff	prodl,___flmul@temp
  8859   0030F4  CFF4 F053          	movff	prodh,___flmul@temp+1
  8860   0030F8  5052               	movf	___flmul@temp^0,w,c
  8861   0030FA  6E43               	movwf	??___flmul^0,c
  8862   0030FC  5053               	movf	(___flmul@temp+1)^0,w,c
  8863   0030FE  6E44               	movwf	(??___flmul+1)^0,c
  8864   003100  6A45               	clrf	(??___flmul+2)^0,c
  8865   003102  6A46               	clrf	(??___flmul+3)^0,c
  8866   003104  C045  F046         	movff	??___flmul+2,??___flmul+3
  8867   003108  C044  F045         	movff	??___flmul+1,??___flmul+2
  8868   00310C  C043  F044         	movff	??___flmul,??___flmul+1
  8869   003110  6A43               	clrf	??___flmul^0,c
  8870   003112  5043               	movf	??___flmul^0,w,c
  8871   003114  264E               	addwf	___flmul@prod^0,f,c
  8872   003116  5044               	movf	(??___flmul+1)^0,w,c
  8873   003118  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8874   00311A  5045               	movf	(??___flmul+2)^0,w,c
  8875   00311C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8876   00311E  5046               	movf	(??___flmul+3)^0,w,c
  8877   003120  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8878   003122  C048  F043         	movff	___flmul@grs,??___flmul
  8879   003126  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  8880   00312A  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  8881   00312E  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  8882   003132  0E19               	movlw	25
  8883   003134  EFA1  F018         	goto	u3530
  8884   003138                     u3535:
  8885   003138  90D8               	bcf	status,0,c
  8886   00313A  3246               	rrcf	(??___flmul+3)^0,f,c
  8887   00313C  3245               	rrcf	(??___flmul+2)^0,f,c
  8888   00313E  3244               	rrcf	(??___flmul+1)^0,f,c
  8889   003140  3243               	rrcf	??___flmul^0,f,c
  8890   003142                     u3530:
  8891   003142  2EE8               	decfsz	wreg,f,c
  8892   003144  EF9C  F018         	goto	u3535
  8893   003148  5043               	movf	??___flmul^0,w,c
  8894   00314A  264E               	addwf	___flmul@prod^0,f,c
  8895   00314C  5044               	movf	(??___flmul+1)^0,w,c
  8896   00314E  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8897   003150  5045               	movf	(??___flmul+2)^0,w,c
  8898   003152  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8899   003154  5046               	movf	(??___flmul+3)^0,w,c
  8900   003156  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8901   003158  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8902   00315C  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8903   003160  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8904   003164  6A48               	clrf	___flmul@grs^0,c
  8905   003166  504C               	movf	___flmul@aexp^0,w,c
  8906   003168  C04D  F043         	movff	___flmul@bexp,??___flmul
  8907   00316C  6A44               	clrf	(??___flmul+1)^0,c
  8908   00316E  2643               	addwf	??___flmul^0,f,c
  8909   003170  0E00               	movlw	0
  8910   003172  2244               	addwfc	(??___flmul+1)^0,f,c
  8911   003174  0E82               	movlw	130
  8912   003176  2443               	addwf	??___flmul^0,w,c
  8913   003178  6E52               	movwf	___flmul@temp^0,c
  8914   00317A  0EFF               	movlw	255
  8915   00317C  2044               	addwfc	(??___flmul+1)^0,w,c
  8916   00317E  6E53               	movwf	(___flmul@temp+1)^0,c
  8917   003180  EFD7  F018         	goto	l3526
  8918   003184                     l3520:
  8919   003184  90D8               	bcf	status,0,c
  8920   003186  364E               	rlcf	___flmul@prod^0,f,c
  8921   003188  364F               	rlcf	(___flmul@prod+1)^0,f,c
  8922   00318A  3650               	rlcf	(___flmul@prod+2)^0,f,c
  8923   00318C  3651               	rlcf	(___flmul@prod+3)^0,f,c
  8924   00318E  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8925   003190  EFCC  F018         	goto	u3541
  8926   003194  EFCE  F018         	goto	u3540
  8927   003198                     u3541:
  8928   003198  EFCF  F018         	goto	l1063
  8929   00319C                     u3540:
  8930   00319C  804E               	bsf	___flmul@prod^0,0,c
  8931   00319E                     l1063:
  8932   00319E  90D8               	bcf	status,0,c
  8933   0031A0  3648               	rlcf	___flmul@grs^0,f,c
  8934   0031A2  3649               	rlcf	(___flmul@grs+1)^0,f,c
  8935   0031A4  364A               	rlcf	(___flmul@grs+2)^0,f,c
  8936   0031A6  364B               	rlcf	(___flmul@grs+3)^0,f,c
  8937   0031A8  0652               	decf	___flmul@temp^0,f,c
  8938   0031AA  A0D8               	btfss	status,0,c
  8939   0031AC  0653               	decf	(___flmul@temp+1)^0,f,c
  8940   0031AE                     l3526:
  8941   0031AE  AE50               	btfss	(___flmul@prod+2)^0,7,c
  8942   0031B0  EFDC  F018         	goto	u3551
  8943   0031B4  EFDE  F018         	goto	u3550
  8944   0031B8                     u3551:
  8945   0031B8  EFC2  F018         	goto	l3520
  8946   0031BC                     u3550:
  8947   0031BC  0E00               	movlw	0
  8948   0031BE  6E4C               	movwf	___flmul@aexp^0,c
  8949   0031C0  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8950   0031C2  EFE5  F018         	goto	u3561
  8951   0031C6  EFE7  F018         	goto	u3560
  8952   0031CA                     u3561:
  8953   0031CA  EF0B  F019         	goto	l1065
  8954   0031CE                     u3560:
  8955   0031CE  0EFF               	movlw	255
  8956   0031D0  1448               	andwf	___flmul@grs^0,w,c
  8957   0031D2  6E43               	movwf	??___flmul^0,c
  8958   0031D4  0EFF               	movlw	255
  8959   0031D6  1449               	andwf	(___flmul@grs+1)^0,w,c
  8960   0031D8  6E44               	movwf	(??___flmul+1)^0,c
  8961   0031DA  0EFF               	movlw	255
  8962   0031DC  144A               	andwf	(___flmul@grs+2)^0,w,c
  8963   0031DE  6E45               	movwf	(??___flmul+2)^0,c
  8964   0031E0  0E7F               	movlw	127
  8965   0031E2  144B               	andwf	(___flmul@grs+3)^0,w,c
  8966   0031E4  6E46               	movwf	(??___flmul+3)^0,c
  8967   0031E6  5043               	movf	??___flmul^0,w,c
  8968   0031E8  1044               	iorwf	(??___flmul+1)^0,w,c
  8969   0031EA  1045               	iorwf	(??___flmul+2)^0,w,c
  8970   0031EC  1046               	iorwf	(??___flmul+3)^0,w,c
  8971   0031EE  B4D8               	btfsc	status,2,c
  8972   0031F0  EFFC  F018         	goto	u3571
  8973   0031F4  EFFE  F018         	goto	u3570
  8974   0031F8                     u3571:
  8975   0031F8  EF02  F019         	goto	l1066
  8976   0031FC                     u3570:
  8977   0031FC                     l3534:
  8978   0031FC  0E01               	movlw	1
  8979   0031FE  6E4C               	movwf	___flmul@aexp^0,c
  8980   003200  EF0B  F019         	goto	l1065
  8981   003204                     l1066:
  8982   003204  A04E               	btfss	___flmul@prod^0,0,c
  8983   003206  EF07  F019         	goto	u3581
  8984   00320A  EF09  F019         	goto	u3580
  8985   00320E                     u3581:
  8986   00320E  EF0B  F019         	goto	l1065
  8987   003212                     u3580:
  8988   003212  EFFE  F018         	goto	l3534
  8989   003216                     l1065:
  8990   003216  504C               	movf	___flmul@aexp^0,w,c
  8991   003218  B4D8               	btfsc	status,2,c
  8992   00321A  EF11  F019         	goto	u3591
  8993   00321E  EF13  F019         	goto	u3590
  8994   003222                     u3591:
  8995   003222  EF37  F019         	goto	l3546
  8996   003226                     u3590:
  8997   003226  0E01               	movlw	1
  8998   003228  264E               	addwf	___flmul@prod^0,f,c
  8999   00322A  0E00               	movlw	0
  9000   00322C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  9001   00322E  2250               	addwfc	(___flmul@prod+2)^0,f,c
  9002   003230  2251               	addwfc	(___flmul@prod+3)^0,f,c
  9003   003232  A051               	btfss	(___flmul@prod+3)^0,0,c
  9004   003234  EF1E  F019         	goto	u3601
  9005   003238  EF20  F019         	goto	u3600
  9006   00323C                     u3601:
  9007   00323C  EF37  F019         	goto	l3546
  9008   003240                     u3600:
  9009   003240  C04E  F043         	movff	___flmul@prod,??___flmul
  9010   003244  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  9011   003248  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  9012   00324C  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  9013   003250  3446               	rlcf	(??___flmul+3)^0,w,c
  9014   003252  3246               	rrcf	(??___flmul+3)^0,f,c
  9015   003254  3245               	rrcf	(??___flmul+2)^0,f,c
  9016   003256  3244               	rrcf	(??___flmul+1)^0,f,c
  9017   003258  3243               	rrcf	??___flmul^0,f,c
  9018   00325A  C043  F04E         	movff	??___flmul,___flmul@prod
  9019   00325E  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  9020   003262  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  9021   003266  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  9022   00326A  4A52               	infsnz	___flmul@temp^0,f,c
  9023   00326C  2A53               	incf	(___flmul@temp+1)^0,f,c
  9024   00326E                     l3546:
  9025   00326E  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  9026   003270  EF42  F019         	goto	u3611
  9027   003274  5053               	movf	(___flmul@temp+1)^0,w,c
  9028   003276  E108               	bnz	u3610
  9029   003278  2852               	incf	___flmul@temp^0,w,c
  9030   00327A  A0D8               	btfss	status,0,c
  9031   00327C  EF42  F019         	goto	u3611
  9032   003280  EF44  F019         	goto	u3610
  9033   003284                     u3611:
  9034   003284  EF4E  F019         	goto	l3550
  9035   003288                     u3610:
  9036   003288  0E00               	movlw	0
  9037   00328A  6E4E               	movwf	___flmul@prod^0,c
  9038   00328C  0E00               	movlw	0
  9039   00328E  6E4F               	movwf	(___flmul@prod+1)^0,c
  9040   003290  0E80               	movlw	128
  9041   003292  6E50               	movwf	(___flmul@prod+2)^0,c
  9042   003294  0E7F               	movlw	127
  9043   003296  6E51               	movwf	(___flmul@prod+3)^0,c
  9044   003298  EF7C  F019         	goto	l3562
  9045   00329C                     l3550:
  9046   00329C  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  9047   00329E  EF5B  F019         	goto	u3620
  9048   0032A2  5053               	movf	(___flmul@temp+1)^0,w,c
  9049   0032A4  E106               	bnz	u3621
  9050   0032A6  0452               	decf	___flmul@temp^0,w,c
  9051   0032A8  B0D8               	btfsc	status,0,c
  9052   0032AA  EF59  F019         	goto	u3621
  9053   0032AE  EF5B  F019         	goto	u3620
  9054   0032B2                     u3621:
  9055   0032B2  EF67  F019         	goto	l1073
  9056   0032B6                     u3620:
  9057   0032B6  0E00               	movlw	0
  9058   0032B8  6E4E               	movwf	___flmul@prod^0,c
  9059   0032BA  0E00               	movlw	0
  9060   0032BC  6E4F               	movwf	(___flmul@prod+1)^0,c
  9061   0032BE  0E00               	movlw	0
  9062   0032C0  6E50               	movwf	(___flmul@prod+2)^0,c
  9063   0032C2  0E00               	movlw	0
  9064   0032C4  6E51               	movwf	(___flmul@prod+3)^0,c
  9065   0032C6  0E00               	movlw	0
  9066   0032C8  6E47               	movwf	___flmul@sign^0,c
  9067   0032CA  EF7C  F019         	goto	l3562
  9068   0032CE                     l1073:
  9069   0032CE  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  9070   0032D2  0EFF               	movlw	255
  9071   0032D4  164E               	andwf	___flmul@prod^0,f,c
  9072   0032D6  0EFF               	movlw	255
  9073   0032D8  164F               	andwf	(___flmul@prod+1)^0,f,c
  9074   0032DA  0E7F               	movlw	127
  9075   0032DC  1650               	andwf	(___flmul@prod+2)^0,f,c
  9076   0032DE  0E00               	movlw	0
  9077   0032E0  1651               	andwf	(___flmul@prod+3)^0,f,c
  9078   0032E2  A04D               	btfss	___flmul@bexp^0,0,c
  9079   0032E4  EF76  F019         	goto	u3631
  9080   0032E8  EF78  F019         	goto	u3630
  9081   0032EC                     u3631:
  9082   0032EC  EF79  F019         	goto	l3560
  9083   0032F0                     u3630:
  9084   0032F0  8E50               	bsf	(___flmul@prod+2)^0,7,c
  9085   0032F2                     l3560:
  9086   0032F2  90D8               	bcf	status,0,c
  9087   0032F4  304D               	rrcf	___flmul@bexp^0,w,c
  9088   0032F6  6E51               	movwf	(___flmul@prod+3)^0,c
  9089   0032F8                     l3562:
  9090   0032F8  5047               	movf	___flmul@sign^0,w,c
  9091   0032FA  1251               	iorwf	(___flmul@prod+3)^0,f,c
  9092   0032FC  C04E  F03B         	movff	___flmul@prod,?___flmul
  9093   003300  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  9094   003304  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  9095   003308  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  9096   00330C                     l1060:
  9097   00330C  0012               	return		;funcret
  9098   00330E                     __end_of___flmul:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function ___fleq *****************
  9102 ;; Defined at:
  9103 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  ff1             4    0[COMRAM] unsigned char 
  9106 ;;  ff2             4    4[COMRAM] unsigned char 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;		None               void
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9118 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9121 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9122 ;;Total ram usage:       12 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_custom_floatmodulo
  9128 ;;		_RGB_to_HSV
  9129 ;;		_efgtoa
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text41
  9134   004226                     __ptext41:
  9135                           	callstack 0
  9136   004226                     ___fleq:
  9137                           	callstack 24
  9138   004226  0E00               	movlw	0
  9139   004228  1401               	andwf	___fleq@ff1^0,w,c
  9140   00422A  6E09               	movwf	??___fleq^0,c
  9141   00422C  0E00               	movlw	0
  9142   00422E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9143   004230  6E0A               	movwf	(??___fleq+1)^0,c
  9144   004232  0E80               	movlw	128
  9145   004234  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9146   004236  6E0B               	movwf	(??___fleq+2)^0,c
  9147   004238  0E7F               	movlw	127
  9148   00423A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9149   00423C  6E0C               	movwf	(??___fleq+3)^0,c
  9150   00423E  5009               	movf	??___fleq^0,w,c
  9151   004240  100A               	iorwf	(??___fleq+1)^0,w,c
  9152   004242  100B               	iorwf	(??___fleq+2)^0,w,c
  9153   004244  100C               	iorwf	(??___fleq+3)^0,w,c
  9154   004246  A4D8               	btfss	status,2,c
  9155   004248  EF28  F021         	goto	u3641
  9156   00424C  EF2A  F021         	goto	u3640
  9157   004250                     u3641:
  9158   004250  EF32  F021         	goto	l3578
  9159   004254                     u3640:
  9160   004254  0E00               	movlw	0
  9161   004256  6E01               	movwf	___fleq@ff1^0,c
  9162   004258  0E00               	movlw	0
  9163   00425A  6E02               	movwf	(___fleq@ff1+1)^0,c
  9164   00425C  0E00               	movlw	0
  9165   00425E  6E03               	movwf	(___fleq@ff1+2)^0,c
  9166   004260  0E00               	movlw	0
  9167   004262  6E04               	movwf	(___fleq@ff1+3)^0,c
  9168   004264                     l3578:
  9169   004264  0E00               	movlw	0
  9170   004266  1405               	andwf	___fleq@ff2^0,w,c
  9171   004268  6E09               	movwf	??___fleq^0,c
  9172   00426A  0E00               	movlw	0
  9173   00426C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9174   00426E  6E0A               	movwf	(??___fleq+1)^0,c
  9175   004270  0E80               	movlw	128
  9176   004272  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9177   004274  6E0B               	movwf	(??___fleq+2)^0,c
  9178   004276  0E7F               	movlw	127
  9179   004278  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9180   00427A  6E0C               	movwf	(??___fleq+3)^0,c
  9181   00427C  5009               	movf	??___fleq^0,w,c
  9182   00427E  100A               	iorwf	(??___fleq+1)^0,w,c
  9183   004280  100B               	iorwf	(??___fleq+2)^0,w,c
  9184   004282  100C               	iorwf	(??___fleq+3)^0,w,c
  9185   004284  A4D8               	btfss	status,2,c
  9186   004286  EF47  F021         	goto	u3651
  9187   00428A  EF49  F021         	goto	u3650
  9188   00428E                     u3651:
  9189   00428E  EF51  F021         	goto	l3582
  9190   004292                     u3650:
  9191   004292  0E00               	movlw	0
  9192   004294  6E05               	movwf	___fleq@ff2^0,c
  9193   004296  0E00               	movlw	0
  9194   004298  6E06               	movwf	(___fleq@ff2+1)^0,c
  9195   00429A  0E00               	movlw	0
  9196   00429C  6E07               	movwf	(___fleq@ff2+2)^0,c
  9197   00429E  0E00               	movlw	0
  9198   0042A0  6E08               	movwf	(___fleq@ff2+3)^0,c
  9199   0042A2                     l3582:
  9200   0042A2  5005               	movf	___fleq@ff2^0,w,c
  9201   0042A4  1801               	xorwf	___fleq@ff1^0,w,c
  9202   0042A6  E10F               	bnz	u3660
  9203   0042A8  5006               	movf	(___fleq@ff2+1)^0,w,c
  9204   0042AA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9205   0042AC  E10C               	bnz	u3660
  9206   0042AE  5007               	movf	(___fleq@ff2+2)^0,w,c
  9207   0042B0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9208   0042B2  E109               	bnz	u3660
  9209   0042B4  5008               	movf	(___fleq@ff2+3)^0,w,c
  9210   0042B6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9211   0042B8  B4D8               	btfsc	status,2,c
  9212   0042BA  EF61  F021         	goto	u3661
  9213   0042BE  EF63  F021         	goto	u3660
  9214   0042C2                     u3661:
  9215   0042C2  EF66  F021         	goto	l3586
  9216   0042C6                     u3660:
  9217   0042C6  90D8               	bcf	status,0,c
  9218   0042C8  EF67  F021         	goto	l701
  9219   0042CC                     l3586:
  9220   0042CC  80D8               	bsf	status,0,c
  9221   0042CE                     l701:
  9222   0042CE  0012               	return		;funcret
  9223   0042D0                     __end_of___fleq:
  9224                           	callstack 0
  9225                           
  9226 ;; *************** function ___fldiv *****************
  9227 ;; Defined at:
  9228 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  b               4   33[COMRAM] unsigned char 
  9231 ;;  a               4   37[COMRAM] unsigned char 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  grs             4   52[COMRAM] unsigned long 
  9234 ;;  rem             4   45[COMRAM] unsigned long 
  9235 ;;  new_exp         2   50[COMRAM] short 
  9236 ;;  aexp            1   57[COMRAM] unsigned char 
  9237 ;;  bexp            1   56[COMRAM] unsigned char 
  9238 ;;  sign            1   49[COMRAM] unsigned char 
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  4   33[COMRAM] unsigned char 
  9241 ;; Registers used:
  9242 ;;		wreg, status,2, status,0
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9248 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;Total ram usage:       25 bytes
  9253 ;; Hardware stack levels used: 1
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_custom_floatmodulo
  9258 ;;		_RGB_to_HSV
  9259 ;;		_efgtoa
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text42
  9264   00330E                     __ptext42:
  9265                           	callstack 0
  9266   00330E                     ___fldiv:
  9267                           	callstack 24
  9268   00330E  5025               	movf	(___fldiv@b+3)^0,w,c
  9269   003310  0B80               	andlw	128
  9270   003312  6E32               	movwf	___fldiv@sign^0,c
  9271   003314  5025               	movf	(___fldiv@b+3)^0,w,c
  9272   003316  2425               	addwf	(___fldiv@b+3)^0,w,c
  9273   003318  6E39               	movwf	___fldiv@bexp^0,c
  9274   00331A  AE24               	btfss	(___fldiv@b+2)^0,7,c
  9275   00331C  EF92  F019         	goto	u3221
  9276   003320  EF94  F019         	goto	u3220
  9277   003324                     u3221:
  9278   003324  EF95  F019         	goto	l3306
  9279   003328                     u3220:
  9280   003328  8039               	bsf	___fldiv@bexp^0,0,c
  9281   00332A                     l3306:
  9282   00332A  5039               	movf	___fldiv@bexp^0,w,c
  9283   00332C  B4D8               	btfsc	status,2,c
  9284   00332E  EF9B  F019         	goto	u3231
  9285   003332  EF9D  F019         	goto	u3230
  9286   003336                     u3231:
  9287   003336  EFB2  F019         	goto	l3316
  9288   00333A                     u3230:
  9289   00333A  2839               	incf	___fldiv@bexp^0,w,c
  9290   00333C  A4D8               	btfss	status,2,c
  9291   00333E  EFA3  F019         	goto	u3241
  9292   003342  EFA5  F019         	goto	u3240
  9293   003346                     u3241:
  9294   003346  EFAD  F019         	goto	l3312
  9295   00334A                     u3240:
  9296   00334A  0E00               	movlw	0
  9297   00334C  6E22               	movwf	___fldiv@b^0,c
  9298   00334E  0E00               	movlw	0
  9299   003350  6E23               	movwf	(___fldiv@b+1)^0,c
  9300   003352  0E00               	movlw	0
  9301   003354  6E24               	movwf	(___fldiv@b+2)^0,c
  9302   003356  0E00               	movlw	0
  9303   003358  6E25               	movwf	(___fldiv@b+3)^0,c
  9304   00335A                     l3312:
  9305   00335A  8E24               	bsf	(___fldiv@b+2)^0,7,c
  9306   00335C  0E00               	movlw	0
  9307   00335E  6E25               	movwf	(___fldiv@b+3)^0,c
  9308   003360  EFBA  F019         	goto	l3318
  9309   003364                     l3316:
  9310   003364  0E00               	movlw	0
  9311   003366  6E22               	movwf	___fldiv@b^0,c
  9312   003368  0E00               	movlw	0
  9313   00336A  6E23               	movwf	(___fldiv@b+1)^0,c
  9314   00336C  0E00               	movlw	0
  9315   00336E  6E24               	movwf	(___fldiv@b+2)^0,c
  9316   003370  0E00               	movlw	0
  9317   003372  6E25               	movwf	(___fldiv@b+3)^0,c
  9318   003374                     l3318:
  9319   003374  5029               	movf	(___fldiv@a+3)^0,w,c
  9320   003376  0B80               	andlw	128
  9321   003378  1A32               	xorwf	___fldiv@sign^0,f,c
  9322   00337A  5029               	movf	(___fldiv@a+3)^0,w,c
  9323   00337C  2429               	addwf	(___fldiv@a+3)^0,w,c
  9324   00337E  6E3A               	movwf	___fldiv@aexp^0,c
  9325   003380  AE28               	btfss	(___fldiv@a+2)^0,7,c
  9326   003382  EFC5  F019         	goto	u3251
  9327   003386  EFC7  F019         	goto	u3250
  9328   00338A                     u3251:
  9329   00338A  EFC8  F019         	goto	l3326
  9330   00338E                     u3250:
  9331   00338E  803A               	bsf	___fldiv@aexp^0,0,c
  9332   003390                     l3326:
  9333   003390  503A               	movf	___fldiv@aexp^0,w,c
  9334   003392  B4D8               	btfsc	status,2,c
  9335   003394  EFCE  F019         	goto	u3261
  9336   003398  EFD0  F019         	goto	u3260
  9337   00339C                     u3261:
  9338   00339C  EFE5  F019         	goto	l3336
  9339   0033A0                     u3260:
  9340   0033A0  283A               	incf	___fldiv@aexp^0,w,c
  9341   0033A2  A4D8               	btfss	status,2,c
  9342   0033A4  EFD6  F019         	goto	u3271
  9343   0033A8  EFD8  F019         	goto	u3270
  9344   0033AC                     u3271:
  9345   0033AC  EFE0  F019         	goto	l3332
  9346   0033B0                     u3270:
  9347   0033B0  0E00               	movlw	0
  9348   0033B2  6E26               	movwf	___fldiv@a^0,c
  9349   0033B4  0E00               	movlw	0
  9350   0033B6  6E27               	movwf	(___fldiv@a+1)^0,c
  9351   0033B8  0E00               	movlw	0
  9352   0033BA  6E28               	movwf	(___fldiv@a+2)^0,c
  9353   0033BC  0E00               	movlw	0
  9354   0033BE  6E29               	movwf	(___fldiv@a+3)^0,c
  9355   0033C0                     l3332:
  9356   0033C0  8E28               	bsf	(___fldiv@a+2)^0,7,c
  9357   0033C2  0E00               	movlw	0
  9358   0033C4  6E29               	movwf	(___fldiv@a+3)^0,c
  9359   0033C6  EFED  F019         	goto	l3338
  9360   0033CA                     l3336:
  9361   0033CA  0E00               	movlw	0
  9362   0033CC  6E26               	movwf	___fldiv@a^0,c
  9363   0033CE  0E00               	movlw	0
  9364   0033D0  6E27               	movwf	(___fldiv@a+1)^0,c
  9365   0033D2  0E00               	movlw	0
  9366   0033D4  6E28               	movwf	(___fldiv@a+2)^0,c
  9367   0033D6  0E00               	movlw	0
  9368   0033D8  6E29               	movwf	(___fldiv@a+3)^0,c
  9369   0033DA                     l3338:
  9370   0033DA  5026               	movf	___fldiv@a^0,w,c
  9371   0033DC  1027               	iorwf	(___fldiv@a+1)^0,w,c
  9372   0033DE  1028               	iorwf	(___fldiv@a+2)^0,w,c
  9373   0033E0  1029               	iorwf	(___fldiv@a+3)^0,w,c
  9374   0033E2  A4D8               	btfss	status,2,c
  9375   0033E4  EFF6  F019         	goto	u3281
  9376   0033E8  EFF8  F019         	goto	u3280
  9377   0033EC                     u3281:
  9378   0033EC  EF10  F01A         	goto	l3350
  9379   0033F0                     u3280:
  9380   0033F0  0E00               	movlw	0
  9381   0033F2  6E22               	movwf	___fldiv@b^0,c
  9382   0033F4  0E00               	movlw	0
  9383   0033F6  6E23               	movwf	(___fldiv@b+1)^0,c
  9384   0033F8  0E00               	movlw	0
  9385   0033FA  6E24               	movwf	(___fldiv@b+2)^0,c
  9386   0033FC  0E00               	movlw	0
  9387   0033FE  6E25               	movwf	(___fldiv@b+3)^0,c
  9388   003400  0E80               	movlw	128
  9389   003402  1224               	iorwf	(___fldiv@b+2)^0,f,c
  9390   003404  0E7F               	movlw	127
  9391   003406  1225               	iorwf	(___fldiv@b+3)^0,f,c
  9392   003408                     l3344:
  9393   003408  5032               	movf	___fldiv@sign^0,w,c
  9394   00340A  1225               	iorwf	(___fldiv@b+3)^0,f,c
  9395   00340C  C022  F022         	movff	___fldiv@b,?___fldiv
  9396   003410  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  9397   003414  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  9398   003418  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  9399   00341C  EF53  F01B         	goto	l1024
  9400   003420                     l3350:
  9401   003420  5039               	movf	___fldiv@bexp^0,w,c
  9402   003422  A4D8               	btfss	status,2,c
  9403   003424  EF16  F01A         	goto	u3291
  9404   003428  EF18  F01A         	goto	u3290
  9405   00342C                     u3291:
  9406   00342C  EF22  F01A         	goto	l3358
  9407   003430                     u3290:
  9408   003430  0E00               	movlw	0
  9409   003432  6E22               	movwf	?___fldiv^0,c
  9410   003434  0E00               	movlw	0
  9411   003436  6E23               	movwf	(?___fldiv+1)^0,c
  9412   003438  0E00               	movlw	0
  9413   00343A  6E24               	movwf	(?___fldiv+2)^0,c
  9414   00343C  0E00               	movlw	0
  9415   00343E  6E25               	movwf	(?___fldiv+3)^0,c
  9416   003440  EF53  F01B         	goto	l1024
  9417   003444                     l3358:
  9418   003444  503A               	movf	___fldiv@aexp^0,w,c
  9419   003446  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  9420   00344A  6A2B               	clrf	(??___fldiv+1)^0,c
  9421   00344C  5E2A               	subwf	??___fldiv^0,f,c
  9422   00344E  0E00               	movlw	0
  9423   003450  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  9424   003452  0E7F               	movlw	127
  9425   003454  242A               	addwf	??___fldiv^0,w,c
  9426   003456  6E33               	movwf	___fldiv@new_exp^0,c
  9427   003458  0E00               	movlw	0
  9428   00345A  202B               	addwfc	(??___fldiv+1)^0,w,c
  9429   00345C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9430   00345E  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  9431   003462  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  9432   003466  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  9433   00346A  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  9434   00346E  0E00               	movlw	0
  9435   003470  6E22               	movwf	___fldiv@b^0,c
  9436   003472  0E00               	movlw	0
  9437   003474  6E23               	movwf	(___fldiv@b+1)^0,c
  9438   003476  0E00               	movlw	0
  9439   003478  6E24               	movwf	(___fldiv@b+2)^0,c
  9440   00347A  0E00               	movlw	0
  9441   00347C  6E25               	movwf	(___fldiv@b+3)^0,c
  9442   00347E  0E00               	movlw	0
  9443   003480  6E35               	movwf	___fldiv@grs^0,c
  9444   003482  0E00               	movlw	0
  9445   003484  6E36               	movwf	(___fldiv@grs+1)^0,c
  9446   003486  0E00               	movlw	0
  9447   003488  6E37               	movwf	(___fldiv@grs+2)^0,c
  9448   00348A  0E00               	movlw	0
  9449   00348C  6E38               	movwf	(___fldiv@grs+3)^0,c
  9450   00348E  0E00               	movlw	0
  9451   003490  6E3A               	movwf	___fldiv@aexp^0,c
  9452   003492  EF83  F01A         	goto	l1026
  9453   003496                     l3368:
  9454   003496  503A               	movf	___fldiv@aexp^0,w,c
  9455   003498  B4D8               	btfsc	status,2,c
  9456   00349A  EF51  F01A         	goto	u3301
  9457   00349E  EF53  F01A         	goto	u3300
  9458   0034A2                     u3301:
  9459   0034A2  EF6A  F01A         	goto	l3376
  9460   0034A6                     u3300:
  9461   0034A6  90D8               	bcf	status,0,c
  9462   0034A8  362E               	rlcf	___fldiv@rem^0,f,c
  9463   0034AA  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  9464   0034AC  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  9465   0034AE  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  9466   0034B0  90D8               	bcf	status,0,c
  9467   0034B2  3622               	rlcf	___fldiv@b^0,f,c
  9468   0034B4  3623               	rlcf	(___fldiv@b+1)^0,f,c
  9469   0034B6  3624               	rlcf	(___fldiv@b+2)^0,f,c
  9470   0034B8  3625               	rlcf	(___fldiv@b+3)^0,f,c
  9471   0034BA  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9472   0034BC  EF62  F01A         	goto	u3311
  9473   0034C0  EF64  F01A         	goto	u3310
  9474   0034C4                     u3311:
  9475   0034C4  EF65  F01A         	goto	l1029
  9476   0034C8                     u3310:
  9477   0034C8  8022               	bsf	___fldiv@b^0,0,c
  9478   0034CA                     l1029:
  9479   0034CA  90D8               	bcf	status,0,c
  9480   0034CC  3635               	rlcf	___fldiv@grs^0,f,c
  9481   0034CE  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  9482   0034D0  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  9483   0034D2  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  9484   0034D4                     l3376:
  9485   0034D4  5026               	movf	___fldiv@a^0,w,c
  9486   0034D6  5C2E               	subwf	___fldiv@rem^0,w,c
  9487   0034D8  5027               	movf	(___fldiv@a+1)^0,w,c
  9488   0034DA  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  9489   0034DC  5028               	movf	(___fldiv@a+2)^0,w,c
  9490   0034DE  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  9491   0034E0  5029               	movf	(___fldiv@a+3)^0,w,c
  9492   0034E2  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  9493   0034E4  A0D8               	btfss	status,0,c
  9494   0034E6  EF77  F01A         	goto	u3321
  9495   0034EA  EF79  F01A         	goto	u3320
  9496   0034EE                     u3321:
  9497   0034EE  EF82  F01A         	goto	l3382
  9498   0034F2                     u3320:
  9499   0034F2  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  9500   0034F4  5026               	movf	___fldiv@a^0,w,c
  9501   0034F6  5E2E               	subwf	___fldiv@rem^0,f,c
  9502   0034F8  5027               	movf	(___fldiv@a+1)^0,w,c
  9503   0034FA  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  9504   0034FC  5028               	movf	(___fldiv@a+2)^0,w,c
  9505   0034FE  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  9506   003500  5029               	movf	(___fldiv@a+3)^0,w,c
  9507   003502  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  9508   003504                     l3382:
  9509   003504  2A3A               	incf	___fldiv@aexp^0,f,c
  9510   003506                     l1026:
  9511   003506  0E19               	movlw	25
  9512   003508  643A               	cpfsgt	___fldiv@aexp^0,c
  9513   00350A  EF89  F01A         	goto	u3331
  9514   00350E  EF8B  F01A         	goto	u3330
  9515   003512                     u3331:
  9516   003512  EF4B  F01A         	goto	l3368
  9517   003516                     u3330:
  9518   003516  502E               	movf	___fldiv@rem^0,w,c
  9519   003518  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  9520   00351A  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  9521   00351C  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  9522   00351E  B4D8               	btfsc	status,2,c
  9523   003520  EF94  F01A         	goto	u3341
  9524   003524  EF96  F01A         	goto	u3340
  9525   003528                     u3341:
  9526   003528  EFAE  F01A         	goto	l3394
  9527   00352C                     u3340:
  9528   00352C  8035               	bsf	___fldiv@grs^0,0,c
  9529   00352E  EFAE  F01A         	goto	l3394
  9530   003532                     l3388:
  9531   003532  90D8               	bcf	status,0,c
  9532   003534  3622               	rlcf	___fldiv@b^0,f,c
  9533   003536  3623               	rlcf	(___fldiv@b+1)^0,f,c
  9534   003538  3624               	rlcf	(___fldiv@b+2)^0,f,c
  9535   00353A  3625               	rlcf	(___fldiv@b+3)^0,f,c
  9536   00353C  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9537   00353E  EFA3  F01A         	goto	u3351
  9538   003542  EFA5  F01A         	goto	u3350
  9539   003546                     u3351:
  9540   003546  EFA6  F01A         	goto	l1035
  9541   00354A                     u3350:
  9542   00354A  8022               	bsf	___fldiv@b^0,0,c
  9543   00354C                     l1035:
  9544   00354C  90D8               	bcf	status,0,c
  9545   00354E  3635               	rlcf	___fldiv@grs^0,f,c
  9546   003550  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  9547   003552  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  9548   003554  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  9549   003556  0633               	decf	___fldiv@new_exp^0,f,c
  9550   003558  A0D8               	btfss	status,0,c
  9551   00355A  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  9552   00355C                     l3394:
  9553   00355C  AE24               	btfss	(___fldiv@b+2)^0,7,c
  9554   00355E  EFB3  F01A         	goto	u3361
  9555   003562  EFB5  F01A         	goto	u3360
  9556   003566                     u3361:
  9557   003566  EF99  F01A         	goto	l3388
  9558   00356A                     u3360:
  9559   00356A  0E00               	movlw	0
  9560   00356C  6E3A               	movwf	___fldiv@aexp^0,c
  9561   00356E  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9562   003570  EFBC  F01A         	goto	u3371
  9563   003574  EFBE  F01A         	goto	u3370
  9564   003578                     u3371:
  9565   003578  EFE2  F01A         	goto	l1037
  9566   00357C                     u3370:
  9567   00357C  0EFF               	movlw	255
  9568   00357E  1435               	andwf	___fldiv@grs^0,w,c
  9569   003580  6E2A               	movwf	??___fldiv^0,c
  9570   003582  0EFF               	movlw	255
  9571   003584  1436               	andwf	(___fldiv@grs+1)^0,w,c
  9572   003586  6E2B               	movwf	(??___fldiv+1)^0,c
  9573   003588  0EFF               	movlw	255
  9574   00358A  1437               	andwf	(___fldiv@grs+2)^0,w,c
  9575   00358C  6E2C               	movwf	(??___fldiv+2)^0,c
  9576   00358E  0E7F               	movlw	127
  9577   003590  1438               	andwf	(___fldiv@grs+3)^0,w,c
  9578   003592  6E2D               	movwf	(??___fldiv+3)^0,c
  9579   003594  502A               	movf	??___fldiv^0,w,c
  9580   003596  102B               	iorwf	(??___fldiv+1)^0,w,c
  9581   003598  102C               	iorwf	(??___fldiv+2)^0,w,c
  9582   00359A  102D               	iorwf	(??___fldiv+3)^0,w,c
  9583   00359C  B4D8               	btfsc	status,2,c
  9584   00359E  EFD3  F01A         	goto	u3381
  9585   0035A2  EFD5  F01A         	goto	u3380
  9586   0035A6                     u3381:
  9587   0035A6  EFD9  F01A         	goto	l1038
  9588   0035AA                     u3380:
  9589   0035AA                     l3402:
  9590   0035AA  0E01               	movlw	1
  9591   0035AC  6E3A               	movwf	___fldiv@aexp^0,c
  9592   0035AE  EFE2  F01A         	goto	l1037
  9593   0035B2                     l1038:
  9594   0035B2  A022               	btfss	___fldiv@b^0,0,c
  9595   0035B4  EFDE  F01A         	goto	u3391
  9596   0035B8  EFE0  F01A         	goto	u3390
  9597   0035BC                     u3391:
  9598   0035BC  EFE2  F01A         	goto	l1037
  9599   0035C0                     u3390:
  9600   0035C0  EFD5  F01A         	goto	l3402
  9601   0035C4                     l1037:
  9602   0035C4  503A               	movf	___fldiv@aexp^0,w,c
  9603   0035C6  B4D8               	btfsc	status,2,c
  9604   0035C8  EFE8  F01A         	goto	u3401
  9605   0035CC  EFEA  F01A         	goto	u3400
  9606   0035D0                     u3401:
  9607   0035D0  EF0E  F01B         	goto	l3414
  9608   0035D4                     u3400:
  9609   0035D4  0E01               	movlw	1
  9610   0035D6  2622               	addwf	___fldiv@b^0,f,c
  9611   0035D8  0E00               	movlw	0
  9612   0035DA  2223               	addwfc	(___fldiv@b+1)^0,f,c
  9613   0035DC  2224               	addwfc	(___fldiv@b+2)^0,f,c
  9614   0035DE  2225               	addwfc	(___fldiv@b+3)^0,f,c
  9615   0035E0  A025               	btfss	(___fldiv@b+3)^0,0,c
  9616   0035E2  EFF5  F01A         	goto	u3411
  9617   0035E6  EFF7  F01A         	goto	u3410
  9618   0035EA                     u3411:
  9619   0035EA  EF0E  F01B         	goto	l3414
  9620   0035EE                     u3410:
  9621   0035EE  C022  F02A         	movff	___fldiv@b,??___fldiv
  9622   0035F2  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  9623   0035F6  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  9624   0035FA  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  9625   0035FE  342D               	rlcf	(??___fldiv+3)^0,w,c
  9626   003600  322D               	rrcf	(??___fldiv+3)^0,f,c
  9627   003602  322C               	rrcf	(??___fldiv+2)^0,f,c
  9628   003604  322B               	rrcf	(??___fldiv+1)^0,f,c
  9629   003606  322A               	rrcf	??___fldiv^0,f,c
  9630   003608  C02A  F022         	movff	??___fldiv,___fldiv@b
  9631   00360C  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  9632   003610  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  9633   003614  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  9634   003618  4A33               	infsnz	___fldiv@new_exp^0,f,c
  9635   00361A  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  9636   00361C                     l3414:
  9637   00361C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9638   00361E  EF19  F01B         	goto	u3421
  9639   003622  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9640   003624  E108               	bnz	u3420
  9641   003626  2833               	incf	___fldiv@new_exp^0,w,c
  9642   003628  A0D8               	btfss	status,0,c
  9643   00362A  EF19  F01B         	goto	u3421
  9644   00362E  EF1B  F01B         	goto	u3420
  9645   003632                     u3421:
  9646   003632  EF26  F01B         	goto	l3418
  9647   003636                     u3420:
  9648   003636  0E00               	movlw	0
  9649   003638  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9650   00363A  6833               	setf	___fldiv@new_exp^0,c
  9651   00363C  0E00               	movlw	0
  9652   00363E  6E22               	movwf	___fldiv@b^0,c
  9653   003640  0E00               	movlw	0
  9654   003642  6E23               	movwf	(___fldiv@b+1)^0,c
  9655   003644  0E00               	movlw	0
  9656   003646  6E24               	movwf	(___fldiv@b+2)^0,c
  9657   003648  0E00               	movlw	0
  9658   00364A  6E25               	movwf	(___fldiv@b+3)^0,c
  9659   00364C                     l3418:
  9660   00364C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9661   00364E  EF33  F01B         	goto	u3430
  9662   003652  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9663   003654  E106               	bnz	u3431
  9664   003656  0433               	decf	___fldiv@new_exp^0,w,c
  9665   003658  B0D8               	btfsc	status,0,c
  9666   00365A  EF31  F01B         	goto	u3431
  9667   00365E  EF33  F01B         	goto	u3430
  9668   003662                     u3431:
  9669   003662  EF41  F01B         	goto	l3422
  9670   003666                     u3430:
  9671   003666  0E00               	movlw	0
  9672   003668  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9673   00366A  0E00               	movlw	0
  9674   00366C  6E33               	movwf	___fldiv@new_exp^0,c
  9675   00366E  0E00               	movlw	0
  9676   003670  6E22               	movwf	___fldiv@b^0,c
  9677   003672  0E00               	movlw	0
  9678   003674  6E23               	movwf	(___fldiv@b+1)^0,c
  9679   003676  0E00               	movlw	0
  9680   003678  6E24               	movwf	(___fldiv@b+2)^0,c
  9681   00367A  0E00               	movlw	0
  9682   00367C  6E25               	movwf	(___fldiv@b+3)^0,c
  9683   00367E  0E00               	movlw	0
  9684   003680  6E32               	movwf	___fldiv@sign^0,c
  9685   003682                     l3422:
  9686   003682  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  9687   003686  A039               	btfss	___fldiv@bexp^0,0,c
  9688   003688  EF48  F01B         	goto	u3441
  9689   00368C  EF4A  F01B         	goto	u3440
  9690   003690                     u3441:
  9691   003690  EF4D  F01B         	goto	l3428
  9692   003694                     u3440:
  9693   003694  8E24               	bsf	(___fldiv@b+2)^0,7,c
  9694   003696  EF4E  F01B         	goto	l3430
  9695   00369A                     l3428:
  9696   00369A  9E24               	bcf	(___fldiv@b+2)^0,7,c
  9697   00369C                     l3430:
  9698   00369C  90D8               	bcf	status,0,c
  9699   00369E  3039               	rrcf	___fldiv@bexp^0,w,c
  9700   0036A0  6E25               	movwf	(___fldiv@b+3)^0,c
  9701   0036A2  EF04  F01A         	goto	l3344
  9702   0036A6                     l1024:
  9703   0036A6  0012               	return		;funcret
  9704   0036A8                     __end_of___fldiv:
  9705                           	callstack 0
  9706                           
  9707                           	psect	rparam
  9708   000000                     
  9709                           	psect	config
  9710                           
  9711                           ;Config register CONFIG1L @ 0x300000
  9712                           ;	External Oscillator mode Selection bits
  9713                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9714                           ;	Power-up default value for COSC bits
  9715                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9716   300000                     	org	3145728
  9717   300000  AA                 	db	170
  9718                           
  9719                           ;Config register CONFIG1H @ 0x300001
  9720                           ;	unspecified, using default values
  9721                           ;	Clock Out Enable bit
  9722                           ;	CLKOUTEN = 0x1, unprogrammed default
  9723                           ;	Clock Switch Enable bit
  9724                           ;	CSWEN = 0x1, unprogrammed default
  9725                           ;	Fail-Safe Clock Monitor Enable bit
  9726                           ;	FCMEN = 0x1, unprogrammed default
  9727   300001                     	org	3145729
  9728   300001  FF                 	db	255
  9729                           
  9730                           ;Config register CONFIG3L @ 0x300004
  9731                           ;	WDT Period Select bits
  9732                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9733                           ;	WDT operating mode
  9734                           ;	WDTE = OFF, WDT Disabled
  9735   300004                     	org	3145732
  9736   300004  9F                 	db	159
  9737                           
  9738                           ;Config register CONFIG3H @ 0x300005
  9739                           ;	unspecified, using default values
  9740                           ;	WDT Window Select bits
  9741                           ;	WDTCWS = 0x7, unprogrammed default
  9742                           ;	WDT input clock selector
  9743                           ;	WDTCCS = 0x7, unprogrammed default
  9744   300005                     	org	3145733
  9745   300005  FF                 	db	255
  9746                           tosu	equ	0xFFF
  9747                           tosh	equ	0xFFE
  9748                           tosl	equ	0xFFD
  9749                           stkptr	equ	0xFFC
  9750                           pclatu	equ	0xFFB
  9751                           pclath	equ	0xFFA
  9752                           pcl	equ	0xFF9
  9753                           tblptru	equ	0xFF8
  9754                           tblptrh	equ	0xFF7
  9755                           tblptrl	equ	0xFF6
  9756                           tablat	equ	0xFF5
  9757                           prodh	equ	0xFF4
  9758                           prodl	equ	0xFF3
  9759                           indf0	equ	0xFEF
  9760                           postinc0	equ	0xFEE
  9761                           postdec0	equ	0xFED
  9762                           preinc0	equ	0xFEC
  9763                           plusw0	equ	0xFEB
  9764                           fsr0h	equ	0xFEA
  9765                           fsr0l	equ	0xFE9
  9766                           wreg	equ	0xFE8
  9767                           indf1	equ	0xFE7
  9768                           postinc1	equ	0xFE6
  9769                           postdec1	equ	0xFE5
  9770                           preinc1	equ	0xFE4
  9771                           plusw1	equ	0xFE3
  9772                           fsr1h	equ	0xFE2
  9773                           fsr1l	equ	0xFE1
  9774                           bsr	equ	0xFE0
  9775                           indf2	equ	0xFDF
  9776                           postinc2	equ	0xFDE
  9777                           postdec2	equ	0xFDD
  9778                           preinc2	equ	0xFDC
  9779                           plusw2	equ	0xFDB
  9780                           fsr2h	equ	0xFDA
  9781                           fsr2l	equ	0xFD9
  9782                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        1
    BSS         204
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    152     160
    BANK1           256     97     234
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    S2244$buffer	PTR unsigned char  size(2) Largest target is 0

    S2244$source	PTR const unsigned char  size(2) Largest target is 0

    S34DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S34DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 25
		 -> RGB_to_HSV@senddata(BANK1[25]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_1(CODE[30]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> RGB_to_HSV@senddata(BANK1[25]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 30
		 -> STR_1(CODE[30]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 30
		 -> STR_1(CODE[30]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 30
		 -> STR_1(CODE[30]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_cardCheck->___flge
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->___flge
    _read_prec_or_width->___wmul
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flge->___flmul
    _sendStringSerial4->_sendCharSerial4
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _color_cardCheck->_RGB_to_HSV

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   88572
                    _color_cardCheck
                   _color_click_init
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_cardCheck                                     32    30      2   88275
                                            120 BANK0     32    30      2
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RGB_to_HSV                                         118    99     19   76873
                                             99 BANK0     21     2     19
                                              0 BANK1     97    97      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             34    15     19   36212
                                             67 BANK0     32    13     19
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3   35714
                                             63 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           12     9      3   35226
                                             52 BANK0     11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   5     3      2     947
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              53    47      6   32593
                                              0 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    2689
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    8542
                                             83 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _custom_floatmodulo                                  18    10      8   13868
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4105
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2870
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3568
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8    1558
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    3071
                                             33 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _color_cardCheck
     _RGB_to_HSV
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
       ___fleq
       ___flge
         ___flmul (ARG)
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
       ___flmul
       ___flsub
       _custom_floatmodulo
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _efgtoa
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
               _strcpy
             _fputc
             _read_prec_or_width
               ___wmul
     ___flge
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     61      EA       7       91.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhh         40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllhh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllhh     1E      0       0      46        0.0%
BITBIGSFRhlll       17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      47        0.0%
BITBIGSFRllllll      F      0       0      54        0.0%
BITBIGSFRhlhh        E      0       0      33        0.0%
BITBIGSFRllllll      9      0       0      53        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      51        0.0%
BITBIGSFRlllllh      5      0       0      50        0.0%
BITBIGSFRlhh         5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      49        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhllh        2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhlhl        1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      39        0.0%
BITBIGSFRlhll        1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     225      57        0.0%
DATA                 0      0     225       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 02:00:53 2024

               _color_read_Red 438C                   ___fldiv@aexp 003A                   ___fldiv@bexp 0039  
                 ___fldiv@sign 0032                _color_read_Blue 447C                             l92 4566  
                           l95 482E                             l98 43DA            ___wmul@multiplicand 0003  
             _color_read_Clear 442C               _color_read_Green 43DC                            l101 442A  
                          l111 3DB4                            l104 44CA                            l121 23EE  
                          l131 24E0                            l123 2448                            l107 447A  
                          l141 28A8                            l133 24F0                            l125 2458  
                          l135 254A                            l119 23DE                            l320 47C2  
                          l160 1856                            l401 4832                            l137 255A  
                          l410 4796                            l323 47E8                            l404 4846  
                          l148 2A22                            l332 4868                            l317 47C0  
                          l326 4872                            l166 185E                            l335 485E  
                          l329 487C                            l442 480E                            l338 4634  
                          l355 4850                            l701 42CE                            l712 3FBE  
                          l707 3F78                            l716 4766                            l739 3EBA  
                          l970 2C12                            l971 2C00                            l972 2BC6  
                          l987 2D2C                            l979 2EE2                            l996 2DFC  
                          l997 2DEA                            _pad 42D0                            wreg 0FE8  
                 ___flmul@aexp 004C                   ___flmul@bexp 004D                   ___flmul@sign 0047  
                 ___flmul@temp 0052                   ___flmul@prod 004E                   ___fltol@exp1 000A  
                         l1012 45F2                           l1100 3C9C                           l1111 3C34  
                         l1024 36A6                           l1104 3BD8                           l1120 4674  
                         l1026 3506                           l1035 354C                           l1211 4224  
                         l1060 330C                           l1037 35C4                           l1029 34CA  
                         l1038 35B2                           l1063 319E                           l1151 4334  
                         l1207 421C                           l1231 38D6                           l1056 2FA8  
                         l1304 46F2                           l1073 32CE                           l1065 3216  
                         l1066 3204                           l1162 2246                           l1147 42E6  
                         l3100 2A7A                           l1165 1BE6                           l3110 2AAA  
                         l3102 2A8A                           l1238 45AC                           l1255 3AE8  
                         l1167 1A2C                           l3200 2C80                           l3120 2AEA  
                         l3112 2AB8                           l3104 2A90                           l1248 40BC  
                         l1097 3B40                           l3210 2CC6                           l3202 2C8E  
                         l3130 2B24                           l3122 2AEC                           l3114 2ABA  
                         l3106 2AA2                           l1258 3A2C                           l1275 451A  
                         l1195 202E                           l3300 330E                           l3220 2D42  
                         l3212 2CFA                           l3204 2C90                           l3140 2B38  
                         l3132 2B28                           l3116 2ACA                           l3124 2AF4  
                         l3108 2AA4                           l4100 3C6C                           l2420 47A2  
                         l1269 438A                           l3310 334A                           l3302 331A  
                         l3230 2D7E                           l3222 2D52                           l3214 2CFC  
                         l3206 2C9A                           l3150 2B4C                           l3142 2B3C  
                         l3134 2B2C                           l3126 2B04                           l3118 2ADA  
                         l4102 3C7C                           l3070 40BE                           l2422 47A8  
                         l1287 4176                           l1295 46B4                           l3400 357C  
                         l3320 337A                           l3312 335A                           l3304 3328  
                         l3240 2DAA                           l3232 2D80                           l3216 2D0C  
                         l3208 2CA0                           l3160 2B60                           l3152 2B50  
                         l3144 2B40                           l3136 2B30                           l3128 2B16  
                         l4104 3C8A                           l3080 4136                           l3072 40CE  
                         l5000 3798                           l4120 486A                           l4200 44C2  
                         l2424 47AA                           l3410 35EE                           l3402 35AA  
                         l3330 33B0                           l3322 3380                           l3314 335C  
                         l3306 332A                           l3250 2DE2                           l3234 2D8E  
                         l3226 2D66                           l3242 2DAC                           l3218 2D1C  
                         l3170 2BBE                           l3154 2B54                           l3146 2B44  
                         l3138 2B34                           l3162 2B64                           l3090 2A40  
                         l4106 3C8C                           l1298 487E                           l3074 40DE  
                         l5010 3836                           l5002 37BC                           l4122 486E  
                         l4130 4864                           l2426 47AC                           l2418 4798  
                         l3420 3666                           l3412 3618                           l3340 33F0  
                         l3332 33C0                           l3324 338E                           l3308 333A  
                         l3316 3364                           l3500 307A                           l3260 2E60  
                         l3236 2D96                           l3228 2D70                           l3244 2DBA  
                         l3180 2BF4                           l3172 2BD4                           l3164 2B68  
                         l3156 2B58                           l3148 2B48                           l3092 2A50  
                         l3084 2A24                           l4060 4832                           l3076 40E8  
                         l5012 3844                           l5004 37E4                           l5020 38A2  
                         l5100 25E6                           l4140 4602                           l4132 4874  
                         l4124 4856                           l4204 442C                           l2428 47AE  
                         l4300 4556                           l3430 369C                           l3422 3682  
                         l3406 35D4                           l3414 361C                           l3342 3400  
                         l3350 3420                           l3334 33C2                           l3326 3390  
                         l3318 3374                           l3510 30DC                           l3502 308A  
                         l3270 2EA6                           l3254 2E0C                           l3262 2E62  
                         l3246 2DBE                           l3238 2D9A                           l3190 2C44  
                         l3182 2BFE                           l3174 2BE0                           l3166 2B92  
                         l3158 2B5C                           l3094 2A60                           l3086 2A30  
                         l4070 3B50                           l4150 3C9E                           l4062 4842  
                         l3078 4104                           l5110 270E                           l5102 2618  
                         l4142 460A                           l4134 4878                           l4126 485A  
                         l4206 4472                           l4310 4560                           l4302 4558  
                         l3424 3686                           l3416 3636                           l3408 35E0  
                         l3360 345E                           l3352 3430                           l3344 3408  
                         l3328 33A0                           l3336 33CA                           l3520 3184  
                         l3512 30F8                           l3504 30A4                           l3440 2EF0  
                         l3280 2ED0                           l3272 2EB4                           l3264 2E72  
                         l3256 2E18                           l3248 2DCC                           l3192 2C54  
                         l3184 2C20                           l3176 2BE4                           l3168 2BAE  
                         l3096 2A70                           l3088 2A3E                           l4080 3B8E  
                         l4072 3B66                           l4064 3AEC                           l4160 3DA4  
                         l4152 3CD0                           l3600 3F46                           l5008 380C  
                         l5024 38B0                           l5112 2766                           l5104 2670  
                         l5120 28A8                           l4056 47C2                           l4144 4630  
                         l4136 45F6                           l4128 4860                           l5200 1436  
                         l4312 4562                           l4304 455A                           l3426 3694  
                         l3418 364C                           l3370 34A6                           l3362 346E  
                         l3354 3430                           l3346 340C                           l3338 33DA  
                         l3530 31C0                           l3522 318E                           l3514 3122  
                         l3506 30B4                           l3450 2F30                           l3442 2EFE  
                         l3282 2ED2                           l3274 2EBA                           l3266 2E82  
                         l3258 2E26                           l3194 2C62                           l3186 2C30  
                         l3178 2BF2                           l3098 2A72                           l4090 3C16  
                         l4082 3BC0                           l4066 3AFC                           l3602 3F58  
                         l5018 3872                           l5042 4568                           l5130 2952  
                         l5122 28B8                           l5114 27C2                           l5106 26A4  
                         l4058 47D2                           l4146 4632                           l4138 45FA  
                         l5210 150C                           l5202 1468                           l4314 4564  
                         l4306 455C                           l3428 369A                           l3380 34F4  
                         l3372 34BA                           l3364 347E                           l3540 3232  
                         l3532 31CE                           l3524 319C                           l3516 3158  
                         l3508 30D0                           l3460 2F60                           l3452 2F36  
                         l3444 2F00                           l3276 2EBC                           l3268 2EA2  
                         l3196 2C70                           l3620 3DB6                           l4092 3C24  
                         l4084 3BC2                           l4076 3B7A                           l4068 3B0A  
                         l4156 3CE4                           l4180 477A                           l3604 3F66  
                         l3612 4730                           l5044 4570                           l5060 4664  
                         l5052 4636                           l5132 29B2                           l5124 28EC  
                         l5116 27F4                           l5108 26DC                           l5212 153E  
                         l5220 15E2                           l5204 149A                           l5140 0F12  
                         l4308 455E                           l3390 353C                           l3382 3504  
                         l3374 34C8                           l3366 348E                           l3358 3444  
                         l3550 329C                           l3542 3240                           l3534 31FC  
                         l3526 31AE                           l3518 3166                           l3470 2F98  
                         l3462 2F62                           l3454 2F46                           l3446 2F10  
                         l3438 2EE4                           l3278 2EC2                           l3198 2C7C  
                         l3630 3E0C                           l3622 3DCC                           l4094 3C42  
                         l4086 3BCE                           l4078 3B82                           l4158 3D34  
                         l4182 477E                           l3606 3FB6                           l3614 4746  
                         l3710 38D8                           l3702 4336                           l3294 47EA  
                         l5046 4582                           l5054 4644                           l5134 29E6  
                         l5126 2904                           l5118 284C                           l5070 22E6  
                         l5230 16DC                           l5222 1614                           l5214 1570  
                         l5206 14A8                           l5150 0FE4                           l5142 0F1C  
                         l3392 354A                           l3384 3516                           l3376 34D4  
                         l3368 3496                           l3560 32F2                           l3552 32B6  
                         l3544 326A                           l3528 31BC                           l3480 2FE8  
                         l3472 2FB8                           l3464 2F72                           l3456 2F4C  
                         l3448 2F20                           l3632 3E1C                           l4096 3C44  
                         l4088 3C0A                           l4176 4768                           l3608 3FBC  
                         l3616 4756                           l3712 38F8                           l3704 4344  
                         l3296 4806                           l5320 3894                           l5048 45A2  
                         l5056 464C                           l5128 2936                           l5080 23CA  
                         l5072 22FE                           l5064 2248                           l4192 43DC  
                         l5240 17B2                           l5232 170E                           l5224 1646  
                         l5216 15A2                           l5208 14DA                           l5160 10BA  
                         l5152 1016                           l5144 0F4E                           l5136 0E28  
                         l4184 4812                           l3386 352C                           l3394 355C  
                         l3378 34F2                           l3554 32D2                           l3562 32F8  
                         l3538 3226                           l3546 326E                           l3490 3038  
                         l3482 2FF2                           l3474 2FC8                           l3466 2F82  
                         l3458 2F52                           l3570 45BE                           l3642 3E46  
                         l3634 3E20                           l3626 3DE0                           l4098 3C48  
                         l4178 476C                           l3730 3AA0                           l3722 39E0  
                         l3714 394E                           l3706 4358                           l5058 4654  
                         l5090 24CC                           l5082 2402                           l5074 2332  
                         l5066 2288                           l4194 4422                           l4186 438C  
                         l5242 17E4                           l5226 1678                           l5234 171C  
                         l5218 15D4                           l5162 10EC                           l5170 1190  
                         l5154 1048                           l5146 0F80                           l5138 0EC0  
                         l4290 4544                           l4282 451C                           l3396 356A  
                         l3388 3532                           l3580 4292                           l3564 32FC  
                         l3556 32E2                           l3548 3288                           l3492 3044  
                         l3484 3008                           l3468 2F92                           l3660 3EAA  
                         l3652 3E6E                           l3644 3E50                           l3636 3E2E  
                         l3628 3E0A                           l3732 3AC8                           l3724 3A1C  
                         l3716 3962                           l5316 377A                           l5092 2504  
                         l5084 2434                           l5076 2366                           l5068 22DA  
                         l4188 43D2                           l5244 1816                           l5236 174E  
                         l5228 16AA                           l5180 1266                           l5172 11C2  
                         l5164 111E                           l5148 0FB2                           l5156 1056  
                         l4292 454E                           l4284 4520                           l5252 4848  
                         l3398 356E                           l3582 42A2                           l3574 4226  
                         l3558 32F0                           l3494 3052                           l3486 3014  
                         l3478 2FDC                           l3654 3E7A                           l3646 3E5A  
                         l3590 3EBC                           l3734 3AD8                           l3718 3970  
                         l3726 3A50                           l5318 3820                           l5094 2536  
                         l5086 2468                           l5078 2398                           l4198 447C  
                         l5246 1848                           l5238 1780                           l5190 1360  
                         l5182 1298                           l5174 11F4                           l5166 1150  
                         l5158 1088                           l4294 4550                           l4286 452A  
                         l5254 484C                           ?_pad 000F                           l3584 42C6  
                         l3576 4254                           l3496 305E                           l3488 302C  
                         l3568 45AE                           l3656 3E8A                           l3592 3EEA  
                         l3680 401E                           l3728 3A8C                           l4720 4694  
                         l4800 19BC                           l5096 256A                           l5088 249A  
                         l5184 12CA                           l5192 136E                           l5176 1226  
                         l5168 1182                           l5248 1856                           l4296 4552  
                         l4288 453A                           l3586 42CC                           l3578 4264  
                         l3498 306E                           l3658 3E9A                           l3594 3EFA  
                         l3690 4070                           l3682 4046                           l4714 4676  
                         l4730 4306                           l4722 42D0                           l4802 19C4  
                         l4810 19DC                           l5098 25D0                           l5194 13A0  
                         l5186 12FC                           l5178 1234                           l4298 4554  
                         l3596 3F28                           l3684 4052                           l3676 3FC0  
                         l4740 44E0                           l4716 4682                           l4732 4324  
                         l4724 42DE                           l4900 1F6A                           l4820 1A76  
                         l4812 19F6                           l5196 13D2                           l5188 132E  
                         l3598 3F38                           l3694 40B4                           l3678 3FE0  
                         l4742 44EC                           l4718 4690                           l4726 42F2  
                         l4734 46B6                           l4910 2004                           l4902 1F72  
                         l4830 1B6C                           l4822 1AB4                           l4750 1860  
                         l5198 1404                           l3688 405E                           l4744 44F0  
                         l4728 4302                           l4736 46BE                           l4920 2062  
                         l4912 2024                           l4904 1F78                           l4840 1BFE  
                         l4832 1B74                           l4824 1AE6                           l4816 1A3C  
                         l4760 18AC                           l4752 1866                           l4746 44FC  
                         l4738 44CC                           l4930 208A                           l4922 2068  
                         l4914 2040                           l4906 1F80                           l4850 1C30  
                         l4842 1C0A                           l4826 1B24                           l4818 1A42  
                         l4770 18EA                           l4762 18B6                           l4754 1876  
                         l4748 4500                           l4940 20BE                           l4924 2070  
                         l4916 204E                           l4932 2090                           l4908 1F8C  
                         l4860 1C78                           l4852 1C3E                           l4844 1C12  
                         l4828 1B38                           l4836 1BB4                           l4780 1932  
                         l4772 18F2                           l4764 18BE                           l4756 1884  
                         l3980 41CA                           l3972 4178                           l4950 2174  
                         l4942 2116                           l4934 20A2                           l4926 2080  
                         l4918 205E                           l4870 1D8C                           l4862 1C88  
                         l4854 1C56                           l4846 1C1A                           l4838 1BEE  
                         l4782 1938                           l4766 18CE                           l4774 18F6  
                         l4758 1888                           l3982 41EA                           l3974 4180  
                         l4960 21E4                           l4952 2190                           l4944 214A  
                         l4936 20B4                           l4928 2084                           l4880 1E2C  
                         l4864 1C9C                           l4872 1D92                           l4856 1C68  
                         l4848 1C1E                           l4784 1940                           l4776 191C  
                         l4792 197A                           l4768 18DE                           l3976 41A6  
                         l3984 41F2                           l4962 21FC                           l4954 2198  
                         l4946 2152                           l4938 20B8                           l4890 1F08  
                         l4882 1E5E                           l4874 1DB0                           l4866 1D00  
                         l4858 1C70                           l4794 19A0                           l4786 1954  
                         l4778 192E                           l3978 41AE                           l4964 220C  
                         l4956 21A6                           l4948 2156                           l4892 1F0E  
                         l4884 1E6E                           l4876 1DE4                           l4868 1D58  
                         l4796 19B2                           l4788 195E                           l4980 36EC  
                         l4972 36A8                           l4966 2222                           l4958 21D6  
                         l4894 1F42                           l4886 1E7E                           l4878 1E16  
                         l4798 19B6                           l4990 3750                           l4982 3712  
                         l4974 36D0                           l4968 222A                           l4896 1F56  
                         l4888 1EB2                           l4992 3756                           l4984 371A  
                         l4976 36D8                           l4898 1F5A                           l4994 375E  
                         l4986 372E                           l4978 36E6                           l4988 373A  
                         l4998 3766                           STR_1 0E01                           STR_2 0E1F  
                         STR_5 0E23                           u3000 2C70                           u3001 2C6C  
                         u3010 2C8E                           u3011 2C8A                           u3100 2DCC  
                         u3020 2CC6                           u3101 2DC8                           u3021 2CC2  
                         u3110 2DE2                           u3030 2D0C                           u3111 2DDE  
                         u3031 2D08                           u3200 2ED0                           u3120 2DF8  
                         u3040 2D42                           u4000 3AC8                   _BAUD4CONbits 0EE9  
                         u3201 2ECC                           u3121 2DF4                           u3041 2D3E  
                         u4001 3AC4                           u3130 2E0C                           u3050 2D52  
                         u3131 2E08                           u3051 2D4E                           u3300 34A6  
                         u3220 3328                           u3140 2E26                           u3060 2D7E  
                         u3301 34A2                           u3221 3324                           u3141 2E22  
                         u3061 2D7A                           u3310 34C8                           u3230 333A  
                         u3150 2E60                           u3070 2D8E                           u3311 34C4  
                         u3231 3336                           u3151 2E5C                           u3071 2D8A  
                         u3400 35D4                           u3320 34F2                           u3240 334A  
                         u3160 2E72                           u3080 2DAA                           u3401 35D0  
                         u3321 34EE                           u3241 3346                           u3161 2E6E  
                         u3081 2DA6                           u3410 35EE                           u3330 3516  
                         u3250 338E                           u3170 2E82                           u3090 2DBA  
                         _T2PR 0FBC                           u3411 35EA                           u3331 3512  
                         u3251 338A                           u3171 2E7E                           u3091 2DB6  
                         u3420 3636                           u3340 352C                           u3260 33A0  
                         u3500 2F82                           u3180 2EA2                           u3421 3632  
                         u3341 3528                           u3261 339C                           u3501 2F7E  
                         u3181 2E9E                           u3430 3666                           u3350 354A  
                         u3270 33B0                           u3510 2FB8                           u3190 2EB4  
                         u3431 3662                           u3351 3546                           u3271 33AC  
                         u3511 2FB4                           u3191 2EB0                           u3440 3694  
                         u3360 356A                           u3280 33F0                           u3600 3240  
                         u3520 2FC8                           u2800 4104                           u4400 47E8  
                         u6000 0FB2                           u3441 3690                           u3361 3566  
                         u3281 33EC                           u3601 323C                           u3521 2FC4  
                         u2801 4100                           u4401 47E4                           u6001 0FAE  
                         u3370 357C                           u3290 3430                           u3610 3288  
                         u3530 3142                           u3450 2EFE                           u4410 4842  
                         u2810 4136                           u6010 0FE4                           u3371 3578  
                         u3291 342C                           u3611 3284                           u3451 2EFA  
                         u4411 483E                           u2811 4132                           u6011 0FE0  
                         u3380 35AA                           u3620 32B6                           u3540 319C  
                         u3460 2F10                           u2900 2B24                           u2820 2A3E  
                         u4500 3C7C                           u4420 3AFC                           u3700 3F66  
                         u4340 41A6                           u6100 11C2                           u6020 1016  
                         u3381 35A6                           u3621 32B2                           u3541 3198  
                         u3461 2F0C                           u2901 2B20                           u2821 2A3A  
                         u4501 3C78                           u4421 3AF8                           u3701 3F62  
                         u4341 41A2                           u6101 11BE                           u6021 1012  
                         u3390 35C0                           u3630 32F0                           u3550 31BC  
                         u3470 2F20                           u2910 2B92                           u2830 2A50  
                         u4510 3C8A                           u4430 3B0A                           u3710 3FB6  
                         u4350 421C                           u6110 11F4                           u6030 1048  
                         u3391 35BC                           u3631 32EC                           u3551 31B8  
                         u3535 3138                           u3471 2F1C                           u2911 2B8E  
                         u2831 2A4C                           u4511 3C86                           u4431 3B06  
                         u3711 3FB2                           u4351 4218                           u6111 11F0  
                         u6031 1044                           u3640 4254                           u3560 31CE  
                         u3480 2F60                           u2920 2BAA                           u2840 2A60  
                         u4440 3B66                           u3720 4746                           u6200 13D2  
                         u6120 1226                           u6040 1088                           u3641 4250  
                         u3561 31CA                           u3481 2F5C                           u2921 2BA4  
                         u2841 2A5C                           u4441 3B62                           u3721 4742  
                         u6201 13CE                           u6121 1222                           u6041 1084  
                         u3650 4292                           u3570 31FC                           u3490 2F72  
                         u2930 2BAC                           u2850 2AA2                           u3730 3DCC  
                         u4450 3BBC                           u4530 461E                           u6210 1404  
                         u6130 1266                           u6050 10BA                           u3651 428E  
                         u3571 31F8                           u3491 2F6E                           u2851 2A9E  
                         u3731 3DC8                           u4451 3BB8                           u4531 4616  
                         u6211 1400                           u6131 1262                           u6051 10B6  
                         u3660 42C6                           u3580 3212                           u2940 2BD4  
                         u2860 2AB8                           u3740 3E00                           u4460 3C06  
                         u3820 4000                           u3900 4344                           u2780 40CE  
                         u5500 1884                           u6300 15D4                           u6220 1436  
                         u6140 1298                           u6060 10EC                           u3661 42C2  
                         u3581 320E                           u2941 2BD0                           u2861 2AB4  
                         u4461 3C02                           u3901 4340                           u2781 40CA  
                         u5501 1880                           u6301 15D0                           u6221 1432  
                         u6141 1294                           u6061 10E8                           u3590 3226  
                         u2950 2BF2                           u2870 2ACA                           u3750 3E2E  
                         u4470 3C24                           u4550 3CD0                           u3670 3EEA  
                         u3830 401E                           u3910 3920                           u2790 40DE  
                         u5510 18CE                           u4390 47D2                           u6310 1614  
                         u6230 1468                           u6150 12CA                           u6070 111E  
                         u3591 3222                           u2951 2BEE                           u2871 2AC6  
                         u3751 3E2A                           u4471 3C20                           u4551 3CCC  
                         u3671 3EE6                           u3831 401A                           u2791 40DA  
                         u5511 18CA                           u4391 47CE                           u6311 1610  
                         u6231 1464                           u6151 12C6                           u6071 111A  
                         u2960 2C12                           u2880 2ADA                           u3760 3E42  
                         u4480 3C34                           u4560 4796                           u3680 3F28  
                         u3840 4046                           u3920 394E                           u5600 1B24  
                         u5520 18DE                           u6400 17E4                           u6320 1646  
                         u6240 149A                           u6160 12FC                           u6080 1150  
                         u2961 2C0E                           u2881 2AD6                           u3761 3E3E  
                         u3745 3DF6                           u4481 3C30                           u4561 4792  
                         u3681 3F24                           u3841 4042                           u3825 3FF6  
                         u3921 394A                           u5601 1B20                           u5521 18DA  
                         u6401 17E0                           u6321 1642                           u6241 1496  
                         u6161 12F8                           u6081 114C                           u2970 2C20  
                         u2890 2B16                           u3770 3E6A                           u4490 3C42  
                         u3690 3F46                           u3850 4070                           u3930 3970  
                         u5450 46B4                           u5610 1BB0                           u5530 191C  
                         u6410 1816                           u6330 1678                           u6250 14DA  
                         u6170 132E                           u6090 1182                           u2971 2C1C  
                         u2891 2B12                           u3771 3E66                           u4491 3C3E  
                         u3691 3F42                           u3851 406C                           u3931 396C  
                         u3915 3916                           u5451 46B0                           u5611 1BAC  
                         u5531 1918                           u6411 1812                           u6331 1674  
                         u6251 14D6                           u6171 132A                           u6091 117E  
                         u2980 2C30                           u3780 3E8A                           u5460 42DE  
                         u5700 1E6E                           u5620 1BE6                           u5540 192E  
                         u4548 4620                           u6420 1848                           u6340 16AA  
                         u6260 150C                           u6180 1360                           u2981 2C2C  
                         u3781 3E86                           u5461 42DA                           u5701 1E6A  
                         u5621 1BE2                           u5541 192A                           u6421 1844  
                         u6341 16A6                           u6261 1508                           u6181 135C  
                         u2990 2C62                           u3790 3E9A                           u3870 40AA  
                         u3950 39DC                           u5470 4324                           u5710 1F08  
                         u5630 1BFE                           u5550 19A0                           u6350 16DC  
                         u6270 153E                           u6190 13A0                           u2991 2C5E  
                         u3791 3E96                           u3871 40A4                           u3951 39D8  
                         u5471 4320                           u5711 1F04                           u5631 1BFA  
                         u5551 199C                           u6351 16D8                           u6271 153A  
                         u6191 139C                           u3880 40AC                           u3960 3A00  
                         u5480 46F2                           u5800 21F8                           u5720 1F56  
                         u5640 1C30                           u5560 19B2                           u6360 170E  
                         u6280 1570                           u3865 4082                           u3945 3984  
                         u5481 46EE                           u5721 1F52                           u5641 1C2C  
                         u5561 19AE                           u6361 170A                           u6281 156C  
                         u3970 3A1C                           u3946 398E                           u5490 451A  
                         u5810 220C                           u5730 2004                           u5650 1C3E  
                         u5570 1A28                           u6370 174E                           u6290 15A2  
                         u3971 3A18                           u3947 399E                           u5491 4516  
                         u5811 2208                           u5731 2000                           u5651 1C3A  
                         u5571 1A24                           u6371 174A                           u6291 159E  
                         u3980 3A70                           u5740 2040                           u5660 1C68  
                         u5580 1AB4                           u5820 36D0                           u5900 24CC  
                         u6380 1780                           u3965 39F6                           u5741 203C  
                         u5661 1C64                           u5581 1AB0                           u5821 36CC  
                         u5901 24C8                           u6381 177C                           u6437 4530  
                         u3990 3A8C                           u5750 204E                           u5670 1DB0  
                         u5590 1AE6                           u5830 3712                           u5910 2536  
                         u6390 17B2                           u3991 3A88                           u5751 204A  
                         u5671 1DAC                           u5591 1AE2                           u5831 370E  
                         u5911 2532                           u6447 22F2                           u6391 17AE  
                         u5760 20A2                           u5680 1E16                           u5840 37B8  
                         u5920 25D0                           u3985 3A66                           u5761 209E  
                         u5681 1E12                           u5841 37B4                           u5921 25CC  
                         u5770 2174                           u5690 1E5E                           u5850 45A2  
                         u5930 2618                           u5771 2170                           u5691 1E5A  
                         u5851 459E                           u5931 2614                           u5780 2190  
                         u5940 270E                           u5860 2398                           u5781 218C  
                         u5941 270A                           u5861 2394                           u5790 21F6  
                         u5950 27F4                           u5870 23CA                           u5791 21F0  
                         u5951 27F0                           u5871 23C6                           u5960 28B8  
                         u5880 2434                           u5961 28B4                           u5881 2430  
                         u5970 2936                           u5890 249A                           u5971 2932  
                         u5891 2496                           u5980 0F4E                           u5981 0F4A  
                         u5990 0F80                           u5991 0F7C                           _dbuf 0139  
                         _labs 4336                           _main 4848                           _prec 00F8  
                         _temp 00FF                           pad@i 0015                           pad@p 0012  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                  ___fpclassifyf 3FC0  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
              ___fldiv@new_exp 0033         __end_of_color_read_Red 43DC                   ___param_bank 0000  
      __end_of_color_cardCheck 1860                          ??_pad 0014                  ___fltol@sign1 0009  
                        ?_labs 0001                __end_of___fladd 2EE4                          ?_main 0001  
              __end_of___fldiv 36A8                __end_of___flneg 4768                __end_of___flmul 330E  
              __end_of___flsub 45F4                __end_of___fltol 3EBC                    ?_RGB_to_HSV 00C3  
                 vfpfcnvrt@fmt 0095        __end_of_sendCharSerial4 4848     __end_of_I2C_2_Master_Start 4874  
   __end_of_I2C_2_Master_Write 4860                          _flags 00FA            read_prec_or_width@c 0009  
          read_prec_or_width@n 000A                          _fputc 40BE                          _fputs 4676  
                        labs@a 0001                          pad@fp 000F                          _width 0137  
                        _putch 487E                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 4676                 ?___fpclassifyf 0001        __end_of_color_read_Blue 44CC  
        _I2C_2_Master_RepStart 4874                ?_color_read_Red 0005                __initialization 46F4  
                 __end_of_labs 438C                   __end_of_main 4854                         ??_labs 0005  
                       ??_main 0060                  __activetblptr 0003     __end_of_read_prec_or_width 4226  
                       ?_fputc 0001                         ?_fputs 0009                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RD6PPS 0E70                         _RE4PPS 0E76                         _RG6PPS 0E88  
     __end_of_color_click_init 4568                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 3C9E                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 00A2  
                       ___flge 3EBC                         ___fleq 4226               ?_color_cardCheck 00D8  
                    ??___fladd 0009                         ___wmul 47EA                      ??___fldiv 002A  
                    ??___flneg 0005                      ??___flmul 0043                      ??___flsub 0022  
                    ??___fltol 0005                         _efgtoa 1860                         _floorf 38D8  
                       _memcpy 44CC           read_prec_or_width@ap 0008                         clear_0 470C  
                       clear_1 4718                         clear_2 4724                         _motorL 011D  
                       _motorR 0114                         isa$std 0001                         pad@buf 0010  
                       _strcpy 46B6                         fputc@c 0001                         fputs@c 000C  
                       fputs@i 000D                         fputs@s 0009                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 45AE  
                    ??_sprintf 0060                     ___flge@ff1 0054                     ___flge@ff2 0058  
              ??___fpclassifyf 0005                   ___xxtofl@arg 0016                   ___xxtofl@exp 0015  
                 ___xxtofl@val 000C                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
                   __accesstop 0060        __end_of__initialization 472A       __end_of_color_read_Clear 447C  
                   ___flneg@f1 0001       __end_of_color_read_Green 442C         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 4880                  __end_of_fputc 4178  
                __end_of_fputs 46B6                  __end_of_putch 4880                 _RGB_to_HSV$630 01CA  
               _RGB_to_HSV$626 01BA                 _RGB_to_HSV$627 01BE                 _RGB_to_HSV$629 01C6  
           RGB_to_HSV@deltaRGB 01D6                        ??_fputc 0004                        ??_fputs 000C  
                      ??_putch 0001                     __pbssBANK0 00F8                     __pbssBANK1 0100  
                   __pbssBANK2 0200             RGB_to_HSV@senddata 0189              _color_writetoaddr 4810  
                 _T2CLKCONbits 0FBF                        ?___flge 0054                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?___wmul 0001                        ?_efgtoa 0060  
                      ?_floorf 003B                        ?_memcpy 0001            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                   ??_RGB_to_HSV 00D6                      ?___xxtofl 000C  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 4830                    RGB_to_HSV@B 00CB                    RGB_to_HSV@C 00CF  
                  RGB_to_HSV@G 00C7                    RGB_to_HSV@H 00D3                    RGB_to_HSV@R 00C3  
                  RGB_to_HSV@S 00D4                    RGB_to_HSV@V 00D5                    RGB_to_HSV@b 01E6  
                  RGB_to_HSV@c 01A2                    RGB_to_HSV@g 01E2             _I2C_2_Master_Start 486A  
                  RGB_to_HSV@r 01DE             _I2C_2_Master_Write 4854                        __Hparam 0000  
           __end_of_RGB_to_HSV 2A24                        __Lparam 0000              color_read_Red@tmp 000A  
      sendStringSerial4@string 0002                        ___fladd 2A24                        ___fldiv 330E  
                      ___flneg 4730                        ___flmul 2EE4                        ___flsub 45AE  
                      ___fltol 3DB6            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 009F                   __psmallconst 0E00                        __pcinit 46F4  
                      __ramtop 0E00                        __ptext0 4848                        __ptext1 451C  
                      __ptext2 4810                        __ptext3 4798                        __ptext4 0E28  
                      __ptext5 438C                        __ptext6 43DC                        __ptext7 442C  
                      __ptext8 447C                        __ptext9 4854                      _T2CONbits 0FBD  
        read_prec_or_width@fmt 0007                     ??___xxtofl 0010                      _T2HLTbits 0FBE  
                      efgtoa@c 0065                        efgtoa@d 0073                        efgtoa@e 0077  
                      efgtoa@f 0061                        efgtoa@g 008A                        efgtoa@h 0081  
                      efgtoa@i 007F                        efgtoa@l 0085                        efgtoa@m 0075  
                      efgtoa@n 008E                        efgtoa@p 006A                        efgtoa@t 006C  
                      efgtoa@u 0090                        efgtoa@w 0079                  _RxBufWriteCnt 00FE  
                      _sprintf 4636           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 472A                        floorf@e 0049                        floorf@m 0045  
                      floorf@u 004B                        floorf@x 003B                        memcpy@d 0008  
                      memcpy@n 0005                        memcpy@s 000A                        fputc@fp 0003  
                      fputs@fp 000B              ?_color_click_init 0001             _read_prec_or_width 4178  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 38D8                     efgtoa@mode 0071  
                   efgtoa@sign 0089                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0099                     ??_vfprintf 0060                        strcpy@d 0005  
                    _PORTFbits 0F8E                    ___fladd@grs 0010                  ___xxtofl@sign 0014  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88           ??_read_prec_or_width 0009                    ___fldiv@grs 0035  
                  ___fldiv@rem 002E       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 0048                    _CCP1CONbits 0FAB              ?_color_read_Clear 0005  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 0F26                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
   __end_of_custom_floatmodulo 3DB6                 __end_of___flge 3FC0                 __end_of___fleq 42D0  
                  vfpfcnvrt@ap 0096                    vfpfcnvrt@cp 009E                    vfpfcnvrt@fp 0094  
               __end_of___wmul 4810                 __end_of_efgtoa 2248                 __end_of_floorf 3AEA  
    color_cardCheck@card_color 00EA                 __end_of_memcpy 451C                     floorf@F521 012F  
             RGB_to_HSV@H_temp 01D2                 __end_of_strcpy 46F4            color_read_Clear@tmp 000A  
          start_initialization 46F4                    __end_of_pad 4336                  _TxBufWriteCnt 00FC  
             RGB_to_HSV@c_norm 01A6               RGB_to_HSV@maxRGB 01DA               RGB_to_HSV@minRGB 01C2  
              _RGB_to_HSV$2734 01AA                _RGB_to_HSV$2735 01AE                _RGB_to_HSV$2736 01B2  
              _RGB_to_HSV$2737 01CE                _RGB_to_HSV$2738 01B6          __end_of___fpclassifyf 40BE  
          color_read_Green@tmp 000A                    vfprintf@fmt 00A0                       ??___flge 005C  
                     ??___fleq 0009                       ??___wmul 0005                       ??_efgtoa 0066  
          custom_floatmodulo@x 0054            custom_floatmodulo@y 0058                    __pdataBANK0 00FF  
                  _calibration 0126                       ??_floorf 003F                       ??_memcpy 0007  
                     ??_strcpy 0004                      ___fladd@a 0005                      ___fladd@b 0001  
                    ___fldiv@a 0026                      ___fldiv@b 0022                      ___flmul@a 003F  
                    ___flmul@b 003B                      ___flsub@a 001E                      ___flsub@b 001A  
                __pcstackBANK0 0060                  __pcstackBANK1 0189      custom_floatmodulo@intPart 0068  
                  _efgtoa$2369 006E                       ?___fladd 0001                       ?___fldiv 0022  
                     ?___flneg 0001                       ?___flmul 003B                       ?___flsub 001A  
                     ?___fltol 0001           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 47C2              _I2C_2_Master_Init 4798  
            _I2C_2_Master_Read 45F4              _I2C_2_Master_Stop 4860                   _RxBufReadCnt 00FD  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 00A3              ??_color_cardCheck 0060  
            _sendStringSerial4 4768            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80             ?_sendStringSerial4 0002                       _PIE4bits 0E2D  
                     _PIR4bits 0E37              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _vfpfcnvrt 36A8  
    __end_of_I2C_2_Master_Idle 47EA      __end_of_I2C_2_Master_Init 47C2      __end_of_I2C_2_Master_Read 4636  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 486A    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                   _TxBufReadCnt 00FB                     vfpfcnvrt@c 009D  
    __end_of_sendStringSerial4 4798  __end_of_I2C_2_Master_RepStart 487E             color_read_Blue@tmp 000A  
                     __Hrparam 0000                      memcpy@tmp 0007                     vfprintf@ap 00A1  
                     __Lrparam 0000                     vfprintf@fp 009F                     ?_vfpfcnvrt 0094  
                   _ANSELDbits 0EA7             ___fpclassifyf@F465 0133                     sprintf@fmt 00A5  
                     ___xxtofl 3AEA             _custom_floatmodulo 3C9E                       __ptext10 4860  
                     __ptext11 486A                       __ptext20 47EA                       __ptext12 4874  
                     __ptext21 1860                       __ptext13 45F4                       __ptext30 3FC0  
                     __ptext22 46B6                       __ptext14 47C2                       __ptext31 4730  
                     __ptext23 42D0                       __ptext15 2248                       __ptext40 2EE4  
                     __ptext32 3EBC                       __ptext24 4676                       __ptext16 4636  
                     __ptext41 4226                       __ptext33 4768                       __ptext25 40BE  
                     __ptext17 4568                       __ptext42 330E                       __ptext34 4830  
                     __ptext26 487E                       __ptext18 36A8                       __ptext35 3C9E  
                     __ptext27 44CC                       __ptext19 4178                       __ptext36 3AEA  
                     __ptext28 4336                       __ptext37 3DB6                       __ptext29 38D8  
                     __ptext38 45AE                       __ptext39 2A24    custom_floatmodulo@remainder 0064  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                     strcpy@dest 0001  
          ?_custom_floatmodulo 0054                       efgtoa@fp 0060                       efgtoa@ne 0068  
                     efgtoa@pp 0070                       efgtoa@ou 007B                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       _vfprintf 4568           ??_custom_floatmodulo 005C  
                     memcpy@d1 0001                       memcpy@s1 0003                      sprintf@ap 00B6  
                    strcpy@src 0003                    efgtoa@nmode 0072     custom_floatmodulo@quotient 0060  
                  ??_vfpfcnvrt 0097               _color_click_init 451C                _color_cardCheck 0E28  
                     sprintf@f 00B7                     _RGB_to_HSV 2248                       sprintf@s 00A3  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C               color_cardCheck@H 00EC  
             color_cardCheck@S 00F0               color_cardCheck@V 00F4               color_cardCheck@b 00E2  
             color_cardCheck@c 00E6               color_cardCheck@g 00DE               color_cardCheck@r 00DA  
                ___fladd@signs 000D                     _TX4STAbits 0EE8                _sendCharSerial4 4830  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F  
