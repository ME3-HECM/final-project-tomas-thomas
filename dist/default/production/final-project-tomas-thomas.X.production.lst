

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 08 10:07:00 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 21/07/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F67K40 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   00182A                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _temp
    65   00182A  07                 	db	7
    66   000000                     _TRISFbits	set	3974
    67   000000                     _LATDbits	set	3964
    68   000000                     _TRISDbits	set	3972
    69   000000                     _TRISGbits	set	3975
    70   000000                     _RC7PPS	set	3689
    71   000000                     _RE2PPS	set	3700
    72   000000                     _LATCbits	set	3963
    73   000000                     _LATEbits	set	3965
    74   000000                     _TRISCbits	set	3971
    75   000000                     _TRISEbits	set	3973
    76   000000                     _PORTFbits	set	3982
    77   000000                     _TRISHbits	set	3976
    78   000000                     _T2PR	set	4028
    79   000000                     _T2CONbits	set	4029
    80   000000                     _CCPR2H	set	4006
    81   000000                     _CCPR1H	set	4010
    82   000000                     _LATGbits	set	3967
    83   000000                     _LATHbits	set	3968
    84   000000                     _RE4PPS	set	3702
    85   000000                     _RG6PPS	set	3720
    86   000000                     _ANSELFbits	set	3764
    87   000000                     _CCPR4H	set	3873
    88   000000                     _CCPR3H	set	3877
    89   000000                     _T2CLKCONbits	set	4031
    90   000000                     _T2HLTbits	set	4030
    91   000000                     _CCP1CONbits	set	4011
    92   000000                     _CCPTMRS0bits	set	4013
    93   000000                     _CCP2CONbits	set	4007
    94   000000                     _CCP3CONbits	set	3878
    95   000000                     _CCP4CONbits	set	3874
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100   001806                     __pcinit:
   101                           	callstack 0
   102   001806                     start_initialization:
   103                           	callstack 0
   104   001806                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Initialize objects allocated to COMRAM (1 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109   001806  0E2A               	movlw	low __pidataCOMRAM
   110   001808  6EF6               	movwf	tblptrl,c
   111   00180A  0E18               	movlw	high __pidataCOMRAM
   112   00180C  6EF7               	movwf	tblptrh,c
   113   00180E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114   001810  6EF8               	movwf	tblptru,c
   115   001812  0009               	tblrd		*+	;fetch initializer
   116   001814  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   117                           
   118                           ; Clear objects allocated to COMRAM (22 bytes)
   119   001818  EE00  F029         	lfsr	0,__pbssCOMRAM
   120   00181C  0E16               	movlw	22
   121   00181E                     clear_0:
   122   00181E  6AEE               	clrf	postinc0,c
   123   001820  06E8               	decf	wreg,f,c
   124   001822  E1FD               	bnz	clear_0
   125   001824                     end_of_initialization:
   126                           	callstack 0
   127   001824                     __end_of__initialization:
   128                           	callstack 0
   129   001824  0100               	movlb	0
   130   001826  EF01  F007         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133   000029                     __pbssCOMRAM:
   134                           	callstack 0
   135   000029                     _off_period:
   136                           	callstack 0
   137   000029                     	ds	2
   138   00002B                     _on_period:
   139                           	callstack 0
   140   00002B                     	ds	2
   141   00002D                     _motorR:
   142                           	callstack 0
   143   00002D                     	ds	9
   144   000036                     _motorL:
   145                           	callstack 0
   146   000036                     	ds	9
   147                           
   148                           	psect	dataCOMRAM
   149   00003F                     __pdataCOMRAM:
   150                           	callstack 0
   151   00003F                     _temp:
   152                           	callstack 0
   153   00003F                     	ds	1
   154                           
   155                           	psect	cstackCOMRAM
   156   000001                     __pcstackCOMRAM:
   157                           	callstack 0
   158   000001                     ?___wmul:
   159                           	callstack 0
   160   000001                     ?___awdiv:
   161                           	callstack 0
   162   000001                     initDCmotorsPWM@PWMperiod:
   163                           	callstack 0
   164   000001                     delay_ms_function@milliseconds:
   165                           	callstack 0
   166   000001                     ___wmul@multiplier:
   167                           	callstack 0
   168   000001                     ___awdiv@dividend:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x0
   172   000001                     	ds	2
   173   000003                     ??_delay_ms_function:
   174   000003                     ___wmul@multiplicand:
   175                           	callstack 0
   176   000003                     ___awdiv@divisor:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x2
   180   000003                     	ds	2
   181   000005                     ___awdiv@counter:
   182                           	callstack 0
   183   000005                     ___wmul@product:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x4
   187   000005                     	ds	1
   188   000006                     ___awdiv@sign:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x5
   192   000006                     	ds	1
   193   000007                     ?___lwdiv:
   194                           	callstack 0
   195   000007                     ___awdiv@quotient:
   196                           	callstack 0
   197   000007                     ___lwdiv@dividend:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x6
   201   000007                     	ds	2
   202   000009                     ___lwdiv@divisor:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x8
   206   000009                     	ds	2
   207   00000B                     ___lwdiv@quotient:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0xA
   211   00000B                     	ds	2
   212   00000D                     ___lwdiv@counter:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xC
   216   00000D                     	ds	1
   217   00000E                     setMotorPWM@m:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xD
   221   00000E                     	ds	1
   222   00000F                     ??_setMotorPWM:
   223                           
   224                           ; 1 bytes @ 0xE
   225   00000F                     	ds	2
   226   000011                     setMotorPWM@posDuty:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x10
   230   000011                     	ds	1
   231   000012                     setMotorPWM@negDuty:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x11
   235   000012                     	ds	1
   236   000013                     forward@Distance_Calibration:
   237                           	callstack 0
   238   000013                     turnLEFT@mL:
   239                           	callstack 0
   240   000013                     turnRIGHT@mL:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x12
   244   000013                     	ds	1
   245   000014                     forward@mL:
   246                           	callstack 0
   247   000014                     turnLEFT@mR:
   248                           	callstack 0
   249   000014                     turnRIGHT@mR:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x13
   253   000014                     	ds	1
   254   000015                     ??_turnLEFT:
   255   000015                     ??_turnRIGHT:
   256   000015                     forward@mR:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x14
   260   000015                     	ds	1
   261   000016                     ??_forward:
   262                           
   263                           ; 1 bytes @ 0x15
   264   000016                     	ds	2
   265   000018                     turnLEFT@rotation_calibration:
   266                           	callstack 0
   267   000018                     turnRIGHT@rotation_calibration:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x17
   271   000018                     	ds	1
   272   000019                     forward@direction:
   273                           	callstack 0
   274   000019                     turnLEFT@i:
   275                           	callstack 0
   276   000019                     turnRIGHT@i:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x18
   280   000019                     	ds	1
   281   00001A                     forward@i:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x19
   285   00001A                     	ds	1
   286   00001B                     turnLEFT@j:
   287                           	callstack 0
   288   00001B                     turnRIGHT@j:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x1A
   292   00001B                     	ds	1
   293   00001C                     forward@j:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x1B
   297   00001C                     	ds	1
   298   00001D                     turnLEFT@max_power:
   299                           	callstack 0
   300   00001D                     turnRIGHT@max_power:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x1C
   304   00001D                     	ds	1
   305   00001E                     forward@max_power:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x1D
   309   00001E                     	ds	1
   310   00001F                     turnLEFT@delay_time:
   311                           	callstack 0
   312   00001F                     turnRIGHT@delay_time:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x1E
   316   00001F                     	ds	1
   317   000020                     forward@delay_time:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x1F
   321   000020                     	ds	2
   322   000022                     ??_main:
   323                           
   324                           ; 1 bytes @ 0x21
   325   000022                     	ds	2
   326   000024                     main@i:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x23
   330   000024                     	ds	2
   331   000026                     main@j:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x25
   335   000026                     	ds	2
   336   000028                     main@Turn_Calibration:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x27
   340   000028                     	ds	1
   341                           
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 18 in file "../lab-6-motors-and-pwm-tomas-thomas.X/main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  j               2   37[COMRAM] int 
   352 ;;  i               2   35[COMRAM] int 
   353 ;;  PWMperiod       2    0        unsigned int 
   354 ;;  Turn_Calibra    1   39[COMRAM] unsigned char 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   365 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   367 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   368 ;;Total ram usage:        7 bytes
   369 ;; Hardware stack levels required when called: 3
   370 ;; This function calls:
   371 ;;		_forward
   372 ;;		_initDCmotorsPWM
   373 ;;		_turnLEFT
   374 ;;		_turnRIGHT
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text0
   381   000E02                     __ptext0:
   382                           	callstack 0
   383   000E02                     _main:
   384                           	callstack 28
   385   000E02                     
   386                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 20:     initDCmotorsPWM(PWMperiod);
   387   000E02  0E00               	movlw	0
   388   000E04  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   389   000E06  0E63               	movlw	99
   390   000E08  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   391   000E0A  EC55  F00B         	call	_initDCmotorsPWM	;wreg free
   392   000E0E                     
   393                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 24:     motorL.power=0;
   394   000E0E  0E00               	movlw	0
   395   000E10  6E36               	movwf	_motorL^0,c
   396   000E12                     
   397                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 25:     motorL.direction=1;
   398   000E12  0E01               	movlw	1
   399   000E14  6E37               	movwf	(_motorL+1)^0,c
   400   000E16                     
   401                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 26:     motorL.brakemode=1;
   402   000E16  0E01               	movlw	1
   403   000E18  6E38               	movwf	(_motorL+2)^0,c
   404   000E1A                     
   405                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 27:     motorL.posDutyHighByte=(unsigned
      +                           char *)(&CCPR1H);
   406   000E1A  0EAA               	movlw	170
   407   000E1C  6E3B               	movwf	(_motorL+5)^0,c
   408   000E1E  0E0F               	movlw	15
   409   000E20  6E3C               	movwf	(_motorL+6)^0,c
   410   000E22                     
   411                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 28:     motorL.negDutyHighByte=(unsigned
      +                           char *)(&CCPR2H);
   412   000E22  0EA6               	movlw	166
   413   000E24  6E3D               	movwf	(_motorL+7)^0,c
   414   000E26  0E0F               	movlw	15
   415   000E28  6E3E               	movwf	(_motorL+8)^0,c
   416   000E2A                     
   417                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 29:     motorL.PWMperiod=PWMperiod;
   418   000E2A  0E00               	movlw	0
   419   000E2C  6E3A               	movwf	(_motorL+4)^0,c
   420   000E2E  0E63               	movlw	99
   421   000E30  6E39               	movwf	(_motorL+3)^0,c
   422   000E32                     
   423                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 31:     motorR.power=0;
   424   000E32  0E00               	movlw	0
   425   000E34  6E2D               	movwf	_motorR^0,c
   426   000E36                     
   427                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 32:     motorR.direction=1;
   428   000E36  0E01               	movlw	1
   429   000E38  6E2E               	movwf	(_motorR+1)^0,c
   430   000E3A                     
   431                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 33:     motorR.brakemode=1;
   432   000E3A  0E01               	movlw	1
   433   000E3C  6E2F               	movwf	(_motorR+2)^0,c
   434   000E3E                     
   435                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 34:     motorR.posDutyHighByte=(unsigned
      +                           char *)(&CCPR3H);
   436   000E3E  0E25               	movlw	37
   437   000E40  6E32               	movwf	(_motorR+5)^0,c
   438   000E42  0E0F               	movlw	15
   439   000E44  6E33               	movwf	(_motorR+6)^0,c
   440   000E46                     
   441                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 35:     motorR.negDutyHighByte=(unsigned
      +                           char *)(&CCPR4H);
   442   000E46  0E21               	movlw	33
   443   000E48  6E34               	movwf	(_motorR+7)^0,c
   444   000E4A  0E0F               	movlw	15
   445   000E4C  6E35               	movwf	(_motorR+8)^0,c
   446   000E4E                     
   447                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 36:     motorR.PWMperiod=PWMperiod;
   448   000E4E  0E00               	movlw	0
   449   000E50  6E31               	movwf	(_motorR+4)^0,c
   450   000E52  0E63               	movlw	99
   451   000E54  6E30               	movwf	(_motorR+3)^0,c
   452   000E56                     
   453                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 41:     TRISDbits.TRISD7 = 0;
   454   000E56  9E84               	bcf	132,7,c	;volatile
   455   000E58                     
   456                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 42:     LATDbits.LATD7 = 0;
   457   000E58  9E7C               	bcf	124,7,c	;volatile
   458   000E5A                     
   459                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 44:     TRISHbits.TRISH3 = 0;
   460   000E5A  9688               	bcf	136,3,c	;volatile
   461   000E5C                     
   462                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 45:     LATHbits.LATH3 = 0;
   463   000E5C  9680               	bcf	128,3,c	;volatile
   464   000E5E                     
   465                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 48:     TRISFbits.TRISF2=1;
   466   000E5E  8486               	bsf	134,2,c	;volatile
   467   000E60                     
   468                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 49:     ANSELFbits.ANSELF2=0;
   469   000E60  010E               	movlb	14	; () banked
   470   000E62  95B4               	bcf	180,2,b	;volatile
   471   000E64                     
   472                           ; BSR set to: 14
   473                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 51:     TRISFbits.TRISF3=1;
   474   000E64  8686               	bsf	134,3,c	;volatile
   475   000E66                     
   476                           ; BSR set to: 14
   477                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 52:     ANSELFbits.ANSELF3=0;
   478   000E66  97B4               	bcf	180,3,b	;volatile
   479   000E68                     
   480                           ; BSR set to: 14
   481                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 55:     char Turn_Calibration = 74;
   482   000E68  0E4A               	movlw	74
   483   000E6A  6E28               	movwf	main@Turn_Calibration^0,c
   484   000E6C                     l1655:
   485                           
   486                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 68:         if(!PORTFbits.RF2){
   487   000E6C  B48E               	btfsc	142,2,c	;volatile
   488   000E6E  EF3B  F007         	goto	u771
   489   000E72  EF3D  F007         	goto	u770
   490   000E76                     u771:
   491   000E76  EF4F  F007         	goto	l180
   492   000E7A                     u770:
   493   000E7A                     
   494                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 69:             LATHbits.LATH3 = 1;
   495   000E7A  8680               	bsf	128,3,c	;volatile
   496                           
   497                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 70:             LATDbits.LATD7 = 1;
   498   000E7C  8E7C               	bsf	124,7,c	;volatile
   499   000E7E                     
   500                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 71:             _delay((unsigned long)((
      +                          1000)*(64000000/4000.0)));
   501   000E7E  0E52               	movlw	82
   502   000E80  6E23               	movwf	(??_main+1)^0,c
   503   000E82  0E2B               	movlw	43
   504   000E84  6E22               	movwf	??_main^0,c
   505   000E86  0E00               	movlw	0
   506   000E88                     u817:
   507   000E88  2EE8               	decfsz	wreg,f,c
   508   000E8A  D7FE               	bra	u817
   509   000E8C  2E22               	decfsz	??_main^0,f,c
   510   000E8E  D7FC               	bra	u817
   511   000E90  2E23               	decfsz	(??_main+1)^0,f,c
   512   000E92  D7FA               	bra	u817
   513   000E94  D000               	nop2	
   514   000E96                     
   515                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 72:             LATHbits.LATH3 = 0;
   516   000E96  9680               	bcf	128,3,c	;volatile
   517   000E98                     
   518                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 73:             LATDbits.LATD7 = 0;
   519   000E98  9E7C               	bcf	124,7,c	;volatile
   520                           
   521                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 74:             break;
   522   000E9A  EF66  F007         	goto	l1673
   523   000E9E                     l180:
   524                           
   525                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 76:         if(!PORTFbits.RF3){
   526   000E9E  B68E               	btfsc	142,3,c	;volatile
   527   000EA0  EF54  F007         	goto	u781
   528   000EA4  EF56  F007         	goto	u780
   529   000EA8                     u781:
   530   000EA8  EF36  F007         	goto	l1655
   531   000EAC                     u780:
   532   000EAC                     
   533                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 77:             Turn_Calibration--;
   534   000EAC  0628               	decf	main@Turn_Calibration^0,f,c
   535   000EAE                     
   536                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 78:             LATHbits.LATH3 = 1;
   537   000EAE  8680               	bsf	128,3,c	;volatile
   538   000EB0                     
   539                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 79:             _delay((unsigned long)((
      +                          300)*(64000000/4000.0)));
   540   000EB0  0E19               	movlw	25
   541   000EB2  6E23               	movwf	(??_main+1)^0,c
   542   000EB4  0E5A               	movlw	90
   543   000EB6  6E22               	movwf	??_main^0,c
   544   000EB8  0EB2               	movlw	178
   545   000EBA                     u827:
   546   000EBA  2EE8               	decfsz	wreg,f,c
   547   000EBC  D7FE               	bra	u827
   548   000EBE  2E22               	decfsz	??_main^0,f,c
   549   000EC0  D7FC               	bra	u827
   550   000EC2  2E23               	decfsz	(??_main+1)^0,f,c
   551   000EC4  D7FA               	bra	u827
   552   000EC6                     
   553                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 80:             LATHbits.LATH3 = 0;
   554   000EC6  9680               	bcf	128,3,c	;volatile
   555   000EC8  EF36  F007         	goto	l1655
   556   000ECC                     l1673:
   557                           
   558                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 94: for(int i = 0; i<4; i++){
   559   000ECC  0E00               	movlw	0
   560   000ECE  6E25               	movwf	(main@i+1)^0,c
   561   000ED0  0E00               	movlw	0
   562   000ED2  6E24               	movwf	main@i^0,c
   563   000ED4                     l1679:
   564                           
   565                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 95: forward(1, 100, &motorL, &motorR);
   566   000ED4  0E64               	movlw	100
   567   000ED6  6E13               	movwf	forward@Distance_Calibration^0,c
   568   000ED8  0E36               	movlw	low _motorL
   569   000EDA  6E14               	movwf	forward@mL^0,c
   570   000EDC  0E2D               	movlw	low _motorR
   571   000EDE  6E15               	movwf	forward@mR^0,c
   572   000EE0  0E01               	movlw	1
   573   000EE2  ECF5  F007         	call	_forward
   574   000EE6                     
   575                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 96: _delay((unsigned long)((1000)*(64000
      +                          000/4000.0)));
   576   000EE6  0E52               	movlw	82
   577   000EE8  6E23               	movwf	(??_main+1)^0,c
   578   000EEA  0E2B               	movlw	43
   579   000EEC  6E22               	movwf	??_main^0,c
   580   000EEE  0E00               	movlw	0
   581   000EF0                     u837:
   582   000EF0  2EE8               	decfsz	wreg,f,c
   583   000EF2  D7FE               	bra	u837
   584   000EF4  2E22               	decfsz	??_main^0,f,c
   585   000EF6  D7FC               	bra	u837
   586   000EF8  2E23               	decfsz	(??_main+1)^0,f,c
   587   000EFA  D7FA               	bra	u837
   588   000EFC  D000               	nop2	
   589   000EFE                     
   590                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 97: turnLEFT(Turn_Calibration, &motorL, 
      +                          &motorR);
   591   000EFE  0E36               	movlw	low _motorL
   592   000F00  6E13               	movwf	turnLEFT@mL^0,c
   593   000F02  0E2D               	movlw	low _motorR
   594   000F04  6E14               	movwf	turnLEFT@mR^0,c
   595   000F06  5028               	movf	main@Turn_Calibration^0,w,c
   596   000F08  EC8A  F009         	call	_turnLEFT
   597                           
   598                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 98: _delay((unsigned long)((1000)*(64000
      +                          000/4000.0)));
   599   000F0C  0E52               	movlw	82
   600   000F0E  6E23               	movwf	(??_main+1)^0,c
   601   000F10  0E2B               	movlw	43
   602   000F12  6E22               	movwf	??_main^0,c
   603   000F14  0E00               	movlw	0
   604   000F16                     u847:
   605   000F16  2EE8               	decfsz	wreg,f,c
   606   000F18  D7FE               	bra	u847
   607   000F1A  2E22               	decfsz	??_main^0,f,c
   608   000F1C  D7FC               	bra	u847
   609   000F1E  2E23               	decfsz	(??_main+1)^0,f,c
   610   000F20  D7FA               	bra	u847
   611   000F22  D000               	nop2	
   612   000F24                     
   613                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 99: }
   614   000F24  4A24               	infsnz	main@i^0,f,c
   615   000F26  2A25               	incf	(main@i+1)^0,f,c
   616   000F28  BE25               	btfsc	(main@i+1)^0,7,c
   617   000F2A  EFA0  F007         	goto	u791
   618   000F2E  5025               	movf	(main@i+1)^0,w,c
   619   000F30  E109               	bnz	u790
   620   000F32  0E04               	movlw	4
   621   000F34  5C24               	subwf	main@i^0,w,c
   622   000F36  A0D8               	btfss	status,0,c
   623   000F38  EFA0  F007         	goto	u791
   624   000F3C  EFA2  F007         	goto	u790
   625   000F40                     u791:
   626   000F40  EF6A  F007         	goto	l1679
   627   000F44                     u790:
   628   000F44                     
   629                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 101: turnLEFT(Turn_Calibration, &motorL,
      +                           &motorR);
   630   000F44  0E36               	movlw	low _motorL
   631   000F46  6E13               	movwf	turnLEFT@mL^0,c
   632   000F48  0E2D               	movlw	low _motorR
   633   000F4A  6E14               	movwf	turnLEFT@mR^0,c
   634   000F4C  5028               	movf	main@Turn_Calibration^0,w,c
   635   000F4E  EC8A  F009         	call	_turnLEFT
   636   000F52                     
   637                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 102: _delay((unsigned long)((1000)*(6400
      +                          0000/4000.0)));
   638   000F52  0E52               	movlw	82
   639   000F54  6E23               	movwf	(??_main+1)^0,c
   640   000F56  0E2B               	movlw	43
   641   000F58  6E22               	movwf	??_main^0,c
   642   000F5A  0E00               	movlw	0
   643   000F5C                     u857:
   644   000F5C  2EE8               	decfsz	wreg,f,c
   645   000F5E  D7FE               	bra	u857
   646   000F60  2E22               	decfsz	??_main^0,f,c
   647   000F62  D7FC               	bra	u857
   648   000F64  2E23               	decfsz	(??_main+1)^0,f,c
   649   000F66  D7FA               	bra	u857
   650   000F68  D000               	nop2	
   651   000F6A                     
   652                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 105: for(int j = 0; j<4; j++){
   653   000F6A  0E00               	movlw	0
   654   000F6C  6E27               	movwf	(main@j+1)^0,c
   655   000F6E  0E00               	movlw	0
   656   000F70  6E26               	movwf	main@j^0,c
   657   000F72                     l1697:
   658                           
   659                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 106: forward(1, 100, &motorL, &motorR);
   660   000F72  0E64               	movlw	100
   661   000F74  6E13               	movwf	forward@Distance_Calibration^0,c
   662   000F76  0E36               	movlw	low _motorL
   663   000F78  6E14               	movwf	forward@mL^0,c
   664   000F7A  0E2D               	movlw	low _motorR
   665   000F7C  6E15               	movwf	forward@mR^0,c
   666   000F7E  0E01               	movlw	1
   667   000F80  ECF5  F007         	call	_forward
   668   000F84                     
   669                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 107: _delay((unsigned long)((1000)*(6400
      +                          0000/4000.0)));
   670   000F84  0E52               	movlw	82
   671   000F86  6E23               	movwf	(??_main+1)^0,c
   672   000F88  0E2B               	movlw	43
   673   000F8A  6E22               	movwf	??_main^0,c
   674   000F8C  0E00               	movlw	0
   675   000F8E                     u867:
   676   000F8E  2EE8               	decfsz	wreg,f,c
   677   000F90  D7FE               	bra	u867
   678   000F92  2E22               	decfsz	??_main^0,f,c
   679   000F94  D7FC               	bra	u867
   680   000F96  2E23               	decfsz	(??_main+1)^0,f,c
   681   000F98  D7FA               	bra	u867
   682   000F9A  D000               	nop2	
   683   000F9C                     
   684                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 108: turnRIGHT(85, &motorL, &motorR);
   685   000F9C  0E36               	movlw	low _motorL
   686   000F9E  6E13               	movwf	turnRIGHT@mL^0,c
   687   000FA0  0E2D               	movlw	low _motorR
   688   000FA2  6E14               	movwf	turnRIGHT@mR^0,c
   689   000FA4  0E55               	movlw	85
   690   000FA6  ECCB  F008         	call	_turnRIGHT
   691                           
   692                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 109: _delay((unsigned long)((1000)*(6400
      +                          0000/4000.0)));
   693   000FAA  0E52               	movlw	82
   694   000FAC  6E23               	movwf	(??_main+1)^0,c
   695   000FAE  0E2B               	movlw	43
   696   000FB0  6E22               	movwf	??_main^0,c
   697   000FB2  0E00               	movlw	0
   698   000FB4                     u877:
   699   000FB4  2EE8               	decfsz	wreg,f,c
   700   000FB6  D7FE               	bra	u877
   701   000FB8  2E22               	decfsz	??_main^0,f,c
   702   000FBA  D7FC               	bra	u877
   703   000FBC  2E23               	decfsz	(??_main+1)^0,f,c
   704   000FBE  D7FA               	bra	u877
   705   000FC0  D000               	nop2	
   706   000FC2                     
   707                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 110: }
   708   000FC2  4A26               	infsnz	main@j^0,f,c
   709   000FC4  2A27               	incf	(main@j+1)^0,f,c
   710   000FC6  BE27               	btfsc	(main@j+1)^0,7,c
   711   000FC8  EFEF  F007         	goto	u801
   712   000FCC  5027               	movf	(main@j+1)^0,w,c
   713   000FCE  E109               	bnz	u800
   714   000FD0  0E04               	movlw	4
   715   000FD2  5C26               	subwf	main@j^0,w,c
   716   000FD4  A0D8               	btfss	status,0,c
   717   000FD6  EFEF  F007         	goto	u801
   718   000FDA  EFF1  F007         	goto	u800
   719   000FDE                     u801:
   720   000FDE  EFB9  F007         	goto	l1697
   721   000FE2                     u800:
   722   000FE2  EF36  F007         	goto	l1655
   723   000FE6  EF00  F000         	goto	start
   724   000FEA                     __end_of_main:
   725                           	callstack 0
   726                           
   727 ;; *************** function _turnRIGHT *****************
   728 ;; Defined at:
   729 ;;		line 208 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  rotation_cal    1    wreg     unsigned char 
   732 ;;  mL              1   18[COMRAM] PTR struct DC_motor
   733 ;;		 -> motorL(9), 
   734 ;;  mR              1   19[COMRAM] PTR struct DC_motor
   735 ;;		 -> motorR(9), 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  rotation_cal    1   23[COMRAM] unsigned char 
   738 ;;  j               2   26[COMRAM] int 
   739 ;;  i               2   24[COMRAM] int 
   740 ;;  delay_time      2   30[COMRAM] int 
   741 ;;  max_power       2   28[COMRAM] int 
   742 ;;  acceleration    2    0        int 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;Total ram usage:       14 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; Hardware stack levels required when called: 2
   759 ;; This function calls:
   760 ;;		___awdiv
   761 ;;		_delay_ms_function
   762 ;;		_setMotorPWM
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text1
   769   001196                     __ptext1:
   770                           	callstack 0
   771   001196                     _turnRIGHT:
   772                           	callstack 28
   773                           
   774                           ;incstack = 0
   775                           ;turnRIGHT@rotation_calibration stored from wreg
   776   001196  6E18               	movwf	turnRIGHT@rotation_calibration^0,c
   777   001198                     
   778                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 209:     mL->direction = 1;
   779   001198  5013               	movf	turnRIGHT@mL^0,w,c
   780   00119A  6ED9               	movwf	fsr2l,c
   781   00119C  6ADA               	clrf	fsr2h,c
   782   00119E  0E01               	movlw	1
   783   0011A0  26D9               	addwf	fsr2l,f,c
   784   0011A2  0E01               	movlw	1
   785   0011A4  6EDF               	movwf	indf2,c
   786                           
   787                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 210:     mR->direction = 0;
   788   0011A6  5014               	movf	turnRIGHT@mR^0,w,c
   789   0011A8  6ED9               	movwf	fsr2l,c
   790   0011AA  6ADA               	clrf	fsr2h,c
   791   0011AC  0E01               	movlw	1
   792   0011AE  26D9               	addwf	fsr2l,f,c
   793   0011B0  6ADF               	clrf	indf2,c
   794   0011B2                     
   795                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 212:    int max_power = 20;
   796   0011B2  0E00               	movlw	0
   797   0011B4  6E1E               	movwf	(turnRIGHT@max_power+1)^0,c
   798   0011B6  0E14               	movlw	20
   799   0011B8  6E1D               	movwf	turnRIGHT@max_power^0,c
   800   0011BA                     
   801                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 214:     int delay_time = accelerati
      +                          on_time/max_power;
   802   0011BA  0E00               	movlw	0
   803   0011BC  6E02               	movwf	(___awdiv@dividend+1)^0,c
   804   0011BE  0E64               	movlw	100
   805   0011C0  6E01               	movwf	___awdiv@dividend^0,c
   806   0011C2  0E00               	movlw	0
   807   0011C4  6E04               	movwf	(___awdiv@divisor+1)^0,c
   808   0011C6  0E14               	movlw	20
   809   0011C8  6E03               	movwf	___awdiv@divisor^0,c
   810   0011CA  ECF3  F00A         	call	___awdiv	;wreg free
   811   0011CE  C001  F01F         	movff	?___awdiv,turnRIGHT@delay_time
   812   0011D2  C002  F020         	movff	?___awdiv+1,turnRIGHT@delay_time+1
   813   0011D6                     
   814                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 217:     for(int i=0; i< max_power; 
      +                          i++){
   815   0011D6  0E00               	movlw	0
   816   0011D8  6E1A               	movwf	(turnRIGHT@i+1)^0,c
   817   0011DA  0E00               	movlw	0
   818   0011DC  6E19               	movwf	turnRIGHT@i^0,c
   819   0011DE  EF15  F009         	goto	l1543
   820   0011E2                     l1533:
   821                           
   822                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 218:         mL->power = mL->power +
      +                           1;
   823   0011E2  5013               	movf	turnRIGHT@mL^0,w,c
   824   0011E4  6ED9               	movwf	fsr2l,c
   825   0011E6  6ADA               	clrf	fsr2h,c
   826   0011E8  5013               	movf	turnRIGHT@mL^0,w,c
   827   0011EA  6EE1               	movwf	fsr1l,c
   828   0011EC  6AE2               	clrf	fsr1h,c
   829   0011EE  50E7               	movf	indf1,w,c
   830   0011F0  6E15               	movwf	??_turnRIGHT^0,c
   831   0011F2  2815               	incf	??_turnRIGHT^0,w,c
   832   0011F4  6EDF               	movwf	indf2,c
   833                           
   834                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 219:         mR->power = mR->power +
      +                           1 ;
   835   0011F6  5014               	movf	turnRIGHT@mR^0,w,c
   836   0011F8  6ED9               	movwf	fsr2l,c
   837   0011FA  6ADA               	clrf	fsr2h,c
   838   0011FC  5014               	movf	turnRIGHT@mR^0,w,c
   839   0011FE  6EE1               	movwf	fsr1l,c
   840   001200  6AE2               	clrf	fsr1h,c
   841   001202  50E7               	movf	indf1,w,c
   842   001204  6E15               	movwf	??_turnRIGHT^0,c
   843   001206  2815               	incf	??_turnRIGHT^0,w,c
   844   001208  6EDF               	movwf	indf2,c
   845   00120A                     
   846                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 220:         setMotorPWM(mR);
   847   00120A  C014  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
   848   00120E  EC49  F00A         	call	_setMotorPWM	;wreg free
   849   001212                     
   850                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 221:         setMotorPWM(mL);
   851   001212  C013  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
   852   001216  EC49  F00A         	call	_setMotorPWM	;wreg free
   853   00121A                     
   854                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 222:         delay_ms_function(delay
      +                          _time);
   855   00121A  C01F  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
   856   00121E  C020  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
   857   001222  ECD9  F00B         	call	_delay_ms_function	;wreg free
   858   001226                     
   859                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 223:     }
   860   001226  4A19               	infsnz	turnRIGHT@i^0,f,c
   861   001228  2A1A               	incf	(turnRIGHT@i+1)^0,f,c
   862   00122A                     l1543:
   863   00122A  501D               	movf	turnRIGHT@max_power^0,w,c
   864   00122C  5C19               	subwf	turnRIGHT@i^0,w,c
   865   00122E  501A               	movf	(turnRIGHT@i+1)^0,w,c
   866   001230  0A80               	xorlw	128
   867   001232  6E15               	movwf	??_turnRIGHT^0,c
   868   001234  501E               	movf	(turnRIGHT@max_power+1)^0,w,c
   869   001236  0A80               	xorlw	128
   870   001238  5815               	subwfb	??_turnRIGHT^0,w,c
   871   00123A  A0D8               	btfss	status,0,c
   872   00123C  EF22  F009         	goto	u661
   873   001240  EF24  F009         	goto	u660
   874   001244                     u661:
   875   001244  EFF1  F008         	goto	l1533
   876   001248                     u660:
   877   001248                     
   878                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 226:     for(int j=0; j<rotation_cal
      +                          ibration; j++){
   879   001248  0E00               	movlw	0
   880   00124A  6E1C               	movwf	(turnRIGHT@j+1)^0,c
   881   00124C  0E00               	movlw	0
   882   00124E  6E1B               	movwf	turnRIGHT@j^0,c
   883   001250  EF33  F009         	goto	l118
   884   001254                     l1547:
   885                           
   886                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 227:         _delay((unsigned long)(
      +                          (10)*(64000000/4000.0)));
   887   001254  0ED0               	movlw	208
   888   001256  6E15               	movwf	??_turnRIGHT^0,c
   889   001258  0ECA               	movlw	202
   890   00125A                     u887:
   891   00125A  2EE8               	decfsz	wreg,f,c
   892   00125C  D7FE               	bra	u887
   893   00125E  2E15               	decfsz	??_turnRIGHT^0,f,c
   894   001260  D7FC               	bra	u887
   895   001262                     
   896                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 228:     }
   897   001262  4A1B               	infsnz	turnRIGHT@j^0,f,c
   898   001264  2A1C               	incf	(turnRIGHT@j+1)^0,f,c
   899   001266                     l118:
   900   001266  5018               	movf	turnRIGHT@rotation_calibration^0,w,c
   901   001268  6E15               	movwf	??_turnRIGHT^0,c
   902   00126A  6A16               	clrf	(??_turnRIGHT+1)^0,c
   903   00126C  5015               	movf	??_turnRIGHT^0,w,c
   904   00126E  5C1B               	subwf	turnRIGHT@j^0,w,c
   905   001270  501C               	movf	(turnRIGHT@j+1)^0,w,c
   906   001272  0A80               	xorlw	128
   907   001274  6E17               	movwf	(??_turnRIGHT+2)^0,c
   908   001276  5016               	movf	(??_turnRIGHT+1)^0,w,c
   909   001278  0A80               	xorlw	128
   910   00127A  5817               	subwfb	(??_turnRIGHT+2)^0,w,c
   911   00127C  A0D8               	btfss	status,0,c
   912   00127E  EF43  F009         	goto	u671
   913   001282  EF45  F009         	goto	u670
   914   001286                     u671:
   915   001286  EF2A  F009         	goto	l1547
   916   00128A                     u670:
   917   00128A  EF73  F009         	goto	l1565
   918   00128E                     l1551:
   919                           
   920                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 232:         if(mR->power> 0 ){
   921   00128E  5014               	movf	turnRIGHT@mR^0,w,c
   922   001290  6ED9               	movwf	fsr2l,c
   923   001292  6ADA               	clrf	fsr2h,c
   924   001294  50DF               	movf	indf2,w,c
   925   001296  B4D8               	btfsc	status,2,c
   926   001298  EF50  F009         	goto	u681
   927   00129C  EF52  F009         	goto	u680
   928   0012A0                     u681:
   929   0012A0  EF56  F009         	goto	l1555
   930   0012A4                     u680:
   931   0012A4                     
   932                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 233:             mR->power--;
   933   0012A4  5014               	movf	turnRIGHT@mR^0,w,c
   934   0012A6  6ED9               	movwf	fsr2l,c
   935   0012A8  6ADA               	clrf	fsr2h,c
   936   0012AA  06DF               	decf	indf2,f,c
   937   0012AC                     l1555:
   938                           
   939                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 235:         if(mL->power> 0 ){
   940   0012AC  5013               	movf	turnRIGHT@mL^0,w,c
   941   0012AE  6ED9               	movwf	fsr2l,c
   942   0012B0  6ADA               	clrf	fsr2h,c
   943   0012B2  50DF               	movf	indf2,w,c
   944   0012B4  B4D8               	btfsc	status,2,c
   945   0012B6  EF5F  F009         	goto	u691
   946   0012BA  EF61  F009         	goto	u690
   947   0012BE                     u691:
   948   0012BE  EF65  F009         	goto	l1559
   949   0012C2                     u690:
   950   0012C2                     
   951                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 236:             mL->power--;
   952   0012C2  5013               	movf	turnRIGHT@mL^0,w,c
   953   0012C4  6ED9               	movwf	fsr2l,c
   954   0012C6  6ADA               	clrf	fsr2h,c
   955   0012C8  06DF               	decf	indf2,f,c
   956   0012CA                     l1559:
   957                           
   958                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 238:         setMotorPWM(mR);
   959   0012CA  C014  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
   960   0012CE  EC49  F00A         	call	_setMotorPWM	;wreg free
   961   0012D2                     
   962                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 239:         setMotorPWM(mL);
   963   0012D2  C013  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
   964   0012D6  EC49  F00A         	call	_setMotorPWM	;wreg free
   965   0012DA                     
   966                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 240:         delay_ms_function(delay
      +                          _time);
   967   0012DA  C01F  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
   968   0012DE  C020  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
   969   0012E2  ECD9  F00B         	call	_delay_ms_function	;wreg free
   970   0012E6                     l1565:
   971                           
   972                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 231:     while(mL->power || mR->powe
      +                          r > 0){
   973   0012E6  5013               	movf	turnRIGHT@mL^0,w,c
   974   0012E8  6ED9               	movwf	fsr2l,c
   975   0012EA  6ADA               	clrf	fsr2h,c
   976   0012EC  50DF               	movf	indf2,w,c
   977   0012EE  A4D8               	btfss	status,2,c
   978   0012F0  EF7C  F009         	goto	u701
   979   0012F4  EF7E  F009         	goto	u700
   980   0012F8                     u701:
   981   0012F8  EF47  F009         	goto	l1551
   982   0012FC                     u700:
   983   0012FC  5014               	movf	turnRIGHT@mR^0,w,c
   984   0012FE  6ED9               	movwf	fsr2l,c
   985   001300  6ADA               	clrf	fsr2h,c
   986   001302  50DF               	movf	indf2,w,c
   987   001304  A4D8               	btfss	status,2,c
   988   001306  EF87  F009         	goto	u711
   989   00130A  EF89  F009         	goto	u710
   990   00130E                     u711:
   991   00130E  EF47  F009         	goto	l1551
   992   001312                     u710:
   993   001312  0012               	return		;funcret
   994   001314                     __end_of_turnRIGHT:
   995                           	callstack 0
   996                           
   997 ;; *************** function _turnLEFT *****************
   998 ;; Defined at:
   999 ;;		line 172 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  rotation_cal    1    wreg     unsigned char 
  1002 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  1003 ;;		 -> motorL(9), 
  1004 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  1005 ;;		 -> motorR(9), 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  1008 ;;  j               2   26[COMRAM] int 
  1009 ;;  i               2   24[COMRAM] int 
  1010 ;;  delay_time      2   30[COMRAM] int 
  1011 ;;  max_power       2   28[COMRAM] int 
  1012 ;;  acceleration    2    0        int 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1023 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1024 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1025 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1026 ;;Total ram usage:       14 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 2
  1029 ;; This function calls:
  1030 ;;		___awdiv
  1031 ;;		_delay_ms_function
  1032 ;;		_setMotorPWM
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text2
  1039   001314                     __ptext2:
  1040                           	callstack 0
  1041   001314                     _turnLEFT:
  1042                           	callstack 28
  1043                           
  1044                           ;incstack = 0
  1045                           ;turnLEFT@rotation_calibration stored from wreg
  1046   001314  6E18               	movwf	turnLEFT@rotation_calibration^0,c
  1047   001316                     
  1048                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 173:     mL->direction = 0;
  1049   001316  5013               	movf	turnLEFT@mL^0,w,c
  1050   001318  6ED9               	movwf	fsr2l,c
  1051   00131A  6ADA               	clrf	fsr2h,c
  1052   00131C  0E01               	movlw	1
  1053   00131E  26D9               	addwf	fsr2l,f,c
  1054   001320  6ADF               	clrf	indf2,c
  1055                           
  1056                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 174:     mR->direction = 1;
  1057   001322  5014               	movf	turnLEFT@mR^0,w,c
  1058   001324  6ED9               	movwf	fsr2l,c
  1059   001326  6ADA               	clrf	fsr2h,c
  1060   001328  0E01               	movlw	1
  1061   00132A  26D9               	addwf	fsr2l,f,c
  1062   00132C  0E01               	movlw	1
  1063   00132E  6EDF               	movwf	indf2,c
  1064   001330                     
  1065                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 176:     int max_power = 20;
  1066   001330  0E00               	movlw	0
  1067   001332  6E1E               	movwf	(turnLEFT@max_power+1)^0,c
  1068   001334  0E14               	movlw	20
  1069   001336  6E1D               	movwf	turnLEFT@max_power^0,c
  1070   001338                     
  1071                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 178:     int delay_time = accelerati
      +                          on_time/max_power;
  1072   001338  0E00               	movlw	0
  1073   00133A  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1074   00133C  0E64               	movlw	100
  1075   00133E  6E01               	movwf	___awdiv@dividend^0,c
  1076   001340  0E00               	movlw	0
  1077   001342  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1078   001344  0E14               	movlw	20
  1079   001346  6E03               	movwf	___awdiv@divisor^0,c
  1080   001348  ECF3  F00A         	call	___awdiv	;wreg free
  1081   00134C  C001  F01F         	movff	?___awdiv,turnLEFT@delay_time
  1082   001350  C002  F020         	movff	?___awdiv+1,turnLEFT@delay_time+1
  1083   001354                     
  1084                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 181:     for(int i=0; i< max_power; 
      +                          i++){
  1085   001354  0E00               	movlw	0
  1086   001356  6E1A               	movwf	(turnLEFT@i+1)^0,c
  1087   001358  0E00               	movlw	0
  1088   00135A  6E19               	movwf	turnLEFT@i^0,c
  1089   00135C  EFD4  F009         	goto	l1497
  1090   001360                     l1487:
  1091                           
  1092                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 182:         mL->power = mL->power +
      +                           1;
  1093   001360  5013               	movf	turnLEFT@mL^0,w,c
  1094   001362  6ED9               	movwf	fsr2l,c
  1095   001364  6ADA               	clrf	fsr2h,c
  1096   001366  5013               	movf	turnLEFT@mL^0,w,c
  1097   001368  6EE1               	movwf	fsr1l,c
  1098   00136A  6AE2               	clrf	fsr1h,c
  1099   00136C  50E7               	movf	indf1,w,c
  1100   00136E  6E15               	movwf	??_turnLEFT^0,c
  1101   001370  2815               	incf	??_turnLEFT^0,w,c
  1102   001372  6EDF               	movwf	indf2,c
  1103                           
  1104                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 183:         mR->power = mR->power +
      +                           1 ;
  1105   001374  5014               	movf	turnLEFT@mR^0,w,c
  1106   001376  6ED9               	movwf	fsr2l,c
  1107   001378  6ADA               	clrf	fsr2h,c
  1108   00137A  5014               	movf	turnLEFT@mR^0,w,c
  1109   00137C  6EE1               	movwf	fsr1l,c
  1110   00137E  6AE2               	clrf	fsr1h,c
  1111   001380  50E7               	movf	indf1,w,c
  1112   001382  6E15               	movwf	??_turnLEFT^0,c
  1113   001384  2815               	incf	??_turnLEFT^0,w,c
  1114   001386  6EDF               	movwf	indf2,c
  1115   001388                     
  1116                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 184:         setMotorPWM(mR);
  1117   001388  C014  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  1118   00138C  EC49  F00A         	call	_setMotorPWM	;wreg free
  1119   001390                     
  1120                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 185:         setMotorPWM(mL);
  1121   001390  C013  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  1122   001394  EC49  F00A         	call	_setMotorPWM	;wreg free
  1123   001398                     
  1124                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 186:         delay_ms_function(delay
      +                          _time);
  1125   001398  C01F  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  1126   00139C  C020  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  1127   0013A0  ECD9  F00B         	call	_delay_ms_function	;wreg free
  1128   0013A4                     
  1129                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 187:     }
  1130   0013A4  4A19               	infsnz	turnLEFT@i^0,f,c
  1131   0013A6  2A1A               	incf	(turnLEFT@i+1)^0,f,c
  1132   0013A8                     l1497:
  1133   0013A8  501D               	movf	turnLEFT@max_power^0,w,c
  1134   0013AA  5C19               	subwf	turnLEFT@i^0,w,c
  1135   0013AC  501A               	movf	(turnLEFT@i+1)^0,w,c
  1136   0013AE  0A80               	xorlw	128
  1137   0013B0  6E15               	movwf	??_turnLEFT^0,c
  1138   0013B2  501E               	movf	(turnLEFT@max_power+1)^0,w,c
  1139   0013B4  0A80               	xorlw	128
  1140   0013B6  5815               	subwfb	??_turnLEFT^0,w,c
  1141   0013B8  A0D8               	btfss	status,0,c
  1142   0013BA  EFE1  F009         	goto	u601
  1143   0013BE  EFE3  F009         	goto	u600
  1144   0013C2                     u601:
  1145   0013C2  EFB0  F009         	goto	l1487
  1146   0013C6                     u600:
  1147   0013C6                     
  1148                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 190:     for(int j=0; j<rotation_cal
      +                          ibration; j++){
  1149   0013C6  0E00               	movlw	0
  1150   0013C8  6E1C               	movwf	(turnLEFT@j+1)^0,c
  1151   0013CA  0E00               	movlw	0
  1152   0013CC  6E1B               	movwf	turnLEFT@j^0,c
  1153   0013CE  EFF2  F009         	goto	l104
  1154   0013D2                     l1501:
  1155                           
  1156                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 191:         _delay((unsigned long)(
      +                          (10)*(64000000/4000.0)));
  1157   0013D2  0ED0               	movlw	208
  1158   0013D4  6E15               	movwf	??_turnLEFT^0,c
  1159   0013D6  0ECA               	movlw	202
  1160   0013D8                     u897:
  1161   0013D8  2EE8               	decfsz	wreg,f,c
  1162   0013DA  D7FE               	bra	u897
  1163   0013DC  2E15               	decfsz	??_turnLEFT^0,f,c
  1164   0013DE  D7FC               	bra	u897
  1165   0013E0                     
  1166                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 192:     }
  1167   0013E0  4A1B               	infsnz	turnLEFT@j^0,f,c
  1168   0013E2  2A1C               	incf	(turnLEFT@j+1)^0,f,c
  1169   0013E4                     l104:
  1170   0013E4  5018               	movf	turnLEFT@rotation_calibration^0,w,c
  1171   0013E6  6E15               	movwf	??_turnLEFT^0,c
  1172   0013E8  6A16               	clrf	(??_turnLEFT+1)^0,c
  1173   0013EA  5015               	movf	??_turnLEFT^0,w,c
  1174   0013EC  5C1B               	subwf	turnLEFT@j^0,w,c
  1175   0013EE  501C               	movf	(turnLEFT@j+1)^0,w,c
  1176   0013F0  0A80               	xorlw	128
  1177   0013F2  6E17               	movwf	(??_turnLEFT+2)^0,c
  1178   0013F4  5016               	movf	(??_turnLEFT+1)^0,w,c
  1179   0013F6  0A80               	xorlw	128
  1180   0013F8  5817               	subwfb	(??_turnLEFT+2)^0,w,c
  1181   0013FA  A0D8               	btfss	status,0,c
  1182   0013FC  EF02  F00A         	goto	u611
  1183   001400  EF04  F00A         	goto	u610
  1184   001404                     u611:
  1185   001404  EFE9  F009         	goto	l1501
  1186   001408                     u610:
  1187   001408  EF32  F00A         	goto	l1519
  1188   00140C                     l1505:
  1189                           
  1190                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 196:         if(mR->power> 0 ){
  1191   00140C  5014               	movf	turnLEFT@mR^0,w,c
  1192   00140E  6ED9               	movwf	fsr2l,c
  1193   001410  6ADA               	clrf	fsr2h,c
  1194   001412  50DF               	movf	indf2,w,c
  1195   001414  B4D8               	btfsc	status,2,c
  1196   001416  EF0F  F00A         	goto	u621
  1197   00141A  EF11  F00A         	goto	u620
  1198   00141E                     u621:
  1199   00141E  EF15  F00A         	goto	l1509
  1200   001422                     u620:
  1201   001422                     
  1202                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 197:             mR->power--;
  1203   001422  5014               	movf	turnLEFT@mR^0,w,c
  1204   001424  6ED9               	movwf	fsr2l,c
  1205   001426  6ADA               	clrf	fsr2h,c
  1206   001428  06DF               	decf	indf2,f,c
  1207   00142A                     l1509:
  1208                           
  1209                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 199:         if(mL->power> 0 ){
  1210   00142A  5013               	movf	turnLEFT@mL^0,w,c
  1211   00142C  6ED9               	movwf	fsr2l,c
  1212   00142E  6ADA               	clrf	fsr2h,c
  1213   001430  50DF               	movf	indf2,w,c
  1214   001432  B4D8               	btfsc	status,2,c
  1215   001434  EF1E  F00A         	goto	u631
  1216   001438  EF20  F00A         	goto	u630
  1217   00143C                     u631:
  1218   00143C  EF24  F00A         	goto	l1513
  1219   001440                     u630:
  1220   001440                     
  1221                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 200:             mL->power--;
  1222   001440  5013               	movf	turnLEFT@mL^0,w,c
  1223   001442  6ED9               	movwf	fsr2l,c
  1224   001444  6ADA               	clrf	fsr2h,c
  1225   001446  06DF               	decf	indf2,f,c
  1226   001448                     l1513:
  1227                           
  1228                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 202:         setMotorPWM(mR);
  1229   001448  C014  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  1230   00144C  EC49  F00A         	call	_setMotorPWM	;wreg free
  1231   001450                     
  1232                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 203:         setMotorPWM(mL);
  1233   001450  C013  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  1234   001454  EC49  F00A         	call	_setMotorPWM	;wreg free
  1235   001458                     
  1236                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 204:         delay_ms_function(delay
      +                          _time);
  1237   001458  C01F  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  1238   00145C  C020  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  1239   001460  ECD9  F00B         	call	_delay_ms_function	;wreg free
  1240   001464                     l1519:
  1241                           
  1242                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 195:     while(mL->power || mR->powe
      +                          r > 0){
  1243   001464  5013               	movf	turnLEFT@mL^0,w,c
  1244   001466  6ED9               	movwf	fsr2l,c
  1245   001468  6ADA               	clrf	fsr2h,c
  1246   00146A  50DF               	movf	indf2,w,c
  1247   00146C  A4D8               	btfss	status,2,c
  1248   00146E  EF3B  F00A         	goto	u641
  1249   001472  EF3D  F00A         	goto	u640
  1250   001476                     u641:
  1251   001476  EF06  F00A         	goto	l1505
  1252   00147A                     u640:
  1253   00147A  5014               	movf	turnLEFT@mR^0,w,c
  1254   00147C  6ED9               	movwf	fsr2l,c
  1255   00147E  6ADA               	clrf	fsr2h,c
  1256   001480  50DF               	movf	indf2,w,c
  1257   001482  A4D8               	btfss	status,2,c
  1258   001484  EF46  F00A         	goto	u651
  1259   001488  EF48  F00A         	goto	u650
  1260   00148C                     u651:
  1261   00148C  EF06  F00A         	goto	l1505
  1262   001490                     u650:
  1263   001490  0012               	return		;funcret
  1264   001492                     __end_of_turnLEFT:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _initDCmotorsPWM *****************
  1268 ;; Defined at:
  1269 ;;		line 5 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1287 ;;Total ram usage:        2 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text3
  1297   0016AA                     __ptext3:
  1298                           	callstack 0
  1299   0016AA                     _initDCmotorsPWM:
  1300                           	callstack 30
  1301   0016AA                     
  1302                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 7:     TRISEbits.TRISE2 = 0;
  1303   0016AA  9485               	bcf	133,2,c	;volatile
  1304                           
  1305                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 8:     TRISEbits.TRISE4 = 0;
  1306   0016AC  9885               	bcf	133,4,c	;volatile
  1307                           
  1308                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 9:     TRISCbits.TRISC7 = 0;
  1309   0016AE  9E83               	bcf	131,7,c	;volatile
  1310                           
  1311                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 10:     TRISGbits.TRISG6 = 0;
  1312   0016B0  9C87               	bcf	135,6,c	;volatile
  1313                           
  1314                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 12:     LATEbits.LATE2 = 0;
  1315   0016B2  947D               	bcf	125,2,c	;volatile
  1316                           
  1317                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 13:     LATEbits.LATE4 = 0;
  1318   0016B4  987D               	bcf	125,4,c	;volatile
  1319                           
  1320                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 14:     LATCbits.LATC7 = 0;
  1321   0016B6  9E7B               	bcf	123,7,c	;volatile
  1322                           
  1323                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 15:     LATGbits.LATG6 = 0;
  1324   0016B8  9C7F               	bcf	127,6,c	;volatile
  1325   0016BA                     
  1326                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 18:     RE2PPS=0x05;
  1327   0016BA  0E05               	movlw	5
  1328   0016BC  010E               	movlb	14	; () banked
  1329   0016BE  6F74               	movwf	116,b	;volatile
  1330                           
  1331                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 19:     RE4PPS=0x06;
  1332   0016C0  0E06               	movlw	6
  1333   0016C2  6F76               	movwf	118,b	;volatile
  1334                           
  1335                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 20:     RC7PPS=0x07;
  1336   0016C4  0E07               	movlw	7
  1337   0016C6  6F69               	movwf	105,b	;volatile
  1338                           
  1339                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 21:     RG6PPS=0x08;
  1340   0016C8  0E08               	movlw	8
  1341   0016CA  6F88               	movwf	136,b	;volatile
  1342                           
  1343                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 24:     T2CONbits.CKPS=100;
  1344   0016CC  50BD               	movf	189,w,c	;volatile
  1345   0016CE  0B8F               	andlw	-113
  1346   0016D0  0940               	iorlw	64
  1347   0016D2  6EBD               	movwf	189,c	;volatile
  1348                           
  1349                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1350   0016D4  0EE0               	movlw	-32
  1351   0016D6  16BE               	andwf	190,f,c	;volatile
  1352                           
  1353                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1354   0016D8  50BF               	movf	191,w,c	;volatile
  1355   0016DA  0BF0               	andlw	-16
  1356   0016DC  0901               	iorlw	1
  1357   0016DE  6EBF               	movwf	191,c	;volatile
  1358   0016E0                     
  1359                           ; BSR set to: 14
  1360                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 30:     T2PR=PWMperiod;
  1361   0016E0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1362   0016E4                     
  1363                           ; BSR set to: 14
  1364                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 31:     T2CONbits.ON=1;
  1365   0016E4  8EBD               	bsf	189,7,c	;volatile
  1366                           
  1367                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 35:     CCPR1H=0;
  1368   0016E6  0E00               	movlw	0
  1369   0016E8  6EAA               	movwf	170,c	;volatile
  1370                           
  1371                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 36:     CCPR2H=0;
  1372   0016EA  0E00               	movlw	0
  1373   0016EC  6EA6               	movwf	166,c	;volatile
  1374                           
  1375                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 37:     CCPR3H=0;
  1376   0016EE  0E00               	movlw	0
  1377   0016F0  010F               	movlb	15	; () banked
  1378   0016F2  6F25               	movwf	37,b	;volatile
  1379                           
  1380                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 38:     CCPR4H=0;
  1381   0016F4  0E00               	movlw	0
  1382   0016F6  6F21               	movwf	33,b	;volatile
  1383                           
  1384                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  1385   0016F8  0EFC               	movlw	-4
  1386   0016FA  16AD               	andwf	173,f,c	;volatile
  1387                           
  1388                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  1389   0016FC  0EF3               	movlw	-13
  1390   0016FE  16AD               	andwf	173,f,c	;volatile
  1391                           
  1392                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  1393   001700  0ECF               	movlw	-49
  1394   001702  16AD               	andwf	173,f,c	;volatile
  1395                           
  1396                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  1397   001704  0E3F               	movlw	-193
  1398   001706  16AD               	andwf	173,f,c	;volatile
  1399   001708                     
  1400                           ; BSR set to: 15
  1401                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 47:     CCP1CONbits.FMT=1;
  1402   001708  88AB               	bsf	171,4,c	;volatile
  1403                           
  1404                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  1405   00170A  50AB               	movf	171,w,c	;volatile
  1406   00170C  0BF0               	andlw	-16
  1407   00170E  090C               	iorlw	12
  1408   001710  6EAB               	movwf	171,c	;volatile
  1409   001712                     
  1410                           ; BSR set to: 15
  1411                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 49:     CCP1CONbits.EN=1;
  1412   001712  8EAB               	bsf	171,7,c	;volatile
  1413   001714                     
  1414                           ; BSR set to: 15
  1415                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 51:     CCP2CONbits.FMT=1;
  1416   001714  88A7               	bsf	167,4,c	;volatile
  1417                           
  1418                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  1419   001716  50A7               	movf	167,w,c	;volatile
  1420   001718  0BF0               	andlw	-16
  1421   00171A  090C               	iorlw	12
  1422   00171C  6EA7               	movwf	167,c	;volatile
  1423   00171E                     
  1424                           ; BSR set to: 15
  1425                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 53:     CCP2CONbits.EN=1;
  1426   00171E  8EA7               	bsf	167,7,c	;volatile
  1427   001720                     
  1428                           ; BSR set to: 15
  1429                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 55:     CCP3CONbits.FMT=1;
  1430   001720  8926               	bsf	38,4,b	;volatile
  1431                           
  1432                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  1433   001722  5126               	movf	38,w,b	;volatile
  1434   001724  0BF0               	andlw	-16
  1435   001726  090C               	iorlw	12
  1436   001728  6F26               	movwf	38,b	;volatile
  1437   00172A                     
  1438                           ; BSR set to: 15
  1439                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 57:     CCP3CONbits.EN=1;
  1440   00172A  8F26               	bsf	38,7,b	;volatile
  1441   00172C                     
  1442                           ; BSR set to: 15
  1443                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 59:     CCP4CONbits.FMT=1;
  1444   00172C  8922               	bsf	34,4,b	;volatile
  1445                           
  1446                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  1447   00172E  5122               	movf	34,w,b	;volatile
  1448   001730  0BF0               	andlw	-16
  1449   001732  090C               	iorlw	12
  1450   001734  6F22               	movwf	34,b	;volatile
  1451   001736                     
  1452                           ; BSR set to: 15
  1453                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 61:     CCP4CONbits.EN=1;
  1454   001736  8F22               	bsf	34,7,b	;volatile
  1455   001738                     
  1456                           ; BSR set to: 15
  1457                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 64:     TRISHbits.TRISH3 = 0;
  1458   001738  9688               	bcf	136,3,c	;volatile
  1459   00173A                     
  1460                           ; BSR set to: 15
  1461                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 65:     LATHbits.LATH3 = 0;
  1462   00173A  9680               	bcf	128,3,c	;volatile
  1463   00173C                     
  1464                           ; BSR set to: 15
  1465   00173C  0012               	return		;funcret
  1466   00173E                     __end_of_initDCmotorsPWM:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _forward *****************
  1470 ;; Defined at:
  1471 ;;		line 120 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  direction       1    wreg     unsigned char 
  1474 ;;  Distance_Cal    1   18[COMRAM] unsigned char 
  1475 ;;  mL              1   19[COMRAM] PTR struct DC_motor
  1476 ;;		 -> motorL(9), 
  1477 ;;  mR              1   20[COMRAM] PTR struct DC_motor
  1478 ;;		 -> motorR(9), 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  direction       1   24[COMRAM] unsigned char 
  1481 ;;  j               2   27[COMRAM] int 
  1482 ;;  i               2   25[COMRAM] int 
  1483 ;;  delay_time      2   31[COMRAM] int 
  1484 ;;  max_power       2   29[COMRAM] int 
  1485 ;;  acceleration    2    0        int 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:       15 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 2
  1502 ;; This function calls:
  1503 ;;		___awdiv
  1504 ;;		_delay_ms_function
  1505 ;;		_setMotorPWM
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text4
  1512   000FEA                     __ptext4:
  1513                           	callstack 0
  1514   000FEA                     _forward:
  1515                           	callstack 28
  1516                           
  1517                           ; BSR set to: 15
  1518                           ;incstack = 0
  1519                           ;forward@direction stored from wreg
  1520   000FEA  6E19               	movwf	forward@direction^0,c
  1521   000FEC                     
  1522                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 125:     if(direction){
  1523   000FEC  5019               	movf	forward@direction^0,w,c
  1524   000FEE  B4D8               	btfsc	status,2,c
  1525   000FF0  EFFC  F007         	goto	u531
  1526   000FF4  EFFE  F007         	goto	u530
  1527   000FF8                     u531:
  1528   000FF8  EF0E  F008         	goto	l1431
  1529   000FFC                     u530:
  1530   000FFC                     
  1531                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 126:             mL->direction = 1;
  1532   000FFC  5014               	movf	forward@mL^0,w,c
  1533   000FFE  6ED9               	movwf	fsr2l,c
  1534   001000  6ADA               	clrf	fsr2h,c
  1535   001002  0E01               	movlw	1
  1536   001004  26D9               	addwf	fsr2l,f,c
  1537   001006  0E01               	movlw	1
  1538   001008  6EDF               	movwf	indf2,c
  1539                           
  1540                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 127:             mR->direction = 1;
  1541   00100A  5015               	movf	forward@mR^0,w,c
  1542   00100C  6ED9               	movwf	fsr2l,c
  1543   00100E  6ADA               	clrf	fsr2h,c
  1544   001010  0E01               	movlw	1
  1545   001012  26D9               	addwf	fsr2l,f,c
  1546   001014  0E01               	movlw	1
  1547   001016  6EDF               	movwf	indf2,c
  1548                           
  1549                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 128:         }
  1550   001018  EF1A  F008         	goto	l1433
  1551   00101C                     l1431:
  1552                           
  1553                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 130:             mL->direction = 0;
  1554   00101C  5014               	movf	forward@mL^0,w,c
  1555   00101E  6ED9               	movwf	fsr2l,c
  1556   001020  6ADA               	clrf	fsr2h,c
  1557   001022  0E01               	movlw	1
  1558   001024  26D9               	addwf	fsr2l,f,c
  1559   001026  6ADF               	clrf	indf2,c
  1560                           
  1561                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 131:             mR->direction = 0;
  1562   001028  5015               	movf	forward@mR^0,w,c
  1563   00102A  6ED9               	movwf	fsr2l,c
  1564   00102C  6ADA               	clrf	fsr2h,c
  1565   00102E  0E01               	movlw	1
  1566   001030  26D9               	addwf	fsr2l,f,c
  1567   001032  6ADF               	clrf	indf2,c
  1568   001034                     l1433:
  1569                           
  1570                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 135:     int max_power = 20;
  1571   001034  0E00               	movlw	0
  1572   001036  6E1F               	movwf	(forward@max_power+1)^0,c
  1573   001038  0E14               	movlw	20
  1574   00103A  6E1E               	movwf	forward@max_power^0,c
  1575   00103C                     
  1576                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 137:     int delay_time = accelerati
      +                          on_time/max_power;
  1577   00103C  0E00               	movlw	0
  1578   00103E  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1579   001040  0E64               	movlw	100
  1580   001042  6E01               	movwf	___awdiv@dividend^0,c
  1581   001044  0E00               	movlw	0
  1582   001046  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1583   001048  0E14               	movlw	20
  1584   00104A  6E03               	movwf	___awdiv@divisor^0,c
  1585   00104C  ECF3  F00A         	call	___awdiv	;wreg free
  1586   001050  C001  F020         	movff	?___awdiv,forward@delay_time
  1587   001054  C002  F021         	movff	?___awdiv+1,forward@delay_time+1
  1588   001058                     
  1589                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 140:     for(int i=0; i< max_power; 
      +                          i++){
  1590   001058  0E00               	movlw	0
  1591   00105A  6E1B               	movwf	(forward@i+1)^0,c
  1592   00105C  0E00               	movlw	0
  1593   00105E  6E1A               	movwf	forward@i^0,c
  1594   001060  EF56  F008         	goto	l1451
  1595   001064                     l1441:
  1596                           
  1597                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 141:         mL->power = mL->power +
      +                           1;
  1598   001064  5014               	movf	forward@mL^0,w,c
  1599   001066  6ED9               	movwf	fsr2l,c
  1600   001068  6ADA               	clrf	fsr2h,c
  1601   00106A  5014               	movf	forward@mL^0,w,c
  1602   00106C  6EE1               	movwf	fsr1l,c
  1603   00106E  6AE2               	clrf	fsr1h,c
  1604   001070  50E7               	movf	indf1,w,c
  1605   001072  6E16               	movwf	??_forward^0,c
  1606   001074  2816               	incf	??_forward^0,w,c
  1607   001076  6EDF               	movwf	indf2,c
  1608                           
  1609                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 142:         mR->power = mR->power +
      +                           1 ;
  1610   001078  5015               	movf	forward@mR^0,w,c
  1611   00107A  6ED9               	movwf	fsr2l,c
  1612   00107C  6ADA               	clrf	fsr2h,c
  1613   00107E  5015               	movf	forward@mR^0,w,c
  1614   001080  6EE1               	movwf	fsr1l,c
  1615   001082  6AE2               	clrf	fsr1h,c
  1616   001084  50E7               	movf	indf1,w,c
  1617   001086  6E16               	movwf	??_forward^0,c
  1618   001088  2816               	incf	??_forward^0,w,c
  1619   00108A  6EDF               	movwf	indf2,c
  1620   00108C                     
  1621                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 143:         setMotorPWM(mR);
  1622   00108C  C015  F00E         	movff	forward@mR,setMotorPWM@m
  1623   001090  EC49  F00A         	call	_setMotorPWM	;wreg free
  1624   001094                     
  1625                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 144:         setMotorPWM(mL);
  1626   001094  C014  F00E         	movff	forward@mL,setMotorPWM@m
  1627   001098  EC49  F00A         	call	_setMotorPWM	;wreg free
  1628   00109C                     
  1629                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 145:         delay_ms_function(delay
      +                          _time);
  1630   00109C  C020  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  1631   0010A0  C021  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  1632   0010A4  ECD9  F00B         	call	_delay_ms_function	;wreg free
  1633   0010A8                     
  1634                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 146:     }
  1635   0010A8  4A1A               	infsnz	forward@i^0,f,c
  1636   0010AA  2A1B               	incf	(forward@i+1)^0,f,c
  1637   0010AC                     l1451:
  1638   0010AC  501E               	movf	forward@max_power^0,w,c
  1639   0010AE  5C1A               	subwf	forward@i^0,w,c
  1640   0010B0  501B               	movf	(forward@i+1)^0,w,c
  1641   0010B2  0A80               	xorlw	128
  1642   0010B4  6E16               	movwf	??_forward^0,c
  1643   0010B6  501F               	movf	(forward@max_power+1)^0,w,c
  1644   0010B8  0A80               	xorlw	128
  1645   0010BA  5816               	subwfb	??_forward^0,w,c
  1646   0010BC  A0D8               	btfss	status,0,c
  1647   0010BE  EF63  F008         	goto	u541
  1648   0010C2  EF65  F008         	goto	u540
  1649   0010C6                     u541:
  1650   0010C6  EF32  F008         	goto	l1441
  1651   0010CA                     u540:
  1652   0010CA                     
  1653                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 151:     for(int j=0; j<Distance_Cal
      +                          ibration; j++){
  1654   0010CA  0E00               	movlw	0
  1655   0010CC  6E1D               	movwf	(forward@j+1)^0,c
  1656   0010CE  0E00               	movlw	0
  1657   0010D0  6E1C               	movwf	forward@j^0,c
  1658   0010D2  EF74  F008         	goto	l90
  1659   0010D6                     l1455:
  1660                           
  1661                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 152:         _delay((unsigned long)(
      +                          (10)*(64000000/4000.0)));
  1662   0010D6  0ED0               	movlw	208
  1663   0010D8  6E16               	movwf	??_forward^0,c
  1664   0010DA  0ECA               	movlw	202
  1665   0010DC                     u907:
  1666   0010DC  2EE8               	decfsz	wreg,f,c
  1667   0010DE  D7FE               	bra	u907
  1668   0010E0  2E16               	decfsz	??_forward^0,f,c
  1669   0010E2  D7FC               	bra	u907
  1670   0010E4                     
  1671                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 153:     }
  1672   0010E4  4A1C               	infsnz	forward@j^0,f,c
  1673   0010E6  2A1D               	incf	(forward@j+1)^0,f,c
  1674   0010E8                     l90:
  1675   0010E8  5013               	movf	forward@Distance_Calibration^0,w,c
  1676   0010EA  6E16               	movwf	??_forward^0,c
  1677   0010EC  6A17               	clrf	(??_forward+1)^0,c
  1678   0010EE  5016               	movf	??_forward^0,w,c
  1679   0010F0  5C1C               	subwf	forward@j^0,w,c
  1680   0010F2  501D               	movf	(forward@j+1)^0,w,c
  1681   0010F4  0A80               	xorlw	128
  1682   0010F6  6E18               	movwf	(??_forward+2)^0,c
  1683   0010F8  5017               	movf	(??_forward+1)^0,w,c
  1684   0010FA  0A80               	xorlw	128
  1685   0010FC  5818               	subwfb	(??_forward+2)^0,w,c
  1686   0010FE  A0D8               	btfss	status,0,c
  1687   001100  EF84  F008         	goto	u551
  1688   001104  EF86  F008         	goto	u550
  1689   001108                     u551:
  1690   001108  EF6B  F008         	goto	l1455
  1691   00110C                     u550:
  1692   00110C  EFB4  F008         	goto	l1473
  1693   001110                     l1459:
  1694                           
  1695                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 157:         if(mR->power> 0 ){
  1696   001110  5015               	movf	forward@mR^0,w,c
  1697   001112  6ED9               	movwf	fsr2l,c
  1698   001114  6ADA               	clrf	fsr2h,c
  1699   001116  50DF               	movf	indf2,w,c
  1700   001118  B4D8               	btfsc	status,2,c
  1701   00111A  EF91  F008         	goto	u561
  1702   00111E  EF93  F008         	goto	u560
  1703   001122                     u561:
  1704   001122  EF97  F008         	goto	l1463
  1705   001126                     u560:
  1706   001126                     
  1707                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 158:             mR->power--;
  1708   001126  5015               	movf	forward@mR^0,w,c
  1709   001128  6ED9               	movwf	fsr2l,c
  1710   00112A  6ADA               	clrf	fsr2h,c
  1711   00112C  06DF               	decf	indf2,f,c
  1712   00112E                     l1463:
  1713                           
  1714                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 160:         if(mL->power> 0 ){
  1715   00112E  5014               	movf	forward@mL^0,w,c
  1716   001130  6ED9               	movwf	fsr2l,c
  1717   001132  6ADA               	clrf	fsr2h,c
  1718   001134  50DF               	movf	indf2,w,c
  1719   001136  B4D8               	btfsc	status,2,c
  1720   001138  EFA0  F008         	goto	u571
  1721   00113C  EFA2  F008         	goto	u570
  1722   001140                     u571:
  1723   001140  EFA6  F008         	goto	l1467
  1724   001144                     u570:
  1725   001144                     
  1726                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 161:             mL->power--;
  1727   001144  5014               	movf	forward@mL^0,w,c
  1728   001146  6ED9               	movwf	fsr2l,c
  1729   001148  6ADA               	clrf	fsr2h,c
  1730   00114A  06DF               	decf	indf2,f,c
  1731   00114C                     l1467:
  1732                           
  1733                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 163:         setMotorPWM(mR);
  1734   00114C  C015  F00E         	movff	forward@mR,setMotorPWM@m
  1735   001150  EC49  F00A         	call	_setMotorPWM	;wreg free
  1736   001154                     
  1737                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 164:         setMotorPWM(mL);
  1738   001154  C014  F00E         	movff	forward@mL,setMotorPWM@m
  1739   001158  EC49  F00A         	call	_setMotorPWM	;wreg free
  1740   00115C                     
  1741                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 165:         delay_ms_function(delay
      +                          _time);
  1742   00115C  C020  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  1743   001160  C021  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  1744   001164  ECD9  F00B         	call	_delay_ms_function	;wreg free
  1745   001168                     l1473:
  1746                           
  1747                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 156:     while(mL->power || mR->powe
      +                          r > 0){
  1748   001168  5014               	movf	forward@mL^0,w,c
  1749   00116A  6ED9               	movwf	fsr2l,c
  1750   00116C  6ADA               	clrf	fsr2h,c
  1751   00116E  50DF               	movf	indf2,w,c
  1752   001170  A4D8               	btfss	status,2,c
  1753   001172  EFBD  F008         	goto	u581
  1754   001176  EFBF  F008         	goto	u580
  1755   00117A                     u581:
  1756   00117A  EF88  F008         	goto	l1459
  1757   00117E                     u580:
  1758   00117E  5015               	movf	forward@mR^0,w,c
  1759   001180  6ED9               	movwf	fsr2l,c
  1760   001182  6ADA               	clrf	fsr2h,c
  1761   001184  50DF               	movf	indf2,w,c
  1762   001186  A4D8               	btfss	status,2,c
  1763   001188  EFC8  F008         	goto	u591
  1764   00118C  EFCA  F008         	goto	u590
  1765   001190                     u591:
  1766   001190  EF88  F008         	goto	l1459
  1767   001194                     u590:
  1768   001194  0012               	return		;funcret
  1769   001196                     __end_of_forward:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _setMotorPWM *****************
  1773 ;; Defined at:
  1774 ;;		line 75 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  m               1   13[COMRAM] PTR struct DC_motor
  1777 ;;		 -> motorR(9), motorL(9), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  negDuty         1   17[COMRAM] unsigned char 
  1780 ;;  posDuty         1   16[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1790 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;Total ram usage:        5 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 1
  1797 ;; This function calls:
  1798 ;;		___lwdiv
  1799 ;;		___wmul
  1800 ;; This function is called by:
  1801 ;;		_forward
  1802 ;;		_turnLEFT
  1803 ;;		_turnRIGHT
  1804 ;;		_stop
  1805 ;;		_fullSpeedAhead
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text5
  1810   001492                     __ptext5:
  1811                           	callstack 0
  1812   001492                     _setMotorPWM:
  1813                           	callstack 28
  1814   001492                     
  1815                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 75: void setMotorPWM(DC_motor *m);..
      +                          /lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 76: {;../lab-6-motors-and-pwm-tomas-tho
      +                          mas.X/dc_motor.c: 77:     unsigned char posDuty, negDuty;;../lab-6-motors-and-pwm-tomas-
      +                          thomas.X/dc_motor.c: 79:     if(m->brakemode) {
  1816   001492  500E               	movf	setMotorPWM@m^0,w,c
  1817   001494  6ED9               	movwf	fsr2l,c
  1818   001496  6ADA               	clrf	fsr2h,c
  1819   001498  0E02               	movlw	2
  1820   00149A  26D9               	addwf	fsr2l,f,c
  1821   00149C  50DF               	movf	indf2,w,c
  1822   00149E  B4D8               	btfsc	status,2,c
  1823   0014A0  EF54  F00A         	goto	u451
  1824   0014A4  EF56  F00A         	goto	u450
  1825   0014A8                     u451:
  1826   0014A8  EF86  F00A         	goto	l1345
  1827   0014AC                     u450:
  1828   0014AC                     
  1829                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 80:         posDuty=m->PWMperiod - (
      +                          (unsigned int)(m->power)*(m->PWMperiod))/100;
  1830   0014AC  500E               	movf	setMotorPWM@m^0,w,c
  1831   0014AE  6ED9               	movwf	fsr2l,c
  1832   0014B0  6ADA               	clrf	fsr2h,c
  1833   0014B2  50DF               	movf	indf2,w,c
  1834   0014B4  6E0F               	movwf	??_setMotorPWM^0,c
  1835   0014B6  500F               	movf	??_setMotorPWM^0,w,c
  1836   0014B8  6E01               	movwf	___wmul@multiplier^0,c
  1837   0014BA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1838   0014BC  500E               	movf	setMotorPWM@m^0,w,c
  1839   0014BE  6ED9               	movwf	fsr2l,c
  1840   0014C0  6ADA               	clrf	fsr2h,c
  1841   0014C2  0E03               	movlw	3
  1842   0014C4  26D9               	addwf	fsr2l,f,c
  1843   0014C6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1844   0014CA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1845   0014CE  ECF0  F00B         	call	___wmul	;wreg free
  1846   0014D2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1847   0014D6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1848   0014DA  0E00               	movlw	0
  1849   0014DC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1850   0014DE  0E64               	movlw	100
  1851   0014E0  6E09               	movwf	___lwdiv@divisor^0,c
  1852   0014E2  EC9F  F00B         	call	___lwdiv	;wreg free
  1853   0014E6  500E               	movf	setMotorPWM@m^0,w,c
  1854   0014E8  6ED9               	movwf	fsr2l,c
  1855   0014EA  6ADA               	clrf	fsr2h,c
  1856   0014EC  0E03               	movlw	3
  1857   0014EE  26D9               	addwf	fsr2l,f,c
  1858   0014F0  50DF               	movf	indf2,w,c
  1859   0014F2  6E10               	movwf	(??_setMotorPWM+1)^0,c
  1860   0014F4  5007               	movf	?___lwdiv^0,w,c
  1861   0014F6  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  1862   0014F8  6E11               	movwf	setMotorPWM@posDuty^0,c
  1863   0014FA                     
  1864                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 81:         negDuty=m->PWMperiod;
  1865   0014FA  500E               	movf	setMotorPWM@m^0,w,c
  1866   0014FC  6ED9               	movwf	fsr2l,c
  1867   0014FE  6ADA               	clrf	fsr2h,c
  1868   001500  0E03               	movlw	3
  1869   001502  26D9               	addwf	fsr2l,f,c
  1870   001504  50DF               	movf	indf2,w,c
  1871   001506  6E12               	movwf	setMotorPWM@negDuty^0,c
  1872                           
  1873                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 82:     }
  1874   001508  EFA7  F00A         	goto	l1349
  1875   00150C                     l1345:
  1876                           
  1877                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 84:         posDuty=0;
  1878   00150C  0E00               	movlw	0
  1879   00150E  6E11               	movwf	setMotorPWM@posDuty^0,c
  1880   001510                     
  1881                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 85:   negDuty=((unsigned int)(m->pow
      +                          er)*(m->PWMperiod))/100;
  1882   001510  500E               	movf	setMotorPWM@m^0,w,c
  1883   001512  6ED9               	movwf	fsr2l,c
  1884   001514  6ADA               	clrf	fsr2h,c
  1885   001516  50DF               	movf	indf2,w,c
  1886   001518  6E0F               	movwf	??_setMotorPWM^0,c
  1887   00151A  500F               	movf	??_setMotorPWM^0,w,c
  1888   00151C  6E01               	movwf	___wmul@multiplier^0,c
  1889   00151E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1890   001520  500E               	movf	setMotorPWM@m^0,w,c
  1891   001522  6ED9               	movwf	fsr2l,c
  1892   001524  6ADA               	clrf	fsr2h,c
  1893   001526  0E03               	movlw	3
  1894   001528  26D9               	addwf	fsr2l,f,c
  1895   00152A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1896   00152E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1897   001532  ECF0  F00B         	call	___wmul	;wreg free
  1898   001536  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1899   00153A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1900   00153E  0E00               	movlw	0
  1901   001540  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1902   001542  0E64               	movlw	100
  1903   001544  6E09               	movwf	___lwdiv@divisor^0,c
  1904   001546  EC9F  F00B         	call	___lwdiv	;wreg free
  1905   00154A  5007               	movf	?___lwdiv^0,w,c
  1906   00154C  6E12               	movwf	setMotorPWM@negDuty^0,c
  1907   00154E                     l1349:
  1908                           
  1909                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 88:     if (m->direction) {
  1910   00154E  500E               	movf	setMotorPWM@m^0,w,c
  1911   001550  6ED9               	movwf	fsr2l,c
  1912   001552  6ADA               	clrf	fsr2h,c
  1913   001554  0E01               	movlw	1
  1914   001556  26D9               	addwf	fsr2l,f,c
  1915   001558  50DF               	movf	indf2,w,c
  1916   00155A  B4D8               	btfsc	status,2,c
  1917   00155C  EFB2  F00A         	goto	u461
  1918   001560  EFB4  F00A         	goto	u460
  1919   001564                     u461:
  1920   001564  EFD4  F00A         	goto	l1353
  1921   001568                     u460:
  1922   001568                     
  1923                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 89:         *(m->posDutyHighByte)=po
      +                          sDuty;
  1924   001568  500E               	movf	setMotorPWM@m^0,w,c
  1925   00156A  6ED9               	movwf	fsr2l,c
  1926   00156C  6ADA               	clrf	fsr2h,c
  1927   00156E  0E05               	movlw	5
  1928   001570  26D9               	addwf	fsr2l,f,c
  1929   001572  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1930   001576  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1931   00157A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1932   00157E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1933   001582  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  1934                           
  1935                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 90:         *(m->negDutyHighByte)=ne
      +                          gDuty;
  1936   001586  500E               	movf	setMotorPWM@m^0,w,c
  1937   001588  6ED9               	movwf	fsr2l,c
  1938   00158A  6ADA               	clrf	fsr2h,c
  1939   00158C  0E07               	movlw	7
  1940   00158E  26D9               	addwf	fsr2l,f,c
  1941   001590  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1942   001594  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1943   001598  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1944   00159C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1945   0015A0  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  1946                           
  1947                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 91:     } else {
  1948   0015A4  EFF2  F00A         	goto	l74
  1949   0015A8                     l1353:
  1950                           
  1951                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 92:         *(m->posDutyHighByte)=ne
      +                          gDuty;
  1952   0015A8  500E               	movf	setMotorPWM@m^0,w,c
  1953   0015AA  6ED9               	movwf	fsr2l,c
  1954   0015AC  6ADA               	clrf	fsr2h,c
  1955   0015AE  0E05               	movlw	5
  1956   0015B0  26D9               	addwf	fsr2l,f,c
  1957   0015B2  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1958   0015B6  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1959   0015BA  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1960   0015BE  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1961   0015C2  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  1962                           
  1963                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 93:         *(m->negDutyHighByte)=po
      +                          sDuty;
  1964   0015C6  500E               	movf	setMotorPWM@m^0,w,c
  1965   0015C8  6ED9               	movwf	fsr2l,c
  1966   0015CA  6ADA               	clrf	fsr2h,c
  1967   0015CC  0E07               	movlw	7
  1968   0015CE  26D9               	addwf	fsr2l,f,c
  1969   0015D0  CFDE F00F          	movff	postinc2,??_setMotorPWM
  1970   0015D4  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  1971   0015D8  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  1972   0015DC  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1973   0015E0  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  1974   0015E4                     l74:
  1975   0015E4  0012               	return		;funcret
  1976   0015E6                     __end_of_setMotorPWM:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function ___wmul *****************
  1980 ;; Defined at:
  1981 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  multiplier      2    0[COMRAM] unsigned int 
  1984 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  product         2    4[COMRAM] unsigned int 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2    0[COMRAM] unsigned int 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, prodl, prodh
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;Total ram usage:        6 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_setMotorPWM
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text6
  2010   0017E0                     __ptext6:
  2011                           	callstack 0
  2012   0017E0                     ___wmul:
  2013                           	callstack 28
  2014   0017E0  5001               	movf	___wmul@multiplier^0,w,c
  2015   0017E2  0203               	mulwf	___wmul@multiplicand^0,c
  2016   0017E4  CFF3 F005          	movff	prodl,___wmul@product
  2017   0017E8  CFF4 F006          	movff	prodh,___wmul@product+1
  2018   0017EC  5001               	movf	___wmul@multiplier^0,w,c
  2019   0017EE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2020   0017F0  50F3               	movf	243,w,c
  2021   0017F2  2606               	addwf	(___wmul@product+1)^0,f,c
  2022   0017F4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2023   0017F6  0203               	mulwf	___wmul@multiplicand^0,c
  2024   0017F8  50F3               	movf	243,w,c
  2025   0017FA  2606               	addwf	(___wmul@product+1)^0,f,c
  2026   0017FC  C005  F001         	movff	___wmul@product,?___wmul
  2027   001800  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2028   001804  0012               	return		;funcret
  2029   001806                     __end_of___wmul:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function ___lwdiv *****************
  2033 ;; Defined at:
  2034 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  dividend        2    6[COMRAM] unsigned int 
  2037 ;;  divisor         2    8[COMRAM] unsigned int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  quotient        2   10[COMRAM] unsigned int 
  2040 ;;  counter         1   12[COMRAM] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  2    6[COMRAM] unsigned int 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2051 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2054 ;;Total ram usage:        7 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_setMotorPWM
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text7
  2064   00173E                     __ptext7:
  2065                           	callstack 0
  2066   00173E                     ___lwdiv:
  2067                           	callstack 28
  2068   00173E  0E00               	movlw	0
  2069   001740  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2070   001742  0E00               	movlw	0
  2071   001744  6E0B               	movwf	___lwdiv@quotient^0,c
  2072   001746  5009               	movf	___lwdiv@divisor^0,w,c
  2073   001748  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2074   00174A  B4D8               	btfsc	status,2,c
  2075   00174C  EFAA  F00B         	goto	u411
  2076   001750  EFAC  F00B         	goto	u410
  2077   001754                     u411:
  2078   001754  EFD4  F00B         	goto	l709
  2079   001758                     u410:
  2080   001758  0E01               	movlw	1
  2081   00175A  6E0D               	movwf	___lwdiv@counter^0,c
  2082   00175C  EFB4  F00B         	goto	l1319
  2083   001760                     l1317:
  2084   001760  90D8               	bcf	status,0,c
  2085   001762  3609               	rlcf	___lwdiv@divisor^0,f,c
  2086   001764  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2087   001766  2A0D               	incf	___lwdiv@counter^0,f,c
  2088   001768                     l1319:
  2089   001768  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2090   00176A  EFB9  F00B         	goto	u421
  2091   00176E  EFBB  F00B         	goto	u420
  2092   001772                     u421:
  2093   001772  EFB0  F00B         	goto	l1317
  2094   001776                     u420:
  2095   001776                     l1321:
  2096   001776  90D8               	bcf	status,0,c
  2097   001778  360B               	rlcf	___lwdiv@quotient^0,f,c
  2098   00177A  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2099   00177C  5009               	movf	___lwdiv@divisor^0,w,c
  2100   00177E  5C07               	subwf	___lwdiv@dividend^0,w,c
  2101   001780  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2102   001782  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2103   001784  A0D8               	btfss	status,0,c
  2104   001786  EFC7  F00B         	goto	u431
  2105   00178A  EFC9  F00B         	goto	u430
  2106   00178E                     u431:
  2107   00178E  EFCE  F00B         	goto	l1329
  2108   001792                     u430:
  2109   001792  5009               	movf	___lwdiv@divisor^0,w,c
  2110   001794  5E07               	subwf	___lwdiv@dividend^0,f,c
  2111   001796  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2112   001798  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2113   00179A  800B               	bsf	___lwdiv@quotient^0,0,c
  2114   00179C                     l1329:
  2115   00179C  90D8               	bcf	status,0,c
  2116   00179E  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2117   0017A0  3209               	rrcf	___lwdiv@divisor^0,f,c
  2118   0017A2  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2119   0017A4  EFBB  F00B         	goto	l1321
  2120   0017A8                     l709:
  2121   0017A8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2122   0017AC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2123   0017B0  0012               	return		;funcret
  2124   0017B2                     __end_of___lwdiv:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _delay_ms_function *****************
  2128 ;; Defined at:
  2129 ;;		line 67 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  milliseconds    2    0[COMRAM] unsigned int 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_forward
  2153 ;;		_turnLEFT
  2154 ;;		_turnRIGHT
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text8
  2159   0017B2                     __ptext8:
  2160                           	callstack 0
  2161   0017B2                     _delay_ms_function:
  2162                           	callstack 29
  2163   0017B2                     
  2164                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 68:     while (milliseconds > 0) {
  2165   0017B2  EFE6  F00B         	goto	l64
  2166   0017B6                     l1335:
  2167                           
  2168                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 69:         _delay((unsigned long)((
      +                          1)*(64000000/4000.0)));
  2169   0017B6  0E15               	movlw	21
  2170   0017B8  6E03               	movwf	??_delay_ms_function^0,c
  2171   0017BA  0EC6               	movlw	198
  2172   0017BC                     u917:
  2173   0017BC  2EE8               	decfsz	wreg,f,c
  2174   0017BE  D7FE               	bra	u917
  2175   0017C0  2E03               	decfsz	??_delay_ms_function^0,f,c
  2176   0017C2  D7FC               	bra	u917
  2177   0017C4  D000               	nop2	
  2178   0017C6                     
  2179                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 70:         milliseconds--;
  2180   0017C6  0601               	decf	delay_ms_function@milliseconds^0,f,c
  2181   0017C8  A0D8               	btfss	status,0,c
  2182   0017CA  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  2183   0017CC                     l64:
  2184                           
  2185                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor.c: 68:     while (milliseconds > 0) {
  2186   0017CC  5001               	movf	delay_ms_function@milliseconds^0,w,c
  2187   0017CE  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  2188   0017D0  A4D8               	btfss	status,2,c
  2189   0017D2  EFED  F00B         	goto	u441
  2190   0017D6  EFEF  F00B         	goto	u440
  2191   0017DA                     u441:
  2192   0017DA  EFDB  F00B         	goto	l1335
  2193   0017DE                     u440:
  2194   0017DE  0012               	return		;funcret
  2195   0017E0                     __end_of_delay_ms_function:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function ___awdiv *****************
  2199 ;; Defined at:
  2200 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  dividend        2    0[COMRAM] int 
  2203 ;;  divisor         2    2[COMRAM] int 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  quotient        2    6[COMRAM] int 
  2206 ;;  sign            1    5[COMRAM] unsigned char 
  2207 ;;  counter         1    4[COMRAM] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2    0[COMRAM] int 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;Total ram usage:        8 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_forward
  2227 ;;		_turnLEFT
  2228 ;;		_turnRIGHT
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text9
  2233   0015E6                     __ptext9:
  2234                           	callstack 0
  2235   0015E6                     ___awdiv:
  2236                           	callstack 29
  2237   0015E6  0E00               	movlw	0
  2238   0015E8  6E06               	movwf	___awdiv@sign^0,c
  2239   0015EA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2240   0015EC  EFFC  F00A         	goto	u470
  2241   0015F0  EFFA  F00A         	goto	u471
  2242   0015F4                     u471:
  2243   0015F4  EF02  F00B         	goto	l1363
  2244   0015F8                     u470:
  2245   0015F8  6C03               	negf	___awdiv@divisor^0,c
  2246   0015FA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2247   0015FC  B0D8               	btfsc	status,0,c
  2248   0015FE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2249   001600  0E01               	movlw	1
  2250   001602  6E06               	movwf	___awdiv@sign^0,c
  2251   001604                     l1363:
  2252   001604  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2253   001606  EF09  F00B         	goto	u480
  2254   00160A  EF07  F00B         	goto	u481
  2255   00160E                     u481:
  2256   00160E  EF0F  F00B         	goto	l1369
  2257   001612                     u480:
  2258   001612  6C01               	negf	___awdiv@dividend^0,c
  2259   001614  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2260   001616  B0D8               	btfsc	status,0,c
  2261   001618  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2262   00161A  0E01               	movlw	1
  2263   00161C  1A06               	xorwf	___awdiv@sign^0,f,c
  2264   00161E                     l1369:
  2265   00161E  0E00               	movlw	0
  2266   001620  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2267   001622  0E00               	movlw	0
  2268   001624  6E07               	movwf	___awdiv@quotient^0,c
  2269   001626  5003               	movf	___awdiv@divisor^0,w,c
  2270   001628  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2271   00162A  B4D8               	btfsc	status,2,c
  2272   00162C  EF1A  F00B         	goto	u491
  2273   001630  EF1C  F00B         	goto	u490
  2274   001634                     u491:
  2275   001634  EF44  F00B         	goto	l1391
  2276   001638                     u490:
  2277   001638  0E01               	movlw	1
  2278   00163A  6E05               	movwf	___awdiv@counter^0,c
  2279   00163C  EF24  F00B         	goto	l1377
  2280   001640                     l1375:
  2281   001640  90D8               	bcf	status,0,c
  2282   001642  3603               	rlcf	___awdiv@divisor^0,f,c
  2283   001644  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2284   001646  2A05               	incf	___awdiv@counter^0,f,c
  2285   001648                     l1377:
  2286   001648  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2287   00164A  EF29  F00B         	goto	u501
  2288   00164E  EF2B  F00B         	goto	u500
  2289   001652                     u501:
  2290   001652  EF20  F00B         	goto	l1375
  2291   001656                     u500:
  2292   001656                     l1379:
  2293   001656  90D8               	bcf	status,0,c
  2294   001658  3607               	rlcf	___awdiv@quotient^0,f,c
  2295   00165A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2296   00165C  5003               	movf	___awdiv@divisor^0,w,c
  2297   00165E  5C01               	subwf	___awdiv@dividend^0,w,c
  2298   001660  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2299   001662  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2300   001664  A0D8               	btfss	status,0,c
  2301   001666  EF37  F00B         	goto	u511
  2302   00166A  EF39  F00B         	goto	u510
  2303   00166E                     u511:
  2304   00166E  EF3E  F00B         	goto	l1387
  2305   001672                     u510:
  2306   001672  5003               	movf	___awdiv@divisor^0,w,c
  2307   001674  5E01               	subwf	___awdiv@dividend^0,f,c
  2308   001676  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2309   001678  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2310   00167A  8007               	bsf	___awdiv@quotient^0,0,c
  2311   00167C                     l1387:
  2312   00167C  90D8               	bcf	status,0,c
  2313   00167E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2314   001680  3203               	rrcf	___awdiv@divisor^0,f,c
  2315   001682  2E05               	decfsz	___awdiv@counter^0,f,c
  2316   001684  EF2B  F00B         	goto	l1379
  2317   001688                     l1391:
  2318   001688  5006               	movf	___awdiv@sign^0,w,c
  2319   00168A  B4D8               	btfsc	status,2,c
  2320   00168C  EF4A  F00B         	goto	u521
  2321   001690  EF4C  F00B         	goto	u520
  2322   001694                     u521:
  2323   001694  EF50  F00B         	goto	l1395
  2324   001698                     u520:
  2325   001698  6C07               	negf	___awdiv@quotient^0,c
  2326   00169A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2327   00169C  B0D8               	btfsc	status,0,c
  2328   00169E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2329   0016A0                     l1395:
  2330   0016A0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2331   0016A4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2332   0016A8  0012               	return		;funcret
  2333   0016AA                     __end_of___awdiv:
  2334                           	callstack 0
  2335                           
  2336                           	psect	smallconst
  2337   000E00                     __psmallconst:
  2338                           	callstack 0
  2339   000E00  00                 	db	0
  2340   000E01  00                 	db	0	; dummy byte at the end
  2341   000000                     
  2342                           	psect	rparam
  2343   000000                     
  2344                           	psect	config
  2345                           
  2346                           ;Config register CONFIG1L @ 0x300000
  2347                           ;	External Oscillator mode Selection bits
  2348                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2349                           ;	Power-up default value for COSC bits
  2350                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2351   300000                     	org	3145728
  2352   300000  AA                 	db	170
  2353                           
  2354                           ;Config register CONFIG1H @ 0x300001
  2355                           ;	unspecified, using default values
  2356                           ;	Clock Out Enable bit
  2357                           ;	CLKOUTEN = 0x1, unprogrammed default
  2358                           ;	Clock Switch Enable bit
  2359                           ;	CSWEN = 0x1, unprogrammed default
  2360                           ;	Fail-Safe Clock Monitor Enable bit
  2361                           ;	FCMEN = 0x1, unprogrammed default
  2362   300001                     	org	3145729
  2363   300001  FF                 	db	255
  2364                           
  2365                           ;Config register CONFIG3L @ 0x300004
  2366                           ;	WDT Period Select bits
  2367                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2368                           ;	WDT operating mode
  2369                           ;	WDTE = OFF, WDT Disabled
  2370   300004                     	org	3145732
  2371   300004  9F                 	db	159
  2372                           
  2373                           ;Config register CONFIG3H @ 0x300005
  2374                           ;	unspecified, using default values
  2375                           ;	WDT Window Select bits
  2376                           ;	WDTCWS = 0x7, unprogrammed default
  2377                           ;	WDT input clock selector
  2378                           ;	WDTCCS = 0x7, unprogrammed default
  2379   300005                     	org	3145733
  2380   300005  FF                 	db	255
  2381                           tosu	equ	0xFFF
  2382                           tosh	equ	0xFFE
  2383                           tosl	equ	0xFFD
  2384                           stkptr	equ	0xFFC
  2385                           pclatu	equ	0xFFB
  2386                           pclath	equ	0xFFA
  2387                           pcl	equ	0xFF9
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           prodh	equ	0xFF4
  2393                           prodl	equ	0xFF3
  2394                           indf0	equ	0xFEF
  2395                           postinc0	equ	0xFEE
  2396                           postdec0	equ	0xFED
  2397                           preinc0	equ	0xFEC
  2398                           plusw0	equ	0xFEB
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           wreg	equ	0xFE8
  2402                           indf1	equ	0xFE7
  2403                           postinc1	equ	0xFE6
  2404                           postdec1	equ	0xFE5
  2405                           preinc1	equ	0xFE4
  2406                           plusw1	equ	0xFE3
  2407                           fsr1h	equ	0xFE2
  2408                           fsr1l	equ	0xFE1
  2409                           bsr	equ	0xFE0
  2410                           indf2	equ	0xFDF
  2411                           postinc2	equ	0xFDE
  2412                           postdec2	equ	0xFDD
  2413                           preinc2	equ	0xFDC
  2414                           plusw2	equ	0xFDB
  2415                           fsr2h	equ	0xFDA
  2416                           fsr2l	equ	0xFD9
  2417                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), motorR(COMRAM[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllllhhhlll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllllhhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_forward
    _turnRIGHT->_setMotorPWM
    _turnLEFT->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   13446
                                             33 COMRAM     7     7      0
                            _forward
                    _initDCmotorsPWM
                           _turnLEFT
                          _turnRIGHT
 ---------------------------------------------------------------------------------
 (1) _turnRIGHT                                           16    14      2    4207
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLEFT                                            16    14      2    4359
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                             17    14      3    4577
                                             18 COMRAM    15    12      3
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          5     4      1    2285
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms_function                                    3     1      2     479
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _forward
     ___awdiv
     _delay_ms_function
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _turnLEFT
     ___awdiv
     _delay_ms_function
     _setMotorPWM
   _turnRIGHT
     ___awdiv
     _delay_ms_function
     _setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllllll     7A      0       0      47        0.0%
BITBIGSFRllllhh     6C      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      3F       1       66.3%
BITBIGSFRllllhh     54      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     2B      0       0      43        0.0%
BITBIGSFRhhlllh     17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      44        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRlllllh      A      0       0      46        0.0%
BITBIGSFRhhllll      5      0       0      37        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllhh        2      0       0      38        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      45        0.0%
BITBIGSFRllhl        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      48        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 08 10:07:00 2024

                           l61 173C                             l64 17CC                             l74 15E4  
                           l90 10E8                             l67 17DE                             l98 1194  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003                            l112 1490  
                          l104 13E4                            l126 1312                            l118 1266  
                          l218 1804                            l180 0E9E                            l449 16A8  
                          l716 17B0                            l709 17A8                            u410 1758  
                          u411 1754                            u500 1656                            u420 1776  
                          u501 1652                            u421 1772                            u510 1672  
                          u430 1792                            u511 166E                            u431 178E  
                          u520 1698                            u440 17DE                            u600 13C6  
                          u521 1694                            u441 17DA                            u601 13C2  
                          u450 14AC                            u530 0FFC                            u610 1408  
                          u451 14A8                            u531 0FF8                            u611 1404  
                          u460 1568                            u540 10CA                            u620 1422  
                          u700 12FC                            u461 1564                            u541 10C6  
                          u621 141E                            u701 12F8                            u470 15F8  
                          u550 110C                            u630 1440                            u710 1312  
                          u471 15F4                            u551 1108                            u631 143C  
                          u711 130E                            u480 1612                            u560 1126  
                          u640 147A                            u800 0FE2                            u481 160E  
                          u561 1122                            u641 1476                            u801 0FDE  
                          u490 1638                            u570 1144                            u650 1490  
                          u491 1634                            u571 1140                            u651 148C  
                          u580 117E                            u660 1248                            u581 117A  
                          u661 1244                            u590 1194                            u670 128A  
                          u591 1190                            u671 1286                            u680 12A4  
                          u681 12A0                            u817 0E88                            u690 12C2  
                          u770 0E7A                            u907 10DC                            u691 12BE  
                          u827 0EBA                            u771 0E76                            u780 0EAC  
                          u917 17BC                            u837 0EF0                            u781 0EA8  
                          u790 0F44                            u791 0F40                            u847 0F16  
                          u857 0F5C                            u867 0F8E                            u877 0FB4  
                          u887 125A                            u897 13D8                            wreg 0FE8  
                         l1311 173E                           l1321 1776                           l1313 1746  
                         l1305 17E0                           l1401 16BA                           l1331 17A2  
                         l1323 177C                           l1315 1758                           l1307 17FC  
                         l1411 1714                           l1403 16E0                           l1333 17B2  
                         l1325 1792                           l1317 1760                           l1341 14AC  
                         l1421 1736                           l1413 171E                           l1405 16E4  
                         l1501 13D2                           l1335 17B6                           l1327 179A  
                         l1319 1768                           l1351 1568                           l1343 14FA  
                         l1431 101C                           l1423 1738                           l1415 1720  
                         l1407 1708                           l1511 1440                           l1503 13E0  
                         l1361 1600                           l1337 17C6                           l1329 179C  
                         l1353 15A8                           l1345 150C                           l1441 1064  
                         l1433 1034                           l1425 173A                           l1417 172A  
                         l1409 1712                           l1521 147A                           l1513 1448  
                         l1505 140C                           l1371 1626                           l1363 1604  
                         l1355 15E6                           l1347 1510                           l1339 1492  
                         l1443 108C                           l1451 10AC                           l1435 103C  
                         l1427 0FEC                           l1419 172C                           l1515 1450  
                         l1507 1422                           l1531 11D6                           l1523 1198  
                         l1611 0E02                           l1381 165C                           l1373 1638  
                         l1365 1612                           l1357 15EA                           l1349 154E  
                         l1461 1126                           l1453 10CA                           l1445 1094  
                         l1437 103C                           l1429 0FFC                           l1517 1458  
                         l1509 142A                           l1541 1226                           l1533 11E2  
                         l1525 11B2                           l1701 0F9C                           l1621 0E22  
                         l1613 0E0E                           l1383 1672                           l1375 1640  
                         l1391 1688                           l1367 161A                           l1359 15F8  
                         l1471 115C                           l1463 112E                           l1455 10D6  
                         l1447 109C                           l1439 1058                           l1519 1464  
                         l1551 128E                           l1535 120A                           l1543 122A  
                         l1527 11BA                           l1703 0FC2                           l1631 0E3E  
                         l1623 0E2A                           l1615 0E12                           l1393 1698  
                         l1385 167A                           l1377 1648                           l1369 161E  
                         l1465 1144                           l1473 1168                           l1457 10E4  
                         l1449 10A8                           l1481 1338                           l1561 12D2  
                         l1553 12A4                           l1545 1248                           l1537 1212  
                         l1529 11BA                           l1641 0E5A                           l1633 0E46  
                         l1625 0E32                           l1617 0E16                           l1609 0E02  
                         l1395 16A0                           l1387 167C                           l1379 1656  
                         l1475 117E                           l1467 114C                           l1459 1110  
                         l1491 1390                           l1483 1338                           l1563 12DA  
                         l1555 12AC                           l1547 1254                           l1539 121A  
                         l1651 0E66                           l1643 0E5C                           l1635 0E4E  
                         l1627 0E36                           l1619 0E1A                           l1389 1682  
                         l1469 1154                           l1493 1398                           l1485 1354  
                         l1477 1316                           l1557 12C2                           l1565 12E6  
                         l1549 1262                           l1661 0E96                           l1653 0E68  
                         l1645 0E5E                           l1637 0E56                           l1629 0E3A  
                         l1399 16AA                           l1495 13A4                           l1487 1360  
                         l1479 1330                           l1567 12FC                           l1559 12CA  
                         l1671 0EC6                           l1663 0E98                           l1655 0E6C  
                         l1647 0E60                           l1639 0E58                           l1489 1388  
                         l1497 13A8                           l1681 0EE6                           l1665 0EAC  
                         l1673 0ECC                           l1657 0E7A                           l1649 0E64  
                         l1499 13C6                           l1691 0F6A                           l1683 0EFE  
                         l1667 0EAE                           l1659 0E7E                           l1685 0F24  
                         l1669 0EB0                           l1687 0F44                           l1679 0ED4  
                         l1697 0F72                           l1689 0F52                           l1699 0F84  
                         _T2PR 0FBC                           _main 0E02                           _temp 003F  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf1 0FE7  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
                 ___param_bank 0000                          ?_main 0001                __end_of___awdiv 16AA  
              ___awdiv@divisor 0003                __end_of___lwdiv 17B2                ___awdiv@counter 0005  
              __end_of_forward 1196                          main@i 0024                          main@j 0026  
                        tablat 0FF5                          status 0FD8                __initialization 1806  
                 __end_of_main 0FEA                         ??_main 0022                  __activetblptr 0000  
             forward@direction 0019                   ?_setMotorPWM 000E                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001                         _RE2PPS 0E74                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RG6PPS 0E88               forward@max_power 001E  
                 _CCPTMRS0bits 0FAD                         ___wmul 17E0                      ??___awdiv 0005  
                    ??___lwdiv 000B  delay_ms_function@milliseconds 0001                         clear_0 181E  
             ___awdiv@quotient 0007                         _motorL 0036                         _motorR 002D  
                       isa$std 0001                   __pdataCOMRAM 003F                      ??_forward 0016  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8              ??_initDCmotorsPWM 0003               __end_of_turnLEFT 1492  
                   __accesstop 0060        __end_of__initialization 1824                  ___rparam_used 0001  
               __pcstackCOMRAM 0001              forward@delay_time 0020                   _T2CLKCONbits 0FBF  
                      ?___wmul 0001              _delay_ms_function 17B2             ?_delay_ms_function 0001  
          ??_delay_ms_function 0003   turnLEFT@rotation_calibration 0018                        __Hparam 0000  
                      __Lparam 0000                        ___awdiv 15E6                        ___lwdiv 173E  
                   _off_period 0029                   __psmallconst 0E00                      ?_turnLEFT 0013  
    __end_of_delay_ms_function 17E0                        __pcinit 1806                        __ramtop 0E00  
                      __ptext0 0E02                        __ptext1 1196                        __ptext2 1314  
                      __ptext3 16AA                        __ptext4 0FEA                        __ptext5 1492  
                      __ptext6 17E0                        __ptext7 173E                        __ptext8 17B2  
                      __ptext9 15E6                      _T2CONbits 0FBD                        _forward 0FEA  
                    _T2HLTbits 0FBE           end_of_initialization 1824                        postdec2 0FDD  
                      postinc0 0FEE                        postinc2 0FDE                     ??_turnLEFT 0015  
            __end_of_turnRIGHT 1314                _initDCmotorsPWM 16AA             turnRIGHT@max_power 001D  
                    _PORTFbits 0F8E             setMotorPWM@negDuty 0012             setMotorPWM@posDuty 0011  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
                  _CCP1CONbits 0FAB                    _CCP2CONbits 0FA7                    _CCP3CONbits 0F26  
  forward@Distance_Calibration 0013                    _CCP4CONbits 0F22                 __end_of___wmul 1806  
                __pidataCOMRAM 182A            start_initialization 1806             turnLEFT@delay_time 001F  
      __end_of_initDCmotorsPWM 173E                       ??___wmul 0005                    __pbssCOMRAM 0029  
             ___lwdiv@dividend 0007                    turnRIGHT@mL 0013                    turnRIGHT@mR 0014  
                     ?___awdiv 0001                       ?___lwdiv 0007                    __smallconst 0E00  
                     ?_forward 0013                  ??_setMotorPWM 000F               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                 ___wmul@product 0005                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                      _on_period 002B  
                     _LATGbits 0F7F                       _LATHbits 0F80               ?_initDCmotorsPWM 0001  
            ___wmul@multiplier 0001                   setMotorPWM@m 000E  turnRIGHT@rotation_calibration 0018  
                    _turnRIGHT 1196            __end_of_setMotorPWM 15E6                       __Hrparam 0000  
                     __Lrparam 0000                      forward@mL 0014                      forward@mR 0015  
                   _ANSELFbits 0EB4                     turnLEFT@mL 0013                     turnLEFT@mR 0014  
                   ?_turnRIGHT 0013                ___lwdiv@divisor 0009                     turnRIGHT@i 0019  
                   turnRIGHT@j 001B                ___lwdiv@counter 000D              turnLEFT@max_power 001D  
                     isa$xinst 0000                       _turnLEFT 1314            turnRIGHT@delay_time 001F  
                     forward@i 001A                       forward@j 001C                    _setMotorPWM 1492  
                    turnLEFT@i 0019                      turnLEFT@j 001B           main@Turn_Calibration 0028  
                  ??_turnRIGHT 0015  
