

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 15:09:37 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 21/07/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F67K40 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   00114C                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _temp
    58   00114C  07                 	db	7
    59   000000                     _TRISGbits	set	3975
    60   000000                     _TRISEbits	set	3973
    61   000000                     _TRISFbits	set	3974
    62   000000                     _TRISHbits	set	3976
    63   000000                     _RC7PPS	set	3689
    64   000000                     _RE2PPS	set	3700
    65   000000                     _ANSELFbits	set	3764
    66   000000                     _CCPR4H	set	3873
    67   000000                     _CCPR3H	set	3877
    68   000000                     _CCPR2H	set	4006
    69   000000                     _CCPR1H	set	4010
    70   000000                     _CCP1CONbits	set	4011
    71   000000                     _CCPTMRS0bits	set	4013
    72   000000                     _T2PR	set	4028
    73   000000                     _T2CONbits	set	4029
    74   000000                     _CCP2CONbits	set	4007
    75   000000                     _CCP3CONbits	set	3878
    76   000000                     _LATCbits	set	3963
    77   000000                     _LATDbits	set	3964
    78   000000                     _TRISDbits	set	3972
    79   000000                     _CCP4CONbits	set	3874
    80   000000                     _LATGbits	set	3967
    81   000000                     _LATEbits	set	3965
    82   000000                     _LATHbits	set	3968
    83   000000                     _PORTFbits	set	3982
    84   000000                     _TRISCbits	set	3971
    85   000000                     _RE4PPS	set	3702
    86   000000                     _RG6PPS	set	3720
    87   000000                     _T2CLKCONbits	set	4031
    88   000000                     _T2HLTbits	set	4030
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93   001128                     __pcinit:
    94                           	callstack 0
    95   001128                     start_initialization:
    96                           	callstack 0
    97   001128                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Initialize objects allocated to COMRAM (1 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102   001128  0E4C               	movlw	low __pidataCOMRAM
   103   00112A  6EF6               	movwf	tblptrl,c
   104   00112C  0E11               	movlw	high __pidataCOMRAM
   105   00112E  6EF7               	movwf	tblptrh,c
   106   001130  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107   001132  6EF8               	movwf	tblptru,c
   108   001134  0009               	tblrd		*+	;fetch initializer
   109   001136  CFF5 F030          	movff	tablat,__pdataCOMRAM
   110                           
   111                           ; Clear objects allocated to COMRAM (37 bytes)
   112   00113A  EE00  F001         	lfsr	0,__pbssCOMRAM
   113   00113E  0E25               	movlw	37
   114   001140                     clear_0:
   115   001140  6AEE               	clrf	postinc0,c
   116   001142  06E8               	decf	wreg,f,c
   117   001144  E1FD               	bnz	clear_0
   118   001146                     end_of_initialization:
   119                           	callstack 0
   120   001146                     __end_of__initialization:
   121                           	callstack 0
   122   001146  0100               	movlb	0
   123   001148  EF01  F007         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126   000001                     __pbssCOMRAM:
   127                           	callstack 0
   128   000001                     _motor_adjustments:
   129                           	callstack 0
   130   000001                     	ds	10
   131   00000B                     _motorR:
   132                           	callstack 0
   133   00000B                     	ds	9
   134   000014                     _motorL:
   135                           	callstack 0
   136   000014                     	ds	9
   137   00001D                     _off_period:
   138                           	callstack 0
   139   00001D                     	ds	2
   140   00001F                     _on_period:
   141                           	callstack 0
   142   00001F                     	ds	2
   143   000021                     _calibration:
   144                           	callstack 0
   145   000021                     	ds	5
   146                           
   147                           	psect	dataCOMRAM
   148   000030                     __pdataCOMRAM:
   149                           	callstack 0
   150   000030                     _temp:
   151                           	callstack 0
   152   000030                     	ds	1
   153                           
   154                           	psect	cstackCOMRAM
   155   000026                     __pcstackCOMRAM:
   156                           	callstack 0
   157   000026                     adjust_calibration@type:
   158                           	callstack 0
   159   000026                     initDCmotorsPWM@PWMperiod:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x0
   163   000026                     	ds	1
   164   000027                     ??_adjust_calibration:
   165                           
   166                           ; 1 bytes @ 0x1
   167   000027                     	ds	1
   168   000028                     
   169                           ; 1 bytes @ 0x2
   170   000028                     	ds	3
   171   00002B                     ??_main:
   172                           
   173                           ; 1 bytes @ 0x5
   174   00002B                     	ds	3
   175   00002E                     main@j:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x8
   179   00002E                     	ds	2
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 20 in file "../lab-6-motors-and-pwm-tomas-thomas.X/main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;  j               2    8[COMRAM] int 
   191 ;;  PWMperiod       2    0        unsigned int 
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   203 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   204 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   205 ;;Total ram usage:        5 bytes
   206 ;; Hardware stack levels required when called: 1
   207 ;; This function calls:
   208 ;;		_adjust_calibration
   209 ;;		_initDCmotorsPWM
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216   000E02                     __ptext0:
   217                           	callstack 0
   218   000E02                     _main:
   219                           	callstack 30
   220   000E02                     
   221                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 22:     initDCmotorsPWM(PWMperiod);
   222   000E02  0E00               	movlw	0
   223   000E04  6E27               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   224   000E06  0E63               	movlw	99
   225   000E08  6E26               	movwf	initDCmotorsPWM@PWMperiod^0,c
   226   000E0A  EC4A  F008         	call	_initDCmotorsPWM	;wreg free
   227   000E0E                     
   228                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 26:     motorL.power=0;
   229   000E0E  0E00               	movlw	0
   230   000E10  6E14               	movwf	_motorL^0,c
   231   000E12                     
   232                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 27:     motorL.direction=1;
   233   000E12  0E01               	movlw	1
   234   000E14  6E15               	movwf	(_motorL+1)^0,c
   235   000E16                     
   236                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 28:     motorL.brakemode=1;
   237   000E16  0E01               	movlw	1
   238   000E18  6E16               	movwf	(_motorL+2)^0,c
   239   000E1A                     
   240                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 29:     motorL.posDutyHighByte=(unsigned
      +                           char *)(&CCPR1H);
   241   000E1A  0EAA               	movlw	170
   242   000E1C  6E19               	movwf	(_motorL+5)^0,c
   243   000E1E  0E0F               	movlw	15
   244   000E20  6E1A               	movwf	(_motorL+6)^0,c
   245   000E22                     
   246                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 30:     motorL.negDutyHighByte=(unsigned
      +                           char *)(&CCPR2H);
   247   000E22  0EA6               	movlw	166
   248   000E24  6E1B               	movwf	(_motorL+7)^0,c
   249   000E26  0E0F               	movlw	15
   250   000E28  6E1C               	movwf	(_motorL+8)^0,c
   251   000E2A                     
   252                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 31:     motorL.PWMperiod=PWMperiod;
   253   000E2A  0E00               	movlw	0
   254   000E2C  6E18               	movwf	(_motorL+4)^0,c
   255   000E2E  0E63               	movlw	99
   256   000E30  6E17               	movwf	(_motorL+3)^0,c
   257   000E32                     
   258                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 33:     motorR.power=0;
   259   000E32  0E00               	movlw	0
   260   000E34  6E0B               	movwf	_motorR^0,c
   261   000E36                     
   262                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 34:     motorR.direction=1;
   263   000E36  0E01               	movlw	1
   264   000E38  6E0C               	movwf	(_motorR+1)^0,c
   265   000E3A                     
   266                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 35:     motorR.brakemode=1;
   267   000E3A  0E01               	movlw	1
   268   000E3C  6E0D               	movwf	(_motorR+2)^0,c
   269   000E3E                     
   270                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 36:     motorR.posDutyHighByte=(unsigned
      +                           char *)(&CCPR3H);
   271   000E3E  0E25               	movlw	37
   272   000E40  6E10               	movwf	(_motorR+5)^0,c
   273   000E42  0E0F               	movlw	15
   274   000E44  6E11               	movwf	(_motorR+6)^0,c
   275   000E46                     
   276                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 37:     motorR.negDutyHighByte=(unsigned
      +                           char *)(&CCPR4H);
   277   000E46  0E21               	movlw	33
   278   000E48  6E12               	movwf	(_motorR+7)^0,c
   279   000E4A  0E0F               	movlw	15
   280   000E4C  6E13               	movwf	(_motorR+8)^0,c
   281   000E4E                     
   282                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 38:     motorR.PWMperiod=PWMperiod;
   283   000E4E  0E00               	movlw	0
   284   000E50  6E0F               	movwf	(_motorR+4)^0,c
   285   000E52  0E63               	movlw	99
   286   000E54  6E0E               	movwf	(_motorR+3)^0,c
   287   000E56                     
   288                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 47:     TRISDbits.TRISD7 = 0;
   289   000E56  9E84               	bcf	132,7,c	;volatile
   290   000E58                     
   291                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 48:     LATDbits.LATD7 = 0;
   292   000E58  9E7C               	bcf	124,7,c	;volatile
   293   000E5A                     
   294                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 51:     TRISHbits.TRISH3 = 0;
   295   000E5A  9688               	bcf	136,3,c	;volatile
   296   000E5C                     
   297                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 52:     LATHbits.LATH3 = 0;
   298   000E5C  9680               	bcf	128,3,c	;volatile
   299   000E5E                     
   300                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 55:     TRISFbits.TRISF2=1;
   301   000E5E  8486               	bsf	134,2,c	;volatile
   302   000E60                     
   303                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 56:     ANSELFbits.ANSELF2=0;
   304   000E60  010E               	movlb	14	; () banked
   305   000E62  95B4               	bcf	180,2,b	;volatile
   306   000E64                     
   307                           ; BSR set to: 14
   308                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 59:     TRISFbits.TRISF3=1;
   309   000E64  8686               	bsf	134,3,c	;volatile
   310   000E66                     
   311                           ; BSR set to: 14
   312                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 60:     ANSELFbits.ANSELF3=0;
   313   000E66  97B4               	bcf	180,3,b	;volatile
   314   000E68                     
   315                           ; BSR set to: 14
   316                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 64:     calibration.index = 0;
   317   000E68  0E00               	movlw	0
   318   000E6A  6E21               	movwf	_calibration^0,c
   319   000E6C                     
   320                           ; BSR set to: 14
   321                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 68:     calibration.left_45 = 10;
   322   000E6C  0E0A               	movlw	10
   323   000E6E  6E22               	movwf	(_calibration+1)^0,c
   324   000E70                     
   325                           ; BSR set to: 14
   326                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 69:     calibration.right_45 = 20;
   327   000E70  0E14               	movlw	20
   328   000E72  6E23               	movwf	(_calibration+2)^0,c
   329   000E74                     
   330                           ; BSR set to: 14
   331                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 70:     calibration.forward_motorL = 20;
   332   000E74  0E14               	movlw	20
   333   000E76  6E24               	movwf	(_calibration+3)^0,c
   334   000E78                     
   335                           ; BSR set to: 14
   336                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 71:     calibration.forward_motorR = 20;
   337   000E78  0E14               	movlw	20
   338   000E7A  6E25               	movwf	(_calibration+4)^0,c
   339   000E7C                     l1392:
   340                           
   341                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 79:         if(!PORTFbits.RF2){
   342   000E7C  B48E               	btfsc	142,2,c	;volatile
   343   000E7E  EF43  F007         	goto	u411
   344   000E82  EF45  F007         	goto	u410
   345   000E86                     u411:
   346   000E86  EF7B  F007         	goto	l48
   347   000E8A                     u410:
   348   000E8A                     
   349                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 80:             for(int j = 0; j< calibr
      +                          ation.index; j++){
   350   000E8A  0E00               	movlw	0
   351   000E8C  6E2F               	movwf	(main@j+1)^0,c
   352   000E8E  0E00               	movlw	0
   353   000E90  6E2E               	movwf	main@j^0,c
   354   000E92  EF67  F007         	goto	l49
   355   000E96                     l1396:
   356                           
   357                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 81:             _delay((unsigned long)((
      +                          200)*(64000000/4000.0)));
   358   000E96  0E11               	movlw	17
   359   000E98  6E2C               	movwf	(??_main+1)^0,c
   360   000E9A  0E3C               	movlw	60
   361   000E9C  6E2B               	movwf	??_main^0,c
   362   000E9E  0ECB               	movlw	203
   363   000EA0                     u517:
   364   000EA0  2EE8               	decfsz	wreg,f,c
   365   000EA2  D7FE               	bra	u517
   366   000EA4  2E2B               	decfsz	??_main^0,f,c
   367   000EA6  D7FC               	bra	u517
   368   000EA8  2E2C               	decfsz	(??_main+1)^0,f,c
   369   000EAA  D7FA               	bra	u517
   370   000EAC  0000               	nop	
   371   000EAE                     
   372                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 82:             LATHbits.LATH3 = 1;
   373   000EAE  8680               	bsf	128,3,c	;volatile
   374                           
   375                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 83:             _delay((unsigned long)((
      +                          200)*(64000000/4000.0)));
   376   000EB0  0E11               	movlw	17
   377   000EB2  6E2C               	movwf	(??_main+1)^0,c
   378   000EB4  0E3C               	movlw	60
   379   000EB6  6E2B               	movwf	??_main^0,c
   380   000EB8  0ECB               	movlw	203
   381   000EBA                     u527:
   382   000EBA  2EE8               	decfsz	wreg,f,c
   383   000EBC  D7FE               	bra	u527
   384   000EBE  2E2B               	decfsz	??_main^0,f,c
   385   000EC0  D7FC               	bra	u527
   386   000EC2  2E2C               	decfsz	(??_main+1)^0,f,c
   387   000EC4  D7FA               	bra	u527
   388   000EC6  0000               	nop	
   389   000EC8                     
   390                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 84:             LATHbits.LATH3 = 0;
   391   000EC8  9680               	bcf	128,3,c	;volatile
   392   000ECA                     
   393                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 85:             }
   394   000ECA  4A2E               	infsnz	main@j^0,f,c
   395   000ECC  2A2F               	incf	(main@j+1)^0,f,c
   396   000ECE                     l49:
   397   000ECE  5021               	movf	_calibration^0,w,c
   398   000ED0  6E2B               	movwf	??_main^0,c
   399   000ED2  6A2C               	clrf	(??_main+1)^0,c
   400   000ED4  502B               	movf	??_main^0,w,c
   401   000ED6  5C2E               	subwf	main@j^0,w,c
   402   000ED8  502F               	movf	(main@j+1)^0,w,c
   403   000EDA  0A80               	xorlw	128
   404   000EDC  6E2D               	movwf	(??_main+2)^0,c
   405   000EDE  502C               	movf	(??_main+1)^0,w,c
   406   000EE0  0A80               	xorlw	128
   407   000EE2  582D               	subwfb	(??_main+2)^0,w,c
   408   000EE4  A0D8               	btfss	status,0,c
   409   000EE6  EF77  F007         	goto	u421
   410   000EEA  EF79  F007         	goto	u420
   411   000EEE                     u421:
   412   000EEE  EF4B  F007         	goto	l1396
   413   000EF2                     u420:
   414   000EF2  EFA9  F007         	goto	l1418
   415   000EF6                     l48:
   416                           
   417                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 89:         if(!PORTFbits.RF3){
   418   000EF6  B68E               	btfsc	142,3,c	;volatile
   419   000EF8  EF80  F007         	goto	u431
   420   000EFC  EF82  F007         	goto	u430
   421   000F00                     u431:
   422   000F00  EF3E  F007         	goto	l1392
   423   000F04                     u430:
   424   000F04                     
   425                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 90:             calibration.index++;
   426   000F04  2A21               	incf	_calibration^0,f,c
   427   000F06                     
   428                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 91:             _delay((unsigned long)((
      +                          200)*(64000000/4000.0)));
   429   000F06  0E11               	movlw	17
   430   000F08  6E2C               	movwf	(??_main+1)^0,c
   431   000F0A  0E3C               	movlw	60
   432   000F0C  6E2B               	movwf	??_main^0,c
   433   000F0E  0ECB               	movlw	203
   434   000F10                     u537:
   435   000F10  2EE8               	decfsz	wreg,f,c
   436   000F12  D7FE               	bra	u537
   437   000F14  2E2B               	decfsz	??_main^0,f,c
   438   000F16  D7FC               	bra	u537
   439   000F18  2E2C               	decfsz	(??_main+1)^0,f,c
   440   000F1A  D7FA               	bra	u537
   441   000F1C  0000               	nop	
   442   000F1E                     
   443                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 92:             LATHbits.LATH3 = 1;
   444   000F1E  8680               	bsf	128,3,c	;volatile
   445   000F20                     
   446                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 93:             _delay((unsigned long)((
      +                          200)*(64000000/4000.0)));
   447   000F20  0E11               	movlw	17
   448   000F22  6E2C               	movwf	(??_main+1)^0,c
   449   000F24  0E3C               	movlw	60
   450   000F26  6E2B               	movwf	??_main^0,c
   451   000F28  0ECB               	movlw	203
   452   000F2A                     u547:
   453   000F2A  2EE8               	decfsz	wreg,f,c
   454   000F2C  D7FE               	bra	u547
   455   000F2E  2E2B               	decfsz	??_main^0,f,c
   456   000F30  D7FC               	bra	u547
   457   000F32  2E2C               	decfsz	(??_main+1)^0,f,c
   458   000F34  D7FA               	bra	u547
   459   000F36  0000               	nop	
   460   000F38                     
   461                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 94:             LATHbits.LATH3 = 0;
   462   000F38  9680               	bcf	128,3,c	;volatile
   463   000F3A                     
   464                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 96:             if(calibration.index > 5
      +                          ){calibration.index = -2;}
   465   000F3A  0E05               	movlw	5
   466   000F3C  6421               	cpfsgt	_calibration^0,c
   467   000F3E  EFA3  F007         	goto	u441
   468   000F42  EFA5  F007         	goto	u440
   469   000F46                     u441:
   470   000F46  EF3E  F007         	goto	l1392
   471   000F4A                     u440:
   472   000F4A  0EFE               	movlw	254
   473   000F4C  6E21               	movwf	_calibration^0,c
   474   000F4E  EF3E  F007         	goto	l1392
   475   000F52                     l1418:
   476                           
   477                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 113:         if(calibration.index == 0){
   478   000F52  5021               	movf	_calibration^0,w,c
   479   000F54  A4D8               	btfss	status,2,c
   480   000F56  EFAF  F007         	goto	u451
   481   000F5A  EFB1  F007         	goto	u450
   482   000F5E                     u451:
   483   000F5E  EFBA  F007         	goto	l1424
   484   000F62                     u450:
   485   000F62                     
   486                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 114:             if(!PORTFbits.RF2){brea
      +                          k;}
   487   000F62  B48E               	btfsc	142,2,c	;volatile
   488   000F64  EFB6  F007         	goto	u461
   489   000F68  EFB8  F007         	goto	u460
   490   000F6C                     u461:
   491   000F6C  EFBA  F007         	goto	l1424
   492   000F70                     u460:
   493   000F70  EFDF  F007         	goto	l69
   494   000F74                     l1424:
   495                           
   496                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 117:         if(calibration.index == 1){
   497   000F74  0421               	decf	_calibration^0,w,c
   498   000F76  A4D8               	btfss	status,2,c
   499   000F78  EFC0  F007         	goto	u471
   500   000F7C  EFC2  F007         	goto	u470
   501   000F80                     u471:
   502   000F80  EFCB  F007         	goto	l1440
   503   000F84                     u470:
   504   000F84                     
   505                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 118:            if(!PORTFbits.RF2){break
      +                          ;}
   506   000F84  B48E               	btfsc	142,2,c	;volatile
   507   000F86  EFC7  F007         	goto	u481
   508   000F8A  EFC9  F007         	goto	u480
   509   000F8E                     u481:
   510   000F8E  EFCB  F007         	goto	l62
   511   000F92                     u480:
   512   000F92  EFDF  F007         	goto	l69
   513   000F96                     l62:
   514   000F96                     l1440:
   515                           
   516                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 130:         if(calibration.index == 2){
   517   000F96  0E02               	movlw	2
   518   000F98  1821               	xorwf	_calibration^0,w,c
   519   000F9A  A4D8               	btfss	status,2,c
   520   000F9C  EFD2  F007         	goto	u491
   521   000FA0  EFD4  F007         	goto	u490
   522   000FA4                     u491:
   523   000FA4  EFA9  F007         	goto	l1418
   524   000FA8                     u490:
   525   000FA8                     
   526                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 131:             adjust_calibration(&cal
      +                          ibration.right_45);
   527   000FA8  0E23               	movlw	low (_calibration+2)
   528   000FAA  6E26               	movwf	adjust_calibration@type^0,c
   529   000FAC  ECE1  F007         	call	_adjust_calibration	;wreg free
   530   000FB0                     
   531                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 132:             if(!PORTFbits.RF2){brea
      +                          k;}
   532   000FB0  B48E               	btfsc	142,2,c	;volatile
   533   000FB2  EFDD  F007         	goto	u501
   534   000FB6  EFDF  F007         	goto	u500
   535   000FBA                     u501:
   536   000FBA  EFA9  F007         	goto	l1418
   537   000FBE                     u500:
   538   000FBE                     l69:
   539   000FBE  EF00  F000         	goto	start
   540   000FC2                     __end_of_main:
   541                           	callstack 0
   542                           
   543 ;; *************** function _initDCmotorsPWM *****************
   544 ;; Defined at:
   545 ;;		line 5 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;  PWMperiod       2    0[COMRAM] unsigned int 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   563 ;;Total ram usage:        2 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text1
   573   001094                     __ptext1:
   574                           	callstack 0
   575   001094                     _initDCmotorsPWM:
   576                           	callstack 30
   577   001094                     
   578                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
   579   001094  9485               	bcf	133,2,c	;volatile
   580                           
   581                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
   582   001096  9885               	bcf	133,4,c	;volatile
   583                           
   584                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
   585   001098  9E83               	bcf	131,7,c	;volatile
   586                           
   587                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
   588   00109A  9C87               	bcf	135,6,c	;volatile
   589                           
   590                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
   591   00109C  947D               	bcf	125,2,c	;volatile
   592                           
   593                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
   594   00109E  987D               	bcf	125,4,c	;volatile
   595                           
   596                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
   597   0010A0  9E7B               	bcf	123,7,c	;volatile
   598                           
   599                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
   600   0010A2  9C7F               	bcf	127,6,c	;volatile
   601   0010A4                     
   602                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 18:     RE2PPS=0x05;
   603   0010A4  0E05               	movlw	5
   604   0010A6  010E               	movlb	14	; () banked
   605   0010A8  6F74               	movwf	116,b	;volatile
   606                           
   607                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 19:     RE4PPS=0x06;
   608   0010AA  0E06               	movlw	6
   609   0010AC  6F76               	movwf	118,b	;volatile
   610                           
   611                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 20:     RC7PPS=0x07;
   612   0010AE  0E07               	movlw	7
   613   0010B0  6F69               	movwf	105,b	;volatile
   614                           
   615                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 21:     RG6PPS=0x08;
   616   0010B2  0E08               	movlw	8
   617   0010B4  6F88               	movwf	136,b	;volatile
   618                           
   619                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
   620   0010B6  50BD               	movf	189,w,c	;volatile
   621   0010B8  0B8F               	andlw	-113
   622   0010BA  0940               	iorlw	64
   623   0010BC  6EBD               	movwf	189,c	;volatile
   624                           
   625                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
   626   0010BE  0EE0               	movlw	-32
   627   0010C0  16BE               	andwf	190,f,c	;volatile
   628                           
   629                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
   630   0010C2  50BF               	movf	191,w,c	;volatile
   631   0010C4  0BF0               	andlw	-16
   632   0010C6  0901               	iorlw	1
   633   0010C8  6EBF               	movwf	191,c	;volatile
   634   0010CA                     
   635                           ; BSR set to: 14
   636                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 30:     T2PR=PWMperiod;
   637   0010CA  C026  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
   638   0010CE                     
   639                           ; BSR set to: 14
   640                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 31:     T2CONbits.ON=1;
   641   0010CE  8EBD               	bsf	189,7,c	;volatile
   642                           
   643                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 35:     CCPR1H=0;
   644   0010D0  0E00               	movlw	0
   645   0010D2  6EAA               	movwf	170,c	;volatile
   646                           
   647                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 36:     CCPR2H=0;
   648   0010D4  0E00               	movlw	0
   649   0010D6  6EA6               	movwf	166,c	;volatile
   650                           
   651                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 37:     CCPR3H=0;
   652   0010D8  0E00               	movlw	0
   653   0010DA  010F               	movlb	15	; () banked
   654   0010DC  6F25               	movwf	37,b	;volatile
   655                           
   656                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 38:     CCPR4H=0;
   657   0010DE  0E00               	movlw	0
   658   0010E0  6F21               	movwf	33,b	;volatile
   659                           
   660                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
   661   0010E2  0EFC               	movlw	-4
   662   0010E4  16AD               	andwf	173,f,c	;volatile
   663                           
   664                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
   665   0010E6  0EF3               	movlw	-13
   666   0010E8  16AD               	andwf	173,f,c	;volatile
   667                           
   668                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
   669   0010EA  0ECF               	movlw	-49
   670   0010EC  16AD               	andwf	173,f,c	;volatile
   671                           
   672                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
   673   0010EE  0E3F               	movlw	-193
   674   0010F0  16AD               	andwf	173,f,c	;volatile
   675   0010F2                     
   676                           ; BSR set to: 15
   677                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
   678   0010F2  88AB               	bsf	171,4,c	;volatile
   679                           
   680                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b11
      +                          00;
   681   0010F4  50AB               	movf	171,w,c	;volatile
   682   0010F6  0BF0               	andlw	-16
   683   0010F8  090C               	iorlw	12
   684   0010FA  6EAB               	movwf	171,c	;volatile
   685   0010FC                     
   686                           ; BSR set to: 15
   687                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
   688   0010FC  8EAB               	bsf	171,7,c	;volatile
   689   0010FE                     
   690                           ; BSR set to: 15
   691                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
   692   0010FE  88A7               	bsf	167,4,c	;volatile
   693                           
   694                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b11
      +                          00;
   695   001100  50A7               	movf	167,w,c	;volatile
   696   001102  0BF0               	andlw	-16
   697   001104  090C               	iorlw	12
   698   001106  6EA7               	movwf	167,c	;volatile
   699   001108                     
   700                           ; BSR set to: 15
   701                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
   702   001108  8EA7               	bsf	167,7,c	;volatile
   703   00110A                     
   704                           ; BSR set to: 15
   705                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
   706   00110A  8926               	bsf	38,4,b	;volatile
   707                           
   708                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b11
      +                          00;
   709   00110C  5126               	movf	38,w,b	;volatile
   710   00110E  0BF0               	andlw	-16
   711   001110  090C               	iorlw	12
   712   001112  6F26               	movwf	38,b	;volatile
   713   001114                     
   714                           ; BSR set to: 15
   715                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
   716   001114  8F26               	bsf	38,7,b	;volatile
   717   001116                     
   718                           ; BSR set to: 15
   719                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
   720   001116  8922               	bsf	34,4,b	;volatile
   721                           
   722                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b11
      +                          00;
   723   001118  5122               	movf	34,w,b	;volatile
   724   00111A  0BF0               	andlw	-16
   725   00111C  090C               	iorlw	12
   726   00111E  6F22               	movwf	34,b	;volatile
   727   001120                     
   728                           ; BSR set to: 15
   729                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
   730   001120  8F22               	bsf	34,7,b	;volatile
   731   001122                     
   732                           ; BSR set to: 15
   733                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
   734   001122  9688               	bcf	136,3,c	;volatile
   735   001124                     
   736                           ; BSR set to: 15
   737                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
   738   001124  9680               	bcf	128,3,c	;volatile
   739   001126                     
   740                           ; BSR set to: 15
   741   001126  0012               	return		;funcret
   742   001128                     __end_of_initDCmotorsPWM:
   743                           	callstack 0
   744                           
   745 ;; *************** function _adjust_calibration *****************
   746 ;; Defined at:
   747 ;;		line 5 in file "../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  type            1    0[COMRAM] PTR int 
   750 ;;		 -> calibration(5), 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   762 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   765 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   766 ;;Total ram usage:        5 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text2
   776   000FC2                     __ptext2:
   777                           	callstack 0
   778   000FC2                     _adjust_calibration:
   779                           	callstack 30
   780   000FC2                     
   781                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 6:     if(!PORTFbits.RF2){
   782   000FC2  B48E               	btfsc	142,2,c	;volatile
   783   000FC4  EFE6  F007         	goto	u391
   784   000FC8  EFE8  F007         	goto	u390
   785   000FCC                     u391:
   786   000FCC  EF14  F008         	goto	l1326
   787   000FD0                     u390:
   788   000FD0                     
   789                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 7:         _delay((unsigned long)
      +                          ((200)*(64000000/4000.0)));
   790   000FD0  0E11               	movlw	17
   791   000FD2  6E28               	movwf	(??_adjust_calibration+1)^0,c
   792   000FD4  0E3C               	movlw	60
   793   000FD6  6E27               	movwf	??_adjust_calibration^0,c
   794   000FD8  0ECB               	movlw	203
   795   000FDA                     u557:
   796   000FDA  2EE8               	decfsz	wreg,f,c
   797   000FDC  D7FE               	bra	u557
   798   000FDE  2E27               	decfsz	??_adjust_calibration^0,f,c
   799   000FE0  D7FC               	bra	u557
   800   000FE2  2E28               	decfsz	(??_adjust_calibration+1)^0,f,c
   801   000FE4  D7FA               	bra	u557
   802   000FE6  0000               	nop	
   803   000FE8                     
   804                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 8:         *type = *type + 1;
   805   000FE8  5026               	movf	adjust_calibration@type^0,w,c
   806   000FEA  6ED9               	movwf	fsr2l,c
   807   000FEC  6ADA               	clrf	fsr2h,c
   808   000FEE  CFDE F027          	movff	postinc2,??_adjust_calibration
   809   000FF2  CFDD F028          	movff	postdec2,??_adjust_calibration+1
   810   000FF6  0E01               	movlw	1
   811   000FF8  2627               	addwf	??_adjust_calibration^0,f,c
   812   000FFA  0E00               	movlw	0
   813   000FFC  2228               	addwfc	(??_adjust_calibration+1)^0,f,c
   814   000FFE  5026               	movf	adjust_calibration@type^0,w,c
   815   001000  6ED9               	movwf	fsr2l,c
   816   001002  6ADA               	clrf	fsr2h,c
   817   001004  C027  FFDE         	movff	??_adjust_calibration,postinc2
   818   001008  C028  FFDD         	movff	??_adjust_calibration+1,postdec2
   819   00100C                     
   820                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 9:         LATDbits.LATD7 = 1;
   821   00100C  8E7C               	bsf	124,7,c	;volatile
   822   00100E                     
   823                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 10:         _delay((unsigned long
      +                          )((200)*(64000000/4000.0)));
   824   00100E  0E11               	movlw	17
   825   001010  6E28               	movwf	(??_adjust_calibration+1)^0,c
   826   001012  0E3C               	movlw	60
   827   001014  6E27               	movwf	??_adjust_calibration^0,c
   828   001016  0ECB               	movlw	203
   829   001018                     u567:
   830   001018  2EE8               	decfsz	wreg,f,c
   831   00101A  D7FE               	bra	u567
   832   00101C  2E27               	decfsz	??_adjust_calibration^0,f,c
   833   00101E  D7FC               	bra	u567
   834   001020  2E28               	decfsz	(??_adjust_calibration+1)^0,f,c
   835   001022  D7FA               	bra	u567
   836   001024  0000               	nop	
   837   001026                     
   838                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 11:         LATDbits.LATD7 = 0;
   839   001026  9E7C               	bcf	124,7,c	;volatile
   840   001028                     l1326:
   841                           
   842                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 14:     if(!PORTFbits.RF3){
   843   001028  B68E               	btfsc	142,3,c	;volatile
   844   00102A  EF19  F008         	goto	u401
   845   00102E  EF1B  F008         	goto	u400
   846   001032                     u401:
   847   001032  EF49  F008         	goto	l109
   848   001036                     u400:
   849   001036                     
   850                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 15:         _delay((unsigned long
      +                          )((200)*(64000000/4000.0)));
   851   001036  0E11               	movlw	17
   852   001038  6E28               	movwf	(??_adjust_calibration+1)^0,c
   853   00103A  0E3C               	movlw	60
   854   00103C  6E27               	movwf	??_adjust_calibration^0,c
   855   00103E  0ECB               	movlw	203
   856   001040                     u577:
   857   001040  2EE8               	decfsz	wreg,f,c
   858   001042  D7FE               	bra	u577
   859   001044  2E27               	decfsz	??_adjust_calibration^0,f,c
   860   001046  D7FC               	bra	u577
   861   001048  2E28               	decfsz	(??_adjust_calibration+1)^0,f,c
   862   00104A  D7FA               	bra	u577
   863   00104C  0000               	nop	
   864   00104E                     
   865                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 16:         *type = *type - 1;
   866   00104E  5026               	movf	adjust_calibration@type^0,w,c
   867   001050  6ED9               	movwf	fsr2l,c
   868   001052  6ADA               	clrf	fsr2h,c
   869   001054  CFDE F027          	movff	postinc2,??_adjust_calibration
   870   001058  CFDD F028          	movff	postdec2,??_adjust_calibration+1
   871   00105C  0EFF               	movlw	255
   872   00105E  2427               	addwf	??_adjust_calibration^0,w,c
   873   001060  6E29               	movwf	(??_adjust_calibration+2)^0,c
   874   001062  0EFF               	movlw	255
   875   001064  2028               	addwfc	(??_adjust_calibration+1)^0,w,c
   876   001066  6E2A               	movwf	(??_adjust_calibration+3)^0,c
   877   001068  5026               	movf	adjust_calibration@type^0,w,c
   878   00106A  6ED9               	movwf	fsr2l,c
   879   00106C  6ADA               	clrf	fsr2h,c
   880   00106E  C029  FFDE         	movff	??_adjust_calibration+2,postinc2
   881   001072  C02A  FFDD         	movff	??_adjust_calibration+3,postdec2
   882   001076                     
   883                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 17:         LATHbits.LATH3 = 1;
   884   001076  8680               	bsf	128,3,c	;volatile
   885   001078                     
   886                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 18:         _delay((unsigned long
      +                          )((200)*(64000000/4000.0)));
   887   001078  0E11               	movlw	17
   888   00107A  6E28               	movwf	(??_adjust_calibration+1)^0,c
   889   00107C  0E3C               	movlw	60
   890   00107E  6E27               	movwf	??_adjust_calibration^0,c
   891   001080  0ECB               	movlw	203
   892   001082                     u587:
   893   001082  2EE8               	decfsz	wreg,f,c
   894   001084  D7FE               	bra	u587
   895   001086  2E27               	decfsz	??_adjust_calibration^0,f,c
   896   001088  D7FC               	bra	u587
   897   00108A  2E28               	decfsz	(??_adjust_calibration+1)^0,f,c
   898   00108C  D7FA               	bra	u587
   899   00108E  0000               	nop	
   900   001090                     
   901                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 19:         LATHbits.LATH3 = 0;
   902   001090  9680               	bcf	128,3,c	;volatile
   903   001092                     l109:
   904   001092  0012               	return		;funcret
   905   001094                     __end_of_adjust_calibration:
   906                           	callstack 0
   907                           
   908                           	psect	smallconst
   909   000E00                     __psmallconst:
   910                           	callstack 0
   911   000E00  00                 	db	0
   912   000E01  00                 	db	0	; dummy byte at the end
   913   000000                     
   914                           	psect	rparam
   915   000000                     
   916                           	psect	config
   917                           
   918                           ;Config register CONFIG1L @ 0x300000
   919                           ;	External Oscillator mode Selection bits
   920                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   921                           ;	Power-up default value for COSC bits
   922                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   923   300000                     	org	3145728
   924   300000  AA                 	db	170
   925                           
   926                           ;Config register CONFIG1H @ 0x300001
   927                           ;	unspecified, using default values
   928                           ;	Clock Out Enable bit
   929                           ;	CLKOUTEN = 0x1, unprogrammed default
   930                           ;	Clock Switch Enable bit
   931                           ;	CSWEN = 0x1, unprogrammed default
   932                           ;	Fail-Safe Clock Monitor Enable bit
   933                           ;	FCMEN = 0x1, unprogrammed default
   934   300001                     	org	3145729
   935   300001  FF                 	db	255
   936                           
   937                           ;Config register CONFIG3L @ 0x300004
   938                           ;	WDT Period Select bits
   939                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   940                           ;	WDT operating mode
   941                           ;	WDTE = OFF, WDT Disabled
   942   300004                     	org	3145732
   943   300004  9F                 	db	159
   944                           
   945                           ;Config register CONFIG3H @ 0x300005
   946                           ;	unspecified, using default values
   947                           ;	WDT Window Select bits
   948                           ;	WDTCWS = 0x7, unprogrammed default
   949                           ;	WDT input clock selector
   950                           ;	WDTCCS = 0x7, unprogrammed default
   951   300005                     	org	3145733
   952   300005  FF                 	db	255
   953                           tosu	equ	0xFFF
   954                           tosh	equ	0xFFE
   955                           tosl	equ	0xFFD
   956                           stkptr	equ	0xFFC
   957                           pclatu	equ	0xFFB
   958                           pclath	equ	0xFFA
   959                           pcl	equ	0xFF9
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           prodh	equ	0xFF4
   965                           prodl	equ	0xFF3
   966                           indf0	equ	0xFEF
   967                           postinc0	equ	0xFEE
   968                           postdec0	equ	0xFED
   969                           preinc0	equ	0xFEC
   970                           plusw0	equ	0xFEB
   971                           fsr0h	equ	0xFEA
   972                           fsr0l	equ	0xFE9
   973                           wreg	equ	0xFE8
   974                           indf1	equ	0xFE7
   975                           postinc1	equ	0xFE6
   976                           postdec1	equ	0xFE5
   977                           preinc1	equ	0xFE4
   978                           plusw1	equ	0xFE3
   979                           fsr1h	equ	0xFE2
   980                           fsr1l	equ	0xFE1
   981                           bsr	equ	0xFE0
   982                           indf2	equ	0xFDF
   983                           postinc2	equ	0xFDE
   984                           postdec2	equ	0xFDD
   985                           preinc2	equ	0xFDC
   986                           plusw2	equ	0xFDB
   987                           fsr2h	equ	0xFDA
   988                           fsr2l	equ	0xFD9
   989                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@type	PTR int  size(1) Largest target is 5
		 -> calibration(COMRAM[5]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_adjust_calibration

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     429
                                              5 COMRAM     5     5      0
                 _adjust_calibration
                    _initDCmotorsPWM
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adjust_calibration                                   5     4      1     240
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adjust_calibration
   _initDCmotorsPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllllll     7A      0       0      47        0.0%
BITBIGSFRllllh      6C      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      30       1       50.5%
BITBIGSFRllhll      54      0       0      40        0.0%
BITBIGSFRhh         40      0       0      32        0.0%
BITBIGSFRlllllh     2B      0       0      43        0.0%
BITBIGSFRllhhhh     17      0       0      36        0.0%
BITBIGSFRlllllh     11      0       0      44        0.0%
BITBIGSFRhlh         E      0       0      33        0.0%
BITBIGSFRllllll      A      0       0      46        0.0%
BITBIGSFRllhhhl      5      0       0      37        0.0%
BITBIGSFRllhlhh      2      0       0      38        0.0%
BITBIGSFRlllh        2      0       0      41        0.0%
BITBIGSFRlh          2      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRllhlhl      1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      34        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      48        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 15:09:37 2024

                        l62 0F96                          l48 0EF6                          l49 0ECE  
                        l69 0FBE                         l109 1092                         l170 1126  
                       u400 1036                         u401 1032                         u410 0E8A  
                       u411 0E86                         u500 0FBE                         u420 0EF2  
                       u501 0FBA                         u421 0EEE                         u430 0F04  
                       u431 0F00                         u440 0F4A                         u441 0F46  
                       u450 0F62                         u451 0F5E                         u460 0F70  
                       u461 0F6C                         u517 0EA0                         u390 0FD0  
                       u470 0F84                         u391 0FCC                         u471 0F80  
                       u527 0EBA                         u480 0F92                         u481 0F8E  
                       u537 0F10                         u490 0FA8                         u491 0FA4  
                       u547 0F2A                         u557 0FDA                         u567 1018  
                       u577 1040                         u587 1082                         wreg 0FE8  
__end_of_adjust_calibration 1094                        l1300 1108                        l1310 1122  
                      l1302 110A                        l1320 100C                        l1312 1124  
                      l1304 1114                        l1400 0EC8                        l1330 104E  
                      l1322 100E                        l1314 0FC2                        l1306 1116  
                      l1410 0F20                        l1402 0ECA                        l1332 1076  
                      l1324 1026                        l1316 0FD0                        l1308 1120  
                      l1420 0F62                        l1412 0F38                        l1404 0F04  
                      l1340 0E02                        l1334 1078                        l1318 0FE8  
                      l1326 1028                        l1414 0F3A                        l1406 0F06  
                      l1350 0E22                        l1342 0E0E                        l1336 1090  
                      l1328 1036                        l1440 0F96                        l1424 0F74  
                      l1416 0F4A                        l1408 0F1E                        l1360 0E3E  
                      l1352 0E2A                        l1344 0E12                        l1290 10CA  
                      l1442 0FA8                        l1426 0F84                        l1418 0F52  
                      l1370 0E5A                        l1362 0E46                        l1354 0E32  
                      l1346 0E16                        l1338 0E02                        l1292 10CE  
                      l1444 0FB0                        l1380 0E66                        l1372 0E5C  
                      l1364 0E4E                        l1356 0E36                        l1348 0E1A  
                      l1294 10F2                        l1286 1094                        l1390 0E78  
                      l1382 0E68                        l1374 0E5E                        l1366 0E56  
                      l1358 0E3A                        l1296 10FC                        l1288 10A4  
                      l1392 0E7C                        l1384 0E6C                        l1376 0E60  
                      l1368 0E58                        l1298 10FE                        l1394 0E8A  
                      l1386 0E70                        l1378 0E64                        l1396 0E96  
                      l1388 0E74                        l1398 0EAE                        _T2PR 0FBC  
                      _main 0E02                        _temp 0030                        fsr2h 0FDA  
                      fsr2l 0FD9                        start 0000                ___param_bank 0000  
                     ?_main 0026                       main@j 002E                       tablat 0FF5  
                     status 0FD8             __initialization 1128                __end_of_main 0FC2  
                    ??_main 002B               __activetblptr 0000                      _CCPR1H 0FAA  
                    _CCPR2H 0FA6                      _CCPR3H 0F25                      _CCPR4H 0F21  
                    _RE2PPS 0E74                      _RC7PPS 0E69                      _RE4PPS 0E76  
                    _RG6PPS 0E88                _CCPTMRS0bits 0FAD                      clear_0 1140  
                    _motorL 0014                      _motorR 000B                      isa$std 0001  
              __pdataCOMRAM 0030                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           ??_initDCmotorsPWM 0028  
                __accesstop 0060     __end_of__initialization 1146               ___rparam_used 0001  
            __pcstackCOMRAM 0026                _T2CLKCONbits 0FBF          _adjust_calibration 0FC2  
       ?_adjust_calibration 0026        ??_adjust_calibration 0027                     __Hparam 0000  
                   __Lparam 0000                  _off_period 001D                __psmallconst 0E00  
                   __pcinit 1128                     __ramtop 0E00                     __ptext0 0E02  
                   __ptext1 1094                     __ptext2 0FC2                   _T2CONbits 0FBD  
                 _T2HLTbits 0FBE        end_of_initialization 1146                     postdec2 0FDD  
                   postinc0 0FEE                     postinc2 0FDE             _initDCmotorsPWM 1094  
                 _PORTFbits 0F8E                   _TRISCbits 0F83                   _TRISDbits 0F84  
                 _TRISEbits 0F85                   _TRISFbits 0F86                   _TRISGbits 0F87  
                 _TRISHbits 0F88                 _CCP1CONbits 0FAB                 _CCP2CONbits 0FA7  
               _CCP3CONbits 0F26                 _CCP4CONbits 0F22               __pidataCOMRAM 114C  
       start_initialization 1128     __end_of_initDCmotorsPWM 1128                 _calibration 0021  
               __pbssCOMRAM 0001                 __smallconst 0E00    initDCmotorsPWM@PWMperiod 0026  
                  _LATCbits 0F7B                    _LATDbits 0F7C                    _LATEbits 0F7D  
                 _on_period 001F                    _LATGbits 0F7F                    _LATHbits 0F80  
          ?_initDCmotorsPWM 0026                    __Hrparam 0000                    __Lrparam 0000  
                _ANSELFbits 0EB4           _motor_adjustments 0001                    isa$xinst 0000  
    adjust_calibration@type 0026  
