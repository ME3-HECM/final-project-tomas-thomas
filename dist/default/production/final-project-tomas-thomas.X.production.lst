

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 19:17:46 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 21/07/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     _TX4REG	set	3812
    94   000000                     _RC4STAbits	set	3815
    95   000000                     _SP4BRGH	set	3814
    96   000000                     _SSP2CON2bits	set	3802
    97   000000                     _RX4PPS	set	3605
    98   000000                     _RC0PPS	set	3682
    99   000000                     _LATAbits	set	3961
   100   000000                     _LATGbits	set	3967
   101   000000                     _LATHbits	set	3968
   102   000000                     _TRISAbits	set	3969
   103   000000                     _TRISGbits	set	3975
   104   000000                     _TRISHbits	set	3976
   105   000000                     _TRISDbits	set	3972
   106   000000                     _TRISFbits	set	3974
   107   000000                     _LATFbits	set	3966
   108   000000                     _RD5PPS	set	3695
   109   000000                     _ANSELDbits	set	3751
   110   000000                     _SSP2ADD	set	3798
   111   000000                     _SSP2CON1bits	set	3801
   112   000000                     _RC4REG	set	3811
   113   000000                     _SP4BRGL	set	3813
   114   000000                     _TX4STAbits	set	3816
   115   000000                     _BAUD4CONbits	set	3817
   116   000000                     _SSP2CLKPPS	set	3612
   117   000000                     _SSP2DATPPS	set	3613
   118   000000                     _PIE4bits	set	3629
   119   000000                     _PIR4bits	set	3639
   120   000000                     _SSP2CON2	set	3802
   121   000000                     _SSP2STAT	set	3800
   122   000000                     _SSP2BUF	set	3797
   123   000000                     _RD6PPS	set	3696
   124                           
   125                           	psect	smallconst
   126   000E00                     __psmallconst:
   127                           	callstack 0
   128   000E00  00                 	db	0
   129   000E01                     STR_1:
   130   000E01  48                 	db	72	;'H'
   131   000E02  3A                 	db	58	;':'
   132   000E03  25                 	db	37
   133   000E04  2E                 	db	46
   134   000E05  32                 	db	50	;'2'
   135   000E06  66                 	db	102	;'f'
   136   000E07  20                 	db	32
   137   000E08  53                 	db	83	;'S'
   138   000E09  3A                 	db	58	;':'
   139   000E0A  20                 	db	32
   140   000E0B  25                 	db	37
   141   000E0C  2E                 	db	46
   142   000E0D  32                 	db	50	;'2'
   143   000E0E  66                 	db	102	;'f'
   144   000E0F  20                 	db	32
   145   000E10  56                 	db	86	;'V'
   146   000E11  3A                 	db	58	;':'
   147   000E12  20                 	db	32
   148   000E13  25                 	db	37
   149   000E14  2E                 	db	46
   150   000E15  32                 	db	50	;'2'
   151   000E16  66                 	db	102	;'f'
   152   000E17  20                 	db	32
   153   000E18  00                 	db	0
   154   000E19                     STR_2:
   155   000E19  69                 	db	105	;'i'
   156   000E1A  6E                 	db	110	;'n'
   157   000E1B  66                 	db	102	;'f'
   158   000E1C  00                 	db	0
   159   000E1D                     STR_5:
   160   000E1D  6E                 	db	110	;'n'
   161   000E1E  61                 	db	97	;'a'
   162   000E1F  6E                 	db	110	;'n'
   163   000E20  00                 	db	0
   164   000E21  00                 	db	0	; dummy byte at the end
   165   000000                     
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169   00445C                     __pcinit:
   170                           	callstack 0
   171   00445C                     start_initialization:
   172                           	callstack 0
   173   00445C                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Clear objects allocated to BANK1 (175 bytes)
   177   00445C  EE01  F000         	lfsr	0,__pbssBANK1
   178   004460  0EAF               	movlw	175
   179   004462                     clear_0:
   180   004462  6AEE               	clrf	postinc0,c
   181   004464  06E8               	decf	wreg,f,c
   182   004466  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to BANK0 (2 bytes)
   185   004468  0100               	movlb	0
   186   00446A  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   187   00446C  6BFD               	clrf	__pbssBANK0& (0+255),b
   188   00446E                     end_of_initialization:
   189                           	callstack 0
   190   00446E                     __end_of__initialization:
   191                           	callstack 0
   192   00446E  0100               	movlb	0
   193   004470  EFB8  F021         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	bssBANK0
   196   0000FD                     __pbssBANK0:
   197                           	callstack 0
   198   0000FD                     _TxBufReadCnt:
   199                           	callstack 0
   200   0000FD                     	ds	1
   201   0000FE                     _TxBufWriteCnt:
   202                           	callstack 0
   203   0000FE                     	ds	1
   204                           
   205                           	psect	bssBANK1
   206   000100                     __pbssBANK1:
   207                           	callstack 0
   208   000100                     _EUSART4TXbuf:
   209                           	callstack 0
   210   000100                     	ds	60
   211   00013C                     _EUSART4RXbuf:
   212                           	callstack 0
   213   00013C                     	ds	20
   214   000150                     floorf@F521:
   215                           	callstack 0
   216   000150                     	ds	4
   217   000154                     ___fpclassifyf@F465:
   218                           	callstack 0
   219   000154                     	ds	4
   220   000158                     _width:
   221                           	callstack 0
   222   000158                     	ds	2
   223   00015A                     _prec:
   224                           	callstack 0
   225   00015A                     	ds	2
   226   00015C                     _flags:
   227                           	callstack 0
   228   00015C                     	ds	1
   229   00015D                     _RxBufReadCnt:
   230                           	callstack 0
   231   00015D                     	ds	1
   232   00015E                     _RxBufWriteCnt:
   233                           	callstack 0
   234   00015E                     	ds	1
   235   00015F                     _dbuf:
   236                           	callstack 0
   237   00015F                     	ds	80
   238                           
   239                           	psect	cstackBANK1
   240   0001AF                     __pcstackBANK1:
   241                           	callstack 0
   242   0001AF                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x0
   245   0001AF                     	ds	2
   246                           
   247                           	psect	cstackBANK0
   248   000060                     __pcstackBANK0:
   249                           	callstack 0
   250   000060                     custom_floatmodulo@quotient:
   251                           	callstack 0
   252   000060                     floorf@m:
   253                           	callstack 0
   254                           
   255                           ; 4 bytes @ 0x0
   256   000060                     	ds	4
   257   000064                     floorf@e:
   258                           	callstack 0
   259   000064                     custom_floatmodulo@remainder:
   260                           	callstack 0
   261                           
   262                           ; 4 bytes @ 0x4
   263   000064                     	ds	2
   264   000066                     floorf@u:
   265                           	callstack 0
   266                           
   267                           ; 4 bytes @ 0x6
   268   000066                     	ds	2
   269   000068                     custom_floatmodulo@intPart:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x8
   273   000068                     	ds	2
   274   00006A                     efgtoa@fp:
   275                           	callstack 0
   276   00006A                     RGB_to_HSV@R:
   277                           	callstack 0
   278                           
   279                           ; 4 bytes @ 0xA
   280   00006A                     	ds	1
   281   00006B                     efgtoa@f:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0xB
   285   00006B                     	ds	3
   286   00006E                     RGB_to_HSV@G:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0xE
   290   00006E                     	ds	1
   291   00006F                     efgtoa@c:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xF
   295   00006F                     	ds	1
   296   000070                     efgtoa@ne:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x10
   300   000070                     	ds	2
   301   000072                     efgtoa@p:
   302                           	callstack 0
   303   000072                     RGB_to_HSV@B:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x12
   307   000072                     	ds	2
   308   000074                     efgtoa@t:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x14
   312   000074                     	ds	2
   313   000076                     _efgtoa$1382:
   314                           	callstack 0
   315   000076                     RGB_to_HSV@C:
   316                           	callstack 0
   317                           
   318                           ; 4 bytes @ 0x16
   319   000076                     	ds	2
   320   000078                     efgtoa@pp:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x18
   324   000078                     	ds	1
   325   000079                     efgtoa@mode:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x19
   329   000079                     	ds	1
   330   00007A                     RGB_to_HSV@H:
   331                           	callstack 0
   332   00007A                     efgtoa@nmode:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x1A
   336   00007A                     	ds	1
   337   00007B                     RGB_to_HSV@S:
   338                           	callstack 0
   339   00007B                     efgtoa@d:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x1B
   343   00007B                     	ds	1
   344   00007C                     RGB_to_HSV@V:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x1C
   348   00007C                     	ds	1
   349   00007D                     efgtoa@m:
   350                           	callstack 0
   351   00007D                     RGB_to_HSV@c_norm:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x1D
   355   00007D                     	ds	2
   356   00007F                     efgtoa@e:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x1F
   360   00007F                     	ds	2
   361   000081                     efgtoa@w:
   362                           	callstack 0
   363   000081                     _RGB_to_HSV$1725:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x21
   367   000081                     	ds	2
   368   000083                     efgtoa@ou:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x23
   372   000083                     	ds	2
   373   000085                     _RGB_to_HSV$1726:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x25
   377   000085                     	ds	2
   378   000087                     efgtoa@i:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x27
   382   000087                     	ds	2
   383   000089                     efgtoa@h:
   384                           	callstack 0
   385   000089                     _RGB_to_HSV$1727:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x29
   389   000089                     	ds	4
   390   00008D                     efgtoa@l:
   391                           	callstack 0
   392   00008D                     _RGB_to_HSV$1729:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x2D
   396   00008D                     	ds	4
   397   000091                     efgtoa@sign:
   398                           	callstack 0
   399   000091                     _RGB_to_HSV$409:
   400                           	callstack 0
   401                           
   402                           ; 4 bytes @ 0x31
   403   000091                     	ds	1
   404   000092                     efgtoa@g:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x32
   408   000092                     	ds	3
   409   000095                     _RGB_to_HSV$410:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0x35
   413   000095                     	ds	1
   414   000096                     efgtoa@n:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x36
   418   000096                     	ds	2
   419   000098                     efgtoa@u:
   420                           	callstack 0
   421                           
   422                           ; 4 bytes @ 0x38
   423   000098                     	ds	1
   424   000099                     RGB_to_HSV@minRGB:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x39
   428   000099                     	ds	3
   429   00009C                     vfpfcnvrt@fp:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x3C
   433   00009C                     	ds	1
   434   00009D                     vfpfcnvrt@fmt:
   435                           	callstack 0
   436   00009D                     _RGB_to_HSV$412:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x3D
   440   00009D                     	ds	1
   441   00009E                     vfpfcnvrt@ap:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x3E
   445   00009E                     	ds	1
   446   00009F                     ??_vfpfcnvrt:
   447                           
   448                           ; 1 bytes @ 0x3F
   449   00009F                     	ds	2
   450   0000A1                     _RGB_to_HSV$413:
   451                           	callstack 0
   452   0000A1                     vfpfcnvrt@convarg:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x41
   456   0000A1                     	ds	4
   457   0000A5                     vfpfcnvrt@c:
   458                           	callstack 0
   459   0000A5                     _RGB_to_HSV$1728:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x45
   463   0000A5                     	ds	1
   464   0000A6                     vfpfcnvrt@cp:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x46
   468   0000A6                     	ds	1
   469   0000A7                     ?_vfprintf:
   470                           	callstack 0
   471   0000A7                     vfprintf@fp:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x47
   475   0000A7                     	ds	1
   476   0000A8                     vfprintf@fmt:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x48
   480   0000A8                     	ds	1
   481   0000A9                     vfprintf@ap:
   482                           	callstack 0
   483   0000A9                     RGB_to_HSV@H_temp:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x49
   487   0000A9                     	ds	1
   488   0000AA                     vfprintf@cfmt:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x4A
   492   0000AA                     	ds	1
   493   0000AB                     ?_sprintf:
   494                           	callstack 0
   495   0000AB                     sprintf@s:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x4B
   499   0000AB                     	ds	1
   500   0000AC                     sprintf@fmt:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x4C
   504   0000AC                     	ds	1
   505   0000AD                     RGB_to_HSV@deltaRGB:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x4D
   509   0000AD                     	ds	4
   510   0000B1                     RGB_to_HSV@maxRGB:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x51
   514   0000B1                     	ds	4
   515   0000B5                     RGB_to_HSV@r:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x55
   519   0000B5                     	ds	4
   520   0000B9                     sprintf@ap:
   521                           	callstack 0
   522   0000B9                     RGB_to_HSV@g:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x59
   526   0000B9                     	ds	1
   527   0000BA                     sprintf@f:
   528                           	callstack 0
   529                           
   530                           ; 12 bytes @ 0x5A
   531   0000BA                     	ds	3
   532   0000BD                     RGB_to_HSV@b:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x5D
   536   0000BD                     	ds	9
   537   0000C6                     ??_color_cardCheck:
   538                           
   539                           ; 1 bytes @ 0x66
   540   0000C6                     	ds	2
   541   0000C8                     color_cardCheck@senddata:
   542                           	callstack 0
   543                           
   544                           ; 25 bytes @ 0x68
   545   0000C8                     	ds	25
   546   0000E1                     color_cardCheck@r:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x81
   550   0000E1                     	ds	4
   551   0000E5                     color_cardCheck@g:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x85
   555   0000E5                     	ds	4
   556   0000E9                     color_cardCheck@b:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x89
   560   0000E9                     	ds	4
   561   0000ED                     color_cardCheck@c:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x8D
   565   0000ED                     	ds	4
   566   0000F1                     color_cardCheck@H:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x91
   570   0000F1                     	ds	4
   571   0000F5                     color_cardCheck@V:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x95
   575   0000F5                     	ds	4
   576   0000F9                     color_cardCheck@S:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x99
   580   0000F9                     	ds	4
   581                           
   582                           	psect	cstackCOMRAM
   583   000001                     __pcstackCOMRAM:
   584                           	callstack 0
   585   000001                     ??_I2C_2_Master_Idle:
   586   000001                     ?___fpclassifyf:
   587                           	callstack 0
   588   000001                     ?___wmul:
   589                           	callstack 0
   590   000001                     ?___fladd:
   591                           	callstack 0
   592   000001                     ?_labs:
   593                           	callstack 0
   594   000001                     ?___flneg:
   595                           	callstack 0
   596   000001                     ?___fltol:
   597                           	callstack 0
   598   000001                     sendCharSerial4@charToSend:
   599                           	callstack 0
   600   000001                     ___wmul@multiplier:
   601                           	callstack 0
   602   000001                     memcpy@d1:
   603                           	callstack 0
   604   000001                     fputc@c:
   605                           	callstack 0
   606   000001                     strcpy@dest:
   607                           	callstack 0
   608   000001                     ___fleq@ff1:
   609                           	callstack 0
   610   000001                     ___flneg@f1:
   611                           	callstack 0
   612   000001                     ___fltol@f1:
   613                           	callstack 0
   614   000001                     ___fladd@b:
   615                           	callstack 0
   616   000001                     ___fpclassifyf@x:
   617                           	callstack 0
   618   000001                     labs@a:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x0
   622   000001                     	ds	1
   623   000002                     ??_I2C_2_Master_Read:
   624   000002                     sendStringSerial4@string:
   625                           	callstack 0
   626   000002                     I2C_2_Master_Write@data_byte:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x1
   630   000002                     	ds	1
   631   000003                     color_writetoaddr@value:
   632                           	callstack 0
   633   000003                     I2C_2_Master_Read@ack:
   634                           	callstack 0
   635   000003                     fputc@fp:
   636                           	callstack 0
   637   000003                     strcpy@src:
   638                           	callstack 0
   639   000003                     ___wmul@multiplicand:
   640                           	callstack 0
   641   000003                     memcpy@s1:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x2
   645   000003                     	ds	1
   646   000004                     ??_fputc:
   647   000004                     ??_strcpy:
   648   000004                     color_writetoaddr@address:
   649                           	callstack 0
   650   000004                     I2C_2_Master_Read@tmp:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x3
   654   000004                     	ds	1
   655   000005                     ??___fpclassifyf:
   656   000005                     ??_labs:
   657   000005                     ??_color_click_init:
   658   000005                     ??___fltol:
   659   000005                     ?_color_read_Red:
   660                           	callstack 0
   661   000005                     ?_color_read_Green:
   662                           	callstack 0
   663   000005                     ?_color_read_Blue:
   664                           	callstack 0
   665   000005                     ?_color_read_Clear:
   666                           	callstack 0
   667   000005                     ___wmul@product:
   668                           	callstack 0
   669   000005                     memcpy@n:
   670                           	callstack 0
   671   000005                     strcpy@d:
   672                           	callstack 0
   673   000005                     ___fleq@ff2:
   674                           	callstack 0
   675   000005                     ___fladd@a:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x4
   679   000005                     	ds	2
   680   000007                     ??_color_read_Red:
   681   000007                     ??_color_read_Green:
   682   000007                     ??_color_read_Blue:
   683   000007                     ??_color_read_Clear:
   684   000007                     ?_read_prec_or_width:
   685                           	callstack 0
   686   000007                     read_prec_or_width@fmt:
   687                           	callstack 0
   688   000007                     memcpy@tmp:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x6
   692   000007                     	ds	1
   693   000008                     read_prec_or_width@ap:
   694                           	callstack 0
   695   000008                     memcpy@d:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x7
   699   000008                     	ds	1
   700   000009                     ??___fladd:
   701   000009                     ??___fleq:
   702   000009                     ___fltol@sign1:
   703                           	callstack 0
   704   000009                     read_prec_or_width@c:
   705                           	callstack 0
   706   000009                     ___fpclassifyf@e:
   707                           	callstack 0
   708   000009                     fputs@s:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x8
   712   000009                     	ds	1
   713   00000A                     ___fltol@exp1:
   714                           	callstack 0
   715   00000A                     color_read_Red@tmp:
   716                           	callstack 0
   717   00000A                     color_read_Green@tmp:
   718                           	callstack 0
   719   00000A                     color_read_Blue@tmp:
   720                           	callstack 0
   721   00000A                     color_read_Clear@tmp:
   722                           	callstack 0
   723   00000A                     read_prec_or_width@n:
   724                           	callstack 0
   725   00000A                     memcpy@s:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x9
   729   00000A                     	ds	1
   730   00000B                     fputs@fp:
   731                           	callstack 0
   732   00000B                     ___fpclassifyf@u:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0xA
   736   00000B                     	ds	1
   737   00000C                     ?___xxtofl:
   738                           	callstack 0
   739   00000C                     fputs@c:
   740                           	callstack 0
   741   00000C                     ___xxtofl@val:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0xB
   745   00000C                     	ds	1
   746   00000D                     ___fladd@signs:
   747                           	callstack 0
   748   00000D                     fputs@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0xC
   752   00000D                     	ds	1
   753   00000E                     ___fladd@aexp:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0xD
   757   00000E                     	ds	1
   758   00000F                     ___fladd@bexp:
   759                           	callstack 0
   760   00000F                     pad@fp:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0xE
   764   00000F                     	ds	1
   765   000010                     ??___xxtofl:
   766   000010                     ___fladd@grs:
   767                           	callstack 0
   768   000010                     pad@buf:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xF
   772   000010                     	ds	2
   773   000012                     pad@p:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x11
   777   000012                     	ds	2
   778   000014                     ??_pad:
   779   000014                     ___xxtofl@sign:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x13
   783   000014                     	ds	1
   784   000015                     ___xxtofl@exp:
   785                           	callstack 0
   786   000015                     pad@i:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x14
   790   000015                     	ds	1
   791   000016                     ___xxtofl@arg:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x15
   795   000016                     	ds	4
   796   00001A                     ?___flmul:
   797                           	callstack 0
   798   00001A                     ___flmul@b:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x19
   802   00001A                     	ds	4
   803   00001E                     ___flmul@a:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x1D
   807   00001E                     	ds	4
   808   000022                     ??___flmul:
   809                           
   810                           ; 1 bytes @ 0x21
   811   000022                     	ds	4
   812   000026                     ___flmul@sign:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x25
   816   000026                     	ds	1
   817   000027                     ___flmul@aexp:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x26
   821   000027                     	ds	1
   822   000028                     ___flmul@grs:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x27
   826   000028                     	ds	4
   827   00002C                     ___flmul@bexp:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x2B
   831   00002C                     	ds	1
   832   00002D                     ___flmul@prod:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x2C
   836   00002D                     	ds	4
   837   000031                     ___flmul@temp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x30
   841   000031                     	ds	2
   842   000033                     ?___flsub:
   843                           	callstack 0
   844   000033                     ___flge@ff1:
   845                           	callstack 0
   846   000033                     ___flsub@b:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x32
   850   000033                     	ds	4
   851   000037                     ___flge@ff2:
   852                           	callstack 0
   853   000037                     ___flsub@a:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x36
   857   000037                     	ds	4
   858   00003B                     ??___flge:
   859   00003B                     ?___fldiv:
   860                           	callstack 0
   861   00003B                     ___fldiv@b:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x3A
   865   00003B                     	ds	4
   866   00003F                     ___fldiv@a:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x3E
   870   00003F                     	ds	4
   871   000043                     ??___fldiv:
   872                           
   873                           ; 1 bytes @ 0x42
   874   000043                     	ds	4
   875   000047                     ___fldiv@rem:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x46
   879   000047                     	ds	4
   880   00004B                     ___fldiv@sign:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x4A
   884   00004B                     	ds	1
   885   00004C                     ___fldiv@new_exp:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x4B
   889   00004C                     	ds	2
   890   00004E                     ___fldiv@grs:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x4D
   894   00004E                     	ds	4
   895   000052                     ___fldiv@bexp:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x51
   899   000052                     	ds	1
   900   000053                     ___fldiv@aexp:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x52
   904   000053                     	ds	1
   905   000054                     ?_floorf:
   906                           	callstack 0
   907   000054                     ?_custom_floatmodulo:
   908                           	callstack 0
   909   000054                     custom_floatmodulo@x:
   910                           	callstack 0
   911   000054                     floorf@x:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x53
   915   000054                     	ds	4
   916   000058                     ??_floorf:
   917   000058                     custom_floatmodulo@y:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x57
   921   000058                     	ds	4
   922   00005C                     
   923                           ; 1 bytes @ 0x5B
   924   00005C                     	ds	2
   925   00005E                     ??_efgtoa:
   926                           
   927                           ; 1 bytes @ 0x5D
   928   00005E                     	ds	2
   929   000060                     
   930                           ; 1 bytes @ 0x5F
   931 ;;
   932 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   933 ;;
   934 ;; *************** function _main *****************
   935 ;; Defined at:
   936 ;;		line 14 in file "main.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;Total ram usage:        2 bytes
   955 ;; Hardware stack levels required when called: 9
   956 ;; This function calls:
   957 ;;		_color_cardCheck
   958 ;;		_color_click_init
   959 ;; This function is called by:
   960 ;;		Startup code after reset
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text0
   965   004370                     __ptext0:
   966                           	callstack 0
   967   004370                     _main:
   968                           	callstack 22
   969   004370                     
   970                           ;main.c: 16:     color_click_init();
   971   004370  ECFE  F020         	call	_color_click_init	;wreg free
   972   004374                     l5193:
   973                           
   974                           ;main.c: 17:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   975   004374  0E52               	movlw	82
   976   004376  0101               	movlb	1	; () banked
   977   004378  6FB0               	movwf	(??_main+1)& (0+255),b
   978   00437A  0E2B               	movlw	43
   979   00437C  6FAF               	movwf	??_main& (0+255),b
   980   00437E  0E00               	movlw	0
   981   004380                     u6547:
   982   004380  2EE8               	decfsz	wreg,f,c
   983   004382  D7FE               	bra	u6547
   984   004384  2FAF               	decfsz	??_main& (0+255),f,b
   985   004386  D7FC               	bra	u6547
   986   004388  2FB0               	decfsz	(??_main+1)& (0+255),f,b
   987   00438A  D7FA               	bra	u6547
   988   00438C  0000               	nop	
   989   00438E                     
   990                           ;main.c: 22:         color_cardCheck();
   991   00438E  ECE8  F00F         	call	_color_cardCheck	;wreg free
   992   004392  EFBA  F021         	goto	l5193
   993   004396  EF00  F000         	goto	start
   994   00439A                     __end_of_main:
   995                           	callstack 0
   996                           
   997 ;; *************** function _color_click_init *****************
   998 ;; Defined at:
   999 ;;		line 7 in file "color.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;Total ram usage:        1 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 3
  1020 ;; This function calls:
  1021 ;;		_I2C_2_Master_Init
  1022 ;;		_color_writetoaddr
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text1
  1029   0041FC                     __ptext1:
  1030                           	callstack 0
  1031   0041FC                     _color_click_init:
  1032                           	callstack 27
  1033   0041FC                     
  1034                           ;color.c: 10:     I2C_2_Master_Init();
  1035   0041FC  ECCD  F021         	call	_I2C_2_Master_Init	;wreg free
  1036   004200                     
  1037                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1038   004200  0E01               	movlw	1
  1039   004202  6E03               	movwf	color_writetoaddr@value^0,c
  1040   004204  0E00               	movlw	0
  1041   004206  EC1E  F022         	call	_color_writetoaddr
  1042   00420A                     
  1043                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1044   00420A  0E3F               	movlw	63
  1045   00420C  6E05               	movwf	??_color_click_init^0,c
  1046   00420E  0E55               	movlw	85
  1047   004210                     u6557:
  1048   004210  2EE8               	decfsz	wreg,f,c
  1049   004212  D7FE               	bra	u6557
  1050   004214  2E05               	decfsz	??_color_click_init^0,f,c
  1051   004216  D7FC               	bra	u6557
  1052   004218  0000               	nop	
  1053   00421A                     
  1054                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1055   00421A  0E03               	movlw	3
  1056   00421C  6E03               	movwf	color_writetoaddr@value^0,c
  1057   00421E  0E00               	movlw	0
  1058   004220  EC1E  F022         	call	_color_writetoaddr
  1059   004224                     
  1060                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1061   004224  0ED5               	movlw	213
  1062   004226  6E03               	movwf	color_writetoaddr@value^0,c
  1063   004228  0E01               	movlw	1
  1064   00422A  EC1E  F022         	call	_color_writetoaddr
  1065   00422E                     
  1066                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
  1067   00422E  9287               	bcf	135,1,c	;volatile
  1068   004230                     
  1069                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
  1070   004230  9881               	bcf	129,4,c	;volatile
  1071   004232                     
  1072                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
  1073   004232  9E86               	bcf	134,7,c	;volatile
  1074   004234                     
  1075                           ;color.c: 25:     TRISHbits.TRISH3 = 0;
  1076   004234  9688               	bcf	136,3,c	;volatile
  1077   004236                     
  1078                           ;color.c: 26:     LATHbits.LATH3 = 1;
  1079   004236  8680               	bsf	128,3,c	;volatile
  1080   004238                     
  1081                           ;color.c: 28:     LATGbits.LATG1 = 1;
  1082   004238  827F               	bsf	127,1,c	;volatile
  1083   00423A                     
  1084                           ;color.c: 29:     LATAbits.LATA4 = 1;
  1085   00423A  8879               	bsf	121,4,c	;volatile
  1086   00423C                     
  1087                           ;color.c: 30:     LATFbits.LATF7 = 1;
  1088   00423C  8E7E               	bsf	126,7,c	;volatile
  1089   00423E  0012               	return		;funcret
  1090   004240                     __end_of_color_click_init:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _color_writetoaddr *****************
  1094 ;; Defined at:
  1095 ;;		line 53 in file "color.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  address         1    wreg     unsigned char 
  1098 ;;  value           1    2[COMRAM] unsigned char 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  address         1    3[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1110 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 2
  1117 ;; This function calls:
  1118 ;;		_I2C_2_Master_Start
  1119 ;;		_I2C_2_Master_Stop
  1120 ;;		_I2C_2_Master_Write
  1121 ;; This function is called by:
  1122 ;;		_color_click_init
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text2
  1127   00443C                     __ptext2:
  1128                           	callstack 0
  1129   00443C                     _color_writetoaddr:
  1130                           	callstack 27
  1131                           
  1132                           ;incstack = 0
  1133                           ;color_writetoaddr@address stored from wreg
  1134   00443C  6E04               	movwf	color_writetoaddr@address^0,c
  1135   00443E                     
  1136                           ;color.c: 54:     I2C_2_Master_Start();
  1137   00443E  EC51  F022         	call	_I2C_2_Master_Start	;wreg free
  1138                           
  1139                           ;color.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  1140   004442  0E52               	movlw	82
  1141   004444  EC46  F022         	call	_I2C_2_Master_Write
  1142                           
  1143                           ;color.c: 56:     I2C_2_Master_Write(0x80 | address);
  1144   004448  5004               	movf	color_writetoaddr@address^0,w,c
  1145   00444A  0980               	iorlw	128
  1146   00444C  EC46  F022         	call	_I2C_2_Master_Write
  1147                           
  1148                           ;color.c: 57:     I2C_2_Master_Write(value);
  1149   004450  5003               	movf	color_writetoaddr@value^0,w,c
  1150   004452  EC46  F022         	call	_I2C_2_Master_Write
  1151                           
  1152                           ;color.c: 58:     I2C_2_Master_Stop();
  1153   004456  EC4C  F022         	call	_I2C_2_Master_Stop	;wreg free
  1154   00445A  0012               	return		;funcret
  1155   00445C                     __end_of_color_writetoaddr:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _I2C_2_Master_Init *****************
  1159 ;; Defined at:
  1160 ;;		line 4 in file "i2c.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_color_click_init
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text3
  1188   00439A                     __ptext3:
  1189                           	callstack 0
  1190   00439A                     _I2C_2_Master_Init:
  1191                           	callstack 29
  1192   00439A                     
  1193                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1194   00439A  010E               	movlb	14	; () banked
  1195   00439C  51D9               	movf	217,w,b	;volatile
  1196   00439E  0BF0               	andlw	-16
  1197   0043A0  0908               	iorlw	8
  1198   0043A2  6FD9               	movwf	217,b	;volatile
  1199   0043A4                     
  1200                           ; BSR set to: 14
  1201                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1202   0043A4  8BD9               	bsf	217,5,b	;volatile
  1203                           
  1204                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1205   0043A6  0E9F               	movlw	159
  1206   0043A8  6FD6               	movwf	214,b	;volatile
  1207   0043AA                     
  1208                           ; BSR set to: 14
  1209                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1210   0043AA  8A84               	bsf	132,5,c	;volatile
  1211   0043AC                     
  1212                           ; BSR set to: 14
  1213                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1214   0043AC  8C84               	bsf	132,6,c	;volatile
  1215   0043AE                     
  1216                           ; BSR set to: 14
  1217                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1218   0043AE  9BA7               	bcf	167,5,b	;volatile
  1219   0043B0                     
  1220                           ; BSR set to: 14
  1221                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1222   0043B0  9DA7               	bcf	167,6,b	;volatile
  1223                           
  1224                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1225   0043B2  0E1D               	movlw	29
  1226   0043B4  6F1D               	movwf	29,b	;volatile
  1227                           
  1228                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1229   0043B6  0E1E               	movlw	30
  1230   0043B8  6F1C               	movwf	28,b	;volatile
  1231                           
  1232                           ;i2c.c: 18:   RD5PPS=0x1C;
  1233   0043BA  0E1C               	movlw	28
  1234   0043BC  6F6F               	movwf	111,b	;volatile
  1235                           
  1236                           ;i2c.c: 19:   RD6PPS=0x1B;
  1237   0043BE  0E1B               	movlw	27
  1238   0043C0  6F70               	movwf	112,b	;volatile
  1239   0043C2                     
  1240                           ; BSR set to: 14
  1241   0043C2  0012               	return		;funcret
  1242   0043C4                     __end_of_I2C_2_Master_Init:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _color_cardCheck *****************
  1246 ;; Defined at:
  1247 ;;		line 187 in file "color.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  senddata       25  104[BANK0 ] unsigned char [25]
  1252 ;;  S               4  153[BANK0 ] float 
  1253 ;;  V               4  149[BANK0 ] float 
  1254 ;;  H               4  145[BANK0 ] float 
  1255 ;;  c               4  141[BANK0 ] float 
  1256 ;;  b               4  137[BANK0 ] float 
  1257 ;;  g               4  133[BANK0 ] float 
  1258 ;;  r               4  129[BANK0 ] float 
  1259 ;;  card_color      2    0        unsigned int 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2  112[None  ] unsigned int 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;      Locals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Totals:         0      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;Total ram usage:       55 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 8
  1276 ;; This function calls:
  1277 ;;		_RGB_to_HSV
  1278 ;;		___fleq
  1279 ;;		___xxtofl
  1280 ;;		_color_read_Blue
  1281 ;;		_color_read_Clear
  1282 ;;		_color_read_Green
  1283 ;;		_color_read_Red
  1284 ;;		_sendStringSerial4
  1285 ;;		_sprintf
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text4
  1292   001FD0                     __ptext4:
  1293                           	callstack 0
  1294   001FD0                     _color_cardCheck:
  1295                           	callstack 22
  1296   001FD0                     
  1297                           ;color.c: 190:     float r = color_read_Red();
  1298   001FD0  EC18  F020         	call	_color_read_Red	;wreg free
  1299   001FD4  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1300   001FD8  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1301   001FDC  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1302   001FDE  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1303   001FE0  0E00               	movlw	0
  1304   001FE2  ECA7  F01B         	call	___xxtofl
  1305   001FE6  C00C  F0E1         	movff	?___xxtofl,color_cardCheck@r
  1306   001FEA  C00D  F0E2         	movff	?___xxtofl+1,color_cardCheck@r+1
  1307   001FEE  C00E  F0E3         	movff	?___xxtofl+2,color_cardCheck@r+2
  1308   001FF2  C00F  F0E4         	movff	?___xxtofl+3,color_cardCheck@r+3
  1309                           
  1310                           ;color.c: 191:     float g = color_read_Green();
  1311   001FF6  EC40  F020         	call	_color_read_Green	;wreg free
  1312   001FFA  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1313   001FFE  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1314   002002  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1315   002004  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1316   002006  0E00               	movlw	0
  1317   002008  ECA7  F01B         	call	___xxtofl
  1318   00200C  C00C  F0E5         	movff	?___xxtofl,color_cardCheck@g
  1319   002010  C00D  F0E6         	movff	?___xxtofl+1,color_cardCheck@g+1
  1320   002014  C00E  F0E7         	movff	?___xxtofl+2,color_cardCheck@g+2
  1321   002018  C00F  F0E8         	movff	?___xxtofl+3,color_cardCheck@g+3
  1322                           
  1323                           ;color.c: 192:     float b = color_read_Blue();
  1324   00201C  EC90  F020         	call	_color_read_Blue	;wreg free
  1325   002020  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1326   002024  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1327   002028  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1328   00202A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1329   00202C  0E00               	movlw	0
  1330   00202E  ECA7  F01B         	call	___xxtofl
  1331   002032  C00C  F0E9         	movff	?___xxtofl,color_cardCheck@b
  1332   002036  C00D  F0EA         	movff	?___xxtofl+1,color_cardCheck@b+1
  1333   00203A  C00E  F0EB         	movff	?___xxtofl+2,color_cardCheck@b+2
  1334   00203E  C00F  F0EC         	movff	?___xxtofl+3,color_cardCheck@b+3
  1335                           
  1336                           ;color.c: 195:     float c = color_read_Clear();
  1337   002042  EC68  F020         	call	_color_read_Clear	;wreg free
  1338   002046  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1339   00204A  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1340   00204E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1341   002050  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1342   002052  0E00               	movlw	0
  1343   002054  ECA7  F01B         	call	___xxtofl
  1344   002058  C00C  F0ED         	movff	?___xxtofl,color_cardCheck@c
  1345   00205C  C00D  F0EE         	movff	?___xxtofl+1,color_cardCheck@c+1
  1346   002060  C00E  F0EF         	movff	?___xxtofl+2,color_cardCheck@c+2
  1347   002064  C00F  F0F0         	movff	?___xxtofl+3,color_cardCheck@c+3
  1348   002068                     
  1349                           ;color.c: 198:     float H;;color.c: 199:     float S;;color.c: 200:     float V;;color.
      +                          c: 202:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  1350   002068  C0E1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  1351   00206C  C0E2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  1352   002070  C0E3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  1353   002074  C0E4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  1354   002078  C0E5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  1355   00207C  C0E6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  1356   002080  C0E7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  1357   002084  C0E8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  1358   002088  C0E9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  1359   00208C  C0EA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  1360   002090  C0EB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  1361   002094  C0EC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  1362   002098  C0ED  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  1363   00209C  C0EE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  1364   0020A0  C0EF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  1365   0020A4  C0F0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  1366   0020A8  0EF1               	movlw	low color_cardCheck@H
  1367   0020AA  0100               	movlb	0	; () banked
  1368   0020AC  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  1369   0020AE  0EF9               	movlw	low color_cardCheck@S
  1370   0020B0  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  1371   0020B2  0EF5               	movlw	low color_cardCheck@V
  1372   0020B4  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  1373   0020B6  EC07  F00C         	call	_RGB_to_HSV	;wreg free
  1374   0020BA                     
  1375                           ;color.c: 210:     char senddata[25];;color.c: 211:     sprintf(senddata,"H:%.2f S: %.2f
      +                           V: %.2f ",H,S,V);
  1376   0020BA  0EC8               	movlw	low color_cardCheck@senddata
  1377   0020BC  0100               	movlb	0	; () banked
  1378   0020BE  6FAB               	movwf	sprintf@s& (0+255),b
  1379   0020C0  0E01               	movlw	low STR_1
  1380   0020C2  6FAC               	movwf	sprintf@fmt& (0+255),b
  1381   0020C4  C0F1  F0AD         	movff	color_cardCheck@H,?_sprintf+2
  1382   0020C8  C0F2  F0AE         	movff	color_cardCheck@H+1,?_sprintf+3
  1383   0020CC  C0F3  F0AF         	movff	color_cardCheck@H+2,?_sprintf+4
  1384   0020D0  C0F4  F0B0         	movff	color_cardCheck@H+3,?_sprintf+5
  1385   0020D4  C0F9  F0B1         	movff	color_cardCheck@S,?_sprintf+6
  1386   0020D8  C0FA  F0B2         	movff	color_cardCheck@S+1,?_sprintf+7
  1387   0020DC  C0FB  F0B3         	movff	color_cardCheck@S+2,?_sprintf+8
  1388   0020E0  C0FC  F0B4         	movff	color_cardCheck@S+3,?_sprintf+9
  1389   0020E4  C0F5  F0B5         	movff	color_cardCheck@V,?_sprintf+10
  1390   0020E8  C0F6  F0B6         	movff	color_cardCheck@V+1,?_sprintf+11
  1391   0020EC  C0F7  F0B7         	movff	color_cardCheck@V+2,?_sprintf+12
  1392   0020F0  C0F8  F0B8         	movff	color_cardCheck@V+3,?_sprintf+13
  1393   0020F4  EC80  F021         	call	_sprintf	;wreg free
  1394   0020F8                     
  1395                           ;color.c: 212:     sendStringSerial4(senddata);
  1396   0020F8  0EC8               	movlw	low color_cardCheck@senddata
  1397   0020FA  6E02               	movwf	sendStringSerial4@string^0,c
  1398   0020FC  ECE2  F021         	call	_sendStringSerial4	;wreg free
  1399   002100                     
  1400                           ;color.c: 213:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1401   002100  0E05               	movlw	5
  1402   002102  0100               	movlb	0	; () banked
  1403   002104  6FC7               	movwf	(??_color_cardCheck+1)& (0+255),b
  1404   002106  0E0F               	movlw	15
  1405   002108  6FC6               	movwf	??_color_cardCheck& (0+255),b
  1406   00210A  0EF1               	movlw	241
  1407   00210C                     u6567:
  1408   00210C  2EE8               	decfsz	wreg,f,c
  1409   00210E  D7FE               	bra	u6567
  1410   002110  2FC6               	decfsz	??_color_cardCheck& (0+255),f,b
  1411   002112  D7FC               	bra	u6567
  1412   002114  2FC7               	decfsz	(??_color_cardCheck+1)& (0+255),f,b
  1413   002116  D7FA               	bra	u6567
  1414   002118                     
  1415                           ;color.c: 222:     if (H && S && V) {card_color = 1;}
  1416   002118  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1417   00211C  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1418   002120  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1419   002124  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1420   002128  0E00               	movlw	0
  1421   00212A  6E05               	movwf	___fleq@ff2^0,c
  1422   00212C  0E00               	movlw	0
  1423   00212E  6E06               	movwf	(___fleq@ff2+1)^0,c
  1424   002130  0E00               	movlw	0
  1425   002132  6E07               	movwf	(___fleq@ff2+2)^0,c
  1426   002134  0E00               	movlw	0
  1427   002136  6E08               	movwf	(___fleq@ff2+3)^0,c
  1428   002138  EC3D  F01F         	call	___fleq	;wreg free
  1429   00213C  B0D8               	btfsc	status,0,c
  1430   00213E  EFA3  F010         	goto	u6271
  1431   002142  EFA5  F010         	goto	u6270
  1432   002146                     u6271:
  1433   002146  EFD9  F010         	goto	l5125
  1434   00214A                     u6270:
  1435   00214A  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1436   00214E  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1437   002152  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1438   002156  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1439   00215A  0E00               	movlw	0
  1440   00215C  6E05               	movwf	___fleq@ff2^0,c
  1441   00215E  0E00               	movlw	0
  1442   002160  6E06               	movwf	(___fleq@ff2+1)^0,c
  1443   002162  0E00               	movlw	0
  1444   002164  6E07               	movwf	(___fleq@ff2+2)^0,c
  1445   002166  0E00               	movlw	0
  1446   002168  6E08               	movwf	(___fleq@ff2+3)^0,c
  1447   00216A  EC3D  F01F         	call	___fleq	;wreg free
  1448   00216E  B0D8               	btfsc	status,0,c
  1449   002170  EFBC  F010         	goto	u6281
  1450   002174  EFBE  F010         	goto	u6280
  1451   002178                     u6281:
  1452   002178  EFD9  F010         	goto	l5125
  1453   00217C                     u6280:
  1454   00217C  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1455   002180  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1456   002184  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1457   002188  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1458   00218C  0E00               	movlw	0
  1459   00218E  6E05               	movwf	___fleq@ff2^0,c
  1460   002190  0E00               	movlw	0
  1461   002192  6E06               	movwf	(___fleq@ff2+1)^0,c
  1462   002194  0E00               	movlw	0
  1463   002196  6E07               	movwf	(___fleq@ff2+2)^0,c
  1464   002198  0E00               	movlw	0
  1465   00219A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1466   00219C  EC3D  F01F         	call	___fleq	;wreg free
  1467   0021A0  B0D8               	btfsc	status,0,c
  1468   0021A2  EFD5  F010         	goto	u6291
  1469   0021A6  EFD7  F010         	goto	u6290
  1470   0021AA                     u6291:
  1471   0021AA  EFD9  F010         	goto	l5125
  1472   0021AE                     u6290:
  1473   0021AE  EF41  F013         	goto	l130
  1474   0021B2                     l5125:
  1475   0021B2  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1476   0021B6  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1477   0021BA  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1478   0021BE  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1479   0021C2  0E00               	movlw	0
  1480   0021C4  6E05               	movwf	___fleq@ff2^0,c
  1481   0021C6  0E00               	movlw	0
  1482   0021C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1483   0021CA  0E00               	movlw	0
  1484   0021CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1485   0021CE  0E00               	movlw	0
  1486   0021D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1487   0021D2  EC3D  F01F         	call	___fleq	;wreg free
  1488   0021D6  B0D8               	btfsc	status,0,c
  1489   0021D8  EFF0  F010         	goto	u6301
  1490   0021DC  EFF2  F010         	goto	u6300
  1491   0021E0                     u6301:
  1492   0021E0  EF26  F011         	goto	l5133
  1493   0021E4                     u6300:
  1494   0021E4  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1495   0021E8  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1496   0021EC  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1497   0021F0  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1498   0021F4  0E00               	movlw	0
  1499   0021F6  6E05               	movwf	___fleq@ff2^0,c
  1500   0021F8  0E00               	movlw	0
  1501   0021FA  6E06               	movwf	(___fleq@ff2+1)^0,c
  1502   0021FC  0E00               	movlw	0
  1503   0021FE  6E07               	movwf	(___fleq@ff2+2)^0,c
  1504   002200  0E00               	movlw	0
  1505   002202  6E08               	movwf	(___fleq@ff2+3)^0,c
  1506   002204  EC3D  F01F         	call	___fleq	;wreg free
  1507   002208  B0D8               	btfsc	status,0,c
  1508   00220A  EF09  F011         	goto	u6311
  1509   00220E  EF0B  F011         	goto	u6310
  1510   002212                     u6311:
  1511   002212  EF26  F011         	goto	l5133
  1512   002216                     u6310:
  1513   002216  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1514   00221A  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1515   00221E  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1516   002222  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1517   002226  0E00               	movlw	0
  1518   002228  6E05               	movwf	___fleq@ff2^0,c
  1519   00222A  0E00               	movlw	0
  1520   00222C  6E06               	movwf	(___fleq@ff2+1)^0,c
  1521   00222E  0E00               	movlw	0
  1522   002230  6E07               	movwf	(___fleq@ff2+2)^0,c
  1523   002232  0E00               	movlw	0
  1524   002234  6E08               	movwf	(___fleq@ff2+3)^0,c
  1525   002236  EC3D  F01F         	call	___fleq	;wreg free
  1526   00223A  B0D8               	btfsc	status,0,c
  1527   00223C  EF22  F011         	goto	u6321
  1528   002240  EF24  F011         	goto	u6320
  1529   002244                     u6321:
  1530   002244  EF26  F011         	goto	l5133
  1531   002248                     u6320:
  1532   002248  EF41  F013         	goto	l130
  1533   00224C                     l5133:
  1534   00224C  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1535   002250  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1536   002254  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1537   002258  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1538   00225C  0E00               	movlw	0
  1539   00225E  6E05               	movwf	___fleq@ff2^0,c
  1540   002260  0E00               	movlw	0
  1541   002262  6E06               	movwf	(___fleq@ff2+1)^0,c
  1542   002264  0E00               	movlw	0
  1543   002266  6E07               	movwf	(___fleq@ff2+2)^0,c
  1544   002268  0E00               	movlw	0
  1545   00226A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1546   00226C  EC3D  F01F         	call	___fleq	;wreg free
  1547   002270  B0D8               	btfsc	status,0,c
  1548   002272  EF3D  F011         	goto	u6331
  1549   002276  EF3F  F011         	goto	u6330
  1550   00227A                     u6331:
  1551   00227A  EF73  F011         	goto	l5141
  1552   00227E                     u6330:
  1553   00227E  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1554   002282  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1555   002286  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1556   00228A  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1557   00228E  0E00               	movlw	0
  1558   002290  6E05               	movwf	___fleq@ff2^0,c
  1559   002292  0E00               	movlw	0
  1560   002294  6E06               	movwf	(___fleq@ff2+1)^0,c
  1561   002296  0E00               	movlw	0
  1562   002298  6E07               	movwf	(___fleq@ff2+2)^0,c
  1563   00229A  0E00               	movlw	0
  1564   00229C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1565   00229E  EC3D  F01F         	call	___fleq	;wreg free
  1566   0022A2  B0D8               	btfsc	status,0,c
  1567   0022A4  EF56  F011         	goto	u6341
  1568   0022A8  EF58  F011         	goto	u6340
  1569   0022AC                     u6341:
  1570   0022AC  EF73  F011         	goto	l5141
  1571   0022B0                     u6340:
  1572   0022B0  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1573   0022B4  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1574   0022B8  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1575   0022BC  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1576   0022C0  0E00               	movlw	0
  1577   0022C2  6E05               	movwf	___fleq@ff2^0,c
  1578   0022C4  0E00               	movlw	0
  1579   0022C6  6E06               	movwf	(___fleq@ff2+1)^0,c
  1580   0022C8  0E00               	movlw	0
  1581   0022CA  6E07               	movwf	(___fleq@ff2+2)^0,c
  1582   0022CC  0E00               	movlw	0
  1583   0022CE  6E08               	movwf	(___fleq@ff2+3)^0,c
  1584   0022D0  EC3D  F01F         	call	___fleq	;wreg free
  1585   0022D4  B0D8               	btfsc	status,0,c
  1586   0022D6  EF6F  F011         	goto	u6351
  1587   0022DA  EF71  F011         	goto	u6350
  1588   0022DE                     u6351:
  1589   0022DE  EF73  F011         	goto	l5141
  1590   0022E2                     u6350:
  1591   0022E2  EF41  F013         	goto	l130
  1592   0022E6                     l5141:
  1593   0022E6  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1594   0022EA  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1595   0022EE  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1596   0022F2  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1597   0022F6  0E00               	movlw	0
  1598   0022F8  6E05               	movwf	___fleq@ff2^0,c
  1599   0022FA  0E00               	movlw	0
  1600   0022FC  6E06               	movwf	(___fleq@ff2+1)^0,c
  1601   0022FE  0E00               	movlw	0
  1602   002300  6E07               	movwf	(___fleq@ff2+2)^0,c
  1603   002302  0E00               	movlw	0
  1604   002304  6E08               	movwf	(___fleq@ff2+3)^0,c
  1605   002306  EC3D  F01F         	call	___fleq	;wreg free
  1606   00230A  B0D8               	btfsc	status,0,c
  1607   00230C  EF8A  F011         	goto	u6361
  1608   002310  EF8C  F011         	goto	u6360
  1609   002314                     u6361:
  1610   002314  EFC0  F011         	goto	l5149
  1611   002318                     u6360:
  1612   002318  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1613   00231C  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1614   002320  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1615   002324  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1616   002328  0E00               	movlw	0
  1617   00232A  6E05               	movwf	___fleq@ff2^0,c
  1618   00232C  0E00               	movlw	0
  1619   00232E  6E06               	movwf	(___fleq@ff2+1)^0,c
  1620   002330  0E00               	movlw	0
  1621   002332  6E07               	movwf	(___fleq@ff2+2)^0,c
  1622   002334  0E00               	movlw	0
  1623   002336  6E08               	movwf	(___fleq@ff2+3)^0,c
  1624   002338  EC3D  F01F         	call	___fleq	;wreg free
  1625   00233C  B0D8               	btfsc	status,0,c
  1626   00233E  EFA3  F011         	goto	u6371
  1627   002342  EFA5  F011         	goto	u6370
  1628   002346                     u6371:
  1629   002346  EFC0  F011         	goto	l5149
  1630   00234A                     u6370:
  1631   00234A  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1632   00234E  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1633   002352  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1634   002356  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1635   00235A  0E00               	movlw	0
  1636   00235C  6E05               	movwf	___fleq@ff2^0,c
  1637   00235E  0E00               	movlw	0
  1638   002360  6E06               	movwf	(___fleq@ff2+1)^0,c
  1639   002362  0E00               	movlw	0
  1640   002364  6E07               	movwf	(___fleq@ff2+2)^0,c
  1641   002366  0E00               	movlw	0
  1642   002368  6E08               	movwf	(___fleq@ff2+3)^0,c
  1643   00236A  EC3D  F01F         	call	___fleq	;wreg free
  1644   00236E  B0D8               	btfsc	status,0,c
  1645   002370  EFBC  F011         	goto	u6381
  1646   002374  EFBE  F011         	goto	u6380
  1647   002378                     u6381:
  1648   002378  EFC0  F011         	goto	l5149
  1649   00237C                     u6380:
  1650   00237C  EF41  F013         	goto	l130
  1651   002380                     l5149:
  1652   002380  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1653   002384  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1654   002388  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1655   00238C  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1656   002390  0E00               	movlw	0
  1657   002392  6E05               	movwf	___fleq@ff2^0,c
  1658   002394  0E00               	movlw	0
  1659   002396  6E06               	movwf	(___fleq@ff2+1)^0,c
  1660   002398  0E00               	movlw	0
  1661   00239A  6E07               	movwf	(___fleq@ff2+2)^0,c
  1662   00239C  0E00               	movlw	0
  1663   00239E  6E08               	movwf	(___fleq@ff2+3)^0,c
  1664   0023A0  EC3D  F01F         	call	___fleq	;wreg free
  1665   0023A4  B0D8               	btfsc	status,0,c
  1666   0023A6  EFD7  F011         	goto	u6391
  1667   0023AA  EFD9  F011         	goto	u6390
  1668   0023AE                     u6391:
  1669   0023AE  EF0D  F012         	goto	l5157
  1670   0023B2                     u6390:
  1671   0023B2  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1672   0023B6  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1673   0023BA  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1674   0023BE  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1675   0023C2  0E00               	movlw	0
  1676   0023C4  6E05               	movwf	___fleq@ff2^0,c
  1677   0023C6  0E00               	movlw	0
  1678   0023C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1679   0023CA  0E00               	movlw	0
  1680   0023CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1681   0023CE  0E00               	movlw	0
  1682   0023D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1683   0023D2  EC3D  F01F         	call	___fleq	;wreg free
  1684   0023D6  B0D8               	btfsc	status,0,c
  1685   0023D8  EFF0  F011         	goto	u6401
  1686   0023DC  EFF2  F011         	goto	u6400
  1687   0023E0                     u6401:
  1688   0023E0  EF0D  F012         	goto	l5157
  1689   0023E4                     u6400:
  1690   0023E4  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1691   0023E8  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1692   0023EC  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1693   0023F0  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1694   0023F4  0E00               	movlw	0
  1695   0023F6  6E05               	movwf	___fleq@ff2^0,c
  1696   0023F8  0E00               	movlw	0
  1697   0023FA  6E06               	movwf	(___fleq@ff2+1)^0,c
  1698   0023FC  0E00               	movlw	0
  1699   0023FE  6E07               	movwf	(___fleq@ff2+2)^0,c
  1700   002400  0E00               	movlw	0
  1701   002402  6E08               	movwf	(___fleq@ff2+3)^0,c
  1702   002404  EC3D  F01F         	call	___fleq	;wreg free
  1703   002408  B0D8               	btfsc	status,0,c
  1704   00240A  EF09  F012         	goto	u6411
  1705   00240E  EF0B  F012         	goto	u6410
  1706   002412                     u6411:
  1707   002412  EF0D  F012         	goto	l5157
  1708   002416                     u6410:
  1709   002416  EF41  F013         	goto	l130
  1710   00241A                     l5157:
  1711   00241A  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1712   00241E  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1713   002422  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1714   002426  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1715   00242A  0E00               	movlw	0
  1716   00242C  6E05               	movwf	___fleq@ff2^0,c
  1717   00242E  0E00               	movlw	0
  1718   002430  6E06               	movwf	(___fleq@ff2+1)^0,c
  1719   002432  0E00               	movlw	0
  1720   002434  6E07               	movwf	(___fleq@ff2+2)^0,c
  1721   002436  0E00               	movlw	0
  1722   002438  6E08               	movwf	(___fleq@ff2+3)^0,c
  1723   00243A  EC3D  F01F         	call	___fleq	;wreg free
  1724   00243E  B0D8               	btfsc	status,0,c
  1725   002440  EF24  F012         	goto	u6421
  1726   002444  EF26  F012         	goto	u6420
  1727   002448                     u6421:
  1728   002448  EF5A  F012         	goto	l5165
  1729   00244C                     u6420:
  1730   00244C  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1731   002450  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1732   002454  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1733   002458  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1734   00245C  0E00               	movlw	0
  1735   00245E  6E05               	movwf	___fleq@ff2^0,c
  1736   002460  0E00               	movlw	0
  1737   002462  6E06               	movwf	(___fleq@ff2+1)^0,c
  1738   002464  0E00               	movlw	0
  1739   002466  6E07               	movwf	(___fleq@ff2+2)^0,c
  1740   002468  0E00               	movlw	0
  1741   00246A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1742   00246C  EC3D  F01F         	call	___fleq	;wreg free
  1743   002470  B0D8               	btfsc	status,0,c
  1744   002472  EF3D  F012         	goto	u6431
  1745   002476  EF3F  F012         	goto	u6430
  1746   00247A                     u6431:
  1747   00247A  EF5A  F012         	goto	l5165
  1748   00247E                     u6430:
  1749   00247E  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1750   002482  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1751   002486  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1752   00248A  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1753   00248E  0E00               	movlw	0
  1754   002490  6E05               	movwf	___fleq@ff2^0,c
  1755   002492  0E00               	movlw	0
  1756   002494  6E06               	movwf	(___fleq@ff2+1)^0,c
  1757   002496  0E00               	movlw	0
  1758   002498  6E07               	movwf	(___fleq@ff2+2)^0,c
  1759   00249A  0E00               	movlw	0
  1760   00249C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1761   00249E  EC3D  F01F         	call	___fleq	;wreg free
  1762   0024A2  B0D8               	btfsc	status,0,c
  1763   0024A4  EF56  F012         	goto	u6441
  1764   0024A8  EF58  F012         	goto	u6440
  1765   0024AC                     u6441:
  1766   0024AC  EF5A  F012         	goto	l5165
  1767   0024B0                     u6440:
  1768   0024B0  EF41  F013         	goto	l130
  1769   0024B4                     l5165:
  1770   0024B4  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1771   0024B8  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1772   0024BC  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1773   0024C0  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1774   0024C4  0E00               	movlw	0
  1775   0024C6  6E05               	movwf	___fleq@ff2^0,c
  1776   0024C8  0E00               	movlw	0
  1777   0024CA  6E06               	movwf	(___fleq@ff2+1)^0,c
  1778   0024CC  0E00               	movlw	0
  1779   0024CE  6E07               	movwf	(___fleq@ff2+2)^0,c
  1780   0024D0  0E00               	movlw	0
  1781   0024D2  6E08               	movwf	(___fleq@ff2+3)^0,c
  1782   0024D4  EC3D  F01F         	call	___fleq	;wreg free
  1783   0024D8  B0D8               	btfsc	status,0,c
  1784   0024DA  EF71  F012         	goto	u6451
  1785   0024DE  EF73  F012         	goto	u6450
  1786   0024E2                     u6451:
  1787   0024E2  EFA7  F012         	goto	l5173
  1788   0024E6                     u6450:
  1789   0024E6  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1790   0024EA  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1791   0024EE  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1792   0024F2  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1793   0024F6  0E00               	movlw	0
  1794   0024F8  6E05               	movwf	___fleq@ff2^0,c
  1795   0024FA  0E00               	movlw	0
  1796   0024FC  6E06               	movwf	(___fleq@ff2+1)^0,c
  1797   0024FE  0E00               	movlw	0
  1798   002500  6E07               	movwf	(___fleq@ff2+2)^0,c
  1799   002502  0E00               	movlw	0
  1800   002504  6E08               	movwf	(___fleq@ff2+3)^0,c
  1801   002506  EC3D  F01F         	call	___fleq	;wreg free
  1802   00250A  B0D8               	btfsc	status,0,c
  1803   00250C  EF8A  F012         	goto	u6461
  1804   002510  EF8C  F012         	goto	u6460
  1805   002514                     u6461:
  1806   002514  EFA7  F012         	goto	l5173
  1807   002518                     u6460:
  1808   002518  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1809   00251C  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1810   002520  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1811   002524  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1812   002528  0E00               	movlw	0
  1813   00252A  6E05               	movwf	___fleq@ff2^0,c
  1814   00252C  0E00               	movlw	0
  1815   00252E  6E06               	movwf	(___fleq@ff2+1)^0,c
  1816   002530  0E00               	movlw	0
  1817   002532  6E07               	movwf	(___fleq@ff2+2)^0,c
  1818   002534  0E00               	movlw	0
  1819   002536  6E08               	movwf	(___fleq@ff2+3)^0,c
  1820   002538  EC3D  F01F         	call	___fleq	;wreg free
  1821   00253C  B0D8               	btfsc	status,0,c
  1822   00253E  EFA3  F012         	goto	u6471
  1823   002542  EFA5  F012         	goto	u6470
  1824   002546                     u6471:
  1825   002546  EFA7  F012         	goto	l5173
  1826   00254A                     u6470:
  1827   00254A  EF41  F013         	goto	l130
  1828   00254E                     l5173:
  1829   00254E  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1830   002552  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1831   002556  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1832   00255A  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1833   00255E  0E00               	movlw	0
  1834   002560  6E05               	movwf	___fleq@ff2^0,c
  1835   002562  0E00               	movlw	0
  1836   002564  6E06               	movwf	(___fleq@ff2+1)^0,c
  1837   002566  0E00               	movlw	0
  1838   002568  6E07               	movwf	(___fleq@ff2+2)^0,c
  1839   00256A  0E00               	movlw	0
  1840   00256C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1841   00256E  EC3D  F01F         	call	___fleq	;wreg free
  1842   002572  B0D8               	btfsc	status,0,c
  1843   002574  EFBE  F012         	goto	u6481
  1844   002578  EFC0  F012         	goto	u6480
  1845   00257C                     u6481:
  1846   00257C  EFF4  F012         	goto	l5181
  1847   002580                     u6480:
  1848   002580  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1849   002584  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1850   002588  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1851   00258C  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1852   002590  0E00               	movlw	0
  1853   002592  6E05               	movwf	___fleq@ff2^0,c
  1854   002594  0E00               	movlw	0
  1855   002596  6E06               	movwf	(___fleq@ff2+1)^0,c
  1856   002598  0E00               	movlw	0
  1857   00259A  6E07               	movwf	(___fleq@ff2+2)^0,c
  1858   00259C  0E00               	movlw	0
  1859   00259E  6E08               	movwf	(___fleq@ff2+3)^0,c
  1860   0025A0  EC3D  F01F         	call	___fleq	;wreg free
  1861   0025A4  B0D8               	btfsc	status,0,c
  1862   0025A6  EFD7  F012         	goto	u6491
  1863   0025AA  EFD9  F012         	goto	u6490
  1864   0025AE                     u6491:
  1865   0025AE  EFF4  F012         	goto	l5181
  1866   0025B2                     u6490:
  1867   0025B2  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1868   0025B6  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1869   0025BA  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1870   0025BE  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1871   0025C2  0E00               	movlw	0
  1872   0025C4  6E05               	movwf	___fleq@ff2^0,c
  1873   0025C6  0E00               	movlw	0
  1874   0025C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1875   0025CA  0E00               	movlw	0
  1876   0025CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1877   0025CE  0E00               	movlw	0
  1878   0025D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1879   0025D2  EC3D  F01F         	call	___fleq	;wreg free
  1880   0025D6  B0D8               	btfsc	status,0,c
  1881   0025D8  EFF0  F012         	goto	u6501
  1882   0025DC  EFF2  F012         	goto	u6500
  1883   0025E0                     u6501:
  1884   0025E0  EFF4  F012         	goto	l5181
  1885   0025E4                     u6500:
  1886   0025E4  EF41  F013         	goto	l130
  1887   0025E8                     l5181:
  1888   0025E8  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1889   0025EC  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1890   0025F0  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1891   0025F4  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1892   0025F8  0E00               	movlw	0
  1893   0025FA  6E05               	movwf	___fleq@ff2^0,c
  1894   0025FC  0E00               	movlw	0
  1895   0025FE  6E06               	movwf	(___fleq@ff2+1)^0,c
  1896   002600  0E00               	movlw	0
  1897   002602  6E07               	movwf	(___fleq@ff2+2)^0,c
  1898   002604  0E00               	movlw	0
  1899   002606  6E08               	movwf	(___fleq@ff2+3)^0,c
  1900   002608  EC3D  F01F         	call	___fleq	;wreg free
  1901   00260C  B0D8               	btfsc	status,0,c
  1902   00260E  EF0B  F013         	goto	u6511
  1903   002612  EF0D  F013         	goto	u6510
  1904   002616                     u6511:
  1905   002616  EF41  F013         	goto	l124
  1906   00261A                     u6510:
  1907   00261A  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1908   00261E  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1909   002622  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1910   002626  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1911   00262A  0E00               	movlw	0
  1912   00262C  6E05               	movwf	___fleq@ff2^0,c
  1913   00262E  0E00               	movlw	0
  1914   002630  6E06               	movwf	(___fleq@ff2+1)^0,c
  1915   002632  0E00               	movlw	0
  1916   002634  6E07               	movwf	(___fleq@ff2+2)^0,c
  1917   002636  0E00               	movlw	0
  1918   002638  6E08               	movwf	(___fleq@ff2+3)^0,c
  1919   00263A  EC3D  F01F         	call	___fleq	;wreg free
  1920   00263E  B0D8               	btfsc	status,0,c
  1921   002640  EF24  F013         	goto	u6521
  1922   002644  EF26  F013         	goto	u6520
  1923   002648                     u6521:
  1924   002648  EF41  F013         	goto	l124
  1925   00264C                     u6520:
  1926   00264C  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1927   002650  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1928   002654  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1929   002658  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1930   00265C  0E00               	movlw	0
  1931   00265E  6E05               	movwf	___fleq@ff2^0,c
  1932   002660  0E00               	movlw	0
  1933   002662  6E06               	movwf	(___fleq@ff2+1)^0,c
  1934   002664  0E00               	movlw	0
  1935   002666  6E07               	movwf	(___fleq@ff2+2)^0,c
  1936   002668  0E00               	movlw	0
  1937   00266A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1938   00266C  EC3D  F01F         	call	___fleq	;wreg free
  1939   002670  B0D8               	btfsc	status,0,c
  1940   002672  EF3D  F013         	goto	u6531
  1941   002676  EF3F  F013         	goto	u6530
  1942   00267A                     u6531:
  1943   00267A  EF41  F013         	goto	l124
  1944   00267E                     u6530:
  1945   00267E  EF41  F013         	goto	l130
  1946   002682                     l124:
  1947   002682                     l130:
  1948   002682  0012               	return		;funcret
  1949   002684                     __end_of_color_cardCheck:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function _sprintf *****************
  1953 ;; Defined at:
  1954 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  s               1   75[BANK0 ] PTR unsigned char 
  1957 ;;		 -> color_cardCheck@senddata(25), 
  1958 ;;  fmt             1   76[BANK0 ] PTR const unsigned char 
  1959 ;;		 -> STR_1(24), 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  f              12   90[BANK0 ] struct _IO_FILE
  1962 ;;  ret             2    0        int 
  1963 ;;  ap              1   89[BANK0 ] PTR void [1]
  1964 ;;		 -> ?_sprintf(2), 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2   75[BANK0 ] int 
  1967 ;; Registers used:
  1968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1974 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1975 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;Total ram usage:       27 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 7
  1981 ;; This function calls:
  1982 ;;		_vfprintf
  1983 ;; This function is called by:
  1984 ;;		_color_cardCheck
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text5
  1989   004300                     __ptext5:
  1990                           	callstack 0
  1991   004300                     _sprintf:
  1992                           	callstack 22
  1993   004300  0EAD               	movlw	low (?_sprintf+2)
  1994   004302  0100               	movlb	0	; () banked
  1995   004304  6FB9               	movwf	sprintf@ap& (0+255),b
  1996   004306  C0AB  F0BA         	movff	sprintf@s,sprintf@f
  1997   00430A                     
  1998                           ; BSR set to: 0
  1999   00430A  0E00               	movlw	0
  2000   00430C  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  2001   00430E  0E00               	movlw	0
  2002   004310  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  2003   004312                     
  2004                           ; BSR set to: 0
  2005   004312  0E00               	movlw	0
  2006   004314  6FC5               	movwf	(sprintf@f+11)& (0+255),b
  2007   004316  0E00               	movlw	0
  2008   004318  6FC4               	movwf	(sprintf@f+10)& (0+255),b
  2009   00431A                     
  2010                           ; BSR set to: 0
  2011   00431A  0EBA               	movlw	low sprintf@f
  2012   00431C  6FA7               	movwf	vfprintf@fp& (0+255),b
  2013   00431E  C0AC  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  2014   004322  0EB9               	movlw	low sprintf@ap
  2015   004324  6FA9               	movwf	vfprintf@ap& (0+255),b
  2016   004326  ECB8  F020         	call	_vfprintf	;wreg free
  2017   00432A  0100               	movlb	0	; () banked
  2018   00432C  51AB               	movf	sprintf@s& (0+255),w,b
  2019   00432E  25BD               	addwf	(sprintf@f+3)& (0+255),w,b
  2020   004330  6ED9               	movwf	fsr2l,c
  2021   004332  6ADA               	clrf	fsr2h,c
  2022   004334  6ADF               	clrf	indf2,c
  2023   004336                     
  2024                           ; BSR set to: 0
  2025   004336  0012               	return		;funcret
  2026   004338                     __end_of_sprintf:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _vfprintf *****************
  2030 ;; Defined at:
  2031 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  2034 ;;		 -> sprintf@f(12), 
  2035 ;;  fmt             1   72[BANK0 ] PTR const unsigned char 
  2036 ;;		 -> STR_1(24), 
  2037 ;;  ap              1   73[BANK0 ] PTR PTR void 
  2038 ;;		 -> sprintf@ap(1), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  cfmt            1   74[BANK0 ] PTR unsigned char 
  2041 ;;		 -> STR_1(24), 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  2   71[BANK0 ] int 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2051 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2054 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;Total ram usage:        4 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 6
  2058 ;; This function calls:
  2059 ;;		_vfpfcnvrt
  2060 ;; This function is called by:
  2061 ;;		_sprintf
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text6
  2066   004170                     __ptext6:
  2067                           	callstack 0
  2068   004170                     _vfprintf:
  2069                           	callstack 22
  2070   004170                     
  2071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2072   004170  C0A8  F0AA         	movff	vfprintf@fmt,vfprintf@cfmt
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2075   004174  EFC5  F020         	goto	l5027
  2076   004178                     l5025:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2079   004178  C0A7  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2080   00417C  0EAA               	movlw	low vfprintf@cfmt
  2081   00417E  0100               	movlb	0	; () banked
  2082   004180  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2083   004182  C0A9  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2084   004186  EC84  F019         	call	_vfpfcnvrt	;wreg free
  2085   00418A                     l5027:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2088   00418A  C0AA  FFF6         	movff	vfprintf@cfmt,tblptrl
  2089   00418E                     	if	1	;There is more than 1 active tblptr byte
  2090   00418E  0E0E               	movlw	high __smallconst
  2091   004190  6EF7               	movwf	tblptrh,c
  2092   004192                     	endif
  2093   004192                     	if	0	;tblptru may be non-zero
  2094   004192                     	endif
  2095   004192                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2096   004192  0E00               	movlw	low (__smallconst shr (0+16))
  2097   004194  6EF8               	movwf	tblptru,c
  2098   004196                     	endif
  2099   004196  0008               	tblrd		*
  2100   004198  50F5               	movf	tablat,w,c
  2101   00419A  0900               	iorlw	0
  2102   00419C  A4D8               	btfss	status,2,c
  2103   00419E  EFD3  F020         	goto	u6141
  2104   0041A2  EFD5  F020         	goto	u6140
  2105   0041A6                     u6141:
  2106   0041A6  EFBC  F020         	goto	l5025
  2107   0041AA                     u6140:
  2108   0041AA                     
  2109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2110   0041AA  0E00               	movlw	0
  2111   0041AC  0100               	movlb	0	; () banked
  2112   0041AE  6FA8               	movwf	(?_vfprintf+1)& (0+255),b
  2113   0041B0  0E00               	movlw	0
  2114   0041B2  6FA7               	movwf	?_vfprintf& (0+255),b
  2115   0041B4                     
  2116                           ; BSR set to: 0
  2117   0041B4  0012               	return		;funcret
  2118   0041B6                     __end_of_vfprintf:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _vfpfcnvrt *****************
  2122 ;; Defined at:
  2123 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  2126 ;;		 -> sprintf@f(12), 
  2127 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  2128 ;;		 -> vfprintf@cfmt(1), 
  2129 ;;  ap              1   62[BANK0 ] PTR PTR void 
  2130 ;;		 -> sprintf@ap(1), 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  convarg         4   65[BANK0 ] struct .
  2133 ;;  cp              1   70[BANK0 ] PTR unsigned char 
  2134 ;;		 -> STR_1(24), 
  2135 ;;  c               1   69[BANK0 ] unsigned char 
  2136 ;;  done            1    0        _Bool 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2146 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2148 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;Total ram usage:       11 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 5
  2153 ;; This function calls:
  2154 ;;		_efgtoa
  2155 ;;		_fputc
  2156 ;;		_read_prec_or_width
  2157 ;; This function is called by:
  2158 ;;		_vfprintf
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text7
  2163   003308                     __ptext7:
  2164                           	callstack 0
  2165   003308                     _vfpfcnvrt:
  2166                           	callstack 22
  2167   003308                     
  2168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2169   003308  0100               	movlb	0	; () banked
  2170   00330A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2171   00330C  6ED9               	movwf	fsr2l,c
  2172   00330E  6ADA               	clrf	fsr2h,c
  2173   003310  CFDF FFF6          	movff	indf2,tblptrl
  2174   003314                     	if	1	;There is more than 1 active tblptr byte
  2175   003314  0E0E               	movlw	high __smallconst
  2176   003316  6EF7               	movwf	tblptrh,c
  2177   003318                     	endif
  2178   003318                     	if	0	;tblptru may be non-zero
  2179   003318                     	endif
  2180   003318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2181   003318  0E00               	movlw	low (__smallconst shr (0+16))
  2182   00331A  6EF8               	movwf	tblptru,c
  2183   00331C                     	endif
  2184   00331C  0008               	tblrd		*
  2185   00331E  50F5               	movf	tablat,w,c
  2186   003320  0A25               	xorlw	37
  2187   003322  A4D8               	btfss	status,2,c
  2188   003324  EF96  F019         	goto	u6101
  2189   003328  EF98  F019         	goto	u6100
  2190   00332C                     u6101:
  2191   00332C  EF88  F01A         	goto	l4991
  2192   003330                     u6100:
  2193   003330                     
  2194                           ; BSR set to: 0
  2195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2196   003330  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2197   003332  6ED9               	movwf	fsr2l,c
  2198   003334  6ADA               	clrf	fsr2h,c
  2199   003336  2ADF               	incf	indf2,f,c
  2200   003338                     
  2201                           ; BSR set to: 0
  2202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2203   003338  0E00               	movlw	0
  2204   00333A  0101               	movlb	1	; () banked
  2205   00333C  6F59               	movwf	(_width+1)& (0+255),b
  2206   00333E  0E00               	movlw	0
  2207   003340  6F58               	movwf	_width& (0+255),b
  2208   003342  C158  F15C         	movff	_width,_flags
  2209   003346                     
  2210                           ; BSR set to: 1
  2211                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2212   003346  695A               	setf	_prec& (0+255),b
  2213   003348  695B               	setf	(_prec+1)& (0+255),b
  2214   00334A                     
  2215                           ; BSR set to: 1
  2216                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2217   00334A  0100               	movlb	0	; () banked
  2218   00334C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2219   00334E  6ED9               	movwf	fsr2l,c
  2220   003350  6ADA               	clrf	fsr2h,c
  2221   003352  CFDF FFF6          	movff	indf2,tblptrl
  2222   003356                     	if	1	;There is more than 1 active tblptr byte
  2223   003356  0E0E               	movlw	high __smallconst
  2224   003358  6EF7               	movwf	tblptrh,c
  2225   00335A                     	endif
  2226   00335A                     	if	0	;tblptru may be non-zero
  2227   00335A                     	endif
  2228   00335A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2229   00335A  0E00               	movlw	low (__smallconst shr (0+16))
  2230   00335C  6EF8               	movwf	tblptru,c
  2231   00335E                     	endif
  2232   00335E  0008               	tblrd		*
  2233   003360  50F5               	movf	tablat,w,c
  2234   003362  0A2E               	xorlw	46
  2235   003364  A4D8               	btfss	status,2,c
  2236   003366  EFB7  F019         	goto	u6111
  2237   00336A  EFB9  F019         	goto	u6110
  2238   00336E                     u6111:
  2239   00336E  EFC7  F019         	goto	l4953
  2240   003372                     u6110:
  2241   003372                     
  2242                           ; BSR set to: 0
  2243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2244   003372  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2245   003374  6ED9               	movwf	fsr2l,c
  2246   003376  6ADA               	clrf	fsr2h,c
  2247   003378  2ADF               	incf	indf2,f,c
  2248   00337A                     
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2251   00337A  C09D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2252   00337E  C09E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2253   003382  EC91  F01E         	call	_read_prec_or_width	;wreg free
  2254   003386  C007  F15A         	movff	?_read_prec_or_width,_prec
  2255   00338A  C008  F15B         	movff	?_read_prec_or_width+1,_prec+1
  2256   00338E                     l4953:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2259   00338E  0100               	movlb	0	; () banked
  2260   003390  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2261   003392  6ED9               	movwf	fsr2l,c
  2262   003394  6ADA               	clrf	fsr2h,c
  2263   003396  50DF               	movf	indf2,w,c
  2264   003398  6FA6               	movwf	vfpfcnvrt@cp& (0+255),b
  2265   00339A                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2268   00339A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2269   00339E                     	if	1	;There is more than 1 active tblptr byte
  2270   00339E  0E0E               	movlw	high __smallconst
  2271   0033A0  6EF7               	movwf	tblptrh,c
  2272   0033A2                     	endif
  2273   0033A2                     	if	0	;tblptru may be non-zero
  2274   0033A2                     	endif
  2275   0033A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2276   0033A2  0E00               	movlw	low (__smallconst shr (0+16))
  2277   0033A4  6EF8               	movwf	tblptru,c
  2278   0033A6                     	endif
  2279   0033A6  0008               	tblrd		*
  2280   0033A8  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2283   0033AC  EFE3  F019         	goto	l4965
  2284   0033B0                     l4957:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2288   0033B0  2BA6               	incf	vfpfcnvrt@cp& (0+255),f,b
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  2291   0033B2  EFFC  F019         	goto	l4967
  2292   0033B6                     l4959:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2296   0033B6  0E6C               	movlw	108
  2297   0033B8  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2300   0033BA  EFFC  F019         	goto	l4967
  2301   0033BE                     l4961:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2305   0033BE  0E00               	movlw	0
  2306   0033C0  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2309   0033C2  EFFC  F019         	goto	l4967
  2310   0033C6                     l4965:
  2311                           
  2312                           ; BSR set to: 0
  2313   0033C6  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2314   0033C8  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  2315   0033CA  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2316                           
  2317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2318                           ; Switch size 1, requested type "simple"
  2319                           ; Number of cases is 1, Range of values is 0 to 0
  2320                           ; switch strategies available:
  2321                           ; Name         Instructions Cycles
  2322                           ; simple_byte            4     3 (average)
  2323                           ;	Chosen strategy is simple_byte
  2324   0033CC  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2325   0033CE  0A00               	xorlw	0	; case 0
  2326   0033D0  B4D8               	btfsc	status,2,c
  2327   0033D2  EFED  F019         	goto	l5259
  2328   0033D6  EFDF  F019         	goto	l4961
  2329   0033DA                     l5259:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 3, Range of values is 76 to 108
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte           10     6 (average)
  2337                           ;	Chosen strategy is simple_byte
  2338   0033DA  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2339   0033DC  0A4C               	xorlw	76	; case 76
  2340   0033DE  B4D8               	btfsc	status,2,c
  2341   0033E0  EFD8  F019         	goto	l4957
  2342   0033E4  0A2A               	xorlw	42	; case 102
  2343   0033E6  B4D8               	btfsc	status,2,c
  2344   0033E8  EFDB  F019         	goto	l4959
  2345   0033EC  0A0A               	xorlw	10	; case 108
  2346   0033EE  B4D8               	btfsc	status,2,c
  2347   0033F0  EFD8  F019         	goto	l4957
  2348   0033F4  EFDF  F019         	goto	l4961
  2349   0033F8                     l4967:
  2350                           
  2351                           ; BSR set to: 0
  2352   0033F8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2353   0033FC                     	if	1	;There is more than 1 active tblptr byte
  2354   0033FC  0E0E               	movlw	high __smallconst
  2355   0033FE  6EF7               	movwf	tblptrh,c
  2356   003400                     	endif
  2357   003400                     	if	0	;tblptru may be non-zero
  2358   003400                     	endif
  2359   003400                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2360   003400  0E00               	movlw	low (__smallconst shr (0+16))
  2361   003402  6EF8               	movwf	tblptru,c
  2362   003404                     	endif
  2363   003404  0008               	tblrd		*
  2364   003406  50F5               	movf	tablat,w,c
  2365   003408  0A66               	xorlw	102
  2366   00340A  A4D8               	btfss	status,2,c
  2367   00340C  EF0A  F01A         	goto	u6121
  2368   003410  EF0C  F01A         	goto	u6120
  2369   003414                     u6121:
  2370   003414  EF81  F01A         	goto	l4987
  2371   003418                     u6120:
  2372   003418  EF36  F01A         	goto	l4975
  2373   00341C                     l4969:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2377   00341C  519E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2378   00341E  6ED9               	movwf	fsr2l,c
  2379   003420  6ADA               	clrf	fsr2h,c
  2380   003422  CFDF F09F          	movff	indf2,??_vfpfcnvrt
  2381   003426  0E04               	movlw	4
  2382   003428  26DF               	addwf	indf2,f,c
  2383   00342A  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2384   00342C  6ED9               	movwf	fsr2l,c
  2385   00342E  6ADA               	clrf	fsr2h,c
  2386   003430  CFDE F0A1          	movff	postinc2,vfpfcnvrt@convarg
  2387   003434  CFDE F0A2          	movff	postinc2,vfpfcnvrt@convarg+1
  2388   003438  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg+2
  2389   00343C  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+3
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2392   003440  EF4B  F01A         	goto	l4977
  2393   003444                     l4971:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2397   003444  519E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2398   003446  6ED9               	movwf	fsr2l,c
  2399   003448  6ADA               	clrf	fsr2h,c
  2400   00344A  CFDF F09F          	movff	indf2,??_vfpfcnvrt
  2401   00344E  0E04               	movlw	4
  2402   003450  26DF               	addwf	indf2,f,c
  2403   003452  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2404   003454  6ED9               	movwf	fsr2l,c
  2405   003456  6ADA               	clrf	fsr2h,c
  2406   003458  CFDE F0A1          	movff	postinc2,vfpfcnvrt@convarg
  2407   00345C  CFDE F0A2          	movff	postinc2,vfpfcnvrt@convarg+1
  2408   003460  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg+2
  2409   003464  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+3
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2412   003468  EF4B  F01A         	goto	l4977
  2413   00346C                     l4975:
  2414                           
  2415                           ; BSR set to: 0
  2416   00346C  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2417   00346E  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  2418   003470  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2419                           
  2420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2421                           ; Switch size 1, requested type "simple"
  2422                           ; Number of cases is 1, Range of values is 0 to 0
  2423                           ; switch strategies available:
  2424                           ; Name         Instructions Cycles
  2425                           ; simple_byte            4     3 (average)
  2426                           ;	Chosen strategy is simple_byte
  2427   003472  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2428   003474  0A00               	xorlw	0	; case 0
  2429   003476  B4D8               	btfsc	status,2,c
  2430   003478  EF40  F01A         	goto	l5261
  2431   00347C  EF4B  F01A         	goto	l4977
  2432   003480                     l5261:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ; Switch size 1, requested type "simple"
  2436                           ; Number of cases is 2, Range of values is 76 to 108
  2437                           ; switch strategies available:
  2438                           ; Name         Instructions Cycles
  2439                           ; simple_byte            7     4 (average)
  2440                           ;	Chosen strategy is simple_byte
  2441   003480  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2442   003482  0A4C               	xorlw	76	; case 76
  2443   003484  B4D8               	btfsc	status,2,c
  2444   003486  EF22  F01A         	goto	l4971
  2445   00348A  0A20               	xorlw	32	; case 108
  2446   00348C  B4D8               	btfsc	status,2,c
  2447   00348E  EF0E  F01A         	goto	l4969
  2448   003492  EF4B  F01A         	goto	l4977
  2449   003496                     l4977:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2453   003496  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2454   003498  6ED9               	movwf	fsr2l,c
  2455   00349A  6ADA               	clrf	fsr2h,c
  2456   00349C  29A6               	incf	vfpfcnvrt@cp& (0+255),w,b
  2457   00349E  6EDF               	movwf	indf2,c
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2460   0034A0  EF69  F01A         	goto	l4985
  2461   0034A4                     l4979:
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2465   0034A4  C09C  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2466   0034A8  C0A1  F06B         	movff	vfpfcnvrt@convarg,efgtoa@f
  2467   0034AC  C0A2  F06C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2468   0034B0  C0A3  F06D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2469   0034B4  C0A4  F06E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2470   0034B8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2471   0034BC                     	if	1	;There is more than 1 active tblptr byte
  2472   0034BC  0E0E               	movlw	high __smallconst
  2473   0034BE  6EF7               	movwf	tblptrh,c
  2474   0034C0                     	endif
  2475   0034C0                     	if	0	;tblptru may be non-zero
  2476   0034C0                     	endif
  2477   0034C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2478   0034C0  0E00               	movlw	low (__smallconst shr (0+16))
  2479   0034C2  6EF8               	movwf	tblptru,c
  2480   0034C4                     	endif
  2481   0034C4  0008               	tblrd		*
  2482   0034C6  CFF5 F06F          	movff	tablat,efgtoa@c
  2483   0034CA  EC11  F007         	call	_efgtoa	;wreg free
  2484   0034CE  EF9B  F01A         	goto	l1068
  2485   0034D2                     l4985:
  2486                           
  2487                           ; BSR set to: 0
  2488   0034D2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2489   0034D6                     	if	1	;There is more than 1 active tblptr byte
  2490   0034D6  0E0E               	movlw	high __smallconst
  2491   0034D8  6EF7               	movwf	tblptrh,c
  2492   0034DA                     	endif
  2493   0034DA                     	if	0	;tblptru may be non-zero
  2494   0034DA                     	endif
  2495   0034DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2496   0034DA  0E00               	movlw	low (__smallconst shr (0+16))
  2497   0034DC  6EF8               	movwf	tblptru,c
  2498   0034DE                     	endif
  2499   0034DE  0008               	tblrd		*
  2500   0034E0  50F5               	movf	tablat,w,c
  2501   0034E2  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  2502   0034E4  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2503                           
  2504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2505                           ; Switch size 1, requested type "simple"
  2506                           ; Number of cases is 1, Range of values is 0 to 0
  2507                           ; switch strategies available:
  2508                           ; Name         Instructions Cycles
  2509                           ; simple_byte            4     3 (average)
  2510                           ;	Chosen strategy is simple_byte
  2511   0034E6  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2512   0034E8  0A00               	xorlw	0	; case 0
  2513   0034EA  B4D8               	btfsc	status,2,c
  2514   0034EC  EF7A  F01A         	goto	l5263
  2515   0034F0  EF81  F01A         	goto	l4987
  2516   0034F4                     l5263:
  2517                           
  2518                           ; BSR set to: 0
  2519                           ; Switch size 1, requested type "simple"
  2520                           ; Number of cases is 1, Range of values is 102 to 102
  2521                           ; switch strategies available:
  2522                           ; Name         Instructions Cycles
  2523                           ; simple_byte            4     3 (average)
  2524                           ;	Chosen strategy is simple_byte
  2525   0034F4  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2526   0034F6  0A66               	xorlw	102	; case 102
  2527   0034F8  B4D8               	btfsc	status,2,c
  2528   0034FA  EF52  F01A         	goto	l4979
  2529   0034FE  EF81  F01A         	goto	l4987
  2530   003502                     l4987:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2533   003502  0100               	movlb	0	; () banked
  2534   003504  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2535   003506  6ED9               	movwf	fsr2l,c
  2536   003508  6ADA               	clrf	fsr2h,c
  2537   00350A  2ADF               	incf	indf2,f,c
  2538   00350C  EF9B  F01A         	goto	l1068
  2539   003510                     l4991:
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2543   003510  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2544   003512  6ED9               	movwf	fsr2l,c
  2545   003514  6ADA               	clrf	fsr2h,c
  2546   003516  CFDF FFF6          	movff	indf2,tblptrl
  2547   00351A                     	if	1	;There is more than 1 active tblptr byte
  2548   00351A  0E0E               	movlw	high __smallconst
  2549   00351C  6EF7               	movwf	tblptrh,c
  2550   00351E                     	endif
  2551   00351E                     	if	0	;tblptru may be non-zero
  2552   00351E                     	endif
  2553   00351E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2554   00351E  0E00               	movlw	low (__smallconst shr (0+16))
  2555   003520  6EF8               	movwf	tblptru,c
  2556   003522                     	endif
  2557   003522  0008               	tblrd		*
  2558   003524  50F5               	movf	tablat,w,c
  2559   003526  6E01               	movwf	fputc@c^0,c
  2560   003528  6A02               	clrf	(fputc@c+1)^0,c
  2561   00352A  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2562   00352E  ECE8  F01E         	call	_fputc	;wreg free
  2563   003532  EF81  F01A         	goto	l4987
  2564   003536                     l1068:
  2565   003536  0012               	return		;funcret
  2566   003538                     __end_of_vfpfcnvrt:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _read_prec_or_width *****************
  2570 ;; Defined at:
  2571 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2574 ;;		 -> vfprintf@cfmt(1), 
  2575 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2576 ;;		 -> sprintf@ap(1), 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  c               1    8[COMRAM] unsigned char 
  2579 ;;  n               2    9[COMRAM] int 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2    6[COMRAM] int 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;Total ram usage:        5 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 1
  2596 ;; This function calls:
  2597 ;;		___wmul
  2598 ;; This function is called by:
  2599 ;;		_vfpfcnvrt
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text8
  2604   003D22                     __ptext8:
  2605                           	callstack 0
  2606   003D22                     _read_prec_or_width:
  2607                           	callstack 25
  2608   003D22                     
  2609                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2610   003D22  0E00               	movlw	0
  2611   003D24  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2612   003D26  0E00               	movlw	0
  2613   003D28  6E0A               	movwf	read_prec_or_width@n^0,c
  2614   003D2A                     
  2615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2616   003D2A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2617   003D2C  6ED9               	movwf	fsr2l,c
  2618   003D2E  6ADA               	clrf	fsr2h,c
  2619   003D30  CFDF FFF6          	movff	indf2,tblptrl
  2620   003D34                     	if	1	;There is more than 1 active tblptr byte
  2621   003D34  0E0E               	movlw	high __smallconst
  2622   003D36  6EF7               	movwf	tblptrh,c
  2623   003D38                     	endif
  2624   003D38                     	if	0	;tblptru may be non-zero
  2625   003D38                     	endif
  2626   003D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2627   003D38  0E00               	movlw	low (__smallconst shr (0+16))
  2628   003D3A  6EF8               	movwf	tblptru,c
  2629   003D3C                     	endif
  2630   003D3C  0008               	tblrd		*
  2631   003D3E  50F5               	movf	tablat,w,c
  2632   003D40  0A2A               	xorlw	42
  2633   003D42  A4D8               	btfss	status,2,c
  2634   003D44  EFA6  F01E         	goto	u6081
  2635   003D48  EFA8  F01E         	goto	u6080
  2636   003D4C                     u6081:
  2637   003D4C  EFCE  F01E         	goto	l4937
  2638   003D50                     u6080:
  2639   003D50                     
  2640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2641   003D50  5007               	movf	read_prec_or_width@fmt^0,w,c
  2642   003D52  6ED9               	movwf	fsr2l,c
  2643   003D54  6ADA               	clrf	fsr2h,c
  2644   003D56  2ADF               	incf	indf2,f,c
  2645   003D58                     
  2646                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2647   003D58  5008               	movf	read_prec_or_width@ap^0,w,c
  2648   003D5A  6ED9               	movwf	fsr2l,c
  2649   003D5C  6ADA               	clrf	fsr2h,c
  2650   003D5E  0E02               	movlw	2
  2651   003D60  26DF               	addwf	indf2,f,c
  2652   003D62  5CDF               	subwf	indf2,w,c
  2653   003D64  6ED9               	movwf	fsr2l,c
  2654   003D66  6ADA               	clrf	fsr2h,c
  2655   003D68  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2656   003D6C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2659   003D70  EFE3  F01E         	goto	l1044
  2660   003D74                     l4933:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2663   003D74  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2664   003D78  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2665   003D7C  0E00               	movlw	0
  2666   003D7E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2667   003D80  0E0A               	movlw	10
  2668   003D82  6E03               	movwf	___wmul@multiplicand^0,c
  2669   003D84  EC0B  F022         	call	___wmul	;wreg free
  2670   003D88  5009               	movf	read_prec_or_width@c^0,w,c
  2671   003D8A  2401               	addwf	?___wmul^0,w,c
  2672   003D8C  6E0A               	movwf	read_prec_or_width@n^0,c
  2673   003D8E  0E00               	movlw	0
  2674   003D90  2002               	addwfc	(?___wmul+1)^0,w,c
  2675   003D92  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2676   003D94                     
  2677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2678   003D94  5007               	movf	read_prec_or_width@fmt^0,w,c
  2679   003D96  6ED9               	movwf	fsr2l,c
  2680   003D98  6ADA               	clrf	fsr2h,c
  2681   003D9A  2ADF               	incf	indf2,f,c
  2682   003D9C                     l4937:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2685   003D9C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2686   003D9E  6ED9               	movwf	fsr2l,c
  2687   003DA0  6ADA               	clrf	fsr2h,c
  2688   003DA2  CFDF FFF6          	movff	indf2,tblptrl
  2689   003DA6                     	if	1	;There is more than 1 active tblptr byte
  2690   003DA6  0E0E               	movlw	high __smallconst
  2691   003DA8  6EF7               	movwf	tblptrh,c
  2692   003DAA                     	endif
  2693   003DAA                     	if	0	;tblptru may be non-zero
  2694   003DAA                     	endif
  2695   003DAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2696   003DAA  0E00               	movlw	low (__smallconst shr (0+16))
  2697   003DAC  6EF8               	movwf	tblptru,c
  2698   003DAE                     	endif
  2699   003DAE  0008               	tblrd		*
  2700   003DB0  50F5               	movf	tablat,w,c
  2701   003DB2  0FD0               	addlw	208
  2702   003DB4  6E09               	movwf	read_prec_or_width@c^0,c
  2703   003DB6  0E09               	movlw	9
  2704   003DB8  6409               	cpfsgt	read_prec_or_width@c^0,c
  2705   003DBA  EFE1  F01E         	goto	u6091
  2706   003DBE  EFE3  F01E         	goto	u6090
  2707   003DC2                     u6091:
  2708   003DC2  EFBA  F01E         	goto	l4933
  2709   003DC6                     u6090:
  2710   003DC6                     l1044:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2713   003DC6  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2714   003DCA  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2715   003DCE  0012               	return		;funcret
  2716   003DD0                     __end_of_read_prec_or_width:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function ___wmul *****************
  2720 ;; Defined at:
  2721 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  multiplier      2    0[COMRAM] unsigned int 
  2724 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  product         2    4[COMRAM] unsigned int 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  2    0[COMRAM] unsigned int 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, prodl, prodh
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2739 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;Total ram usage:        6 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_read_prec_or_width
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           	psect	text9
  2750   004416                     __ptext9:
  2751                           	callstack 0
  2752   004416                     ___wmul:
  2753                           	callstack 25
  2754   004416  5001               	movf	___wmul@multiplier^0,w,c
  2755   004418  0203               	mulwf	___wmul@multiplicand^0,c
  2756   00441A  CFF3 F005          	movff	prodl,___wmul@product
  2757   00441E  CFF4 F006          	movff	prodh,___wmul@product+1
  2758   004422  5001               	movf	___wmul@multiplier^0,w,c
  2759   004424  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2760   004426  50F3               	movf	243,w,c
  2761   004428  2606               	addwf	(___wmul@product+1)^0,f,c
  2762   00442A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2763   00442C  0203               	mulwf	___wmul@multiplicand^0,c
  2764   00442E  50F3               	movf	243,w,c
  2765   004430  2606               	addwf	(___wmul@product+1)^0,f,c
  2766   004432  C005  F001         	movff	___wmul@product,?___wmul
  2767   004436  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2768   00443A  0012               	return		;funcret
  2769   00443C                     __end_of___wmul:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _efgtoa *****************
  2773 ;; Defined at:
  2774 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2777 ;;		 -> sprintf@f(12), 
  2778 ;;  f               4   11[BANK0 ] PTR struct _IO_FILE
  2779 ;;  c               1   15[BANK0 ] unsigned char 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  u               4   56[BANK0 ] struct flui
  2782 ;;  g               4   50[BANK0 ] struct flui
  2783 ;;  l               4   45[BANK0 ] struct flui
  2784 ;;  h               4   41[BANK0 ] struct flui
  2785 ;;  ou              4   35[BANK0 ] struct flui
  2786 ;;  n               2   54[BANK0 ] int 
  2787 ;;  i               2   39[BANK0 ] int 
  2788 ;;  w               2   33[BANK0 ] int 
  2789 ;;  e               2   31[BANK0 ] int 
  2790 ;;  m               2   29[BANK0 ] int 
  2791 ;;  d               2   27[BANK0 ] int 
  2792 ;;  t               2   20[BANK0 ] int 
  2793 ;;  p               2   18[BANK0 ] int 
  2794 ;;  ne              2   16[BANK0 ] int 
  2795 ;;  sign            1   49[BANK0 ] unsigned char 
  2796 ;;  nmode           1   26[BANK0 ] unsigned char 
  2797 ;;  mode            1   25[BANK0 ] unsigned char 
  2798 ;;  pp              1   24[BANK0 ] unsigned char 
  2799 ;;  esign           1    0        unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2809 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;Total ram usage:       52 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 4
  2816 ;; This function calls:
  2817 ;;		___fladd
  2818 ;;		___fldiv
  2819 ;;		___fleq
  2820 ;;		___flge
  2821 ;;		___flmul
  2822 ;;		___flneg
  2823 ;;		___flsub
  2824 ;;		___fltol
  2825 ;;		___fpclassifyf
  2826 ;;		_floorf
  2827 ;;		_labs
  2828 ;;		_memcpy
  2829 ;;		_pad
  2830 ;;		_strcpy
  2831 ;; This function is called by:
  2832 ;;		_vfpfcnvrt
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text10
  2837   000E22                     __ptext10:
  2838                           	callstack 0
  2839   000E22                     _efgtoa:
  2840                           	callstack 22
  2841   000E22                     
  2842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2843   000E22  0E00               	movlw	0
  2844   000E24  0100               	movlb	0	; () banked
  2845   000E26  6F91               	movwf	efgtoa@sign& (0+255),b
  2846   000E28                     
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2849   000E28  C06B  F092         	movff	efgtoa@f,efgtoa@g
  2850   000E2C  C06C  F093         	movff	efgtoa@f+1,efgtoa@g+1
  2851   000E30  C06D  F094         	movff	efgtoa@f+2,efgtoa@g+2
  2852   000E34  C06E  F095         	movff	efgtoa@f+3,efgtoa@g+3
  2853   000E38                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2856   000E38  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2857   000E3A  EF23  F007         	goto	u5760
  2858   000E3E  EF21  F007         	goto	u5761
  2859   000E42                     u5761:
  2860   000E42  EF37  F007         	goto	l4713
  2861   000E46                     u5760:
  2862   000E46                     
  2863                           ; BSR set to: 0
  2864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2865   000E46  0E01               	movlw	1
  2866   000E48  6F91               	movwf	efgtoa@sign& (0+255),b
  2867   000E4A                     
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2870   000E4A  C092  F001         	movff	efgtoa@g,___flneg@f1
  2871   000E4E  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2872   000E52  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2873   000E56  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2874   000E5A  EC9C  F021         	call	___flneg	;wreg free
  2875   000E5E  C001  F092         	movff	?___flneg,efgtoa@g
  2876   000E62  C002  F093         	movff	?___flneg+1,efgtoa@g+1
  2877   000E66  C003  F094         	movff	?___flneg+2,efgtoa@g+2
  2878   000E6A  C004  F095         	movff	?___flneg+3,efgtoa@g+3
  2879   000E6E                     l4713:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2882   000E6E  0E00               	movlw	0
  2883   000E70  0100               	movlb	0	; () banked
  2884   000E72  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  2885   000E74  0E00               	movlw	0
  2886   000E76  6F96               	movwf	efgtoa@n& (0+255),b
  2887   000E78                     
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2890   000E78  C158  F081         	movff	_width,efgtoa@w
  2891   000E7C  C159  F082         	movff	_width+1,efgtoa@w+1
  2892   000E80                     
  2893                           ; BSR set to: 0
  2894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2895   000E80  5191               	movf	efgtoa@sign& (0+255),w,b
  2896   000E82  B4D8               	btfsc	status,2,c
  2897   000E84  EF46  F007         	goto	u5771
  2898   000E88  EF48  F007         	goto	u5770
  2899   000E8C                     u5771:
  2900   000E8C  EF5C  F007         	goto	l4727
  2901   000E90                     u5770:
  2902   000E90                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2905   000E90  5191               	movf	efgtoa@sign& (0+255),w,b
  2906   000E92  A4D8               	btfss	status,2,c
  2907   000E94  EF4E  F007         	goto	u5781
  2908   000E98  EF50  F007         	goto	u5780
  2909   000E9C                     u5781:
  2910   000E9C  EF56  F007         	goto	l4723
  2911   000EA0                     u5780:
  2912   000EA0                     
  2913                           ; BSR set to: 0
  2914   000EA0  0E00               	movlw	0
  2915   000EA2  6F77               	movwf	(_efgtoa$1382+1)& (0+255),b
  2916   000EA4  0E2B               	movlw	43
  2917   000EA6  6F76               	movwf	_efgtoa$1382& (0+255),b
  2918   000EA8  EF5A  F007         	goto	l4725
  2919   000EAC                     l4723:
  2920                           
  2921                           ; BSR set to: 0
  2922   000EAC  0E00               	movlw	0
  2923   000EAE  6F77               	movwf	(_efgtoa$1382+1)& (0+255),b
  2924   000EB0  0E2D               	movlw	45
  2925   000EB2  6F76               	movwf	_efgtoa$1382& (0+255),b
  2926   000EB4                     l4725:
  2927                           
  2928                           ; BSR set to: 0
  2929   000EB4  C076  F091         	movff	_efgtoa$1382,efgtoa@sign
  2930   000EB8                     l4727:
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2934   000EB8  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  2935   000EBC  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2936   000EC0  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2937   000EC4  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2938   000EC8  EC12  F01E         	call	___fpclassifyf	;wreg free
  2939   000ECC  0401               	decf	?___fpclassifyf^0,w,c
  2940   000ECE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2941   000ED0  A4D8               	btfss	status,2,c
  2942   000ED2  EF6D  F007         	goto	u5791
  2943   000ED6  EF6F  F007         	goto	u5790
  2944   000EDA                     u5791:
  2945   000EDA  EF9E  F007         	goto	l4745
  2946   000EDE                     u5790:
  2947   000EDE                     
  2948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2949   000EDE  0100               	movlb	0	; () banked
  2950   000EE0  5191               	movf	efgtoa@sign& (0+255),w,b
  2951   000EE2  B4D8               	btfsc	status,2,c
  2952   000EE4  EF76  F007         	goto	u5801
  2953   000EE8  EF78  F007         	goto	u5800
  2954   000EEC                     u5801:
  2955   000EEC  EF81  F007         	goto	l4737
  2956   000EF0                     u5800:
  2957   000EF0                     
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2960   000EF0  C091  F15F         	movff	efgtoa@sign,_dbuf
  2961   000EF4                     
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2964   000EF4  0781               	decf	efgtoa@w& (0+255),f,b
  2965   000EF6  A0D8               	btfss	status,0,c
  2966   000EF8  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  2967   000EFA                     
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2970   000EFA  0E00               	movlw	0
  2971   000EFC  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  2972   000EFE  0E01               	movlw	1
  2973   000F00  6F96               	movwf	efgtoa@n& (0+255),b
  2974   000F02                     l4737:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2978   000F02  0E5F               	movlw	low _dbuf
  2979   000F04  2596               	addwf	efgtoa@n& (0+255),w,b
  2980   000F06  6E01               	movwf	strcpy@dest^0,c
  2981   000F08  0E01               	movlw	high _dbuf
  2982   000F0A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2983   000F0C  6E02               	movwf	(strcpy@dest+1)^0,c
  2984   000F0E  0E19               	movlw	low STR_2
  2985   000F10  6E03               	movwf	strcpy@src^0,c
  2986   000F12  EC61  F021         	call	_strcpy	;wreg free
  2987   000F16                     l4739:
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2990   000F16  0100               	movlb	0	; () banked
  2991   000F18  0EFD               	movlw	253
  2992   000F1A  2781               	addwf	efgtoa@w& (0+255),f,b
  2993   000F1C  0EFF               	movlw	255
  2994   000F1E  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2995   000F20                     
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2998   000F20  C06A  F00F         	movff	efgtoa@fp,pad@fp
  2999   000F24  0E5F               	movlw	low _dbuf
  3000   000F26  6E10               	movwf	pad@buf^0,c
  3001   000F28  0E01               	movlw	high _dbuf
  3002   000F2A  6E11               	movwf	(pad@buf+1)^0,c
  3003   000F2C  C081  F012         	movff	efgtoa@w,pad@p
  3004   000F30  C082  F013         	movff	efgtoa@w+1,pad@p+1
  3005   000F34  EC92  F01F         	call	_pad	;wreg free
  3006   000F38  EF06  F00C         	goto	l999
  3007   000F3C                     l4745:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3010   000F3C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  3011   000F40  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3012   000F44  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3013   000F48  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3014   000F4C  EC12  F01E         	call	___fpclassifyf	;wreg free
  3015   000F50  5001               	movf	?___fpclassifyf^0,w,c
  3016   000F52  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3017   000F54  A4D8               	btfss	status,2,c
  3018   000F56  EFAF  F007         	goto	u5811
  3019   000F5A  EFB1  F007         	goto	u5810
  3020   000F5E                     u5811:
  3021   000F5E  EFCF  F007         	goto	l4763
  3022   000F62                     u5810:
  3023   000F62                     
  3024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3025   000F62  0100               	movlb	0	; () banked
  3026   000F64  5191               	movf	efgtoa@sign& (0+255),w,b
  3027   000F66  B4D8               	btfsc	status,2,c
  3028   000F68  EFB8  F007         	goto	u5821
  3029   000F6C  EFBA  F007         	goto	u5820
  3030   000F70                     u5821:
  3031   000F70  EFC3  F007         	goto	l4755
  3032   000F74                     u5820:
  3033   000F74                     
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3036   000F74  C091  F15F         	movff	efgtoa@sign,_dbuf
  3037   000F78                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  3040   000F78  0781               	decf	efgtoa@w& (0+255),f,b
  3041   000F7A  A0D8               	btfss	status,0,c
  3042   000F7C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3043   000F7E                     
  3044                           ; BSR set to: 0
  3045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3046   000F7E  0E00               	movlw	0
  3047   000F80  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  3048   000F82  0E01               	movlw	1
  3049   000F84  6F96               	movwf	efgtoa@n& (0+255),b
  3050   000F86                     l4755:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3054   000F86  0E5F               	movlw	low _dbuf
  3055   000F88  2596               	addwf	efgtoa@n& (0+255),w,b
  3056   000F8A  6E01               	movwf	strcpy@dest^0,c
  3057   000F8C  0E01               	movlw	high _dbuf
  3058   000F8E  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3059   000F90  6E02               	movwf	(strcpy@dest+1)^0,c
  3060   000F92  0E1D               	movlw	low STR_5
  3061   000F94  6E03               	movwf	strcpy@src^0,c
  3062   000F96  EC61  F021         	call	_strcpy	;wreg free
  3063   000F9A  EF8B  F007         	goto	l4739
  3064   000F9E                     l4763:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3067   000F9E  0E00               	movlw	0
  3068   000FA0  0100               	movlb	0	; () banked
  3069   000FA2  6F98               	movwf	efgtoa@u& (0+255),b
  3070   000FA4  0E00               	movlw	0
  3071   000FA6  6F99               	movwf	(efgtoa@u+1)& (0+255),b
  3072   000FA8  0E80               	movlw	128
  3073   000FAA  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
  3074   000FAC  0E3F               	movlw	63
  3075   000FAE  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3078   000FB0  0E00               	movlw	0
  3079   000FB2  6F80               	movwf	(efgtoa@e+1)& (0+255),b
  3080   000FB4  0E00               	movlw	0
  3081   000FB6  6F7F               	movwf	efgtoa@e& (0+255),b
  3082   000FB8                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3085   000FB8  C092  F001         	movff	efgtoa@g,___fleq@ff1
  3086   000FBC  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3087   000FC0  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3088   000FC4  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3089   000FC8  0E00               	movlw	0
  3090   000FCA  6E05               	movwf	___fleq@ff2^0,c
  3091   000FCC  0E00               	movlw	0
  3092   000FCE  6E06               	movwf	(___fleq@ff2+1)^0,c
  3093   000FD0  0E00               	movlw	0
  3094   000FD2  6E07               	movwf	(___fleq@ff2+2)^0,c
  3095   000FD4  0E00               	movlw	0
  3096   000FD6  6E08               	movwf	(___fleq@ff2+3)^0,c
  3097   000FD8  EC3D  F01F         	call	___fleq	;wreg free
  3098   000FDC  B0D8               	btfsc	status,0,c
  3099   000FDE  EFF3  F007         	goto	u5831
  3100   000FE2  EFF5  F007         	goto	u5830
  3101   000FE6                     u5831:
  3102   000FE6  EFD4  F008         	goto	l1002
  3103   000FEA                     u5830:
  3104   000FEA  EF02  F008         	goto	l4771
  3105   000FEE                     l1004:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3108   000FEE  C083  F098         	movff	efgtoa@ou,efgtoa@u
  3109   000FF2  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
  3110   000FF6  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
  3111   000FFA  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
  3112   000FFE                     
  3113                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3114   000FFE  0100               	movlb	0	; () banked
  3115   001000  4B7F               	infsnz	efgtoa@e& (0+255),f,b
  3116   001002  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
  3117   001004                     l4771:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3120   001004  C098  F01A         	movff	efgtoa@u,___flmul@b
  3121   001008  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3122   00100C  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3123   001010  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3124   001014  0E00               	movlw	0
  3125   001016  6E1E               	movwf	___flmul@a^0,c
  3126   001018  0E00               	movlw	0
  3127   00101A  6E1F               	movwf	(___flmul@a+1)^0,c
  3128   00101C  0E20               	movlw	32
  3129   00101E  6E20               	movwf	(___flmul@a+2)^0,c
  3130   001020  0E41               	movlw	65
  3131   001022  6E21               	movwf	(___flmul@a+3)^0,c
  3132   001024  ECA2  F015         	call	___flmul	;wreg free
  3133   001028  C01A  F083         	movff	?___flmul,efgtoa@ou
  3134   00102C  C01B  F084         	movff	?___flmul+1,efgtoa@ou+1
  3135   001030  C01C  F085         	movff	?___flmul+2,efgtoa@ou+2
  3136   001034  C01D  F086         	movff	?___flmul+3,efgtoa@ou+3
  3137   001038  0100               	movlb	0	; () banked
  3138   00103A  5183               	movf	efgtoa@ou& (0+255),w,b
  3139   00103C  5D92               	subwf	efgtoa@g& (0+255),w,b
  3140   00103E  6E01               	movwf	labs@a^0,c
  3141   001040  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
  3142   001042  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3143   001044  6E02               	movwf	(labs@a+1)^0,c
  3144   001046  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
  3145   001048  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3146   00104A  6E03               	movwf	(labs@a+2)^0,c
  3147   00104C  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
  3148   00104E  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3149   001050  6E04               	movwf	(labs@a+3)^0,c
  3150   001052  ECC5  F01F         	call	_labs	;wreg free
  3151   001056  BE04               	btfsc	(?_labs+3)^0,7,c
  3152   001058  EF39  F008         	goto	u5841
  3153   00105C  5004               	movf	(?_labs+3)^0,w,c
  3154   00105E  1003               	iorwf	(?_labs+2)^0,w,c
  3155   001060  1002               	iorwf	(?_labs+1)^0,w,c
  3156   001062  E109               	bnz	u5840
  3157   001064  0E02               	movlw	2
  3158   001066  5C01               	subwf	?_labs^0,w,c
  3159   001068  A0D8               	btfss	status,0,c
  3160   00106A  EF39  F008         	goto	u5841
  3161   00106E  EF3B  F008         	goto	u5840
  3162   001072                     u5841:
  3163   001072  EFF7  F007         	goto	l1004
  3164   001076                     u5840:
  3165   001076  C083  F033         	movff	efgtoa@ou,___flge@ff1
  3166   00107A  C084  F034         	movff	efgtoa@ou+1,___flge@ff1+1
  3167   00107E  C085  F035         	movff	efgtoa@ou+2,___flge@ff1+2
  3168   001082  C086  F036         	movff	efgtoa@ou+3,___flge@ff1+3
  3169   001086  C092  F037         	movff	efgtoa@g,___flge@ff2
  3170   00108A  C093  F038         	movff	efgtoa@g+1,___flge@ff2+1
  3171   00108E  C094  F039         	movff	efgtoa@g+2,___flge@ff2+2
  3172   001092  C095  F03A         	movff	efgtoa@g+3,___flge@ff2+3
  3173   001096  EC90  F01D         	call	___flge	;wreg free
  3174   00109A  A0D8               	btfss	status,0,c
  3175   00109C  EF52  F008         	goto	u5851
  3176   0010A0  EF54  F008         	goto	u5850
  3177   0010A4                     u5851:
  3178   0010A4  EFF7  F007         	goto	l1004
  3179   0010A8                     u5850:
  3180   0010A8                     
  3181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3182   0010A8  0100               	movlb	0	; () banked
  3183   0010AA  5198               	movf	efgtoa@u& (0+255),w,b
  3184   0010AC  5D92               	subwf	efgtoa@g& (0+255),w,b
  3185   0010AE  6E01               	movwf	labs@a^0,c
  3186   0010B0  5199               	movf	(efgtoa@u+1)& (0+255),w,b
  3187   0010B2  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3188   0010B4  6E02               	movwf	(labs@a+1)^0,c
  3189   0010B6  519A               	movf	(efgtoa@u+2)& (0+255),w,b
  3190   0010B8  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3191   0010BA  6E03               	movwf	(labs@a+2)^0,c
  3192   0010BC  519B               	movf	(efgtoa@u+3)& (0+255),w,b
  3193   0010BE  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3194   0010C0  6E04               	movwf	(labs@a+3)^0,c
  3195   0010C2  ECC5  F01F         	call	_labs	;wreg free
  3196   0010C6  BE04               	btfsc	(?_labs+3)^0,7,c
  3197   0010C8  EF73  F008         	goto	u5860
  3198   0010CC  5004               	movf	(?_labs+3)^0,w,c
  3199   0010CE  1003               	iorwf	(?_labs+2)^0,w,c
  3200   0010D0  1002               	iorwf	(?_labs+1)^0,w,c
  3201   0010D2  E107               	bnz	u5861
  3202   0010D4  0E02               	movlw	2
  3203   0010D6  5C01               	subwf	?_labs^0,w,c
  3204   0010D8  B0D8               	btfsc	status,0,c
  3205   0010DA  EF71  F008         	goto	u5861
  3206   0010DE  EF73  F008         	goto	u5860
  3207   0010E2                     u5861:
  3208   0010E2  EFBB  F008         	goto	l4789
  3209   0010E6                     u5860:
  3210   0010E6                     l4779:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3213   0010E6  C098  F092         	movff	efgtoa@u,efgtoa@g
  3214   0010EA  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
  3215   0010EE  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
  3216   0010F2  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  3219   0010F6  EFD4  F008         	goto	l1002
  3220   0010FA                     l4781:
  3221                           
  3222                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3223   0010FA  C098  F03B         	movff	efgtoa@u,___fldiv@b
  3224   0010FE  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  3225   001102  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  3226   001106  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  3227   00110A  0E00               	movlw	0
  3228   00110C  6E3F               	movwf	___fldiv@a^0,c
  3229   00110E  0E00               	movlw	0
  3230   001110  6E40               	movwf	(___fldiv@a+1)^0,c
  3231   001112  0E20               	movlw	32
  3232   001114  6E41               	movwf	(___fldiv@a+2)^0,c
  3233   001116  0E41               	movlw	65
  3234   001118  6E42               	movwf	(___fldiv@a+3)^0,c
  3235   00111A  ECB7  F017         	call	___fldiv	;wreg free
  3236   00111E  C03B  F098         	movff	?___fldiv,efgtoa@u
  3237   001122  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  3238   001126  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  3239   00112A  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  3240   00112E                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  3242   00112E  0100               	movlb	0	; () banked
  3243   001130  077F               	decf	efgtoa@e& (0+255),f,b
  3244   001132  A0D8               	btfss	status,0,c
  3245   001134  0780               	decf	(efgtoa@e+1)& (0+255),f,b
  3246   001136                     
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3249   001136  5198               	movf	efgtoa@u& (0+255),w,b
  3250   001138  5D92               	subwf	efgtoa@g& (0+255),w,b
  3251   00113A  6E01               	movwf	labs@a^0,c
  3252   00113C  5199               	movf	(efgtoa@u+1)& (0+255),w,b
  3253   00113E  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3254   001140  6E02               	movwf	(labs@a+1)^0,c
  3255   001142  519A               	movf	(efgtoa@u+2)& (0+255),w,b
  3256   001144  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3257   001146  6E03               	movwf	(labs@a+2)^0,c
  3258   001148  519B               	movf	(efgtoa@u+3)& (0+255),w,b
  3259   00114A  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3260   00114C  6E04               	movwf	(labs@a+3)^0,c
  3261   00114E  ECC5  F01F         	call	_labs	;wreg free
  3262   001152  BE04               	btfsc	(?_labs+3)^0,7,c
  3263   001154  EFB9  F008         	goto	u5870
  3264   001158  5004               	movf	(?_labs+3)^0,w,c
  3265   00115A  1003               	iorwf	(?_labs+2)^0,w,c
  3266   00115C  1002               	iorwf	(?_labs+1)^0,w,c
  3267   00115E  E107               	bnz	u5871
  3268   001160  0E02               	movlw	2
  3269   001162  5C01               	subwf	?_labs^0,w,c
  3270   001164  B0D8               	btfsc	status,0,c
  3271   001166  EFB7  F008         	goto	u5871
  3272   00116A  EFB9  F008         	goto	u5870
  3273   00116E                     u5871:
  3274   00116E  EFBB  F008         	goto	l4789
  3275   001172                     u5870:
  3276   001172  EF73  F008         	goto	l4779
  3277   001176                     l4789:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3280   001176  C092  F033         	movff	efgtoa@g,___flge@ff1
  3281   00117A  C093  F034         	movff	efgtoa@g+1,___flge@ff1+1
  3282   00117E  C094  F035         	movff	efgtoa@g+2,___flge@ff1+2
  3283   001182  C095  F036         	movff	efgtoa@g+3,___flge@ff1+3
  3284   001186  C098  F037         	movff	efgtoa@u,___flge@ff2
  3285   00118A  C099  F038         	movff	efgtoa@u+1,___flge@ff2+1
  3286   00118E  C09A  F039         	movff	efgtoa@u+2,___flge@ff2+2
  3287   001192  C09B  F03A         	movff	efgtoa@u+3,___flge@ff2+3
  3288   001196  EC90  F01D         	call	___flge	;wreg free
  3289   00119A  A0D8               	btfss	status,0,c
  3290   00119C  EFD2  F008         	goto	u5881
  3291   0011A0  EFD4  F008         	goto	u5880
  3292   0011A4                     u5881:
  3293   0011A4  EF7D  F008         	goto	l4781
  3294   0011A8                     u5880:
  3295   0011A8                     l1002:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3298   0011A8  C06F  F079         	movff	efgtoa@c,efgtoa@mode
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3301   0011AC  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
  3302   0011B0                     
  3303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3304   0011B0  0101               	movlb	1	; () banked
  3305   0011B2  BF5B               	btfsc	(_prec+1)& (0+255),7,b
  3306   0011B4  EFDE  F008         	goto	u5891
  3307   0011B8  EFE0  F008         	goto	u5890
  3308   0011BC                     u5891:
  3309   0011BC  EFE6  F008         	goto	l4795
  3310   0011C0                     u5890:
  3311   0011C0                     
  3312                           ; BSR set to: 1
  3313   0011C0  C15A  F072         	movff	_prec,efgtoa@p
  3314   0011C4  C15B  F073         	movff	_prec+1,efgtoa@p+1
  3315   0011C8  EFEB  F008         	goto	l4797
  3316   0011CC                     l4795:
  3317                           
  3318                           ; BSR set to: 1
  3319   0011CC  0E00               	movlw	0
  3320   0011CE  0100               	movlb	0	; () banked
  3321   0011D0  6F73               	movwf	(efgtoa@p+1)& (0+255),b
  3322   0011D2  0E06               	movlw	6
  3323   0011D4  6F72               	movwf	efgtoa@p& (0+255),b
  3324   0011D6                     l4797:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3327   0011D6  C072  F07D         	movff	efgtoa@p,efgtoa@m
  3328   0011DA  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
  3329   0011DE                     
  3330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3331   0011DE  0100               	movlb	0	; () banked
  3332   0011E0  4B7D               	infsnz	efgtoa@m& (0+255),f,b
  3333   0011E2  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
  3334   0011E4                     
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3337   0011E4  0E66               	movlw	102
  3338   0011E6  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3339   0011E8  A4D8               	btfss	status,2,c
  3340   0011EA  EFF9  F008         	goto	u5901
  3341   0011EE  EFFB  F008         	goto	u5900
  3342   0011F2                     u5901:
  3343   0011F2  EF1B  F009         	goto	l4811
  3344   0011F6                     u5900:
  3345   0011F6                     
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3348   0011F6  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3349   0011F8  EF02  F009         	goto	u5910
  3350   0011FC  EF00  F009         	goto	u5911
  3351   001200                     u5911:
  3352   001200  EF0E  F009         	goto	l4807
  3353   001204                     u5910:
  3354   001204                     
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3357   001204  0E00               	movlw	0
  3358   001206  6F98               	movwf	efgtoa@u& (0+255),b
  3359   001208  0E00               	movlw	0
  3360   00120A  6F99               	movwf	(efgtoa@u+1)& (0+255),b
  3361   00120C  0E80               	movlw	128
  3362   00120E  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
  3363   001210  0E3F               	movlw	63
  3364   001212  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3367   001214  0E00               	movlw	0
  3368   001216  6F80               	movwf	(efgtoa@e+1)& (0+255),b
  3369   001218  0E00               	movlw	0
  3370   00121A  6F7F               	movwf	efgtoa@e& (0+255),b
  3371   00121C                     l4807:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3375   00121C  0E67               	movlw	103
  3376   00121E  1979               	xorwf	efgtoa@mode& (0+255),w,b
  3377   001220  B4D8               	btfsc	status,2,c
  3378   001222  EF15  F009         	goto	u5921
  3379   001226  EF17  F009         	goto	u5920
  3380   00122A                     u5921:
  3381   00122A  EF1B  F009         	goto	l4811
  3382   00122E                     u5920:
  3383   00122E                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3386   00122E  517F               	movf	efgtoa@e& (0+255),w,b
  3387   001230  277D               	addwf	efgtoa@m& (0+255),f,b
  3388   001232  5180               	movf	(efgtoa@e+1)& (0+255),w,b
  3389   001234  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3390   001236                     l4811:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3394   001236  0E00               	movlw	0
  3395   001238  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  3396   00123A  0E00               	movlw	0
  3397   00123C  6F87               	movwf	efgtoa@i& (0+255),b
  3398   00123E                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3401   00123E  C092  F089         	movff	efgtoa@g,efgtoa@h
  3402   001242  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
  3403   001246  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
  3404   00124A  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
  3405   00124E                     
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3408   00124E  C098  F083         	movff	efgtoa@u,efgtoa@ou
  3409   001252  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
  3410   001256  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
  3411   00125A  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3414   00125E  EFAC  F009         	goto	l4825
  3415   001262                     l4817:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3419   001262  C089  F03B         	movff	efgtoa@h,___fldiv@b
  3420   001266  C08A  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  3421   00126A  C08B  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  3422   00126E  C08C  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  3423   001272  C098  F03F         	movff	efgtoa@u,___fldiv@a
  3424   001276  C099  F040         	movff	efgtoa@u+1,___fldiv@a+1
  3425   00127A  C09A  F041         	movff	efgtoa@u+2,___fldiv@a+2
  3426   00127E  C09B  F042         	movff	efgtoa@u+3,___fldiv@a+3
  3427   001282  ECB7  F017         	call	___fldiv	;wreg free
  3428   001286  C03B  F054         	movff	?___fldiv,floorf@x
  3429   00128A  C03C  F055         	movff	?___fldiv+1,floorf@x+1
  3430   00128E  C03D  F056         	movff	?___fldiv+2,floorf@x+2
  3431   001292  C03E  F057         	movff	?___fldiv+3,floorf@x+3
  3432   001296  EC9C  F01A         	call	_floorf	;wreg free
  3433   00129A  C054  F08D         	movff	?_floorf,efgtoa@l
  3434   00129E  C055  F08E         	movff	?_floorf+1,efgtoa@l+1
  3435   0012A2  C056  F08F         	movff	?_floorf+2,efgtoa@l+2
  3436   0012A6  C057  F090         	movff	?_floorf+3,efgtoa@l+3
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3439   0012AA  C08D  F001         	movff	efgtoa@l,___fltol@f1
  3440   0012AE  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3441   0012B2  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3442   0012B6  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3443   0012BA  EC0D  F01D         	call	___fltol	;wreg free
  3444   0012BE  C001  F07B         	movff	?___fltol,efgtoa@d
  3445   0012C2  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
  3446   0012C6                     
  3447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3448   0012C6  C089  F033         	movff	efgtoa@h,___flsub@b
  3449   0012CA  C08A  F034         	movff	efgtoa@h+1,___flsub@b+1
  3450   0012CE  C08B  F035         	movff	efgtoa@h+2,___flsub@b+2
  3451   0012D2  C08C  F036         	movff	efgtoa@h+3,___flsub@b+3
  3452   0012D6  C08D  F01E         	movff	efgtoa@l,___flmul@a
  3453   0012DA  C08E  F01F         	movff	efgtoa@l+1,___flmul@a+1
  3454   0012DE  C08F  F020         	movff	efgtoa@l+2,___flmul@a+2
  3455   0012E2  C090  F021         	movff	efgtoa@l+3,___flmul@a+3
  3456   0012E6  C098  F01A         	movff	efgtoa@u,___flmul@b
  3457   0012EA  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3458   0012EE  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3459   0012F2  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3460   0012F6  ECA2  F015         	call	___flmul	;wreg free
  3461   0012FA  C01A  F037         	movff	?___flmul,___flsub@a
  3462   0012FE  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  3463   001302  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  3464   001306  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  3465   00130A  ECDB  F020         	call	___flsub	;wreg free
  3466   00130E  C033  F089         	movff	?___flsub,efgtoa@h
  3467   001312  C034  F08A         	movff	?___flsub+1,efgtoa@h+1
  3468   001316  C035  F08B         	movff	?___flsub+2,efgtoa@h+2
  3469   00131A  C036  F08C         	movff	?___flsub+3,efgtoa@h+3
  3470   00131E                     
  3471                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3472   00131E  C098  F03B         	movff	efgtoa@u,___fldiv@b
  3473   001322  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  3474   001326  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  3475   00132A  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  3476   00132E  0E00               	movlw	0
  3477   001330  6E3F               	movwf	___fldiv@a^0,c
  3478   001332  0E00               	movlw	0
  3479   001334  6E40               	movwf	(___fldiv@a+1)^0,c
  3480   001336  0E20               	movlw	32
  3481   001338  6E41               	movwf	(___fldiv@a+2)^0,c
  3482   00133A  0E41               	movlw	65
  3483   00133C  6E42               	movwf	(___fldiv@a+3)^0,c
  3484   00133E  ECB7  F017         	call	___fldiv	;wreg free
  3485   001342  C03B  F098         	movff	?___fldiv,efgtoa@u
  3486   001346  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  3487   00134A  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  3488   00134E  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  3489   001352                     
  3490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3491   001352  0100               	movlb	0	; () banked
  3492   001354  4B87               	infsnz	efgtoa@i& (0+255),f,b
  3493   001356  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
  3494   001358                     l4825:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3498   001358  517D               	movf	efgtoa@m& (0+255),w,b
  3499   00135A  5D87               	subwf	efgtoa@i& (0+255),w,b
  3500   00135C  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  3501   00135E  0A80               	xorlw	128
  3502   001360  6E5E               	movwf	??_efgtoa^0,c
  3503   001362  517E               	movf	(efgtoa@m+1)& (0+255),w,b
  3504   001364  0A80               	xorlw	128
  3505   001366  585E               	subwfb	??_efgtoa^0,w,c
  3506   001368  A0D8               	btfss	status,0,c
  3507   00136A  EFB9  F009         	goto	u5931
  3508   00136E  EFBB  F009         	goto	u5930
  3509   001372                     u5931:
  3510   001372  EF31  F009         	goto	l4817
  3511   001376                     u5930:
  3512   001376                     
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3515   001376  C098  F01A         	movff	efgtoa@u,___flmul@b
  3516   00137A  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3517   00137E  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3518   001382  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3519   001386  0E00               	movlw	0
  3520   001388  6E1E               	movwf	___flmul@a^0,c
  3521   00138A  0E00               	movlw	0
  3522   00138C  6E1F               	movwf	(___flmul@a+1)^0,c
  3523   00138E  0EA0               	movlw	160
  3524   001390  6E20               	movwf	(___flmul@a+2)^0,c
  3525   001392  0E40               	movlw	64
  3526   001394  6E21               	movwf	(___flmul@a+3)^0,c
  3527   001396  ECA2  F015         	call	___flmul	;wreg free
  3528   00139A  C01A  F08D         	movff	?___flmul,efgtoa@l
  3529   00139E  C01B  F08E         	movff	?___flmul+1,efgtoa@l+1
  3530   0013A2  C01C  F08F         	movff	?___flmul+2,efgtoa@l+2
  3531   0013A6  C01D  F090         	movff	?___flmul+3,efgtoa@l+3
  3532   0013AA                     
  3533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3534   0013AA  C089  F033         	movff	efgtoa@h,___flge@ff1
  3535   0013AE  C08A  F034         	movff	efgtoa@h+1,___flge@ff1+1
  3536   0013B2  C08B  F035         	movff	efgtoa@h+2,___flge@ff1+2
  3537   0013B6  C08C  F036         	movff	efgtoa@h+3,___flge@ff1+3
  3538   0013BA  C08D  F037         	movff	efgtoa@l,___flge@ff2
  3539   0013BE  C08E  F038         	movff	efgtoa@l+1,___flge@ff2+1
  3540   0013C2  C08F  F039         	movff	efgtoa@l+2,___flge@ff2+2
  3541   0013C6  C090  F03A         	movff	efgtoa@l+3,___flge@ff2+3
  3542   0013CA  EC90  F01D         	call	___flge	;wreg free
  3543   0013CE  B0D8               	btfsc	status,0,c
  3544   0013D0  EFEC  F009         	goto	u5941
  3545   0013D4  EFEE  F009         	goto	u5940
  3546   0013D8                     u5941:
  3547   0013D8  EFF9  F009         	goto	l4833
  3548   0013DC                     u5940:
  3549   0013DC                     
  3550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3551   0013DC  0E00               	movlw	0
  3552   0013DE  0100               	movlb	0	; () banked
  3553   0013E0  6F8D               	movwf	efgtoa@l& (0+255),b
  3554   0013E2  0E00               	movlw	0
  3555   0013E4  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  3556   0013E6  0E00               	movlw	0
  3557   0013E8  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  3558   0013EA  0E00               	movlw	0
  3559   0013EC  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3562   0013EE  EF22  F00A         	goto	l4839
  3563   0013F2                     l4833:
  3564                           
  3565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3566   0013F2  C089  F001         	movff	efgtoa@h,___fleq@ff1
  3567   0013F6  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3568   0013FA  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3569   0013FE  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3570   001402  C08D  F005         	movff	efgtoa@l,___fleq@ff2
  3571   001406  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3572   00140A  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3573   00140E  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3574   001412  EC3D  F01F         	call	___fleq	;wreg free
  3575   001416  A0D8               	btfss	status,0,c
  3576   001418  EF10  F00A         	goto	u5951
  3577   00141C  EF12  F00A         	goto	u5950
  3578   001420                     u5951:
  3579   001420  EF22  F00A         	goto	l4839
  3580   001424                     u5950:
  3581   001424  0100               	movlb	0	; () banked
  3582   001426  B17B               	btfsc	efgtoa@d& (0+255),0,b
  3583   001428  EF18  F00A         	goto	u5961
  3584   00142C  EF1A  F00A         	goto	u5960
  3585   001430                     u5961:
  3586   001430  EF22  F00A         	goto	l4839
  3587   001434                     u5960:
  3588   001434                     
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3591   001434  0E00               	movlw	0
  3592   001436  6F8D               	movwf	efgtoa@l& (0+255),b
  3593   001438  0E00               	movlw	0
  3594   00143A  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  3595   00143C  0E00               	movlw	0
  3596   00143E  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  3597   001440  0E00               	movlw	0
  3598   001442  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  3599   001444                     l4839:
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3602   001444  C092  F001         	movff	efgtoa@g,___fladd@b
  3603   001448  C093  F002         	movff	efgtoa@g+1,___fladd@b+1
  3604   00144C  C094  F003         	movff	efgtoa@g+2,___fladd@b+2
  3605   001450  C095  F004         	movff	efgtoa@g+3,___fladd@b+3
  3606   001454  C08D  F005         	movff	efgtoa@l,___fladd@a
  3607   001458  C08E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3608   00145C  C08F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3609   001460  C090  F008         	movff	efgtoa@l+3,___fladd@a+3
  3610   001464  EC42  F013         	call	___fladd	;wreg free
  3611   001468  C001  F089         	movff	?___fladd,efgtoa@h
  3612   00146C  C002  F08A         	movff	?___fladd+1,efgtoa@h+1
  3613   001470  C003  F08B         	movff	?___fladd+2,efgtoa@h+2
  3614   001474  C004  F08C         	movff	?___fladd+3,efgtoa@h+3
  3615   001478                     
  3616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3617   001478  C089  F033         	movff	efgtoa@h,___flge@ff1
  3618   00147C  C08A  F034         	movff	efgtoa@h+1,___flge@ff1+1
  3619   001480  C08B  F035         	movff	efgtoa@h+2,___flge@ff1+2
  3620   001484  C08C  F036         	movff	efgtoa@h+3,___flge@ff1+3
  3621   001488  0E00               	movlw	0
  3622   00148A  6E1E               	movwf	___flmul@a^0,c
  3623   00148C  0E00               	movlw	0
  3624   00148E  6E1F               	movwf	(___flmul@a+1)^0,c
  3625   001490  0E20               	movlw	32
  3626   001492  6E20               	movwf	(___flmul@a+2)^0,c
  3627   001494  0E41               	movlw	65
  3628   001496  6E21               	movwf	(___flmul@a+3)^0,c
  3629   001498  C083  F01A         	movff	efgtoa@ou,___flmul@b
  3630   00149C  C084  F01B         	movff	efgtoa@ou+1,___flmul@b+1
  3631   0014A0  C085  F01C         	movff	efgtoa@ou+2,___flmul@b+2
  3632   0014A4  C086  F01D         	movff	efgtoa@ou+3,___flmul@b+3
  3633   0014A8  ECA2  F015         	call	___flmul	;wreg free
  3634   0014AC  C01A  F037         	movff	?___flmul,___flge@ff2
  3635   0014B0  C01B  F038         	movff	?___flmul+1,___flge@ff2+1
  3636   0014B4  C01C  F039         	movff	?___flmul+2,___flge@ff2+2
  3637   0014B8  C01D  F03A         	movff	?___flmul+3,___flge@ff2+3
  3638   0014BC  EC90  F01D         	call	___flge	;wreg free
  3639   0014C0  A0D8               	btfss	status,0,c
  3640   0014C2  EF65  F00A         	goto	u5971
  3641   0014C6  EF67  F00A         	goto	u5970
  3642   0014CA                     u5971:
  3643   0014CA  EF90  F00A         	goto	l4851
  3644   0014CE                     u5970:
  3645   0014CE                     
  3646                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3647   0014CE  0100               	movlb	0	; () banked
  3648   0014D0  4B7F               	infsnz	efgtoa@e& (0+255),f,b
  3649   0014D2  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
  3650   0014D4                     
  3651                           ; BSR set to: 0
  3652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3653   0014D4  C083  F01A         	movff	efgtoa@ou,___flmul@b
  3654   0014D8  C084  F01B         	movff	efgtoa@ou+1,___flmul@b+1
  3655   0014DC  C085  F01C         	movff	efgtoa@ou+2,___flmul@b+2
  3656   0014E0  C086  F01D         	movff	efgtoa@ou+3,___flmul@b+3
  3657   0014E4  0E00               	movlw	0
  3658   0014E6  6E1E               	movwf	___flmul@a^0,c
  3659   0014E8  0E00               	movlw	0
  3660   0014EA  6E1F               	movwf	(___flmul@a+1)^0,c
  3661   0014EC  0E20               	movlw	32
  3662   0014EE  6E20               	movwf	(___flmul@a+2)^0,c
  3663   0014F0  0E41               	movlw	65
  3664   0014F2  6E21               	movwf	(___flmul@a+3)^0,c
  3665   0014F4  ECA2  F015         	call	___flmul	;wreg free
  3666   0014F8  C01A  F083         	movff	?___flmul,efgtoa@ou
  3667   0014FC  C01B  F084         	movff	?___flmul+1,efgtoa@ou+1
  3668   001500  C01C  F085         	movff	?___flmul+2,efgtoa@ou+2
  3669   001504  C01D  F086         	movff	?___flmul+3,efgtoa@ou+3
  3670   001508                     
  3671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3672   001508  0E66               	movlw	102
  3673   00150A  0100               	movlb	0	; () banked
  3674   00150C  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3675   00150E  A4D8               	btfss	status,2,c
  3676   001510  EF8C  F00A         	goto	u5981
  3677   001514  EF8E  F00A         	goto	u5980
  3678   001518                     u5981:
  3679   001518  EF90  F00A         	goto	l4851
  3680   00151C                     u5980:
  3681   00151C                     
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3684   00151C  4B7D               	infsnz	efgtoa@m& (0+255),f,b
  3685   00151E  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
  3686   001520                     l4851:
  3687                           
  3688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3689   001520  C083  F098         	movff	efgtoa@ou,efgtoa@u
  3690   001524  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
  3691   001528  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
  3692   00152C  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
  3693   001530                     
  3694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3695   001530  C07F  F070         	movff	efgtoa@e,efgtoa@ne
  3696   001534  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3697   001538                     
  3698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3699   001538  0E00               	movlw	0
  3700   00153A  0100               	movlb	0	; () banked
  3701   00153C  6F78               	movwf	efgtoa@pp& (0+255),b
  3702   00153E                     
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3705   00153E  0E00               	movlw	0
  3706   001540  6F75               	movwf	(efgtoa@t+1)& (0+255),b
  3707   001542  0E00               	movlw	0
  3708   001544  6F74               	movwf	efgtoa@t& (0+255),b
  3709   001546                     
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3712   001546  0E00               	movlw	0
  3713   001548  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  3714   00154A  0E00               	movlw	0
  3715   00154C  6F87               	movwf	efgtoa@i& (0+255),b
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3718   00154E  EF8E  F00B         	goto	l4901
  3719   001552                     l4861:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3723   001552  C089  F03B         	movff	efgtoa@h,___fldiv@b
  3724   001556  C08A  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  3725   00155A  C08B  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  3726   00155E  C08C  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  3727   001562  C098  F03F         	movff	efgtoa@u,___fldiv@a
  3728   001566  C099  F040         	movff	efgtoa@u+1,___fldiv@a+1
  3729   00156A  C09A  F041         	movff	efgtoa@u+2,___fldiv@a+2
  3730   00156E  C09B  F042         	movff	efgtoa@u+3,___fldiv@a+3
  3731   001572  ECB7  F017         	call	___fldiv	;wreg free
  3732   001576  C03B  F054         	movff	?___fldiv,floorf@x
  3733   00157A  C03C  F055         	movff	?___fldiv+1,floorf@x+1
  3734   00157E  C03D  F056         	movff	?___fldiv+2,floorf@x+2
  3735   001582  C03E  F057         	movff	?___fldiv+3,floorf@x+3
  3736   001586  EC9C  F01A         	call	_floorf	;wreg free
  3737   00158A  C054  F08D         	movff	?_floorf,efgtoa@l
  3738   00158E  C055  F08E         	movff	?_floorf+1,efgtoa@l+1
  3739   001592  C056  F08F         	movff	?_floorf+2,efgtoa@l+2
  3740   001596  C057  F090         	movff	?_floorf+3,efgtoa@l+3
  3741                           
  3742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3743   00159A  C08D  F001         	movff	efgtoa@l,___fltol@f1
  3744   00159E  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3745   0015A2  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3746   0015A6  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3747   0015AA  EC0D  F01D         	call	___fltol	;wreg free
  3748   0015AE  BE02               	btfsc	(?___fltol+1)^0,7,c
  3749   0015B0  EFE5  F00A         	goto	u5990
  3750   0015B4  5002               	movf	(?___fltol+1)^0,w,c
  3751   0015B6  E107               	bnz	u5991
  3752   0015B8  0E0A               	movlw	10
  3753   0015BA  5C01               	subwf	?___fltol^0,w,c
  3754   0015BC  B0D8               	btfsc	status,0,c
  3755   0015BE  EFE3  F00A         	goto	u5991
  3756   0015C2  EFE5  F00A         	goto	u5990
  3757   0015C6                     u5991:
  3758   0015C6  EFF5  F00A         	goto	l4865
  3759   0015CA                     u5990:
  3760   0015CA  C08D  F001         	movff	efgtoa@l,___fltol@f1
  3761   0015CE  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3762   0015D2  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3763   0015D6  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3764   0015DA  EC0D  F01D         	call	___fltol	;wreg free
  3765   0015DE  C001  F07B         	movff	?___fltol,efgtoa@d
  3766   0015E2  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
  3767   0015E6  EFFA  F00A         	goto	l1032
  3768   0015EA                     l4865:
  3769   0015EA  0E00               	movlw	0
  3770   0015EC  0100               	movlb	0	; () banked
  3771   0015EE  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
  3772   0015F0  0E09               	movlw	9
  3773   0015F2  6F7B               	movwf	efgtoa@d& (0+255),b
  3774   0015F4                     l1032:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3777   0015F4  0100               	movlb	0	; () banked
  3778   0015F6  5178               	movf	efgtoa@pp& (0+255),w,b
  3779   0015F8  A4D8               	btfss	status,2,c
  3780   0015FA  EF01  F00B         	goto	u6001
  3781   0015FE  EF03  F00B         	goto	u6000
  3782   001602                     u6001:
  3783   001602  EF2B  F00B         	goto	l4885
  3784   001606                     u6000:
  3785   001606                     
  3786                           ; BSR set to: 0
  3787   001606  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3788   001608  EF0A  F00B         	goto	u6010
  3789   00160C  EF08  F00B         	goto	u6011
  3790   001610                     u6011:
  3791   001610  EF2B  F00B         	goto	l4885
  3792   001614                     u6010:
  3793   001614                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3796   001614  0E5F               	movlw	low _dbuf
  3797   001616  2596               	addwf	efgtoa@n& (0+255),w,b
  3798   001618  6ED9               	movwf	fsr2l,c
  3799   00161A  0E01               	movlw	high _dbuf
  3800   00161C  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3801   00161E  6EDA               	movwf	fsr2h,c
  3802   001620  0E2E               	movlw	46
  3803   001622  6EDF               	movwf	indf2,c
  3804   001624                     
  3805                           ; BSR set to: 0
  3806   001624  4B96               	infsnz	efgtoa@n& (0+255),f,b
  3807   001626  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  3808   001628                     
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3811   001628  0781               	decf	efgtoa@w& (0+255),f,b
  3812   00162A  A0D8               	btfss	status,0,c
  3813   00162C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3814   00162E                     
  3815                           ; BSR set to: 0
  3816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3817   00162E  0E01               	movlw	1
  3818   001630  6F78               	movwf	efgtoa@pp& (0+255),b
  3819   001632  EF2B  F00B         	goto	l4885
  3820   001636                     l4877:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3824   001636  0E5F               	movlw	low _dbuf
  3825   001638  2596               	addwf	efgtoa@n& (0+255),w,b
  3826   00163A  6ED9               	movwf	fsr2l,c
  3827   00163C  0E01               	movlw	high _dbuf
  3828   00163E  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3829   001640  6EDA               	movwf	fsr2h,c
  3830   001642  0E30               	movlw	48
  3831   001644  6EDF               	movwf	indf2,c
  3832   001646                     
  3833                           ; BSR set to: 0
  3834   001646  4B96               	infsnz	efgtoa@n& (0+255),f,b
  3835   001648  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  3836   00164A                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3839   00164A  0781               	decf	efgtoa@w& (0+255),f,b
  3840   00164C  A0D8               	btfss	status,0,c
  3841   00164E  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3842   001650                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3845   001650  0774               	decf	efgtoa@t& (0+255),f,b
  3846   001652  A0D8               	btfss	status,0,c
  3847   001654  0775               	decf	(efgtoa@t+1)& (0+255),f,b
  3848   001656                     l4885:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3852   001656  5174               	movf	efgtoa@t& (0+255),w,b
  3853   001658  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3854   00165A  A4D8               	btfss	status,2,c
  3855   00165C  EF32  F00B         	goto	u6021
  3856   001660  EF34  F00B         	goto	u6020
  3857   001664                     u6021:
  3858   001664  EF1B  F00B         	goto	l4877
  3859   001668                     u6020:
  3860   001668                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3863   001668  0E5F               	movlw	low _dbuf
  3864   00166A  2596               	addwf	efgtoa@n& (0+255),w,b
  3865   00166C  6ED9               	movwf	fsr2l,c
  3866   00166E  0E01               	movlw	high _dbuf
  3867   001670  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3868   001672  6EDA               	movwf	fsr2h,c
  3869   001674  517B               	movf	efgtoa@d& (0+255),w,b
  3870   001676  0F30               	addlw	48
  3871   001678  6EDF               	movwf	indf2,c
  3872   00167A                     
  3873                           ; BSR set to: 0
  3874   00167A  4B96               	infsnz	efgtoa@n& (0+255),f,b
  3875   00167C  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  3876   00167E                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3879   00167E  0781               	decf	efgtoa@w& (0+255),f,b
  3880   001680  A0D8               	btfss	status,0,c
  3881   001682  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3882   001684                     
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3885   001684  C089  F033         	movff	efgtoa@h,___flsub@b
  3886   001688  C08A  F034         	movff	efgtoa@h+1,___flsub@b+1
  3887   00168C  C08B  F035         	movff	efgtoa@h+2,___flsub@b+2
  3888   001690  C08C  F036         	movff	efgtoa@h+3,___flsub@b+3
  3889   001694  C08D  F01E         	movff	efgtoa@l,___flmul@a
  3890   001698  C08E  F01F         	movff	efgtoa@l+1,___flmul@a+1
  3891   00169C  C08F  F020         	movff	efgtoa@l+2,___flmul@a+2
  3892   0016A0  C090  F021         	movff	efgtoa@l+3,___flmul@a+3
  3893   0016A4  C098  F01A         	movff	efgtoa@u,___flmul@b
  3894   0016A8  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3895   0016AC  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3896   0016B0  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3897   0016B4  ECA2  F015         	call	___flmul	;wreg free
  3898   0016B8  C01A  F037         	movff	?___flmul,___flsub@a
  3899   0016BC  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  3900   0016C0  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  3901   0016C4  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  3902   0016C8  ECDB  F020         	call	___flsub	;wreg free
  3903   0016CC  C033  F089         	movff	?___flsub,efgtoa@h
  3904   0016D0  C034  F08A         	movff	?___flsub+1,efgtoa@h+1
  3905   0016D4  C035  F08B         	movff	?___flsub+2,efgtoa@h+2
  3906   0016D8  C036  F08C         	movff	?___flsub+3,efgtoa@h+3
  3907   0016DC                     
  3908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3909   0016DC  C098  F03B         	movff	efgtoa@u,___fldiv@b
  3910   0016E0  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  3911   0016E4  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  3912   0016E8  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  3913   0016EC  0E00               	movlw	0
  3914   0016EE  6E3F               	movwf	___fldiv@a^0,c
  3915   0016F0  0E00               	movlw	0
  3916   0016F2  6E40               	movwf	(___fldiv@a+1)^0,c
  3917   0016F4  0E20               	movlw	32
  3918   0016F6  6E41               	movwf	(___fldiv@a+2)^0,c
  3919   0016F8  0E41               	movlw	65
  3920   0016FA  6E42               	movwf	(___fldiv@a+3)^0,c
  3921   0016FC  ECB7  F017         	call	___fldiv	;wreg free
  3922   001700  C03B  F098         	movff	?___fldiv,efgtoa@u
  3923   001704  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  3924   001708  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  3925   00170C  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  3926   001710                     
  3927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3928   001710  0100               	movlb	0	; () banked
  3929   001712  0770               	decf	efgtoa@ne& (0+255),f,b
  3930   001714  A0D8               	btfss	status,0,c
  3931   001716  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3932   001718                     
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3935   001718  4B87               	infsnz	efgtoa@i& (0+255),f,b
  3936   00171A  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
  3937   00171C                     l4901:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3941   00171C  517D               	movf	efgtoa@m& (0+255),w,b
  3942   00171E  5D87               	subwf	efgtoa@i& (0+255),w,b
  3943   001720  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  3944   001722  0A80               	xorlw	128
  3945   001724  6E5E               	movwf	??_efgtoa^0,c
  3946   001726  517E               	movf	(efgtoa@m+1)& (0+255),w,b
  3947   001728  0A80               	xorlw	128
  3948   00172A  585E               	subwfb	??_efgtoa^0,w,c
  3949   00172C  B0D8               	btfsc	status,0,c
  3950   00172E  EF9B  F00B         	goto	u6031
  3951   001732  EF9D  F00B         	goto	u6030
  3952   001736                     u6031:
  3953   001736  EFAB  F00B         	goto	l4905
  3954   00173A                     u6030:
  3955   00173A                     
  3956                           ; BSR set to: 0
  3957   00173A  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3958   00173C  EFA9  F00B         	goto	u6041
  3959   001740  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  3960   001742  E109               	bnz	u6040
  3961   001744  0E4B               	movlw	75
  3962   001746  5D96               	subwf	efgtoa@n& (0+255),w,b
  3963   001748  A0D8               	btfss	status,0,c
  3964   00174A  EFA9  F00B         	goto	u6041
  3965   00174E  EFAB  F00B         	goto	u6040
  3966   001752                     u6041:
  3967   001752  EFA9  F00A         	goto	l4861
  3968   001756                     u6040:
  3969   001756                     l4905:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3973   001756  0E00               	movlw	0
  3974   001758  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  3975   00175A  0E4F               	movlw	79
  3976   00175C  6F87               	movwf	efgtoa@i& (0+255),b
  3977   00175E                     
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3980   00175E  0E5F               	movlw	low _dbuf
  3981   001760  2587               	addwf	efgtoa@i& (0+255),w,b
  3982   001762  6ED9               	movwf	fsr2l,c
  3983   001764  0E01               	movlw	high _dbuf
  3984   001766  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3985   001768  6EDA               	movwf	fsr2h,c
  3986   00176A  6ADF               	clrf	indf2,c
  3987   00176C                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3990   00176C  0E5F               	movlw	low _dbuf
  3991   00176E  6E5E               	movwf	??_efgtoa^0,c
  3992   001770  0E01               	movlw	high _dbuf
  3993   001772  6E5F               	movwf	(??_efgtoa+1)^0,c
  3994   001774  5196               	movf	efgtoa@n& (0+255),w,b
  3995   001776  5E5E               	subwf	??_efgtoa^0,f,c
  3996   001778  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  3997   00177A  5A5F               	subwfb	(??_efgtoa+1)^0,f,c
  3998   00177C  5187               	movf	efgtoa@i& (0+255),w,b
  3999   00177E  245E               	addwf	??_efgtoa^0,w,c
  4000   001780  6E01               	movwf	memcpy@d1^0,c
  4001   001782  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  4002   001784  205F               	addwfc	(??_efgtoa+1)^0,w,c
  4003   001786  6E02               	movwf	(memcpy@d1+1)^0,c
  4004   001788  0E5F               	movlw	low _dbuf
  4005   00178A  6E03               	movwf	memcpy@s1^0,c
  4006   00178C  0E01               	movlw	high _dbuf
  4007   00178E  6E04               	movwf	(memcpy@s1+1)^0,c
  4008   001790  C096  F005         	movff	efgtoa@n,memcpy@n
  4009   001794  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
  4010   001798  ECF0  F01F         	call	_memcpy	;wreg free
  4011   00179C                     
  4012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4013   00179C  0100               	movlb	0	; () banked
  4014   00179E  5196               	movf	efgtoa@n& (0+255),w,b
  4015   0017A0  5D87               	subwf	efgtoa@i& (0+255),w,b
  4016   0017A2  6F96               	movwf	efgtoa@n& (0+255),b
  4017   0017A4  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  4018   0017A6  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4019   0017A8  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  4020   0017AA                     
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4023   0017AA  5191               	movf	efgtoa@sign& (0+255),w,b
  4024   0017AC  A4D8               	btfss	status,2,c
  4025   0017AE  EFDB  F00B         	goto	u6051
  4026   0017B2  EFDE  F00B         	goto	u6050
  4027   0017B6                     u6051:
  4028   0017B6  0E01               	movlw	1
  4029   0017B8  EFDF  F00B         	goto	u6060
  4030   0017BC                     u6050:
  4031   0017BC  0E00               	movlw	0
  4032   0017BE                     u6060:
  4033   0017BE  6F87               	movwf	efgtoa@i& (0+255),b
  4034   0017C0  6B88               	clrf	(efgtoa@i+1)& (0+255),b
  4035   0017C2                     
  4036                           ; BSR set to: 0
  4037                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4038   0017C2  5191               	movf	efgtoa@sign& (0+255),w,b
  4039   0017C4  B4D8               	btfsc	status,2,c
  4040   0017C6  EFE7  F00B         	goto	u6071
  4041   0017CA  EFE9  F00B         	goto	u6070
  4042   0017CE                     u6071:
  4043   0017CE  EFF4  F00B         	goto	l4919
  4044   0017D2                     u6070:
  4045   0017D2                     
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4048   0017D2  0796               	decf	efgtoa@n& (0+255),f,b
  4049   0017D4  A0D8               	btfss	status,0,c
  4050   0017D6  0797               	decf	(efgtoa@n+1)& (0+255),f,b
  4051   0017D8  0E5F               	movlw	low _dbuf
  4052   0017DA  2596               	addwf	efgtoa@n& (0+255),w,b
  4053   0017DC  6ED9               	movwf	fsr2l,c
  4054   0017DE  0E01               	movlw	high _dbuf
  4055   0017E0  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4056   0017E2  6EDA               	movwf	fsr2h,c
  4057   0017E4  C091  FFDF         	movff	efgtoa@sign,indf2
  4058   0017E8                     l4919:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4062   0017E8  5187               	movf	efgtoa@i& (0+255),w,b
  4063   0017EA  5F81               	subwf	efgtoa@w& (0+255),f,b
  4064   0017EC  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  4065   0017EE  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4066   0017F0                     
  4067                           ; BSR set to: 0
  4068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4069   0017F0  C06A  F00F         	movff	efgtoa@fp,pad@fp
  4070   0017F4  0E5F               	movlw	low _dbuf
  4071   0017F6  2596               	addwf	efgtoa@n& (0+255),w,b
  4072   0017F8  6E10               	movwf	pad@buf^0,c
  4073   0017FA  0E01               	movlw	high _dbuf
  4074   0017FC  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4075   0017FE  6E11               	movwf	(pad@buf+1)^0,c
  4076   001800  C081  F012         	movff	efgtoa@w,pad@p
  4077   001804  C082  F013         	movff	efgtoa@w+1,pad@p+1
  4078   001808  EC92  F01F         	call	_pad	;wreg free
  4079   00180C                     l999:
  4080   00180C  0012               	return		;funcret
  4081   00180E                     __end_of_efgtoa:
  4082                           	callstack 0
  4083                           
  4084 ;; *************** function _strcpy *****************
  4085 ;; Defined at:
  4086 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4089 ;;		 -> dbuf(80), 
  4090 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4091 ;;		 -> STR_5(4), STR_2(4), 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  d               2    4[COMRAM] PTR unsigned char 
  4094 ;;		 -> dbuf(80), 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2    0[COMRAM] PTR unsigned char 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;Total ram usage:        6 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_efgtoa
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text11
  4118   0042C2                     __ptext11:
  4119                           	callstack 0
  4120   0042C2                     _strcpy:
  4121                           	callstack 25
  4122   0042C2  C001  F005         	movff	strcpy@dest,strcpy@d
  4123   0042C6  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4124   0042CA                     l4653:
  4125   0042CA  2A03               	incf	strcpy@src^0,f,c
  4126   0042CC  0403               	decf	strcpy@src^0,w,c
  4127   0042CE  6E04               	movwf	??_strcpy^0,c
  4128   0042D0  C004  FFF6         	movff	??_strcpy,tblptrl
  4129   0042D4                     	if	1	;There is more than 1 active tblptr byte
  4130   0042D4  0E0E               	movlw	high __smallconst
  4131   0042D6  6EF7               	movwf	tblptrh,c
  4132   0042D8                     	endif
  4133   0042D8                     	if	0	;tblptru may be non-zero
  4134   0042D8                     	endif
  4135   0042D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4136   0042D8  0E00               	movlw	low (__smallconst shr (0+16))
  4137   0042DA  6EF8               	movwf	tblptru,c
  4138   0042DC                     	endif
  4139   0042DC  C005  FFD9         	movff	strcpy@d,fsr2l
  4140   0042E0  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4141   0042E4  4A05               	infsnz	strcpy@d^0,f,c
  4142   0042E6  2A06               	incf	(strcpy@d+1)^0,f,c
  4143   0042E8  0008               	tblrd		*
  4144   0042EA  CFF5 FFDF          	movff	tablat,indf2
  4145   0042EE  50DF               	movf	indf2,w,c
  4146   0042F0  A4D8               	btfss	status,2,c
  4147   0042F2  EF7D  F021         	goto	u5631
  4148   0042F6  EF7F  F021         	goto	u5630
  4149   0042FA                     u5631:
  4150   0042FA  EF65  F021         	goto	l4653
  4151   0042FE                     u5630:
  4152   0042FE  0012               	return		;funcret
  4153   004300                     __end_of_strcpy:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function _pad *****************
  4157 ;; Defined at:
  4158 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4161 ;;		 -> sprintf@f(12), 
  4162 ;;  buf             2   15[COMRAM] PTR unsigned char 
  4163 ;;		 -> dbuf(80), 
  4164 ;;  p               2   17[COMRAM] int 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  i               2   20[COMRAM] int 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4176 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;Total ram usage:        8 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 3
  4183 ;; This function calls:
  4184 ;;		_fputc
  4185 ;;		_fputs
  4186 ;; This function is called by:
  4187 ;;		_efgtoa
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text12
  4192   003F24                     __ptext12:
  4193                           	callstack 0
  4194   003F24                     _pad:
  4195                           	callstack 22
  4196   003F24                     
  4197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4198   003F24  BE13               	btfsc	(pad@p+1)^0,7,c
  4199   003F26  EF99  F01F         	goto	u5540
  4200   003F2A  EF97  F01F         	goto	u5541
  4201   003F2E                     u5541:
  4202   003F2E  EF9D  F01F         	goto	l984
  4203   003F32                     u5540:
  4204   003F32                     
  4205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4206   003F32  0E00               	movlw	0
  4207   003F34  6E13               	movwf	(pad@p+1)^0,c
  4208   003F36  0E00               	movlw	0
  4209   003F38  6E12               	movwf	pad@p^0,c
  4210   003F3A                     l984:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4213   003F3A  0E00               	movlw	0
  4214   003F3C  6E16               	movwf	(pad@i+1)^0,c
  4215   003F3E  0E00               	movlw	0
  4216   003F40  6E15               	movwf	pad@i^0,c
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4219   003F42  EFAD  F01F         	goto	l4625
  4220   003F46                     l4621:
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4223   003F46  0E00               	movlw	0
  4224   003F48  6E02               	movwf	(fputc@c+1)^0,c
  4225   003F4A  0E20               	movlw	32
  4226   003F4C  6E01               	movwf	fputc@c^0,c
  4227   003F4E  C00F  F003         	movff	pad@fp,fputc@fp
  4228   003F52  ECE8  F01E         	call	_fputc	;wreg free
  4229   003F56                     
  4230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4231   003F56  4A15               	infsnz	pad@i^0,f,c
  4232   003F58  2A16               	incf	(pad@i+1)^0,f,c
  4233   003F5A                     l4625:
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4236   003F5A  5012               	movf	pad@p^0,w,c
  4237   003F5C  5C15               	subwf	pad@i^0,w,c
  4238   003F5E  5016               	movf	(pad@i+1)^0,w,c
  4239   003F60  0A80               	xorlw	128
  4240   003F62  6E14               	movwf	??_pad^0,c
  4241   003F64  5013               	movf	(pad@p+1)^0,w,c
  4242   003F66  0A80               	xorlw	128
  4243   003F68  5814               	subwfb	??_pad^0,w,c
  4244   003F6A  A0D8               	btfss	status,0,c
  4245   003F6C  EFBA  F01F         	goto	u5551
  4246   003F70  EFBC  F01F         	goto	u5550
  4247   003F74                     u5551:
  4248   003F74  EFA3  F01F         	goto	l4621
  4249   003F78                     u5550:
  4250   003F78                     
  4251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4252   003F78  C010  F009         	movff	pad@buf,fputs@s
  4253   003F7C  C011  F00A         	movff	pad@buf+1,fputs@s+1
  4254   003F80  C00F  F00B         	movff	pad@fp,fputs@fp
  4255   003F84  EC41  F021         	call	_fputs	;wreg free
  4256   003F88  0012               	return		;funcret
  4257   003F8A                     __end_of_pad:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _fputs *****************
  4261 ;; Defined at:
  4262 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4265 ;;		 -> dbuf(80), 
  4266 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4267 ;;		 -> sprintf@f(12), 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  i               2   12[COMRAM] int 
  4270 ;;  c               1   11[COMRAM] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2    8[COMRAM] int 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4280 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4283 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4284 ;;Total ram usage:        6 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 2
  4287 ;; This function calls:
  4288 ;;		_fputc
  4289 ;; This function is called by:
  4290 ;;		_pad
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text13
  4295   004282                     __ptext13:
  4296                           	callstack 0
  4297   004282                     _fputs:
  4298                           	callstack 22
  4299   004282  0E00               	movlw	0
  4300   004284  6E0E               	movwf	(fputs@i+1)^0,c
  4301   004286  0E00               	movlw	0
  4302   004288  6E0D               	movwf	fputs@i^0,c
  4303   00428A  EF50  F021         	goto	l4245
  4304   00428E                     l4241:
  4305   00428E  C00C  F001         	movff	fputs@c,fputc@c
  4306   004292  6A02               	clrf	(fputc@c+1)^0,c
  4307   004294  C00B  F003         	movff	fputs@fp,fputc@fp
  4308   004298  ECE8  F01E         	call	_fputc	;wreg free
  4309   00429C  4A0D               	infsnz	fputs@i^0,f,c
  4310   00429E  2A0E               	incf	(fputs@i+1)^0,f,c
  4311   0042A0                     l4245:
  4312   0042A0  500D               	movf	fputs@i^0,w,c
  4313   0042A2  2409               	addwf	fputs@s^0,w,c
  4314   0042A4  6ED9               	movwf	fsr2l,c
  4315   0042A6  500E               	movf	(fputs@i+1)^0,w,c
  4316   0042A8  200A               	addwfc	(fputs@s+1)^0,w,c
  4317   0042AA  6EDA               	movwf	fsr2h,c
  4318   0042AC  50DF               	movf	indf2,w,c
  4319   0042AE  6E0C               	movwf	fputs@c^0,c
  4320   0042B0  500C               	movf	fputs@c^0,w,c
  4321   0042B2  A4D8               	btfss	status,2,c
  4322   0042B4  EF5E  F021         	goto	u4951
  4323   0042B8  EF60  F021         	goto	u4950
  4324   0042BC                     u4951:
  4325   0042BC  EF47  F021         	goto	l4241
  4326   0042C0                     u4950:
  4327   0042C0  0012               	return		;funcret
  4328   0042C2                     __end_of_fputs:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _fputc *****************
  4332 ;; Defined at:
  4333 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  c               2    0[COMRAM] int 
  4336 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4337 ;;		 -> sprintf@f(12), 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  2    0[COMRAM] int 
  4342 ;; Registers used:
  4343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4349 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4353 ;;Total ram usage:        8 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 1
  4356 ;; This function calls:
  4357 ;;		_putch
  4358 ;; This function is called by:
  4359 ;;		_pad
  4360 ;;		_vfpfcnvrt
  4361 ;;		_fputs
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text14
  4366   003DD0                     __ptext14:
  4367                           	callstack 0
  4368   003DD0                     _fputc:
  4369                           	callstack 25
  4370   003DD0  5003               	movf	fputc@fp^0,w,c
  4371   003DD2  B4D8               	btfsc	status,2,c
  4372   003DD4  EFEE  F01E         	goto	u4521
  4373   003DD8  EFF0  F01E         	goto	u4520
  4374   003DDC                     u4521:
  4375   003DDC  EFF8  F01E         	goto	l4027
  4376   003DE0                     u4520:
  4377   003DE0  5003               	movf	fputc@fp^0,w,c
  4378   003DE2  A4D8               	btfss	status,2,c
  4379   003DE4  EFF6  F01E         	goto	u4531
  4380   003DE8  EFF8  F01E         	goto	u4530
  4381   003DEC                     u4531:
  4382   003DEC  EFFD  F01E         	goto	l4029
  4383   003DF0                     u4530:
  4384   003DF0                     l4027:
  4385   003DF0  5001               	movf	fputc@c^0,w,c
  4386   003DF2  EC5B  F022         	call	_putch
  4387   003DF6  EF3C  F01F         	goto	l1124
  4388   003DFA                     l4029:
  4389   003DFA  5003               	movf	fputc@fp^0,w,c
  4390   003DFC  6ED9               	movwf	fsr2l,c
  4391   003DFE  6ADA               	clrf	fsr2h,c
  4392   003E00  0E0A               	movlw	10
  4393   003E02  26D9               	addwf	fsr2l,f,c
  4394   003E04  50DE               	movf	postinc2,w,c
  4395   003E06  10DE               	iorwf	postinc2,w,c
  4396   003E08  B4D8               	btfsc	status,2,c
  4397   003E0A  EF09  F01F         	goto	u4541
  4398   003E0E  EF0B  F01F         	goto	u4540
  4399   003E12                     u4541:
  4400   003E12  EF24  F01F         	goto	l4033
  4401   003E16                     u4540:
  4402   003E16  5003               	movf	fputc@fp^0,w,c
  4403   003E18  6ED9               	movwf	fsr2l,c
  4404   003E1A  6ADA               	clrf	fsr2h,c
  4405   003E1C  0E0A               	movlw	10
  4406   003E1E  26D9               	addwf	fsr2l,f,c
  4407   003E20  5003               	movf	fputc@fp^0,w,c
  4408   003E22  6EE1               	movwf	fsr1l,c
  4409   003E24  6AE2               	clrf	fsr1h,c
  4410   003E26  0E03               	movlw	3
  4411   003E28  26E1               	addwf	fsr1l,f,c
  4412   003E2A  50DE               	movf	postinc2,w,c
  4413   003E2C  5CE6               	subwf	postinc1,w,c
  4414   003E2E  50E6               	movf	postinc1,w,c
  4415   003E30  0A80               	xorlw	128
  4416   003E32  6E08               	movwf	(??_fputc+4)^0,c
  4417   003E34  50DE               	movf	postinc2,w,c
  4418   003E36  0A80               	xorlw	128
  4419   003E38  5808               	subwfb	(??_fputc+4)^0,w,c
  4420   003E3A  B0D8               	btfsc	status,0,c
  4421   003E3C  EF22  F01F         	goto	u4551
  4422   003E40  EF24  F01F         	goto	u4550
  4423   003E44                     u4551:
  4424   003E44  EF3C  F01F         	goto	l1124
  4425   003E48                     u4550:
  4426   003E48                     l4033:
  4427   003E48  5003               	movf	fputc@fp^0,w,c
  4428   003E4A  6ED9               	movwf	fsr2l,c
  4429   003E4C  6ADA               	clrf	fsr2h,c
  4430   003E4E  0E03               	movlw	3
  4431   003E50  26D9               	addwf	fsr2l,f,c
  4432   003E52  50DF               	movf	indf2,w,c
  4433   003E54  6E04               	movwf	??_fputc^0,c
  4434   003E56  5003               	movf	fputc@fp^0,w,c
  4435   003E58  6ED9               	movwf	fsr2l,c
  4436   003E5A  6ADA               	clrf	fsr2h,c
  4437   003E5C  50DF               	movf	indf2,w,c
  4438   003E5E  2404               	addwf	??_fputc^0,w,c
  4439   003E60  6ED9               	movwf	fsr2l,c
  4440   003E62  6ADA               	clrf	fsr2h,c
  4441   003E64  C001  FFDF         	movff	fputc@c,indf2
  4442   003E68  5003               	movf	fputc@fp^0,w,c
  4443   003E6A  6ED9               	movwf	fsr2l,c
  4444   003E6C  6ADA               	clrf	fsr2h,c
  4445   003E6E  0E03               	movlw	3
  4446   003E70  26D9               	addwf	fsr2l,f,c
  4447   003E72  2ADE               	incf	postinc2,f,c
  4448   003E74  0E00               	movlw	0
  4449   003E76  22DD               	addwfc	postdec2,f,c
  4450   003E78                     l1124:
  4451   003E78  0012               	return		;funcret
  4452   003E7A                     __end_of_fputc:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _putch *****************
  4456 ;; Defined at:
  4457 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  c               1    wreg     unsigned char 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  c               1    0[COMRAM] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;Total ram usage:        0 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_fputc
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text15
  4485   0044B6                     __ptext15:
  4486                           	callstack 0
  4487   0044B6                     _putch:
  4488                           	callstack 25
  4489   0044B6  0012               	return		;funcret
  4490   0044B8                     __end_of_putch:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function _memcpy *****************
  4494 ;; Defined at:
  4495 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  d1              2    0[COMRAM] PTR void 
  4498 ;;		 -> dbuf(80), 
  4499 ;;  s1              2    2[COMRAM] PTR const void 
  4500 ;;		 -> dbuf(80), 
  4501 ;;  n               2    4[COMRAM] unsigned int 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4504 ;;		 -> dbuf(80), 
  4505 ;;  d               2    7[COMRAM] PTR unsigned char 
  4506 ;;		 -> dbuf(80), 
  4507 ;;  tmp             1    6[COMRAM] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2    0[COMRAM] PTR void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4518 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4520 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4521 ;;Total ram usage:       11 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_efgtoa
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text16
  4531   003FE0                     __ptext16:
  4532                           	callstack 0
  4533   003FE0                     _memcpy:
  4534                           	callstack 25
  4535   003FE0  C003  F00A         	movff	memcpy@s1,memcpy@s
  4536   003FE4  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4537   003FE8  C001  F008         	movff	memcpy@d1,memcpy@d
  4538   003FEC  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4539   003FF0  EF0A  F020         	goto	l4701
  4540   003FF4                     l4693:
  4541   003FF4  C00A  FFD9         	movff	memcpy@s,fsr2l
  4542   003FF8  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4543   003FFC  50DF               	movf	indf2,w,c
  4544   003FFE  6E07               	movwf	memcpy@tmp^0,c
  4545   004000  4A0A               	infsnz	memcpy@s^0,f,c
  4546   004002  2A0B               	incf	(memcpy@s+1)^0,f,c
  4547   004004  C008  FFD9         	movff	memcpy@d,fsr2l
  4548   004008  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4549   00400C  C007  FFDF         	movff	memcpy@tmp,indf2
  4550   004010  4A08               	infsnz	memcpy@d^0,f,c
  4551   004012  2A09               	incf	(memcpy@d+1)^0,f,c
  4552   004014                     l4701:
  4553   004014  0605               	decf	memcpy@n^0,f,c
  4554   004016  A0D8               	btfss	status,0,c
  4555   004018  0606               	decf	(memcpy@n+1)^0,f,c
  4556   00401A  2805               	incf	memcpy@n^0,w,c
  4557   00401C  E106               	bnz	u5751
  4558   00401E  2806               	incf	(memcpy@n+1)^0,w,c
  4559   004020  A4D8               	btfss	status,2,c
  4560   004022  EF15  F020         	goto	u5751
  4561   004026  EF17  F020         	goto	u5750
  4562   00402A                     u5751:
  4563   00402A  EFFA  F01F         	goto	l4693
  4564   00402E                     u5750:
  4565   00402E  0012               	return		;funcret
  4566   004030                     __end_of_memcpy:
  4567                           	callstack 0
  4568                           
  4569 ;; *************** function _labs *****************
  4570 ;; Defined at:
  4571 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  a               4    0[COMRAM] long 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  4    0[COMRAM] long 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4587 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4588 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4589 ;;Total ram usage:        8 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_efgtoa
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text17
  4599   003F8A                     __ptext17:
  4600                           	callstack 0
  4601   003F8A                     _labs:
  4602                           	callstack 25
  4603   003F8A  BE04               	btfsc	(labs@a+3)^0,7,c
  4604   003F8C  EFCA  F01F         	goto	u5641
  4605   003F90  EFCC  F01F         	goto	u5640
  4606   003F94                     u5641:
  4607   003F94  EFD6  F01F         	goto	l4659
  4608   003F98                     u5640:
  4609   003F98  C001  F001         	movff	labs@a,?_labs
  4610   003F9C  C002  F002         	movff	labs@a+1,?_labs+1
  4611   003FA0  C003  F003         	movff	labs@a+2,?_labs+2
  4612   003FA4  C004  F004         	movff	labs@a+3,?_labs+3
  4613   003FA8  EFEF  F01F         	goto	l1106
  4614   003FAC                     l4659:
  4615   003FAC  C001  F005         	movff	labs@a,??_labs
  4616   003FB0  C002  F006         	movff	labs@a+1,??_labs+1
  4617   003FB4  C003  F007         	movff	labs@a+2,??_labs+2
  4618   003FB8  C004  F008         	movff	labs@a+3,??_labs+3
  4619   003FBC  1E05               	comf	??_labs^0,f,c
  4620   003FBE  1E06               	comf	(??_labs+1)^0,f,c
  4621   003FC0  1E07               	comf	(??_labs+2)^0,f,c
  4622   003FC2  1E08               	comf	(??_labs+3)^0,f,c
  4623   003FC4  2A05               	incf	??_labs^0,f,c
  4624   003FC6  0E00               	movlw	0
  4625   003FC8  2206               	addwfc	(??_labs+1)^0,f,c
  4626   003FCA  2207               	addwfc	(??_labs+2)^0,f,c
  4627   003FCC  2208               	addwfc	(??_labs+3)^0,f,c
  4628   003FCE  C005  F001         	movff	??_labs,?_labs
  4629   003FD2  C006  F002         	movff	??_labs+1,?_labs+1
  4630   003FD6  C007  F003         	movff	??_labs+2,?_labs+2
  4631   003FDA  C008  F004         	movff	??_labs+3,?_labs+3
  4632   003FDE                     l1106:
  4633   003FDE  0012               	return		;funcret
  4634   003FE0                     __end_of_labs:
  4635                           	callstack 0
  4636                           
  4637 ;; *************** function _floorf *****************
  4638 ;; Defined at:
  4639 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  x               4   83[COMRAM] float 
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  u               4    6[BANK0 ] struct .
  4644 ;;  m               4    0[BANK0 ] unsigned long 
  4645 ;;  e               2    4[BANK0 ] int 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  4   83[COMRAM] float 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;Total ram usage:       20 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; This function calls:
  4662 ;;		Nothing
  4663 ;; This function is called by:
  4664 ;;		_efgtoa
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text18
  4669   003538                     __ptext18:
  4670                           	callstack 0
  4671   003538                     _floorf:
  4672                           	callstack 25
  4673   003538  C150  F066         	movff	floorf@F521,floorf@u
  4674   00353C  C151  F067         	movff	floorf@F521+1,floorf@u+1
  4675   003540  C152  F068         	movff	floorf@F521+2,floorf@u+2
  4676   003544  C153  F069         	movff	floorf@F521+3,floorf@u+3
  4677   003548  C054  F066         	movff	floorf@x,floorf@u
  4678   00354C  C055  F067         	movff	floorf@x+1,floorf@u+1
  4679   003550  C056  F068         	movff	floorf@x+2,floorf@u+2
  4680   003554  C057  F069         	movff	floorf@x+3,floorf@u+3
  4681   003558  0E81               	movlw	129
  4682   00355A  6E58               	movwf	??_floorf^0,c
  4683   00355C  0EFF               	movlw	255
  4684   00355E  6E59               	movwf	(??_floorf+1)^0,c
  4685   003560  C066  F05A         	movff	floorf@u,??_floorf+2
  4686   003564  C067  F05B         	movff	floorf@u+1,??_floorf+3
  4687   003568  C068  F05C         	movff	floorf@u+2,??_floorf+4
  4688   00356C  C069  F05D         	movff	floorf@u+3,??_floorf+5
  4689   003570  0E18               	movlw	24
  4690   003572  EFC0  F01A         	goto	u5650
  4691   003576                     u5655:
  4692   003576  90D8               	bcf	status,0,c
  4693   003578  325D               	rrcf	(??_floorf+5)^0,f,c
  4694   00357A  325C               	rrcf	(??_floorf+4)^0,f,c
  4695   00357C  325B               	rrcf	(??_floorf+3)^0,f,c
  4696   00357E  325A               	rrcf	(??_floorf+2)^0,f,c
  4697   003580                     u5650:
  4698   003580  2EE8               	decfsz	wreg,f,c
  4699   003582  EFBB  F01A         	goto	u5655
  4700   003586  505A               	movf	(??_floorf+2)^0,w,c
  4701   003588  2458               	addwf	??_floorf^0,w,c
  4702   00358A  0100               	movlb	0	; () banked
  4703   00358C  6F64               	movwf	floorf@e& (0+255),b
  4704   00358E  0E00               	movlw	0
  4705   003590  2059               	addwfc	(??_floorf+1)^0,w,c
  4706   003592  6F65               	movwf	(floorf@e+1)& (0+255),b
  4707   003594  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4708   003596  EFD6  F01A         	goto	u5661
  4709   00359A  5165               	movf	(floorf@e+1)& (0+255),w,b
  4710   00359C  E109               	bnz	u5660
  4711   00359E  0E17               	movlw	23
  4712   0035A0  5D64               	subwf	floorf@e& (0+255),w,b
  4713   0035A2  A0D8               	btfss	status,0,c
  4714   0035A4  EFD6  F01A         	goto	u5661
  4715   0035A8  EFD8  F01A         	goto	u5660
  4716   0035AC                     u5661:
  4717   0035AC  EFE2  F01A         	goto	l4669
  4718   0035B0                     u5660:
  4719   0035B0                     l4667:
  4720                           
  4721                           ; BSR set to: 0
  4722   0035B0  C054  F054         	movff	floorf@x,?_floorf
  4723   0035B4  C055  F055         	movff	floorf@x+1,?_floorf+1
  4724   0035B8  C056  F056         	movff	floorf@x+2,?_floorf+2
  4725   0035BC  C057  F057         	movff	floorf@x+3,?_floorf+3
  4726   0035C0  EFA6  F01B         	goto	l1092
  4727   0035C4                     l4669:
  4728                           
  4729                           ; BSR set to: 0
  4730   0035C4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4731   0035C6  EFE7  F01A         	goto	u5671
  4732   0035CA  EFE9  F01A         	goto	u5670
  4733   0035CE                     u5671:
  4734   0035CE  EF5A  F01B         	goto	l4679
  4735   0035D2                     u5670:
  4736   0035D2                     
  4737                           ; BSR set to: 0
  4738   0035D2  C064  F058         	movff	floorf@e,??_floorf
  4739   0035D6  0EFF               	movlw	255
  4740   0035D8  6E59               	movwf	(??_floorf+1)^0,c
  4741   0035DA  0EFF               	movlw	255
  4742   0035DC  6E5A               	movwf	(??_floorf+2)^0,c
  4743   0035DE  0E7F               	movlw	127
  4744   0035E0  6E5B               	movwf	(??_floorf+3)^0,c
  4745   0035E2  0E00               	movlw	0
  4746   0035E4  6E5C               	movwf	(??_floorf+4)^0,c
  4747   0035E6                     u5685:
  4748   0035E6  6658               	tstfsz	??_floorf^0,c
  4749   0035E8  EFF8  F01A         	goto	u5686
  4750   0035EC  EF00  F01B         	goto	u5687
  4751   0035F0                     u5686:
  4752   0035F0  345C               	rlcf	(??_floorf+4)^0,w,c
  4753   0035F2  325C               	rrcf	(??_floorf+4)^0,f,c
  4754   0035F4  325B               	rrcf	(??_floorf+3)^0,f,c
  4755   0035F6  325A               	rrcf	(??_floorf+2)^0,f,c
  4756   0035F8  3259               	rrcf	(??_floorf+1)^0,f,c
  4757   0035FA  2E58               	decfsz	??_floorf^0,f,c
  4758   0035FC  EFF3  F01A         	goto	u5685
  4759   003600                     u5687:
  4760   003600  C059  F060         	movff	??_floorf+1,floorf@m
  4761   003604  C05A  F061         	movff	??_floorf+2,floorf@m+1
  4762   003608  C05B  F062         	movff	??_floorf+3,floorf@m+2
  4763   00360C  C05C  F063         	movff	??_floorf+4,floorf@m+3
  4764   003610  0100               	movlb	0	; () banked
  4765   003612  5160               	movf	floorf@m& (0+255),w,b
  4766   003614  1566               	andwf	floorf@u& (0+255),w,b
  4767   003616  6E58               	movwf	??_floorf^0,c
  4768   003618  5161               	movf	(floorf@m+1)& (0+255),w,b
  4769   00361A  1567               	andwf	(floorf@u+1)& (0+255),w,b
  4770   00361C  6E59               	movwf	(??_floorf+1)^0,c
  4771   00361E  5162               	movf	(floorf@m+2)& (0+255),w,b
  4772   003620  1568               	andwf	(floorf@u+2)& (0+255),w,b
  4773   003622  6E5A               	movwf	(??_floorf+2)^0,c
  4774   003624  5163               	movf	(floorf@m+3)& (0+255),w,b
  4775   003626  1569               	andwf	(floorf@u+3)& (0+255),w,b
  4776   003628  6E5B               	movwf	(??_floorf+3)^0,c
  4777   00362A  5058               	movf	??_floorf^0,w,c
  4778   00362C  1059               	iorwf	(??_floorf+1)^0,w,c
  4779   00362E  105A               	iorwf	(??_floorf+2)^0,w,c
  4780   003630  105B               	iorwf	(??_floorf+3)^0,w,c
  4781   003632  A4D8               	btfss	status,2,c
  4782   003634  EF1E  F01B         	goto	u5691
  4783   003638  EF20  F01B         	goto	u5690
  4784   00363C                     u5691:
  4785   00363C  EF22  F01B         	goto	l4675
  4786   003640                     u5690:
  4787   003640  EFD8  F01A         	goto	l4667
  4788   003644                     l4675:
  4789                           
  4790                           ; BSR set to: 0
  4791   003644  C066  F058         	movff	floorf@u,??_floorf
  4792   003648  C067  F059         	movff	floorf@u+1,??_floorf+1
  4793   00364C  C068  F05A         	movff	floorf@u+2,??_floorf+2
  4794   003650  C069  F05B         	movff	floorf@u+3,??_floorf+3
  4795   003654  0E20               	movlw	32
  4796   003656  EF32  F01B         	goto	u5700
  4797   00365A                     u5705:
  4798   00365A  90D8               	bcf	status,0,c
  4799   00365C  325B               	rrcf	(??_floorf+3)^0,f,c
  4800   00365E  325A               	rrcf	(??_floorf+2)^0,f,c
  4801   003660  3259               	rrcf	(??_floorf+1)^0,f,c
  4802   003662  3258               	rrcf	??_floorf^0,f,c
  4803   003664                     u5700:
  4804   003664  2EE8               	decfsz	wreg,f,c
  4805   003666  EF2D  F01B         	goto	u5705
  4806   00366A  5058               	movf	??_floorf^0,w,c
  4807   00366C  1059               	iorwf	(??_floorf+1)^0,w,c
  4808   00366E  105A               	iorwf	(??_floorf+2)^0,w,c
  4809   003670  105B               	iorwf	(??_floorf+3)^0,w,c
  4810   003672  B4D8               	btfsc	status,2,c
  4811   003674  EF3E  F01B         	goto	u5711
  4812   003678  EF40  F01B         	goto	u5710
  4813   00367C                     u5711:
  4814   00367C  EF48  F01B         	goto	l1095
  4815   003680                     u5710:
  4816   003680                     
  4817                           ; BSR set to: 0
  4818   003680  5160               	movf	floorf@m& (0+255),w,b
  4819   003682  2766               	addwf	floorf@u& (0+255),f,b
  4820   003684  5161               	movf	(floorf@m+1)& (0+255),w,b
  4821   003686  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  4822   003688  5162               	movf	(floorf@m+2)& (0+255),w,b
  4823   00368A  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  4824   00368C  5163               	movf	(floorf@m+3)& (0+255),w,b
  4825   00368E  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  4826   003690                     l1095:
  4827                           
  4828                           ; BSR set to: 0
  4829   003690  1D60               	comf	floorf@m& (0+255),w,b
  4830   003692  6E58               	movwf	??_floorf^0,c
  4831   003694  1D61               	comf	(floorf@m+1)& (0+255),w,b
  4832   003696  6E59               	movwf	(??_floorf+1)^0,c
  4833   003698  1D62               	comf	(floorf@m+2)& (0+255),w,b
  4834   00369A  6E5A               	movwf	(??_floorf+2)^0,c
  4835   00369C  1D63               	comf	(floorf@m+3)& (0+255),w,b
  4836   00369E  6E5B               	movwf	(??_floorf+3)^0,c
  4837   0036A0  5058               	movf	??_floorf^0,w,c
  4838   0036A2  1766               	andwf	floorf@u& (0+255),f,b
  4839   0036A4  5059               	movf	(??_floorf+1)^0,w,c
  4840   0036A6  1767               	andwf	(floorf@u+1)& (0+255),f,b
  4841   0036A8  505A               	movf	(??_floorf+2)^0,w,c
  4842   0036AA  1768               	andwf	(floorf@u+2)& (0+255),f,b
  4843   0036AC  505B               	movf	(??_floorf+3)^0,w,c
  4844   0036AE  1769               	andwf	(floorf@u+3)& (0+255),f,b
  4845   0036B0  EF9E  F01B         	goto	l4687
  4846   0036B4                     l4679:
  4847                           
  4848                           ; BSR set to: 0
  4849   0036B4  C066  F058         	movff	floorf@u,??_floorf
  4850   0036B8  C067  F059         	movff	floorf@u+1,??_floorf+1
  4851   0036BC  C068  F05A         	movff	floorf@u+2,??_floorf+2
  4852   0036C0  C069  F05B         	movff	floorf@u+3,??_floorf+3
  4853   0036C4  0E20               	movlw	32
  4854   0036C6  EF6A  F01B         	goto	u5720
  4855   0036CA                     u5725:
  4856   0036CA  90D8               	bcf	status,0,c
  4857   0036CC  325B               	rrcf	(??_floorf+3)^0,f,c
  4858   0036CE  325A               	rrcf	(??_floorf+2)^0,f,c
  4859   0036D0  3259               	rrcf	(??_floorf+1)^0,f,c
  4860   0036D2  3258               	rrcf	??_floorf^0,f,c
  4861   0036D4                     u5720:
  4862   0036D4  2EE8               	decfsz	wreg,f,c
  4863   0036D6  EF65  F01B         	goto	u5725
  4864   0036DA  5058               	movf	??_floorf^0,w,c
  4865   0036DC  1059               	iorwf	(??_floorf+1)^0,w,c
  4866   0036DE  105A               	iorwf	(??_floorf+2)^0,w,c
  4867   0036E0  105B               	iorwf	(??_floorf+3)^0,w,c
  4868   0036E2  A4D8               	btfss	status,2,c
  4869   0036E4  EF76  F01B         	goto	u5731
  4870   0036E8  EF78  F01B         	goto	u5730
  4871   0036EC                     u5731:
  4872   0036EC  EF82  F01B         	goto	l4683
  4873   0036F0                     u5730:
  4874   0036F0                     
  4875                           ; BSR set to: 0
  4876   0036F0  0E00               	movlw	0
  4877   0036F2  6F66               	movwf	floorf@u& (0+255),b
  4878   0036F4  0E00               	movlw	0
  4879   0036F6  6F67               	movwf	(floorf@u+1)& (0+255),b
  4880   0036F8  0E00               	movlw	0
  4881   0036FA  6F68               	movwf	(floorf@u+2)& (0+255),b
  4882   0036FC  0E00               	movlw	0
  4883   0036FE  6F69               	movwf	(floorf@u+3)& (0+255),b
  4884   003700  EF9E  F01B         	goto	l4687
  4885   003704                     l4683:
  4886                           
  4887                           ; BSR set to: 0
  4888   003704  90D8               	bcf	status,0,c
  4889   003706  3566               	rlcf	floorf@u& (0+255),w,b
  4890   003708  6E58               	movwf	??_floorf^0,c
  4891   00370A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  4892   00370C  6E59               	movwf	(??_floorf+1)^0,c
  4893   00370E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  4894   003710  6E5A               	movwf	(??_floorf+2)^0,c
  4895   003712  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  4896   003714  6E5B               	movwf	(??_floorf+3)^0,c
  4897   003716  5058               	movf	??_floorf^0,w,c
  4898   003718  1059               	iorwf	(??_floorf+1)^0,w,c
  4899   00371A  105A               	iorwf	(??_floorf+2)^0,w,c
  4900   00371C  105B               	iorwf	(??_floorf+3)^0,w,c
  4901   00371E  B4D8               	btfsc	status,2,c
  4902   003720  EF94  F01B         	goto	u5741
  4903   003724  EF96  F01B         	goto	u5740
  4904   003728                     u5741:
  4905   003728  EF9E  F01B         	goto	l4687
  4906   00372C                     u5740:
  4907   00372C                     
  4908                           ; BSR set to: 0
  4909   00372C  0E00               	movlw	0
  4910   00372E  6F66               	movwf	floorf@u& (0+255),b
  4911   003730  0E00               	movlw	0
  4912   003732  6F67               	movwf	(floorf@u+1)& (0+255),b
  4913   003734  0E80               	movlw	128
  4914   003736  6F68               	movwf	(floorf@u+2)& (0+255),b
  4915   003738  0EBF               	movlw	191
  4916   00373A  6F69               	movwf	(floorf@u+3)& (0+255),b
  4917   00373C                     l4687:
  4918                           
  4919                           ; BSR set to: 0
  4920   00373C  C066  F054         	movff	floorf@u,?_floorf
  4921   003740  C067  F055         	movff	floorf@u+1,?_floorf+1
  4922   003744  C068  F056         	movff	floorf@u+2,?_floorf+2
  4923   003748  C069  F057         	movff	floorf@u+3,?_floorf+3
  4924   00374C                     l1092:
  4925                           
  4926                           ; BSR set to: 0
  4927   00374C  0012               	return		;funcret
  4928   00374E                     __end_of_floorf:
  4929                           	callstack 0
  4930                           
  4931 ;; *************** function ___fpclassifyf *****************
  4932 ;; Defined at:
  4933 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  x               4    0[COMRAM] float 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  u               4   10[COMRAM] struct .
  4938 ;;  e               2    8[COMRAM] int 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  2    0[COMRAM] int 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4952 ;;Total ram usage:       14 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_efgtoa
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text19
  4962   003C24                     __ptext19:
  4963                           	callstack 0
  4964   003C24                     ___fpclassifyf:
  4965                           	callstack 25
  4966   003C24  C154  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4967   003C28  C155  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4968   003C2C  C156  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4969   003C30  C157  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4970   003C34  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4971   003C38  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4972   003C3C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4973   003C40  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4974   003C44  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4975   003C48  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4976   003C4C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4977   003C50  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4978   003C54  0E18               	movlw	24
  4979   003C56  EF32  F01E         	goto	u5560
  4980   003C5A                     u5565:
  4981   003C5A  90D8               	bcf	status,0,c
  4982   003C5C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4983   003C5E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4984   003C60  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4985   003C62  3205               	rrcf	??___fpclassifyf^0,f,c
  4986   003C64                     u5560:
  4987   003C64  2EE8               	decfsz	wreg,f,c
  4988   003C66  EF2D  F01E         	goto	u5565
  4989   003C6A  5005               	movf	??___fpclassifyf^0,w,c
  4990   003C6C  6E09               	movwf	___fpclassifyf@e^0,c
  4991   003C6E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4992   003C70  5009               	movf	___fpclassifyf@e^0,w,c
  4993   003C72  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4994   003C74  A4D8               	btfss	status,2,c
  4995   003C76  EF3F  F01E         	goto	u5571
  4996   003C7A  EF41  F01E         	goto	u5570
  4997   003C7E                     u5571:
  4998   003C7E  EF61  F01E         	goto	l4641
  4999   003C82                     u5570:
  5000   003C82  90D8               	bcf	status,0,c
  5001   003C84  340B               	rlcf	___fpclassifyf@u^0,w,c
  5002   003C86  6E05               	movwf	??___fpclassifyf^0,c
  5003   003C88  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5004   003C8A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5005   003C8C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5006   003C8E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5007   003C90  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5008   003C92  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5009   003C94  5005               	movf	??___fpclassifyf^0,w,c
  5010   003C96  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5011   003C98  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5012   003C9A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5013   003C9C  A4D8               	btfss	status,2,c
  5014   003C9E  EF53  F01E         	goto	u5581
  5015   003CA2  EF55  F01E         	goto	u5580
  5016   003CA6                     u5581:
  5017   003CA6  EF5B  F01E         	goto	l4637
  5018   003CAA                     u5580:
  5019   003CAA  0E00               	movlw	0
  5020   003CAC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5021   003CAE  0E02               	movlw	2
  5022   003CB0  6E01               	movwf	?___fpclassifyf^0,c
  5023   003CB2  EF90  F01E         	goto	l1085
  5024   003CB6                     l4637:
  5025   003CB6  0E00               	movlw	0
  5026   003CB8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5027   003CBA  0E03               	movlw	3
  5028   003CBC  6E01               	movwf	?___fpclassifyf^0,c
  5029   003CBE  EF90  F01E         	goto	l1085
  5030   003CC2                     l4641:
  5031   003CC2  2809               	incf	___fpclassifyf@e^0,w,c
  5032   003CC4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5033   003CC6  A4D8               	btfss	status,2,c
  5034   003CC8  EF68  F01E         	goto	u5591
  5035   003CCC  EF6A  F01E         	goto	u5590
  5036   003CD0                     u5591:
  5037   003CD0  EF8C  F01E         	goto	l4647
  5038   003CD4                     u5590:
  5039   003CD4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5040   003CD8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5041   003CDC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5042   003CE0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5043   003CE4  0E09               	movlw	9
  5044   003CE6                     u5605:
  5045   003CE6  90D8               	bcf	status,0,c
  5046   003CE8  3605               	rlcf	??___fpclassifyf^0,f,c
  5047   003CEA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5048   003CEC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5049   003CEE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5050   003CF0  2EE8               	decfsz	wreg,f,c
  5051   003CF2  EF73  F01E         	goto	u5605
  5052   003CF6  5005               	movf	??___fpclassifyf^0,w,c
  5053   003CF8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5054   003CFA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5055   003CFC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5056   003CFE  B4D8               	btfsc	status,2,c
  5057   003D00  EF84  F01E         	goto	u5611
  5058   003D04  EF87  F01E         	goto	u5610
  5059   003D08                     u5611:
  5060   003D08  0E01               	movlw	1
  5061   003D0A  EF88  F01E         	goto	u5620
  5062   003D0E                     u5610:
  5063   003D0E  0E00               	movlw	0
  5064   003D10                     u5620:
  5065   003D10  6E01               	movwf	?___fpclassifyf^0,c
  5066   003D12  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5067   003D14  EF90  F01E         	goto	l1085
  5068   003D18                     l4647:
  5069   003D18  0E00               	movlw	0
  5070   003D1A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5071   003D1C  0E04               	movlw	4
  5072   003D1E  6E01               	movwf	?___fpclassifyf^0,c
  5073   003D20                     l1085:
  5074   003D20  0012               	return		;funcret
  5075   003D22                     __end_of___fpclassifyf:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function ___flneg *****************
  5079 ;; Defined at:
  5080 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  f1              4    0[COMRAM] int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  4    0[COMRAM] int 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;Total ram usage:        4 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_efgtoa
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text20
  5108   004338                     __ptext20:
  5109                           	callstack 0
  5110   004338                     ___flneg:
  5111                           	callstack 25
  5112   004338  5001               	movf	___flneg@f1^0,w,c
  5113   00433A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5114   00433C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5115   00433E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5116   004340  B4D8               	btfsc	status,2,c
  5117   004342  EFA5  F021         	goto	u5461
  5118   004346  EFA7  F021         	goto	u5460
  5119   00434A                     u5461:
  5120   00434A  EFAF  F021         	goto	l4569
  5121   00434E                     u5460:
  5122   00434E  0E00               	movlw	0
  5123   004350  1A01               	xorwf	___flneg@f1^0,f,c
  5124   004352  0E00               	movlw	0
  5125   004354  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5126   004356  0E00               	movlw	0
  5127   004358  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5128   00435A  0E80               	movlw	128
  5129   00435C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5130   00435E                     l4569:
  5131   00435E  C001  F001         	movff	___flneg@f1,?___flneg
  5132   004362  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5133   004366  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5134   00436A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5135   00436E  0012               	return		;funcret
  5136   004370                     __end_of___flneg:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _sendStringSerial4 *****************
  5140 ;; Defined at:
  5141 ;;		line 41 in file "serial.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  string          1    1[COMRAM] PTR unsigned char 
  5144 ;;		 -> color_cardCheck@senddata(25), 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5156 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;Total ram usage:        1 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 1
  5163 ;; This function calls:
  5164 ;;		_sendCharSerial4
  5165 ;; This function is called by:
  5166 ;;		_color_cardCheck
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text21
  5171   0043C4                     __ptext21:
  5172                           	callstack 0
  5173   0043C4                     _sendStringSerial4:
  5174                           	callstack 28
  5175   0043C4                     
  5176                           ;serial.c: 43:     while(*string != 0){
  5177   0043C4  EFEB  F021         	goto	l3797
  5178   0043C8                     l3793:
  5179                           
  5180                           ;serial.c: 44:   sendCharSerial4(*string++);
  5181   0043C8  5002               	movf	sendStringSerial4@string^0,w,c
  5182   0043CA  6ED9               	movwf	fsr2l,c
  5183   0043CC  6ADA               	clrf	fsr2h,c
  5184   0043CE  50DF               	movf	indf2,w,c
  5185   0043D0  EC3A  F022         	call	_sendCharSerial4
  5186   0043D4  2A02               	incf	sendStringSerial4@string^0,f,c
  5187   0043D6                     l3797:
  5188                           
  5189                           ;serial.c: 43:     while(*string != 0){
  5190   0043D6  5002               	movf	sendStringSerial4@string^0,w,c
  5191   0043D8  6ED9               	movwf	fsr2l,c
  5192   0043DA  6ADA               	clrf	fsr2h,c
  5193   0043DC  50DF               	movf	indf2,w,c
  5194   0043DE  A4D8               	btfss	status,2,c
  5195   0043E0  EFF4  F021         	goto	u4171
  5196   0043E4  EFF6  F021         	goto	u4170
  5197   0043E8                     u4171:
  5198   0043E8  EFE4  F021         	goto	l3793
  5199   0043EC                     u4170:
  5200   0043EC  0012               	return		;funcret
  5201   0043EE                     __end_of_sendStringSerial4:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _sendCharSerial4 *****************
  5205 ;; Defined at:
  5206 ;;		line 34 in file "serial.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  charToSend      1    wreg     unsigned char 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  charToSend      1    0[COMRAM] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;Total ram usage:        1 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_sendStringSerial4
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text22
  5234   004474                     __ptext22:
  5235                           	callstack 0
  5236   004474                     _sendCharSerial4:
  5237                           	callstack 28
  5238                           
  5239                           ;incstack = 0
  5240                           ;sendCharSerial4@charToSend stored from wreg
  5241   004474  6E01               	movwf	sendCharSerial4@charToSend^0,c
  5242   004476                     l176:
  5243   004476  010E               	movlb	14	; () banked
  5244   004478  A537               	btfss	55,2,b	;volatile
  5245   00447A  EF41  F022         	goto	u4031
  5246   00447E  EF43  F022         	goto	u4030
  5247   004482                     u4031:
  5248   004482  EF3B  F022         	goto	l176
  5249   004486                     u4030:
  5250   004486                     
  5251                           ; BSR set to: 14
  5252                           ;serial.c: 36:     TX4REG = charToSend;
  5253   004486  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5254   00448A                     
  5255                           ; BSR set to: 14
  5256   00448A  0012               	return		;funcret
  5257   00448C                     __end_of_sendCharSerial4:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function _color_read_Red *****************
  5261 ;; Defined at:
  5262 ;;		line 62 in file "color.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  tmp             2    9[COMRAM] unsigned int 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  2    4[COMRAM] unsigned int 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5278 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;Total ram usage:        7 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 2
  5283 ;; This function calls:
  5284 ;;		_I2C_2_Master_Read
  5285 ;;		_I2C_2_Master_RepStart
  5286 ;;		_I2C_2_Master_Start
  5287 ;;		_I2C_2_Master_Stop
  5288 ;;		_I2C_2_Master_Write
  5289 ;; This function is called by:
  5290 ;;		_color_cardCheck
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text23
  5295   004030                     __ptext23:
  5296                           	callstack 0
  5297   004030                     _color_read_Red:
  5298                           	callstack 27
  5299   004030                     
  5300                           ;color.c: 64:  unsigned int tmp;;color.c: 65:  I2C_2_Master_Start();
  5301   004030  EC51  F022         	call	_I2C_2_Master_Start	;wreg free
  5302                           
  5303                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x00);
  5304   004034  0E52               	movlw	82
  5305   004036  EC46  F022         	call	_I2C_2_Master_Write
  5306                           
  5307                           ;color.c: 67:  I2C_2_Master_Write(0xA0 | 0x16);
  5308   00403A  0EB6               	movlw	182
  5309   00403C  EC46  F022         	call	_I2C_2_Master_Write
  5310                           
  5311                           ;color.c: 68:  I2C_2_Master_RepStart();
  5312   004040  EC56  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5313                           
  5314                           ;color.c: 69:  I2C_2_Master_Write(0x52 | 0x01);
  5315   004044  0E53               	movlw	83
  5316   004046  EC46  F022         	call	_I2C_2_Master_Write
  5317                           
  5318                           ;color.c: 70:  tmp=I2C_2_Master_Read(1);
  5319   00404A  0E01               	movlw	1
  5320   00404C  EC20  F021         	call	_I2C_2_Master_Read
  5321   004050  6E07               	movwf	??_color_read_Red^0,c
  5322   004052  5007               	movf	??_color_read_Red^0,w,c
  5323   004054  6E0A               	movwf	color_read_Red@tmp^0,c
  5324   004056  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5325                           
  5326                           ;color.c: 71:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5327   004058  0E00               	movlw	0
  5328   00405A  EC20  F021         	call	_I2C_2_Master_Read
  5329   00405E  6E07               	movwf	??_color_read_Red^0,c
  5330   004060  5007               	movf	??_color_read_Red^0,w,c
  5331   004062  6E09               	movwf	(??_color_read_Red+2)^0,c
  5332   004064  6A08               	clrf	(??_color_read_Red+1)^0,c
  5333   004066  500A               	movf	color_read_Red@tmp^0,w,c
  5334   004068  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5335   00406A  6E0A               	movwf	color_read_Red@tmp^0,c
  5336   00406C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5337   00406E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5338   004070  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5339                           
  5340                           ;color.c: 72:  I2C_2_Master_Stop();
  5341   004072  EC4C  F022         	call	_I2C_2_Master_Stop	;wreg free
  5342   004076                     
  5343                           ;color.c: 73:  return tmp;
  5344   004076  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5345   00407A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5346   00407E  0012               	return		;funcret
  5347   004080                     __end_of_color_read_Red:
  5348                           	callstack 0
  5349                           
  5350 ;; *************** function _color_read_Green *****************
  5351 ;; Defined at:
  5352 ;;		line 76 in file "color.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  tmp             2    9[COMRAM] unsigned int 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  2    4[COMRAM] unsigned int 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;Total ram usage:        7 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 2
  5373 ;; This function calls:
  5374 ;;		_I2C_2_Master_Read
  5375 ;;		_I2C_2_Master_RepStart
  5376 ;;		_I2C_2_Master_Start
  5377 ;;		_I2C_2_Master_Stop
  5378 ;;		_I2C_2_Master_Write
  5379 ;; This function is called by:
  5380 ;;		_color_cardCheck
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text24
  5385   004080                     __ptext24:
  5386                           	callstack 0
  5387   004080                     _color_read_Green:
  5388                           	callstack 27
  5389   004080                     
  5390                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  5391   004080  EC51  F022         	call	_I2C_2_Master_Start	;wreg free
  5392                           
  5393                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  5394   004084  0E52               	movlw	82
  5395   004086  EC46  F022         	call	_I2C_2_Master_Write
  5396                           
  5397                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  5398   00408A  0EB8               	movlw	184
  5399   00408C  EC46  F022         	call	_I2C_2_Master_Write
  5400                           
  5401                           ;color.c: 82:  I2C_2_Master_RepStart();
  5402   004090  EC56  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5403                           
  5404                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  5405   004094  0E53               	movlw	83
  5406   004096  EC46  F022         	call	_I2C_2_Master_Write
  5407                           
  5408                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  5409   00409A  0E01               	movlw	1
  5410   00409C  EC20  F021         	call	_I2C_2_Master_Read
  5411   0040A0  6E07               	movwf	??_color_read_Green^0,c
  5412   0040A2  5007               	movf	??_color_read_Green^0,w,c
  5413   0040A4  6E0A               	movwf	color_read_Green@tmp^0,c
  5414   0040A6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5415                           
  5416                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5417   0040A8  0E00               	movlw	0
  5418   0040AA  EC20  F021         	call	_I2C_2_Master_Read
  5419   0040AE  6E07               	movwf	??_color_read_Green^0,c
  5420   0040B0  5007               	movf	??_color_read_Green^0,w,c
  5421   0040B2  6E09               	movwf	(??_color_read_Green+2)^0,c
  5422   0040B4  6A08               	clrf	(??_color_read_Green+1)^0,c
  5423   0040B6  500A               	movf	color_read_Green@tmp^0,w,c
  5424   0040B8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5425   0040BA  6E0A               	movwf	color_read_Green@tmp^0,c
  5426   0040BC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5427   0040BE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5428   0040C0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5429                           
  5430                           ;color.c: 86:  I2C_2_Master_Stop();
  5431   0040C2  EC4C  F022         	call	_I2C_2_Master_Stop	;wreg free
  5432   0040C6                     
  5433                           ;color.c: 87:  return tmp;
  5434   0040C6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5435   0040CA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5436   0040CE  0012               	return		;funcret
  5437   0040D0                     __end_of_color_read_Green:
  5438                           	callstack 0
  5439                           
  5440 ;; *************** function _color_read_Clear *****************
  5441 ;; Defined at:
  5442 ;;		line 104 in file "color.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;		None
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  tmp             2    9[COMRAM] unsigned int 
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  2    4[COMRAM] unsigned int 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5458 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5459 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5460 ;;Total ram usage:        7 bytes
  5461 ;; Hardware stack levels used: 1
  5462 ;; Hardware stack levels required when called: 2
  5463 ;; This function calls:
  5464 ;;		_I2C_2_Master_Read
  5465 ;;		_I2C_2_Master_RepStart
  5466 ;;		_I2C_2_Master_Start
  5467 ;;		_I2C_2_Master_Stop
  5468 ;;		_I2C_2_Master_Write
  5469 ;; This function is called by:
  5470 ;;		_color_cardCheck
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text25
  5475   0040D0                     __ptext25:
  5476                           	callstack 0
  5477   0040D0                     _color_read_Clear:
  5478                           	callstack 27
  5479   0040D0                     
  5480                           ;color.c: 108:  unsigned int tmp;;color.c: 109:  I2C_2_Master_Start();
  5481   0040D0  EC51  F022         	call	_I2C_2_Master_Start	;wreg free
  5482                           
  5483                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x00);
  5484   0040D4  0E52               	movlw	82
  5485   0040D6  EC46  F022         	call	_I2C_2_Master_Write
  5486                           
  5487                           ;color.c: 111:  I2C_2_Master_Write(0xA0 | 0x14);
  5488   0040DA  0EB4               	movlw	180
  5489   0040DC  EC46  F022         	call	_I2C_2_Master_Write
  5490                           
  5491                           ;color.c: 112:  I2C_2_Master_RepStart();
  5492   0040E0  EC56  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5493                           
  5494                           ;color.c: 113:  I2C_2_Master_Write(0x52 | 0x01);
  5495   0040E4  0E53               	movlw	83
  5496   0040E6  EC46  F022         	call	_I2C_2_Master_Write
  5497                           
  5498                           ;color.c: 114:  tmp=I2C_2_Master_Read(1);
  5499   0040EA  0E01               	movlw	1
  5500   0040EC  EC20  F021         	call	_I2C_2_Master_Read
  5501   0040F0  6E07               	movwf	??_color_read_Clear^0,c
  5502   0040F2  5007               	movf	??_color_read_Clear^0,w,c
  5503   0040F4  6E0A               	movwf	color_read_Clear@tmp^0,c
  5504   0040F6  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  5505                           
  5506                           ;color.c: 115:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5507   0040F8  0E00               	movlw	0
  5508   0040FA  EC20  F021         	call	_I2C_2_Master_Read
  5509   0040FE  6E07               	movwf	??_color_read_Clear^0,c
  5510   004100  5007               	movf	??_color_read_Clear^0,w,c
  5511   004102  6E09               	movwf	(??_color_read_Clear+2)^0,c
  5512   004104  6A08               	clrf	(??_color_read_Clear+1)^0,c
  5513   004106  500A               	movf	color_read_Clear@tmp^0,w,c
  5514   004108  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  5515   00410A  6E0A               	movwf	color_read_Clear@tmp^0,c
  5516   00410C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  5517   00410E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  5518   004110  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  5519                           
  5520                           ;color.c: 116:  I2C_2_Master_Stop();
  5521   004112  EC4C  F022         	call	_I2C_2_Master_Stop	;wreg free
  5522   004116                     
  5523                           ;color.c: 117:  return tmp;
  5524   004116  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  5525   00411A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5526   00411E  0012               	return		;funcret
  5527   004120                     __end_of_color_read_Clear:
  5528                           	callstack 0
  5529                           
  5530 ;; *************** function _color_read_Blue *****************
  5531 ;; Defined at:
  5532 ;;		line 90 in file "color.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  tmp             2    9[COMRAM] unsigned int 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  2    4[COMRAM] unsigned int 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2, status,0, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5548 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5549 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5550 ;;Total ram usage:        7 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 2
  5553 ;; This function calls:
  5554 ;;		_I2C_2_Master_Read
  5555 ;;		_I2C_2_Master_RepStart
  5556 ;;		_I2C_2_Master_Start
  5557 ;;		_I2C_2_Master_Stop
  5558 ;;		_I2C_2_Master_Write
  5559 ;; This function is called by:
  5560 ;;		_color_cardCheck
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text26
  5565   004120                     __ptext26:
  5566                           	callstack 0
  5567   004120                     _color_read_Blue:
  5568                           	callstack 27
  5569   004120                     
  5570                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  5571   004120  EC51  F022         	call	_I2C_2_Master_Start	;wreg free
  5572                           
  5573                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  5574   004124  0E52               	movlw	82
  5575   004126  EC46  F022         	call	_I2C_2_Master_Write
  5576                           
  5577                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  5578   00412A  0EBA               	movlw	186
  5579   00412C  EC46  F022         	call	_I2C_2_Master_Write
  5580                           
  5581                           ;color.c: 96:  I2C_2_Master_RepStart();
  5582   004130  EC56  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5583                           
  5584                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  5585   004134  0E53               	movlw	83
  5586   004136  EC46  F022         	call	_I2C_2_Master_Write
  5587                           
  5588                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  5589   00413A  0E01               	movlw	1
  5590   00413C  EC20  F021         	call	_I2C_2_Master_Read
  5591   004140  6E07               	movwf	??_color_read_Blue^0,c
  5592   004142  5007               	movf	??_color_read_Blue^0,w,c
  5593   004144  6E0A               	movwf	color_read_Blue@tmp^0,c
  5594   004146  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5595                           
  5596                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5597   004148  0E00               	movlw	0
  5598   00414A  EC20  F021         	call	_I2C_2_Master_Read
  5599   00414E  6E07               	movwf	??_color_read_Blue^0,c
  5600   004150  5007               	movf	??_color_read_Blue^0,w,c
  5601   004152  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5602   004154  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5603   004156  500A               	movf	color_read_Blue@tmp^0,w,c
  5604   004158  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5605   00415A  6E0A               	movwf	color_read_Blue@tmp^0,c
  5606   00415C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5607   00415E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5608   004160  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5609                           
  5610                           ;color.c: 100:  I2C_2_Master_Stop();
  5611   004162  EC4C  F022         	call	_I2C_2_Master_Stop	;wreg free
  5612   004166                     
  5613                           ;color.c: 101:  return tmp;
  5614   004166  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5615   00416A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5616   00416E  0012               	return		;funcret
  5617   004170                     __end_of_color_read_Blue:
  5618                           	callstack 0
  5619                           
  5620 ;; *************** function _I2C_2_Master_Write *****************
  5621 ;; Defined at:
  5622 ;;		line 45 in file "i2c.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  data_byte       1    wreg     unsigned char 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  data_byte       1    1[COMRAM] unsigned char 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  1    wreg      void 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;Total ram usage:        1 bytes
  5641 ;; Hardware stack levels used: 1
  5642 ;; Hardware stack levels required when called: 1
  5643 ;; This function calls:
  5644 ;;		_I2C_2_Master_Idle
  5645 ;; This function is called by:
  5646 ;;		_color_writetoaddr
  5647 ;;		_color_read_Red
  5648 ;;		_color_read_Green
  5649 ;;		_color_read_Blue
  5650 ;;		_color_read_Clear
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text27
  5655   00448C                     __ptext27:
  5656                           	callstack 0
  5657   00448C                     _I2C_2_Master_Write:
  5658                           	callstack 27
  5659                           
  5660                           ;incstack = 0
  5661                           ;I2C_2_Master_Write@data_byte stored from wreg
  5662   00448C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5663   00448E                     
  5664                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5665   00448E  ECF7  F021         	call	_I2C_2_Master_Idle	;wreg free
  5666   004492                     
  5667                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5668   004492  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5669   004496  0012               	return		;funcret
  5670   004498                     __end_of_I2C_2_Master_Write:
  5671                           	callstack 0
  5672                           
  5673 ;; *************** function _I2C_2_Master_Stop *****************
  5674 ;; Defined at:
  5675 ;;		line 39 in file "i2c.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;		None
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  1    wreg      void 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0, cstack
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5693 ;;Total ram usage:        0 bytes
  5694 ;; Hardware stack levels used: 1
  5695 ;; Hardware stack levels required when called: 1
  5696 ;; This function calls:
  5697 ;;		_I2C_2_Master_Idle
  5698 ;; This function is called by:
  5699 ;;		_color_writetoaddr
  5700 ;;		_color_read_Red
  5701 ;;		_color_read_Green
  5702 ;;		_color_read_Blue
  5703 ;;		_color_read_Clear
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text28
  5708   004498                     __ptext28:
  5709                           	callstack 0
  5710   004498                     _I2C_2_Master_Stop:
  5711                           	callstack 27
  5712   004498                     
  5713                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5714   004498  ECF7  F021         	call	_I2C_2_Master_Idle	;wreg free
  5715   00449C                     
  5716                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5717   00449C  010E               	movlb	14	; () banked
  5718   00449E  85DA               	bsf	218,2,b	;volatile
  5719   0044A0                     
  5720                           ; BSR set to: 14
  5721   0044A0  0012               	return		;funcret
  5722   0044A2                     __end_of_I2C_2_Master_Stop:
  5723                           	callstack 0
  5724                           
  5725 ;; *************** function _I2C_2_Master_Start *****************
  5726 ;; Defined at:
  5727 ;;		line 27 in file "i2c.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 1
  5748 ;; This function calls:
  5749 ;;		_I2C_2_Master_Idle
  5750 ;; This function is called by:
  5751 ;;		_color_writetoaddr
  5752 ;;		_color_read_Red
  5753 ;;		_color_read_Green
  5754 ;;		_color_read_Blue
  5755 ;;		_color_read_Clear
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text29
  5760   0044A2                     __ptext29:
  5761                           	callstack 0
  5762   0044A2                     _I2C_2_Master_Start:
  5763                           	callstack 27
  5764   0044A2                     
  5765                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5766   0044A2  ECF7  F021         	call	_I2C_2_Master_Idle	;wreg free
  5767   0044A6                     
  5768                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5769   0044A6  010E               	movlb	14	; () banked
  5770   0044A8  81DA               	bsf	218,0,b	;volatile
  5771   0044AA                     
  5772                           ; BSR set to: 14
  5773   0044AA  0012               	return		;funcret
  5774   0044AC                     __end_of_I2C_2_Master_Start:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function _I2C_2_Master_RepStart *****************
  5778 ;; Defined at:
  5779 ;;		line 33 in file "i2c.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 1
  5800 ;; This function calls:
  5801 ;;		_I2C_2_Master_Idle
  5802 ;; This function is called by:
  5803 ;;		_color_read_Red
  5804 ;;		_color_read_Green
  5805 ;;		_color_read_Blue
  5806 ;;		_color_read_Clear
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text30
  5811   0044AC                     __ptext30:
  5812                           	callstack 0
  5813   0044AC                     _I2C_2_Master_RepStart:
  5814                           	callstack 27
  5815   0044AC                     
  5816                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5817   0044AC  ECF7  F021         	call	_I2C_2_Master_Idle	;wreg free
  5818   0044B0                     
  5819                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5820   0044B0  010E               	movlb	14	; () banked
  5821   0044B2  83DA               	bsf	218,1,b	;volatile
  5822   0044B4                     
  5823                           ; BSR set to: 14
  5824   0044B4  0012               	return		;funcret
  5825   0044B6                     __end_of_I2C_2_Master_RepStart:
  5826                           	callstack 0
  5827                           
  5828 ;; *************** function _I2C_2_Master_Read *****************
  5829 ;; Defined at:
  5830 ;;		line 51 in file "i2c.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  ack             1    wreg     unsigned char 
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  ack             1    2[COMRAM] unsigned char 
  5835 ;;  tmp             1    3[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  1    wreg      unsigned char 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, cstack
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;Total ram usage:        3 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 1
  5852 ;; This function calls:
  5853 ;;		_I2C_2_Master_Idle
  5854 ;; This function is called by:
  5855 ;;		_color_read_Red
  5856 ;;		_color_read_Green
  5857 ;;		_color_read_Blue
  5858 ;;		_color_read_Clear
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text31
  5863   004240                     __ptext31:
  5864                           	callstack 0
  5865   004240                     _I2C_2_Master_Read:
  5866                           	callstack 27
  5867                           
  5868                           ; BSR set to: 14
  5869                           ;incstack = 0
  5870                           ;I2C_2_Master_Read@ack stored from wreg
  5871   004240  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5872   004242                     
  5873                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5874   004242  ECF7  F021         	call	_I2C_2_Master_Idle	;wreg free
  5875   004246                     
  5876                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5877   004246  010E               	movlb	14	; () banked
  5878   004248  87DA               	bsf	218,3,b	;volatile
  5879                           
  5880                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5881   00424A  ECF7  F021         	call	_I2C_2_Master_Idle	;wreg free
  5882   00424E                     
  5883                           ;i2c.c: 57:   tmp = SSP2BUF;
  5884   00424E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5885                           
  5886                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5887   004252  ECF7  F021         	call	_I2C_2_Master_Idle	;wreg free
  5888   004256                     
  5889                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5890   004256  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5891   004258  B4D8               	btfsc	status,2,c
  5892   00425A  EF31  F021         	goto	u4001
  5893   00425E  EF35  F021         	goto	u4000
  5894   004262                     u4001:
  5895   004262  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5896   004264  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5897   004266  EF36  F021         	goto	u4018
  5898   00426A                     u4000:
  5899   00426A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5900   00426C                     u4018:
  5901   00426C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5902   00426E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5903   004270  010E               	movlb	14	; () banked
  5904   004272  51DA               	movf	218,w,b	;volatile
  5905   004274  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5906   004276  0BDF               	andlw	-33
  5907   004278  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5908   00427A  6FDA               	movwf	218,b	;volatile
  5909   00427C                     
  5910                           ; BSR set to: 14
  5911                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5912   00427C  89DA               	bsf	218,4,b	;volatile
  5913   00427E                     
  5914                           ; BSR set to: 14
  5915                           ;i2c.c: 61:   return tmp;
  5916   00427E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5917   004280                     
  5918                           ; BSR set to: 14
  5919   004280  0012               	return		;funcret
  5920   004282                     __end_of_I2C_2_Master_Read:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _I2C_2_Master_Idle *****************
  5924 ;; Defined at:
  5925 ;;		line 22 in file "i2c.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5942 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5943 ;;Total ram usage:        1 bytes
  5944 ;; Hardware stack levels used: 1
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_I2C_2_Master_Start
  5949 ;;		_I2C_2_Master_RepStart
  5950 ;;		_I2C_2_Master_Stop
  5951 ;;		_I2C_2_Master_Write
  5952 ;;		_I2C_2_Master_Read
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text32
  5957   0043EE                     __ptext32:
  5958                           	callstack 0
  5959   0043EE                     _I2C_2_Master_Idle:
  5960                           	callstack 27
  5961   0043EE                     l244:
  5962   0043EE  010E               	movlb	14	; () banked
  5963   0043F0  B5D8               	btfsc	216,2,b	;volatile
  5964   0043F2  EFFD  F021         	goto	u3851
  5965   0043F6  EFFF  F021         	goto	u3850
  5966   0043FA                     u3851:
  5967   0043FA  EFF7  F021         	goto	l244
  5968   0043FE                     u3850:
  5969   0043FE                     
  5970                           ; BSR set to: 14
  5971   0043FE  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5972   004402  0E1F               	movlw	31
  5973   004404  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5974   004406  A4D8               	btfss	status,2,c
  5975   004408  EF08  F022         	goto	u3861
  5976   00440C  EF0A  F022         	goto	u3860
  5977   004410                     u3861:
  5978   004410  EFF7  F021         	goto	l244
  5979   004414                     u3860:
  5980   004414                     
  5981                           ; BSR set to: 14
  5982   004414  0012               	return		;funcret
  5983   004416                     __end_of_I2C_2_Master_Idle:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _RGB_to_HSV *****************
  5987 ;; Defined at:
  5988 ;;		line 141 in file "color.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  R               4   10[BANK0 ] float 
  5991 ;;  G               4   14[BANK0 ] float 
  5992 ;;  B               4   18[BANK0 ] float 
  5993 ;;  C               4   22[BANK0 ] float 
  5994 ;;  H               1   26[BANK0 ] PTR float 
  5995 ;;		 -> color_cardCheck@H(4), 
  5996 ;;  S               1   27[BANK0 ] PTR float 
  5997 ;;		 -> color_cardCheck@S(4), 
  5998 ;;  V               1   28[BANK0 ] PTR float 
  5999 ;;		 -> color_cardCheck@V(4), 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  b               4   93[BANK0 ] float 
  6002 ;;  g               4   89[BANK0 ] float 
  6003 ;;  r               4   85[BANK0 ] float 
  6004 ;;  maxRGB          4   81[BANK0 ] float 
  6005 ;;  deltaRGB        4   77[BANK0 ] float 
  6006 ;;  H_temp          4   73[BANK0 ] float 
  6007 ;;  minRGB          4   57[BANK0 ] float 
  6008 ;;  c_norm          4   29[BANK0 ] float 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6018 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;Total ram usage:       87 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 3
  6025 ;; This function calls:
  6026 ;;		___fladd
  6027 ;;		___fldiv
  6028 ;;		___fleq
  6029 ;;		___flge
  6030 ;;		___flmul
  6031 ;;		___flsub
  6032 ;;		_custom_floatmodulo
  6033 ;; This function is called by:
  6034 ;;		_color_cardCheck
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text33
  6039   00180E                     __ptext33:
  6040                           	callstack 0
  6041   00180E                     _RGB_to_HSV:
  6042                           	callstack 26
  6043   00180E                     
  6044                           ;color.c: 144:     float r = R/65535.0;
  6045   00180E  C06A  F03B         	movff	RGB_to_HSV@R,___fldiv@b
  6046   001812  C06B  F03C         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  6047   001816  C06C  F03D         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  6048   00181A  C06D  F03E         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  6049   00181E  0E00               	movlw	0
  6050   001820  6E3F               	movwf	___fldiv@a^0,c
  6051   001822  0EFF               	movlw	255
  6052   001824  6E40               	movwf	(___fldiv@a+1)^0,c
  6053   001826  0E7F               	movlw	127
  6054   001828  6E41               	movwf	(___fldiv@a+2)^0,c
  6055   00182A  0E47               	movlw	71
  6056   00182C  6E42               	movwf	(___fldiv@a+3)^0,c
  6057   00182E  ECB7  F017         	call	___fldiv	;wreg free
  6058   001832  C03B  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  6059   001836  C03C  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  6060   00183A  C03D  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  6061   00183E  C03E  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  6062                           
  6063                           ;color.c: 145:     float g = G/65535.0;
  6064   001842  C06E  F03B         	movff	RGB_to_HSV@G,___fldiv@b
  6065   001846  C06F  F03C         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  6066   00184A  C070  F03D         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  6067   00184E  C071  F03E         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  6068   001852  0E00               	movlw	0
  6069   001854  6E3F               	movwf	___fldiv@a^0,c
  6070   001856  0EFF               	movlw	255
  6071   001858  6E40               	movwf	(___fldiv@a+1)^0,c
  6072   00185A  0E7F               	movlw	127
  6073   00185C  6E41               	movwf	(___fldiv@a+2)^0,c
  6074   00185E  0E47               	movlw	71
  6075   001860  6E42               	movwf	(___fldiv@a+3)^0,c
  6076   001862  ECB7  F017         	call	___fldiv	;wreg free
  6077   001866  C03B  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  6078   00186A  C03C  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  6079   00186E  C03D  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  6080   001872  C03E  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  6081                           
  6082                           ;color.c: 146:     float b = B/65535.0;
  6083   001876  C072  F03B         	movff	RGB_to_HSV@B,___fldiv@b
  6084   00187A  C073  F03C         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  6085   00187E  C074  F03D         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  6086   001882  C075  F03E         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  6087   001886  0E00               	movlw	0
  6088   001888  6E3F               	movwf	___fldiv@a^0,c
  6089   00188A  0EFF               	movlw	255
  6090   00188C  6E40               	movwf	(___fldiv@a+1)^0,c
  6091   00188E  0E7F               	movlw	127
  6092   001890  6E41               	movwf	(___fldiv@a+2)^0,c
  6093   001892  0E47               	movlw	71
  6094   001894  6E42               	movwf	(___fldiv@a+3)^0,c
  6095   001896  ECB7  F017         	call	___fldiv	;wreg free
  6096   00189A  C03B  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  6097   00189E  C03C  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  6098   0018A2  C03D  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  6099   0018A6  C03E  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  6100                           
  6101                           ;color.c: 151:     float c_norm = 1.0 /(C/65535.0);
  6102   0018AA  0E00               	movlw	0
  6103   0018AC  6E3F               	movwf	___fldiv@a^0,c
  6104   0018AE  0EFF               	movlw	255
  6105   0018B0  6E40               	movwf	(___fldiv@a+1)^0,c
  6106   0018B2  0E7F               	movlw	127
  6107   0018B4  6E41               	movwf	(___fldiv@a+2)^0,c
  6108   0018B6  0E47               	movlw	71
  6109   0018B8  6E42               	movwf	(___fldiv@a+3)^0,c
  6110   0018BA  C076  F03B         	movff	RGB_to_HSV@C,___fldiv@b
  6111   0018BE  C077  F03C         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  6112   0018C2  C078  F03D         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  6113   0018C6  C079  F03E         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  6114   0018CA  ECB7  F017         	call	___fldiv	;wreg free
  6115   0018CE  C03B  F081         	movff	?___fldiv,_RGB_to_HSV$1725
  6116   0018D2  C03C  F082         	movff	?___fldiv+1,_RGB_to_HSV$1725+1
  6117   0018D6  C03D  F083         	movff	?___fldiv+2,_RGB_to_HSV$1725+2
  6118   0018DA  C03E  F084         	movff	?___fldiv+3,_RGB_to_HSV$1725+3
  6119                           
  6120                           ;color.c: 151:     float c_norm = 1.0 /(C/65535.0);
  6121   0018DE  0E00               	movlw	0
  6122   0018E0  6E3B               	movwf	___fldiv@b^0,c
  6123   0018E2  0E00               	movlw	0
  6124   0018E4  6E3C               	movwf	(___fldiv@b+1)^0,c
  6125   0018E6  0E80               	movlw	128
  6126   0018E8  6E3D               	movwf	(___fldiv@b+2)^0,c
  6127   0018EA  0E3F               	movlw	63
  6128   0018EC  6E3E               	movwf	(___fldiv@b+3)^0,c
  6129   0018EE  C081  F03F         	movff	_RGB_to_HSV$1725,___fldiv@a
  6130   0018F2  C082  F040         	movff	_RGB_to_HSV$1725+1,___fldiv@a+1
  6131   0018F6  C083  F041         	movff	_RGB_to_HSV$1725+2,___fldiv@a+2
  6132   0018FA  C084  F042         	movff	_RGB_to_HSV$1725+3,___fldiv@a+3
  6133   0018FE  ECB7  F017         	call	___fldiv	;wreg free
  6134   001902  C03B  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  6135   001906  C03C  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  6136   00190A  C03D  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  6137   00190E  C03E  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  6138                           
  6139                           ;color.c: 154:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  6140   001912  C0B9  F033         	movff	RGB_to_HSV@g,___flge@ff1
  6141   001916  C0BA  F034         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6142   00191A  C0BB  F035         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6143   00191E  C0BC  F036         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6144   001922  C0B5  F037         	movff	RGB_to_HSV@r,___flge@ff2
  6145   001926  C0B6  F038         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6146   00192A  C0B7  F039         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6147   00192E  C0B8  F03A         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6148   001932  EC90  F01D         	call	___flge	;wreg free
  6149   001936  A0D8               	btfss	status,0,c
  6150   001938  EFA0  F00C         	goto	u6151
  6151   00193C  EFA2  F00C         	goto	u6150
  6152   001940                     u6151:
  6153   001940  EFD7  F00C         	goto	l5039
  6154   001944                     u6150:
  6155   001944  C0BD  F033         	movff	RGB_to_HSV@b,___flge@ff1
  6156   001948  C0BE  F034         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6157   00194C  C0BF  F035         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6158   001950  C0C0  F036         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6159   001954  C0B9  F037         	movff	RGB_to_HSV@g,___flge@ff2
  6160   001958  C0BA  F038         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6161   00195C  C0BB  F039         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6162   001960  C0BC  F03A         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6163   001964  EC90  F01D         	call	___flge	;wreg free
  6164   001968  A0D8               	btfss	status,0,c
  6165   00196A  EFB9  F00C         	goto	u6161
  6166   00196E  EFBB  F00C         	goto	u6160
  6167   001972                     u6161:
  6168   001972  EFC5  F00C         	goto	l81
  6169   001976                     u6160:
  6170   001976  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$409
  6171   00197A  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$409+1
  6172   00197E  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$409+2
  6173   001982  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$409+3
  6174   001986  EFCD  F00C         	goto	l83
  6175   00198A                     l81:
  6176   00198A  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$409
  6177   00198E  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$409+1
  6178   001992  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$409+2
  6179   001996  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$409+3
  6180   00199A                     l83:
  6181   00199A  C091  F0B1         	movff	_RGB_to_HSV$409,RGB_to_HSV@maxRGB
  6182   00199E  C092  F0B2         	movff	_RGB_to_HSV$409+1,RGB_to_HSV@maxRGB+1
  6183   0019A2  C093  F0B3         	movff	_RGB_to_HSV$409+2,RGB_to_HSV@maxRGB+2
  6184   0019A6  C094  F0B4         	movff	_RGB_to_HSV$409+3,RGB_to_HSV@maxRGB+3
  6185   0019AA  EF0A  F00D         	goto	l5043
  6186   0019AE                     l5039:
  6187   0019AE  C0BD  F033         	movff	RGB_to_HSV@b,___flge@ff1
  6188   0019B2  C0BE  F034         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6189   0019B6  C0BF  F035         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6190   0019BA  C0C0  F036         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6191   0019BE  C0B5  F037         	movff	RGB_to_HSV@r,___flge@ff2
  6192   0019C2  C0B6  F038         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6193   0019C6  C0B7  F039         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6194   0019CA  C0B8  F03A         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6195   0019CE  EC90  F01D         	call	___flge	;wreg free
  6196   0019D2  A0D8               	btfss	status,0,c
  6197   0019D4  EFEE  F00C         	goto	u6171
  6198   0019D8  EFF0  F00C         	goto	u6170
  6199   0019DC                     u6171:
  6200   0019DC  EFFA  F00C         	goto	l85
  6201   0019E0                     u6170:
  6202   0019E0  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$410
  6203   0019E4  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$410+1
  6204   0019E8  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$410+2
  6205   0019EC  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$410+3
  6206   0019F0  EF02  F00D         	goto	l87
  6207   0019F4                     l85:
  6208   0019F4  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$410
  6209   0019F8  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$410+1
  6210   0019FC  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$410+2
  6211   001A00  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$410+3
  6212   001A04                     l87:
  6213   001A04  C095  F0B1         	movff	_RGB_to_HSV$410,RGB_to_HSV@maxRGB
  6214   001A08  C096  F0B2         	movff	_RGB_to_HSV$410+1,RGB_to_HSV@maxRGB+1
  6215   001A0C  C097  F0B3         	movff	_RGB_to_HSV$410+2,RGB_to_HSV@maxRGB+2
  6216   001A10  C098  F0B4         	movff	_RGB_to_HSV$410+3,RGB_to_HSV@maxRGB+3
  6217   001A14                     l5043:
  6218                           
  6219                           ;color.c: 155:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  6220   001A14  C0B5  F033         	movff	RGB_to_HSV@r,___flge@ff1
  6221   001A18  C0B6  F034         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6222   001A1C  C0B7  F035         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6223   001A20  C0B8  F036         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6224   001A24  C0B9  F037         	movff	RGB_to_HSV@g,___flge@ff2
  6225   001A28  C0BA  F038         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6226   001A2C  C0BB  F039         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6227   001A30  C0BC  F03A         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6228   001A34  EC90  F01D         	call	___flge	;wreg free
  6229   001A38  A0D8               	btfss	status,0,c
  6230   001A3A  EF21  F00D         	goto	u6181
  6231   001A3E  EF23  F00D         	goto	u6180
  6232   001A42                     u6181:
  6233   001A42  EF58  F00D         	goto	l5049
  6234   001A46                     u6180:
  6235   001A46  C0B9  F033         	movff	RGB_to_HSV@g,___flge@ff1
  6236   001A4A  C0BA  F034         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6237   001A4E  C0BB  F035         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6238   001A52  C0BC  F036         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6239   001A56  C0BD  F037         	movff	RGB_to_HSV@b,___flge@ff2
  6240   001A5A  C0BE  F038         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6241   001A5E  C0BF  F039         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6242   001A62  C0C0  F03A         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6243   001A66  EC90  F01D         	call	___flge	;wreg free
  6244   001A6A  A0D8               	btfss	status,0,c
  6245   001A6C  EF3A  F00D         	goto	u6191
  6246   001A70  EF3C  F00D         	goto	u6190
  6247   001A74                     u6191:
  6248   001A74  EF46  F00D         	goto	l93
  6249   001A78                     u6190:
  6250   001A78  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$412
  6251   001A7C  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$412+1
  6252   001A80  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$412+2
  6253   001A84  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$412+3
  6254   001A88  EF4E  F00D         	goto	l95
  6255   001A8C                     l93:
  6256   001A8C  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$412
  6257   001A90  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$412+1
  6258   001A94  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$412+2
  6259   001A98  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$412+3
  6260   001A9C                     l95:
  6261   001A9C  C09D  F099         	movff	_RGB_to_HSV$412,RGB_to_HSV@minRGB
  6262   001AA0  C09E  F09A         	movff	_RGB_to_HSV$412+1,RGB_to_HSV@minRGB+1
  6263   001AA4  C09F  F09B         	movff	_RGB_to_HSV$412+2,RGB_to_HSV@minRGB+2
  6264   001AA8  C0A0  F09C         	movff	_RGB_to_HSV$412+3,RGB_to_HSV@minRGB+3
  6265   001AAC  EF8B  F00D         	goto	l5053
  6266   001AB0                     l5049:
  6267   001AB0  C0B5  F033         	movff	RGB_to_HSV@r,___flge@ff1
  6268   001AB4  C0B6  F034         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6269   001AB8  C0B7  F035         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6270   001ABC  C0B8  F036         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6271   001AC0  C0BD  F037         	movff	RGB_to_HSV@b,___flge@ff2
  6272   001AC4  C0BE  F038         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6273   001AC8  C0BF  F039         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6274   001ACC  C0C0  F03A         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6275   001AD0  EC90  F01D         	call	___flge	;wreg free
  6276   001AD4  A0D8               	btfss	status,0,c
  6277   001AD6  EF6F  F00D         	goto	u6201
  6278   001ADA  EF71  F00D         	goto	u6200
  6279   001ADE                     u6201:
  6280   001ADE  EF7B  F00D         	goto	l97
  6281   001AE2                     u6200:
  6282   001AE2  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$413
  6283   001AE6  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$413+1
  6284   001AEA  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$413+2
  6285   001AEE  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$413+3
  6286   001AF2  EF83  F00D         	goto	l99
  6287   001AF6                     l97:
  6288   001AF6  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$413
  6289   001AFA  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$413+1
  6290   001AFE  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$413+2
  6291   001B02  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$413+3
  6292   001B06                     l99:
  6293   001B06  C0A1  F099         	movff	_RGB_to_HSV$413,RGB_to_HSV@minRGB
  6294   001B0A  C0A2  F09A         	movff	_RGB_to_HSV$413+1,RGB_to_HSV@minRGB+1
  6295   001B0E  C0A3  F09B         	movff	_RGB_to_HSV$413+2,RGB_to_HSV@minRGB+2
  6296   001B12  C0A4  F09C         	movff	_RGB_to_HSV$413+3,RGB_to_HSV@minRGB+3
  6297   001B16                     l5053:
  6298                           
  6299                           ;color.c: 156:     float deltaRGB = maxRGB - minRGB;
  6300   001B16  C0B1  F033         	movff	RGB_to_HSV@maxRGB,___flsub@b
  6301   001B1A  C0B2  F034         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  6302   001B1E  C0B3  F035         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  6303   001B22  C0B4  F036         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  6304   001B26  C099  F037         	movff	RGB_to_HSV@minRGB,___flsub@a
  6305   001B2A  C09A  F038         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  6306   001B2E  C09B  F039         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  6307   001B32  C09C  F03A         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  6308   001B36  ECDB  F020         	call	___flsub	;wreg free
  6309   001B3A  C033  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  6310   001B3E  C034  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  6311   001B42  C035  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  6312   001B46  C036  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  6313                           
  6314                           ;color.c: 161:     float H_temp;;color.c: 163:     if (deltaRGB == 0) {H_temp = 0;}
  6315   001B4A  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  6316   001B4E  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  6317   001B52  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  6318   001B56  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  6319   001B5A  0E00               	movlw	0
  6320   001B5C  6E05               	movwf	___fleq@ff2^0,c
  6321   001B5E  0E00               	movlw	0
  6322   001B60  6E06               	movwf	(___fleq@ff2+1)^0,c
  6323   001B62  0E00               	movlw	0
  6324   001B64  6E07               	movwf	(___fleq@ff2+2)^0,c
  6325   001B66  0E00               	movlw	0
  6326   001B68  6E08               	movwf	(___fleq@ff2+3)^0,c
  6327   001B6A  EC3D  F01F         	call	___fleq	;wreg free
  6328   001B6E  A0D8               	btfss	status,0,c
  6329   001B70  EFBC  F00D         	goto	u6211
  6330   001B74  EFBE  F00D         	goto	u6210
  6331   001B78                     u6211:
  6332   001B78  EFC9  F00D         	goto	l5057
  6333   001B7C                     u6210:
  6334   001B7C  0E00               	movlw	0
  6335   001B7E  0100               	movlb	0	; () banked
  6336   001B80  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  6337   001B82  0E00               	movlw	0
  6338   001B84  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  6339   001B86  0E00               	movlw	0
  6340   001B88  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  6341   001B8A  0E00               	movlw	0
  6342   001B8C  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  6343   001B8E  EF2A  F00F         	goto	l5077
  6344   001B92                     l5057:
  6345   001B92  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6346   001B96  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6347   001B9A  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6348   001B9E  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6349   001BA2  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  6350   001BA6  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  6351   001BAA  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  6352   001BAE  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  6353   001BB2  EC3D  F01F         	call	___fleq	;wreg free
  6354   001BB6  A0D8               	btfss	status,0,c
  6355   001BB8  EFE0  F00D         	goto	u6221
  6356   001BBC  EFE2  F00D         	goto	u6220
  6357   001BC0                     u6221:
  6358   001BC0  EF44  F00E         	goto	l5065
  6359   001BC4                     u6220:
  6360   001BC4  C0AD  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6361   001BC8  C0AE  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6362   001BCC  C0AF  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6363   001BD0  C0B0  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6364   001BD4  C0BD  F037         	movff	RGB_to_HSV@b,___flsub@a
  6365   001BD8  C0BE  F038         	movff	RGB_to_HSV@b+1,___flsub@a+1
  6366   001BDC  C0BF  F039         	movff	RGB_to_HSV@b+2,___flsub@a+2
  6367   001BE0  C0C0  F03A         	movff	RGB_to_HSV@b+3,___flsub@a+3
  6368   001BE4  C0B9  F033         	movff	RGB_to_HSV@g,___flsub@b
  6369   001BE8  C0BA  F034         	movff	RGB_to_HSV@g+1,___flsub@b+1
  6370   001BEC  C0BB  F035         	movff	RGB_to_HSV@g+2,___flsub@b+2
  6371   001BF0  C0BC  F036         	movff	RGB_to_HSV@g+3,___flsub@b+3
  6372   001BF4  ECDB  F020         	call	___flsub	;wreg free
  6373   001BF8  C033  F03B         	movff	?___flsub,___fldiv@b
  6374   001BFC  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  6375   001C00  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  6376   001C04  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  6377   001C08  ECB7  F017         	call	___fldiv	;wreg free
  6378   001C0C  C03B  F085         	movff	?___fldiv,_RGB_to_HSV$1726
  6379   001C10  C03C  F086         	movff	?___fldiv+1,_RGB_to_HSV$1726+1
  6380   001C14  C03D  F087         	movff	?___fldiv+2,_RGB_to_HSV$1726+2
  6381   001C18  C03E  F088         	movff	?___fldiv+3,_RGB_to_HSV$1726+3
  6382   001C1C  0E00               	movlw	0
  6383   001C1E  6E58               	movwf	custom_floatmodulo@y^0,c
  6384   001C20  0E00               	movlw	0
  6385   001C22  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  6386   001C24  0EC0               	movlw	192
  6387   001C26  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  6388   001C28  0E40               	movlw	64
  6389   001C2A  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  6390   001C2C  C085  F054         	movff	_RGB_to_HSV$1726,custom_floatmodulo@x
  6391   001C30  C086  F055         	movff	_RGB_to_HSV$1726+1,custom_floatmodulo@x+1
  6392   001C34  C087  F056         	movff	_RGB_to_HSV$1726+2,custom_floatmodulo@x+2
  6393   001C38  C088  F057         	movff	_RGB_to_HSV$1726+3,custom_floatmodulo@x+3
  6394   001C3C  EC81  F01C         	call	_custom_floatmodulo	;wreg free
  6395   001C40  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$1727
  6396   001C44  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$1727+1
  6397   001C48  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$1727+2
  6398   001C4C  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$1727+3
  6399   001C50  C089  F01A         	movff	_RGB_to_HSV$1727,___flmul@b
  6400   001C54  C08A  F01B         	movff	_RGB_to_HSV$1727+1,___flmul@b+1
  6401   001C58  C08B  F01C         	movff	_RGB_to_HSV$1727+2,___flmul@b+2
  6402   001C5C  C08C  F01D         	movff	_RGB_to_HSV$1727+3,___flmul@b+3
  6403   001C60  0E00               	movlw	0
  6404   001C62  6E1E               	movwf	___flmul@a^0,c
  6405   001C64  0E00               	movlw	0
  6406   001C66  6E1F               	movwf	(___flmul@a+1)^0,c
  6407   001C68  0E70               	movlw	112
  6408   001C6A  6E20               	movwf	(___flmul@a+2)^0,c
  6409   001C6C  0E42               	movlw	66
  6410   001C6E  6E21               	movwf	(___flmul@a+3)^0,c
  6411   001C70  ECA2  F015         	call	___flmul	;wreg free
  6412   001C74  C01A  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6413   001C78  C01B  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6414   001C7C  C01C  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6415   001C80  C01D  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6416   001C84  EF2A  F00F         	goto	l5077
  6417   001C88                     l5065:
  6418   001C88  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6419   001C8C  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6420   001C90  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6421   001C94  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6422   001C98  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  6423   001C9C  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  6424   001CA0  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  6425   001CA4  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  6426   001CA8  EC3D  F01F         	call	___fleq	;wreg free
  6427   001CAC  A0D8               	btfss	status,0,c
  6428   001CAE  EF5B  F00E         	goto	u6231
  6429   001CB2  EF5D  F00E         	goto	u6230
  6430   001CB6                     u6231:
  6431   001CB6  EFB7  F00E         	goto	l5071
  6432   001CBA                     u6230:
  6433   001CBA  C0AD  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6434   001CBE  C0AE  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6435   001CC2  C0AF  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6436   001CC6  C0B0  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6437   001CCA  C0B5  F037         	movff	RGB_to_HSV@r,___flsub@a
  6438   001CCE  C0B6  F038         	movff	RGB_to_HSV@r+1,___flsub@a+1
  6439   001CD2  C0B7  F039         	movff	RGB_to_HSV@r+2,___flsub@a+2
  6440   001CD6  C0B8  F03A         	movff	RGB_to_HSV@r+3,___flsub@a+3
  6441   001CDA  C0BD  F033         	movff	RGB_to_HSV@b,___flsub@b
  6442   001CDE  C0BE  F034         	movff	RGB_to_HSV@b+1,___flsub@b+1
  6443   001CE2  C0BF  F035         	movff	RGB_to_HSV@b+2,___flsub@b+2
  6444   001CE6  C0C0  F036         	movff	RGB_to_HSV@b+3,___flsub@b+3
  6445   001CEA  ECDB  F020         	call	___flsub	;wreg free
  6446   001CEE  C033  F03B         	movff	?___flsub,___fldiv@b
  6447   001CF2  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  6448   001CF6  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  6449   001CFA  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  6450   001CFE  ECB7  F017         	call	___fldiv	;wreg free
  6451   001D02  C03B  F0A5         	movff	?___fldiv,_RGB_to_HSV$1728
  6452   001D06  C03C  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$1728+1
  6453   001D0A  C03D  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$1728+2
  6454   001D0E  C03E  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$1728+3
  6455   001D12  0E00               	movlw	0
  6456   001D14  6E05               	movwf	___fladd@a^0,c
  6457   001D16  0E00               	movlw	0
  6458   001D18  6E06               	movwf	(___fladd@a+1)^0,c
  6459   001D1A  0E00               	movlw	0
  6460   001D1C  6E07               	movwf	(___fladd@a+2)^0,c
  6461   001D1E  0E40               	movlw	64
  6462   001D20  6E08               	movwf	(___fladd@a+3)^0,c
  6463   001D22  C0A5  F001         	movff	_RGB_to_HSV$1728,___fladd@b
  6464   001D26  C0A6  F002         	movff	_RGB_to_HSV$1728+1,___fladd@b+1
  6465   001D2A  C0A7  F003         	movff	_RGB_to_HSV$1728+2,___fladd@b+2
  6466   001D2E  C0A8  F004         	movff	_RGB_to_HSV$1728+3,___fladd@b+3
  6467   001D32  EC42  F013         	call	___fladd	;wreg free
  6468   001D36  C001  F01A         	movff	?___fladd,___flmul@b
  6469   001D3A  C002  F01B         	movff	?___fladd+1,___flmul@b+1
  6470   001D3E  C003  F01C         	movff	?___fladd+2,___flmul@b+2
  6471   001D42  C004  F01D         	movff	?___fladd+3,___flmul@b+3
  6472   001D46  0E00               	movlw	0
  6473   001D48  6E1E               	movwf	___flmul@a^0,c
  6474   001D4A  0E00               	movlw	0
  6475   001D4C  6E1F               	movwf	(___flmul@a+1)^0,c
  6476   001D4E  0E70               	movlw	112
  6477   001D50  6E20               	movwf	(___flmul@a+2)^0,c
  6478   001D52  0E42               	movlw	66
  6479   001D54  6E21               	movwf	(___flmul@a+3)^0,c
  6480   001D56  ECA2  F015         	call	___flmul	;wreg free
  6481   001D5A  C01A  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6482   001D5E  C01B  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6483   001D62  C01C  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6484   001D66  C01D  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6485   001D6A  EF2A  F00F         	goto	l5077
  6486   001D6E                     l5071:
  6487   001D6E  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6488   001D72  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6489   001D76  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6490   001D7A  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6491   001D7E  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  6492   001D82  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  6493   001D86  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  6494   001D8A  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  6495   001D8E  EC3D  F01F         	call	___fleq	;wreg free
  6496   001D92  A0D8               	btfss	status,0,c
  6497   001D94  EFCE  F00E         	goto	u6241
  6498   001D98  EFD0  F00E         	goto	u6240
  6499   001D9C                     u6241:
  6500   001D9C  EF2A  F00F         	goto	l103
  6501   001DA0                     u6240:
  6502   001DA0  C0AD  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6503   001DA4  C0AE  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6504   001DA8  C0AF  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6505   001DAC  C0B0  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6506   001DB0  C0B9  F037         	movff	RGB_to_HSV@g,___flsub@a
  6507   001DB4  C0BA  F038         	movff	RGB_to_HSV@g+1,___flsub@a+1
  6508   001DB8  C0BB  F039         	movff	RGB_to_HSV@g+2,___flsub@a+2
  6509   001DBC  C0BC  F03A         	movff	RGB_to_HSV@g+3,___flsub@a+3
  6510   001DC0  C0B5  F033         	movff	RGB_to_HSV@r,___flsub@b
  6511   001DC4  C0B6  F034         	movff	RGB_to_HSV@r+1,___flsub@b+1
  6512   001DC8  C0B7  F035         	movff	RGB_to_HSV@r+2,___flsub@b+2
  6513   001DCC  C0B8  F036         	movff	RGB_to_HSV@r+3,___flsub@b+3
  6514   001DD0  ECDB  F020         	call	___flsub	;wreg free
  6515   001DD4  C033  F03B         	movff	?___flsub,___fldiv@b
  6516   001DD8  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  6517   001DDC  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  6518   001DE0  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  6519   001DE4  ECB7  F017         	call	___fldiv	;wreg free
  6520   001DE8  C03B  F0A5         	movff	?___fldiv,_RGB_to_HSV$1728
  6521   001DEC  C03C  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$1728+1
  6522   001DF0  C03D  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$1728+2
  6523   001DF4  C03E  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$1728+3
  6524   001DF8  0E00               	movlw	0
  6525   001DFA  6E05               	movwf	___fladd@a^0,c
  6526   001DFC  0E00               	movlw	0
  6527   001DFE  6E06               	movwf	(___fladd@a+1)^0,c
  6528   001E00  0E80               	movlw	128
  6529   001E02  6E07               	movwf	(___fladd@a+2)^0,c
  6530   001E04  0E40               	movlw	64
  6531   001E06  6E08               	movwf	(___fladd@a+3)^0,c
  6532   001E08  C0A5  F001         	movff	_RGB_to_HSV$1728,___fladd@b
  6533   001E0C  C0A6  F002         	movff	_RGB_to_HSV$1728+1,___fladd@b+1
  6534   001E10  C0A7  F003         	movff	_RGB_to_HSV$1728+2,___fladd@b+2
  6535   001E14  C0A8  F004         	movff	_RGB_to_HSV$1728+3,___fladd@b+3
  6536   001E18  EC42  F013         	call	___fladd	;wreg free
  6537   001E1C  C001  F01A         	movff	?___fladd,___flmul@b
  6538   001E20  C002  F01B         	movff	?___fladd+1,___flmul@b+1
  6539   001E24  C003  F01C         	movff	?___fladd+2,___flmul@b+2
  6540   001E28  C004  F01D         	movff	?___fladd+3,___flmul@b+3
  6541   001E2C  0E00               	movlw	0
  6542   001E2E  6E1E               	movwf	___flmul@a^0,c
  6543   001E30  0E00               	movlw	0
  6544   001E32  6E1F               	movwf	(___flmul@a+1)^0,c
  6545   001E34  0E70               	movlw	112
  6546   001E36  6E20               	movwf	(___flmul@a+2)^0,c
  6547   001E38  0E42               	movlw	66
  6548   001E3A  6E21               	movwf	(___flmul@a+3)^0,c
  6549   001E3C  ECA2  F015         	call	___flmul	;wreg free
  6550   001E40  C01A  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6551   001E44  C01B  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6552   001E48  C01C  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6553   001E4C  C01D  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6554   001E50  EF2A  F00F         	goto	l5077
  6555   001E54                     l103:
  6556   001E54                     l5077:
  6557                           
  6558                           ;color.c: 171:     if (H_temp < 0) {H_temp = H_temp + 360;}
  6559   001E54  0100               	movlb	0	; () banked
  6560   001E56  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  6561   001E58  EF32  F00F         	goto	u6250
  6562   001E5C  EF30  F00F         	goto	u6251
  6563   001E60                     u6251:
  6564   001E60  EF4C  F00F         	goto	l5081
  6565   001E64                     u6250:
  6566   001E64                     
  6567                           ; BSR set to: 0
  6568   001E64  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  6569   001E68  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  6570   001E6C  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  6571   001E70  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  6572   001E74  0E00               	movlw	0
  6573   001E76  6E05               	movwf	___fladd@a^0,c
  6574   001E78  0E00               	movlw	0
  6575   001E7A  6E06               	movwf	(___fladd@a+1)^0,c
  6576   001E7C  0EB4               	movlw	180
  6577   001E7E  6E07               	movwf	(___fladd@a+2)^0,c
  6578   001E80  0E43               	movlw	67
  6579   001E82  6E08               	movwf	(___fladd@a+3)^0,c
  6580   001E84  EC42  F013         	call	___fladd	;wreg free
  6581   001E88  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  6582   001E8C  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  6583   001E90  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  6584   001E94  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  6585   001E98                     l5081:
  6586                           
  6587                           ;color.c: 174:     *H = H_temp;
  6588   001E98  0100               	movlb	0	; () banked
  6589   001E9A  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  6590   001E9C  6ED9               	movwf	fsr2l,c
  6591   001E9E  6ADA               	clrf	fsr2h,c
  6592   001EA0  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  6593   001EA4  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  6594   001EA8  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  6595   001EAC  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  6596   001EB0                     
  6597                           ; BSR set to: 0
  6598                           ;color.c: 177:     if (maxRGB == 0) {*S = 0;}
  6599   001EB0  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6600   001EB4  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6601   001EB8  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6602   001EBC  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6603   001EC0  0E00               	movlw	0
  6604   001EC2  6E05               	movwf	___fleq@ff2^0,c
  6605   001EC4  0E00               	movlw	0
  6606   001EC6  6E06               	movwf	(___fleq@ff2+1)^0,c
  6607   001EC8  0E00               	movlw	0
  6608   001ECA  6E07               	movwf	(___fleq@ff2+2)^0,c
  6609   001ECC  0E00               	movlw	0
  6610   001ECE  6E08               	movwf	(___fleq@ff2+3)^0,c
  6611   001ED0  EC3D  F01F         	call	___fleq	;wreg free
  6612   001ED4  A0D8               	btfss	status,0,c
  6613   001ED6  EF6F  F00F         	goto	u6261
  6614   001EDA  EF71  F00F         	goto	u6260
  6615   001EDE                     u6261:
  6616   001EDE  EF7F  F00F         	goto	l5087
  6617   001EE2                     u6260:
  6618   001EE2  0100               	movlb	0	; () banked
  6619   001EE4  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6620   001EE6  6ED9               	movwf	fsr2l,c
  6621   001EE8  6ADA               	clrf	fsr2h,c
  6622   001EEA  0E00               	movlw	0
  6623   001EEC  6EDE               	movwf	postinc2,c
  6624   001EEE  0E00               	movlw	0
  6625   001EF0  6EDE               	movwf	postinc2,c
  6626   001EF2  0E00               	movlw	0
  6627   001EF4  6EDE               	movwf	postinc2,c
  6628   001EF6  0E00               	movlw	0
  6629   001EF8  6EDD               	movwf	postdec2,c
  6630   001EFA  EFAF  F00F         	goto	l5089
  6631   001EFE                     l5087:
  6632                           
  6633                           ;color.c: 180:         *S = (deltaRGB/maxRGB) * 100.0;
  6634   001EFE  C0B1  F03F         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  6635   001F02  C0B2  F040         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  6636   001F06  C0B3  F041         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  6637   001F0A  C0B4  F042         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  6638   001F0E  C0AD  F03B         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  6639   001F12  C0AE  F03C         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  6640   001F16  C0AF  F03D         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  6641   001F1A  C0B0  F03E         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  6642   001F1E  ECB7  F017         	call	___fldiv	;wreg free
  6643   001F22  C03B  F01A         	movff	?___fldiv,___flmul@b
  6644   001F26  C03C  F01B         	movff	?___fldiv+1,___flmul@b+1
  6645   001F2A  C03D  F01C         	movff	?___fldiv+2,___flmul@b+2
  6646   001F2E  C03E  F01D         	movff	?___fldiv+3,___flmul@b+3
  6647   001F32  0E00               	movlw	0
  6648   001F34  6E1E               	movwf	___flmul@a^0,c
  6649   001F36  0E00               	movlw	0
  6650   001F38  6E1F               	movwf	(___flmul@a+1)^0,c
  6651   001F3A  0EC8               	movlw	200
  6652   001F3C  6E20               	movwf	(___flmul@a+2)^0,c
  6653   001F3E  0E42               	movlw	66
  6654   001F40  6E21               	movwf	(___flmul@a+3)^0,c
  6655   001F42  ECA2  F015         	call	___flmul	;wreg free
  6656   001F46  0100               	movlb	0	; () banked
  6657   001F48  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6658   001F4A  6ED9               	movwf	fsr2l,c
  6659   001F4C  6ADA               	clrf	fsr2h,c
  6660   001F4E  C01A  FFDE         	movff	?___flmul,postinc2
  6661   001F52  C01B  FFDE         	movff	?___flmul+1,postinc2
  6662   001F56  C01C  FFDE         	movff	?___flmul+2,postinc2
  6663   001F5A  C01D  FFDE         	movff	?___flmul+3,postinc2
  6664   001F5E                     l5089:
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;color.c: 184:     *V = maxRGB * 100.0 * c_norm;
  6668   001F5E  0E00               	movlw	0
  6669   001F60  6E1E               	movwf	___flmul@a^0,c
  6670   001F62  0E00               	movlw	0
  6671   001F64  6E1F               	movwf	(___flmul@a+1)^0,c
  6672   001F66  0EC8               	movlw	200
  6673   001F68  6E20               	movwf	(___flmul@a+2)^0,c
  6674   001F6A  0E42               	movlw	66
  6675   001F6C  6E21               	movwf	(___flmul@a+3)^0,c
  6676   001F6E  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flmul@b
  6677   001F72  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  6678   001F76  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  6679   001F7A  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  6680   001F7E  ECA2  F015         	call	___flmul	;wreg free
  6681   001F82  C01A  F08D         	movff	?___flmul,_RGB_to_HSV$1729
  6682   001F86  C01B  F08E         	movff	?___flmul+1,_RGB_to_HSV$1729+1
  6683   001F8A  C01C  F08F         	movff	?___flmul+2,_RGB_to_HSV$1729+2
  6684   001F8E  C01D  F090         	movff	?___flmul+3,_RGB_to_HSV$1729+3
  6685   001F92                     
  6686                           ;color.c: 184:     *V = maxRGB * 100.0 * c_norm;
  6687   001F92  C08D  F01A         	movff	_RGB_to_HSV$1729,___flmul@b
  6688   001F96  C08E  F01B         	movff	_RGB_to_HSV$1729+1,___flmul@b+1
  6689   001F9A  C08F  F01C         	movff	_RGB_to_HSV$1729+2,___flmul@b+2
  6690   001F9E  C090  F01D         	movff	_RGB_to_HSV$1729+3,___flmul@b+3
  6691   001FA2  C07D  F01E         	movff	RGB_to_HSV@c_norm,___flmul@a
  6692   001FA6  C07E  F01F         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  6693   001FAA  C07F  F020         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  6694   001FAE  C080  F021         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  6695   001FB2  ECA2  F015         	call	___flmul	;wreg free
  6696   001FB6  0100               	movlb	0	; () banked
  6697   001FB8  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  6698   001FBA  6ED9               	movwf	fsr2l,c
  6699   001FBC  6ADA               	clrf	fsr2h,c
  6700   001FBE  C01A  FFDE         	movff	?___flmul,postinc2
  6701   001FC2  C01B  FFDE         	movff	?___flmul+1,postinc2
  6702   001FC6  C01C  FFDE         	movff	?___flmul+2,postinc2
  6703   001FCA  C01D  FFDE         	movff	?___flmul+3,postinc2
  6704   001FCE                     
  6705                           ; BSR set to: 0
  6706   001FCE  0012               	return		;funcret
  6707   001FD0                     __end_of_RGB_to_HSV:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function _custom_floatmodulo *****************
  6711 ;; Defined at:
  6712 ;;		line 122 in file "color.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  x               4   83[COMRAM] float 
  6715 ;;  y               4   87[COMRAM] float 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  remainder       4    4[BANK0 ] float 
  6718 ;;  quotient        4    0[BANK0 ] float 
  6719 ;;  intPart         2    8[BANK0 ] int 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  4   83[COMRAM] float 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6729 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;Total ram usage:       18 bytes
  6734 ;; Hardware stack levels used: 1
  6735 ;; Hardware stack levels required when called: 2
  6736 ;; This function calls:
  6737 ;;		___fldiv
  6738 ;;		___fleq
  6739 ;;		___flmul
  6740 ;;		___flsub
  6741 ;;		___fltol
  6742 ;;		___xxtofl
  6743 ;; This function is called by:
  6744 ;;		_RGB_to_HSV
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text34
  6749   003902                     __ptext34:
  6750                           	callstack 0
  6751   003902                     _custom_floatmodulo:
  6752                           	callstack 26
  6753   003902                     
  6754                           ;color.c: 124:     if (y == 0.0) {
  6755   003902  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  6756   003906  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  6757   00390A  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  6758   00390E  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  6759   003912  0E00               	movlw	0
  6760   003914  6E05               	movwf	___fleq@ff2^0,c
  6761   003916  0E00               	movlw	0
  6762   003918  6E06               	movwf	(___fleq@ff2+1)^0,c
  6763   00391A  0E00               	movlw	0
  6764   00391C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6765   00391E  0E00               	movlw	0
  6766   003920  6E08               	movwf	(___fleq@ff2+3)^0,c
  6767   003922  EC3D  F01F         	call	___fleq	;wreg free
  6768   003926  A0D8               	btfss	status,0,c
  6769   003928  EF98  F01C         	goto	u6131
  6770   00392C  EF9A  F01C         	goto	u6130
  6771   003930                     u6131:
  6772   003930  EFA4  F01C         	goto	l5015
  6773   003934                     u6130:
  6774   003934                     
  6775                           ;color.c: 125:         return 0.0;
  6776   003934  0E00               	movlw	0
  6777   003936  6E54               	movwf	?_custom_floatmodulo^0,c
  6778   003938  0E00               	movlw	0
  6779   00393A  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  6780   00393C  0E00               	movlw	0
  6781   00393E  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  6782   003940  0E00               	movlw	0
  6783   003942  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  6784   003944  EF0C  F01D         	goto	l73
  6785   003948                     l5015:
  6786                           
  6787                           ;color.c: 129:     float quotient = x / y;
  6788   003948  C054  F03B         	movff	custom_floatmodulo@x,___fldiv@b
  6789   00394C  C055  F03C         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  6790   003950  C056  F03D         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  6791   003954  C057  F03E         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  6792   003958  C058  F03F         	movff	custom_floatmodulo@y,___fldiv@a
  6793   00395C  C059  F040         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  6794   003960  C05A  F041         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  6795   003964  C05B  F042         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  6796   003968  ECB7  F017         	call	___fldiv	;wreg free
  6797   00396C  C03B  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  6798   003970  C03C  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  6799   003974  C03D  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  6800   003978  C03E  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  6801                           
  6802                           ;color.c: 132:     int intPart = (int)quotient;
  6803   00397C  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  6804   003980  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  6805   003984  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  6806   003988  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  6807   00398C  EC0D  F01D         	call	___fltol	;wreg free
  6808   003990  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  6809   003994  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  6810   003998                     
  6811                           ;color.c: 135:     float remainder = x - intPart * y;
  6812   003998  C054  F033         	movff	custom_floatmodulo@x,___flsub@b
  6813   00399C  C055  F034         	movff	custom_floatmodulo@x+1,___flsub@b+1
  6814   0039A0  C056  F035         	movff	custom_floatmodulo@x+2,___flsub@b+2
  6815   0039A4  C057  F036         	movff	custom_floatmodulo@x+3,___flsub@b+3
  6816   0039A8  C058  F01E         	movff	custom_floatmodulo@y,___flmul@a
  6817   0039AC  C059  F01F         	movff	custom_floatmodulo@y+1,___flmul@a+1
  6818   0039B0  C05A  F020         	movff	custom_floatmodulo@y+2,___flmul@a+2
  6819   0039B4  C05B  F021         	movff	custom_floatmodulo@y+3,___flmul@a+3
  6820   0039B8  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  6821   0039BC  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  6822   0039C0  0E00               	movlw	0
  6823   0039C2  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6824   0039C4  0EFF               	movlw	-1
  6825   0039C6  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6826   0039C8  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6827   0039CA  0E01               	movlw	1
  6828   0039CC  ECA7  F01B         	call	___xxtofl
  6829   0039D0  C00C  F01A         	movff	?___xxtofl,___flmul@b
  6830   0039D4  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  6831   0039D8  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  6832   0039DC  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  6833   0039E0  ECA2  F015         	call	___flmul	;wreg free
  6834   0039E4  C01A  F037         	movff	?___flmul,___flsub@a
  6835   0039E8  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  6836   0039EC  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  6837   0039F0  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  6838   0039F4  ECDB  F020         	call	___flsub	;wreg free
  6839   0039F8  C033  F064         	movff	?___flsub,custom_floatmodulo@remainder
  6840   0039FC  C034  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  6841   003A00  C035  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  6842   003A04  C036  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  6843   003A08                     
  6844                           ;color.c: 137:     return remainder;
  6845   003A08  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  6846   003A0C  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  6847   003A10  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  6848   003A14  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  6849   003A18                     l73:
  6850   003A18  0012               	return		;funcret
  6851   003A1A                     __end_of_custom_floatmodulo:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function ___xxtofl *****************
  6855 ;; Defined at:
  6856 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  sign            1    wreg     unsigned char 
  6859 ;;  val             4   11[COMRAM] long 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  sign            1   19[COMRAM] unsigned char 
  6862 ;;  arg             4   21[COMRAM] unsigned long 
  6863 ;;  exp             1   20[COMRAM] unsigned char 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  4   11[COMRAM] unsigned char 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6876 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;Total ram usage:       14 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_custom_floatmodulo
  6883 ;;		_color_cardCheck
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text35
  6888   00374E                     __ptext35:
  6889                           	callstack 0
  6890   00374E                     ___xxtofl:
  6891                           	callstack 29
  6892                           
  6893                           ;incstack = 0
  6894                           ;___xxtofl@sign stored from wreg
  6895   00374E  6E14               	movwf	___xxtofl@sign^0,c
  6896   003750  5014               	movf	___xxtofl@sign^0,w,c
  6897   003752  B4D8               	btfsc	status,2,c
  6898   003754  EFAE  F01B         	goto	u3871
  6899   003758  EFB0  F01B         	goto	u3870
  6900   00375C                     u3871:
  6901   00375C  EFD2  F01B         	goto	l934
  6902   003760                     u3870:
  6903   003760  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6904   003762  EFB7  F01B         	goto	u3880
  6905   003766  EFB5  F01B         	goto	u3881
  6906   00376A                     u3881:
  6907   00376A  EFD2  F01B         	goto	l934
  6908   00376E                     u3880:
  6909   00376E  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6910   003772  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6911   003776  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6912   00377A  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6913   00377E  1E10               	comf	??___xxtofl^0,f,c
  6914   003780  1E11               	comf	(??___xxtofl+1)^0,f,c
  6915   003782  1E12               	comf	(??___xxtofl+2)^0,f,c
  6916   003784  1E13               	comf	(??___xxtofl+3)^0,f,c
  6917   003786  2A10               	incf	??___xxtofl^0,f,c
  6918   003788  0E00               	movlw	0
  6919   00378A  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6920   00378C  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6921   00378E  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6922   003790  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6923   003794  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6924   003798  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6925   00379C  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6926   0037A0  EFDA  F01B         	goto	l3525
  6927   0037A4                     l934:
  6928   0037A4  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6929   0037A8  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6930   0037AC  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6931   0037B0  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6932   0037B4                     l3525:
  6933   0037B4  500C               	movf	___xxtofl@val^0,w,c
  6934   0037B6  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6935   0037B8  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6936   0037BA  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6937   0037BC  A4D8               	btfss	status,2,c
  6938   0037BE  EFE3  F01B         	goto	u3891
  6939   0037C2  EFE5  F01B         	goto	u3890
  6940   0037C6                     u3891:
  6941   0037C6  EFEF  F01B         	goto	l3531
  6942   0037CA                     u3890:
  6943   0037CA  0E00               	movlw	0
  6944   0037CC  6E0C               	movwf	?___xxtofl^0,c
  6945   0037CE  0E00               	movlw	0
  6946   0037D0  6E0D               	movwf	(?___xxtofl+1)^0,c
  6947   0037D2  0E00               	movlw	0
  6948   0037D4  6E0E               	movwf	(?___xxtofl+2)^0,c
  6949   0037D6  0E00               	movlw	0
  6950   0037D8  6E0F               	movwf	(?___xxtofl+3)^0,c
  6951   0037DA  EF80  F01C         	goto	l937
  6952   0037DE                     l3531:
  6953   0037DE  0E96               	movlw	150
  6954   0037E0  6E15               	movwf	___xxtofl@exp^0,c
  6955   0037E2  EFF9  F01B         	goto	l3535
  6956   0037E6                     l3533:
  6957   0037E6  2A15               	incf	___xxtofl@exp^0,f,c
  6958   0037E8  90D8               	bcf	status,0,c
  6959   0037EA  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6960   0037EC  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6961   0037EE  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6962   0037F0  3216               	rrcf	___xxtofl@arg^0,f,c
  6963   0037F2                     l3535:
  6964   0037F2  0E00               	movlw	0
  6965   0037F4  1416               	andwf	___xxtofl@arg^0,w,c
  6966   0037F6  6E10               	movwf	??___xxtofl^0,c
  6967   0037F8  0E00               	movlw	0
  6968   0037FA  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6969   0037FC  6E11               	movwf	(??___xxtofl+1)^0,c
  6970   0037FE  0E00               	movlw	0
  6971   003800  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6972   003802  6E12               	movwf	(??___xxtofl+2)^0,c
  6973   003804  0EFE               	movlw	254
  6974   003806  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6975   003808  6E13               	movwf	(??___xxtofl+3)^0,c
  6976   00380A  5010               	movf	??___xxtofl^0,w,c
  6977   00380C  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6978   00380E  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6979   003810  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6980   003812  A4D8               	btfss	status,2,c
  6981   003814  EF0E  F01C         	goto	u3901
  6982   003818  EF10  F01C         	goto	u3900
  6983   00381C                     u3901:
  6984   00381C  EFF3  F01B         	goto	l3533
  6985   003820                     u3900:
  6986   003820  EF1E  F01C         	goto	l941
  6987   003824                     l3537:
  6988   003824  2A15               	incf	___xxtofl@exp^0,f,c
  6989   003826  0E01               	movlw	1
  6990   003828  2616               	addwf	___xxtofl@arg^0,f,c
  6991   00382A  0E00               	movlw	0
  6992   00382C  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6993   00382E  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6994   003830  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6995   003832  90D8               	bcf	status,0,c
  6996   003834  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6997   003836  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6998   003838  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6999   00383A  3216               	rrcf	___xxtofl@arg^0,f,c
  7000   00383C                     l941:
  7001   00383C  0E00               	movlw	0
  7002   00383E  1416               	andwf	___xxtofl@arg^0,w,c
  7003   003840  6E10               	movwf	??___xxtofl^0,c
  7004   003842  0E00               	movlw	0
  7005   003844  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7006   003846  6E11               	movwf	(??___xxtofl+1)^0,c
  7007   003848  0E00               	movlw	0
  7008   00384A  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7009   00384C  6E12               	movwf	(??___xxtofl+2)^0,c
  7010   00384E  0EFF               	movlw	255
  7011   003850  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7012   003852  6E13               	movwf	(??___xxtofl+3)^0,c
  7013   003854  5010               	movf	??___xxtofl^0,w,c
  7014   003856  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7015   003858  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7016   00385A  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7017   00385C  A4D8               	btfss	status,2,c
  7018   00385E  EF33  F01C         	goto	u3911
  7019   003862  EF35  F01C         	goto	u3910
  7020   003866                     u3911:
  7021   003866  EF12  F01C         	goto	l3537
  7022   00386A                     u3910:
  7023   00386A  EF3D  F01C         	goto	l3545
  7024   00386E                     l3543:
  7025   00386E  0615               	decf	___xxtofl@exp^0,f,c
  7026   003870  90D8               	bcf	status,0,c
  7027   003872  3616               	rlcf	___xxtofl@arg^0,f,c
  7028   003874  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  7029   003876  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  7030   003878  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  7031   00387A                     l3545:
  7032   00387A  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  7033   00387C  EF42  F01C         	goto	u3921
  7034   003880  EF44  F01C         	goto	u3920
  7035   003884                     u3921:
  7036   003884  EF4C  F01C         	goto	l948
  7037   003888                     u3920:
  7038   003888  0E02               	movlw	2
  7039   00388A  6015               	cpfslt	___xxtofl@exp^0,c
  7040   00388C  EF4A  F01C         	goto	u3931
  7041   003890  EF4C  F01C         	goto	u3930
  7042   003894                     u3931:
  7043   003894  EF37  F01C         	goto	l3543
  7044   003898                     u3930:
  7045   003898                     l948:
  7046   003898  B015               	btfsc	___xxtofl@exp^0,0,c
  7047   00389A  EF51  F01C         	goto	u3941
  7048   00389E  EF53  F01C         	goto	u3940
  7049   0038A2                     u3941:
  7050   0038A2  EF54  F01C         	goto	l3551
  7051   0038A6                     u3940:
  7052   0038A6  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  7053   0038A8                     l3551:
  7054   0038A8  90D8               	bcf	status,0,c
  7055   0038AA  3215               	rrcf	___xxtofl@exp^0,f,c
  7056   0038AC  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  7057   0038B0  6A11               	clrf	(??___xxtofl+1)^0,c
  7058   0038B2  6A12               	clrf	(??___xxtofl+2)^0,c
  7059   0038B4  6A13               	clrf	(??___xxtofl+3)^0,c
  7060   0038B6  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  7061   0038BA  6A12               	clrf	(??___xxtofl+2)^0,c
  7062   0038BC  6A11               	clrf	(??___xxtofl+1)^0,c
  7063   0038BE  6A10               	clrf	??___xxtofl^0,c
  7064   0038C0  5010               	movf	??___xxtofl^0,w,c
  7065   0038C2  1216               	iorwf	___xxtofl@arg^0,f,c
  7066   0038C4  5011               	movf	(??___xxtofl+1)^0,w,c
  7067   0038C6  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  7068   0038C8  5012               	movf	(??___xxtofl+2)^0,w,c
  7069   0038CA  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  7070   0038CC  5013               	movf	(??___xxtofl+3)^0,w,c
  7071   0038CE  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  7072   0038D0  5014               	movf	___xxtofl@sign^0,w,c
  7073   0038D2  B4D8               	btfsc	status,2,c
  7074   0038D4  EF6E  F01C         	goto	u3951
  7075   0038D8  EF70  F01C         	goto	u3950
  7076   0038DC                     u3951:
  7077   0038DC  EF78  F01C         	goto	l3561
  7078   0038E0                     u3950:
  7079   0038E0  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7080   0038E2  EF77  F01C         	goto	u3960
  7081   0038E6  EF75  F01C         	goto	u3961
  7082   0038EA                     u3961:
  7083   0038EA  EF78  F01C         	goto	l3561
  7084   0038EE                     u3960:
  7085   0038EE  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  7086   0038F0                     l3561:
  7087   0038F0  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  7088   0038F4  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7089   0038F8  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7090   0038FC  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7091   003900                     l937:
  7092   003900  0012               	return		;funcret
  7093   003902                     __end_of___xxtofl:
  7094                           	callstack 0
  7095                           
  7096 ;; *************** function ___fltol *****************
  7097 ;; Defined at:
  7098 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  f1              4    0[COMRAM] unsigned char 
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;  exp1            1    9[COMRAM] unsigned char 
  7103 ;;  sign1           1    8[COMRAM] unsigned char 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  4    0[COMRAM] long 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2, status,0
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7116 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7117 ;;Total ram usage:       10 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_custom_floatmodulo
  7123 ;;		_efgtoa
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text36
  7128   003A1A                     __ptext36:
  7129                           	callstack 0
  7130   003A1A                     ___fltol:
  7131                           	callstack 25
  7132   003A1A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7133   003A1C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7134   003A1E  6E0A               	movwf	___fltol@exp1^0,c
  7135   003A20  500A               	movf	___fltol@exp1^0,w,c
  7136   003A22  A4D8               	btfss	status,2,c
  7137   003A24  EF16  F01D         	goto	u5471
  7138   003A28  EF18  F01D         	goto	u5470
  7139   003A2C                     u5471:
  7140   003A2C  EF22  F01D         	goto	l4579
  7141   003A30                     u5470:
  7142   003A30                     l4575:
  7143   003A30  0E00               	movlw	0
  7144   003A32  6E01               	movwf	?___fltol^0,c
  7145   003A34  0E00               	movlw	0
  7146   003A36  6E02               	movwf	(?___fltol+1)^0,c
  7147   003A38  0E00               	movlw	0
  7148   003A3A  6E03               	movwf	(?___fltol+2)^0,c
  7149   003A3C  0E00               	movlw	0
  7150   003A3E  6E04               	movwf	(?___fltol+3)^0,c
  7151   003A40  EF8F  F01D         	goto	l576
  7152   003A44                     l4579:
  7153   003A44  C001  F005         	movff	___fltol@f1,??___fltol
  7154   003A48  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7155   003A4C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7156   003A50  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7157   003A54  0E20               	movlw	32
  7158   003A56  EF32  F01D         	goto	u5480
  7159   003A5A                     u5485:
  7160   003A5A  90D8               	bcf	status,0,c
  7161   003A5C  3208               	rrcf	(??___fltol+3)^0,f,c
  7162   003A5E  3207               	rrcf	(??___fltol+2)^0,f,c
  7163   003A60  3206               	rrcf	(??___fltol+1)^0,f,c
  7164   003A62  3205               	rrcf	??___fltol^0,f,c
  7165   003A64                     u5480:
  7166   003A64  2EE8               	decfsz	wreg,f,c
  7167   003A66  EF2D  F01D         	goto	u5485
  7168   003A6A  5005               	movf	??___fltol^0,w,c
  7169   003A6C  6E09               	movwf	___fltol@sign1^0,c
  7170   003A6E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7171   003A70  0EFF               	movlw	255
  7172   003A72  1601               	andwf	___fltol@f1^0,f,c
  7173   003A74  0EFF               	movlw	255
  7174   003A76  1602               	andwf	(___fltol@f1+1)^0,f,c
  7175   003A78  0EFF               	movlw	255
  7176   003A7A  1603               	andwf	(___fltol@f1+2)^0,f,c
  7177   003A7C  0E00               	movlw	0
  7178   003A7E  1604               	andwf	(___fltol@f1+3)^0,f,c
  7179   003A80  0E96               	movlw	150
  7180   003A82  5E0A               	subwf	___fltol@exp1^0,f,c
  7181   003A84  BE0A               	btfsc	___fltol@exp1^0,7,c
  7182   003A86  EF49  F01D         	goto	u5490
  7183   003A8A  EF47  F01D         	goto	u5491
  7184   003A8E                     u5491:
  7185   003A8E  EF5F  F01D         	goto	l4599
  7186   003A92                     u5490:
  7187   003A92  500A               	movf	___fltol@exp1^0,w,c
  7188   003A94  0A80               	xorlw	128
  7189   003A96  0F97               	addlw	151
  7190   003A98  B0D8               	btfsc	status,0,c
  7191   003A9A  EF51  F01D         	goto	u5501
  7192   003A9E  EF53  F01D         	goto	u5500
  7193   003AA2                     u5501:
  7194   003AA2  EF55  F01D         	goto	l4595
  7195   003AA6                     u5500:
  7196   003AA6  EF18  F01D         	goto	l4575
  7197   003AAA                     l4595:
  7198   003AAA  90D8               	bcf	status,0,c
  7199   003AAC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7200   003AAE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7201   003AB0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7202   003AB2  3201               	rrcf	___fltol@f1^0,f,c
  7203   003AB4  3E0A               	incfsz	___fltol@exp1^0,f,c
  7204   003AB6  EF55  F01D         	goto	l4595
  7205   003ABA  EF77  F01D         	goto	l4609
  7206   003ABE                     l4599:
  7207   003ABE  0E1F               	movlw	31
  7208   003AC0  640A               	cpfsgt	___fltol@exp1^0,c
  7209   003AC2  EF65  F01D         	goto	u5511
  7210   003AC6  EF67  F01D         	goto	u5510
  7211   003ACA                     u5511:
  7212   003ACA  EF6F  F01D         	goto	l4607
  7213   003ACE                     u5510:
  7214   003ACE  EF18  F01D         	goto	l4575
  7215   003AD2                     l4605:
  7216   003AD2  90D8               	bcf	status,0,c
  7217   003AD4  3601               	rlcf	___fltol@f1^0,f,c
  7218   003AD6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7219   003AD8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7220   003ADA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7221   003ADC  060A               	decf	___fltol@exp1^0,f,c
  7222   003ADE                     l4607:
  7223   003ADE  500A               	movf	___fltol@exp1^0,w,c
  7224   003AE0  A4D8               	btfss	status,2,c
  7225   003AE2  EF75  F01D         	goto	u5521
  7226   003AE6  EF77  F01D         	goto	u5520
  7227   003AEA                     u5521:
  7228   003AEA  EF69  F01D         	goto	l4605
  7229   003AEE                     u5520:
  7230   003AEE                     l4609:
  7231   003AEE  5009               	movf	___fltol@sign1^0,w,c
  7232   003AF0  B4D8               	btfsc	status,2,c
  7233   003AF2  EF7D  F01D         	goto	u5531
  7234   003AF6  EF7F  F01D         	goto	u5530
  7235   003AFA                     u5531:
  7236   003AFA  EF87  F01D         	goto	l4613
  7237   003AFE                     u5530:
  7238   003AFE  1E04               	comf	(___fltol@f1+3)^0,f,c
  7239   003B00  1E03               	comf	(___fltol@f1+2)^0,f,c
  7240   003B02  1E02               	comf	(___fltol@f1+1)^0,f,c
  7241   003B04  6C01               	negf	___fltol@f1^0,c
  7242   003B06  0E00               	movlw	0
  7243   003B08  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7244   003B0A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7245   003B0C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7246   003B0E                     l4613:
  7247   003B0E  C001  F001         	movff	___fltol@f1,?___fltol
  7248   003B12  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7249   003B16  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7250   003B1A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7251   003B1E                     l576:
  7252   003B1E  0012               	return		;funcret
  7253   003B20                     __end_of___fltol:
  7254                           	callstack 0
  7255                           
  7256 ;; *************** function ___flsub *****************
  7257 ;; Defined at:
  7258 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  b               4   50[COMRAM] long 
  7261 ;;  a               4   54[COMRAM] long 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  4   50[COMRAM] long 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7276 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7277 ;;Total ram usage:        8 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; Hardware stack levels required when called: 1
  7280 ;; This function calls:
  7281 ;;		___fladd
  7282 ;; This function is called by:
  7283 ;;		_custom_floatmodulo
  7284 ;;		_RGB_to_HSV
  7285 ;;		_efgtoa
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text37
  7290   0041B6                     __ptext37:
  7291                           	callstack 0
  7292   0041B6                     ___flsub:
  7293                           	callstack 24
  7294   0041B6  0E00               	movlw	0
  7295   0041B8  1A37               	xorwf	___flsub@a^0,f,c
  7296   0041BA  0E00               	movlw	0
  7297   0041BC  1A38               	xorwf	(___flsub@a+1)^0,f,c
  7298   0041BE  0E00               	movlw	0
  7299   0041C0  1A39               	xorwf	(___flsub@a+2)^0,f,c
  7300   0041C2  0E80               	movlw	128
  7301   0041C4  1A3A               	xorwf	(___flsub@a+3)^0,f,c
  7302   0041C6  C033  F001         	movff	___flsub@b,___fladd@b
  7303   0041CA  C034  F002         	movff	___flsub@b+1,___fladd@b+1
  7304   0041CE  C035  F003         	movff	___flsub@b+2,___fladd@b+2
  7305   0041D2  C036  F004         	movff	___flsub@b+3,___fladd@b+3
  7306   0041D6  C037  F005         	movff	___flsub@a,___fladd@a
  7307   0041DA  C038  F006         	movff	___flsub@a+1,___fladd@a+1
  7308   0041DE  C039  F007         	movff	___flsub@a+2,___fladd@a+2
  7309   0041E2  C03A  F008         	movff	___flsub@a+3,___fladd@a+3
  7310   0041E6  EC42  F013         	call	___fladd	;wreg free
  7311   0041EA  C001  F033         	movff	?___fladd,?___flsub
  7312   0041EE  C002  F034         	movff	?___fladd+1,?___flsub+1
  7313   0041F2  C003  F035         	movff	?___fladd+2,?___flsub+2
  7314   0041F6  C004  F036         	movff	?___fladd+3,?___flsub+3
  7315   0041FA  0012               	return		;funcret
  7316   0041FC                     __end_of___flsub:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function ___fladd *****************
  7320 ;; Defined at:
  7321 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  b               4    0[COMRAM] long 
  7324 ;;  a               4    4[COMRAM] long 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  grs             1   15[COMRAM] unsigned char 
  7327 ;;  bexp            1   14[COMRAM] unsigned char 
  7328 ;;  aexp            1   13[COMRAM] unsigned char 
  7329 ;;  signs           1   12[COMRAM] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  4    0[COMRAM] unsigned char 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7339 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7342 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7343 ;;Total ram usage:       16 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_RGB_to_HSV
  7349 ;;		___flsub
  7350 ;;		_efgtoa
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text38
  7355   002684                     __ptext38:
  7356                           	callstack 0
  7357   002684                     ___fladd:
  7358                           	callstack 24
  7359   002684  5004               	movf	(___fladd@b+3)^0,w,c
  7360   002686  0B80               	andlw	128
  7361   002688  6E0D               	movwf	___fladd@signs^0,c
  7362   00268A  5004               	movf	(___fladd@b+3)^0,w,c
  7363   00268C  2404               	addwf	(___fladd@b+3)^0,w,c
  7364   00268E  6E0F               	movwf	___fladd@bexp^0,c
  7365   002690  AE03               	btfss	(___fladd@b+2)^0,7,c
  7366   002692  EF4D  F013         	goto	u4561
  7367   002696  EF4F  F013         	goto	u4560
  7368   00269A                     u4561:
  7369   00269A  EF50  F013         	goto	l4043
  7370   00269E                     u4560:
  7371   00269E  800F               	bsf	___fladd@bexp^0,0,c
  7372   0026A0                     l4043:
  7373   0026A0  500F               	movf	___fladd@bexp^0,w,c
  7374   0026A2  B4D8               	btfsc	status,2,c
  7375   0026A4  EF56  F013         	goto	u4571
  7376   0026A8  EF58  F013         	goto	u4570
  7377   0026AC                     u4571:
  7378   0026AC  EF6D  F013         	goto	l4053
  7379   0026B0                     u4570:
  7380   0026B0  280F               	incf	___fladd@bexp^0,w,c
  7381   0026B2  A4D8               	btfss	status,2,c
  7382   0026B4  EF5E  F013         	goto	u4581
  7383   0026B8  EF60  F013         	goto	u4580
  7384   0026BC                     u4581:
  7385   0026BC  EF68  F013         	goto	l4049
  7386   0026C0                     u4580:
  7387   0026C0  0E00               	movlw	0
  7388   0026C2  6E01               	movwf	___fladd@b^0,c
  7389   0026C4  0E00               	movlw	0
  7390   0026C6  6E02               	movwf	(___fladd@b+1)^0,c
  7391   0026C8  0E00               	movlw	0
  7392   0026CA  6E03               	movwf	(___fladd@b+2)^0,c
  7393   0026CC  0E00               	movlw	0
  7394   0026CE  6E04               	movwf	(___fladd@b+3)^0,c
  7395   0026D0                     l4049:
  7396   0026D0  8E03               	bsf	(___fladd@b+2)^0,7,c
  7397   0026D2  0E00               	movlw	0
  7398   0026D4  6E04               	movwf	(___fladd@b+3)^0,c
  7399   0026D6  EF75  F013         	goto	l4055
  7400   0026DA                     l4053:
  7401   0026DA  0E00               	movlw	0
  7402   0026DC  6E01               	movwf	___fladd@b^0,c
  7403   0026DE  0E00               	movlw	0
  7404   0026E0  6E02               	movwf	(___fladd@b+1)^0,c
  7405   0026E2  0E00               	movlw	0
  7406   0026E4  6E03               	movwf	(___fladd@b+2)^0,c
  7407   0026E6  0E00               	movlw	0
  7408   0026E8  6E04               	movwf	(___fladd@b+3)^0,c
  7409   0026EA                     l4055:
  7410   0026EA  5008               	movf	(___fladd@a+3)^0,w,c
  7411   0026EC  0B80               	andlw	128
  7412   0026EE  6E0E               	movwf	___fladd@aexp^0,c
  7413   0026F0  500D               	movf	___fladd@signs^0,w,c
  7414   0026F2  180E               	xorwf	___fladd@aexp^0,w,c
  7415   0026F4  B4D8               	btfsc	status,2,c
  7416   0026F6  EF7F  F013         	goto	u4591
  7417   0026FA  EF81  F013         	goto	u4590
  7418   0026FE                     u4591:
  7419   0026FE  EF82  F013         	goto	l4061
  7420   002702                     u4590:
  7421   002702  8C0D               	bsf	___fladd@signs^0,6,c
  7422   002704                     l4061:
  7423   002704  5008               	movf	(___fladd@a+3)^0,w,c
  7424   002706  2408               	addwf	(___fladd@a+3)^0,w,c
  7425   002708  6E0E               	movwf	___fladd@aexp^0,c
  7426   00270A  AE07               	btfss	(___fladd@a+2)^0,7,c
  7427   00270C  EF8A  F013         	goto	u4601
  7428   002710  EF8C  F013         	goto	u4600
  7429   002714                     u4601:
  7430   002714  EF8D  F013         	goto	l4067
  7431   002718                     u4600:
  7432   002718  800E               	bsf	___fladd@aexp^0,0,c
  7433   00271A                     l4067:
  7434   00271A  500E               	movf	___fladd@aexp^0,w,c
  7435   00271C  B4D8               	btfsc	status,2,c
  7436   00271E  EF93  F013         	goto	u4611
  7437   002722  EF95  F013         	goto	u4610
  7438   002726                     u4611:
  7439   002726  EFAA  F013         	goto	l4077
  7440   00272A                     u4610:
  7441   00272A  280E               	incf	___fladd@aexp^0,w,c
  7442   00272C  A4D8               	btfss	status,2,c
  7443   00272E  EF9B  F013         	goto	u4621
  7444   002732  EF9D  F013         	goto	u4620
  7445   002736                     u4621:
  7446   002736  EFA5  F013         	goto	l4073
  7447   00273A                     u4620:
  7448   00273A  0E00               	movlw	0
  7449   00273C  6E05               	movwf	___fladd@a^0,c
  7450   00273E  0E00               	movlw	0
  7451   002740  6E06               	movwf	(___fladd@a+1)^0,c
  7452   002742  0E00               	movlw	0
  7453   002744  6E07               	movwf	(___fladd@a+2)^0,c
  7454   002746  0E00               	movlw	0
  7455   002748  6E08               	movwf	(___fladd@a+3)^0,c
  7456   00274A                     l4073:
  7457   00274A  8E07               	bsf	(___fladd@a+2)^0,7,c
  7458   00274C  0E00               	movlw	0
  7459   00274E  6E08               	movwf	(___fladd@a+3)^0,c
  7460   002750  EFB2  F013         	goto	l4079
  7461   002754                     l4077:
  7462   002754  0E00               	movlw	0
  7463   002756  6E05               	movwf	___fladd@a^0,c
  7464   002758  0E00               	movlw	0
  7465   00275A  6E06               	movwf	(___fladd@a+1)^0,c
  7466   00275C  0E00               	movlw	0
  7467   00275E  6E07               	movwf	(___fladd@a+2)^0,c
  7468   002760  0E00               	movlw	0
  7469   002762  6E08               	movwf	(___fladd@a+3)^0,c
  7470   002764                     l4079:
  7471   002764  500F               	movf	___fladd@bexp^0,w,c
  7472   002766  5C0E               	subwf	___fladd@aexp^0,w,c
  7473   002768  B0D8               	btfsc	status,0,c
  7474   00276A  EFB9  F013         	goto	u4631
  7475   00276E  EFBB  F013         	goto	u4630
  7476   002772                     u4631:
  7477   002772  EFE2  F013         	goto	l4115
  7478   002776                     u4630:
  7479   002776  AC0D               	btfss	___fladd@signs^0,6,c
  7480   002778  EFC0  F013         	goto	u4641
  7481   00277C  EFC2  F013         	goto	u4640
  7482   002780                     u4641:
  7483   002780  EFC4  F013         	goto	l4085
  7484   002784                     u4640:
  7485   002784  0E80               	movlw	128
  7486   002786  1A0D               	xorwf	___fladd@signs^0,f,c
  7487   002788                     l4085:
  7488   002788  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7489   00278C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7490   002790  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7491   002794  C001  F010         	movff	___fladd@b,___fladd@grs
  7492   002798  C005  F001         	movff	___fladd@a,___fladd@b
  7493   00279C  C010  F005         	movff	___fladd@grs,___fladd@a
  7494   0027A0  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7495   0027A4  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7496   0027A8  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7497   0027AC  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7498   0027B0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7499   0027B4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7500   0027B8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7501   0027BC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7502   0027C0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7503   0027C4                     l4115:
  7504   0027C4  0E00               	movlw	0
  7505   0027C6  6E10               	movwf	___fladd@grs^0,c
  7506   0027C8  500F               	movf	___fladd@bexp^0,w,c
  7507   0027CA  C00E  F009         	movff	___fladd@aexp,??___fladd
  7508   0027CE  6A0A               	clrf	(??___fladd+1)^0,c
  7509   0027D0  5E09               	subwf	??___fladd^0,f,c
  7510   0027D2  0E00               	movlw	0
  7511   0027D4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7512   0027D6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7513   0027D8  EFF7  F013         	goto	u4651
  7514   0027DC  500A               	movf	(??___fladd+1)^0,w,c
  7515   0027DE  E109               	bnz	u4650
  7516   0027E0  0E1A               	movlw	26
  7517   0027E2  5C09               	subwf	??___fladd^0,w,c
  7518   0027E4  A0D8               	btfss	status,0,c
  7519   0027E6  EFF7  F013         	goto	u4651
  7520   0027EA  EFF9  F013         	goto	u4650
  7521   0027EE                     u4651:
  7522   0027EE  EF30  F014         	goto	l808
  7523   0027F2                     u4650:
  7524   0027F2  5001               	movf	___fladd@b^0,w,c
  7525   0027F4  1002               	iorwf	(___fladd@b+1)^0,w,c
  7526   0027F6  1003               	iorwf	(___fladd@b+2)^0,w,c
  7527   0027F8  1004               	iorwf	(___fladd@b+3)^0,w,c
  7528   0027FA  A4D8               	btfss	status,2,c
  7529   0027FC  EF02  F014         	goto	u4661
  7530   002800  EF05  F014         	goto	u4660
  7531   002804                     u4661:
  7532   002804  0E01               	movlw	1
  7533   002806  EF06  F014         	goto	u4670
  7534   00280A                     u4660:
  7535   00280A  0E00               	movlw	0
  7536   00280C                     u4670:
  7537   00280C  6E10               	movwf	___fladd@grs^0,c
  7538   00280E  0E00               	movlw	0
  7539   002810  6E01               	movwf	___fladd@b^0,c
  7540   002812  0E00               	movlw	0
  7541   002814  6E02               	movwf	(___fladd@b+1)^0,c
  7542   002816  0E00               	movlw	0
  7543   002818  6E03               	movwf	(___fladd@b+2)^0,c
  7544   00281A  0E00               	movlw	0
  7545   00281C  6E04               	movwf	(___fladd@b+3)^0,c
  7546   00281E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7547   002822  EF39  F014         	goto	l807
  7548   002826                     l809:
  7549   002826  A010               	btfss	___fladd@grs^0,0,c
  7550   002828  EF18  F014         	goto	u4681
  7551   00282C  EF1A  F014         	goto	u4680
  7552   002830                     u4681:
  7553   002830  EF20  F014         	goto	l4127
  7554   002834                     u4680:
  7555   002834  90D8               	bcf	status,0,c
  7556   002836  3010               	rrcf	___fladd@grs^0,w,c
  7557   002838  0901               	iorlw	1
  7558   00283A  6E10               	movwf	___fladd@grs^0,c
  7559   00283C  EF22  F014         	goto	l4129
  7560   002840                     l4127:
  7561   002840  90D8               	bcf	status,0,c
  7562   002842  3210               	rrcf	___fladd@grs^0,f,c
  7563   002844                     l4129:
  7564   002844  A001               	btfss	___fladd@b^0,0,c
  7565   002846  EF27  F014         	goto	u4691
  7566   00284A  EF29  F014         	goto	u4690
  7567   00284E                     u4691:
  7568   00284E  EF2A  F014         	goto	l4133
  7569   002852                     u4690:
  7570   002852  8E10               	bsf	___fladd@grs^0,7,c
  7571   002854                     l4133:
  7572   002854  3404               	rlcf	(___fladd@b+3)^0,w,c
  7573   002856  3204               	rrcf	(___fladd@b+3)^0,f,c
  7574   002858  3203               	rrcf	(___fladd@b+2)^0,f,c
  7575   00285A  3202               	rrcf	(___fladd@b+1)^0,f,c
  7576   00285C  3201               	rrcf	___fladd@b^0,f,c
  7577   00285E  2A0F               	incf	___fladd@bexp^0,f,c
  7578   002860                     l808:
  7579   002860  500E               	movf	___fladd@aexp^0,w,c
  7580   002862  5C0F               	subwf	___fladd@bexp^0,w,c
  7581   002864  A0D8               	btfss	status,0,c
  7582   002866  EF37  F014         	goto	u4701
  7583   00286A  EF39  F014         	goto	u4700
  7584   00286E                     u4701:
  7585   00286E  EF13  F014         	goto	l809
  7586   002872                     u4700:
  7587   002872                     l807:
  7588   002872  BC0D               	btfsc	___fladd@signs^0,6,c
  7589   002874  EF3E  F014         	goto	u4711
  7590   002878  EF40  F014         	goto	u4710
  7591   00287C                     u4711:
  7592   00287C  EF80  F014         	goto	l4161
  7593   002880                     u4710:
  7594   002880  500F               	movf	___fladd@bexp^0,w,c
  7595   002882  A4D8               	btfss	status,2,c
  7596   002884  EF46  F014         	goto	u4721
  7597   002888  EF48  F014         	goto	u4720
  7598   00288C                     u4721:
  7599   00288C  EF52  F014         	goto	l4143
  7600   002890                     u4720:
  7601   002890  0E00               	movlw	0
  7602   002892  6E01               	movwf	?___fladd^0,c
  7603   002894  0E00               	movlw	0
  7604   002896  6E02               	movwf	(?___fladd+1)^0,c
  7605   002898  0E00               	movlw	0
  7606   00289A  6E03               	movwf	(?___fladd+2)^0,c
  7607   00289C  0E00               	movlw	0
  7608   00289E  6E04               	movwf	(?___fladd+3)^0,c
  7609   0028A0  EFA1  F015         	goto	l816
  7610   0028A4                     l4143:
  7611   0028A4  5005               	movf	___fladd@a^0,w,c
  7612   0028A6  2601               	addwf	___fladd@b^0,f,c
  7613   0028A8  5006               	movf	(___fladd@a+1)^0,w,c
  7614   0028AA  2202               	addwfc	(___fladd@b+1)^0,f,c
  7615   0028AC  5007               	movf	(___fladd@a+2)^0,w,c
  7616   0028AE  2203               	addwfc	(___fladd@b+2)^0,f,c
  7617   0028B0  5008               	movf	(___fladd@a+3)^0,w,c
  7618   0028B2  2204               	addwfc	(___fladd@b+3)^0,f,c
  7619   0028B4  A004               	btfss	(___fladd@b+3)^0,0,c
  7620   0028B6  EF5F  F014         	goto	u4731
  7621   0028BA  EF61  F014         	goto	u4730
  7622   0028BE                     u4731:
  7623   0028BE  EF0D  F015         	goto	l4197
  7624   0028C2                     u4730:
  7625   0028C2  A010               	btfss	___fladd@grs^0,0,c
  7626   0028C4  EF66  F014         	goto	u4741
  7627   0028C8  EF68  F014         	goto	u4740
  7628   0028CC                     u4741:
  7629   0028CC  EF6E  F014         	goto	l4151
  7630   0028D0                     u4740:
  7631   0028D0  90D8               	bcf	status,0,c
  7632   0028D2  3010               	rrcf	___fladd@grs^0,w,c
  7633   0028D4  0901               	iorlw	1
  7634   0028D6  6E10               	movwf	___fladd@grs^0,c
  7635   0028D8  EF70  F014         	goto	l4153
  7636   0028DC                     l4151:
  7637   0028DC  90D8               	bcf	status,0,c
  7638   0028DE  3210               	rrcf	___fladd@grs^0,f,c
  7639   0028E0                     l4153:
  7640   0028E0  A001               	btfss	___fladd@b^0,0,c
  7641   0028E2  EF75  F014         	goto	u4751
  7642   0028E6  EF77  F014         	goto	u4750
  7643   0028EA                     u4751:
  7644   0028EA  EF78  F014         	goto	l4157
  7645   0028EE                     u4750:
  7646   0028EE  8E10               	bsf	___fladd@grs^0,7,c
  7647   0028F0                     l4157:
  7648   0028F0  3404               	rlcf	(___fladd@b+3)^0,w,c
  7649   0028F2  3204               	rrcf	(___fladd@b+3)^0,f,c
  7650   0028F4  3203               	rrcf	(___fladd@b+2)^0,f,c
  7651   0028F6  3202               	rrcf	(___fladd@b+1)^0,f,c
  7652   0028F8  3201               	rrcf	___fladd@b^0,f,c
  7653   0028FA  2A0F               	incf	___fladd@bexp^0,f,c
  7654   0028FC  EF0D  F015         	goto	l4197
  7655   002900                     l4161:
  7656   002900  5005               	movf	___fladd@a^0,w,c
  7657   002902  5C01               	subwf	___fladd@b^0,w,c
  7658   002904  5006               	movf	(___fladd@a+1)^0,w,c
  7659   002906  5802               	subwfb	(___fladd@b+1)^0,w,c
  7660   002908  5007               	movf	(___fladd@a+2)^0,w,c
  7661   00290A  5803               	subwfb	(___fladd@b+2)^0,w,c
  7662   00290C  5004               	movf	(___fladd@b+3)^0,w,c
  7663   00290E  0A80               	xorlw	128
  7664   002910  6E09               	movwf	??___fladd^0,c
  7665   002912  5008               	movf	(___fladd@a+3)^0,w,c
  7666   002914  0A80               	xorlw	128
  7667   002916  5809               	subwfb	??___fladd^0,w,c
  7668   002918  B0D8               	btfsc	status,0,c
  7669   00291A  EF91  F014         	goto	u4761
  7670   00291E  EF93  F014         	goto	u4760
  7671   002922                     u4761:
  7672   002922  EFBE  F014         	goto	l4171
  7673   002926                     u4760:
  7674   002926  5001               	movf	___fladd@b^0,w,c
  7675   002928  5C05               	subwf	___fladd@a^0,w,c
  7676   00292A  6E09               	movwf	??___fladd^0,c
  7677   00292C  5002               	movf	(___fladd@b+1)^0,w,c
  7678   00292E  5806               	subwfb	(___fladd@a+1)^0,w,c
  7679   002930  6E0A               	movwf	(??___fladd+1)^0,c
  7680   002932  5003               	movf	(___fladd@b+2)^0,w,c
  7681   002934  5807               	subwfb	(___fladd@a+2)^0,w,c
  7682   002936  6E0B               	movwf	(??___fladd+2)^0,c
  7683   002938  5004               	movf	(___fladd@b+3)^0,w,c
  7684   00293A  5808               	subwfb	(___fladd@a+3)^0,w,c
  7685   00293C  6E0C               	movwf	(??___fladd+3)^0,c
  7686   00293E  0EFF               	movlw	255
  7687   002940  2409               	addwf	??___fladd^0,w,c
  7688   002942  6E01               	movwf	___fladd@b^0,c
  7689   002944  0EFF               	movlw	255
  7690   002946  200A               	addwfc	(??___fladd+1)^0,w,c
  7691   002948  6E02               	movwf	(___fladd@b+1)^0,c
  7692   00294A  0EFF               	movlw	255
  7693   00294C  200B               	addwfc	(??___fladd+2)^0,w,c
  7694   00294E  6E03               	movwf	(___fladd@b+2)^0,c
  7695   002950  0EFF               	movlw	255
  7696   002952  200C               	addwfc	(??___fladd+3)^0,w,c
  7697   002954  6E04               	movwf	(___fladd@b+3)^0,c
  7698   002956  0E80               	movlw	128
  7699   002958  1A0D               	xorwf	___fladd@signs^0,f,c
  7700   00295A  6C10               	negf	___fladd@grs^0,c
  7701   00295C  5010               	movf	___fladd@grs^0,w,c
  7702   00295E  A4D8               	btfss	status,2,c
  7703   002960  EFB4  F014         	goto	u4771
  7704   002964  EFB6  F014         	goto	u4770
  7705   002968                     u4771:
  7706   002968  EFC6  F014         	goto	l824
  7707   00296C                     u4770:
  7708   00296C  0E01               	movlw	1
  7709   00296E  2601               	addwf	___fladd@b^0,f,c
  7710   002970  0E00               	movlw	0
  7711   002972  2202               	addwfc	(___fladd@b+1)^0,f,c
  7712   002974  2203               	addwfc	(___fladd@b+2)^0,f,c
  7713   002976  2204               	addwfc	(___fladd@b+3)^0,f,c
  7714   002978  EFC6  F014         	goto	l824
  7715   00297C                     l4171:
  7716   00297C  5005               	movf	___fladd@a^0,w,c
  7717   00297E  5E01               	subwf	___fladd@b^0,f,c
  7718   002980  5006               	movf	(___fladd@a+1)^0,w,c
  7719   002982  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7720   002984  5007               	movf	(___fladd@a+2)^0,w,c
  7721   002986  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7722   002988  5008               	movf	(___fladd@a+3)^0,w,c
  7723   00298A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7724   00298C                     l824:
  7725   00298C  5001               	movf	___fladd@b^0,w,c
  7726   00298E  1002               	iorwf	(___fladd@b+1)^0,w,c
  7727   002990  1003               	iorwf	(___fladd@b+2)^0,w,c
  7728   002992  1004               	iorwf	(___fladd@b+3)^0,w,c
  7729   002994  A4D8               	btfss	status,2,c
  7730   002996  EFCF  F014         	goto	u4781
  7731   00299A  EFD1  F014         	goto	u4780
  7732   00299E                     u4781:
  7733   00299E  EF06  F015         	goto	l4195
  7734   0029A2                     u4780:
  7735   0029A2  5010               	movf	___fladd@grs^0,w,c
  7736   0029A4  A4D8               	btfss	status,2,c
  7737   0029A6  EFD7  F014         	goto	u4791
  7738   0029AA  EFD9  F014         	goto	u4790
  7739   0029AE                     u4791:
  7740   0029AE  EF06  F015         	goto	l4195
  7741   0029B2                     u4790:
  7742   0029B2  0E00               	movlw	0
  7743   0029B4  6E01               	movwf	?___fladd^0,c
  7744   0029B6  0E00               	movlw	0
  7745   0029B8  6E02               	movwf	(?___fladd+1)^0,c
  7746   0029BA  0E00               	movlw	0
  7747   0029BC  6E03               	movwf	(?___fladd+2)^0,c
  7748   0029BE  0E00               	movlw	0
  7749   0029C0  6E04               	movwf	(?___fladd+3)^0,c
  7750   0029C2  EFA1  F015         	goto	l816
  7751   0029C6                     l4179:
  7752   0029C6  90D8               	bcf	status,0,c
  7753   0029C8  3601               	rlcf	___fladd@b^0,f,c
  7754   0029CA  3602               	rlcf	(___fladd@b+1)^0,f,c
  7755   0029CC  3603               	rlcf	(___fladd@b+2)^0,f,c
  7756   0029CE  3604               	rlcf	(___fladd@b+3)^0,f,c
  7757   0029D0  AE10               	btfss	___fladd@grs^0,7,c
  7758   0029D2  EFED  F014         	goto	u4801
  7759   0029D6  EFEF  F014         	goto	u4800
  7760   0029DA                     u4801:
  7761   0029DA  EFF0  F014         	goto	l4185
  7762   0029DE                     u4800:
  7763   0029DE  8001               	bsf	___fladd@b^0,0,c
  7764   0029E0                     l4185:
  7765   0029E0  A010               	btfss	___fladd@grs^0,0,c
  7766   0029E2  EFF5  F014         	goto	u4811
  7767   0029E6  EFF7  F014         	goto	u4810
  7768   0029EA                     u4811:
  7769   0029EA  EFFB  F014         	goto	l4189
  7770   0029EE                     u4810:
  7771   0029EE  80D8               	bsf	status,0,c
  7772   0029F0  3610               	rlcf	___fladd@grs^0,f,c
  7773   0029F2  EFFD  F014         	goto	l4191
  7774   0029F6                     l4189:
  7775   0029F6  90D8               	bcf	status,0,c
  7776   0029F8  3610               	rlcf	___fladd@grs^0,f,c
  7777   0029FA                     l4191:
  7778   0029FA  500F               	movf	___fladd@bexp^0,w,c
  7779   0029FC  B4D8               	btfsc	status,2,c
  7780   0029FE  EF03  F015         	goto	u4821
  7781   002A02  EF05  F015         	goto	u4820
  7782   002A06                     u4821:
  7783   002A06  EF06  F015         	goto	l4195
  7784   002A0A                     u4820:
  7785   002A0A  060F               	decf	___fladd@bexp^0,f,c
  7786   002A0C                     l4195:
  7787   002A0C  AE03               	btfss	(___fladd@b+2)^0,7,c
  7788   002A0E  EF0B  F015         	goto	u4831
  7789   002A12  EF0D  F015         	goto	u4830
  7790   002A16                     u4831:
  7791   002A16  EFE3  F014         	goto	l4179
  7792   002A1A                     u4830:
  7793   002A1A                     l4197:
  7794   002A1A  0E00               	movlw	0
  7795   002A1C  6E0E               	movwf	___fladd@aexp^0,c
  7796   002A1E  AE10               	btfss	___fladd@grs^0,7,c
  7797   002A20  EF14  F015         	goto	u4841
  7798   002A24  EF16  F015         	goto	u4840
  7799   002A28                     u4841:
  7800   002A28  EF2E  F015         	goto	l833
  7801   002A2C                     u4840:
  7802   002A2C  C010  F009         	movff	___fladd@grs,??___fladd
  7803   002A30  0E7F               	movlw	127
  7804   002A32  1609               	andwf	??___fladd^0,f,c
  7805   002A34  B4D8               	btfsc	status,2,c
  7806   002A36  EF1F  F015         	goto	u4851
  7807   002A3A  EF21  F015         	goto	u4850
  7808   002A3E                     u4851:
  7809   002A3E  EF25  F015         	goto	l834
  7810   002A42                     u4850:
  7811   002A42                     l4203:
  7812   002A42  0E01               	movlw	1
  7813   002A44  6E0E               	movwf	___fladd@aexp^0,c
  7814   002A46  EF2E  F015         	goto	l833
  7815   002A4A                     l834:
  7816   002A4A  A001               	btfss	___fladd@b^0,0,c
  7817   002A4C  EF2A  F015         	goto	u4861
  7818   002A50  EF2C  F015         	goto	u4860
  7819   002A54                     u4861:
  7820   002A54  EF2E  F015         	goto	l833
  7821   002A58                     u4860:
  7822   002A58  EF21  F015         	goto	l4203
  7823   002A5C                     l833:
  7824   002A5C  500E               	movf	___fladd@aexp^0,w,c
  7825   002A5E  B4D8               	btfsc	status,2,c
  7826   002A60  EF34  F015         	goto	u4871
  7827   002A64  EF36  F015         	goto	u4870
  7828   002A68                     u4871:
  7829   002A68  EF61  F015         	goto	l4215
  7830   002A6C                     u4870:
  7831   002A6C  0E01               	movlw	1
  7832   002A6E  2601               	addwf	___fladd@b^0,f,c
  7833   002A70  0E00               	movlw	0
  7834   002A72  2202               	addwfc	(___fladd@b+1)^0,f,c
  7835   002A74  2203               	addwfc	(___fladd@b+2)^0,f,c
  7836   002A76  2204               	addwfc	(___fladd@b+3)^0,f,c
  7837   002A78  A004               	btfss	(___fladd@b+3)^0,0,c
  7838   002A7A  EF41  F015         	goto	u4881
  7839   002A7E  EF43  F015         	goto	u4880
  7840   002A82                     u4881:
  7841   002A82  EF61  F015         	goto	l4215
  7842   002A86                     u4880:
  7843   002A86  C001  F009         	movff	___fladd@b,??___fladd
  7844   002A8A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7845   002A8E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7846   002A92  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7847   002A96  340C               	rlcf	(??___fladd+3)^0,w,c
  7848   002A98  320C               	rrcf	(??___fladd+3)^0,f,c
  7849   002A9A  320B               	rrcf	(??___fladd+2)^0,f,c
  7850   002A9C  320A               	rrcf	(??___fladd+1)^0,f,c
  7851   002A9E  3209               	rrcf	??___fladd^0,f,c
  7852   002AA0  C009  F001         	movff	??___fladd,___fladd@b
  7853   002AA4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7854   002AA8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7855   002AAC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7856   002AB0  280F               	incf	___fladd@bexp^0,w,c
  7857   002AB2  B4D8               	btfsc	status,2,c
  7858   002AB4  EF5E  F015         	goto	u4891
  7859   002AB8  EF60  F015         	goto	u4890
  7860   002ABC                     u4891:
  7861   002ABC  EF61  F015         	goto	l4215
  7862   002AC0                     u4890:
  7863   002AC0  2A0F               	incf	___fladd@bexp^0,f,c
  7864   002AC2                     l4215:
  7865   002AC2  280F               	incf	___fladd@bexp^0,w,c
  7866   002AC4  B4D8               	btfsc	status,2,c
  7867   002AC6  EF67  F015         	goto	u4901
  7868   002ACA  EF69  F015         	goto	u4900
  7869   002ACE                     u4901:
  7870   002ACE  EF71  F015         	goto	l4219
  7871   002AD2                     u4900:
  7872   002AD2  500F               	movf	___fladd@bexp^0,w,c
  7873   002AD4  A4D8               	btfss	status,2,c
  7874   002AD6  EF6F  F015         	goto	u4911
  7875   002ADA  EF71  F015         	goto	u4910
  7876   002ADE                     u4911:
  7877   002ADE  EF83  F015         	goto	l4223
  7878   002AE2                     u4910:
  7879   002AE2                     l4219:
  7880   002AE2  0E00               	movlw	0
  7881   002AE4  6E01               	movwf	___fladd@b^0,c
  7882   002AE6  0E00               	movlw	0
  7883   002AE8  6E02               	movwf	(___fladd@b+1)^0,c
  7884   002AEA  0E00               	movlw	0
  7885   002AEC  6E03               	movwf	(___fladd@b+2)^0,c
  7886   002AEE  0E00               	movlw	0
  7887   002AF0  6E04               	movwf	(___fladd@b+3)^0,c
  7888   002AF2  500F               	movf	___fladd@bexp^0,w,c
  7889   002AF4  A4D8               	btfss	status,2,c
  7890   002AF6  EF7F  F015         	goto	u4921
  7891   002AFA  EF81  F015         	goto	u4920
  7892   002AFE                     u4921:
  7893   002AFE  EF83  F015         	goto	l4223
  7894   002B02                     u4920:
  7895   002B02  0E00               	movlw	0
  7896   002B04  6E0D               	movwf	___fladd@signs^0,c
  7897   002B06                     l4223:
  7898   002B06  A00F               	btfss	___fladd@bexp^0,0,c
  7899   002B08  EF88  F015         	goto	u4931
  7900   002B0C  EF8A  F015         	goto	u4930
  7901   002B10                     u4931:
  7902   002B10  EF8D  F015         	goto	l4227
  7903   002B14                     u4930:
  7904   002B14  8E03               	bsf	(___fladd@b+2)^0,7,c
  7905   002B16  EF8E  F015         	goto	l4229
  7906   002B1A                     l4227:
  7907   002B1A  9E03               	bcf	(___fladd@b+2)^0,7,c
  7908   002B1C                     l4229:
  7909   002B1C  90D8               	bcf	status,0,c
  7910   002B1E  300F               	rrcf	___fladd@bexp^0,w,c
  7911   002B20  6E04               	movwf	(___fladd@b+3)^0,c
  7912   002B22  AE0D               	btfss	___fladd@signs^0,7,c
  7913   002B24  EF96  F015         	goto	u4941
  7914   002B28  EF98  F015         	goto	u4940
  7915   002B2C                     u4941:
  7916   002B2C  EF99  F015         	goto	l4235
  7917   002B30                     u4940:
  7918   002B30  8E04               	bsf	(___fladd@b+3)^0,7,c
  7919   002B32                     l4235:
  7920   002B32  C001  F001         	movff	___fladd@b,?___fladd
  7921   002B36  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7922   002B3A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7923   002B3E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7924   002B42                     l816:
  7925   002B42  0012               	return		;funcret
  7926   002B44                     __end_of___fladd:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function ___flmul *****************
  7930 ;; Defined at:
  7931 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  b               4   25[COMRAM] unsigned char 
  7934 ;;  a               4   29[COMRAM] unsigned char 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;  prod            4   44[COMRAM] struct .
  7937 ;;  grs             4   39[COMRAM] unsigned long 
  7938 ;;  temp            2   48[COMRAM] struct .
  7939 ;;  bexp            1   43[COMRAM] unsigned char 
  7940 ;;  aexp            1   38[COMRAM] unsigned char 
  7941 ;;  sign            1   37[COMRAM] unsigned char 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  4   25[COMRAM] unsigned char 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2, status,0, prodl, prodh
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7951 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;Total ram usage:       25 bytes
  7956 ;; Hardware stack levels used: 1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_custom_floatmodulo
  7961 ;;		_RGB_to_HSV
  7962 ;;		_efgtoa
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text39
  7967   002B44                     __ptext39:
  7968                           	callstack 0
  7969   002B44                     ___flmul:
  7970                           	callstack 25
  7971   002B44  501D               	movf	(___flmul@b+3)^0,w,c
  7972   002B46  0B80               	andlw	128
  7973   002B48  6E26               	movwf	___flmul@sign^0,c
  7974   002B4A  501D               	movf	(___flmul@b+3)^0,w,c
  7975   002B4C  241D               	addwf	(___flmul@b+3)^0,w,c
  7976   002B4E  6E2C               	movwf	___flmul@bexp^0,c
  7977   002B50  AE1C               	btfss	(___flmul@b+2)^0,7,c
  7978   002B52  EFAD  F015         	goto	u5191
  7979   002B56  EFAF  F015         	goto	u5190
  7980   002B5A                     u5191:
  7981   002B5A  EFB0  F015         	goto	l4397
  7982   002B5E                     u5190:
  7983   002B5E  802C               	bsf	___flmul@bexp^0,0,c
  7984   002B60                     l4397:
  7985   002B60  502C               	movf	___flmul@bexp^0,w,c
  7986   002B62  B4D8               	btfsc	status,2,c
  7987   002B64  EFB6  F015         	goto	u5201
  7988   002B68  EFB8  F015         	goto	u5200
  7989   002B6C                     u5201:
  7990   002B6C  EFCB  F015         	goto	l4405
  7991   002B70                     u5200:
  7992   002B70  282C               	incf	___flmul@bexp^0,w,c
  7993   002B72  A4D8               	btfss	status,2,c
  7994   002B74  EFBE  F015         	goto	u5211
  7995   002B78  EFC0  F015         	goto	u5210
  7996   002B7C                     u5211:
  7997   002B7C  EFC8  F015         	goto	l4403
  7998   002B80                     u5210:
  7999   002B80  0E00               	movlw	0
  8000   002B82  6E1A               	movwf	___flmul@b^0,c
  8001   002B84  0E00               	movlw	0
  8002   002B86  6E1B               	movwf	(___flmul@b+1)^0,c
  8003   002B88  0E00               	movlw	0
  8004   002B8A  6E1C               	movwf	(___flmul@b+2)^0,c
  8005   002B8C  0E00               	movlw	0
  8006   002B8E  6E1D               	movwf	(___flmul@b+3)^0,c
  8007   002B90                     l4403:
  8008   002B90  8E1C               	bsf	(___flmul@b+2)^0,7,c
  8009   002B92  EFD3  F015         	goto	l4407
  8010   002B96                     l4405:
  8011   002B96  0E00               	movlw	0
  8012   002B98  6E1A               	movwf	___flmul@b^0,c
  8013   002B9A  0E00               	movlw	0
  8014   002B9C  6E1B               	movwf	(___flmul@b+1)^0,c
  8015   002B9E  0E00               	movlw	0
  8016   002BA0  6E1C               	movwf	(___flmul@b+2)^0,c
  8017   002BA2  0E00               	movlw	0
  8018   002BA4  6E1D               	movwf	(___flmul@b+3)^0,c
  8019   002BA6                     l4407:
  8020   002BA6  5021               	movf	(___flmul@a+3)^0,w,c
  8021   002BA8  0B80               	andlw	128
  8022   002BAA  1A26               	xorwf	___flmul@sign^0,f,c
  8023   002BAC  5021               	movf	(___flmul@a+3)^0,w,c
  8024   002BAE  2421               	addwf	(___flmul@a+3)^0,w,c
  8025   002BB0  6E27               	movwf	___flmul@aexp^0,c
  8026   002BB2  AE20               	btfss	(___flmul@a+2)^0,7,c
  8027   002BB4  EFDE  F015         	goto	u5221
  8028   002BB8  EFE0  F015         	goto	u5220
  8029   002BBC                     u5221:
  8030   002BBC  EFE1  F015         	goto	l4415
  8031   002BC0                     u5220:
  8032   002BC0  8027               	bsf	___flmul@aexp^0,0,c
  8033   002BC2                     l4415:
  8034   002BC2  5027               	movf	___flmul@aexp^0,w,c
  8035   002BC4  B4D8               	btfsc	status,2,c
  8036   002BC6  EFE7  F015         	goto	u5231
  8037   002BCA  EFE9  F015         	goto	u5230
  8038   002BCE                     u5231:
  8039   002BCE  EFFC  F015         	goto	l4423
  8040   002BD2                     u5230:
  8041   002BD2  2827               	incf	___flmul@aexp^0,w,c
  8042   002BD4  A4D8               	btfss	status,2,c
  8043   002BD6  EFEF  F015         	goto	u5241
  8044   002BDA  EFF1  F015         	goto	u5240
  8045   002BDE                     u5241:
  8046   002BDE  EFF9  F015         	goto	l4421
  8047   002BE2                     u5240:
  8048   002BE2  0E00               	movlw	0
  8049   002BE4  6E1E               	movwf	___flmul@a^0,c
  8050   002BE6  0E00               	movlw	0
  8051   002BE8  6E1F               	movwf	(___flmul@a+1)^0,c
  8052   002BEA  0E00               	movlw	0
  8053   002BEC  6E20               	movwf	(___flmul@a+2)^0,c
  8054   002BEE  0E00               	movlw	0
  8055   002BF0  6E21               	movwf	(___flmul@a+3)^0,c
  8056   002BF2                     l4421:
  8057   002BF2  8E20               	bsf	(___flmul@a+2)^0,7,c
  8058   002BF4  EF04  F016         	goto	l893
  8059   002BF8                     l4423:
  8060   002BF8  0E00               	movlw	0
  8061   002BFA  6E1E               	movwf	___flmul@a^0,c
  8062   002BFC  0E00               	movlw	0
  8063   002BFE  6E1F               	movwf	(___flmul@a+1)^0,c
  8064   002C00  0E00               	movlw	0
  8065   002C02  6E20               	movwf	(___flmul@a+2)^0,c
  8066   002C04  0E00               	movlw	0
  8067   002C06  6E21               	movwf	(___flmul@a+3)^0,c
  8068   002C08                     l893:
  8069   002C08  5027               	movf	___flmul@aexp^0,w,c
  8070   002C0A  B4D8               	btfsc	status,2,c
  8071   002C0C  EF0A  F016         	goto	u5251
  8072   002C10  EF0C  F016         	goto	u5250
  8073   002C14                     u5251:
  8074   002C14  EF14  F016         	goto	l4427
  8075   002C18                     u5250:
  8076   002C18  502C               	movf	___flmul@bexp^0,w,c
  8077   002C1A  A4D8               	btfss	status,2,c
  8078   002C1C  EF12  F016         	goto	u5261
  8079   002C20  EF14  F016         	goto	u5260
  8080   002C24                     u5261:
  8081   002C24  EF1E  F016         	goto	l4431
  8082   002C28                     u5260:
  8083   002C28                     l4427:
  8084   002C28  0E00               	movlw	0
  8085   002C2A  6E1A               	movwf	?___flmul^0,c
  8086   002C2C  0E00               	movlw	0
  8087   002C2E  6E1B               	movwf	(?___flmul+1)^0,c
  8088   002C30  0E00               	movlw	0
  8089   002C32  6E1C               	movwf	(?___flmul+2)^0,c
  8090   002C34  0E00               	movlw	0
  8091   002C36  6E1D               	movwf	(?___flmul+3)^0,c
  8092   002C38  EFB6  F017         	goto	l897
  8093   002C3C                     l4431:
  8094   002C3C  5020               	movf	(___flmul@a+2)^0,w,c
  8095   002C3E  021A               	mulwf	___flmul@b^0,c
  8096   002C40  CFF3 F031          	movff	prodl,___flmul@temp
  8097   002C44  CFF4 F032          	movff	prodh,___flmul@temp+1
  8098   002C48  5031               	movf	___flmul@temp^0,w,c
  8099   002C4A  6E28               	movwf	___flmul@grs^0,c
  8100   002C4C  6A29               	clrf	(___flmul@grs+1)^0,c
  8101   002C4E  6A2A               	clrf	(___flmul@grs+2)^0,c
  8102   002C50  6A2B               	clrf	(___flmul@grs+3)^0,c
  8103   002C52  5032               	movf	(___flmul@temp+1)^0,w,c
  8104   002C54  6E2D               	movwf	___flmul@prod^0,c
  8105   002C56  6A2E               	clrf	(___flmul@prod+1)^0,c
  8106   002C58  6A2F               	clrf	(___flmul@prod+2)^0,c
  8107   002C5A  6A30               	clrf	(___flmul@prod+3)^0,c
  8108   002C5C  501F               	movf	(___flmul@a+1)^0,w,c
  8109   002C5E  021B               	mulwf	(___flmul@b+1)^0,c
  8110   002C60  CFF3 F031          	movff	prodl,___flmul@temp
  8111   002C64  CFF4 F032          	movff	prodh,___flmul@temp+1
  8112   002C68  5031               	movf	___flmul@temp^0,w,c
  8113   002C6A  2628               	addwf	___flmul@grs^0,f,c
  8114   002C6C  0E00               	movlw	0
  8115   002C6E  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8116   002C70  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8117   002C72  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8118   002C74  5032               	movf	(___flmul@temp+1)^0,w,c
  8119   002C76  262D               	addwf	___flmul@prod^0,f,c
  8120   002C78  0E00               	movlw	0
  8121   002C7A  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8122   002C7C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8123   002C7E  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8124   002C80  501E               	movf	___flmul@a^0,w,c
  8125   002C82  021C               	mulwf	(___flmul@b+2)^0,c
  8126   002C84  CFF3 F031          	movff	prodl,___flmul@temp
  8127   002C88  CFF4 F032          	movff	prodh,___flmul@temp+1
  8128   002C8C  5031               	movf	___flmul@temp^0,w,c
  8129   002C8E  2628               	addwf	___flmul@grs^0,f,c
  8130   002C90  0E00               	movlw	0
  8131   002C92  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8132   002C94  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8133   002C96  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8134   002C98  5032               	movf	(___flmul@temp+1)^0,w,c
  8135   002C9A  262D               	addwf	___flmul@prod^0,f,c
  8136   002C9C  0E00               	movlw	0
  8137   002C9E  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8138   002CA0  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8139   002CA2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8140   002CA4  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8141   002CA8  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8142   002CAC  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8143   002CB0  6A28               	clrf	___flmul@grs^0,c
  8144   002CB2  501E               	movf	___flmul@a^0,w,c
  8145   002CB4  021B               	mulwf	(___flmul@b+1)^0,c
  8146   002CB6  CFF3 F031          	movff	prodl,___flmul@temp
  8147   002CBA  CFF4 F032          	movff	prodh,___flmul@temp+1
  8148   002CBE  5031               	movf	___flmul@temp^0,w,c
  8149   002CC0  2628               	addwf	___flmul@grs^0,f,c
  8150   002CC2  5032               	movf	(___flmul@temp+1)^0,w,c
  8151   002CC4  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8152   002CC6  0E00               	movlw	0
  8153   002CC8  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8154   002CCA  0E00               	movlw	0
  8155   002CCC  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8156   002CCE  501F               	movf	(___flmul@a+1)^0,w,c
  8157   002CD0  021A               	mulwf	___flmul@b^0,c
  8158   002CD2  CFF3 F031          	movff	prodl,___flmul@temp
  8159   002CD6  CFF4 F032          	movff	prodh,___flmul@temp+1
  8160   002CDA  5031               	movf	___flmul@temp^0,w,c
  8161   002CDC  2628               	addwf	___flmul@grs^0,f,c
  8162   002CDE  5032               	movf	(___flmul@temp+1)^0,w,c
  8163   002CE0  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8164   002CE2  0E00               	movlw	0
  8165   002CE4  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8166   002CE6  0E00               	movlw	0
  8167   002CE8  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8168   002CEA  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8169   002CEE  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8170   002CF2  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8171   002CF6  6A28               	clrf	___flmul@grs^0,c
  8172   002CF8  501E               	movf	___flmul@a^0,w,c
  8173   002CFA  021A               	mulwf	___flmul@b^0,c
  8174   002CFC  CFF3 F031          	movff	prodl,___flmul@temp
  8175   002D00  CFF4 F032          	movff	prodh,___flmul@temp+1
  8176   002D04  5031               	movf	___flmul@temp^0,w,c
  8177   002D06  2628               	addwf	___flmul@grs^0,f,c
  8178   002D08  5032               	movf	(___flmul@temp+1)^0,w,c
  8179   002D0A  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8180   002D0C  0E00               	movlw	0
  8181   002D0E  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8182   002D10  0E00               	movlw	0
  8183   002D12  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8184   002D14  5020               	movf	(___flmul@a+2)^0,w,c
  8185   002D16  021B               	mulwf	(___flmul@b+1)^0,c
  8186   002D18  CFF3 F031          	movff	prodl,___flmul@temp
  8187   002D1C  CFF4 F032          	movff	prodh,___flmul@temp+1
  8188   002D20  5031               	movf	___flmul@temp^0,w,c
  8189   002D22  262D               	addwf	___flmul@prod^0,f,c
  8190   002D24  5032               	movf	(___flmul@temp+1)^0,w,c
  8191   002D26  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8192   002D28  0E00               	movlw	0
  8193   002D2A  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8194   002D2C  0E00               	movlw	0
  8195   002D2E  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8196   002D30  501F               	movf	(___flmul@a+1)^0,w,c
  8197   002D32  021C               	mulwf	(___flmul@b+2)^0,c
  8198   002D34  CFF3 F031          	movff	prodl,___flmul@temp
  8199   002D38  CFF4 F032          	movff	prodh,___flmul@temp+1
  8200   002D3C  5031               	movf	___flmul@temp^0,w,c
  8201   002D3E  262D               	addwf	___flmul@prod^0,f,c
  8202   002D40  5032               	movf	(___flmul@temp+1)^0,w,c
  8203   002D42  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8204   002D44  0E00               	movlw	0
  8205   002D46  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8206   002D48  0E00               	movlw	0
  8207   002D4A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8208   002D4C  5020               	movf	(___flmul@a+2)^0,w,c
  8209   002D4E  021C               	mulwf	(___flmul@b+2)^0,c
  8210   002D50  CFF3 F031          	movff	prodl,___flmul@temp
  8211   002D54  CFF4 F032          	movff	prodh,___flmul@temp+1
  8212   002D58  5031               	movf	___flmul@temp^0,w,c
  8213   002D5A  6E22               	movwf	??___flmul^0,c
  8214   002D5C  5032               	movf	(___flmul@temp+1)^0,w,c
  8215   002D5E  6E23               	movwf	(??___flmul+1)^0,c
  8216   002D60  6A24               	clrf	(??___flmul+2)^0,c
  8217   002D62  6A25               	clrf	(??___flmul+3)^0,c
  8218   002D64  C024  F025         	movff	??___flmul+2,??___flmul+3
  8219   002D68  C023  F024         	movff	??___flmul+1,??___flmul+2
  8220   002D6C  C022  F023         	movff	??___flmul,??___flmul+1
  8221   002D70  6A22               	clrf	??___flmul^0,c
  8222   002D72  5022               	movf	??___flmul^0,w,c
  8223   002D74  262D               	addwf	___flmul@prod^0,f,c
  8224   002D76  5023               	movf	(??___flmul+1)^0,w,c
  8225   002D78  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8226   002D7A  5024               	movf	(??___flmul+2)^0,w,c
  8227   002D7C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8228   002D7E  5025               	movf	(??___flmul+3)^0,w,c
  8229   002D80  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8230   002D82  C028  F022         	movff	___flmul@grs,??___flmul
  8231   002D86  C029  F023         	movff	___flmul@grs+1,??___flmul+1
  8232   002D8A  C02A  F024         	movff	___flmul@grs+2,??___flmul+2
  8233   002D8E  C02B  F025         	movff	___flmul@grs+3,??___flmul+3
  8234   002D92  0E19               	movlw	25
  8235   002D94  EFD1  F016         	goto	u5270
  8236   002D98                     u5275:
  8237   002D98  90D8               	bcf	status,0,c
  8238   002D9A  3225               	rrcf	(??___flmul+3)^0,f,c
  8239   002D9C  3224               	rrcf	(??___flmul+2)^0,f,c
  8240   002D9E  3223               	rrcf	(??___flmul+1)^0,f,c
  8241   002DA0  3222               	rrcf	??___flmul^0,f,c
  8242   002DA2                     u5270:
  8243   002DA2  2EE8               	decfsz	wreg,f,c
  8244   002DA4  EFCC  F016         	goto	u5275
  8245   002DA8  5022               	movf	??___flmul^0,w,c
  8246   002DAA  262D               	addwf	___flmul@prod^0,f,c
  8247   002DAC  5023               	movf	(??___flmul+1)^0,w,c
  8248   002DAE  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8249   002DB0  5024               	movf	(??___flmul+2)^0,w,c
  8250   002DB2  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8251   002DB4  5025               	movf	(??___flmul+3)^0,w,c
  8252   002DB6  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8253   002DB8  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8254   002DBC  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8255   002DC0  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8256   002DC4  6A28               	clrf	___flmul@grs^0,c
  8257   002DC6  5027               	movf	___flmul@aexp^0,w,c
  8258   002DC8  C02C  F022         	movff	___flmul@bexp,??___flmul
  8259   002DCC  6A23               	clrf	(??___flmul+1)^0,c
  8260   002DCE  2622               	addwf	??___flmul^0,f,c
  8261   002DD0  0E00               	movlw	0
  8262   002DD2  2223               	addwfc	(??___flmul+1)^0,f,c
  8263   002DD4  0E82               	movlw	130
  8264   002DD6  2422               	addwf	??___flmul^0,w,c
  8265   002DD8  6E31               	movwf	___flmul@temp^0,c
  8266   002DDA  0EFF               	movlw	255
  8267   002DDC  2023               	addwfc	(??___flmul+1)^0,w,c
  8268   002DDE  6E32               	movwf	(___flmul@temp+1)^0,c
  8269   002DE0  EF07  F017         	goto	l4479
  8270   002DE4                     l4473:
  8271   002DE4  90D8               	bcf	status,0,c
  8272   002DE6  362D               	rlcf	___flmul@prod^0,f,c
  8273   002DE8  362E               	rlcf	(___flmul@prod+1)^0,f,c
  8274   002DEA  362F               	rlcf	(___flmul@prod+2)^0,f,c
  8275   002DEC  3630               	rlcf	(___flmul@prod+3)^0,f,c
  8276   002DEE  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8277   002DF0  EFFC  F016         	goto	u5281
  8278   002DF4  EFFE  F016         	goto	u5280
  8279   002DF8                     u5281:
  8280   002DF8  EFFF  F016         	goto	l900
  8281   002DFC                     u5280:
  8282   002DFC  802D               	bsf	___flmul@prod^0,0,c
  8283   002DFE                     l900:
  8284   002DFE  90D8               	bcf	status,0,c
  8285   002E00  3628               	rlcf	___flmul@grs^0,f,c
  8286   002E02  3629               	rlcf	(___flmul@grs+1)^0,f,c
  8287   002E04  362A               	rlcf	(___flmul@grs+2)^0,f,c
  8288   002E06  362B               	rlcf	(___flmul@grs+3)^0,f,c
  8289   002E08  0631               	decf	___flmul@temp^0,f,c
  8290   002E0A  A0D8               	btfss	status,0,c
  8291   002E0C  0632               	decf	(___flmul@temp+1)^0,f,c
  8292   002E0E                     l4479:
  8293   002E0E  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  8294   002E10  EF0C  F017         	goto	u5291
  8295   002E14  EF0E  F017         	goto	u5290
  8296   002E18                     u5291:
  8297   002E18  EFF2  F016         	goto	l4473
  8298   002E1C                     u5290:
  8299   002E1C  0E00               	movlw	0
  8300   002E1E  6E27               	movwf	___flmul@aexp^0,c
  8301   002E20  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8302   002E22  EF15  F017         	goto	u5301
  8303   002E26  EF17  F017         	goto	u5300
  8304   002E2A                     u5301:
  8305   002E2A  EF3B  F017         	goto	l902
  8306   002E2E                     u5300:
  8307   002E2E  0EFF               	movlw	255
  8308   002E30  1428               	andwf	___flmul@grs^0,w,c
  8309   002E32  6E22               	movwf	??___flmul^0,c
  8310   002E34  0EFF               	movlw	255
  8311   002E36  1429               	andwf	(___flmul@grs+1)^0,w,c
  8312   002E38  6E23               	movwf	(??___flmul+1)^0,c
  8313   002E3A  0EFF               	movlw	255
  8314   002E3C  142A               	andwf	(___flmul@grs+2)^0,w,c
  8315   002E3E  6E24               	movwf	(??___flmul+2)^0,c
  8316   002E40  0E7F               	movlw	127
  8317   002E42  142B               	andwf	(___flmul@grs+3)^0,w,c
  8318   002E44  6E25               	movwf	(??___flmul+3)^0,c
  8319   002E46  5022               	movf	??___flmul^0,w,c
  8320   002E48  1023               	iorwf	(??___flmul+1)^0,w,c
  8321   002E4A  1024               	iorwf	(??___flmul+2)^0,w,c
  8322   002E4C  1025               	iorwf	(??___flmul+3)^0,w,c
  8323   002E4E  B4D8               	btfsc	status,2,c
  8324   002E50  EF2C  F017         	goto	u5311
  8325   002E54  EF2E  F017         	goto	u5310
  8326   002E58                     u5311:
  8327   002E58  EF32  F017         	goto	l903
  8328   002E5C                     u5310:
  8329   002E5C                     l4487:
  8330   002E5C  0E01               	movlw	1
  8331   002E5E  6E27               	movwf	___flmul@aexp^0,c
  8332   002E60  EF3B  F017         	goto	l902
  8333   002E64                     l903:
  8334   002E64  A02D               	btfss	___flmul@prod^0,0,c
  8335   002E66  EF37  F017         	goto	u5321
  8336   002E6A  EF39  F017         	goto	u5320
  8337   002E6E                     u5321:
  8338   002E6E  EF3B  F017         	goto	l902
  8339   002E72                     u5320:
  8340   002E72  EF2E  F017         	goto	l4487
  8341   002E76                     l902:
  8342   002E76  5027               	movf	___flmul@aexp^0,w,c
  8343   002E78  B4D8               	btfsc	status,2,c
  8344   002E7A  EF41  F017         	goto	u5331
  8345   002E7E  EF43  F017         	goto	u5330
  8346   002E82                     u5331:
  8347   002E82  EF67  F017         	goto	l4499
  8348   002E86                     u5330:
  8349   002E86  0E01               	movlw	1
  8350   002E88  262D               	addwf	___flmul@prod^0,f,c
  8351   002E8A  0E00               	movlw	0
  8352   002E8C  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8353   002E8E  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8354   002E90  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8355   002E92  A030               	btfss	(___flmul@prod+3)^0,0,c
  8356   002E94  EF4E  F017         	goto	u5341
  8357   002E98  EF50  F017         	goto	u5340
  8358   002E9C                     u5341:
  8359   002E9C  EF67  F017         	goto	l4499
  8360   002EA0                     u5340:
  8361   002EA0  C02D  F022         	movff	___flmul@prod,??___flmul
  8362   002EA4  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  8363   002EA8  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  8364   002EAC  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  8365   002EB0  3425               	rlcf	(??___flmul+3)^0,w,c
  8366   002EB2  3225               	rrcf	(??___flmul+3)^0,f,c
  8367   002EB4  3224               	rrcf	(??___flmul+2)^0,f,c
  8368   002EB6  3223               	rrcf	(??___flmul+1)^0,f,c
  8369   002EB8  3222               	rrcf	??___flmul^0,f,c
  8370   002EBA  C022  F02D         	movff	??___flmul,___flmul@prod
  8371   002EBE  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  8372   002EC2  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  8373   002EC6  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  8374   002ECA  4A31               	infsnz	___flmul@temp^0,f,c
  8375   002ECC  2A32               	incf	(___flmul@temp+1)^0,f,c
  8376   002ECE                     l4499:
  8377   002ECE  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  8378   002ED0  EF72  F017         	goto	u5351
  8379   002ED4  5032               	movf	(___flmul@temp+1)^0,w,c
  8380   002ED6  E108               	bnz	u5350
  8381   002ED8  2831               	incf	___flmul@temp^0,w,c
  8382   002EDA  A0D8               	btfss	status,0,c
  8383   002EDC  EF72  F017         	goto	u5351
  8384   002EE0  EF74  F017         	goto	u5350
  8385   002EE4                     u5351:
  8386   002EE4  EF7E  F017         	goto	l4503
  8387   002EE8                     u5350:
  8388   002EE8  0E00               	movlw	0
  8389   002EEA  6E2D               	movwf	___flmul@prod^0,c
  8390   002EEC  0E00               	movlw	0
  8391   002EEE  6E2E               	movwf	(___flmul@prod+1)^0,c
  8392   002EF0  0E80               	movlw	128
  8393   002EF2  6E2F               	movwf	(___flmul@prod+2)^0,c
  8394   002EF4  0E7F               	movlw	127
  8395   002EF6  6E30               	movwf	(___flmul@prod+3)^0,c
  8396   002EF8  EFAC  F017         	goto	l4515
  8397   002EFC                     l4503:
  8398   002EFC  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  8399   002EFE  EF8B  F017         	goto	u5360
  8400   002F02  5032               	movf	(___flmul@temp+1)^0,w,c
  8401   002F04  E106               	bnz	u5361
  8402   002F06  0431               	decf	___flmul@temp^0,w,c
  8403   002F08  B0D8               	btfsc	status,0,c
  8404   002F0A  EF89  F017         	goto	u5361
  8405   002F0E  EF8B  F017         	goto	u5360
  8406   002F12                     u5361:
  8407   002F12  EF97  F017         	goto	l910
  8408   002F16                     u5360:
  8409   002F16  0E00               	movlw	0
  8410   002F18  6E2D               	movwf	___flmul@prod^0,c
  8411   002F1A  0E00               	movlw	0
  8412   002F1C  6E2E               	movwf	(___flmul@prod+1)^0,c
  8413   002F1E  0E00               	movlw	0
  8414   002F20  6E2F               	movwf	(___flmul@prod+2)^0,c
  8415   002F22  0E00               	movlw	0
  8416   002F24  6E30               	movwf	(___flmul@prod+3)^0,c
  8417   002F26  0E00               	movlw	0
  8418   002F28  6E26               	movwf	___flmul@sign^0,c
  8419   002F2A  EFAC  F017         	goto	l4515
  8420   002F2E                     l910:
  8421   002F2E  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  8422   002F32  0EFF               	movlw	255
  8423   002F34  162D               	andwf	___flmul@prod^0,f,c
  8424   002F36  0EFF               	movlw	255
  8425   002F38  162E               	andwf	(___flmul@prod+1)^0,f,c
  8426   002F3A  0E7F               	movlw	127
  8427   002F3C  162F               	andwf	(___flmul@prod+2)^0,f,c
  8428   002F3E  0E00               	movlw	0
  8429   002F40  1630               	andwf	(___flmul@prod+3)^0,f,c
  8430   002F42  A02C               	btfss	___flmul@bexp^0,0,c
  8431   002F44  EFA6  F017         	goto	u5371
  8432   002F48  EFA8  F017         	goto	u5370
  8433   002F4C                     u5371:
  8434   002F4C  EFA9  F017         	goto	l4513
  8435   002F50                     u5370:
  8436   002F50  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  8437   002F52                     l4513:
  8438   002F52  90D8               	bcf	status,0,c
  8439   002F54  302C               	rrcf	___flmul@bexp^0,w,c
  8440   002F56  6E30               	movwf	(___flmul@prod+3)^0,c
  8441   002F58                     l4515:
  8442   002F58  5026               	movf	___flmul@sign^0,w,c
  8443   002F5A  1230               	iorwf	(___flmul@prod+3)^0,f,c
  8444   002F5C  C02D  F01A         	movff	___flmul@prod,?___flmul
  8445   002F60  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  8446   002F64  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  8447   002F68  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  8448   002F6C                     l897:
  8449   002F6C  0012               	return		;funcret
  8450   002F6E                     __end_of___flmul:
  8451                           	callstack 0
  8452                           
  8453 ;; *************** function ___fleq *****************
  8454 ;; Defined at:
  8455 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  ff1             4    0[COMRAM] unsigned char 
  8458 ;;  ff2             4    4[COMRAM] unsigned char 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;		None               void
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8470 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8473 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8474 ;;Total ram usage:       12 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_custom_floatmodulo
  8480 ;;		_RGB_to_HSV
  8481 ;;		_color_cardCheck
  8482 ;;		_efgtoa
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text40
  8487   003E7A                     __ptext40:
  8488                           	callstack 0
  8489   003E7A                     ___fleq:
  8490                           	callstack 25
  8491   003E7A  0E00               	movlw	0
  8492   003E7C  1401               	andwf	___fleq@ff1^0,w,c
  8493   003E7E  6E09               	movwf	??___fleq^0,c
  8494   003E80  0E00               	movlw	0
  8495   003E82  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8496   003E84  6E0A               	movwf	(??___fleq+1)^0,c
  8497   003E86  0E80               	movlw	128
  8498   003E88  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8499   003E8A  6E0B               	movwf	(??___fleq+2)^0,c
  8500   003E8C  0E7F               	movlw	127
  8501   003E8E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8502   003E90  6E0C               	movwf	(??___fleq+3)^0,c
  8503   003E92  5009               	movf	??___fleq^0,w,c
  8504   003E94  100A               	iorwf	(??___fleq+1)^0,w,c
  8505   003E96  100B               	iorwf	(??___fleq+2)^0,w,c
  8506   003E98  100C               	iorwf	(??___fleq+3)^0,w,c
  8507   003E9A  A4D8               	btfss	status,2,c
  8508   003E9C  EF52  F01F         	goto	u5381
  8509   003EA0  EF54  F01F         	goto	u5380
  8510   003EA4                     u5381:
  8511   003EA4  EF5C  F01F         	goto	l4531
  8512   003EA8                     u5380:
  8513   003EA8  0E00               	movlw	0
  8514   003EAA  6E01               	movwf	___fleq@ff1^0,c
  8515   003EAC  0E00               	movlw	0
  8516   003EAE  6E02               	movwf	(___fleq@ff1+1)^0,c
  8517   003EB0  0E00               	movlw	0
  8518   003EB2  6E03               	movwf	(___fleq@ff1+2)^0,c
  8519   003EB4  0E00               	movlw	0
  8520   003EB6  6E04               	movwf	(___fleq@ff1+3)^0,c
  8521   003EB8                     l4531:
  8522   003EB8  0E00               	movlw	0
  8523   003EBA  1405               	andwf	___fleq@ff2^0,w,c
  8524   003EBC  6E09               	movwf	??___fleq^0,c
  8525   003EBE  0E00               	movlw	0
  8526   003EC0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8527   003EC2  6E0A               	movwf	(??___fleq+1)^0,c
  8528   003EC4  0E80               	movlw	128
  8529   003EC6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8530   003EC8  6E0B               	movwf	(??___fleq+2)^0,c
  8531   003ECA  0E7F               	movlw	127
  8532   003ECC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8533   003ECE  6E0C               	movwf	(??___fleq+3)^0,c
  8534   003ED0  5009               	movf	??___fleq^0,w,c
  8535   003ED2  100A               	iorwf	(??___fleq+1)^0,w,c
  8536   003ED4  100B               	iorwf	(??___fleq+2)^0,w,c
  8537   003ED6  100C               	iorwf	(??___fleq+3)^0,w,c
  8538   003ED8  A4D8               	btfss	status,2,c
  8539   003EDA  EF71  F01F         	goto	u5391
  8540   003EDE  EF73  F01F         	goto	u5390
  8541   003EE2                     u5391:
  8542   003EE2  EF7B  F01F         	goto	l4535
  8543   003EE6                     u5390:
  8544   003EE6  0E00               	movlw	0
  8545   003EE8  6E05               	movwf	___fleq@ff2^0,c
  8546   003EEA  0E00               	movlw	0
  8547   003EEC  6E06               	movwf	(___fleq@ff2+1)^0,c
  8548   003EEE  0E00               	movlw	0
  8549   003EF0  6E07               	movwf	(___fleq@ff2+2)^0,c
  8550   003EF2  0E00               	movlw	0
  8551   003EF4  6E08               	movwf	(___fleq@ff2+3)^0,c
  8552   003EF6                     l4535:
  8553   003EF6  5005               	movf	___fleq@ff2^0,w,c
  8554   003EF8  1801               	xorwf	___fleq@ff1^0,w,c
  8555   003EFA  E10F               	bnz	u5400
  8556   003EFC  5006               	movf	(___fleq@ff2+1)^0,w,c
  8557   003EFE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8558   003F00  E10C               	bnz	u5400
  8559   003F02  5007               	movf	(___fleq@ff2+2)^0,w,c
  8560   003F04  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8561   003F06  E109               	bnz	u5400
  8562   003F08  5008               	movf	(___fleq@ff2+3)^0,w,c
  8563   003F0A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8564   003F0C  B4D8               	btfsc	status,2,c
  8565   003F0E  EF8B  F01F         	goto	u5401
  8566   003F12  EF8D  F01F         	goto	u5400
  8567   003F16                     u5401:
  8568   003F16  EF90  F01F         	goto	l4539
  8569   003F1A                     u5400:
  8570   003F1A  90D8               	bcf	status,0,c
  8571   003F1C  EF91  F01F         	goto	l538
  8572   003F20                     l4539:
  8573   003F20  80D8               	bsf	status,0,c
  8574   003F22                     l538:
  8575   003F22  0012               	return		;funcret
  8576   003F24                     __end_of___fleq:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function ___fldiv *****************
  8580 ;; Defined at:
  8581 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  b               4   58[COMRAM] unsigned char 
  8584 ;;  a               4   62[COMRAM] unsigned char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  grs             4   77[COMRAM] unsigned long 
  8587 ;;  rem             4   70[COMRAM] unsigned long 
  8588 ;;  new_exp         2   75[COMRAM] short 
  8589 ;;  aexp            1   82[COMRAM] unsigned char 
  8590 ;;  bexp            1   81[COMRAM] unsigned char 
  8591 ;;  sign            1   74[COMRAM] unsigned char 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  4   58[COMRAM] unsigned char 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8601 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8605 ;;Total ram usage:       25 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_custom_floatmodulo
  8611 ;;		_RGB_to_HSV
  8612 ;;		_efgtoa
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text41
  8617   002F6E                     __ptext41:
  8618                           	callstack 0
  8619   002F6E                     ___fldiv:
  8620                           	callstack 25
  8621   002F6E  503E               	movf	(___fldiv@b+3)^0,w,c
  8622   002F70  0B80               	andlw	128
  8623   002F72  6E4B               	movwf	___fldiv@sign^0,c
  8624   002F74  503E               	movf	(___fldiv@b+3)^0,w,c
  8625   002F76  243E               	addwf	(___fldiv@b+3)^0,w,c
  8626   002F78  6E52               	movwf	___fldiv@bexp^0,c
  8627   002F7A  AE3D               	btfss	(___fldiv@b+2)^0,7,c
  8628   002F7C  EFC2  F017         	goto	u4961
  8629   002F80  EFC4  F017         	goto	u4960
  8630   002F84                     u4961:
  8631   002F84  EFC5  F017         	goto	l4259
  8632   002F88                     u4960:
  8633   002F88  8052               	bsf	___fldiv@bexp^0,0,c
  8634   002F8A                     l4259:
  8635   002F8A  5052               	movf	___fldiv@bexp^0,w,c
  8636   002F8C  B4D8               	btfsc	status,2,c
  8637   002F8E  EFCB  F017         	goto	u4971
  8638   002F92  EFCD  F017         	goto	u4970
  8639   002F96                     u4971:
  8640   002F96  EFE2  F017         	goto	l4269
  8641   002F9A                     u4970:
  8642   002F9A  2852               	incf	___fldiv@bexp^0,w,c
  8643   002F9C  A4D8               	btfss	status,2,c
  8644   002F9E  EFD3  F017         	goto	u4981
  8645   002FA2  EFD5  F017         	goto	u4980
  8646   002FA6                     u4981:
  8647   002FA6  EFDD  F017         	goto	l4265
  8648   002FAA                     u4980:
  8649   002FAA  0E00               	movlw	0
  8650   002FAC  6E3B               	movwf	___fldiv@b^0,c
  8651   002FAE  0E00               	movlw	0
  8652   002FB0  6E3C               	movwf	(___fldiv@b+1)^0,c
  8653   002FB2  0E00               	movlw	0
  8654   002FB4  6E3D               	movwf	(___fldiv@b+2)^0,c
  8655   002FB6  0E00               	movlw	0
  8656   002FB8  6E3E               	movwf	(___fldiv@b+3)^0,c
  8657   002FBA                     l4265:
  8658   002FBA  8E3D               	bsf	(___fldiv@b+2)^0,7,c
  8659   002FBC  0E00               	movlw	0
  8660   002FBE  6E3E               	movwf	(___fldiv@b+3)^0,c
  8661   002FC0  EFEA  F017         	goto	l4271
  8662   002FC4                     l4269:
  8663   002FC4  0E00               	movlw	0
  8664   002FC6  6E3B               	movwf	___fldiv@b^0,c
  8665   002FC8  0E00               	movlw	0
  8666   002FCA  6E3C               	movwf	(___fldiv@b+1)^0,c
  8667   002FCC  0E00               	movlw	0
  8668   002FCE  6E3D               	movwf	(___fldiv@b+2)^0,c
  8669   002FD0  0E00               	movlw	0
  8670   002FD2  6E3E               	movwf	(___fldiv@b+3)^0,c
  8671   002FD4                     l4271:
  8672   002FD4  5042               	movf	(___fldiv@a+3)^0,w,c
  8673   002FD6  0B80               	andlw	128
  8674   002FD8  1A4B               	xorwf	___fldiv@sign^0,f,c
  8675   002FDA  5042               	movf	(___fldiv@a+3)^0,w,c
  8676   002FDC  2442               	addwf	(___fldiv@a+3)^0,w,c
  8677   002FDE  6E53               	movwf	___fldiv@aexp^0,c
  8678   002FE0  AE41               	btfss	(___fldiv@a+2)^0,7,c
  8679   002FE2  EFF5  F017         	goto	u4991
  8680   002FE6  EFF7  F017         	goto	u4990
  8681   002FEA                     u4991:
  8682   002FEA  EFF8  F017         	goto	l4279
  8683   002FEE                     u4990:
  8684   002FEE  8053               	bsf	___fldiv@aexp^0,0,c
  8685   002FF0                     l4279:
  8686   002FF0  5053               	movf	___fldiv@aexp^0,w,c
  8687   002FF2  B4D8               	btfsc	status,2,c
  8688   002FF4  EFFE  F017         	goto	u5001
  8689   002FF8  EF00  F018         	goto	u5000
  8690   002FFC                     u5001:
  8691   002FFC  EF15  F018         	goto	l4289
  8692   003000                     u5000:
  8693   003000  2853               	incf	___fldiv@aexp^0,w,c
  8694   003002  A4D8               	btfss	status,2,c
  8695   003004  EF06  F018         	goto	u5011
  8696   003008  EF08  F018         	goto	u5010
  8697   00300C                     u5011:
  8698   00300C  EF10  F018         	goto	l4285
  8699   003010                     u5010:
  8700   003010  0E00               	movlw	0
  8701   003012  6E3F               	movwf	___fldiv@a^0,c
  8702   003014  0E00               	movlw	0
  8703   003016  6E40               	movwf	(___fldiv@a+1)^0,c
  8704   003018  0E00               	movlw	0
  8705   00301A  6E41               	movwf	(___fldiv@a+2)^0,c
  8706   00301C  0E00               	movlw	0
  8707   00301E  6E42               	movwf	(___fldiv@a+3)^0,c
  8708   003020                     l4285:
  8709   003020  8E41               	bsf	(___fldiv@a+2)^0,7,c
  8710   003022  0E00               	movlw	0
  8711   003024  6E42               	movwf	(___fldiv@a+3)^0,c
  8712   003026  EF1D  F018         	goto	l4291
  8713   00302A                     l4289:
  8714   00302A  0E00               	movlw	0
  8715   00302C  6E3F               	movwf	___fldiv@a^0,c
  8716   00302E  0E00               	movlw	0
  8717   003030  6E40               	movwf	(___fldiv@a+1)^0,c
  8718   003032  0E00               	movlw	0
  8719   003034  6E41               	movwf	(___fldiv@a+2)^0,c
  8720   003036  0E00               	movlw	0
  8721   003038  6E42               	movwf	(___fldiv@a+3)^0,c
  8722   00303A                     l4291:
  8723   00303A  503F               	movf	___fldiv@a^0,w,c
  8724   00303C  1040               	iorwf	(___fldiv@a+1)^0,w,c
  8725   00303E  1041               	iorwf	(___fldiv@a+2)^0,w,c
  8726   003040  1042               	iorwf	(___fldiv@a+3)^0,w,c
  8727   003042  A4D8               	btfss	status,2,c
  8728   003044  EF26  F018         	goto	u5021
  8729   003048  EF28  F018         	goto	u5020
  8730   00304C                     u5021:
  8731   00304C  EF40  F018         	goto	l4303
  8732   003050                     u5020:
  8733   003050  0E00               	movlw	0
  8734   003052  6E3B               	movwf	___fldiv@b^0,c
  8735   003054  0E00               	movlw	0
  8736   003056  6E3C               	movwf	(___fldiv@b+1)^0,c
  8737   003058  0E00               	movlw	0
  8738   00305A  6E3D               	movwf	(___fldiv@b+2)^0,c
  8739   00305C  0E00               	movlw	0
  8740   00305E  6E3E               	movwf	(___fldiv@b+3)^0,c
  8741   003060  0E80               	movlw	128
  8742   003062  123D               	iorwf	(___fldiv@b+2)^0,f,c
  8743   003064  0E7F               	movlw	127
  8744   003066  123E               	iorwf	(___fldiv@b+3)^0,f,c
  8745   003068                     l4297:
  8746   003068  504B               	movf	___fldiv@sign^0,w,c
  8747   00306A  123E               	iorwf	(___fldiv@b+3)^0,f,c
  8748   00306C  C03B  F03B         	movff	___fldiv@b,?___fldiv
  8749   003070  C03C  F03C         	movff	___fldiv@b+1,?___fldiv+1
  8750   003074  C03D  F03D         	movff	___fldiv@b+2,?___fldiv+2
  8751   003078  C03E  F03E         	movff	___fldiv@b+3,?___fldiv+3
  8752   00307C  EF83  F019         	goto	l861
  8753   003080                     l4303:
  8754   003080  5052               	movf	___fldiv@bexp^0,w,c
  8755   003082  A4D8               	btfss	status,2,c
  8756   003084  EF46  F018         	goto	u5031
  8757   003088  EF48  F018         	goto	u5030
  8758   00308C                     u5031:
  8759   00308C  EF52  F018         	goto	l4311
  8760   003090                     u5030:
  8761   003090  0E00               	movlw	0
  8762   003092  6E3B               	movwf	?___fldiv^0,c
  8763   003094  0E00               	movlw	0
  8764   003096  6E3C               	movwf	(?___fldiv+1)^0,c
  8765   003098  0E00               	movlw	0
  8766   00309A  6E3D               	movwf	(?___fldiv+2)^0,c
  8767   00309C  0E00               	movlw	0
  8768   00309E  6E3E               	movwf	(?___fldiv+3)^0,c
  8769   0030A0  EF83  F019         	goto	l861
  8770   0030A4                     l4311:
  8771   0030A4  5053               	movf	___fldiv@aexp^0,w,c
  8772   0030A6  C052  F043         	movff	___fldiv@bexp,??___fldiv
  8773   0030AA  6A44               	clrf	(??___fldiv+1)^0,c
  8774   0030AC  5E43               	subwf	??___fldiv^0,f,c
  8775   0030AE  0E00               	movlw	0
  8776   0030B0  5A44               	subwfb	(??___fldiv+1)^0,f,c
  8777   0030B2  0E7F               	movlw	127
  8778   0030B4  2443               	addwf	??___fldiv^0,w,c
  8779   0030B6  6E4C               	movwf	___fldiv@new_exp^0,c
  8780   0030B8  0E00               	movlw	0
  8781   0030BA  2044               	addwfc	(??___fldiv+1)^0,w,c
  8782   0030BC  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
  8783   0030BE  C03B  F047         	movff	___fldiv@b,___fldiv@rem
  8784   0030C2  C03C  F048         	movff	___fldiv@b+1,___fldiv@rem+1
  8785   0030C6  C03D  F049         	movff	___fldiv@b+2,___fldiv@rem+2
  8786   0030CA  C03E  F04A         	movff	___fldiv@b+3,___fldiv@rem+3
  8787   0030CE  0E00               	movlw	0
  8788   0030D0  6E3B               	movwf	___fldiv@b^0,c
  8789   0030D2  0E00               	movlw	0
  8790   0030D4  6E3C               	movwf	(___fldiv@b+1)^0,c
  8791   0030D6  0E00               	movlw	0
  8792   0030D8  6E3D               	movwf	(___fldiv@b+2)^0,c
  8793   0030DA  0E00               	movlw	0
  8794   0030DC  6E3E               	movwf	(___fldiv@b+3)^0,c
  8795   0030DE  0E00               	movlw	0
  8796   0030E0  6E4E               	movwf	___fldiv@grs^0,c
  8797   0030E2  0E00               	movlw	0
  8798   0030E4  6E4F               	movwf	(___fldiv@grs+1)^0,c
  8799   0030E6  0E00               	movlw	0
  8800   0030E8  6E50               	movwf	(___fldiv@grs+2)^0,c
  8801   0030EA  0E00               	movlw	0
  8802   0030EC  6E51               	movwf	(___fldiv@grs+3)^0,c
  8803   0030EE  0E00               	movlw	0
  8804   0030F0  6E53               	movwf	___fldiv@aexp^0,c
  8805   0030F2  EFB3  F018         	goto	l863
  8806   0030F6                     l4321:
  8807   0030F6  5053               	movf	___fldiv@aexp^0,w,c
  8808   0030F8  B4D8               	btfsc	status,2,c
  8809   0030FA  EF81  F018         	goto	u5041
  8810   0030FE  EF83  F018         	goto	u5040
  8811   003102                     u5041:
  8812   003102  EF9A  F018         	goto	l4329
  8813   003106                     u5040:
  8814   003106  90D8               	bcf	status,0,c
  8815   003108  3647               	rlcf	___fldiv@rem^0,f,c
  8816   00310A  3648               	rlcf	(___fldiv@rem+1)^0,f,c
  8817   00310C  3649               	rlcf	(___fldiv@rem+2)^0,f,c
  8818   00310E  364A               	rlcf	(___fldiv@rem+3)^0,f,c
  8819   003110  90D8               	bcf	status,0,c
  8820   003112  363B               	rlcf	___fldiv@b^0,f,c
  8821   003114  363C               	rlcf	(___fldiv@b+1)^0,f,c
  8822   003116  363D               	rlcf	(___fldiv@b+2)^0,f,c
  8823   003118  363E               	rlcf	(___fldiv@b+3)^0,f,c
  8824   00311A  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  8825   00311C  EF92  F018         	goto	u5051
  8826   003120  EF94  F018         	goto	u5050
  8827   003124                     u5051:
  8828   003124  EF95  F018         	goto	l866
  8829   003128                     u5050:
  8830   003128  803B               	bsf	___fldiv@b^0,0,c
  8831   00312A                     l866:
  8832   00312A  90D8               	bcf	status,0,c
  8833   00312C  364E               	rlcf	___fldiv@grs^0,f,c
  8834   00312E  364F               	rlcf	(___fldiv@grs+1)^0,f,c
  8835   003130  3650               	rlcf	(___fldiv@grs+2)^0,f,c
  8836   003132  3651               	rlcf	(___fldiv@grs+3)^0,f,c
  8837   003134                     l4329:
  8838   003134  503F               	movf	___fldiv@a^0,w,c
  8839   003136  5C47               	subwf	___fldiv@rem^0,w,c
  8840   003138  5040               	movf	(___fldiv@a+1)^0,w,c
  8841   00313A  5848               	subwfb	(___fldiv@rem+1)^0,w,c
  8842   00313C  5041               	movf	(___fldiv@a+2)^0,w,c
  8843   00313E  5849               	subwfb	(___fldiv@rem+2)^0,w,c
  8844   003140  5042               	movf	(___fldiv@a+3)^0,w,c
  8845   003142  584A               	subwfb	(___fldiv@rem+3)^0,w,c
  8846   003144  A0D8               	btfss	status,0,c
  8847   003146  EFA7  F018         	goto	u5061
  8848   00314A  EFA9  F018         	goto	u5060
  8849   00314E                     u5061:
  8850   00314E  EFB2  F018         	goto	l4335
  8851   003152                     u5060:
  8852   003152  8C51               	bsf	(___fldiv@grs+3)^0,6,c
  8853   003154  503F               	movf	___fldiv@a^0,w,c
  8854   003156  5E47               	subwf	___fldiv@rem^0,f,c
  8855   003158  5040               	movf	(___fldiv@a+1)^0,w,c
  8856   00315A  5A48               	subwfb	(___fldiv@rem+1)^0,f,c
  8857   00315C  5041               	movf	(___fldiv@a+2)^0,w,c
  8858   00315E  5A49               	subwfb	(___fldiv@rem+2)^0,f,c
  8859   003160  5042               	movf	(___fldiv@a+3)^0,w,c
  8860   003162  5A4A               	subwfb	(___fldiv@rem+3)^0,f,c
  8861   003164                     l4335:
  8862   003164  2A53               	incf	___fldiv@aexp^0,f,c
  8863   003166                     l863:
  8864   003166  0E19               	movlw	25
  8865   003168  6453               	cpfsgt	___fldiv@aexp^0,c
  8866   00316A  EFB9  F018         	goto	u5071
  8867   00316E  EFBB  F018         	goto	u5070
  8868   003172                     u5071:
  8869   003172  EF7B  F018         	goto	l4321
  8870   003176                     u5070:
  8871   003176  5047               	movf	___fldiv@rem^0,w,c
  8872   003178  1048               	iorwf	(___fldiv@rem+1)^0,w,c
  8873   00317A  1049               	iorwf	(___fldiv@rem+2)^0,w,c
  8874   00317C  104A               	iorwf	(___fldiv@rem+3)^0,w,c
  8875   00317E  B4D8               	btfsc	status,2,c
  8876   003180  EFC4  F018         	goto	u5081
  8877   003184  EFC6  F018         	goto	u5080
  8878   003188                     u5081:
  8879   003188  EFDE  F018         	goto	l4347
  8880   00318C                     u5080:
  8881   00318C  804E               	bsf	___fldiv@grs^0,0,c
  8882   00318E  EFDE  F018         	goto	l4347
  8883   003192                     l4341:
  8884   003192  90D8               	bcf	status,0,c
  8885   003194  363B               	rlcf	___fldiv@b^0,f,c
  8886   003196  363C               	rlcf	(___fldiv@b+1)^0,f,c
  8887   003198  363D               	rlcf	(___fldiv@b+2)^0,f,c
  8888   00319A  363E               	rlcf	(___fldiv@b+3)^0,f,c
  8889   00319C  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  8890   00319E  EFD3  F018         	goto	u5091
  8891   0031A2  EFD5  F018         	goto	u5090
  8892   0031A6                     u5091:
  8893   0031A6  EFD6  F018         	goto	l872
  8894   0031AA                     u5090:
  8895   0031AA  803B               	bsf	___fldiv@b^0,0,c
  8896   0031AC                     l872:
  8897   0031AC  90D8               	bcf	status,0,c
  8898   0031AE  364E               	rlcf	___fldiv@grs^0,f,c
  8899   0031B0  364F               	rlcf	(___fldiv@grs+1)^0,f,c
  8900   0031B2  3650               	rlcf	(___fldiv@grs+2)^0,f,c
  8901   0031B4  3651               	rlcf	(___fldiv@grs+3)^0,f,c
  8902   0031B6  064C               	decf	___fldiv@new_exp^0,f,c
  8903   0031B8  A0D8               	btfss	status,0,c
  8904   0031BA  064D               	decf	(___fldiv@new_exp+1)^0,f,c
  8905   0031BC                     l4347:
  8906   0031BC  AE3D               	btfss	(___fldiv@b+2)^0,7,c
  8907   0031BE  EFE3  F018         	goto	u5101
  8908   0031C2  EFE5  F018         	goto	u5100
  8909   0031C6                     u5101:
  8910   0031C6  EFC9  F018         	goto	l4341
  8911   0031CA                     u5100:
  8912   0031CA  0E00               	movlw	0
  8913   0031CC  6E53               	movwf	___fldiv@aexp^0,c
  8914   0031CE  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  8915   0031D0  EFEC  F018         	goto	u5111
  8916   0031D4  EFEE  F018         	goto	u5110
  8917   0031D8                     u5111:
  8918   0031D8  EF12  F019         	goto	l874
  8919   0031DC                     u5110:
  8920   0031DC  0EFF               	movlw	255
  8921   0031DE  144E               	andwf	___fldiv@grs^0,w,c
  8922   0031E0  6E43               	movwf	??___fldiv^0,c
  8923   0031E2  0EFF               	movlw	255
  8924   0031E4  144F               	andwf	(___fldiv@grs+1)^0,w,c
  8925   0031E6  6E44               	movwf	(??___fldiv+1)^0,c
  8926   0031E8  0EFF               	movlw	255
  8927   0031EA  1450               	andwf	(___fldiv@grs+2)^0,w,c
  8928   0031EC  6E45               	movwf	(??___fldiv+2)^0,c
  8929   0031EE  0E7F               	movlw	127
  8930   0031F0  1451               	andwf	(___fldiv@grs+3)^0,w,c
  8931   0031F2  6E46               	movwf	(??___fldiv+3)^0,c
  8932   0031F4  5043               	movf	??___fldiv^0,w,c
  8933   0031F6  1044               	iorwf	(??___fldiv+1)^0,w,c
  8934   0031F8  1045               	iorwf	(??___fldiv+2)^0,w,c
  8935   0031FA  1046               	iorwf	(??___fldiv+3)^0,w,c
  8936   0031FC  B4D8               	btfsc	status,2,c
  8937   0031FE  EF03  F019         	goto	u5121
  8938   003202  EF05  F019         	goto	u5120
  8939   003206                     u5121:
  8940   003206  EF09  F019         	goto	l875
  8941   00320A                     u5120:
  8942   00320A                     l4355:
  8943   00320A  0E01               	movlw	1
  8944   00320C  6E53               	movwf	___fldiv@aexp^0,c
  8945   00320E  EF12  F019         	goto	l874
  8946   003212                     l875:
  8947   003212  A03B               	btfss	___fldiv@b^0,0,c
  8948   003214  EF0E  F019         	goto	u5131
  8949   003218  EF10  F019         	goto	u5130
  8950   00321C                     u5131:
  8951   00321C  EF12  F019         	goto	l874
  8952   003220                     u5130:
  8953   003220  EF05  F019         	goto	l4355
  8954   003224                     l874:
  8955   003224  5053               	movf	___fldiv@aexp^0,w,c
  8956   003226  B4D8               	btfsc	status,2,c
  8957   003228  EF18  F019         	goto	u5141
  8958   00322C  EF1A  F019         	goto	u5140
  8959   003230                     u5141:
  8960   003230  EF3E  F019         	goto	l4367
  8961   003234                     u5140:
  8962   003234  0E01               	movlw	1
  8963   003236  263B               	addwf	___fldiv@b^0,f,c
  8964   003238  0E00               	movlw	0
  8965   00323A  223C               	addwfc	(___fldiv@b+1)^0,f,c
  8966   00323C  223D               	addwfc	(___fldiv@b+2)^0,f,c
  8967   00323E  223E               	addwfc	(___fldiv@b+3)^0,f,c
  8968   003240  A03E               	btfss	(___fldiv@b+3)^0,0,c
  8969   003242  EF25  F019         	goto	u5151
  8970   003246  EF27  F019         	goto	u5150
  8971   00324A                     u5151:
  8972   00324A  EF3E  F019         	goto	l4367
  8973   00324E                     u5150:
  8974   00324E  C03B  F043         	movff	___fldiv@b,??___fldiv
  8975   003252  C03C  F044         	movff	___fldiv@b+1,??___fldiv+1
  8976   003256  C03D  F045         	movff	___fldiv@b+2,??___fldiv+2
  8977   00325A  C03E  F046         	movff	___fldiv@b+3,??___fldiv+3
  8978   00325E  3446               	rlcf	(??___fldiv+3)^0,w,c
  8979   003260  3246               	rrcf	(??___fldiv+3)^0,f,c
  8980   003262  3245               	rrcf	(??___fldiv+2)^0,f,c
  8981   003264  3244               	rrcf	(??___fldiv+1)^0,f,c
  8982   003266  3243               	rrcf	??___fldiv^0,f,c
  8983   003268  C043  F03B         	movff	??___fldiv,___fldiv@b
  8984   00326C  C044  F03C         	movff	??___fldiv+1,___fldiv@b+1
  8985   003270  C045  F03D         	movff	??___fldiv+2,___fldiv@b+2
  8986   003274  C046  F03E         	movff	??___fldiv+3,___fldiv@b+3
  8987   003278  4A4C               	infsnz	___fldiv@new_exp^0,f,c
  8988   00327A  2A4D               	incf	(___fldiv@new_exp+1)^0,f,c
  8989   00327C                     l4367:
  8990   00327C  BE4D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8991   00327E  EF49  F019         	goto	u5161
  8992   003282  504D               	movf	(___fldiv@new_exp+1)^0,w,c
  8993   003284  E108               	bnz	u5160
  8994   003286  284C               	incf	___fldiv@new_exp^0,w,c
  8995   003288  A0D8               	btfss	status,0,c
  8996   00328A  EF49  F019         	goto	u5161
  8997   00328E  EF4B  F019         	goto	u5160
  8998   003292                     u5161:
  8999   003292  EF56  F019         	goto	l4371
  9000   003296                     u5160:
  9001   003296  0E00               	movlw	0
  9002   003298  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
  9003   00329A  684C               	setf	___fldiv@new_exp^0,c
  9004   00329C  0E00               	movlw	0
  9005   00329E  6E3B               	movwf	___fldiv@b^0,c
  9006   0032A0  0E00               	movlw	0
  9007   0032A2  6E3C               	movwf	(___fldiv@b+1)^0,c
  9008   0032A4  0E00               	movlw	0
  9009   0032A6  6E3D               	movwf	(___fldiv@b+2)^0,c
  9010   0032A8  0E00               	movlw	0
  9011   0032AA  6E3E               	movwf	(___fldiv@b+3)^0,c
  9012   0032AC                     l4371:
  9013   0032AC  BE4D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9014   0032AE  EF63  F019         	goto	u5170
  9015   0032B2  504D               	movf	(___fldiv@new_exp+1)^0,w,c
  9016   0032B4  E106               	bnz	u5171
  9017   0032B6  044C               	decf	___fldiv@new_exp^0,w,c
  9018   0032B8  B0D8               	btfsc	status,0,c
  9019   0032BA  EF61  F019         	goto	u5171
  9020   0032BE  EF63  F019         	goto	u5170
  9021   0032C2                     u5171:
  9022   0032C2  EF71  F019         	goto	l4375
  9023   0032C6                     u5170:
  9024   0032C6  0E00               	movlw	0
  9025   0032C8  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
  9026   0032CA  0E00               	movlw	0
  9027   0032CC  6E4C               	movwf	___fldiv@new_exp^0,c
  9028   0032CE  0E00               	movlw	0
  9029   0032D0  6E3B               	movwf	___fldiv@b^0,c
  9030   0032D2  0E00               	movlw	0
  9031   0032D4  6E3C               	movwf	(___fldiv@b+1)^0,c
  9032   0032D6  0E00               	movlw	0
  9033   0032D8  6E3D               	movwf	(___fldiv@b+2)^0,c
  9034   0032DA  0E00               	movlw	0
  9035   0032DC  6E3E               	movwf	(___fldiv@b+3)^0,c
  9036   0032DE  0E00               	movlw	0
  9037   0032E0  6E4B               	movwf	___fldiv@sign^0,c
  9038   0032E2                     l4375:
  9039   0032E2  C04C  F052         	movff	___fldiv@new_exp,___fldiv@bexp
  9040   0032E6  A052               	btfss	___fldiv@bexp^0,0,c
  9041   0032E8  EF78  F019         	goto	u5181
  9042   0032EC  EF7A  F019         	goto	u5180
  9043   0032F0                     u5181:
  9044   0032F0  EF7D  F019         	goto	l4381
  9045   0032F4                     u5180:
  9046   0032F4  8E3D               	bsf	(___fldiv@b+2)^0,7,c
  9047   0032F6  EF7E  F019         	goto	l4383
  9048   0032FA                     l4381:
  9049   0032FA  9E3D               	bcf	(___fldiv@b+2)^0,7,c
  9050   0032FC                     l4383:
  9051   0032FC  90D8               	bcf	status,0,c
  9052   0032FE  3052               	rrcf	___fldiv@bexp^0,w,c
  9053   003300  6E3E               	movwf	(___fldiv@b+3)^0,c
  9054   003302  EF34  F018         	goto	l4297
  9055   003306                     l861:
  9056   003306  0012               	return		;funcret
  9057   003308                     __end_of___fldiv:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function ___flge *****************
  9061 ;; Defined at:
  9062 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  ff1             4   50[COMRAM] unsigned char 
  9065 ;;  ff2             4   54[COMRAM] unsigned char 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;		None
  9068 ;; Return value:  Size  Location     Type
  9069 ;;		None               void
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9077 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9080 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;Total ram usage:       12 bytes
  9082 ;; Hardware stack levels used: 1
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_RGB_to_HSV
  9087 ;;		_efgtoa
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text42
  9092   003B20                     __ptext42:
  9093                           	callstack 0
  9094   003B20                     ___flge:
  9095                           	callstack 25
  9096   003B20  0E00               	movlw	0
  9097   003B22  1433               	andwf	___flge@ff1^0,w,c
  9098   003B24  6E3B               	movwf	??___flge^0,c
  9099   003B26  0E00               	movlw	0
  9100   003B28  1434               	andwf	(___flge@ff1+1)^0,w,c
  9101   003B2A  6E3C               	movwf	(??___flge+1)^0,c
  9102   003B2C  0E80               	movlw	128
  9103   003B2E  1435               	andwf	(___flge@ff1+2)^0,w,c
  9104   003B30  6E3D               	movwf	(??___flge+2)^0,c
  9105   003B32  0E7F               	movlw	127
  9106   003B34  1436               	andwf	(___flge@ff1+3)^0,w,c
  9107   003B36  6E3E               	movwf	(??___flge+3)^0,c
  9108   003B38  503B               	movf	??___flge^0,w,c
  9109   003B3A  103C               	iorwf	(??___flge+1)^0,w,c
  9110   003B3C  103D               	iorwf	(??___flge+2)^0,w,c
  9111   003B3E  103E               	iorwf	(??___flge+3)^0,w,c
  9112   003B40  A4D8               	btfss	status,2,c
  9113   003B42  EFA5  F01D         	goto	u5411
  9114   003B46  EFA7  F01D         	goto	u5410
  9115   003B4A                     u5411:
  9116   003B4A  EFAF  F01D         	goto	l4547
  9117   003B4E                     u5410:
  9118   003B4E  0E00               	movlw	0
  9119   003B50  6E33               	movwf	___flge@ff1^0,c
  9120   003B52  0E00               	movlw	0
  9121   003B54  6E34               	movwf	(___flge@ff1+1)^0,c
  9122   003B56  0E00               	movlw	0
  9123   003B58  6E35               	movwf	(___flge@ff1+2)^0,c
  9124   003B5A  0E00               	movlw	0
  9125   003B5C  6E36               	movwf	(___flge@ff1+3)^0,c
  9126   003B5E                     l4547:
  9127   003B5E  0E00               	movlw	0
  9128   003B60  1437               	andwf	___flge@ff2^0,w,c
  9129   003B62  6E3B               	movwf	??___flge^0,c
  9130   003B64  0E00               	movlw	0
  9131   003B66  1438               	andwf	(___flge@ff2+1)^0,w,c
  9132   003B68  6E3C               	movwf	(??___flge+1)^0,c
  9133   003B6A  0E80               	movlw	128
  9134   003B6C  1439               	andwf	(___flge@ff2+2)^0,w,c
  9135   003B6E  6E3D               	movwf	(??___flge+2)^0,c
  9136   003B70  0E7F               	movlw	127
  9137   003B72  143A               	andwf	(___flge@ff2+3)^0,w,c
  9138   003B74  6E3E               	movwf	(??___flge+3)^0,c
  9139   003B76  503B               	movf	??___flge^0,w,c
  9140   003B78  103C               	iorwf	(??___flge+1)^0,w,c
  9141   003B7A  103D               	iorwf	(??___flge+2)^0,w,c
  9142   003B7C  103E               	iorwf	(??___flge+3)^0,w,c
  9143   003B7E  A4D8               	btfss	status,2,c
  9144   003B80  EFC4  F01D         	goto	u5421
  9145   003B84  EFC6  F01D         	goto	u5420
  9146   003B88                     u5421:
  9147   003B88  EFCE  F01D         	goto	l4551
  9148   003B8C                     u5420:
  9149   003B8C  0E00               	movlw	0
  9150   003B8E  6E37               	movwf	___flge@ff2^0,c
  9151   003B90  0E00               	movlw	0
  9152   003B92  6E38               	movwf	(___flge@ff2+1)^0,c
  9153   003B94  0E00               	movlw	0
  9154   003B96  6E39               	movwf	(___flge@ff2+2)^0,c
  9155   003B98  0E00               	movlw	0
  9156   003B9A  6E3A               	movwf	(___flge@ff2+3)^0,c
  9157   003B9C                     l4551:
  9158   003B9C  AE36               	btfss	(___flge@ff1+3)^0,7,c
  9159   003B9E  EFD3  F01D         	goto	u5431
  9160   003BA2  EFD5  F01D         	goto	u5430
  9161   003BA6                     u5431:
  9162   003BA6  EFDE  F01D         	goto	l4555
  9163   003BAA                     u5430:
  9164   003BAA  6C33               	negf	___flge@ff1^0,c
  9165   003BAC  1E34               	comf	(___flge@ff1+1)^0,f,c
  9166   003BAE  B0D8               	btfsc	status,0,c
  9167   003BB0  2A34               	incf	(___flge@ff1+1)^0,f,c
  9168   003BB2  1E35               	comf	(___flge@ff1+2)^0,f,c
  9169   003BB4  B0D8               	btfsc	status,0,c
  9170   003BB6  2A35               	incf	(___flge@ff1+2)^0,f,c
  9171   003BB8  0E80               	movlw	128
  9172   003BBA  5636               	subfwb	(___flge@ff1+3)^0,f,c
  9173   003BBC                     l4555:
  9174   003BBC  AE3A               	btfss	(___flge@ff2+3)^0,7,c
  9175   003BBE  EFE3  F01D         	goto	u5441
  9176   003BC2  EFE5  F01D         	goto	u5440
  9177   003BC6                     u5441:
  9178   003BC6  EFEE  F01D         	goto	l544
  9179   003BCA                     u5440:
  9180   003BCA  6C37               	negf	___flge@ff2^0,c
  9181   003BCC  1E38               	comf	(___flge@ff2+1)^0,f,c
  9182   003BCE  B0D8               	btfsc	status,0,c
  9183   003BD0  2A38               	incf	(___flge@ff2+1)^0,f,c
  9184   003BD2  1E39               	comf	(___flge@ff2+2)^0,f,c
  9185   003BD4  B0D8               	btfsc	status,0,c
  9186   003BD6  2A39               	incf	(___flge@ff2+2)^0,f,c
  9187   003BD8  0E80               	movlw	128
  9188   003BDA  563A               	subfwb	(___flge@ff2+3)^0,f,c
  9189   003BDC                     l544:
  9190   003BDC  0E00               	movlw	0
  9191   003BDE  1A33               	xorwf	___flge@ff1^0,f,c
  9192   003BE0  0E00               	movlw	0
  9193   003BE2  1A34               	xorwf	(___flge@ff1+1)^0,f,c
  9194   003BE4  0E00               	movlw	0
  9195   003BE6  1A35               	xorwf	(___flge@ff1+2)^0,f,c
  9196   003BE8  0E80               	movlw	128
  9197   003BEA  1A36               	xorwf	(___flge@ff1+3)^0,f,c
  9198   003BEC  0E00               	movlw	0
  9199   003BEE  1A37               	xorwf	___flge@ff2^0,f,c
  9200   003BF0  0E00               	movlw	0
  9201   003BF2  1A38               	xorwf	(___flge@ff2+1)^0,f,c
  9202   003BF4  0E00               	movlw	0
  9203   003BF6  1A39               	xorwf	(___flge@ff2+2)^0,f,c
  9204   003BF8  0E80               	movlw	128
  9205   003BFA  1A3A               	xorwf	(___flge@ff2+3)^0,f,c
  9206   003BFC  5037               	movf	___flge@ff2^0,w,c
  9207   003BFE  5C33               	subwf	___flge@ff1^0,w,c
  9208   003C00  5038               	movf	(___flge@ff2+1)^0,w,c
  9209   003C02  5834               	subwfb	(___flge@ff1+1)^0,w,c
  9210   003C04  5039               	movf	(___flge@ff2+2)^0,w,c
  9211   003C06  5835               	subwfb	(___flge@ff1+2)^0,w,c
  9212   003C08  503A               	movf	(___flge@ff2+3)^0,w,c
  9213   003C0A  5836               	subwfb	(___flge@ff1+3)^0,w,c
  9214   003C0C  B0D8               	btfsc	status,0,c
  9215   003C0E  EF0B  F01E         	goto	u5451
  9216   003C12  EF0D  F01E         	goto	u5450
  9217   003C16                     u5451:
  9218   003C16  EF10  F01E         	goto	l4561
  9219   003C1A                     u5450:
  9220   003C1A  90D8               	bcf	status,0,c
  9221   003C1C  EF11  F01E         	goto	l549
  9222   003C20                     l4561:
  9223   003C20  80D8               	bsf	status,0,c
  9224   003C22                     l549:
  9225   003C22  0012               	return		;funcret
  9226   003C24                     __end_of___flge:
  9227                           	callstack 0
  9228                           
  9229                           	psect	rparam
  9230   000000                     
  9231                           	psect	config
  9232                           
  9233                           ;Config register CONFIG1L @ 0x300000
  9234                           ;	External Oscillator mode Selection bits
  9235                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9236                           ;	Power-up default value for COSC bits
  9237                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9238   300000                     	org	3145728
  9239   300000  AA                 	db	170
  9240                           
  9241                           ;Config register CONFIG1H @ 0x300001
  9242                           ;	unspecified, using default values
  9243                           ;	Clock Out Enable bit
  9244                           ;	CLKOUTEN = 0x1, unprogrammed default
  9245                           ;	Clock Switch Enable bit
  9246                           ;	CSWEN = 0x1, unprogrammed default
  9247                           ;	Fail-Safe Clock Monitor Enable bit
  9248                           ;	FCMEN = 0x1, unprogrammed default
  9249   300001                     	org	3145729
  9250   300001  FF                 	db	255
  9251                           
  9252                           ;Config register CONFIG3L @ 0x300004
  9253                           ;	WDT Period Select bits
  9254                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9255                           ;	WDT operating mode
  9256                           ;	WDTE = OFF, WDT Disabled
  9257   300004                     	org	3145732
  9258   300004  9F                 	db	159
  9259                           
  9260                           ;Config register CONFIG3H @ 0x300005
  9261                           ;	unspecified, using default values
  9262                           ;	WDT Window Select bits
  9263                           ;	WDTCWS = 0x7, unprogrammed default
  9264                           ;	WDT input clock selector
  9265                           ;	WDTCCS = 0x7, unprogrammed default
  9266   300005                     	org	3145733
  9267   300005  FF                 	db	255
  9268                           tosu	equ	0xFFF
  9269                           tosh	equ	0xFFE
  9270                           tosl	equ	0xFFD
  9271                           stkptr	equ	0xFFC
  9272                           pclatu	equ	0xFFB
  9273                           pclath	equ	0xFFA
  9274                           pcl	equ	0xFF9
  9275                           tblptru	equ	0xFF8
  9276                           tblptrh	equ	0xFF7
  9277                           tblptrl	equ	0xFF6
  9278                           tablat	equ	0xFF5
  9279                           prodh	equ	0xFF4
  9280                           prodl	equ	0xFF3
  9281                           indf0	equ	0xFEF
  9282                           postinc0	equ	0xFEE
  9283                           postdec0	equ	0xFED
  9284                           preinc0	equ	0xFEC
  9285                           plusw0	equ	0xFEB
  9286                           fsr0h	equ	0xFEA
  9287                           fsr0l	equ	0xFE9
  9288                           wreg	equ	0xFE8
  9289                           indf1	equ	0xFE7
  9290                           postinc1	equ	0xFE6
  9291                           postdec1	equ	0xFE5
  9292                           preinc1	equ	0xFE4
  9293                           plusw1	equ	0xFE3
  9294                           fsr1h	equ	0xFE2
  9295                           fsr1l	equ	0xFE1
  9296                           bsr	equ	0xFE0
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           postdec2	equ	0xFDD
  9300                           preinc2	equ	0xFDC
  9301                           plusw2	equ	0xFDB
  9302                           fsr2h	equ	0xFDA
  9303                           fsr2l	equ	0xFD9
  9304                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    157     159
    BANK1           256      2     177
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    S1257$buffer	PTR unsigned char  size(2) Largest target is 0

    S1257$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 25
		 -> color_cardCheck@senddata(BANK0[25]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 25
		 -> color_cardCheck@senddata(BANK0[25]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flsub
    ___flge->___flmul

Critical Paths under _main in BANK0

    _main->_color_cardCheck
    _color_cardCheck->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  103752
                                              0 BANK1      2     2      0
                    _color_cardCheck
                   _color_click_init
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_cardCheck                                     57    57      0  103458
                                            102 BANK0     55    55      0
                         _RGB_to_HSV
                             ___fleq
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    15     14   40863
                                             75 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   40365
                                             71 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3   39877
                                             60 BANK0     11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     852
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   37164
                                             93 COMRAM     2     2      0
                                             10 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3039
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             83 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     143
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RGB_to_HSV                                          87    68     19   53288
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (3) _custom_floatmodulo                                  18    10      8   23189
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     697
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5447
                                             50 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3982
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4673
                                             25 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8    6710
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    4523
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2066
                                             50 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _color_cardCheck
     _RGB_to_HSV
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
           ___xxtofl (ARG)
       ___fleq
       ___flge
         ___flmul (ARG)
       ___flmul
       ___flsub
       _custom_floatmodulo
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
     ___fleq
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      B1       7       69.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9D      9F       5       99.4%
BITBIGSFRlllhh      8F      0       0      36        0.0%
BITBIGSFRh          77      0       0      32        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRlllhll     36      0       0      40        0.0%
BITBIGSFRlllhll     2D      0       0      39        0.0%
BITBIGSFRllllhh     2A      0       0      42        0.0%
BITBIGSFRlllll      26      0       0      46        0.0%
BITBIGSFRllllhl      F      0       0      44        0.0%
BITBIGSFRlllhll      C      0       0      41        0.0%
BITBIGSFRllllhl      9      0       0      43        0.0%
BITBIGSFRlllhll      8      0       0      37        0.0%
BITBIGSFRllllhl      6      0       0      45        0.0%
BITBIGSFRllh         4      0       0      35        0.0%
BITBIGSFRlhl         2      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      33        0.0%
BITBIGSFRlllhll      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      47        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 19:17:46 2024

               _color_read_Red 4030                   ___fldiv@aexp 0053                   ___fldiv@bexp 0052  
                 ___fldiv@sign 004B                _color_read_Blue 4120                             l51 423E  
                           l60 407E                             l63 40CE                             l73 3A18  
                           l81 198A                             l57 445A                             l66 416E  
                           l83 199A                             l93 1A8C                             l85 19F4  
                           l69 411E                             l95 1A9C                             l87 1A04  
                           l97 1AF6                             l99 1B06            ___wmul@multiplicand 0003  
             _color_read_Clear 40D0               _color_read_Green 4080                            l110 1FCE  
                          l103 1E54                            l130 2682                            l124 2682  
                          l241 43C2                            l250 44AA                            l244 43EE  
                          l253 44B4                            l262 4280                            l247 4414  
                          l256 44A0                            l176 4476                            l185 43EC  
                          l259 4496                            l179 448A                            l279 443A  
                          l544 3BDC                            l553 436E                            l538 3F22  
                          l900 2DFE                            l549 3C22                            l910 2F2E  
                          l902 2E76                            l903 2E64                            l807 2872  
                          l824 298C                            l816 2B42                            l808 2860  
                          l576 3B1E                            l833 2A5C                            l809 2826  
                          l834 2A4A                            l861 3306                            l941 383C  
                          l934 37A4                            l863 3166                            l872 31AC  
                          l849 41FA                            l937 3900                            l874 3224  
                          l866 312A                            l875 3212                            l948 3898  
                          l893 2C08                            l957 4336                            l984 3F3A  
                          l897 2F6C                            l988 3F88                            l999 180C  
                          _pad 3F24                            wreg 0FE8                   ___flmul@aexp 0027  
                 ___flmul@bexp 002C                   ___flmul@sign 0026                   ___flmul@temp 0031  
                 ___flmul@prod 002D                   ___fltol@exp1 000A                           l1002 11A8  
                         l1004 0FEE                           l1112 402E                           l1032 15F4  
                         l1106 3FDE                           l1124 3E78                           l1132 42C0  
                         l1044 3DC6                           l1141 42FE                           l1135 44B6  
                         l1048 3DCE                           l1075 41B4                           l1092 374C  
                         l1068 3536                           l1085 3D20                           l1095 3690  
                         l2241 43AC                           l2243 43AE                           l2235 439A  
                         l4101 27A8                           l2245 43B0                           l2237 43A4  
                         l4111 27BC                           l4103 27AC                           l4031 3E16  
                         l4023 3DD0                           l2239 43AA                           l4201 2A2C  
                         l4121 280E                           l4113 27C0                           l4105 27B0  
                         l4041 269E                           l4033 3E48                           l4025 3DE0  
                         l4211 2A86                           l4203 2A42                           l4131 2852  
                         l4123 281E                           l4107 27B4                           l4115 27C4  
                         l4051 26D2                           l4043 26A0                           l5011 3934  
                         l4027 3DF0                           l4221 2B02                           l4213 2AC0  
                         l4133 2854                           l4125 2834                           l4117 27C8  
                         l4109 27B8                           l4061 2704                           l4045 26B0  
                         l4053 26DA                           l4037 2684                           l4029 3DFA  
                         l5101 432A                           l4311 30A4                           l4303 3080  
                         l4231 2B22                           l4223 2B06                           l4207 2A6C  
                         l4215 2AC2                           l4151 28DC                           l4143 28A4  
                         l4135 285E                           l4127 2840                           l4119 27F2  
                         l4071 273A                           l4063 270A                           l4055 26EA  
                         l4047 26C0                           l4039 2690                           l5015 3948  
                         l5023 4170                           l5111 20F8                           l4321 30F6  
                         l4313 30BE                           l4305 3090                           l4401 2B80  
                         l4233 2B30                           l4225 2B14                           l4217 2AD2  
                         l4209 2A78                           l4153 28E0                           l4145 28B4  
                         l4137 2880                           l4161 2900                           l4129 2844  
                         l4081 2776                           l4073 274A                           l4065 2718  
                         l4057 26F0                           l4049 26D0                           l3521 3760  
                         l5017 3998                           l5009 3902                           l5041 19E0  
                         l5033 180E                           l4241 428E                           l5025 4178  
                         l5121 217C                           l5113 2100                           l5105 1FD0  
                         l4331 3152                           l4323 3106                           l4315 30CE  
                         l4307 3090                           l4411 2BB2                           l4403 2B90  
                         l4235 2B32                           l4227 2B1A                           l4219 2AE2  
                         l4163 2926                           l4171 297C                           l4155 28EE  
                         l4147 28C2                           l4139 2890                           l4091 2794  
                         l4083 2784                           l4075 274C                           l4067 271A  
                         l4059 2702                           l3531 37DE                           l3523 376E  
                         l5019 3A08                           l5051 1AE2                           l5043 1A14  
                         l5035 1944                           l3515 43EE                           l4243 429C  
                         l5027 418A                           l5131 2248                           l5123 21AE  
                         l5115 2118                           l5107 2068                           l4341 3192  
                         l4333 3154                           l4325 311A                           l4317 30DE  
                         l4261 2F9A                           l4253 2F6E                           l4501 2EE8  
                         l4421 2BF2                           l4413 2BC0                           l4405 2B96  
                         l4229 2B1C                           l4181 29D0                           l4173 29A2  
                         l4165 295A                           l4157 28F0                           l4149 28D0  
                         l4093 2798                           l4085 2788                           l4069 272A  
                         l4077 2754                           l3541 3832                           l3533 37E6  
                         l3525 37B4                           l5061 1C1C                           l5053 1B16  
                         l5045 1A46                           l5037 1976                           l3517 43FE  
                         l3701 4080                           l4245 42A0                           l5029 41AA  
                         l5141 22E6                           l5133 224C                           l5125 21B2  
                         l5117 2118                           l5109 20BA                           l4351 31CE  
                         l4343 319C                           l4335 3164                           l4327 3128  
                         l4319 30EE                           l4271 2FD4                           l4263 2FAA  
                         l4255 2F7A                           l4511 2F50                           l4503 2EFC  
                         l4431 2C3C                           l4423 2BF8                           l4415 2BC2  
                         l4407 2BA6                           l4191 29FA                           l4183 29DE  
                         l4175 29B2                           l4167 295C                           l4159 28FA  
                         l4095 279C                           l4087 278C                           l4079 2764  
                         l3551 38A8                           l3543 386E                           l3535 37F2  
                         l3527 37CA                           l3519 3750                           l5071 1D6E  
                         l5063 1C50                           l5055 1B7C                           l5047 1A78  
                         l5039 19AE                           l3703 40C6                           l4239 4282  
                         l4247 4416                           l5151 23B2                           l5143 2318  
                         l5135 227E                           l5127 21E4                           l5119 214A  
                         l4361 3240                           l4353 31DC                           l4345 31AA  
                         l4337 3176                           l4329 3134                           l4281 3000  
                         l4273 2FDA                           l4265 2FBA                           l4257 2F88  
                         l4513 2F52                           l4505 2F16                           l4441 2C8C  
                         l4433 2C48                           l4425 2C18                           l4417 2BD2  
                         l4409 2BAC                           l4193 2A0A                           l4185 29E0  
                         l4169 296C                           l4097 27A0                           l4089 2790  
                         l4521 41B6                           l3561 38F0                           l3553 38AC  
                         l3545 387A                           l3537 3824                           l5081 1E98  
                         l5073 1DA0                           l5065 1C88                           l5057 1B92  
                         l5049 1AB0                           l3641 4492                           l3713 40D0  
                         l4249 4432                           l5161 247E                           l5153 23E4  
                         l5145 234A                           l5137 22B0                           l5129 2216  
                         l3801 4200                           l4371 32AC                           l4363 324E  
                         l4355 320A                           l4339 318C                           l4347 31BC  
                         l4291 303A                           l4283 3010                           l4275 2FE0  
                         l4267 2FBC                           l4259 2F8A                           l4531 3EB8  
                         l4507 2F32                           l4515 2F58                           l4451 2CCE  
                         l4443 2C98                           l4435 2C52                           l4427 2C28  
                         l4419 2BE2                           l4187 29EE                           l4179 29C6  
                         l4195 2A0C                           l4099 27A4                           l4523 41C6  
                         l4611 3AFE                           l3555 38D0                           l3547 3888  
                         l3539 3826                           l5091 1F92                           l5083 1EB0  
                         l5075 1DF8                           l5067 1CBA                           l5059 1BC4  
                         l3651 4242                           l3635 44A2                           l3643 4498  
                         l3707 4120                           l3715 4116                           l5171 254A  
                         l5163 24B0                           l5155 2416                           l5147 237C  
                         l5139 22E2                           l3811 4230                           l3803 420A  
                         l4381 32FA                           l4373 32C6                           l4365 3278  
                         l4349 31CA                           l4293 3050                           l4285 3020  
                         l4277 2FEE                           l4269 2FC4                           l4533 3EE6  
                         l4517 2F5C                           l4509 2F42                           l4461 2D30  
                         l4453 2CDA                           l4445 2CA4                           l4437 2C68  
                         l4189 29F6                           l4197 2A1A                           l4613 3B0E  
                         l4605 3AD2                           l3557 38E0                           l3549 38A6  
                         l5085 1EE2                           l5069 1D12                           l5077 1E54  
                         l3661 427E                           l3653 4246                           l3637 44A6  
                         l3645 449C                           l3709 4166                           l4701 4014  
                         l4621 3F46                           l5261 3480                           l5093 4300  
                         l5181 25E8                           l5173 254E                           l5165 24B4  
                         l5157 241A                           l5149 2380                           l3821 423A  
                         l3813 4232                           l3805 421A                           ?_pad 000F  
                         l4551 3B9C                           l4543 3B20                           l4383 32FC  
                         l4375 32E2                           l4359 3234                           l4367 327C  
                         l4295 3060                           l4287 3022                           l4279 2FF0  
                         l4535 3EF6                           l4527 3E7A                           l4471 2DC6  
                         l4463 2D3C                           l4455 2CEA                           l4447 2CB2  
                         l4439 2C74                           l4391 2B44                           l4199 2A1E  
                         l4607 3ADE                           l3559 38EE                           l5087 1EFE  
                         l5079 1E64                           l3655 424E                           l3647 44AC  
                         l3639 448E                           l4631 3C44                           l4623 3F56  
                         l4711 0E4A                           l4703 0E22                           l5263 34F4  
                         l5095 430A                           l5183 261A                           l5175 2580  
                         l5167 24E6                           l5159 244C                           l3823 423C  
                         l3815 4234                           l3807 4224                           l5191 4370  
                         l4561 3C20                           l4553 3BAA                           l4545 3B4E  
                         l4377 32E6                           l4369 3296                           l4297 3068  
                         l4289 302A                           l4537 3F1A                           l4529 3EA8  
                         l4481 2E1C                           l4473 2DE4                           l4465 2D58  
                         l4457 2D04                           l4449 2CBE                           l4393 2B50  
                         l4609 3AEE                           l5089 1F5E                           l3657 4256  
                         l3649 44B0                           l3681 4486                           l4633 3C82  
                         l4641 3CC2                           l4625 3F5A                           l4617 3F24  
                         l4801 11E4                           l4721 0EA0                           l4713 0E6E  
                         l4705 0E28                           l5097 4312                           l5185 264C  
                         l5177 25B2                           l5169 2518                           l3817 4236  
                         l3809 422E                           l5193 4374                           l4555 3BBC  
                         l4547 3B5E                           l4379 32F4                           l4299 306C  
                         l4539 3F20                           l4491 2E86                           l4483 2E20  
                         l4475 2DEE                           l4467 2D82                           l4459 2D14  
                         l4395 2B5E                           l3659 427C                           l4643 3CD4  
                         l4635 3CAA                           l4627 3F78                           l4619 3F32  
                         l4651 42C2                           l4803 11F6                           l4811 1236  
                         l4731 0EF0                           l4723 0EAC                           l4715 0E78  
                         l4707 0E38                           l5259 33DA                           l5099 431A  
                         l5187 267E                           l5179 25E4                           l3819 4238  
                         l5195 438E                           l4557 3BCA                           l4549 3B8C  
                         l4493 2E92                           l4485 2E2E                           l4477 2DFC  
                         l4469 2DB8                           l4397 2B60                           l4581 3A6E  
                         l4573 3A1A                           l4565 4338                           l4637 3CB6  
                         l4629 3C24                           l4653 42CA                           l4901 171C  
                         l4821 131E                           l4813 123E                           l4805 1204  
                         l4741 0F20                           l4733 0EF4                           l4725 0EB4  
                         l4717 0E80                           l4709 0E46                           l3693 443E  
                         l4559 3C1A                           l4495 2EA0                           l4487 2E5C  
                         l4479 2E0E                           l4399 2B70                           l4583 3A70  
                         l4575 3A30                           l3695 4030                           l3679 4476  
                         l3791 43C4                           l4567 434E                           l4647 3D18  
                         l4671 35D2                           l4663 3538                           l4655 3F8A  
                         l4911 179C                           l4903 173A                           l4831 13DC  
                         l4823 1352                           l4815 124E                           l4807 121C  
                         l4751 0F78                           l4735 0EFA                           l4719 0E90  
                         l4727 0EB8                           l4497 2ECA                           l4585 3A80  
                         l3697 4076                           l3793 43C8                           l4569 435E  
                         l4681 36F0                           l4665 3558                           l4657 3F98  
                         l4921 17F0                           l4913 17AA                           l4905 1756  
                         l4841 1478                           l4833 13F2                           l4817 1262  
                         l4825 1358                           l4809 122E                           l4753 0F7E  
                         l4737 0F02                           l4729 0EDE                           l4745 0F3C  
                         l4499 2ECE                           l4595 3AAA                           l4587 3A84  
                         l4579 3A44                           l3795 43D4                           l4683 3704  
                         l4675 3644                           l4667 35B0                           l4659 3FAC  
                         l4691 3FE0                           l4915 17C2                           l4907 175E  
                         l4843 14CE                           l4851 1520                           l4835 1424  
                         l4827 1376                           l4819 12C6                           l4771 1004  
                         l4755 0F86                           l4747 0F62                           l4763 0F9E  
                         l4739 0F16                           l4931 3D58                           l4597 3AB4  
                         l4589 3A92                           l3797 43D6                           l4685 372C  
                         l4677 3680                           l4669 35C4                           l4693 3FF4  
                         l4917 17D2                           l4909 176C                           l4861 1552  
                         l4853 1530                           l4845 14D4                           l4837 1434  
                         l4829 13AA                           l4781 10FA                           l4773 1038  
                         l4765 0FB8                           l4749 0F74                           l4933 3D74  
                         l4925 3D22                           l4941 3330                           l4599 3ABE  
                         l4687 373C                           l4679 36B4                           l4695 4000  
                         l4919 17E8                           l4871 1624                           l4863 15CA  
                         l4855 1538                           l4847 1508                           l4839 1444  
                         l4791 11B0                           l4783 112E                           l4775 1076  
                         l4935 3D94                           l4927 3D2A                           l4951 337A  
                         l4943 3338                           l3799 41FC                           l4697 4004  
                         l4881 164A                           l4873 1628                           l4865 15EA  
                         l4857 153E                           l4849 151C                           l4793 11C0  
                         l4785 1136                           l4777 10A8                           l4769 0FFE  
                         l4929 3D50                           l4937 3D9C                           l4961 33BE  
                         l4953 338E                           l4945 3346                           l4699 4010  
                         l4891 167E                           l4883 1650                           l4875 162E  
                         l4867 1606                           l4859 1546                           l4795 11CC  
                         l4779 10E6                           l4971 3444                           l4955 339A  
                         l4947 334A                           l4939 3308                           l4893 1684  
                         l4877 1636                           l4869 1614                           l4885 1656  
                         l4797 11D6                           l4789 1176                           l4957 33B0  
                         l4965 33C6                           l4949 3372                           l4895 16DC  
                         l4887 1668                           l4879 1646                           l4799 11DE  
                         l4975 346C                           l4959 33B6                           l4967 33F8  
                         l4991 3510                           l4897 1710                           l4889 167A  
                         l4985 34D2                           l4977 3496                           l4969 341C  
                         l4899 1718                           l4979 34A4                           l4987 3502  
                         STR_1 0E01                           STR_2 0E19                           STR_5 0E1D  
                         u4000 426A                   _BAUD4CONbits 0EE9                           u4001 4262  
                         u4030 4486                           u4031 4482                           u5000 3000  
                         u5001 2FFC                           u5010 3010                           u4018 426C  
                         u5011 300C                           u5100 31CA                           u5020 3050  
                         u5101 31C6                           u5021 304C                           u5110 31DC  
                         u5030 3090                           u5111 31D8                           u5031 308C  
                         u5120 320A                           u5040 3106                           u5200 2B70  
                         u6000 1606                           u5121 3206                           u5041 3102  
                         u5201 2B6C                           u6001 1602                           u5130 3220  
                         u5050 3128                           u5210 2B80                           u4170 43EC  
                         u6010 1614                           u5131 321C                           u5051 3124  
                         u5211 2B7C                           u4171 43E8                           u6011 1610  
                         u5140 3234                           u5060 3152                           u5300 2E2E  
                         u5220 2BC0                           u6020 1668                           u6100 3330  
                         u5141 3230                           u5061 314E                           u5301 2E2A  
                         u5221 2BBC                           u6021 1664                           u6101 332C  
                         u5150 324E                           u5070 3176                           u5310 2E5C  
                         u5230 2BD2                           u6030 173A                           u6110 3372  
                         u5151 324A                           u5071 3172                           u5311 2E58  
                         u5231 2BCE                           u6031 1736                           u6111 336E  
                         u5160 3296                           u5080 318C                           u5400 3F1A  
                         u5320 2E72                           u5240 2BE2                           u4600 2718  
                         u6200 1AE2                           u4520 3DE0                           u6040 1756  
                         u6120 3418                           u5161 3292                           u5081 3188  
                         u5401 3F16                           u5321 2E6E                           u5241 2BDE  
                         u4601 2714                           u6201 1ADE                           u4521 3DDC  
                         u6041 1752                           u6121 3414                           u5410 3B4E  
                         u5170 32C6                           u5090 31AA                           u5330 2E86  
                         u5250 2C18                           u4610 272A                           u6130 3934  
                         u6210 1B7C                           u4530 3DF0                           u6050 17BC  
                         u5411 3B4A                           u5171 32C2                           u5091 31A6  
                         u5331 2E82                           u5251 2C14                           u4611 2726  
                         u6131 3930                           u6211 1B78                           u4531 3DEC  
                         u6051 17B6                           u5420 3B8C                           u5180 32F4  
                         u5340 2EA0                           u5260 2C28                           u4700 2872  
                         u4620 273A                           u5500 3AA6                           u3900 3820  
                         u6220 1BC4                           u4540 3E16                           u6060 17BE  
                         u6140 41AA                           u6300 21E4                           u5421 3B88  
                         u5181 32F0                           u5341 2E9C                           u5261 2C24  
                         u4701 286E                           u4621 2736                           u5501 3AA2  
                         u3901 381C                           u6221 1BC0                           u4541 3E12  
                         u6141 41A6                           u6301 21E0                           u5430 3BAA  
                         u5350 2EE8                           u5270 2DA2                           u5190 2B5E  
                         u4710 2880                           u4630 2776                           u5510 3ACE  
                         u3910 386A                           u6230 1CBA                           u6150 1944  
                         u4550 3E48                           u6070 17D2                           u6310 2216  
                         u5431 3BA6                           u5351 2EE4                           u5191 2B5A  
                         u4711 287C                           u4631 2772                           u5511 3ACA  
                         u3911 3866                           u6231 1CB6                           u6151 1940  
                         u4551 3E44                           u6071 17CE                           u6311 2212  
                         u5440 3BCA                           u5360 2F16                           u5280 2DFC  
                         u4800 29DE                           u4720 2890                           u4640 2784  
                         u4560 269E                           u5520 3AEE                           u3920 3888  
                         u6240 1DA0                           u6160 1976                           u6080 3D50  
                         u6400 23E4                           u6320 2248                           u5441 3BC6  
                         u5361 2F12                           u5281 2DF8                           u4801 29DA  
                         u4721 288C                           u4641 2780                           u4561 269A  
                         u5521 3AEA                           u3921 3884                           u6241 1D9C  
                         u6161 1972                           u6081 3D4C                           u6401 23E0  
                         u6321 2244                           u5450 3C1A                           u5370 2F50  
                         u5290 2E1C                           u4810 29EE                           u4730 28C2  
                         u4650 27F2                           u4570 26B0                           u5530 3AFE  
                         u3930 3898                           u6250 1E64                           u6170 19E0  
                         u3850 43FE                           u5610 3D0E                           u6090 3DC6  
                         u6410 2416                           u6330 227E                           u5451 3C16  
                         u5371 2F4C                           u5291 2E18                           u5275 2D98  
                         u4811 29EA                           u4731 28BE                           u4651 27EE  
                         u4571 26AC                           u5531 3AFA                           u3931 3894  
                         u6251 1E60                           u6171 19DC                           u3851 43FA  
                         u5611 3D08                           u6091 3DC2                           u6411 2412  
                         u6331 227A                           u5380 3EA8                           u4900 2AD2  
                         u4820 2A0A                           u4740 28D0                           u4660 280A  
                         u4580 26C0                           u3940 38A6                           u6260 1EE2  
                         u6180 1A46                           u3860 4414                           u5460 434E  
                         u5620 3D10                           u5700 3664                           u5540 3F32  
                         u6500 25E4                           u6420 244C                           u6340 22B0  
                         u5381 3EA4                           u4901 2ACE                           u4821 2A06  
                         u4741 28CC                           u4661 2804                           u4581 26BC  
                         u3941 38A2                           u6261 1EDE                           u6181 1A42  
                         u3861 4410                           u5461 434A                           u5605 3CE6  
                         u5541 3F2E                           u6501 25E0                           u6421 2448  
                         u6341 22AC                           u5390 3EE6                           u4910 2AE2  
                         u4830 2A1A                           u4750 28EE                           u4670 280C  
                         u4590 2702                           u5470 3A30                           u3950 38E0  
                         u3870 3760                           u6190 1A78                           u5710 3680  
                         u5550 3F78                           u5630 42FE                           u6510 261A  
                         u6430 247E                           u6350 22E2                           u6270 214A  
                         u5391 3EE2                           u4911 2ADE                           u4831 2A16  
                         u4751 28EA                           u4591 26FE                           u5471 3A2C  
                         u3951 38DC                           u3871 375C                           u6191 1A74  
                         u5711 367C                           u5551 3F74                           u5631 42FA  
                         u6511 2616                           u6431 247A                           u6351 22DE  
                         u6271 2146                           u4920 2B02                           u4840 2A2C  
                         u4760 2926                           u4680 2834                           u5480 3A64  
                         u3960 38EE                           u3880 376E                           u5560 3C64  
                         u5720 36D4                           u5640 3F98                           u5800 0EF0  
                         u6520 264C                           u6440 24B0                           u6360 2318  
                         u6280 217C                           u4921 2AFE                           u4841 2A28  
                         u4761 2922                           u4681 2830                           u3961 38EA  
                         u3881 376A                           u5705 365A                           u5641 3F94  
                         u5801 0EEC                           u6521 2648                           u6441 24AC  
                         u6361 2314                           u6281 2178                           u4930 2B14  
                         u4850 2A42                           u4770 296C                           u4690 2852  
                         u5490 3A92                           u3890 37CA                           u5570 3C82  
                         u5730 36F0                           u5650 3580                           u5810 0F62  
                         u6530 267E                           u6450 24E6                           u6370 234A  
                         u6290 21AE                           u4931 2B10                           u4851 2A3E  
                         u4771 2968                           u4691 284E                           u5491 3A8E  
                         u3891 37C6                           u5571 3C7E                           u5731 36EC  
                         u5811 0F5E                           u6531 267A                           u6451 24E2  
                         u6371 2346                           u6291 21AA                           u4940 2B30  
                         u4860 2A58                           u4780 29A2                           u5580 3CAA  
                         u5740 372C                           u5660 35B0                           u5900 11F6  
                         u5820 0F74                           u6460 2518                           u6380 237C  
                         u4941 2B2C                           u4861 2A54                           u4781 299E  
                         u5485 3A5A                           u5581 3CA6                           u5565 3C5A  
                         u5741 3728                           u5725 36CA                           u5661 35AC  
                         u5901 11F2                           u5821 0F70                           u6461 2514  
                         u6381 2378                           u4870 2A6C                           u4790 29B2  
                         u5590 3CD4                           u5670 35D2                           u5750 402E  
                         u4950 42C0                           u5910 1204                           u5830 0FEA  
                         u6470 254A                           u6390 23B2                           u4871 2A68  
                         u4791 29AE                           u5591 3CD0                           u5671 35CE  
                         u5655 3576                           u5751 402A                           u4951 42BC  
                         u5911 1200                           u5831 0FE6                           u6471 2546  
                         u6391 23AE                           u4960 2F88                           u4880 2A86  
                         u5920 122E                           u5840 1076                           u5760 0E46  
                         u6480 2580                           u4961 2F84                           u4881 2A82  
                         u5921 122A                           u5841 1072                           u5761 0E42  
                         u6481 257C                           u4970 2F9A                           u4890 2AC0  
                         u5690 3640                           u5930 1376                           u5850 10A8  
                         u5770 0E90                           u6490 25B2                           u4971 2F96  
                         u4891 2ABC                           u5691 363C                           u5931 1372  
                         u5851 10A4                           u5771 0E8C                           u6491 25AE  
                         u6547 4380                           u4980 2FAA                           u5940 13DC  
                         u5860 10E6                           u5780 0EA0                           u4981 2FA6  
                         u5685 35E6                           u5941 13D8                           u5861 10E2  
                         u5781 0E9C                           u6557 4210                           u4990 2FEE  
                         u5686 35F0                           u5950 1424                           u5870 1172  
                         u5790 0EDE                           u4991 2FEA                           u5687 3600  
                         u5951 1420                           u5871 116E                           u5791 0EDA  
                         u6567 210C                           u5960 1434                           u5880 11A8  
                         u5961 1430                           u5881 11A4                           u5970 14CE  
                         u5890 11C0                           u5971 14CA                           u5891 11BC  
                         u5980 151C                           u5981 1518                           u5990 15CA  
                         u5991 15C6                           _dbuf 015F                           _labs 3F8A  
                         _main 4370                           _prec 015A                           pad@i 0015  
                         pad@p 0012                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                ___fpclassifyf 3C24                           prodh 0FF4                           prodl 0FF3  
                         start 0000                ___fldiv@new_exp 004C         __end_of_color_read_Red 4080  
                 ___param_bank 0000        __end_of_color_cardCheck 2684                          ??_pad 0014  
                ___fltol@sign1 0009                          ?_labs 0001                __end_of___fladd 2B44  
                        ?_main 0001                __end_of___fldiv 3308                __end_of___flneg 4370  
              __end_of___flmul 2F6E                __end_of___flsub 41FC                __end_of___fltol 3B20  
                  ?_RGB_to_HSV 006A                   vfpfcnvrt@fmt 009D        __end_of_sendCharSerial4 448C  
   __end_of_I2C_2_Master_Start 44AC     __end_of_I2C_2_Master_Write 4498                          _flags 015C  
          read_prec_or_width@c 0009            read_prec_or_width@n 000A                          _fputc 3DD0  
                        _fputs 4282                          labs@a 0001                          pad@fp 000F  
                        _width 0158                          _putch 44B6                          tablat 0FF5  
                        status 0FD8                __end_of_sprintf 4338                 ?___fpclassifyf 0001  
      __end_of_color_read_Blue 4170          _I2C_2_Master_RepStart 44AC                ?_color_read_Red 0005  
              __initialization 445C                   __end_of_labs 3FE0                   __end_of_main 439A  
                       ??_labs 0005                         ??_main 01AF                  __activetblptr 0003  
   __end_of_read_prec_or_width 3DD0                         ?_fputc 0001                         ?_fputs 0009  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RD5PPS 0E6F                         _RD6PPS 0E70       __end_of_color_click_init 4240  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 3902  
                 vfprintf@cfmt 00AA                         ___flge 3B20                         ___fleq 3E7A  
             ?_color_cardCheck 0001                      ??___fladd 0009                         ___wmul 4416  
                    ??___fldiv 0043                      ??___flneg 0005                      ??___flmul 0022  
                    ??___flsub 003B                      ??___fltol 0005                         _efgtoa 0E22  
                       _floorf 3538                         _memcpy 3FE0           read_prec_or_width@ap 0008  
                       clear_0 4462                         isa$std 0001                         pad@buf 0010  
                       _strcpy 42C2                         fputc@c 0001                         fputs@c 000C  
                       fputs@i 000D                         fputs@s 0009                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 41B6  
                    ??_sprintf 0060                     ___flge@ff1 0033                     ___flge@ff2 0037  
              ??___fpclassifyf 0005                   ___xxtofl@arg 0016                   ___xxtofl@exp 0015  
                 ___xxtofl@val 000C                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
                   __accesstop 0060        __end_of__initialization 446E       __end_of_color_read_Clear 4120  
                   ___flneg@f1 0001       __end_of_color_read_Green 40D0         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                  __end_of_fputc 3E7A                  __end_of_fputs 42C2  
                __end_of_putch 44B8                 _RGB_to_HSV$410 0095                 _RGB_to_HSV$412 009D  
               _RGB_to_HSV$413 00A1                 _RGB_to_HSV$409 0091             RGB_to_HSV@deltaRGB 00AD  
                      ??_fputc 0004                        ??_fputs 000C                        ??_putch 0001  
                   __pbssBANK0 00FD                     __pbssBANK1 0100              _color_writetoaddr 443C  
                      ?___flge 0033                        ?___fleq 0001             ?_color_writetoaddr 0003  
                      ?___wmul 0001                        ?_efgtoa 006A                        ?_floorf 0054  
                      ?_memcpy 0001            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                 ??_RGB_to_HSV 005C                      ?___xxtofl 000C                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 445C  
                  RGB_to_HSV@B 0072                    RGB_to_HSV@C 0076                    RGB_to_HSV@G 006E  
                  RGB_to_HSV@H 007A                    RGB_to_HSV@R 006A                    RGB_to_HSV@S 007B  
                  RGB_to_HSV@V 007C                    RGB_to_HSV@b 00BD                    RGB_to_HSV@g 00B9  
           _I2C_2_Master_Start 44A2                    RGB_to_HSV@r 00B5             _I2C_2_Master_Write 448C  
                      __Hparam 0000             __end_of_RGB_to_HSV 1FD0                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___fladd 2684  
                      ___fldiv 2F6E                        ___flneg 4338                        ___flmul 2B44  
                      ___flsub 41B6                        ___fltol 3A1A            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A7                   __psmallconst 0E00  
                      __pcinit 445C                        __ramtop 0E00                        __ptext0 4370  
                      __ptext1 41FC                        __ptext2 443C                        __ptext3 439A  
                      __ptext4 1FD0                        __ptext5 4300                        __ptext6 4170  
                      __ptext7 3308                        __ptext8 3D22                        __ptext9 4416  
        read_prec_or_width@fmt 0007                     ??___xxtofl 0010                        efgtoa@c 006F  
                      efgtoa@d 007B                        efgtoa@e 007F                        efgtoa@f 006B  
                      efgtoa@g 0092                        efgtoa@h 0089                        efgtoa@i 0087  
                      efgtoa@l 008D                        efgtoa@m 007D                        efgtoa@n 0096  
                      efgtoa@p 0072                        efgtoa@t 0074                        efgtoa@u 0098  
                      efgtoa@w 0081                  _RxBufWriteCnt 015E                        _sprintf 4300  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 446E  
                      floorf@e 0064                        floorf@m 0060                        floorf@u 0066  
                      floorf@x 0054                        memcpy@d 0008                        memcpy@n 0005  
                      memcpy@s 000A                        fputc@fp 0003                        fputs@fp 000B  
            ?_color_click_init 0001             _read_prec_or_width 3D22             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 3538                     efgtoa@mode 0079                     efgtoa@sign 0091  
                      postdec2 0FDD            ?_read_prec_or_width 0007                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 00A1  
                   ??_vfprintf 0060                        strcpy@d 0005                    ___fladd@grs 0010  
                ___xxtofl@sign 0014                      _TRISAbits 0F81                      _TRISDbits 0F84  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
         ??_read_prec_or_width 0009                    ___fldiv@grs 004E                    ___fldiv@rem 0047  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 0028  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0005      sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007  
           ??_color_read_Green 0007     __end_of_custom_floatmodulo 3A1A                 __end_of___flge 3C24  
               __end_of___fleq 3F24                    vfpfcnvrt@ap 009E                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 009C                 __end_of___wmul 443C                 __end_of_efgtoa 180E  
               __end_of_floorf 374E                 __end_of_memcpy 4030                     floorf@F521 0150  
             RGB_to_HSV@H_temp 00A9                 __end_of_strcpy 4300            color_read_Clear@tmp 000A  
          start_initialization 445C                    __end_of_pad 3F8A                  _TxBufWriteCnt 00FE  
             RGB_to_HSV@c_norm 007D               RGB_to_HSV@maxRGB 00B1               RGB_to_HSV@minRGB 0099  
              _RGB_to_HSV$1725 0081                _RGB_to_HSV$1726 0085                _RGB_to_HSV$1727 0089  
              _RGB_to_HSV$1728 00A5                _RGB_to_HSV$1729 008D          __end_of___fpclassifyf 3D22  
          color_read_Green@tmp 000A                    vfprintf@fmt 00A8                       ??___flge 003B  
                     ??___fleq 0009                       ??___wmul 0005                       ??_efgtoa 005E  
          custom_floatmodulo@x 0054            custom_floatmodulo@y 0058                       ??_floorf 0058  
                     ??_memcpy 0007                       ??_strcpy 0004                      ___fladd@a 0005  
                    ___fladd@b 0001                      ___fldiv@a 003F                      ___fldiv@b 003B  
                    ___flmul@a 001E                      ___flmul@b 001A                      ___flsub@a 0037  
                    ___flsub@b 0033                  __pcstackBANK0 0060                  __pcstackBANK1 01AF  
    custom_floatmodulo@intPart 0068                    _efgtoa$1382 0076                       ?___fladd 0001  
                     ?___fldiv 003B                       ?___flneg 0001                       ?___flmul 001A  
                     ?___flsub 0033                       ?___fltol 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 43EE  
            _I2C_2_Master_Init 439A              _I2C_2_Master_Read 4240              _I2C_2_Master_Stop 4498  
                 _RxBufReadCnt 015D             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 00AB  
            ??_color_cardCheck 00C6              _sendStringSerial4 43C4            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                       _PIR4bits 0E37              ??_sendCharSerial4 0001  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0003                       _SSP2STAT 0ED8  
                    _vfpfcnvrt 3308      __end_of_I2C_2_Master_Idle 4416      __end_of_I2C_2_Master_Init 43C4  
    __end_of_I2C_2_Master_Read 4282              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 44A2  
  I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007                   _TxBufReadCnt 00FD  
                   vfpfcnvrt@c 00A5      __end_of_sendStringSerial4 43EE        color_cardCheck@senddata 00C8  
__end_of_I2C_2_Master_RepStart 44B6             color_read_Blue@tmp 000A                       __Hrparam 0000  
                    memcpy@tmp 0007                     vfprintf@ap 00A9                       __Lrparam 0000  
                   vfprintf@fp 00A7                     ?_vfpfcnvrt 009C                     _ANSELDbits 0EA7  
           ___fpclassifyf@F465 0154                     sprintf@fmt 00AC                       ___xxtofl 374E  
           _custom_floatmodulo 3902                       __ptext10 0E22                       __ptext11 42C2  
                     __ptext20 4338                       __ptext12 3F24                       __ptext21 43C4  
                     __ptext13 4282                       __ptext30 44AC                       __ptext22 4474  
                     __ptext14 3DD0                       __ptext31 4240                       __ptext23 4030  
                     __ptext15 44B6                       __ptext40 3E7A                       __ptext32 43EE  
                     __ptext24 4080                       __ptext16 3FE0                       __ptext41 2F6E  
                     __ptext33 180E                       __ptext25 40D0                       __ptext17 3F8A  
                     __ptext42 3B20                       __ptext34 3902                       __ptext26 4120  
                     __ptext18 3538                       __ptext35 374E                       __ptext27 448C  
                     __ptext19 3C24                       __ptext36 3A1A                       __ptext28 4498  
                     __ptext37 41B6                       __ptext29 44A2                       __ptext38 2684  
                     __ptext39 2B44    custom_floatmodulo@remainder 0064                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                     strcpy@dest 0001            ?_custom_floatmodulo 0054  
                     efgtoa@fp 006A                       efgtoa@ne 0070                       efgtoa@pp 0078  
                     efgtoa@ou 0083                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     _vfprintf 4170           ??_custom_floatmodulo 005C                       memcpy@d1 0001  
                     memcpy@s1 0003                      sprintf@ap 00B9                      strcpy@src 0003  
                  efgtoa@nmode 007A     custom_floatmodulo@quotient 0060                    ??_vfpfcnvrt 009F  
             _color_click_init 41FC                _color_cardCheck 1FD0                       sprintf@f 00BA  
                   _RGB_to_HSV 180E                       sprintf@s 00AB                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C               color_cardCheck@H 00F1               color_cardCheck@S 00F9  
             color_cardCheck@V 00F5               color_cardCheck@b 00E9               color_cardCheck@c 00ED  
             color_cardCheck@g 00E5               color_cardCheck@r 00E1                  ___fladd@signs 000D  
                   _TX4STAbits 0EE8                _sendCharSerial4 4474                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F  
