

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 11:51:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 21/07/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataBANK0
   101   004A9C                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _temp
   105   004A9C  07                 	db	7
   106   000000                     _TX4REG	set	3812
   107   000000                     _RC4STAbits	set	3815
   108   000000                     _SP4BRGH	set	3814
   109   000000                     _TRISDbits	set	3972
   110   000000                     _LATEbits	set	3965
   111   000000                     _LATHbits	set	3968
   112   000000                     _SSP2CON2bits	set	3802
   113   000000                     _RX4PPS	set	3605
   114   000000                     _SSP2CLKPPS	set	3612
   115   000000                     _SSP2DATPPS	set	3613
   116   000000                     _RC7PPS	set	3689
   117   000000                     _RE2PPS	set	3700
   118   000000                     _LATAbits	set	3961
   119   000000                     _LATGbits	set	3967
   120   000000                     _TRISAbits	set	3969
   121   000000                     _TRISGbits	set	3975
   122   000000                     _TRISHbits	set	3976
   123   000000                     _PORTFbits	set	3982
   124   000000                     _TRISCbits	set	3971
   125   000000                     _TRISEbits	set	3973
   126   000000                     _TRISFbits	set	3974
   127   000000                     _LATCbits	set	3963
   128   000000                     _LATDbits	set	3964
   129   000000                     _LATFbits	set	3966
   130   000000                     _T2PR	set	4028
   131   000000                     _T2CONbits	set	4029
   132   000000                     _CCPR2H	set	4006
   133   000000                     _CCPR1H	set	4010
   134   000000                     _RE4PPS	set	3702
   135   000000                     _RG6PPS	set	3720
   136   000000                     _RD5PPS	set	3695
   137   000000                     _ANSELDbits	set	3751
   138   000000                     _ANSELFbits	set	3764
   139   000000                     _CCPR4H	set	3873
   140   000000                     _CCPR3H	set	3877
   141   000000                     _T2CLKCONbits	set	4031
   142   000000                     _T2HLTbits	set	4030
   143   000000                     _CCP1CONbits	set	4011
   144   000000                     _CCPTMRS0bits	set	4013
   145   000000                     _CCP2CONbits	set	4007
   146   000000                     _CCP3CONbits	set	3878
   147   000000                     _CCP4CONbits	set	3874
   148   000000                     _SSP2BUF	set	3797
   149   000000                     _SSP2ADD	set	3798
   150   000000                     _SSP2CON1bits	set	3801
   151   000000                     _RC4REG	set	3811
   152   000000                     _SP4BRGL	set	3813
   153   000000                     _TX4STAbits	set	3816
   154   000000                     _BAUD4CONbits	set	3817
   155   000000                     _SSP2CON2	set	3802
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _PIE4bits	set	3629
   158   000000                     _PIR4bits	set	3639
   159   000000                     _RC0PPS	set	3682
   160   000000                     _RD6PPS	set	3696
   161                           
   162                           	psect	smallconst
   163   000E00                     __psmallconst:
   164                           	callstack 0
   165   000E00  00                 	db	0
   166   000E01                     STR_1:
   167   000E01  25                 	db	37
   168   000E02  75                 	db	117	;'u'
   169   000E03  2C                 	db	44
   170   000E04  20                 	db	32
   171   000E05  00                 	db	0
   172   000E06  00                 	db	0	; dummy byte at the end
   173   000000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177   004910                     __pcinit:
   178                           	callstack 0
   179   004910                     start_initialization:
   180                           	callstack 0
   181   004910                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Initialize objects allocated to BANK0 (1 bytes)
   185                           ; load TBLPTR registers with __pidataBANK0
   186   004910  0E9C               	movlw	low __pidataBANK0
   187   004912  6EF6               	movwf	tblptrl,c
   188   004914  0E4A               	movlw	high __pidataBANK0
   189   004916  6EF7               	movwf	tblptrh,c
   190   004918  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   191   00491A  6EF8               	movwf	tblptru,c
   192   00491C  0009               	tblrd		*+	;fetch initializer
   193   00491E  CFF5 F0FD          	movff	tablat,__pdataBANK0
   194                           
   195                           ; Clear objects allocated to BANK1 (139 bytes)
   196   004922  EE01  F000         	lfsr	0,__pbssBANK1
   197   004926  0E8B               	movlw	139
   198   004928                     clear_0:
   199   004928  6AEE               	clrf	postinc0,c
   200   00492A  06E8               	decf	wreg,f,c
   201   00492C  E1FD               	bnz	clear_0
   202                           
   203                           ; Clear objects allocated to BANK0 (27 bytes)
   204   00492E  EE00  F0E2         	lfsr	0,__pbssBANK0
   205   004932  0E1B               	movlw	27
   206   004934                     clear_1:
   207   004934  6AEE               	clrf	postinc0,c
   208   004936  06E8               	decf	wreg,f,c
   209   004938  E1FD               	bnz	clear_1
   210                           
   211                           ; Clear objects allocated to COMRAM (2 bytes)
   212   00493A  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   213   00493C  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   214   00493E                     end_of_initialization:
   215                           	callstack 0
   216   00493E                     __end_of__initialization:
   217                           	callstack 0
   218   00493E  0100               	movlb	0
   219   004940  EF01  F010         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   00005E                     __pbssCOMRAM:
   223                           	callstack 0
   224   00005E                     _TxBufReadCnt:
   225                           	callstack 0
   226   00005E                     	ds	1
   227   00005F                     _TxBufWriteCnt:
   228                           	callstack 0
   229   00005F                     	ds	1
   230                           
   231                           	psect	bssBANK0
   232   0000E2                     __pbssBANK0:
   233                           	callstack 0
   234   0000E2                     _EUSART4RXbuf:
   235                           	callstack 0
   236   0000E2                     	ds	20
   237   0000F6                     _width:
   238                           	callstack 0
   239   0000F6                     	ds	2
   240   0000F8                     _prec:
   241                           	callstack 0
   242   0000F8                     	ds	2
   243   0000FA                     _flags:
   244                           	callstack 0
   245   0000FA                     	ds	1
   246   0000FB                     _RxBufReadCnt:
   247                           	callstack 0
   248   0000FB                     	ds	1
   249   0000FC                     _RxBufWriteCnt:
   250                           	callstack 0
   251   0000FC                     	ds	1
   252                           
   253                           	psect	dataBANK0
   254   0000FD                     __pdataBANK0:
   255                           	callstack 0
   256   0000FD                     _temp:
   257                           	callstack 0
   258   0000FD                     	ds	1
   259                           
   260                           	psect	bssBANK1
   261   000100                     __pbssBANK1:
   262                           	callstack 0
   263   000100                     _EUSART4TXbuf:
   264                           	callstack 0
   265   000100                     	ds	60
   266   00013C                     _dbuf:
   267                           	callstack 0
   268   00013C                     	ds	32
   269   00015C                     	ds	20
   270   000170                     _motorR:
   271                           	callstack 0
   272   000170                     	ds	9
   273   000179                     _motorL:
   274                           	callstack 0
   275   000179                     	ds	9
   276   000182                     _calibration:
   277                           	callstack 0
   278   000182                     	ds	9
   279                           
   280                           	psect	cstackBANK1
   281   00018B                     __pcstackBANK1:
   282                           	callstack 0
   283   00018B                     main@senddata:
   284                           	callstack 0
   285                           
   286                           ; 20 bytes @ 0x0
   287   00018B                     	ds	20
   288   00019F                     main@Operation_History:
   289                           	callstack 0
   290                           
   291                           ; 20 bytes @ 0x14
   292   00019F                     	ds	20
   293   0001B3                     main@length:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x28
   297   0001B3                     	ds	1
   298   0001B4                     main@distance_back:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x29
   302   0001B4                     	ds	1
   303   0001B5                     main@j:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x2A
   307   0001B5                     	ds	2
   308   0001B7                     main@Forward_Count:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x2C
   312   0001B7                     	ds	1
   313   0001B8                     main@i_1541:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x2D
   317   0001B8                     	ds	2
   318   0001BA                     main@Operation_Count:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x2F
   322   0001BA                     	ds	1
   323   0001BB                     main@Color_Value:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x30
   327   0001BB                     	ds	2
   328   0001BD                     main@i:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x32
   332   0001BD                     	ds	2
   333                           
   334                           	psect	cstackBANK0
   335   000060                     __pcstackBANK0:
   336                           	callstack 0
   337   000060                     custom_floatmodulo@quotient:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x0
   341   000060                     	ds	4
   342   000064                     custom_floatmodulo@remainder:
   343                           	callstack 0
   344                           
   345                           ; 4 bytes @ 0x4
   346   000064                     	ds	4
   347   000068                     custom_floatmodulo@intPart:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x8
   351   000068                     	ds	2
   352   00006A                     RGB_to_HSV@R:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0xA
   356   00006A                     	ds	4
   357   00006E                     RGB_to_HSV@G:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0xE
   361   00006E                     	ds	4
   362   000072                     RGB_to_HSV@B:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x12
   366   000072                     	ds	4
   367   000076                     RGB_to_HSV@C:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x16
   371   000076                     	ds	4
   372   00007A                     RGB_to_HSV@H:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x1A
   376   00007A                     	ds	1
   377   00007B                     RGB_to_HSV@S:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x1B
   381   00007B                     	ds	1
   382   00007C                     RGB_to_HSV@V:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x1C
   386   00007C                     	ds	1
   387   00007D                     RGB_to_HSV@c_norm:
   388                           	callstack 0
   389                           
   390                           ; 4 bytes @ 0x1D
   391   00007D                     	ds	4
   392   000081                     _RGB_to_HSV$2705:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x21
   396   000081                     	ds	4
   397   000085                     _RGB_to_HSV$2706:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x25
   401   000085                     	ds	4
   402   000089                     _RGB_to_HSV$2707:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x29
   406   000089                     	ds	4
   407   00008D                     _RGB_to_HSV$2709:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x2D
   411   00008D                     	ds	4
   412   000091                     _RGB_to_HSV$318:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x31
   416   000091                     	ds	4
   417   000095                     _RGB_to_HSV$319:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x35
   421   000095                     	ds	4
   422   000099                     RGB_to_HSV@minRGB:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x39
   426   000099                     	ds	4
   427   00009D                     _RGB_to_HSV$321:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x3D
   431   00009D                     	ds	4
   432   0000A1                     _RGB_to_HSV$322:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x41
   436   0000A1                     	ds	4
   437   0000A5                     _RGB_to_HSV$2708:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x45
   441   0000A5                     	ds	4
   442   0000A9                     RGB_to_HSV@H_temp:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x49
   446   0000A9                     	ds	4
   447   0000AD                     RGB_to_HSV@deltaRGB:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x4D
   451   0000AD                     	ds	4
   452   0000B1                     RGB_to_HSV@maxRGB:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x51
   456   0000B1                     	ds	4
   457   0000B5                     RGB_to_HSV@r:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x55
   461   0000B5                     	ds	4
   462   0000B9                     RGB_to_HSV@g:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x59
   466   0000B9                     	ds	4
   467   0000BD                     RGB_to_HSV@b:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x5D
   471   0000BD                     	ds	4
   472   0000C1                     color_cardCheck@r:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x61
   476   0000C1                     	ds	4
   477   0000C5                     color_cardCheck@g:
   478                           	callstack 0
   479                           
   480                           ; 4 bytes @ 0x65
   481   0000C5                     	ds	4
   482   0000C9                     color_cardCheck@b:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x69
   486   0000C9                     	ds	4
   487   0000CD                     color_cardCheck@c:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x6D
   491   0000CD                     	ds	4
   492   0000D1                     color_cardCheck@card_color:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x71
   496   0000D1                     	ds	2
   497   0000D3                     color_cardCheck@H:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x73
   501   0000D3                     	ds	4
   502   0000D7                     color_cardCheck@S:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x77
   506   0000D7                     	ds	4
   507   0000DB                     color_cardCheck@V:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x7B
   511   0000DB                     	ds	4
   512   0000DF                     ??_main:
   513                           
   514                           ; 1 bytes @ 0x7F
   515   0000DF                     	ds	3
   516                           
   517                           	psect	cstackCOMRAM
   518   000001                     __pcstackCOMRAM:
   519                           	callstack 0
   520   000001                     ??_I2C_2_Master_Idle:
   521   000001                     ?___wmul:
   522                           	callstack 0
   523   000001                     ?___awdiv:
   524                           	callstack 0
   525   000001                     ?___lwmod:
   526                           	callstack 0
   527   000001                     ?___fladd:
   528                           	callstack 0
   529   000001                     ?___fltol:
   530                           	callstack 0
   531   000001                     sendCharSerial4@charToSend:
   532                           	callstack 0
   533   000001                     adjust_calibration@calibration_label:
   534                           	callstack 0
   535   000001                     switch_calibration@calibration_index:
   536                           	callstack 0
   537   000001                     initDCmotorsPWM@PWMperiod:
   538                           	callstack 0
   539   000001                     delay_ms_function@milliseconds:
   540                           	callstack 0
   541   000001                     ___wmul@multiplier:
   542                           	callstack 0
   543   000001                     ___awdiv@dividend:
   544                           	callstack 0
   545   000001                     ___lwmod@dividend:
   546                           	callstack 0
   547   000001                     fputc@c:
   548                           	callstack 0
   549   000001                     ___fleq@ff1:
   550                           	callstack 0
   551   000001                     ___flge@ff1:
   552                           	callstack 0
   553   000001                     ___fltol@f1:
   554                           	callstack 0
   555   000001                     ___fladd@b:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x0
   559   000001                     	ds	1
   560   000002                     ??_I2C_2_Master_Read:
   561   000002                     I2C_2_Master_Write@data_byte:
   562                           	callstack 0
   563   000002                     sendStringSerial4@string:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1
   567   000002                     	ds	1
   568   000003                     ??_adjust_calibration:
   569   000003                     ??_switch_calibration:
   570   000003                     ??_delay_ms_function:
   571   000003                     color_writetoaddr@value:
   572                           	callstack 0
   573   000003                     I2C_2_Master_Read@ack:
   574                           	callstack 0
   575   000003                     fputc@fp:
   576                           	callstack 0
   577   000003                     ___wmul@multiplicand:
   578                           	callstack 0
   579   000003                     ___awdiv@divisor:
   580                           	callstack 0
   581   000003                     ___lwmod@divisor:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2
   585   000003                     	ds	1
   586   000004                     ??_fputc:
   587   000004                     color_writetoaddr@address:
   588                           	callstack 0
   589   000004                     I2C_2_Master_Read@tmp:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x3
   593   000004                     	ds	1
   594   000005                     ??_color_click_init:
   595   000005                     ??___fltol:
   596   000005                     ?_color_read_Red:
   597                           	callstack 0
   598   000005                     ?_color_read_Green:
   599                           	callstack 0
   600   000005                     ?_color_read_Blue:
   601                           	callstack 0
   602   000005                     ?_color_read_Clear:
   603                           	callstack 0
   604   000005                     ___awdiv@counter:
   605                           	callstack 0
   606   000005                     ___lwmod@counter:
   607                           	callstack 0
   608   000005                     ___wmul@product:
   609                           	callstack 0
   610   000005                     ___fleq@ff2:
   611                           	callstack 0
   612   000005                     ___flge@ff2:
   613                           	callstack 0
   614   000005                     ___fladd@a:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x4
   618   000005                     	ds	1
   619   000006                     ___awdiv@sign:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x5
   623   000006                     	ds	1
   624   000007                     ??_color_read_Red:
   625   000007                     ??_color_read_Green:
   626   000007                     ??_color_read_Blue:
   627   000007                     ??_color_read_Clear:
   628   000007                     ?___lwdiv:
   629                           	callstack 0
   630   000007                     ___awdiv@quotient:
   631                           	callstack 0
   632   000007                     ___lwdiv@dividend:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x6
   636   000007                     	ds	2
   637   000009                     ??___fladd:
   638   000009                     ??___fleq:
   639   000009                     ??___flge:
   640   000009                     ___fltol@sign1:
   641                           	callstack 0
   642   000009                     ___lwdiv@divisor:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x8
   646   000009                     	ds	1
   647   00000A                     ___fltol@exp1:
   648                           	callstack 0
   649   00000A                     color_read_Red@tmp:
   650                           	callstack 0
   651   00000A                     color_read_Green@tmp:
   652                           	callstack 0
   653   00000A                     color_read_Blue@tmp:
   654                           	callstack 0
   655   00000A                     color_read_Clear@tmp:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x9
   659   00000A                     	ds	1
   660   00000B                     ___lwdiv@quotient:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0xA
   664   00000B                     	ds	1
   665   00000C                     ?___xxtofl:
   666                           	callstack 0
   667   00000C                     ___xxtofl@val:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0xB
   671   00000C                     	ds	1
   672   00000D                     ___lwdiv@counter:
   673                           	callstack 0
   674   00000D                     ___fladd@signs:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0xC
   678   00000D                     	ds	1
   679   00000E                     ___fladd@aexp:
   680                           	callstack 0
   681   00000E                     vfpfcnvrt@fp:
   682                           	callstack 0
   683   00000E                     setMotorPWM@m:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0xD
   687   00000E                     	ds	1
   688   00000F                     ___fladd@bexp:
   689                           	callstack 0
   690   00000F                     vfpfcnvrt@fmt:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0xE
   694   00000F                     	ds	1
   695   000010                     ??_setMotorPWM:
   696   000010                     ??___xxtofl:
   697   000010                     ___fladd@grs:
   698                           	callstack 0
   699   000010                     vfpfcnvrt@ap:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0xF
   703   000010                     	ds	1
   704   000011                     ??_vfpfcnvrt:
   705                           
   706                           ; 1 bytes @ 0x10
   707   000011                     	ds	1
   708   000012                     setMotorPWM@posDuty:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x11
   712   000012                     	ds	1
   713   000013                     setMotorPWM@negDuty:
   714                           	callstack 0
   715   000013                     vfpfcnvrt@convarg:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x12
   719   000013                     	ds	1
   720   000014                     ___xxtofl@sign:
   721                           	callstack 0
   722   000014                     forward@mL:
   723                           	callstack 0
   724   000014                     backward@mL:
   725                           	callstack 0
   726   000014                     turnLEFT@mL:
   727                           	callstack 0
   728   000014                     turnRIGHT@mL:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x13
   732   000014                     	ds	1
   733   000015                     ___xxtofl@exp:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x14
   737   000015                     	ds	1
   738   000016                     forward@mR:
   739                           	callstack 0
   740   000016                     backward@mR:
   741                           	callstack 0
   742   000016                     turnLEFT@mR:
   743                           	callstack 0
   744   000016                     turnRIGHT@mR:
   745                           	callstack 0
   746   000016                     ___xxtofl@arg:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x15
   750   000016                     	ds	1
   751   000017                     vfpfcnvrt@cp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x16
   755   000017                     	ds	1
   756   000018                     ??_forward:
   757   000018                     ??_backward:
   758   000018                     ??_turnLEFT:
   759   000018                     ??_turnRIGHT:
   760   000018                     vfpfcnvrt@c:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x17
   764   000018                     	ds	1
   765   000019                     ?_vfprintf:
   766                           	callstack 0
   767   000019                     vfprintf@fp:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x18
   771   000019                     	ds	1
   772   00001A                     ?___flsub:
   773                           	callstack 0
   774   00001A                     vfprintf@fmt:
   775                           	callstack 0
   776   00001A                     ___flsub@b:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x19
   780   00001A                     	ds	1
   781   00001B                     forward@Distance_Calibration:
   782                           	callstack 0
   783   00001B                     backward@Distance_Calibration:
   784                           	callstack 0
   785   00001B                     turnLEFT@rotation_calibration:
   786                           	callstack 0
   787   00001B                     turnRIGHT@rotation_calibration:
   788                           	callstack 0
   789   00001B                     vfprintf@ap:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x1A
   793   00001B                     	ds	1
   794   00001C                     vfprintf@cfmt:
   795                           	callstack 0
   796   00001C                     forward@i:
   797                           	callstack 0
   798   00001C                     backward@i:
   799                           	callstack 0
   800   00001C                     turnLEFT@i:
   801                           	callstack 0
   802   00001C                     turnRIGHT@i:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1B
   806   00001C                     	ds	1
   807   00001D                     ?_sprintf:
   808                           	callstack 0
   809   00001D                     sprintf@s:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x1C
   813   00001D                     	ds	1
   814   00001E                     forward@j:
   815                           	callstack 0
   816   00001E                     backward@j:
   817                           	callstack 0
   818   00001E                     turnLEFT@j:
   819                           	callstack 0
   820   00001E                     turnRIGHT@j:
   821                           	callstack 0
   822   00001E                     ___flsub@a:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x1D
   826   00001E                     	ds	1
   827   00001F                     sprintf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x1E
   831   00001F                     	ds	1
   832   000020                     forward@max_power:
   833                           	callstack 0
   834   000020                     backward@max_power:
   835                           	callstack 0
   836   000020                     turnLEFT@max_power:
   837                           	callstack 0
   838   000020                     turnRIGHT@max_power:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x1F
   842   000020                     	ds	2
   843   000022                     ?___fldiv:
   844                           	callstack 0
   845   000022                     sprintf@ap:
   846                           	callstack 0
   847   000022                     forward@delay_time:
   848                           	callstack 0
   849   000022                     backward@delay_time:
   850                           	callstack 0
   851   000022                     turnLEFT@delay_time:
   852                           	callstack 0
   853   000022                     turnRIGHT@delay_time:
   854                           	callstack 0
   855   000022                     ___fldiv@b:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x21
   859   000022                     	ds	1
   860   000023                     sprintf@f:
   861                           	callstack 0
   862                           
   863                           ; 12 bytes @ 0x22
   864   000023                     	ds	3
   865   000026                     ___fldiv@a:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x25
   869   000026                     	ds	4
   870   00002A                     ??___fldiv:
   871                           
   872                           ; 1 bytes @ 0x29
   873   00002A                     	ds	4
   874   00002E                     ___fldiv@rem:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x2D
   878   00002E                     	ds	4
   879   000032                     ___fldiv@sign:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x31
   883   000032                     	ds	1
   884   000033                     ___fldiv@new_exp:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x32
   888   000033                     	ds	2
   889   000035                     ___fldiv@grs:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x34
   893   000035                     	ds	4
   894   000039                     ___fldiv@bexp:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x38
   898   000039                     	ds	1
   899   00003A                     ___fldiv@aexp:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x39
   903   00003A                     	ds	1
   904   00003B                     ?___flmul:
   905                           	callstack 0
   906   00003B                     ___flmul@b:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x3A
   910   00003B                     	ds	4
   911   00003F                     ___flmul@a:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x3E
   915   00003F                     	ds	4
   916   000043                     ??___flmul:
   917                           
   918                           ; 1 bytes @ 0x42
   919   000043                     	ds	4
   920   000047                     ___flmul@sign:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x46
   924   000047                     	ds	1
   925   000048                     ___flmul@grs:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x47
   929   000048                     	ds	4
   930   00004C                     ___flmul@aexp:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x4B
   934   00004C                     	ds	1
   935   00004D                     ___flmul@bexp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x4C
   939   00004D                     	ds	1
   940   00004E                     ___flmul@prod:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x4D
   944   00004E                     	ds	4
   945   000052                     ___flmul@temp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x51
   949   000052                     	ds	2
   950   000054                     ?_custom_floatmodulo:
   951                           	callstack 0
   952   000054                     custom_floatmodulo@x:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x53
   956   000054                     	ds	4
   957   000058                     custom_floatmodulo@y:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x57
   961   000058                     	ds	4
   962   00005C                     ?_color_cardCheck:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x5B
   966   00005C                     	ds	2
   967   00005E                     
   968                           ; 1 bytes @ 0x5D
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   971 ;;
   972 ;; *************** function _main *****************
   973 ;; Defined at:
   974 ;;		line 18 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  j               2   42[BANK1 ] int 
   979 ;;  distance_bac    1   41[BANK1 ] unsigned char 
   980 ;;  i               2   50[BANK1 ] int 
   981 ;;  i               2   45[BANK1 ] int 
   982 ;;  senddata       20    0[BANK1 ] unsigned char [20]
   983 ;;  Operation_Hi   20   20[BANK1 ] unsigned char [20]
   984 ;;  Color_Value     2   48[BANK1 ] int 
   985 ;;  PWMperiod       2    0        unsigned int 
   986 ;;  Operation_Co    1   47[BANK1 ] unsigned char 
   987 ;;  Forward_Coun    1   44[BANK1 ] unsigned char 
   988 ;;  length          1   40[BANK1 ] unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;      Totals:         0       3      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;Total ram usage:       55 bytes
  1003 ;; Hardware stack levels required when called: 5
  1004 ;; This function calls:
  1005 ;;		_adjust_calibration
  1006 ;;		_backward
  1007 ;;		_color_cardCheck
  1008 ;;		_color_click_init
  1009 ;;		_forward
  1010 ;;		_initDCmotorsPWM
  1011 ;;		_initUSART4
  1012 ;;		_sendStringSerial4
  1013 ;;		_sprintf
  1014 ;;		_switch_calibration
  1015 ;;		_turnLEFT
  1016 ;;		_turnRIGHT
  1017 ;; This function is called by:
  1018 ;;		Startup code after reset
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text0
  1023   002002                     __ptext0:
  1024                           	callstack 0
  1025   002002                     _main:
  1026                           	callstack 26
  1027   002002                     
  1028                           ;main.c: 20:     initDCmotorsPWM(PWMperiod);
  1029   002002  0E00               	movlw	0
  1030   002004  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1031   002006  0E63               	movlw	99
  1032   002008  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1033   00200A  EC8F  F022         	call	_initDCmotorsPWM	;wreg free
  1034   00200E                     
  1035                           ;main.c: 24:     motorL.power=0;
  1036   00200E  0E00               	movlw	0
  1037   002010  0101               	movlb	1	; () banked
  1038   002012  6F79               	movwf	_motorL& (0+255),b
  1039   002014                     
  1040                           ; BSR set to: 1
  1041                           ;main.c: 25:     motorL.direction=1;
  1042   002014  0E01               	movlw	1
  1043   002016  6F7A               	movwf	(_motorL+1)& (0+255),b
  1044   002018                     
  1045                           ; BSR set to: 1
  1046                           ;main.c: 26:     motorL.brakemode=1;
  1047   002018  0E01               	movlw	1
  1048   00201A  6F7B               	movwf	(_motorL+2)& (0+255),b
  1049   00201C                     
  1050                           ; BSR set to: 1
  1051                           ;main.c: 27:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1052   00201C  0EAA               	movlw	170
  1053   00201E  6F7E               	movwf	(_motorL+5)& (0+255),b
  1054   002020  0E0F               	movlw	15
  1055   002022  6F7F               	movwf	(_motorL+6)& (0+255),b
  1056   002024                     
  1057                           ; BSR set to: 1
  1058                           ;main.c: 28:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1059   002024  0EA6               	movlw	166
  1060   002026  6F80               	movwf	(_motorL+7)& (0+255),b
  1061   002028  0E0F               	movlw	15
  1062   00202A  6F81               	movwf	(_motorL+8)& (0+255),b
  1063   00202C                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
  1066   00202C  0E00               	movlw	0
  1067   00202E  6F7D               	movwf	(_motorL+4)& (0+255),b
  1068   002030  0E63               	movlw	99
  1069   002032  6F7C               	movwf	(_motorL+3)& (0+255),b
  1070   002034                     
  1071                           ; BSR set to: 1
  1072                           ;main.c: 31:     motorR.power=0;
  1073   002034  0E00               	movlw	0
  1074   002036  6F70               	movwf	_motorR& (0+255),b
  1075   002038                     
  1076                           ; BSR set to: 1
  1077                           ;main.c: 32:     motorR.direction=1;
  1078   002038  0E01               	movlw	1
  1079   00203A  6F71               	movwf	(_motorR+1)& (0+255),b
  1080   00203C                     
  1081                           ; BSR set to: 1
  1082                           ;main.c: 33:     motorR.brakemode=1;
  1083   00203C  0E01               	movlw	1
  1084   00203E  6F72               	movwf	(_motorR+2)& (0+255),b
  1085   002040                     
  1086                           ; BSR set to: 1
  1087                           ;main.c: 34:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1088   002040  0E25               	movlw	37
  1089   002042  6F75               	movwf	(_motorR+5)& (0+255),b
  1090   002044  0E0F               	movlw	15
  1091   002046  6F76               	movwf	(_motorR+6)& (0+255),b
  1092   002048                     
  1093                           ; BSR set to: 1
  1094                           ;main.c: 35:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1095   002048  0E21               	movlw	33
  1096   00204A  6F77               	movwf	(_motorR+7)& (0+255),b
  1097   00204C  0E0F               	movlw	15
  1098   00204E  6F78               	movwf	(_motorR+8)& (0+255),b
  1099   002050                     
  1100                           ; BSR set to: 1
  1101                           ;main.c: 36:     motorR.PWMperiod=PWMperiod;
  1102   002050  0E00               	movlw	0
  1103   002052  6F74               	movwf	(_motorR+4)& (0+255),b
  1104   002054  0E63               	movlw	99
  1105   002056  6F73               	movwf	(_motorR+3)& (0+255),b
  1106   002058                     
  1107                           ; BSR set to: 1
  1108                           ;main.c: 42:     TRISDbits.TRISD7 = 0;
  1109   002058  9E84               	bcf	132,7,c	;volatile
  1110   00205A                     
  1111                           ; BSR set to: 1
  1112                           ;main.c: 43:     LATDbits.LATD7 = 0;
  1113   00205A  9E7C               	bcf	124,7,c	;volatile
  1114   00205C                     
  1115                           ; BSR set to: 1
  1116                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
  1117   00205C  9688               	bcf	136,3,c	;volatile
  1118   00205E                     
  1119                           ; BSR set to: 1
  1120                           ;main.c: 47:     LATHbits.LATH3 = 0;
  1121   00205E  9680               	bcf	128,3,c	;volatile
  1122   002060                     
  1123                           ; BSR set to: 1
  1124                           ;main.c: 50:     TRISFbits.TRISF2=1;
  1125   002060  8486               	bsf	134,2,c	;volatile
  1126   002062                     
  1127                           ; BSR set to: 1
  1128                           ;main.c: 51:     ANSELFbits.ANSELF2=0;
  1129   002062  010E               	movlb	14	; () banked
  1130   002064  95B4               	bcf	180,2,b	;volatile
  1131   002066                     
  1132                           ; BSR set to: 14
  1133                           ;main.c: 54:     TRISFbits.TRISF3=1;
  1134   002066  8686               	bsf	134,3,c	;volatile
  1135   002068                     
  1136                           ; BSR set to: 14
  1137                           ;main.c: 55:     ANSELFbits.ANSELF3=0;
  1138   002068  97B4               	bcf	180,3,b	;volatile
  1139   00206A                     
  1140                           ; BSR set to: 14
  1141                           ;main.c: 59:     calibration.index = 1;
  1142   00206A  0E01               	movlw	1
  1143   00206C  0101               	movlb	1	; () banked
  1144   00206E  6F82               	movwf	_calibration& (0+255),b
  1145   002070                     
  1146                           ; BSR set to: 1
  1147                           ;main.c: 65:     calibration.right_90 = 78;
  1148   002070  0E4E               	movlw	78
  1149   002072  6F84               	movwf	(_calibration+2)& (0+255),b
  1150   002074                     
  1151                           ; BSR set to: 1
  1152                           ;main.c: 66:     calibration.left_90 = 77;
  1153   002074  0E4D               	movlw	77
  1154   002076  6F83               	movwf	(_calibration+1)& (0+255),b
  1155   002078                     
  1156                           ; BSR set to: 1
  1157                           ;main.c: 67:     calibration.left_135 = 60;
  1158   002078  0E3C               	movlw	60
  1159   00207A  6F85               	movwf	(_calibration+3)& (0+255),b
  1160   00207C                     
  1161                           ; BSR set to: 1
  1162                           ;main.c: 68:     calibration.right_135 = 10;
  1163   00207C  0E0A               	movlw	10
  1164   00207E  6F86               	movwf	(_calibration+4)& (0+255),b
  1165   002080                     
  1166                           ; BSR set to: 1
  1167                           ;main.c: 69:     calibration.forward = 70;
  1168   002080  0E46               	movlw	70
  1169   002082  6F87               	movwf	(_calibration+5)& (0+255),b
  1170   002084                     
  1171                           ; BSR set to: 1
  1172                           ;main.c: 70:     calibration.backward = 70;
  1173   002084  0E46               	movlw	70
  1174   002086  6F88               	movwf	(_calibration+6)& (0+255),b
  1175   002088                     
  1176                           ; BSR set to: 1
  1177                           ;main.c: 72:     calibration.forward_motorL = 20;
  1178   002088  0E14               	movlw	20
  1179   00208A  6F89               	movwf	(_calibration+7)& (0+255),b
  1180   00208C                     
  1181                           ; BSR set to: 1
  1182                           ;main.c: 73:     calibration.forward_motorR = 20;
  1183   00208C  0E14               	movlw	20
  1184   00208E  6F8A               	movwf	(_calibration+8)& (0+255),b
  1185   002090                     l4972:
  1186                           
  1187                           ; BSR set to: 1
  1188                           ;main.c: 82:         if(calibration.index == 1){
  1189   002090  0582               	decf	_calibration& (0+255),w,b
  1190   002092  A4D8               	btfss	status,2,c
  1191   002094  EF4E  F010         	goto	u5491
  1192   002098  EF50  F010         	goto	u5490
  1193   00209C                     u5491:
  1194   00209C  EF68  F010         	goto	l4980
  1195   0020A0                     u5490:
  1196   0020A0                     
  1197                           ; BSR set to: 1
  1198                           ;main.c: 83:             adjust_calibration(&calibration.right_90);
  1199   0020A0  0E84               	movlw	low (_calibration+2)
  1200   0020A2  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1201   0020A4  0E01               	movlw	high (_calibration+2)
  1202   0020A6  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1203   0020A8  ECE6  F01E         	call	_adjust_calibration	;wreg free
  1204   0020AC                     
  1205                           ;main.c: 84:             turnRIGHT(calibration.right_90, &motorL, &motorR);
  1206   0020AC  0E79               	movlw	low _motorL
  1207   0020AE  6E14               	movwf	turnRIGHT@mL^0,c
  1208   0020B0  0E01               	movlw	high _motorL
  1209   0020B2  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1210   0020B4  0E70               	movlw	low _motorR
  1211   0020B6  6E16               	movwf	turnRIGHT@mR^0,c
  1212   0020B8  0E01               	movlw	high _motorR
  1213   0020BA  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1214   0020BC  0101               	movlb	1	; () banked
  1215   0020BE  5184               	movf	(_calibration+2)& (0+255),w,b
  1216   0020C0  ECEC  F01A         	call	_turnRIGHT
  1217   0020C4                     
  1218                           ;main.c: 85:             switch_calibration(&calibration.index);
  1219   0020C4  0E82               	movlw	low _calibration
  1220   0020C6  6E01               	movwf	switch_calibration@calibration_index^0,c
  1221   0020C8  0E01               	movlw	high _calibration
  1222   0020CA  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1223   0020CC  ECE1  F021         	call	_switch_calibration	;wreg free
  1224   0020D0                     l4980:
  1225                           
  1226                           ;main.c: 89:         if(calibration.index == 2){
  1227   0020D0  0E02               	movlw	2
  1228   0020D2  0101               	movlb	1	; () banked
  1229   0020D4  1982               	xorwf	_calibration& (0+255),w,b
  1230   0020D6  A4D8               	btfss	status,2,c
  1231   0020D8  EF70  F010         	goto	u5501
  1232   0020DC  EF72  F010         	goto	u5500
  1233   0020E0                     u5501:
  1234   0020E0  EF8A  F010         	goto	l4988
  1235   0020E4                     u5500:
  1236   0020E4                     
  1237                           ; BSR set to: 1
  1238                           ;main.c: 90:             adjust_calibration(&calibration.left_90);
  1239   0020E4  0E83               	movlw	low (_calibration+1)
  1240   0020E6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1241   0020E8  0E01               	movlw	high (_calibration+1)
  1242   0020EA  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1243   0020EC  ECE6  F01E         	call	_adjust_calibration	;wreg free
  1244   0020F0                     
  1245                           ;main.c: 91:             turnLEFT(calibration.left_90, &motorL, &motorR);
  1246   0020F0  0E79               	movlw	low _motorL
  1247   0020F2  6E14               	movwf	turnLEFT@mL^0,c
  1248   0020F4  0E01               	movlw	high _motorL
  1249   0020F6  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1250   0020F8  0E70               	movlw	low _motorR
  1251   0020FA  6E16               	movwf	turnLEFT@mR^0,c
  1252   0020FC  0E01               	movlw	high _motorR
  1253   0020FE  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1254   002100  0101               	movlb	1	; () banked
  1255   002102  5183               	movf	(_calibration+1)& (0+255),w,b
  1256   002104  ECBF  F01B         	call	_turnLEFT
  1257   002108                     
  1258                           ;main.c: 92:             switch_calibration(&calibration.index);
  1259   002108  0E82               	movlw	low _calibration
  1260   00210A  6E01               	movwf	switch_calibration@calibration_index^0,c
  1261   00210C  0E01               	movlw	high _calibration
  1262   00210E  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1263   002110  ECE1  F021         	call	_switch_calibration	;wreg free
  1264   002114                     l4988:
  1265                           
  1266                           ;main.c: 96:         if(calibration.index == 4){
  1267   002114  0E04               	movlw	4
  1268   002116  0101               	movlb	1	; () banked
  1269   002118  1982               	xorwf	_calibration& (0+255),w,b
  1270   00211A  A4D8               	btfss	status,2,c
  1271   00211C  EF92  F010         	goto	u5511
  1272   002120  EF94  F010         	goto	u5510
  1273   002124                     u5511:
  1274   002124  EFAC  F010         	goto	l4996
  1275   002128                     u5510:
  1276   002128                     
  1277                           ; BSR set to: 1
  1278                           ;main.c: 97:             adjust_calibration(&calibration.forward);
  1279   002128  0E87               	movlw	low (_calibration+5)
  1280   00212A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1281   00212C  0E01               	movlw	high (_calibration+5)
  1282   00212E  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1283   002130  ECE6  F01E         	call	_adjust_calibration	;wreg free
  1284   002134                     
  1285                           ;main.c: 98:             forward(calibration.forward, &motorL, &motorR);
  1286   002134  0E79               	movlw	low _motorL
  1287   002136  6E14               	movwf	forward@mL^0,c
  1288   002138  0E01               	movlw	high _motorL
  1289   00213A  6E15               	movwf	(forward@mL+1)^0,c
  1290   00213C  0E70               	movlw	low _motorR
  1291   00213E  6E16               	movwf	forward@mR^0,c
  1292   002140  0E01               	movlw	high _motorR
  1293   002142  6E17               	movwf	(forward@mR+1)^0,c
  1294   002144  0101               	movlb	1	; () banked
  1295   002146  5187               	movf	(_calibration+5)& (0+255),w,b
  1296   002148  EC18  F01A         	call	_forward
  1297   00214C                     
  1298                           ;main.c: 99:             switch_calibration(&calibration.index);
  1299   00214C  0E82               	movlw	low _calibration
  1300   00214E  6E01               	movwf	switch_calibration@calibration_index^0,c
  1301   002150  0E01               	movlw	high _calibration
  1302   002152  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1303   002154  ECE1  F021         	call	_switch_calibration	;wreg free
  1304   002158                     l4996:
  1305                           
  1306                           ;main.c: 102:         if(calibration.index == 5){
  1307   002158  0E05               	movlw	5
  1308   00215A  0101               	movlb	1	; () banked
  1309   00215C  1982               	xorwf	_calibration& (0+255),w,b
  1310   00215E  A4D8               	btfss	status,2,c
  1311   002160  EFB4  F010         	goto	u5521
  1312   002164  EFB6  F010         	goto	u5520
  1313   002168                     u5521:
  1314   002168  EFCE  F010         	goto	l5004
  1315   00216C                     u5520:
  1316   00216C                     
  1317                           ; BSR set to: 1
  1318                           ;main.c: 103:             adjust_calibration(&calibration.backward);
  1319   00216C  0E88               	movlw	low (_calibration+6)
  1320   00216E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1321   002170  0E01               	movlw	high (_calibration+6)
  1322   002172  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1323   002174  ECE6  F01E         	call	_adjust_calibration	;wreg free
  1324   002178                     
  1325                           ;main.c: 104:             backward(calibration.backward, &motorL, &motorR);
  1326   002178  0E79               	movlw	low _motorL
  1327   00217A  6E14               	movwf	backward@mL^0,c
  1328   00217C  0E01               	movlw	high _motorL
  1329   00217E  6E15               	movwf	(backward@mL+1)^0,c
  1330   002180  0E70               	movlw	low _motorR
  1331   002182  6E16               	movwf	backward@mR^0,c
  1332   002184  0E01               	movlw	high _motorR
  1333   002186  6E17               	movwf	(backward@mR+1)^0,c
  1334   002188  0101               	movlb	1	; () banked
  1335   00218A  5188               	movf	(_calibration+6)& (0+255),w,b
  1336   00218C  EC92  F01C         	call	_backward
  1337   002190                     
  1338                           ;main.c: 105:             switch_calibration(&calibration.index);
  1339   002190  0E82               	movlw	low _calibration
  1340   002192  6E01               	movwf	switch_calibration@calibration_index^0,c
  1341   002194  0E01               	movlw	high _calibration
  1342   002196  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1343   002198  ECE1  F021         	call	_switch_calibration	;wreg free
  1344   00219C                     l5004:
  1345                           
  1346                           ;main.c: 113:         if(calibration.index == 3){
  1347   00219C  0E03               	movlw	3
  1348   00219E  0101               	movlb	1	; () banked
  1349   0021A0  1982               	xorwf	_calibration& (0+255),w,b
  1350   0021A2  A4D8               	btfss	status,2,c
  1351   0021A4  EFD6  F010         	goto	u5531
  1352   0021A8  EFD8  F010         	goto	u5530
  1353   0021AC                     u5531:
  1354   0021AC  EF48  F010         	goto	l4972
  1355   0021B0                     u5530:
  1356   0021B0                     
  1357                           ; BSR set to: 1
  1358                           ;main.c: 121:     char Operation_Count = 0;
  1359   0021B0  0E00               	movlw	0
  1360   0021B2  6FBA               	movwf	main@Operation_Count& (0+255),b
  1361                           
  1362                           ;main.c: 122:     char Forward_Count = 0;
  1363   0021B4  0E00               	movlw	0
  1364   0021B6  6FB7               	movwf	main@Forward_Count& (0+255),b
  1365                           
  1366                           ;main.c: 123:     char length = 20;
  1367   0021B8  0E14               	movlw	20
  1368   0021BA  6FB3               	movwf	main@length& (0+255),b
  1369   0021BC                     
  1370                           ; BSR set to: 1
  1371                           ;main.c: 124:     char Operation_History[20] = {0};
  1372   0021BC  EE21  F09F         	lfsr	2,main@Operation_History
  1373   0021C0  0E13               	movlw	19
  1374   0021C2                     u5541:
  1375   0021C2  6ADE               	clrf	postinc2,c
  1376   0021C4  06E8               	decf	wreg,f,c
  1377   0021C6  E2FD               	bc	u5541
  1378   0021C8                     
  1379                           ; BSR set to: 1
  1380                           ;main.c: 125:     int Color_Value;;main.c: 127:     color_click_init();
  1381   0021C8  EC4A  F024         	call	_color_click_init	;wreg free
  1382   0021CC                     
  1383                           ;main.c: 128:     initUSART4();
  1384   0021CC  EC1D  F025         	call	_initUSART4	;wreg free
  1385   0021D0                     l5016:
  1386                           
  1387                           ;main.c: 137:         LATHbits.LATH3 = 1;
  1388   0021D0  8680               	bsf	128,3,c	;volatile
  1389   0021D2                     
  1390                           ;main.c: 138:         LATDbits.LATD7 = 1;
  1391   0021D2  8E7C               	bsf	124,7,c	;volatile
  1392   0021D4                     
  1393                           ;main.c: 140:         forward(calibration.forward, &motorL, &motorR);
  1394   0021D4  0E79               	movlw	low _motorL
  1395   0021D6  6E14               	movwf	forward@mL^0,c
  1396   0021D8  0E01               	movlw	high _motorL
  1397   0021DA  6E15               	movwf	(forward@mL+1)^0,c
  1398   0021DC  0E70               	movlw	low _motorR
  1399   0021DE  6E16               	movwf	forward@mR^0,c
  1400   0021E0  0E01               	movlw	high _motorR
  1401   0021E2  6E17               	movwf	(forward@mR+1)^0,c
  1402   0021E4  0101               	movlb	1	; () banked
  1403   0021E6  5187               	movf	(_calibration+5)& (0+255),w,b
  1404   0021E8  EC18  F01A         	call	_forward
  1405   0021EC                     
  1406                           ;main.c: 142:         Forward_Count++;
  1407   0021EC  0101               	movlb	1	; () banked
  1408   0021EE  2BB7               	incf	main@Forward_Count& (0+255),f,b
  1409   0021F0                     
  1410                           ; BSR set to: 1
  1411                           ;main.c: 143:         Color_Value = color_cardCheck();
  1412   0021F0  EC04  F007         	call	_color_cardCheck	;wreg free
  1413   0021F4  C05C  F1BB         	movff	?_color_cardCheck,main@Color_Value
  1414   0021F8  C05D  F1BC         	movff	?_color_cardCheck+1,main@Color_Value+1
  1415   0021FC                     
  1416                           ;main.c: 145:         LATHbits.LATH3 = 0;
  1417   0021FC  9680               	bcf	128,3,c	;volatile
  1418   0021FE                     
  1419                           ;main.c: 146:         LATDbits.LATD7 = 0;
  1420   0021FE  9E7C               	bcf	124,7,c	;volatile
  1421   002200                     
  1422                           ;main.c: 149:         if(Color_Value != 0){
  1423   002200  0101               	movlb	1	; () banked
  1424   002202  51BB               	movf	main@Color_Value& (0+255),w,b
  1425   002204  11BC               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1426   002206  B4D8               	btfsc	status,2,c
  1427   002208  EF08  F011         	goto	u5551
  1428   00220C  EF0A  F011         	goto	u5550
  1429   002210                     u5551:
  1430   002210  EFBA  F012         	goto	l5110
  1431   002214                     u5550:
  1432   002214                     
  1433                           ; BSR set to: 1
  1434                           ;main.c: 150:             Operation_History[Operation_Count] = Forward_Count + 10;
  1435   002214  0E9F               	movlw	low main@Operation_History
  1436   002216  25BA               	addwf	main@Operation_Count& (0+255),w,b
  1437   002218  6ED9               	movwf	fsr2l,c
  1438   00221A  6ADA               	clrf	fsr2h,c
  1439   00221C  0E01               	movlw	high main@Operation_History
  1440   00221E  22DA               	addwfc	fsr2h,f,c
  1441   002220  51B7               	movf	main@Forward_Count& (0+255),w,b
  1442   002222  0F0A               	addlw	10
  1443   002224  6EDF               	movwf	indf2,c
  1444   002226                     
  1445                           ; BSR set to: 1
  1446                           ;main.c: 151:             Forward_Count = 0;
  1447   002226  0E00               	movlw	0
  1448   002228  6FB7               	movwf	main@Forward_Count& (0+255),b
  1449   00222A                     
  1450                           ; BSR set to: 1
  1451                           ;main.c: 152:             Operation_Count++;
  1452   00222A  2BBA               	incf	main@Operation_Count& (0+255),f,b
  1453   00222C                     
  1454                           ; BSR set to: 1
  1455                           ;main.c: 154:             if(Color_Value == 1){
  1456   00222C  05BB               	decf	main@Color_Value& (0+255),w,b
  1457   00222E  11BC               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1458   002230  A4D8               	btfss	status,2,c
  1459   002232  EF1D  F011         	goto	u5561
  1460   002236  EF1F  F011         	goto	u5560
  1461   00223A                     u5561:
  1462   00223A  EF41  F011         	goto	l5048
  1463   00223E                     u5560:
  1464   00223E                     
  1465                           ; BSR set to: 1
  1466                           ;main.c: 155:                 Operation_History[Operation_Count] = Color_Value;
  1467   00223E  0E9F               	movlw	low main@Operation_History
  1468   002240  25BA               	addwf	main@Operation_Count& (0+255),w,b
  1469   002242  6ED9               	movwf	fsr2l,c
  1470   002244  6ADA               	clrf	fsr2h,c
  1471   002246  0E01               	movlw	high main@Operation_History
  1472   002248  22DA               	addwfc	fsr2h,f,c
  1473   00224A  C1BB  FFDF         	movff	main@Color_Value,indf2
  1474   00224E                     
  1475                           ; BSR set to: 1
  1476                           ;main.c: 156:                 Operation_Count++;
  1477   00224E  2BBA               	incf	main@Operation_Count& (0+255),f,b
  1478   002250                     
  1479                           ; BSR set to: 1
  1480                           ;main.c: 157:                 backward(calibration.backward, &motorL, &motorR);
  1481   002250  0E79               	movlw	low _motorL
  1482   002252  6E14               	movwf	backward@mL^0,c
  1483   002254  0E01               	movlw	high _motorL
  1484   002256  6E15               	movwf	(backward@mL+1)^0,c
  1485   002258  0E70               	movlw	low _motorR
  1486   00225A  6E16               	movwf	backward@mR^0,c
  1487   00225C  0E01               	movlw	high _motorR
  1488   00225E  6E17               	movwf	(backward@mR+1)^0,c
  1489   002260  5188               	movf	(_calibration+6)& (0+255),w,b
  1490   002262  EC92  F01C         	call	_backward
  1491   002266                     
  1492                           ;main.c: 158:                 turnRIGHT(calibration.right_90, &motorL, &motorR);
  1493   002266  0E79               	movlw	low _motorL
  1494   002268  6E14               	movwf	turnRIGHT@mL^0,c
  1495   00226A  0E01               	movlw	high _motorL
  1496   00226C  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1497   00226E  0E70               	movlw	low _motorR
  1498   002270  6E16               	movwf	turnRIGHT@mR^0,c
  1499   002272  0E01               	movlw	high _motorR
  1500   002274  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1501   002276  0101               	movlb	1	; () banked
  1502   002278  5184               	movf	(_calibration+2)& (0+255),w,b
  1503   00227A  ECEC  F01A         	call	_turnRIGHT
  1504                           
  1505                           ;main.c: 159:             }
  1506   00227E  EFBA  F012         	goto	l5110
  1507   002282                     l5048:
  1508                           
  1509                           ; BSR set to: 1
  1510   002282  0E02               	movlw	2
  1511   002284  19BB               	xorwf	main@Color_Value& (0+255),w,b
  1512   002286  11BC               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1513   002288  A4D8               	btfss	status,2,c
  1514   00228A  EF49  F011         	goto	u5571
  1515   00228E  EF4B  F011         	goto	u5570
  1516   002292                     u5571:
  1517   002292  EF6D  F011         	goto	l5058
  1518   002296                     u5570:
  1519   002296                     
  1520                           ; BSR set to: 1
  1521                           ;main.c: 163:                 Operation_History[Operation_Count] = Color_Value;
  1522   002296  0E9F               	movlw	low main@Operation_History
  1523   002298  25BA               	addwf	main@Operation_Count& (0+255),w,b
  1524   00229A  6ED9               	movwf	fsr2l,c
  1525   00229C  6ADA               	clrf	fsr2h,c
  1526   00229E  0E01               	movlw	high main@Operation_History
  1527   0022A0  22DA               	addwfc	fsr2h,f,c
  1528   0022A2  C1BB  FFDF         	movff	main@Color_Value,indf2
  1529   0022A6                     
  1530                           ; BSR set to: 1
  1531                           ;main.c: 164:                 Operation_Count++;
  1532   0022A6  2BBA               	incf	main@Operation_Count& (0+255),f,b
  1533   0022A8                     
  1534                           ; BSR set to: 1
  1535                           ;main.c: 165:                 backward(calibration.backward, &motorL, &motorR);
  1536   0022A8  0E79               	movlw	low _motorL
  1537   0022AA  6E14               	movwf	backward@mL^0,c
  1538   0022AC  0E01               	movlw	high _motorL
  1539   0022AE  6E15               	movwf	(backward@mL+1)^0,c
  1540   0022B0  0E70               	movlw	low _motorR
  1541   0022B2  6E16               	movwf	backward@mR^0,c
  1542   0022B4  0E01               	movlw	high _motorR
  1543   0022B6  6E17               	movwf	(backward@mR+1)^0,c
  1544   0022B8  5188               	movf	(_calibration+6)& (0+255),w,b
  1545   0022BA  EC92  F01C         	call	_backward
  1546   0022BE                     
  1547                           ;main.c: 167:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1548   0022BE  0E79               	movlw	low _motorL
  1549   0022C0  6E14               	movwf	turnLEFT@mL^0,c
  1550   0022C2  0E01               	movlw	high _motorL
  1551   0022C4  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1552   0022C6  0E70               	movlw	low _motorR
  1553   0022C8  6E16               	movwf	turnLEFT@mR^0,c
  1554   0022CA  0E01               	movlw	high _motorR
  1555   0022CC  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1556   0022CE  0101               	movlb	1	; () banked
  1557   0022D0  5183               	movf	(_calibration+1)& (0+255),w,b
  1558   0022D2  ECBF  F01B         	call	_turnLEFT
  1559                           
  1560                           ;main.c: 168:             }
  1561   0022D6  EFBA  F012         	goto	l5110
  1562   0022DA                     l5058:
  1563                           
  1564                           ; BSR set to: 1
  1565   0022DA  0E03               	movlw	3
  1566   0022DC  19BB               	xorwf	main@Color_Value& (0+255),w,b
  1567   0022DE  11BC               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1568   0022E0  A4D8               	btfss	status,2,c
  1569   0022E2  EF75  F011         	goto	u5581
  1570   0022E6  EF77  F011         	goto	u5580
  1571   0022EA                     u5581:
  1572   0022EA  EFA5  F011         	goto	l5070
  1573   0022EE                     u5580:
  1574   0022EE                     
  1575                           ; BSR set to: 1
  1576                           ;main.c: 172:                 Operation_History[Operation_Count] = Color_Value;
  1577   0022EE  0E9F               	movlw	low main@Operation_History
  1578   0022F0  25BA               	addwf	main@Operation_Count& (0+255),w,b
  1579   0022F2  6ED9               	movwf	fsr2l,c
  1580   0022F4  6ADA               	clrf	fsr2h,c
  1581   0022F6  0E01               	movlw	high main@Operation_History
  1582   0022F8  22DA               	addwfc	fsr2h,f,c
  1583   0022FA  C1BB  FFDF         	movff	main@Color_Value,indf2
  1584   0022FE                     
  1585                           ; BSR set to: 1
  1586                           ;main.c: 173:                 Operation_Count++;
  1587   0022FE  2BBA               	incf	main@Operation_Count& (0+255),f,b
  1588   002300                     
  1589                           ; BSR set to: 1
  1590                           ;main.c: 174:                 backward(calibration.backward, &motorL, &motorR);
  1591   002300  0E79               	movlw	low _motorL
  1592   002302  6E14               	movwf	backward@mL^0,c
  1593   002304  0E01               	movlw	high _motorL
  1594   002306  6E15               	movwf	(backward@mL+1)^0,c
  1595   002308  0E70               	movlw	low _motorR
  1596   00230A  6E16               	movwf	backward@mR^0,c
  1597   00230C  0E01               	movlw	high _motorR
  1598   00230E  6E17               	movwf	(backward@mR+1)^0,c
  1599   002310  5188               	movf	(_calibration+6)& (0+255),w,b
  1600   002312  EC92  F01C         	call	_backward
  1601   002316                     
  1602                           ;main.c: 175:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1603   002316  0E79               	movlw	low _motorL
  1604   002318  6E14               	movwf	turnLEFT@mL^0,c
  1605   00231A  0E01               	movlw	high _motorL
  1606   00231C  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1607   00231E  0E70               	movlw	low _motorR
  1608   002320  6E16               	movwf	turnLEFT@mR^0,c
  1609   002322  0E01               	movlw	high _motorR
  1610   002324  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1611   002326  0101               	movlb	1	; () banked
  1612   002328  5183               	movf	(_calibration+1)& (0+255),w,b
  1613   00232A  ECBF  F01B         	call	_turnLEFT
  1614   00232E                     
  1615                           ;main.c: 176:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1616   00232E  0E79               	movlw	low _motorL
  1617   002330  6E14               	movwf	turnLEFT@mL^0,c
  1618   002332  0E01               	movlw	high _motorL
  1619   002334  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1620   002336  0E70               	movlw	low _motorR
  1621   002338  6E16               	movwf	turnLEFT@mR^0,c
  1622   00233A  0E01               	movlw	high _motorR
  1623   00233C  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1624   00233E  0101               	movlb	1	; () banked
  1625   002340  5183               	movf	(_calibration+1)& (0+255),w,b
  1626   002342  ECBF  F01B         	call	_turnLEFT
  1627                           
  1628                           ;main.c: 177:             }
  1629   002346  EFBA  F012         	goto	l5110
  1630   00234A                     l5070:
  1631                           
  1632                           ; BSR set to: 1
  1633   00234A  0E08               	movlw	8
  1634   00234C  19BB               	xorwf	main@Color_Value& (0+255),w,b
  1635   00234E  11BC               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1636   002350  A4D8               	btfss	status,2,c
  1637   002352  EFAD  F011         	goto	u5591
  1638   002356  EFAF  F011         	goto	u5590
  1639   00235A                     u5591:
  1640   00235A  EFBA  F012         	goto	l5110
  1641   00235E                     u5590:
  1642   00235E                     
  1643                           ; BSR set to: 1
  1644                           ;main.c: 181:                 backward(calibration.backward, &motorL, &motorR);
  1645   00235E  0E79               	movlw	low _motorL
  1646   002360  6E14               	movwf	backward@mL^0,c
  1647   002362  0E01               	movlw	high _motorL
  1648   002364  6E15               	movwf	(backward@mL+1)^0,c
  1649   002366  0E70               	movlw	low _motorR
  1650   002368  6E16               	movwf	backward@mR^0,c
  1651   00236A  0E01               	movlw	high _motorR
  1652   00236C  6E17               	movwf	(backward@mR+1)^0,c
  1653   00236E  5188               	movf	(_calibration+6)& (0+255),w,b
  1654   002370  EC92  F01C         	call	_backward
  1655                           
  1656                           ;main.c: 183:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1657   002374  0E79               	movlw	low _motorL
  1658   002376  6E14               	movwf	turnLEFT@mL^0,c
  1659   002378  0E01               	movlw	high _motorL
  1660   00237A  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1661   00237C  0E70               	movlw	low _motorR
  1662   00237E  6E16               	movwf	turnLEFT@mR^0,c
  1663   002380  0E01               	movlw	high _motorR
  1664   002382  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1665   002384  0101               	movlb	1	; () banked
  1666   002386  5183               	movf	(_calibration+1)& (0+255),w,b
  1667   002388  ECBF  F01B         	call	_turnLEFT
  1668                           
  1669                           ;main.c: 184:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1670   00238C  0E79               	movlw	low _motorL
  1671   00238E  6E14               	movwf	turnLEFT@mL^0,c
  1672   002390  0E01               	movlw	high _motorL
  1673   002392  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1674   002394  0E70               	movlw	low _motorR
  1675   002396  6E16               	movwf	turnLEFT@mR^0,c
  1676   002398  0E01               	movlw	high _motorR
  1677   00239A  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1678   00239C  0101               	movlb	1	; () banked
  1679   00239E  5183               	movf	(_calibration+1)& (0+255),w,b
  1680   0023A0  ECBF  F01B         	call	_turnLEFT
  1681                           
  1682                           ;main.c: 185:                 backward(calibration.backward, &motorL, &motorR);
  1683   0023A4  0E79               	movlw	low _motorL
  1684   0023A6  6E14               	movwf	backward@mL^0,c
  1685   0023A8  0E01               	movlw	high _motorL
  1686   0023AA  6E15               	movwf	(backward@mL+1)^0,c
  1687   0023AC  0E70               	movlw	low _motorR
  1688   0023AE  6E16               	movwf	backward@mR^0,c
  1689   0023B0  0E01               	movlw	high _motorR
  1690   0023B2  6E17               	movwf	(backward@mR+1)^0,c
  1691   0023B4  0101               	movlb	1	; () banked
  1692   0023B6  5188               	movf	(_calibration+6)& (0+255),w,b
  1693   0023B8  EC92  F01C         	call	_backward
  1694                           
  1695                           ;main.c: 186:                 backward(calibration.backward, &motorL, &motorR);
  1696   0023BC  0E79               	movlw	low _motorL
  1697   0023BE  6E14               	movwf	backward@mL^0,c
  1698   0023C0  0E01               	movlw	high _motorL
  1699   0023C2  6E15               	movwf	(backward@mL+1)^0,c
  1700   0023C4  0E70               	movlw	low _motorR
  1701   0023C6  6E16               	movwf	backward@mR^0,c
  1702   0023C8  0E01               	movlw	high _motorR
  1703   0023CA  6E17               	movwf	(backward@mR+1)^0,c
  1704   0023CC  0101               	movlb	1	; () banked
  1705   0023CE  5188               	movf	(_calibration+6)& (0+255),w,b
  1706   0023D0  EC92  F01C         	call	_backward
  1707   0023D4                     
  1708                           ;main.c: 188:                 for (int i = (length-1); i >= 0; i--) {
  1709   0023D4  0EFF               	movlw	255
  1710   0023D6  0101               	movlb	1	; () banked
  1711   0023D8  25B3               	addwf	main@length& (0+255),w,b
  1712   0023DA  6FBD               	movwf	main@i& (0+255),b
  1713   0023DC  6BBE               	clrf	(main@i+1)& (0+255),b
  1714   0023DE  0EFF               	movlw	255
  1715   0023E0  23BE               	addwfc	(main@i+1)& (0+255),f,b
  1716   0023E2                     l5076:
  1717                           
  1718                           ; BSR set to: 1
  1719   0023E2  BFBE               	btfsc	(main@i+1)& (0+255),7,b
  1720   0023E4  EFF8  F011         	goto	u5600
  1721   0023E8  EFF6  F011         	goto	u5601
  1722   0023EC                     u5601:
  1723   0023EC  EFFA  F011         	goto	l5080
  1724   0023F0                     u5600:
  1725   0023F0  EFBA  F012         	goto	l5110
  1726   0023F4                     l5080:
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;main.c: 189:                     if(Operation_History[i] == 1){
  1730   0023F4  0E9F               	movlw	low main@Operation_History
  1731   0023F6  25BD               	addwf	main@i& (0+255),w,b
  1732   0023F8  6ED9               	movwf	fsr2l,c
  1733   0023FA  0E01               	movlw	high main@Operation_History
  1734   0023FC  21BE               	addwfc	(main@i+1)& (0+255),w,b
  1735   0023FE  6EDA               	movwf	fsr2h,c
  1736   002400  04DE               	decf	postinc2,w,c
  1737   002402  A4D8               	btfss	status,2,c
  1738   002404  EF06  F012         	goto	u5611
  1739   002408  EF08  F012         	goto	u5610
  1740   00240C                     u5611:
  1741   00240C  EF21  F012         	goto	l5084
  1742   002410                     u5610:
  1743   002410                     
  1744                           ; BSR set to: 1
  1745                           ;main.c: 190:                         turnLEFT(calibration.left_90, &motorL, &motorR);
  1746   002410  0E79               	movlw	low _motorL
  1747   002412  6E14               	movwf	turnLEFT@mL^0,c
  1748   002414  0E01               	movlw	high _motorL
  1749   002416  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1750   002418  0E70               	movlw	low _motorR
  1751   00241A  6E16               	movwf	turnLEFT@mR^0,c
  1752   00241C  0E01               	movlw	high _motorR
  1753   00241E  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1754   002420  5183               	movf	(_calibration+1)& (0+255),w,b
  1755   002422  ECBF  F01B         	call	_turnLEFT
  1756                           
  1757                           ;main.c: 191:                         backward(calibration.backward, &motorL, &motorR);
  1758   002426  0E79               	movlw	low _motorL
  1759   002428  6E14               	movwf	backward@mL^0,c
  1760   00242A  0E01               	movlw	high _motorL
  1761   00242C  6E15               	movwf	(backward@mL+1)^0,c
  1762   00242E  0E70               	movlw	low _motorR
  1763   002430  6E16               	movwf	backward@mR^0,c
  1764   002432  0E01               	movlw	high _motorR
  1765   002434  6E17               	movwf	(backward@mR+1)^0,c
  1766   002436  0101               	movlb	1	; () banked
  1767   002438  5188               	movf	(_calibration+6)& (0+255),w,b
  1768   00243A  EC92  F01C         	call	_backward
  1769                           
  1770                           ;main.c: 192:                     }
  1771   00243E  EFB4  F012         	goto	l5106
  1772   002442                     l5084:
  1773                           
  1774                           ; BSR set to: 1
  1775   002442  0E9F               	movlw	low main@Operation_History
  1776   002444  25BD               	addwf	main@i& (0+255),w,b
  1777   002446  6ED9               	movwf	fsr2l,c
  1778   002448  0E01               	movlw	high main@Operation_History
  1779   00244A  21BE               	addwfc	(main@i+1)& (0+255),w,b
  1780   00244C  6EDA               	movwf	fsr2h,c
  1781   00244E  0E02               	movlw	2
  1782   002450  18DE               	xorwf	postinc2,w,c
  1783   002452  A4D8               	btfss	status,2,c
  1784   002454  EF2E  F012         	goto	u5621
  1785   002458  EF30  F012         	goto	u5620
  1786   00245C                     u5621:
  1787   00245C  EF49  F012         	goto	l5088
  1788   002460                     u5620:
  1789   002460                     
  1790                           ; BSR set to: 1
  1791                           ;main.c: 194:                         turnRIGHT(calibration.right_90, &motorL, &motorR);
  1792   002460  0E79               	movlw	low _motorL
  1793   002462  6E14               	movwf	turnRIGHT@mL^0,c
  1794   002464  0E01               	movlw	high _motorL
  1795   002466  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1796   002468  0E70               	movlw	low _motorR
  1797   00246A  6E16               	movwf	turnRIGHT@mR^0,c
  1798   00246C  0E01               	movlw	high _motorR
  1799   00246E  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1800   002470  5184               	movf	(_calibration+2)& (0+255),w,b
  1801   002472  ECEC  F01A         	call	_turnRIGHT
  1802                           
  1803                           ;main.c: 195:                         backward(calibration.backward, &motorL, &motorR);
  1804   002476  0E79               	movlw	low _motorL
  1805   002478  6E14               	movwf	backward@mL^0,c
  1806   00247A  0E01               	movlw	high _motorL
  1807   00247C  6E15               	movwf	(backward@mL+1)^0,c
  1808   00247E  0E70               	movlw	low _motorR
  1809   002480  6E16               	movwf	backward@mR^0,c
  1810   002482  0E01               	movlw	high _motorR
  1811   002484  6E17               	movwf	(backward@mR+1)^0,c
  1812   002486  0101               	movlb	1	; () banked
  1813   002488  5188               	movf	(_calibration+6)& (0+255),w,b
  1814   00248A  EC92  F01C         	call	_backward
  1815                           
  1816                           ;main.c: 196:                     }
  1817   00248E  EFB4  F012         	goto	l5106
  1818   002492                     l5088:
  1819                           
  1820                           ; BSR set to: 1
  1821   002492  0E9F               	movlw	low main@Operation_History
  1822   002494  25BD               	addwf	main@i& (0+255),w,b
  1823   002496  6ED9               	movwf	fsr2l,c
  1824   002498  0E01               	movlw	high main@Operation_History
  1825   00249A  21BE               	addwfc	(main@i+1)& (0+255),w,b
  1826   00249C  6EDA               	movwf	fsr2h,c
  1827   00249E  0E03               	movlw	3
  1828   0024A0  18DE               	xorwf	postinc2,w,c
  1829   0024A2  A4D8               	btfss	status,2,c
  1830   0024A4  EF56  F012         	goto	u5631
  1831   0024A8  EF58  F012         	goto	u5630
  1832   0024AC                     u5631:
  1833   0024AC  EF71  F012         	goto	l5092
  1834   0024B0                     u5630:
  1835   0024B0                     
  1836                           ; BSR set to: 1
  1837                           ;main.c: 199:                         turnLEFT(calibration.left_90, &motorL, &motorR);
  1838   0024B0  0E79               	movlw	low _motorL
  1839   0024B2  6E14               	movwf	turnLEFT@mL^0,c
  1840   0024B4  0E01               	movlw	high _motorL
  1841   0024B6  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1842   0024B8  0E70               	movlw	low _motorR
  1843   0024BA  6E16               	movwf	turnLEFT@mR^0,c
  1844   0024BC  0E01               	movlw	high _motorR
  1845   0024BE  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1846   0024C0  5183               	movf	(_calibration+1)& (0+255),w,b
  1847   0024C2  ECBF  F01B         	call	_turnLEFT
  1848                           
  1849                           ;main.c: 200:                         turnLEFT(calibration.left_90, &motorL, &motorR);
  1850   0024C6  0E79               	movlw	low _motorL
  1851   0024C8  6E14               	movwf	turnLEFT@mL^0,c
  1852   0024CA  0E01               	movlw	high _motorL
  1853   0024CC  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1854   0024CE  0E70               	movlw	low _motorR
  1855   0024D0  6E16               	movwf	turnLEFT@mR^0,c
  1856   0024D2  0E01               	movlw	high _motorR
  1857   0024D4  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1858   0024D6  0101               	movlb	1	; () banked
  1859   0024D8  5183               	movf	(_calibration+1)& (0+255),w,b
  1860   0024DA  ECBF  F01B         	call	_turnLEFT
  1861                           
  1862                           ;main.c: 201:                     }
  1863   0024DE  EFB4  F012         	goto	l5106
  1864   0024E2                     l5092:
  1865                           
  1866                           ; BSR set to: 1
  1867   0024E2  0E9F               	movlw	low main@Operation_History
  1868   0024E4  25BD               	addwf	main@i& (0+255),w,b
  1869   0024E6  6ED9               	movwf	fsr2l,c
  1870   0024E8  0E01               	movlw	high main@Operation_History
  1871   0024EA  21BE               	addwfc	(main@i+1)& (0+255),w,b
  1872   0024EC  6EDA               	movwf	fsr2h,c
  1873   0024EE  0E0A               	movlw	10
  1874   0024F0  64DF               	cpfsgt	indf2,c
  1875   0024F2  EF7D  F012         	goto	u5641
  1876   0024F6  EF7F  F012         	goto	u5640
  1877   0024FA                     u5641:
  1878   0024FA  EFB4  F012         	goto	l375
  1879   0024FE                     u5640:
  1880   0024FE                     
  1881                           ; BSR set to: 1
  1882                           ;main.c: 220:                         unsigned char distance_back = Operation_History[i]
      +                           - 10;
  1883   0024FE  0E9F               	movlw	low main@Operation_History
  1884   002500  25BD               	addwf	main@i& (0+255),w,b
  1885   002502  6ED9               	movwf	fsr2l,c
  1886   002504  0E01               	movlw	high main@Operation_History
  1887   002506  21BE               	addwfc	(main@i+1)& (0+255),w,b
  1888   002508  6EDA               	movwf	fsr2h,c
  1889   00250A  50DF               	movf	indf2,w,c
  1890   00250C  0FF6               	addlw	246
  1891   00250E  6FB4               	movwf	main@distance_back& (0+255),b
  1892   002510                     
  1893                           ; BSR set to: 1
  1894                           ;main.c: 221:                         for (int j = 0; j < distance_back; j++) {forward(c
      +                          alibration.forward, &motorL, &motorR);}
  1895   002510  0E00               	movlw	0
  1896   002512  6FB6               	movwf	(main@j+1)& (0+255),b
  1897   002514  0E00               	movlw	0
  1898   002516  6FB5               	movwf	main@j& (0+255),b
  1899   002518  EF9D  F012         	goto	l5102
  1900   00251C                     l5098:
  1901                           
  1902                           ; BSR set to: 0
  1903   00251C  0E79               	movlw	low _motorL
  1904   00251E  6E14               	movwf	forward@mL^0,c
  1905   002520  0E01               	movlw	high _motorL
  1906   002522  6E15               	movwf	(forward@mL+1)^0,c
  1907   002524  0E70               	movlw	low _motorR
  1908   002526  6E16               	movwf	forward@mR^0,c
  1909   002528  0E01               	movlw	high _motorR
  1910   00252A  6E17               	movwf	(forward@mR+1)^0,c
  1911   00252C  0101               	movlb	1	; () banked
  1912   00252E  5187               	movf	(_calibration+5)& (0+255),w,b
  1913   002530  EC18  F01A         	call	_forward
  1914   002534  0101               	movlb	1	; () banked
  1915   002536  4BB5               	infsnz	main@j& (0+255),f,b
  1916   002538  2BB6               	incf	(main@j+1)& (0+255),f,b
  1917   00253A                     l5102:
  1918                           
  1919                           ; BSR set to: 1
  1920   00253A  51B4               	movf	main@distance_back& (0+255),w,b
  1921   00253C  0100               	movlb	0	; () banked
  1922   00253E  6FDF               	movwf	??_main& (0+255),b
  1923   002540  6BE0               	clrf	(??_main+1)& (0+255),b
  1924   002542  51DF               	movf	??_main& (0+255),w,b
  1925   002544  0101               	movlb	1	; () banked
  1926   002546  5DB5               	subwf	main@j& (0+255),w,b
  1927   002548  51B6               	movf	(main@j+1)& (0+255),w,b
  1928   00254A  0A80               	xorlw	128
  1929   00254C  0100               	movlb	0	; () banked
  1930   00254E  6FE1               	movwf	(??_main+2)& (0+255),b
  1931   002550  51E0               	movf	(??_main+1)& (0+255),w,b
  1932   002552  0A80               	xorlw	128
  1933   002554  59E1               	subwfb	(??_main+2)& (0+255),w,b
  1934   002556  A0D8               	btfss	status,0,c
  1935   002558  EFB0  F012         	goto	u5651
  1936   00255C  EFB2  F012         	goto	u5650
  1937   002560                     u5651:
  1938   002560  EF8E  F012         	goto	l5098
  1939   002564                     u5650:
  1940   002564  EFB4  F012         	goto	l5106
  1941   002568                     l375:
  1942   002568                     l5106:
  1943                           
  1944                           ;main.c: 229:                 }
  1945   002568  0101               	movlb	1	; () banked
  1946   00256A  07BD               	decf	main@i& (0+255),f,b
  1947   00256C  A0D8               	btfss	status,0,c
  1948   00256E  07BE               	decf	(main@i+1)& (0+255),f,b
  1949   002570  EFF1  F011         	goto	l5076
  1950   002574                     l5110:
  1951                           
  1952                           ;main.c: 239:          char senddata[20];;main.c: 241:          for (int i = 0; i < 10; 
      +                          i++) {
  1953   002574  0E00               	movlw	0
  1954   002576  0101               	movlb	1	; () banked
  1955   002578  6FB9               	movwf	(main@i_1541+1)& (0+255),b
  1956   00257A  0E00               	movlw	0
  1957   00257C  6FB8               	movwf	main@i_1541& (0+255),b
  1958   00257E                     l5112:
  1959                           
  1960                           ; BSR set to: 1
  1961   00257E  BFB9               	btfsc	(main@i_1541+1)& (0+255),7,b
  1962   002580  EFCB  F012         	goto	u5661
  1963   002584  51B9               	movf	(main@i_1541+1)& (0+255),w,b
  1964   002586  E109               	bnz	u5660
  1965   002588  0E0A               	movlw	10
  1966   00258A  5DB8               	subwf	main@i_1541& (0+255),w,b
  1967   00258C  A0D8               	btfss	status,0,c
  1968   00258E  EFCB  F012         	goto	u5661
  1969   002592  EFCD  F012         	goto	u5660
  1970   002596                     u5661:
  1971   002596  EFCF  F012         	goto	l5116
  1972   00259A                     u5660:
  1973   00259A  EFE8  F010         	goto	l5016
  1974   00259E                     l5116:
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;main.c: 242:             sprintf(senddata, "%u, ", Operation_History[i]);
  1978   00259E  0E8B               	movlw	low main@senddata
  1979   0025A0  6E1D               	movwf	sprintf@s^0,c
  1980   0025A2  0E01               	movlw	high main@senddata
  1981   0025A4  6E1E               	movwf	(sprintf@s+1)^0,c
  1982   0025A6  0E01               	movlw	low STR_1
  1983   0025A8  6E1F               	movwf	sprintf@fmt^0,c
  1984   0025AA  0E9F               	movlw	low main@Operation_History
  1985   0025AC  25B8               	addwf	main@i_1541& (0+255),w,b
  1986   0025AE  6ED9               	movwf	fsr2l,c
  1987   0025B0  0E01               	movlw	high main@Operation_History
  1988   0025B2  21B9               	addwfc	(main@i_1541+1)& (0+255),w,b
  1989   0025B4  6EDA               	movwf	fsr2h,c
  1990   0025B6  50DF               	movf	indf2,w,c
  1991   0025B8  0100               	movlb	0	; () banked
  1992   0025BA  6FDF               	movwf	??_main& (0+255),b
  1993   0025BC  51DF               	movf	??_main& (0+255),w,b
  1994   0025BE  6E20               	movwf	(?_sprintf+3)^0,c
  1995   0025C0  6A21               	clrf	(?_sprintf+4)^0,c
  1996   0025C2  EC6A  F024         	call	_sprintf	;wreg free
  1997   0025C6                     
  1998                           ;main.c: 243:             sendStringSerial4(senddata);
  1999   0025C6  0E8B               	movlw	low main@senddata
  2000   0025C8  6E02               	movwf	sendStringSerial4@string^0,c
  2001   0025CA  0E01               	movlw	high main@senddata
  2002   0025CC  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2003   0025CE  ECA2  F024         	call	_sendStringSerial4	;wreg free
  2004   0025D2                     
  2005                           ;main.c: 244:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2006   0025D2  0E05               	movlw	5
  2007   0025D4  0100               	movlb	0	; () banked
  2008   0025D6  6FE0               	movwf	(??_main+1)& (0+255),b
  2009   0025D8  0E0F               	movlw	15
  2010   0025DA  6FDF               	movwf	??_main& (0+255),b
  2011   0025DC  0EF1               	movlw	241
  2012   0025DE                     u5677:
  2013   0025DE  2EE8               	decfsz	wreg,f,c
  2014   0025E0  D7FE               	bra	u5677
  2015   0025E2  2FDF               	decfsz	??_main& (0+255),f,b
  2016   0025E4  D7FC               	bra	u5677
  2017   0025E6  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  2018   0025E8  D7FA               	bra	u5677
  2019   0025EA                     
  2020                           ;main.c: 245:         }
  2021   0025EA  0101               	movlb	1	; () banked
  2022   0025EC  4BB8               	infsnz	main@i_1541& (0+255),f,b
  2023   0025EE  2BB9               	incf	(main@i_1541+1)& (0+255),f,b
  2024   0025F0  EFBF  F012         	goto	l5112
  2025   0025F4  EF00  F000         	goto	start
  2026   0025F8                     __end_of_main:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _turnRIGHT *****************
  2030 ;; Defined at:
  2031 ;;		line 244 in file "dc_motor_v1.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  rotation_cal    1    wreg     unsigned char 
  2034 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  2035 ;;		 -> motorL(9), 
  2036 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  2037 ;;		 -> motorR(9), 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  rotation_cal    1   26[COMRAM] unsigned char 
  2040 ;;  j               2   29[COMRAM] int 
  2041 ;;  i               2   27[COMRAM] int 
  2042 ;;  delay_time      2   33[COMRAM] int 
  2043 ;;  max_power       2   31[COMRAM] int 
  2044 ;;  acceleration    2    0        int 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;Total ram usage:       16 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 2
  2061 ;; This function calls:
  2062 ;;		___awdiv
  2063 ;;		_delay_ms_function
  2064 ;;		_setMotorPWM
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text1
  2071   0035D8                     __ptext1:
  2072                           	callstack 0
  2073   0035D8                     _turnRIGHT:
  2074                           	callstack 28
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;incstack = 0
  2078                           ;turnRIGHT@rotation_calibration stored from wreg
  2079   0035D8  6E1B               	movwf	turnRIGHT@rotation_calibration^0,c
  2080   0035DA                     
  2081                           ;dc_motor_v1.c: 245:     mL->direction = 1;
  2082   0035DA  EE20 F001          	lfsr	2,1
  2083   0035DE  5014               	movf	turnRIGHT@mL^0,w,c
  2084   0035E0  26D9               	addwf	fsr2l,f,c
  2085   0035E2  5015               	movf	(turnRIGHT@mL+1)^0,w,c
  2086   0035E4  22DA               	addwfc	fsr2h,f,c
  2087   0035E6  0E01               	movlw	1
  2088   0035E8  6EDF               	movwf	indf2,c
  2089                           
  2090                           ;dc_motor_v1.c: 246:     mR->direction = 0;
  2091   0035EA  EE20 F001          	lfsr	2,1
  2092   0035EE  5016               	movf	turnRIGHT@mR^0,w,c
  2093   0035F0  26D9               	addwf	fsr2l,f,c
  2094   0035F2  5017               	movf	(turnRIGHT@mR+1)^0,w,c
  2095   0035F4  22DA               	addwfc	fsr2h,f,c
  2096   0035F6  6ADF               	clrf	indf2,c
  2097   0035F8                     
  2098                           ;dc_motor_v1.c: 248:    int max_power = 20;
  2099   0035F8  0E00               	movlw	0
  2100   0035FA  6E21               	movwf	(turnRIGHT@max_power+1)^0,c
  2101   0035FC  0E14               	movlw	20
  2102   0035FE  6E20               	movwf	turnRIGHT@max_power^0,c
  2103   003600                     
  2104                           ;dc_motor_v1.c: 250:     int delay_time = acceleration_time/max_power;
  2105   003600  0E00               	movlw	0
  2106   003602  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2107   003604  0E64               	movlw	100
  2108   003606  6E01               	movwf	___awdiv@dividend^0,c
  2109   003608  0E00               	movlw	0
  2110   00360A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2111   00360C  0E14               	movlw	20
  2112   00360E  6E03               	movwf	___awdiv@divisor^0,c
  2113   003610  EC22  F021         	call	___awdiv	;wreg free
  2114   003614  C001  F022         	movff	?___awdiv,turnRIGHT@delay_time
  2115   003618  C002  F023         	movff	?___awdiv+1,turnRIGHT@delay_time+1
  2116   00361C                     
  2117                           ;dc_motor_v1.c: 253:     for(int i=0; i< max_power; i++){
  2118   00361C  0E00               	movlw	0
  2119   00361E  6E1D               	movwf	(turnRIGHT@i+1)^0,c
  2120   003620  0E00               	movlw	0
  2121   003622  6E1C               	movwf	turnRIGHT@i^0,c
  2122   003624  EF40  F01B         	goto	l4864
  2123   003628                     l4854:
  2124                           
  2125                           ;dc_motor_v1.c: 254:         mL->power = mL->power + 1;
  2126   003628  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2127   00362C  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2128   003630  50DF               	movf	indf2,w,c
  2129   003632  6E18               	movwf	??_turnRIGHT^0,c
  2130   003634  2818               	incf	??_turnRIGHT^0,w,c
  2131   003636  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2132   00363A  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2133   00363E  6EDF               	movwf	indf2,c
  2134                           
  2135                           ;dc_motor_v1.c: 255:         mR->power = mR->power + 1 ;
  2136   003640  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2137   003644  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2138   003648  50DF               	movf	indf2,w,c
  2139   00364A  6E18               	movwf	??_turnRIGHT^0,c
  2140   00364C  2818               	incf	??_turnRIGHT^0,w,c
  2141   00364E  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2142   003652  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2143   003656  6EDF               	movwf	indf2,c
  2144   003658                     
  2145                           ;dc_motor_v1.c: 256:         setMotorPWM(mR);
  2146   003658  C016  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
  2147   00365C  C017  F00F         	movff	turnRIGHT@mR+1,setMotorPWM@m+1
  2148   003660  EC30  F01E         	call	_setMotorPWM	;wreg free
  2149   003664                     
  2150                           ;dc_motor_v1.c: 257:         setMotorPWM(mL);
  2151   003664  C014  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
  2152   003668  C015  F00F         	movff	turnRIGHT@mL+1,setMotorPWM@m+1
  2153   00366C  EC30  F01E         	call	_setMotorPWM	;wreg free
  2154   003670                     
  2155                           ;dc_motor_v1.c: 258:         delay_ms_function(delay_time);
  2156   003670  C022  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
  2157   003674  C023  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
  2158   003678  ECBA  F024         	call	_delay_ms_function	;wreg free
  2159   00367C                     
  2160                           ;dc_motor_v1.c: 259:     }
  2161   00367C  4A1C               	infsnz	turnRIGHT@i^0,f,c
  2162   00367E  2A1D               	incf	(turnRIGHT@i+1)^0,f,c
  2163   003680                     l4864:
  2164   003680  5020               	movf	turnRIGHT@max_power^0,w,c
  2165   003682  5C1C               	subwf	turnRIGHT@i^0,w,c
  2166   003684  501D               	movf	(turnRIGHT@i+1)^0,w,c
  2167   003686  0A80               	xorlw	128
  2168   003688  6E18               	movwf	??_turnRIGHT^0,c
  2169   00368A  5021               	movf	(turnRIGHT@max_power+1)^0,w,c
  2170   00368C  0A80               	xorlw	128
  2171   00368E  5818               	subwfb	??_turnRIGHT^0,w,c
  2172   003690  A0D8               	btfss	status,0,c
  2173   003692  EF4D  F01B         	goto	u5391
  2174   003696  EF4F  F01B         	goto	u5390
  2175   00369A                     u5391:
  2176   00369A  EF14  F01B         	goto	l4854
  2177   00369E                     u5390:
  2178   00369E                     
  2179                           ;dc_motor_v1.c: 262:     for(int j=0; j<rotation_calibration; j++){
  2180   00369E  0E00               	movlw	0
  2181   0036A0  6E1F               	movwf	(turnRIGHT@j+1)^0,c
  2182   0036A2  0E00               	movlw	0
  2183   0036A4  6E1E               	movwf	turnRIGHT@j^0,c
  2184   0036A6  EF5E  F01B         	goto	l272
  2185   0036AA                     l4868:
  2186                           
  2187                           ;dc_motor_v1.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2188   0036AA  0ED0               	movlw	208
  2189   0036AC  6E18               	movwf	??_turnRIGHT^0,c
  2190   0036AE  0ECA               	movlw	202
  2191   0036B0                     u5687:
  2192   0036B0  2EE8               	decfsz	wreg,f,c
  2193   0036B2  D7FE               	bra	u5687
  2194   0036B4  2E18               	decfsz	??_turnRIGHT^0,f,c
  2195   0036B6  D7FC               	bra	u5687
  2196   0036B8                     
  2197                           ;dc_motor_v1.c: 264:     }
  2198   0036B8  4A1E               	infsnz	turnRIGHT@j^0,f,c
  2199   0036BA  2A1F               	incf	(turnRIGHT@j+1)^0,f,c
  2200   0036BC                     l272:
  2201   0036BC  501B               	movf	turnRIGHT@rotation_calibration^0,w,c
  2202   0036BE  6E18               	movwf	??_turnRIGHT^0,c
  2203   0036C0  6A19               	clrf	(??_turnRIGHT+1)^0,c
  2204   0036C2  5018               	movf	??_turnRIGHT^0,w,c
  2205   0036C4  5C1E               	subwf	turnRIGHT@j^0,w,c
  2206   0036C6  501F               	movf	(turnRIGHT@j+1)^0,w,c
  2207   0036C8  0A80               	xorlw	128
  2208   0036CA  6E1A               	movwf	(??_turnRIGHT+2)^0,c
  2209   0036CC  5019               	movf	(??_turnRIGHT+1)^0,w,c
  2210   0036CE  0A80               	xorlw	128
  2211   0036D0  581A               	subwfb	(??_turnRIGHT+2)^0,w,c
  2212   0036D2  A0D8               	btfss	status,0,c
  2213   0036D4  EF6E  F01B         	goto	u5401
  2214   0036D8  EF70  F01B         	goto	u5400
  2215   0036DC                     u5401:
  2216   0036DC  EF55  F01B         	goto	l4868
  2217   0036E0                     u5400:
  2218   0036E0  EFA6  F01B         	goto	l4886
  2219   0036E4                     l4872:
  2220                           
  2221                           ;dc_motor_v1.c: 268:         if(mR->power> 0 ){
  2222   0036E4  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2223   0036E8  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2224   0036EC  50DF               	movf	indf2,w,c
  2225   0036EE  B4D8               	btfsc	status,2,c
  2226   0036F0  EF7C  F01B         	goto	u5411
  2227   0036F4  EF7E  F01B         	goto	u5410
  2228   0036F8                     u5411:
  2229   0036F8  EF83  F01B         	goto	l4876
  2230   0036FC                     u5410:
  2231   0036FC                     
  2232                           ;dc_motor_v1.c: 269:             mR->power--;
  2233   0036FC  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2234   003700  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2235   003704  06DF               	decf	indf2,f,c
  2236   003706                     l4876:
  2237                           
  2238                           ;dc_motor_v1.c: 271:         if(mL->power> 0 ){
  2239   003706  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2240   00370A  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2241   00370E  50DF               	movf	indf2,w,c
  2242   003710  B4D8               	btfsc	status,2,c
  2243   003712  EF8D  F01B         	goto	u5421
  2244   003716  EF8F  F01B         	goto	u5420
  2245   00371A                     u5421:
  2246   00371A  EF94  F01B         	goto	l4880
  2247   00371E                     u5420:
  2248   00371E                     
  2249                           ;dc_motor_v1.c: 272:             mL->power--;
  2250   00371E  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2251   003722  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2252   003726  06DF               	decf	indf2,f,c
  2253   003728                     l4880:
  2254                           
  2255                           ;dc_motor_v1.c: 274:         setMotorPWM(mR);
  2256   003728  C016  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
  2257   00372C  C017  F00F         	movff	turnRIGHT@mR+1,setMotorPWM@m+1
  2258   003730  EC30  F01E         	call	_setMotorPWM	;wreg free
  2259   003734                     
  2260                           ;dc_motor_v1.c: 275:         setMotorPWM(mL);
  2261   003734  C014  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
  2262   003738  C015  F00F         	movff	turnRIGHT@mL+1,setMotorPWM@m+1
  2263   00373C  EC30  F01E         	call	_setMotorPWM	;wreg free
  2264   003740                     
  2265                           ;dc_motor_v1.c: 276:         delay_ms_function(delay_time);
  2266   003740  C022  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
  2267   003744  C023  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
  2268   003748  ECBA  F024         	call	_delay_ms_function	;wreg free
  2269   00374C                     l4886:
  2270                           
  2271                           ;dc_motor_v1.c: 267:     while(mL->power || mR->power > 0){
  2272   00374C  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2273   003750  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2274   003754  50DF               	movf	indf2,w,c
  2275   003756  A4D8               	btfss	status,2,c
  2276   003758  EFB0  F01B         	goto	u5431
  2277   00375C  EFB2  F01B         	goto	u5430
  2278   003760                     u5431:
  2279   003760  EF72  F01B         	goto	l4872
  2280   003764                     u5430:
  2281   003764  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2282   003768  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2283   00376C  50DF               	movf	indf2,w,c
  2284   00376E  A4D8               	btfss	status,2,c
  2285   003770  EFBC  F01B         	goto	u5441
  2286   003774  EFBE  F01B         	goto	u5440
  2287   003778                     u5441:
  2288   003778  EF72  F01B         	goto	l4872
  2289   00377C                     u5440:
  2290   00377C  0012               	return		;funcret
  2291   00377E                     __end_of_turnRIGHT:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function _turnLEFT *****************
  2295 ;; Defined at:
  2296 ;;		line 206 in file "dc_motor_v1.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  rotation_cal    1    wreg     unsigned char 
  2299 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  2300 ;;		 -> motorL(9), 
  2301 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  2302 ;;		 -> motorR(9), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  rotation_cal    1   26[COMRAM] unsigned char 
  2305 ;;  j               2   29[COMRAM] int 
  2306 ;;  i               2   27[COMRAM] int 
  2307 ;;  delay_time      2   33[COMRAM] int 
  2308 ;;  max_power       2   31[COMRAM] int 
  2309 ;;  acceleration    2    0        int 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2320 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2321 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2323 ;;Total ram usage:       16 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 2
  2326 ;; This function calls:
  2327 ;;		___awdiv
  2328 ;;		_delay_ms_function
  2329 ;;		_setMotorPWM
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text2
  2336   00377E                     __ptext2:
  2337                           	callstack 0
  2338   00377E                     _turnLEFT:
  2339                           	callstack 28
  2340                           
  2341                           ;incstack = 0
  2342                           ;turnLEFT@rotation_calibration stored from wreg
  2343   00377E  6E1B               	movwf	turnLEFT@rotation_calibration^0,c
  2344   003780                     
  2345                           ;dc_motor_v1.c: 207:     mL->direction = 0;
  2346   003780  EE20 F001          	lfsr	2,1
  2347   003784  5014               	movf	turnLEFT@mL^0,w,c
  2348   003786  26D9               	addwf	fsr2l,f,c
  2349   003788  5015               	movf	(turnLEFT@mL+1)^0,w,c
  2350   00378A  22DA               	addwfc	fsr2h,f,c
  2351   00378C  6ADF               	clrf	indf2,c
  2352                           
  2353                           ;dc_motor_v1.c: 208:     mR->direction = 1;
  2354   00378E  EE20 F001          	lfsr	2,1
  2355   003792  5016               	movf	turnLEFT@mR^0,w,c
  2356   003794  26D9               	addwf	fsr2l,f,c
  2357   003796  5017               	movf	(turnLEFT@mR+1)^0,w,c
  2358   003798  22DA               	addwfc	fsr2h,f,c
  2359   00379A  0E01               	movlw	1
  2360   00379C  6EDF               	movwf	indf2,c
  2361   00379E                     
  2362                           ;dc_motor_v1.c: 210:     int max_power = 20;
  2363   00379E  0E00               	movlw	0
  2364   0037A0  6E21               	movwf	(turnLEFT@max_power+1)^0,c
  2365   0037A2  0E14               	movlw	20
  2366   0037A4  6E20               	movwf	turnLEFT@max_power^0,c
  2367   0037A6                     
  2368                           ;dc_motor_v1.c: 212:     int delay_time = acceleration_time/max_power;
  2369   0037A6  0E00               	movlw	0
  2370   0037A8  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2371   0037AA  0E64               	movlw	100
  2372   0037AC  6E01               	movwf	___awdiv@dividend^0,c
  2373   0037AE  0E00               	movlw	0
  2374   0037B0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2375   0037B2  0E14               	movlw	20
  2376   0037B4  6E03               	movwf	___awdiv@divisor^0,c
  2377   0037B6  EC22  F021         	call	___awdiv	;wreg free
  2378   0037BA  C001  F022         	movff	?___awdiv,turnLEFT@delay_time
  2379   0037BE  C002  F023         	movff	?___awdiv+1,turnLEFT@delay_time+1
  2380   0037C2                     
  2381                           ;dc_motor_v1.c: 215:     for(int i=0; i< max_power; i++){
  2382   0037C2  0E00               	movlw	0
  2383   0037C4  6E1D               	movwf	(turnLEFT@i+1)^0,c
  2384   0037C6  0E00               	movlw	0
  2385   0037C8  6E1C               	movwf	turnLEFT@i^0,c
  2386   0037CA  EF13  F01C         	goto	l4818
  2387   0037CE                     l4808:
  2388                           
  2389                           ;dc_motor_v1.c: 216:         mL->power = mL->power + 1;
  2390   0037CE  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2391   0037D2  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2392   0037D6  50DF               	movf	indf2,w,c
  2393   0037D8  6E18               	movwf	??_turnLEFT^0,c
  2394   0037DA  2818               	incf	??_turnLEFT^0,w,c
  2395   0037DC  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2396   0037E0  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2397   0037E4  6EDF               	movwf	indf2,c
  2398                           
  2399                           ;dc_motor_v1.c: 217:         mR->power = mR->power + 1 ;
  2400   0037E6  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2401   0037EA  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2402   0037EE  50DF               	movf	indf2,w,c
  2403   0037F0  6E18               	movwf	??_turnLEFT^0,c
  2404   0037F2  2818               	incf	??_turnLEFT^0,w,c
  2405   0037F4  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2406   0037F8  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2407   0037FC  6EDF               	movwf	indf2,c
  2408   0037FE                     
  2409                           ;dc_motor_v1.c: 218:         setMotorPWM(mR);
  2410   0037FE  C016  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  2411   003802  C017  F00F         	movff	turnLEFT@mR+1,setMotorPWM@m+1
  2412   003806  EC30  F01E         	call	_setMotorPWM	;wreg free
  2413   00380A                     
  2414                           ;dc_motor_v1.c: 219:         setMotorPWM(mL);
  2415   00380A  C014  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  2416   00380E  C015  F00F         	movff	turnLEFT@mL+1,setMotorPWM@m+1
  2417   003812  EC30  F01E         	call	_setMotorPWM	;wreg free
  2418   003816                     
  2419                           ;dc_motor_v1.c: 220:         delay_ms_function(delay_time);
  2420   003816  C022  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  2421   00381A  C023  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  2422   00381E  ECBA  F024         	call	_delay_ms_function	;wreg free
  2423   003822                     
  2424                           ;dc_motor_v1.c: 221:     }
  2425   003822  4A1C               	infsnz	turnLEFT@i^0,f,c
  2426   003824  2A1D               	incf	(turnLEFT@i+1)^0,f,c
  2427   003826                     l4818:
  2428   003826  5020               	movf	turnLEFT@max_power^0,w,c
  2429   003828  5C1C               	subwf	turnLEFT@i^0,w,c
  2430   00382A  501D               	movf	(turnLEFT@i+1)^0,w,c
  2431   00382C  0A80               	xorlw	128
  2432   00382E  6E18               	movwf	??_turnLEFT^0,c
  2433   003830  5021               	movf	(turnLEFT@max_power+1)^0,w,c
  2434   003832  0A80               	xorlw	128
  2435   003834  5818               	subwfb	??_turnLEFT^0,w,c
  2436   003836  A0D8               	btfss	status,0,c
  2437   003838  EF20  F01C         	goto	u5331
  2438   00383C  EF22  F01C         	goto	u5330
  2439   003840                     u5331:
  2440   003840  EFE7  F01B         	goto	l4808
  2441   003844                     u5330:
  2442   003844                     
  2443                           ;dc_motor_v1.c: 224:     for(int j=0; j<rotation_calibration; j++){
  2444   003844  0E00               	movlw	0
  2445   003846  6E1F               	movwf	(turnLEFT@j+1)^0,c
  2446   003848  0E00               	movlw	0
  2447   00384A  6E1E               	movwf	turnLEFT@j^0,c
  2448   00384C  EF31  F01C         	goto	l258
  2449   003850                     l4822:
  2450                           
  2451                           ;dc_motor_v1.c: 225:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2452   003850  0ED0               	movlw	208
  2453   003852  6E18               	movwf	??_turnLEFT^0,c
  2454   003854  0ECA               	movlw	202
  2455   003856                     u5697:
  2456   003856  2EE8               	decfsz	wreg,f,c
  2457   003858  D7FE               	bra	u5697
  2458   00385A  2E18               	decfsz	??_turnLEFT^0,f,c
  2459   00385C  D7FC               	bra	u5697
  2460   00385E                     
  2461                           ;dc_motor_v1.c: 226:     }
  2462   00385E  4A1E               	infsnz	turnLEFT@j^0,f,c
  2463   003860  2A1F               	incf	(turnLEFT@j+1)^0,f,c
  2464   003862                     l258:
  2465   003862  501B               	movf	turnLEFT@rotation_calibration^0,w,c
  2466   003864  6E18               	movwf	??_turnLEFT^0,c
  2467   003866  6A19               	clrf	(??_turnLEFT+1)^0,c
  2468   003868  5018               	movf	??_turnLEFT^0,w,c
  2469   00386A  5C1E               	subwf	turnLEFT@j^0,w,c
  2470   00386C  501F               	movf	(turnLEFT@j+1)^0,w,c
  2471   00386E  0A80               	xorlw	128
  2472   003870  6E1A               	movwf	(??_turnLEFT+2)^0,c
  2473   003872  5019               	movf	(??_turnLEFT+1)^0,w,c
  2474   003874  0A80               	xorlw	128
  2475   003876  581A               	subwfb	(??_turnLEFT+2)^0,w,c
  2476   003878  A0D8               	btfss	status,0,c
  2477   00387A  EF41  F01C         	goto	u5341
  2478   00387E  EF43  F01C         	goto	u5340
  2479   003882                     u5341:
  2480   003882  EF28  F01C         	goto	l4822
  2481   003886                     u5340:
  2482   003886  EF79  F01C         	goto	l4840
  2483   00388A                     l4826:
  2484                           
  2485                           ;dc_motor_v1.c: 230:         if(mR->power> 0 ){
  2486   00388A  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2487   00388E  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2488   003892  50DF               	movf	indf2,w,c
  2489   003894  B4D8               	btfsc	status,2,c
  2490   003896  EF4F  F01C         	goto	u5351
  2491   00389A  EF51  F01C         	goto	u5350
  2492   00389E                     u5351:
  2493   00389E  EF56  F01C         	goto	l4830
  2494   0038A2                     u5350:
  2495   0038A2                     
  2496                           ;dc_motor_v1.c: 231:             mR->power--;
  2497   0038A2  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2498   0038A6  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2499   0038AA  06DF               	decf	indf2,f,c
  2500   0038AC                     l4830:
  2501                           
  2502                           ;dc_motor_v1.c: 233:         if(mL->power> 0 ){
  2503   0038AC  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2504   0038B0  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2505   0038B4  50DF               	movf	indf2,w,c
  2506   0038B6  B4D8               	btfsc	status,2,c
  2507   0038B8  EF60  F01C         	goto	u5361
  2508   0038BC  EF62  F01C         	goto	u5360
  2509   0038C0                     u5361:
  2510   0038C0  EF67  F01C         	goto	l4834
  2511   0038C4                     u5360:
  2512   0038C4                     
  2513                           ;dc_motor_v1.c: 234:             mL->power--;
  2514   0038C4  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2515   0038C8  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2516   0038CC  06DF               	decf	indf2,f,c
  2517   0038CE                     l4834:
  2518                           
  2519                           ;dc_motor_v1.c: 236:         setMotorPWM(mR);
  2520   0038CE  C016  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  2521   0038D2  C017  F00F         	movff	turnLEFT@mR+1,setMotorPWM@m+1
  2522   0038D6  EC30  F01E         	call	_setMotorPWM	;wreg free
  2523   0038DA                     
  2524                           ;dc_motor_v1.c: 237:         setMotorPWM(mL);
  2525   0038DA  C014  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  2526   0038DE  C015  F00F         	movff	turnLEFT@mL+1,setMotorPWM@m+1
  2527   0038E2  EC30  F01E         	call	_setMotorPWM	;wreg free
  2528   0038E6                     
  2529                           ;dc_motor_v1.c: 238:         delay_ms_function(delay_time);
  2530   0038E6  C022  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  2531   0038EA  C023  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  2532   0038EE  ECBA  F024         	call	_delay_ms_function	;wreg free
  2533   0038F2                     l4840:
  2534                           
  2535                           ;dc_motor_v1.c: 229:     while(mL->power || mR->power > 0){
  2536   0038F2  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2537   0038F6  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2538   0038FA  50DF               	movf	indf2,w,c
  2539   0038FC  A4D8               	btfss	status,2,c
  2540   0038FE  EF83  F01C         	goto	u5371
  2541   003902  EF85  F01C         	goto	u5370
  2542   003906                     u5371:
  2543   003906  EF45  F01C         	goto	l4826
  2544   00390A                     u5370:
  2545   00390A  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2546   00390E  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2547   003912  50DF               	movf	indf2,w,c
  2548   003914  A4D8               	btfss	status,2,c
  2549   003916  EF8F  F01C         	goto	u5381
  2550   00391A  EF91  F01C         	goto	u5380
  2551   00391E                     u5381:
  2552   00391E  EF45  F01C         	goto	l4826
  2553   003922                     u5380:
  2554   003922  0012               	return		;funcret
  2555   003924                     __end_of_turnLEFT:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _switch_calibration *****************
  2559 ;; Defined at:
  2560 ;;		line 44 in file "calibration.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  calibration_    2    0[COMRAM] PTR int 
  2563 ;;		 -> calibration(9), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;Total ram usage:        4 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text3
  2589   0043C2                     __ptext3:
  2590                           	callstack 0
  2591   0043C2                     _switch_calibration:
  2592                           	callstack 30
  2593   0043C2                     l137:
  2594                           
  2595                           ;calibration.c: 46:         if(!PORTFbits.RF2){
  2596   0043C2  B48E               	btfsc	142,2,c	;volatile
  2597   0043C4  EFE6  F021         	goto	u5191
  2598   0043C8  EFE8  F021         	goto	u5190
  2599   0043CC                     u5191:
  2600   0043CC  EF18  F022         	goto	l138
  2601   0043D0                     u5190:
  2602   0043D0                     
  2603                           ;calibration.c: 47:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2604   0043D0  0E11               	movlw	17
  2605   0043D2  6E04               	movwf	(??_switch_calibration+1)^0,c
  2606   0043D4  0E3C               	movlw	60
  2607   0043D6  6E03               	movwf	??_switch_calibration^0,c
  2608   0043D8  0ECB               	movlw	203
  2609   0043DA                     u5707:
  2610   0043DA  2EE8               	decfsz	wreg,f,c
  2611   0043DC  D7FE               	bra	u5707
  2612   0043DE  2E03               	decfsz	??_switch_calibration^0,f,c
  2613   0043E0  D7FC               	bra	u5707
  2614   0043E2  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2615   0043E4  D7FA               	bra	u5707
  2616   0043E6  0000               	nop	
  2617   0043E8                     
  2618                           ;calibration.c: 48:             *calibration_index = *calibration_index + 1;
  2619   0043E8  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  2620   0043EC  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  2621   0043F0  CFDE F003          	movff	postinc2,??_switch_calibration
  2622   0043F4  CFDD F004          	movff	postdec2,??_switch_calibration+1
  2623   0043F8  0E01               	movlw	1
  2624   0043FA  2603               	addwf	??_switch_calibration^0,f,c
  2625   0043FC  0E00               	movlw	0
  2626   0043FE  2204               	addwfc	(??_switch_calibration+1)^0,f,c
  2627   004400  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  2628   004404  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  2629   004408  C003  FFDE         	movff	??_switch_calibration,postinc2
  2630   00440C  C004  FFDD         	movff	??_switch_calibration+1,postdec2
  2631   004410                     
  2632                           ;calibration.c: 49:             LATDbits.LATD7 = 1;
  2633   004410  8E7C               	bsf	124,7,c	;volatile
  2634   004412                     
  2635                           ;calibration.c: 50:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2636   004412  0E11               	movlw	17
  2637   004414  6E04               	movwf	(??_switch_calibration+1)^0,c
  2638   004416  0E3C               	movlw	60
  2639   004418  6E03               	movwf	??_switch_calibration^0,c
  2640   00441A  0ECB               	movlw	203
  2641   00441C                     u5717:
  2642   00441C  2EE8               	decfsz	wreg,f,c
  2643   00441E  D7FE               	bra	u5717
  2644   004420  2E03               	decfsz	??_switch_calibration^0,f,c
  2645   004422  D7FC               	bra	u5717
  2646   004424  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2647   004426  D7FA               	bra	u5717
  2648   004428  0000               	nop	
  2649   00442A                     
  2650                           ;calibration.c: 51:             LATDbits.LATD7 = 0;
  2651   00442A  9E7C               	bcf	124,7,c	;volatile
  2652                           
  2653                           ;calibration.c: 52:             break;
  2654   00442C  EF39  F022         	goto	l142
  2655   004430                     l138:
  2656                           
  2657                           ;calibration.c: 55:         if(!PORTFbits.RF3){
  2658   004430  B68E               	btfsc	142,3,c	;volatile
  2659   004432  EF1D  F022         	goto	u5201
  2660   004436  EF1F  F022         	goto	u5200
  2661   00443A                     u5201:
  2662   00443A  EFE1  F021         	goto	l137
  2663   00443E                     u5200:
  2664   00443E                     
  2665                           ;calibration.c: 56:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2666   00443E  0E11               	movlw	17
  2667   004440  6E04               	movwf	(??_switch_calibration+1)^0,c
  2668   004442  0E3C               	movlw	60
  2669   004444  6E03               	movwf	??_switch_calibration^0,c
  2670   004446  0ECB               	movlw	203
  2671   004448                     u5727:
  2672   004448  2EE8               	decfsz	wreg,f,c
  2673   00444A  D7FE               	bra	u5727
  2674   00444C  2E03               	decfsz	??_switch_calibration^0,f,c
  2675   00444E  D7FC               	bra	u5727
  2676   004450  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2677   004452  D7FA               	bra	u5727
  2678   004454  0000               	nop	
  2679   004456                     
  2680                           ;calibration.c: 57:             LATHbits.LATH3 = 1;
  2681   004456  8680               	bsf	128,3,c	;volatile
  2682                           
  2683                           ;calibration.c: 58:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2684   004458  0E11               	movlw	17
  2685   00445A  6E04               	movwf	(??_switch_calibration+1)^0,c
  2686   00445C  0E3C               	movlw	60
  2687   00445E  6E03               	movwf	??_switch_calibration^0,c
  2688   004460  0ECB               	movlw	203
  2689   004462                     u5737:
  2690   004462  2EE8               	decfsz	wreg,f,c
  2691   004464  D7FE               	bra	u5737
  2692   004466  2E03               	decfsz	??_switch_calibration^0,f,c
  2693   004468  D7FC               	bra	u5737
  2694   00446A  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2695   00446C  D7FA               	bra	u5737
  2696   00446E  0000               	nop	
  2697   004470                     
  2698                           ;calibration.c: 59:             LATHbits.LATH3 = 0;
  2699   004470  9680               	bcf	128,3,c	;volatile
  2700   004472                     l142:
  2701   004472  0012               	return		;funcret
  2702   004474                     __end_of_switch_calibration:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _sprintf *****************
  2706 ;; Defined at:
  2707 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  s               2   28[COMRAM] PTR unsigned char 
  2710 ;;		 -> main@senddata(20), 
  2711 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  2712 ;;		 -> STR_1(5), 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  f              12   34[COMRAM] struct _IO_FILE
  2715 ;;  ret             2    0        int 
  2716 ;;  ap              1   33[COMRAM] PTR void [1]
  2717 ;;		 -> ?_sprintf(2), 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2   28[COMRAM] int 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2727 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2730 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;Total ram usage:       18 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 4
  2734 ;; This function calls:
  2735 ;;		_vfprintf
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text4
  2742   0048D4                     __ptext4:
  2743                           	callstack 0
  2744   0048D4                     _sprintf:
  2745                           	callstack 26
  2746   0048D4  0E20               	movlw	low (?_sprintf+3)
  2747   0048D6  6E22               	movwf	sprintf@ap^0,c
  2748   0048D8  C01D  F023         	movff	sprintf@s,sprintf@f
  2749   0048DC  C01E  F024         	movff	sprintf@s+1,sprintf@f+1
  2750   0048E0  0E00               	movlw	0
  2751   0048E2  6E27               	movwf	(sprintf@f+4)^0,c
  2752   0048E4  0E00               	movlw	0
  2753   0048E6  6E26               	movwf	(sprintf@f+3)^0,c
  2754   0048E8  0E00               	movlw	0
  2755   0048EA  6E2E               	movwf	(sprintf@f+11)^0,c
  2756   0048EC  0E00               	movlw	0
  2757   0048EE  6E2D               	movwf	(sprintf@f+10)^0,c
  2758   0048F0  0E23               	movlw	low sprintf@f
  2759   0048F2  6E19               	movwf	vfprintf@fp^0,c
  2760   0048F4  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  2761   0048F8  0E22               	movlw	low sprintf@ap
  2762   0048FA  6E1B               	movwf	vfprintf@ap^0,c
  2763   0048FC  EC08  F024         	call	_vfprintf	;wreg free
  2764   004900  5026               	movf	(sprintf@f+3)^0,w,c
  2765   004902  241D               	addwf	sprintf@s^0,w,c
  2766   004904  6ED9               	movwf	fsr2l,c
  2767   004906  5027               	movf	(sprintf@f+4)^0,w,c
  2768   004908  201E               	addwfc	(sprintf@s+1)^0,w,c
  2769   00490A  6EDA               	movwf	fsr2h,c
  2770   00490C  6ADF               	clrf	indf2,c
  2771   00490E  0012               	return		;funcret
  2772   004910                     __end_of_sprintf:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _vfprintf *****************
  2776 ;; Defined at:
  2777 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  2780 ;;		 -> sprintf@f(12), 
  2781 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  2782 ;;		 -> STR_1(5), 
  2783 ;;  ap              1   26[COMRAM] PTR PTR void 
  2784 ;;		 -> sprintf@ap(1), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  2787 ;;		 -> STR_1(5), 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  2   24[COMRAM] int 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2797 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;Total ram usage:        4 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; Hardware stack levels required when called: 3
  2804 ;; This function calls:
  2805 ;;		_vfpfcnvrt
  2806 ;; This function is called by:
  2807 ;;		_sprintf
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text5
  2812   004810                     __ptext5:
  2813                           	callstack 0
  2814   004810                     _vfprintf:
  2815                           	callstack 26
  2816   004810                     
  2817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2818   004810  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2821   004814  EF14  F024         	goto	l3888
  2822   004818                     l3886:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2825   004818  C019  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2826   00481C  0E1C               	movlw	low vfprintf@cfmt
  2827   00481E  6E0F               	movwf	vfpfcnvrt@fmt^0,c
  2828   004820  C01B  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  2829   004824  EC64  F01D         	call	_vfpfcnvrt	;wreg free
  2830   004828                     l3888:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2833   004828  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2834   00482C                     	if	1	;There is more than 1 active tblptr byte
  2835   00482C  0E0E               	movlw	high __smallconst
  2836   00482E  6EF7               	movwf	tblptrh,c
  2837   004830                     	endif
  2838   004830                     	if	0	;tblptru may be non-zero
  2839   004830                     	endif
  2840   004830                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2841   004830  0E00               	movlw	low (__smallconst shr (0+16))
  2842   004832  6EF8               	movwf	tblptru,c
  2843   004834                     	endif
  2844   004834  0008               	tblrd		*
  2845   004836  50F5               	movf	tablat,w,c
  2846   004838  0900               	iorlw	0
  2847   00483A  A4D8               	btfss	status,2,c
  2848   00483C  EF22  F024         	goto	u4061
  2849   004840  EF24  F024         	goto	u4060
  2850   004844                     u4061:
  2851   004844  EF0C  F024         	goto	l3886
  2852   004848                     u4060:
  2853   004848                     
  2854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2855   004848  0E00               	movlw	0
  2856   00484A  6E1A               	movwf	(?_vfprintf+1)^0,c
  2857   00484C  0E00               	movlw	0
  2858   00484E  6E19               	movwf	?_vfprintf^0,c
  2859   004850  0012               	return		;funcret
  2860   004852                     __end_of_vfprintf:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _vfpfcnvrt *****************
  2864 ;; Defined at:
  2865 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2868 ;;		 -> sprintf@f(12), 
  2869 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
  2870 ;;		 -> vfprintf@cfmt(1), 
  2871 ;;  ap              1   15[COMRAM] PTR PTR void 
  2872 ;;		 -> sprintf@ap(1), 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  convarg         4   18[COMRAM] struct .
  2875 ;;  c               1   23[COMRAM] unsigned char 
  2876 ;;  cp              1   22[COMRAM] PTR unsigned char 
  2877 ;;		 -> STR_1(5), 
  2878 ;;  done            1    0        _Bool 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2888 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;Total ram usage:       11 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 2
  2895 ;; This function calls:
  2896 ;;		___lwdiv
  2897 ;;		___lwmod
  2898 ;;		_fputc
  2899 ;; This function is called by:
  2900 ;;		_vfprintf
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text6
  2905   003AC8                     __ptext6:
  2906                           	callstack 0
  2907   003AC8                     _vfpfcnvrt:
  2908                           	callstack 26
  2909   003AC8                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2911   003AC8  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2912   003ACA  6ED9               	movwf	fsr2l,c
  2913   003ACC  6ADA               	clrf	fsr2h,c
  2914   003ACE  CFDF FFF6          	movff	indf2,tblptrl
  2915   003AD2                     	if	1	;There is more than 1 active tblptr byte
  2916   003AD2  0E0E               	movlw	high __smallconst
  2917   003AD4  6EF7               	movwf	tblptrh,c
  2918   003AD6                     	endif
  2919   003AD6                     	if	0	;tblptru may be non-zero
  2920   003AD6                     	endif
  2921   003AD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2922   003AD6  0E00               	movlw	low (__smallconst shr (0+16))
  2923   003AD8  6EF8               	movwf	tblptru,c
  2924   003ADA                     	endif
  2925   003ADA  0008               	tblrd		*
  2926   003ADC  50F5               	movf	tablat,w,c
  2927   003ADE  0A25               	xorlw	37
  2928   003AE0  A4D8               	btfss	status,2,c
  2929   003AE2  EF75  F01D         	goto	u3791
  2930   003AE6  EF77  F01D         	goto	u3790
  2931   003AEA                     u3791:
  2932   003AEA  EF1C  F01E         	goto	l3704
  2933   003AEE                     u3790:
  2934   003AEE                     
  2935                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2936   003AEE  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2937   003AF0  6ED9               	movwf	fsr2l,c
  2938   003AF2  6ADA               	clrf	fsr2h,c
  2939   003AF4  2ADF               	incf	indf2,f,c
  2940   003AF6                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2942   003AF6  0E00               	movlw	0
  2943   003AF8  0100               	movlb	0	; () banked
  2944   003AFA  6FF7               	movwf	(_width+1)& (0+255),b
  2945   003AFC  0E00               	movlw	0
  2946   003AFE  6FF6               	movwf	_width& (0+255),b
  2947   003B00  C0F6  F0FA         	movff	_width,_flags
  2948   003B04                     
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2951   003B04  69F8               	setf	_prec& (0+255),b
  2952   003B06  69F9               	setf	(_prec+1)& (0+255),b
  2953   003B08                     
  2954                           ; BSR set to: 0
  2955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2956   003B08  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2957   003B0A  6ED9               	movwf	fsr2l,c
  2958   003B0C  6ADA               	clrf	fsr2h,c
  2959   003B0E  50DF               	movf	indf2,w,c
  2960   003B10  6E17               	movwf	vfpfcnvrt@cp^0,c
  2961   003B12                     
  2962                           ; BSR set to: 0
  2963   003B12  C017  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2964   003B16                     	if	1	;There is more than 1 active tblptr byte
  2965   003B16  0E0E               	movlw	high __smallconst
  2966   003B18  6EF7               	movwf	tblptrh,c
  2967   003B1A                     	endif
  2968   003B1A                     	if	0	;tblptru may be non-zero
  2969   003B1A                     	endif
  2970   003B1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2971   003B1A  0E00               	movlw	low (__smallconst shr (0+16))
  2972   003B1C  6EF8               	movwf	tblptru,c
  2973   003B1E                     	endif
  2974   003B1E  0008               	tblrd		*
  2975   003B20  50F5               	movf	tablat,w,c
  2976   003B22  0A75               	xorlw	117
  2977   003B24  A4D8               	btfss	status,2,c
  2978   003B26  EF97  F01D         	goto	u3801
  2979   003B2A  EF99  F01D         	goto	u3800
  2980   003B2E                     u3801:
  2981   003B2E  EF16  F01E         	goto	l3700
  2982   003B32                     u3800:
  2983   003B32                     
  2984                           ; BSR set to: 0
  2985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2986   003B32  5010               	movf	vfpfcnvrt@ap^0,w,c
  2987   003B34  6ED9               	movwf	fsr2l,c
  2988   003B36  6ADA               	clrf	fsr2h,c
  2989   003B38  0E02               	movlw	2
  2990   003B3A  26DF               	addwf	indf2,f,c
  2991   003B3C  5CDF               	subwf	indf2,w,c
  2992   003B3E  6ED9               	movwf	fsr2l,c
  2993   003B40  6ADA               	clrf	fsr2h,c
  2994   003B42  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  2995   003B46  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  2996   003B4A                     
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2999   003B4A  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3000   003B4C  6ED9               	movwf	fsr2l,c
  3001   003B4E  6ADA               	clrf	fsr2h,c
  3002   003B50  2817               	incf	vfpfcnvrt@cp^0,w,c
  3003   003B52  6EDF               	movwf	indf2,c
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3006   003B54  EFFE  F01D         	goto	l3698
  3007   003B58                     l3680:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  3011   003B58  0E20               	movlw	32
  3012   003B5A  6E18               	movwf	vfpfcnvrt@c^0,c
  3013   003B5C                     l3682:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  3016   003B5C  0618               	decf	vfpfcnvrt@c^0,f,c
  3017   003B5E  0E3C               	movlw	low _dbuf
  3018   003B60  2418               	addwf	vfpfcnvrt@c^0,w,c
  3019   003B62  6ED9               	movwf	fsr2l,c
  3020   003B64  6ADA               	clrf	fsr2h,c
  3021   003B66  0E01               	movlw	high _dbuf
  3022   003B68  22DA               	addwfc	fsr2h,f,c
  3023   003B6A  C013  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  3024   003B6E  C014  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  3025   003B72  0E00               	movlw	0
  3026   003B74  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3027   003B76  0E0A               	movlw	10
  3028   003B78  6E03               	movwf	___lwmod@divisor^0,c
  3029   003B7A  EC13  F023         	call	___lwmod	;wreg free
  3030   003B7E  5001               	movf	?___lwmod^0,w,c
  3031   003B80  0F30               	addlw	48
  3032   003B82  6EDF               	movwf	indf2,c
  3033   003B84                     
  3034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  3035   003B84  C013  F007         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  3036   003B88  C014  F008         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  3037   003B8C  0E00               	movlw	0
  3038   003B8E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3039   003B90  0E0A               	movlw	10
  3040   003B92  6E09               	movwf	___lwdiv@divisor^0,c
  3041   003B94  ECD9  F022         	call	___lwdiv	;wreg free
  3042   003B98  C007  F013         	movff	?___lwdiv,vfpfcnvrt@convarg
  3043   003B9C  C008  F014         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  3044   003BA0                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  3046   003BA0  5013               	movf	vfpfcnvrt@convarg^0,w,c
  3047   003BA2  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3048   003BA4  B4D8               	btfsc	status,2,c
  3049   003BA6  EFD7  F01D         	goto	u3811
  3050   003BAA  EFD9  F01D         	goto	u3810
  3051   003BAE                     u3811:
  3052   003BAE  EFF3  F01D         	goto	l3694
  3053   003BB2                     u3810:
  3054   003BB2  5018               	movf	vfpfcnvrt@c^0,w,c
  3055   003BB4  A4D8               	btfss	status,2,c
  3056   003BB6  EFDF  F01D         	goto	u3821
  3057   003BBA  EFE1  F01D         	goto	u3820
  3058   003BBE                     u3821:
  3059   003BBE  EFAE  F01D         	goto	l3682
  3060   003BC2                     u3820:
  3061   003BC2  EFF3  F01D         	goto	l3694
  3062   003BC6                     l3690:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  3065   003BC6  0E3C               	movlw	low _dbuf
  3066   003BC8  2418               	addwf	vfpfcnvrt@c^0,w,c
  3067   003BCA  6ED9               	movwf	fsr2l,c
  3068   003BCC  6ADA               	clrf	fsr2h,c
  3069   003BCE  0E01               	movlw	high _dbuf
  3070   003BD0  22DA               	addwfc	fsr2h,f,c
  3071   003BD2  50DF               	movf	indf2,w,c
  3072   003BD4  6E11               	movwf	??_vfpfcnvrt^0,c
  3073   003BD6  5011               	movf	??_vfpfcnvrt^0,w,c
  3074   003BD8  6E01               	movwf	fputc@c^0,c
  3075   003BDA  6A02               	clrf	(fputc@c+1)^0,c
  3076   003BDC  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3077   003BE0  EC84  F021         	call	_fputc	;wreg free
  3078   003BE4  2A18               	incf	vfpfcnvrt@c^0,f,c
  3079   003BE6                     l3694:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  3082   003BE6  0E20               	movlw	32
  3083   003BE8  1818               	xorwf	vfpfcnvrt@c^0,w,c
  3084   003BEA  A4D8               	btfss	status,2,c
  3085   003BEC  EFFA  F01D         	goto	u3831
  3086   003BF0  EFFC  F01D         	goto	u3830
  3087   003BF4                     u3831:
  3088   003BF4  EFE3  F01D         	goto	l3690
  3089   003BF8                     u3830:
  3090   003BF8  EF2F  F01E         	goto	l1238
  3091   003BFC                     l3698:
  3092                           
  3093                           ; BSR set to: 0
  3094   003BFC  C017  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3095   003C00                     	if	1	;There is more than 1 active tblptr byte
  3096   003C00  0E0E               	movlw	high __smallconst
  3097   003C02  6EF7               	movwf	tblptrh,c
  3098   003C04                     	endif
  3099   003C04                     	if	0	;tblptru may be non-zero
  3100   003C04                     	endif
  3101   003C04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3102   003C04  0E00               	movlw	low (__smallconst shr (0+16))
  3103   003C06  6EF8               	movwf	tblptru,c
  3104   003C08                     	endif
  3105   003C08  0008               	tblrd		*
  3106   003C0A  50F5               	movf	tablat,w,c
  3107   003C0C  6E11               	movwf	??_vfpfcnvrt^0,c
  3108   003C0E  6A12               	clrf	(??_vfpfcnvrt+1)^0,c
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117   003C10  5012               	movf	(??_vfpfcnvrt+1)^0,w,c
  3118   003C12  0A00               	xorlw	0	; case 0
  3119   003C14  B4D8               	btfsc	status,2,c
  3120   003C16  EF0F  F01E         	goto	l5156
  3121   003C1A  EF16  F01E         	goto	l3700
  3122   003C1E                     l5156:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ; Switch size 1, requested type "simple"
  3126                           ; Number of cases is 1, Range of values is 117 to 117
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte            4     3 (average)
  3130                           ;	Chosen strategy is simple_byte
  3131   003C1E  5011               	movf	??_vfpfcnvrt^0,w,c
  3132   003C20  0A75               	xorlw	117	; case 117
  3133   003C22  B4D8               	btfsc	status,2,c
  3134   003C24  EFAC  F01D         	goto	l3680
  3135   003C28  EF16  F01E         	goto	l3700
  3136   003C2C                     l3700:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3139   003C2C  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3140   003C2E  6ED9               	movwf	fsr2l,c
  3141   003C30  6ADA               	clrf	fsr2h,c
  3142   003C32  2ADF               	incf	indf2,f,c
  3143   003C34  EF2F  F01E         	goto	l1238
  3144   003C38                     l3704:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3147   003C38  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3148   003C3A  6ED9               	movwf	fsr2l,c
  3149   003C3C  6ADA               	clrf	fsr2h,c
  3150   003C3E  CFDF FFF6          	movff	indf2,tblptrl
  3151   003C42                     	if	1	;There is more than 1 active tblptr byte
  3152   003C42  0E0E               	movlw	high __smallconst
  3153   003C44  6EF7               	movwf	tblptrh,c
  3154   003C46                     	endif
  3155   003C46                     	if	0	;tblptru may be non-zero
  3156   003C46                     	endif
  3157   003C46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3158   003C46  0E00               	movlw	low (__smallconst shr (0+16))
  3159   003C48  6EF8               	movwf	tblptru,c
  3160   003C4A                     	endif
  3161   003C4A  0008               	tblrd		*
  3162   003C4C  50F5               	movf	tablat,w,c
  3163   003C4E  6E01               	movwf	fputc@c^0,c
  3164   003C50  6A02               	clrf	(fputc@c+1)^0,c
  3165   003C52  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3166   003C56  EC84  F021         	call	_fputc	;wreg free
  3167   003C5A  EF16  F01E         	goto	l3700
  3168   003C5E                     l1238:
  3169   003C5E  0012               	return		;funcret
  3170   003C60                     __end_of_vfpfcnvrt:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _fputc *****************
  3174 ;; Defined at:
  3175 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  c               2    0[COMRAM] int 
  3178 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3179 ;;		 -> sprintf@f(12), 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2    0[COMRAM] int 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3195 ;;Total ram usage:        8 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 1
  3198 ;; This function calls:
  3199 ;;		_putch
  3200 ;; This function is called by:
  3201 ;;		_vfpfcnvrt
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text7
  3206   004308                     __ptext7:
  3207                           	callstack 0
  3208   004308                     _fputc:
  3209                           	callstack 26
  3210   004308  5003               	movf	fputc@fp^0,w,c
  3211   00430A  B4D8               	btfsc	status,2,c
  3212   00430C  EF8A  F021         	goto	u3671
  3213   004310  EF8C  F021         	goto	u3670
  3214   004314                     u3671:
  3215   004314  EF94  F021         	goto	l3582
  3216   004318                     u3670:
  3217   004318  5003               	movf	fputc@fp^0,w,c
  3218   00431A  A4D8               	btfss	status,2,c
  3219   00431C  EF92  F021         	goto	u3681
  3220   004320  EF94  F021         	goto	u3680
  3221   004324                     u3681:
  3222   004324  EF99  F021         	goto	l3584
  3223   004328                     u3680:
  3224   004328                     l3582:
  3225   004328  5001               	movf	fputc@c^0,w,c
  3226   00432A  EC4D  F025         	call	_putch
  3227   00432E  EFE0  F021         	goto	l1257
  3228   004332                     l3584:
  3229   004332  5003               	movf	fputc@fp^0,w,c
  3230   004334  6ED9               	movwf	fsr2l,c
  3231   004336  6ADA               	clrf	fsr2h,c
  3232   004338  0E0A               	movlw	10
  3233   00433A  26D9               	addwf	fsr2l,f,c
  3234   00433C  50DE               	movf	postinc2,w,c
  3235   00433E  10DE               	iorwf	postinc2,w,c
  3236   004340  B4D8               	btfsc	status,2,c
  3237   004342  EFA5  F021         	goto	u3691
  3238   004346  EFA7  F021         	goto	u3690
  3239   00434A                     u3691:
  3240   00434A  EFC0  F021         	goto	l3588
  3241   00434E                     u3690:
  3242   00434E  5003               	movf	fputc@fp^0,w,c
  3243   004350  6ED9               	movwf	fsr2l,c
  3244   004352  6ADA               	clrf	fsr2h,c
  3245   004354  0E0A               	movlw	10
  3246   004356  26D9               	addwf	fsr2l,f,c
  3247   004358  5003               	movf	fputc@fp^0,w,c
  3248   00435A  6EE1               	movwf	fsr1l,c
  3249   00435C  6AE2               	clrf	fsr1h,c
  3250   00435E  0E03               	movlw	3
  3251   004360  26E1               	addwf	fsr1l,f,c
  3252   004362  50DE               	movf	postinc2,w,c
  3253   004364  5CE6               	subwf	postinc1,w,c
  3254   004366  50E6               	movf	postinc1,w,c
  3255   004368  0A80               	xorlw	128
  3256   00436A  6E08               	movwf	(??_fputc+4)^0,c
  3257   00436C  50DE               	movf	postinc2,w,c
  3258   00436E  0A80               	xorlw	128
  3259   004370  5808               	subwfb	(??_fputc+4)^0,w,c
  3260   004372  B0D8               	btfsc	status,0,c
  3261   004374  EFBE  F021         	goto	u3701
  3262   004378  EFC0  F021         	goto	u3700
  3263   00437C                     u3701:
  3264   00437C  EFE0  F021         	goto	l1257
  3265   004380                     u3700:
  3266   004380                     l3588:
  3267   004380  5003               	movf	fputc@fp^0,w,c
  3268   004382  6ED9               	movwf	fsr2l,c
  3269   004384  6ADA               	clrf	fsr2h,c
  3270   004386  0E03               	movlw	3
  3271   004388  26D9               	addwf	fsr2l,f,c
  3272   00438A  CFDE F004          	movff	postinc2,??_fputc
  3273   00438E  CFDD F005          	movff	postdec2,??_fputc+1
  3274   004392  5003               	movf	fputc@fp^0,w,c
  3275   004394  6ED9               	movwf	fsr2l,c
  3276   004396  6ADA               	clrf	fsr2h,c
  3277   004398  CFDE F006          	movff	postinc2,??_fputc+2
  3278   00439C  CFDD F007          	movff	postdec2,??_fputc+3
  3279   0043A0  5004               	movf	??_fputc^0,w,c
  3280   0043A2  2406               	addwf	(??_fputc+2)^0,w,c
  3281   0043A4  6ED9               	movwf	fsr2l,c
  3282   0043A6  5005               	movf	(??_fputc+1)^0,w,c
  3283   0043A8  2007               	addwfc	(??_fputc+3)^0,w,c
  3284   0043AA  6EDA               	movwf	fsr2h,c
  3285   0043AC  C001  FFDF         	movff	fputc@c,indf2
  3286   0043B0  5003               	movf	fputc@fp^0,w,c
  3287   0043B2  6ED9               	movwf	fsr2l,c
  3288   0043B4  6ADA               	clrf	fsr2h,c
  3289   0043B6  0E03               	movlw	3
  3290   0043B8  26D9               	addwf	fsr2l,f,c
  3291   0043BA  2ADE               	incf	postinc2,f,c
  3292   0043BC  0E00               	movlw	0
  3293   0043BE  22DD               	addwfc	postdec2,f,c
  3294   0043C0                     l1257:
  3295   0043C0  0012               	return		;funcret
  3296   0043C2                     __end_of_fputc:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _putch *****************
  3300 ;; Defined at:
  3301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  c               1    wreg     unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  c               1    0[COMRAM] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_fputc
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text8
  3329   004A9A                     __ptext8:
  3330                           	callstack 0
  3331   004A9A                     _putch:
  3332                           	callstack 26
  3333   004A9A  0012               	return		;funcret
  3334   004A9C                     __end_of_putch:
  3335                           	callstack 0
  3336                           
  3337 ;; *************** function ___lwmod *****************
  3338 ;; Defined at:
  3339 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  dividend        2    0[COMRAM] unsigned int 
  3342 ;;  divisor         2    2[COMRAM] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  counter         1    4[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    0[COMRAM] unsigned int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;Total ram usage:        5 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_vfpfcnvrt
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text9
  3368   004626                     __ptext9:
  3369                           	callstack 0
  3370   004626                     ___lwmod:
  3371                           	callstack 27
  3372   004626  5003               	movf	___lwmod@divisor^0,w,c
  3373   004628  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3374   00462A  B4D8               	btfsc	status,2,c
  3375   00462C  EF1A  F023         	goto	u3541
  3376   004630  EF1C  F023         	goto	u3540
  3377   004634                     u3541:
  3378   004634  EF40  F023         	goto	l1024
  3379   004638                     u3540:
  3380   004638  0E01               	movlw	1
  3381   00463A  6E05               	movwf	___lwmod@counter^0,c
  3382   00463C  EF24  F023         	goto	l3522
  3383   004640                     l3520:
  3384   004640  90D8               	bcf	status,0,c
  3385   004642  3603               	rlcf	___lwmod@divisor^0,f,c
  3386   004644  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3387   004646  2A05               	incf	___lwmod@counter^0,f,c
  3388   004648                     l3522:
  3389   004648  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3390   00464A  EF29  F023         	goto	u3551
  3391   00464E  EF2B  F023         	goto	u3550
  3392   004652                     u3551:
  3393   004652  EF20  F023         	goto	l3520
  3394   004656                     u3550:
  3395   004656                     l3524:
  3396   004656  5003               	movf	___lwmod@divisor^0,w,c
  3397   004658  5C01               	subwf	___lwmod@dividend^0,w,c
  3398   00465A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3399   00465C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3400   00465E  A0D8               	btfss	status,0,c
  3401   004660  EF34  F023         	goto	u3561
  3402   004664  EF36  F023         	goto	u3560
  3403   004668                     u3561:
  3404   004668  EF3A  F023         	goto	l3528
  3405   00466C                     u3560:
  3406   00466C  5003               	movf	___lwmod@divisor^0,w,c
  3407   00466E  5E01               	subwf	___lwmod@dividend^0,f,c
  3408   004670  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3409   004672  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3410   004674                     l3528:
  3411   004674  90D8               	bcf	status,0,c
  3412   004676  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3413   004678  3203               	rrcf	___lwmod@divisor^0,f,c
  3414   00467A  2E05               	decfsz	___lwmod@counter^0,f,c
  3415   00467C  EF2B  F023         	goto	l3524
  3416   004680                     l1024:
  3417   004680  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3418   004684  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3419   004688  0012               	return		;funcret
  3420   00468A                     __end_of___lwmod:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _sendStringSerial4 *****************
  3424 ;; Defined at:
  3425 ;;		line 94 in file "serial.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  string          2    1[COMRAM] PTR unsigned char 
  3428 ;;		 -> main@senddata(20), 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;Total ram usage:        2 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 1
  3447 ;; This function calls:
  3448 ;;		_sendCharSerial4
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text10
  3455   004944                     __ptext10:
  3456                           	callstack 0
  3457   004944                     _sendStringSerial4:
  3458                           	callstack 29
  3459   004944                     
  3460                           ;serial.c: 96:     while(*string != 0){
  3461   004944  EFAD  F024         	goto	l4330
  3462   004948                     l4326:
  3463                           
  3464                           ;serial.c: 97:   sendCharSerial4(*string++);
  3465   004948  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3466   00494C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3467   004950  50DF               	movf	indf2,w,c
  3468   004952  EC2C  F025         	call	_sendCharSerial4
  3469   004956  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3470   004958  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3471   00495A                     l4330:
  3472                           
  3473                           ;serial.c: 96:     while(*string != 0){
  3474   00495A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3475   00495E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3476   004962  50DF               	movf	indf2,w,c
  3477   004964  A4D8               	btfss	status,2,c
  3478   004966  EFB7  F024         	goto	u4841
  3479   00496A  EFB9  F024         	goto	u4840
  3480   00496E                     u4841:
  3481   00496E  EFA4  F024         	goto	l4326
  3482   004972                     u4840:
  3483   004972  0012               	return		;funcret
  3484   004974                     __end_of_sendStringSerial4:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _sendCharSerial4 *****************
  3488 ;; Defined at:
  3489 ;;		line 87 in file "serial.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  charToSend      1    wreg     unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  charToSend      1    0[COMRAM] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;Total ram usage:        1 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_sendStringSerial4
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text11
  3517   004A58                     __ptext11:
  3518                           	callstack 0
  3519   004A58                     _sendCharSerial4:
  3520                           	callstack 29
  3521                           
  3522                           ;incstack = 0
  3523                           ;sendCharSerial4@charToSend stored from wreg
  3524   004A58  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3525   004A5A                     l482:
  3526   004A5A  010E               	movlb	14	; () banked
  3527   004A5C  A537               	btfss	55,2,b	;volatile
  3528   004A5E  EF33  F025         	goto	u3991
  3529   004A62  EF35  F025         	goto	u3990
  3530   004A66                     u3991:
  3531   004A66  EF2D  F025         	goto	l482
  3532   004A6A                     u3990:
  3533   004A6A                     
  3534                           ; BSR set to: 14
  3535                           ;serial.c: 89:     TX4REG = charToSend;
  3536   004A6A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3537   004A6E                     
  3538                           ; BSR set to: 14
  3539   004A6E  0012               	return		;funcret
  3540   004A70                     __end_of_sendCharSerial4:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function _initUSART4 *****************
  3544 ;; Defined at:
  3545 ;;		line 57 in file "serial.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;Total ram usage:        0 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text12
  3573   004A3A                     __ptext12:
  3574                           	callstack 0
  3575   004A3A                     _initUSART4:
  3576                           	callstack 30
  3577   004A3A                     
  3578                           ;serial.c: 58:     RC0PPS = 0x12;
  3579   004A3A  0E12               	movlw	18
  3580   004A3C  010E               	movlb	14	; () banked
  3581   004A3E  6F62               	movwf	98,b	;volatile
  3582                           
  3583                           ;serial.c: 59:     RX4PPS = 0x11;
  3584   004A40  0E11               	movlw	17
  3585   004A42  6F15               	movwf	21,b	;volatile
  3586   004A44                     
  3587                           ; BSR set to: 14
  3588                           ;serial.c: 61:     BAUD4CONbits.BRG16 = 0;
  3589   004A44  97E9               	bcf	233,3,b	;volatile
  3590   004A46                     
  3591                           ; BSR set to: 14
  3592                           ;serial.c: 62:     TX4STAbits.BRGH = 0;
  3593   004A46  95E8               	bcf	232,2,b	;volatile
  3594                           
  3595                           ;serial.c: 64:     SP4BRGL = 51;
  3596   004A48  0E33               	movlw	51
  3597   004A4A  6FE5               	movwf	229,b	;volatile
  3598                           
  3599                           ;serial.c: 65:     SP4BRGH = 0;
  3600   004A4C  0E00               	movlw	0
  3601   004A4E  6FE6               	movwf	230,b	;volatile
  3602   004A50                     
  3603                           ; BSR set to: 14
  3604                           ;serial.c: 73:     RC4STAbits.CREN = 1;
  3605   004A50  89E7               	bsf	231,4,b	;volatile
  3606   004A52                     
  3607                           ; BSR set to: 14
  3608                           ;serial.c: 74:     TX4STAbits.TXEN = 1;
  3609   004A52  8BE8               	bsf	232,5,b	;volatile
  3610   004A54                     
  3611                           ; BSR set to: 14
  3612                           ;serial.c: 75:     RC4STAbits.SPEN = 1;
  3613   004A54  8FE7               	bsf	231,7,b	;volatile
  3614   004A56                     
  3615                           ; BSR set to: 14
  3616   004A56  0012               	return		;funcret
  3617   004A58                     __end_of_initUSART4:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _initDCmotorsPWM *****************
  3621 ;; Defined at:
  3622 ;;		line 5 in file "dc_motor_v1.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;Total ram usage:        2 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text13
  3650   00451E                     __ptext13:
  3651                           	callstack 0
  3652   00451E                     _initDCmotorsPWM:
  3653                           	callstack 30
  3654   00451E                     
  3655                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  3656   00451E  9485               	bcf	133,2,c	;volatile
  3657                           
  3658                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  3659   004520  9885               	bcf	133,4,c	;volatile
  3660                           
  3661                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  3662   004522  9E83               	bcf	131,7,c	;volatile
  3663                           
  3664                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  3665   004524  9C87               	bcf	135,6,c	;volatile
  3666                           
  3667                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  3668   004526  947D               	bcf	125,2,c	;volatile
  3669                           
  3670                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  3671   004528  987D               	bcf	125,4,c	;volatile
  3672                           
  3673                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  3674   00452A  9E7B               	bcf	123,7,c	;volatile
  3675                           
  3676                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  3677   00452C  9C7F               	bcf	127,6,c	;volatile
  3678   00452E                     
  3679                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  3680   00452E  0E05               	movlw	5
  3681   004530  010E               	movlb	14	; () banked
  3682   004532  6F74               	movwf	116,b	;volatile
  3683                           
  3684                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  3685   004534  0E06               	movlw	6
  3686   004536  6F76               	movwf	118,b	;volatile
  3687                           
  3688                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  3689   004538  0E07               	movlw	7
  3690   00453A  6F69               	movwf	105,b	;volatile
  3691                           
  3692                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  3693   00453C  0E08               	movlw	8
  3694   00453E  6F88               	movwf	136,b	;volatile
  3695                           
  3696                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  3697   004540  50BD               	movf	189,w,c	;volatile
  3698   004542  0B8F               	andlw	-113
  3699   004544  0940               	iorlw	64
  3700   004546  6EBD               	movwf	189,c	;volatile
  3701                           
  3702                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  3703   004548  0EE0               	movlw	-32
  3704   00454A  16BE               	andwf	190,f,c	;volatile
  3705                           
  3706                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  3707   00454C  50BF               	movf	191,w,c	;volatile
  3708   00454E  0BF0               	andlw	-16
  3709   004550  0901               	iorlw	1
  3710   004552  6EBF               	movwf	191,c	;volatile
  3711   004554                     
  3712                           ; BSR set to: 14
  3713                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  3714   004554  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3715   004558                     
  3716                           ; BSR set to: 14
  3717                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  3718   004558  8EBD               	bsf	189,7,c	;volatile
  3719                           
  3720                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  3721   00455A  0E00               	movlw	0
  3722   00455C  6EAA               	movwf	170,c	;volatile
  3723                           
  3724                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  3725   00455E  0E00               	movlw	0
  3726   004560  6EA6               	movwf	166,c	;volatile
  3727                           
  3728                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  3729   004562  0E00               	movlw	0
  3730   004564  010F               	movlb	15	; () banked
  3731   004566  6F25               	movwf	37,b	;volatile
  3732                           
  3733                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  3734   004568  0E00               	movlw	0
  3735   00456A  6F21               	movwf	33,b	;volatile
  3736                           
  3737                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  3738   00456C  0EFC               	movlw	-4
  3739   00456E  16AD               	andwf	173,f,c	;volatile
  3740                           
  3741                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  3742   004570  0EF3               	movlw	-13
  3743   004572  16AD               	andwf	173,f,c	;volatile
  3744                           
  3745                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  3746   004574  0ECF               	movlw	-49
  3747   004576  16AD               	andwf	173,f,c	;volatile
  3748                           
  3749                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  3750   004578  0E3F               	movlw	-193
  3751   00457A  16AD               	andwf	173,f,c	;volatile
  3752   00457C                     
  3753                           ; BSR set to: 15
  3754                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  3755   00457C  88AB               	bsf	171,4,c	;volatile
  3756                           
  3757                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  3758   00457E  50AB               	movf	171,w,c	;volatile
  3759   004580  0BF0               	andlw	-16
  3760   004582  090C               	iorlw	12
  3761   004584  6EAB               	movwf	171,c	;volatile
  3762   004586                     
  3763                           ; BSR set to: 15
  3764                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  3765   004586  8EAB               	bsf	171,7,c	;volatile
  3766   004588                     
  3767                           ; BSR set to: 15
  3768                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  3769   004588  88A7               	bsf	167,4,c	;volatile
  3770                           
  3771                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  3772   00458A  50A7               	movf	167,w,c	;volatile
  3773   00458C  0BF0               	andlw	-16
  3774   00458E  090C               	iorlw	12
  3775   004590  6EA7               	movwf	167,c	;volatile
  3776   004592                     
  3777                           ; BSR set to: 15
  3778                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  3779   004592  8EA7               	bsf	167,7,c	;volatile
  3780   004594                     
  3781                           ; BSR set to: 15
  3782                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  3783   004594  8926               	bsf	38,4,b	;volatile
  3784                           
  3785                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  3786   004596  5126               	movf	38,w,b	;volatile
  3787   004598  0BF0               	andlw	-16
  3788   00459A  090C               	iorlw	12
  3789   00459C  6F26               	movwf	38,b	;volatile
  3790   00459E                     
  3791                           ; BSR set to: 15
  3792                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  3793   00459E  8F26               	bsf	38,7,b	;volatile
  3794   0045A0                     
  3795                           ; BSR set to: 15
  3796                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  3797   0045A0  8922               	bsf	34,4,b	;volatile
  3798                           
  3799                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  3800   0045A2  5122               	movf	34,w,b	;volatile
  3801   0045A4  0BF0               	andlw	-16
  3802   0045A6  090C               	iorlw	12
  3803   0045A8  6F22               	movwf	34,b	;volatile
  3804   0045AA                     
  3805                           ; BSR set to: 15
  3806                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  3807   0045AA  8F22               	bsf	34,7,b	;volatile
  3808   0045AC                     
  3809                           ; BSR set to: 15
  3810                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  3811   0045AC  9688               	bcf	136,3,c	;volatile
  3812   0045AE                     
  3813                           ; BSR set to: 15
  3814                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  3815   0045AE  9680               	bcf	128,3,c	;volatile
  3816   0045B0                     
  3817                           ; BSR set to: 15
  3818   0045B0  0012               	return		;funcret
  3819   0045B2                     __end_of_initDCmotorsPWM:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _forward *****************
  3823 ;; Defined at:
  3824 ;;		line 122 in file "dc_motor_v1.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  Distance_Cal    1    wreg     unsigned char 
  3827 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  3828 ;;		 -> motorL(9), 
  3829 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  3830 ;;		 -> motorR(9), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  Distance_Cal    1   26[COMRAM] unsigned char 
  3833 ;;  j               2   29[COMRAM] int 
  3834 ;;  i               2   27[COMRAM] int 
  3835 ;;  delay_time      2   33[COMRAM] int 
  3836 ;;  max_power       2   31[COMRAM] int 
  3837 ;;  acceleration    2    0        int 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;Total ram usage:       16 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 2
  3854 ;; This function calls:
  3855 ;;		___awdiv
  3856 ;;		_delay_ms_function
  3857 ;;		_setMotorPWM
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text14
  3864   003430                     __ptext14:
  3865                           	callstack 0
  3866   003430                     _forward:
  3867                           	callstack 28
  3868                           
  3869                           ; BSR set to: 15
  3870                           ;incstack = 0
  3871                           ;forward@Distance_Calibration stored from wreg
  3872   003430  6E1B               	movwf	forward@Distance_Calibration^0,c
  3873   003432                     
  3874                           ;dc_motor_v1.c: 123:     mL->direction = 1;
  3875   003432  EE20 F001          	lfsr	2,1
  3876   003436  5014               	movf	forward@mL^0,w,c
  3877   003438  26D9               	addwf	fsr2l,f,c
  3878   00343A  5015               	movf	(forward@mL+1)^0,w,c
  3879   00343C  22DA               	addwfc	fsr2h,f,c
  3880   00343E  0E01               	movlw	1
  3881   003440  6EDF               	movwf	indf2,c
  3882                           
  3883                           ;dc_motor_v1.c: 124:     mR->direction = 1;
  3884   003442  EE20 F001          	lfsr	2,1
  3885   003446  5016               	movf	forward@mR^0,w,c
  3886   003448  26D9               	addwf	fsr2l,f,c
  3887   00344A  5017               	movf	(forward@mR+1)^0,w,c
  3888   00344C  22DA               	addwfc	fsr2h,f,c
  3889   00344E  0E01               	movlw	1
  3890   003450  6EDF               	movwf	indf2,c
  3891   003452                     
  3892                           ;dc_motor_v1.c: 131:     int max_power = 20;
  3893   003452  0E00               	movlw	0
  3894   003454  6E21               	movwf	(forward@max_power+1)^0,c
  3895   003456  0E14               	movlw	20
  3896   003458  6E20               	movwf	forward@max_power^0,c
  3897   00345A                     
  3898                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  3899   00345A  0E00               	movlw	0
  3900   00345C  6E02               	movwf	(___awdiv@dividend+1)^0,c
  3901   00345E  0E64               	movlw	100
  3902   003460  6E01               	movwf	___awdiv@dividend^0,c
  3903   003462  0E00               	movlw	0
  3904   003464  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3905   003466  0E14               	movlw	20
  3906   003468  6E03               	movwf	___awdiv@divisor^0,c
  3907   00346A  EC22  F021         	call	___awdiv	;wreg free
  3908   00346E  C001  F022         	movff	?___awdiv,forward@delay_time
  3909   003472  C002  F023         	movff	?___awdiv+1,forward@delay_time+1
  3910   003476                     
  3911                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  3912   003476  0E00               	movlw	0
  3913   003478  6E1D               	movwf	(forward@i+1)^0,c
  3914   00347A  0E00               	movlw	0
  3915   00347C  6E1C               	movwf	forward@i^0,c
  3916   00347E  EF6D  F01A         	goto	l4726
  3917   003482                     l4716:
  3918                           
  3919                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  3920   003482  C014  FFD9         	movff	forward@mL,fsr2l
  3921   003486  C015  FFDA         	movff	forward@mL+1,fsr2h
  3922   00348A  50DF               	movf	indf2,w,c
  3923   00348C  6E18               	movwf	??_forward^0,c
  3924   00348E  2818               	incf	??_forward^0,w,c
  3925   003490  C014  FFD9         	movff	forward@mL,fsr2l
  3926   003494  C015  FFDA         	movff	forward@mL+1,fsr2h
  3927   003498  6EDF               	movwf	indf2,c
  3928                           
  3929                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  3930   00349A  C016  FFD9         	movff	forward@mR,fsr2l
  3931   00349E  C017  FFDA         	movff	forward@mR+1,fsr2h
  3932   0034A2  50DF               	movf	indf2,w,c
  3933   0034A4  6E18               	movwf	??_forward^0,c
  3934   0034A6  2818               	incf	??_forward^0,w,c
  3935   0034A8  C016  FFD9         	movff	forward@mR,fsr2l
  3936   0034AC  C017  FFDA         	movff	forward@mR+1,fsr2h
  3937   0034B0  6EDF               	movwf	indf2,c
  3938   0034B2                     
  3939                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  3940   0034B2  C016  F00E         	movff	forward@mR,setMotorPWM@m
  3941   0034B6  C017  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  3942   0034BA  EC30  F01E         	call	_setMotorPWM	;wreg free
  3943   0034BE                     
  3944                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  3945   0034BE  C014  F00E         	movff	forward@mL,setMotorPWM@m
  3946   0034C2  C015  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  3947   0034C6  EC30  F01E         	call	_setMotorPWM	;wreg free
  3948   0034CA                     
  3949                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  3950   0034CA  C022  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  3951   0034CE  C023  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  3952   0034D2  ECBA  F024         	call	_delay_ms_function	;wreg free
  3953   0034D6                     
  3954                           ;dc_motor_v1.c: 142:     }
  3955   0034D6  4A1C               	infsnz	forward@i^0,f,c
  3956   0034D8  2A1D               	incf	(forward@i+1)^0,f,c
  3957   0034DA                     l4726:
  3958   0034DA  5020               	movf	forward@max_power^0,w,c
  3959   0034DC  5C1C               	subwf	forward@i^0,w,c
  3960   0034DE  501D               	movf	(forward@i+1)^0,w,c
  3961   0034E0  0A80               	xorlw	128
  3962   0034E2  6E18               	movwf	??_forward^0,c
  3963   0034E4  5021               	movf	(forward@max_power+1)^0,w,c
  3964   0034E6  0A80               	xorlw	128
  3965   0034E8  5818               	subwfb	??_forward^0,w,c
  3966   0034EA  A0D8               	btfss	status,0,c
  3967   0034EC  EF7A  F01A         	goto	u5211
  3968   0034F0  EF7C  F01A         	goto	u5210
  3969   0034F4                     u5211:
  3970   0034F4  EF41  F01A         	goto	l4716
  3971   0034F8                     u5210:
  3972   0034F8                     
  3973                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  3974   0034F8  0E00               	movlw	0
  3975   0034FA  6E1F               	movwf	(forward@j+1)^0,c
  3976   0034FC  0E00               	movlw	0
  3977   0034FE  6E1E               	movwf	forward@j^0,c
  3978   003500  EF8B  F01A         	goto	l230
  3979   003504                     l4730:
  3980                           
  3981                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3982   003504  0ED0               	movlw	208
  3983   003506  6E18               	movwf	??_forward^0,c
  3984   003508  0ECA               	movlw	202
  3985   00350A                     u5747:
  3986   00350A  2EE8               	decfsz	wreg,f,c
  3987   00350C  D7FE               	bra	u5747
  3988   00350E  2E18               	decfsz	??_forward^0,f,c
  3989   003510  D7FC               	bra	u5747
  3990   003512                     
  3991                           ;dc_motor_v1.c: 149:     }
  3992   003512  4A1E               	infsnz	forward@j^0,f,c
  3993   003514  2A1F               	incf	(forward@j+1)^0,f,c
  3994   003516                     l230:
  3995   003516  501B               	movf	forward@Distance_Calibration^0,w,c
  3996   003518  6E18               	movwf	??_forward^0,c
  3997   00351A  6A19               	clrf	(??_forward+1)^0,c
  3998   00351C  5018               	movf	??_forward^0,w,c
  3999   00351E  5C1E               	subwf	forward@j^0,w,c
  4000   003520  501F               	movf	(forward@j+1)^0,w,c
  4001   003522  0A80               	xorlw	128
  4002   003524  6E1A               	movwf	(??_forward+2)^0,c
  4003   003526  5019               	movf	(??_forward+1)^0,w,c
  4004   003528  0A80               	xorlw	128
  4005   00352A  581A               	subwfb	(??_forward+2)^0,w,c
  4006   00352C  A0D8               	btfss	status,0,c
  4007   00352E  EF9B  F01A         	goto	u5221
  4008   003532  EF9D  F01A         	goto	u5220
  4009   003536                     u5221:
  4010   003536  EF82  F01A         	goto	l4730
  4011   00353A                     u5220:
  4012   00353A  EFD3  F01A         	goto	l4748
  4013   00353E                     l4734:
  4014                           
  4015                           ;dc_motor_v1.c: 153:         if(mR->power> 0 ){
  4016   00353E  C016  FFD9         	movff	forward@mR,fsr2l
  4017   003542  C017  FFDA         	movff	forward@mR+1,fsr2h
  4018   003546  50DF               	movf	indf2,w,c
  4019   003548  B4D8               	btfsc	status,2,c
  4020   00354A  EFA9  F01A         	goto	u5231
  4021   00354E  EFAB  F01A         	goto	u5230
  4022   003552                     u5231:
  4023   003552  EFB0  F01A         	goto	l4738
  4024   003556                     u5230:
  4025   003556                     
  4026                           ;dc_motor_v1.c: 154:             mR->power--;
  4027   003556  C016  FFD9         	movff	forward@mR,fsr2l
  4028   00355A  C017  FFDA         	movff	forward@mR+1,fsr2h
  4029   00355E  06DF               	decf	indf2,f,c
  4030   003560                     l4738:
  4031                           
  4032                           ;dc_motor_v1.c: 156:         if(mL->power> 0 ){
  4033   003560  C014  FFD9         	movff	forward@mL,fsr2l
  4034   003564  C015  FFDA         	movff	forward@mL+1,fsr2h
  4035   003568  50DF               	movf	indf2,w,c
  4036   00356A  B4D8               	btfsc	status,2,c
  4037   00356C  EFBA  F01A         	goto	u5241
  4038   003570  EFBC  F01A         	goto	u5240
  4039   003574                     u5241:
  4040   003574  EFC1  F01A         	goto	l4742
  4041   003578                     u5240:
  4042   003578                     
  4043                           ;dc_motor_v1.c: 157:             mL->power--;
  4044   003578  C014  FFD9         	movff	forward@mL,fsr2l
  4045   00357C  C015  FFDA         	movff	forward@mL+1,fsr2h
  4046   003580  06DF               	decf	indf2,f,c
  4047   003582                     l4742:
  4048                           
  4049                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  4050   003582  C016  F00E         	movff	forward@mR,setMotorPWM@m
  4051   003586  C017  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  4052   00358A  EC30  F01E         	call	_setMotorPWM	;wreg free
  4053   00358E                     
  4054                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  4055   00358E  C014  F00E         	movff	forward@mL,setMotorPWM@m
  4056   003592  C015  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  4057   003596  EC30  F01E         	call	_setMotorPWM	;wreg free
  4058   00359A                     
  4059                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  4060   00359A  C022  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  4061   00359E  C023  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  4062   0035A2  ECBA  F024         	call	_delay_ms_function	;wreg free
  4063   0035A6                     l4748:
  4064                           
  4065                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  4066   0035A6  C014  FFD9         	movff	forward@mL,fsr2l
  4067   0035AA  C015  FFDA         	movff	forward@mL+1,fsr2h
  4068   0035AE  50DF               	movf	indf2,w,c
  4069   0035B0  A4D8               	btfss	status,2,c
  4070   0035B2  EFDD  F01A         	goto	u5251
  4071   0035B6  EFDF  F01A         	goto	u5250
  4072   0035BA                     u5251:
  4073   0035BA  EF9F  F01A         	goto	l4734
  4074   0035BE                     u5250:
  4075   0035BE  C016  FFD9         	movff	forward@mR,fsr2l
  4076   0035C2  C017  FFDA         	movff	forward@mR+1,fsr2h
  4077   0035C6  50DF               	movf	indf2,w,c
  4078   0035C8  A4D8               	btfss	status,2,c
  4079   0035CA  EFE9  F01A         	goto	u5261
  4080   0035CE  EFEB  F01A         	goto	u5260
  4081   0035D2                     u5261:
  4082   0035D2  EF9F  F01A         	goto	l4734
  4083   0035D6                     u5260:
  4084   0035D6  0012               	return		;funcret
  4085   0035D8                     __end_of_forward:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function _color_click_init *****************
  4089 ;; Defined at:
  4090 ;;		line 7 in file "color.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;Total ram usage:        1 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 3
  4111 ;; This function calls:
  4112 ;;		_I2C_2_Master_Init
  4113 ;;		_color_writetoaddr
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text15
  4120   004894                     __ptext15:
  4121                           	callstack 0
  4122   004894                     _color_click_init:
  4123                           	callstack 27
  4124   004894                     
  4125                           ;color.c: 10:     I2C_2_Master_Init();
  4126   004894  ECD1  F024         	call	_I2C_2_Master_Init	;wreg free
  4127   004898                     
  4128                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  4129   004898  0E01               	movlw	1
  4130   00489A  6E03               	movwf	color_writetoaddr@value^0,c
  4131   00489C  0E00               	movlw	0
  4132   00489E  EC0D  F025         	call	_color_writetoaddr
  4133   0048A2                     
  4134                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4135   0048A2  0E3F               	movlw	63
  4136   0048A4  6E05               	movwf	??_color_click_init^0,c
  4137   0048A6  0E55               	movlw	85
  4138   0048A8                     u5757:
  4139   0048A8  2EE8               	decfsz	wreg,f,c
  4140   0048AA  D7FE               	bra	u5757
  4141   0048AC  2E05               	decfsz	??_color_click_init^0,f,c
  4142   0048AE  D7FC               	bra	u5757
  4143   0048B0  0000               	nop	
  4144   0048B2                     
  4145                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  4146   0048B2  0E03               	movlw	3
  4147   0048B4  6E03               	movwf	color_writetoaddr@value^0,c
  4148   0048B6  0E00               	movlw	0
  4149   0048B8  EC0D  F025         	call	_color_writetoaddr
  4150   0048BC                     
  4151                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  4152   0048BC  0ED5               	movlw	213
  4153   0048BE  6E03               	movwf	color_writetoaddr@value^0,c
  4154   0048C0  0E01               	movlw	1
  4155   0048C2  EC0D  F025         	call	_color_writetoaddr
  4156   0048C6                     
  4157                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  4158   0048C6  9287               	bcf	135,1,c	;volatile
  4159   0048C8                     
  4160                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  4161   0048C8  9881               	bcf	129,4,c	;volatile
  4162   0048CA                     
  4163                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  4164   0048CA  9E86               	bcf	134,7,c	;volatile
  4165   0048CC                     
  4166                           ;color.c: 30:     LATGbits.LATG1 = 1;
  4167   0048CC  827F               	bsf	127,1,c	;volatile
  4168   0048CE                     
  4169                           ;color.c: 31:     LATAbits.LATA4 = 1;
  4170   0048CE  8879               	bsf	121,4,c	;volatile
  4171   0048D0                     
  4172                           ;color.c: 32:     LATFbits.LATF7 = 1;
  4173   0048D0  8E7E               	bsf	126,7,c	;volatile
  4174   0048D2  0012               	return		;funcret
  4175   0048D4                     __end_of_color_click_init:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _color_writetoaddr *****************
  4179 ;; Defined at:
  4180 ;;		line 37 in file "color.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  address         1    wreg     unsigned char 
  4183 ;;  value           1    2[COMRAM] unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  address         1    3[COMRAM] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4195 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 2
  4202 ;; This function calls:
  4203 ;;		_I2C_2_Master_Start
  4204 ;;		_I2C_2_Master_Stop
  4205 ;;		_I2C_2_Master_Write
  4206 ;; This function is called by:
  4207 ;;		_color_click_init
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text16
  4212   004A1A                     __ptext16:
  4213                           	callstack 0
  4214   004A1A                     _color_writetoaddr:
  4215                           	callstack 27
  4216                           
  4217                           ;incstack = 0
  4218                           ;color_writetoaddr@address stored from wreg
  4219   004A1A  6E04               	movwf	color_writetoaddr@address^0,c
  4220   004A1C                     
  4221                           ;color.c: 38:     I2C_2_Master_Start();
  4222   004A1C  EC43  F025         	call	_I2C_2_Master_Start	;wreg free
  4223                           
  4224                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  4225   004A20  0E52               	movlw	82
  4226   004A22  EC38  F025         	call	_I2C_2_Master_Write
  4227                           
  4228                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  4229   004A26  5004               	movf	color_writetoaddr@address^0,w,c
  4230   004A28  0980               	iorlw	128
  4231   004A2A  EC38  F025         	call	_I2C_2_Master_Write
  4232                           
  4233                           ;color.c: 41:     I2C_2_Master_Write(value);
  4234   004A2E  5003               	movf	color_writetoaddr@value^0,w,c
  4235   004A30  EC38  F025         	call	_I2C_2_Master_Write
  4236                           
  4237                           ;color.c: 42:     I2C_2_Master_Stop();
  4238   004A34  EC3E  F025         	call	_I2C_2_Master_Stop	;wreg free
  4239   004A38  0012               	return		;funcret
  4240   004A3A                     __end_of_color_writetoaddr:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _I2C_2_Master_Init *****************
  4244 ;; Defined at:
  4245 ;;		line 4 in file "i2c.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_color_click_init
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text17
  4273   0049A2                     __ptext17:
  4274                           	callstack 0
  4275   0049A2                     _I2C_2_Master_Init:
  4276                           	callstack 29
  4277   0049A2                     
  4278                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4279   0049A2  010E               	movlb	14	; () banked
  4280   0049A4  51D9               	movf	217,w,b	;volatile
  4281   0049A6  0BF0               	andlw	-16
  4282   0049A8  0908               	iorlw	8
  4283   0049AA  6FD9               	movwf	217,b	;volatile
  4284   0049AC                     
  4285                           ; BSR set to: 14
  4286                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4287   0049AC  8BD9               	bsf	217,5,b	;volatile
  4288                           
  4289                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4290   0049AE  0E9F               	movlw	159
  4291   0049B0  6FD6               	movwf	214,b	;volatile
  4292   0049B2                     
  4293                           ; BSR set to: 14
  4294                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4295   0049B2  8A84               	bsf	132,5,c	;volatile
  4296   0049B4                     
  4297                           ; BSR set to: 14
  4298                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4299   0049B4  8C84               	bsf	132,6,c	;volatile
  4300   0049B6                     
  4301                           ; BSR set to: 14
  4302                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4303   0049B6  9BA7               	bcf	167,5,b	;volatile
  4304   0049B8                     
  4305                           ; BSR set to: 14
  4306                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4307   0049B8  9DA7               	bcf	167,6,b	;volatile
  4308                           
  4309                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4310   0049BA  0E1D               	movlw	29
  4311   0049BC  6F1D               	movwf	29,b	;volatile
  4312                           
  4313                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4314   0049BE  0E1E               	movlw	30
  4315   0049C0  6F1C               	movwf	28,b	;volatile
  4316                           
  4317                           ;i2c.c: 18:   RD5PPS=0x1C;
  4318   0049C2  0E1C               	movlw	28
  4319   0049C4  6F6F               	movwf	111,b	;volatile
  4320                           
  4321                           ;i2c.c: 19:   RD6PPS=0x1B;
  4322   0049C6  0E1B               	movlw	27
  4323   0049C8  6F70               	movwf	112,b	;volatile
  4324   0049CA                     
  4325                           ; BSR set to: 14
  4326   0049CA  0012               	return		;funcret
  4327   0049CC                     __end_of_I2C_2_Master_Init:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _color_cardCheck *****************
  4331 ;; Defined at:
  4332 ;;		line 171 in file "color.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  V               4  123[BANK0 ] float 
  4337 ;;  S               4  119[BANK0 ] float 
  4338 ;;  H               4  115[BANK0 ] float 
  4339 ;;  c               4  109[BANK0 ] float 
  4340 ;;  b               4  105[BANK0 ] float 
  4341 ;;  g               4  101[BANK0 ] float 
  4342 ;;  r               4   97[BANK0 ] float 
  4343 ;;  card_color      2  113[BANK0 ] unsigned int 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2   91[COMRAM] unsigned int 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;Total ram usage:       32 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 4
  4360 ;; This function calls:
  4361 ;;		_RGB_to_HSV
  4362 ;;		___flge
  4363 ;;		___xxtofl
  4364 ;;		_color_read_Blue
  4365 ;;		_color_read_Clear
  4366 ;;		_color_read_Green
  4367 ;;		_color_read_Red
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text18
  4374   000E08                     __ptext18:
  4375                           	callstack 0
  4376   000E08                     _color_cardCheck:
  4377                           	callstack 26
  4378   000E08                     
  4379                           ;color.c: 174:     float r = color_read_Red();
  4380   000E08  EC45  F023         	call	_color_read_Red	;wreg free
  4381   000E0C  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  4382   000E10  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  4383   000E14  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4384   000E16  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4385   000E18  0E00               	movlw	0
  4386   000E1A  EC3E  F019         	call	___xxtofl
  4387   000E1E  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  4388   000E22  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  4389   000E26  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  4390   000E2A  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  4391                           
  4392                           ;color.c: 175:     float g = color_read_Green();
  4393   000E2E  EC6D  F023         	call	_color_read_Green	;wreg free
  4394   000E32  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  4395   000E36  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  4396   000E3A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4397   000E3C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4398   000E3E  0E00               	movlw	0
  4399   000E40  EC3E  F019         	call	___xxtofl
  4400   000E44  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  4401   000E48  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  4402   000E4C  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  4403   000E50  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  4404                           
  4405                           ;color.c: 176:     float b = color_read_Blue();
  4406   000E54  ECBD  F023         	call	_color_read_Blue	;wreg free
  4407   000E58  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  4408   000E5C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  4409   000E60  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4410   000E62  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4411   000E64  0E00               	movlw	0
  4412   000E66  EC3E  F019         	call	___xxtofl
  4413   000E6A  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  4414   000E6E  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  4415   000E72  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  4416   000E76  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  4417                           
  4418                           ;color.c: 179:     float c = color_read_Clear();
  4419   000E7A  EC95  F023         	call	_color_read_Clear	;wreg free
  4420   000E7E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  4421   000E82  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  4422   000E86  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4423   000E88  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4424   000E8A  0E00               	movlw	0
  4425   000E8C  EC3E  F019         	call	___xxtofl
  4426   000E90  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  4427   000E94  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  4428   000E98  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  4429   000E9C  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  4430   000EA0                     
  4431                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  4432   000EA0  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  4433   000EA4  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  4434   000EA8  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  4435   000EAC  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  4436   000EB0  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  4437   000EB4  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  4438   000EB8  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  4439   000EBC  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  4440   000EC0  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  4441   000EC4  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  4442   000EC8  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  4443   000ECC  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  4444   000ED0  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  4445   000ED4  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  4446   000ED8  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  4447   000EDC  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  4448   000EE0  0ED3               	movlw	low color_cardCheck@H
  4449   000EE2  0100               	movlb	0	; () banked
  4450   000EE4  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  4451   000EE6  0ED7               	movlw	low color_cardCheck@S
  4452   000EE8  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  4453   000EEA  0EDB               	movlw	low color_cardCheck@V
  4454   000EEC  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  4455   000EEE  EC20  F00C         	call	_RGB_to_HSV	;wreg free
  4456   000EF2                     
  4457                           ;color.c: 195:     unsigned int card_color = 0;
  4458   000EF2  0E00               	movlw	0
  4459   000EF4  0100               	movlb	0	; () banked
  4460   000EF6  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4461   000EF8  0E00               	movlw	0
  4462   000EFA  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4463   000EFC                     
  4464                           ; BSR set to: 0
  4465                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  4466   000EFC  0E00               	movlw	0
  4467   000EFE  6E01               	movwf	___flge@ff1^0,c
  4468   000F00  0E80               	movlw	128
  4469   000F02  6E02               	movwf	(___flge@ff1+1)^0,c
  4470   000F04  0EB1               	movlw	177
  4471   000F06  6E03               	movwf	(___flge@ff1+2)^0,c
  4472   000F08  0E43               	movlw	67
  4473   000F0A  6E04               	movwf	(___flge@ff1+3)^0,c
  4474   000F0C  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4475   000F10  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4476   000F14  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4477   000F18  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4478   000F1C  ECA0  F020         	call	___flge	;wreg free
  4479   000F20  B0D8               	btfsc	status,0,c
  4480   000F22  EF95  F007         	goto	u4071
  4481   000F26  EF97  F007         	goto	u4070
  4482   000F2A                     u4071:
  4483   000F2A  EF1B  F008         	goto	l3936
  4484   000F2E                     u4070:
  4485   000F2E  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4486   000F32  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4487   000F36  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4488   000F3A  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4489   000F3E  0E00               	movlw	0
  4490   000F40  6E05               	movwf	___flge@ff2^0,c
  4491   000F42  0E00               	movlw	0
  4492   000F44  6E06               	movwf	(___flge@ff2+1)^0,c
  4493   000F46  0EB4               	movlw	180
  4494   000F48  6E07               	movwf	(___flge@ff2+2)^0,c
  4495   000F4A  0E43               	movlw	67
  4496   000F4C  6E08               	movwf	(___flge@ff2+3)^0,c
  4497   000F4E  ECA0  F020         	call	___flge	;wreg free
  4498   000F52  B0D8               	btfsc	status,0,c
  4499   000F54  EFAE  F007         	goto	u4081
  4500   000F58  EFB0  F007         	goto	u4080
  4501   000F5C                     u4081:
  4502   000F5C  EF1B  F008         	goto	l3936
  4503   000F60                     u4080:
  4504   000F60  0E00               	movlw	0
  4505   000F62  6E01               	movwf	___flge@ff1^0,c
  4506   000F64  0E00               	movlw	0
  4507   000F66  6E02               	movwf	(___flge@ff1+1)^0,c
  4508   000F68  0EAA               	movlw	170
  4509   000F6A  6E03               	movwf	(___flge@ff1+2)^0,c
  4510   000F6C  0E42               	movlw	66
  4511   000F6E  6E04               	movwf	(___flge@ff1+3)^0,c
  4512   000F70  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4513   000F74  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4514   000F78  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4515   000F7C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4516   000F80  ECA0  F020         	call	___flge	;wreg free
  4517   000F84  B0D8               	btfsc	status,0,c
  4518   000F86  EFC7  F007         	goto	u4091
  4519   000F8A  EFC9  F007         	goto	u4090
  4520   000F8E                     u4091:
  4521   000F8E  EF1B  F008         	goto	l3936
  4522   000F92                     u4090:
  4523   000F92  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4524   000F96  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4525   000F9A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4526   000F9E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4527   000FA2  0E00               	movlw	0
  4528   000FA4  6E05               	movwf	___flge@ff2^0,c
  4529   000FA6  0E00               	movlw	0
  4530   000FA8  6E06               	movwf	(___flge@ff2+1)^0,c
  4531   000FAA  0EB4               	movlw	180
  4532   000FAC  6E07               	movwf	(___flge@ff2+2)^0,c
  4533   000FAE  0E42               	movlw	66
  4534   000FB0  6E08               	movwf	(___flge@ff2+3)^0,c
  4535   000FB2  ECA0  F020         	call	___flge	;wreg free
  4536   000FB6  B0D8               	btfsc	status,0,c
  4537   000FB8  EFE0  F007         	goto	u4101
  4538   000FBC  EFE2  F007         	goto	u4100
  4539   000FC0                     u4101:
  4540   000FC0  EF1B  F008         	goto	l3936
  4541   000FC4                     u4100:
  4542   000FC4  0E00               	movlw	0
  4543   000FC6  6E01               	movwf	___flge@ff1^0,c
  4544   000FC8  0E00               	movlw	0
  4545   000FCA  6E02               	movwf	(___flge@ff1+1)^0,c
  4546   000FCC  0EA0               	movlw	160
  4547   000FCE  6E03               	movwf	(___flge@ff1+2)^0,c
  4548   000FD0  0E42               	movlw	66
  4549   000FD2  6E04               	movwf	(___flge@ff1+3)^0,c
  4550   000FD4  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4551   000FD8  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4552   000FDC  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4553   000FE0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4554   000FE4  ECA0  F020         	call	___flge	;wreg free
  4555   000FE8  B0D8               	btfsc	status,0,c
  4556   000FEA  EFF9  F007         	goto	u4111
  4557   000FEE  EFFB  F007         	goto	u4110
  4558   000FF2                     u4111:
  4559   000FF2  EF1B  F008         	goto	l3936
  4560   000FF6                     u4110:
  4561   000FF6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4562   000FFA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4563   000FFE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4564   001002  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4565   001006  0E00               	movlw	0
  4566   001008  6E05               	movwf	___flge@ff2^0,c
  4567   00100A  0E00               	movlw	0
  4568   00100C  6E06               	movwf	(___flge@ff2+1)^0,c
  4569   00100E  0EAA               	movlw	170
  4570   001010  6E07               	movwf	(___flge@ff2+2)^0,c
  4571   001012  0E42               	movlw	66
  4572   001014  6E08               	movwf	(___flge@ff2+3)^0,c
  4573   001016  ECA0  F020         	call	___flge	;wreg free
  4574   00101A  B0D8               	btfsc	status,0,c
  4575   00101C  EF12  F008         	goto	u4121
  4576   001020  EF14  F008         	goto	u4120
  4577   001024                     u4121:
  4578   001024  EF1B  F008         	goto	l3936
  4579   001028                     u4120:
  4580   001028  0E00               	movlw	0
  4581   00102A  0100               	movlb	0	; () banked
  4582   00102C  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4583   00102E  0E01               	movlw	1
  4584   001030  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4585   001032  EF1B  F00C         	goto	l4028
  4586   001036                     l3936:
  4587   001036  0E00               	movlw	0
  4588   001038  6E01               	movwf	___flge@ff1^0,c
  4589   00103A  0E00               	movlw	0
  4590   00103C  6E02               	movwf	(___flge@ff1+1)^0,c
  4591   00103E  0E86               	movlw	134
  4592   001040  6E03               	movwf	(___flge@ff1+2)^0,c
  4593   001042  0E42               	movlw	66
  4594   001044  6E04               	movwf	(___flge@ff1+3)^0,c
  4595   001046  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4596   00104A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4597   00104E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4598   001052  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4599   001056  ECA0  F020         	call	___flge	;wreg free
  4600   00105A  B0D8               	btfsc	status,0,c
  4601   00105C  EF32  F008         	goto	u4131
  4602   001060  EF34  F008         	goto	u4130
  4603   001064                     u4131:
  4604   001064  EFB8  F008         	goto	l3950
  4605   001068                     u4130:
  4606   001068  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4607   00106C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4608   001070  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4609   001074  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4610   001078  0E00               	movlw	0
  4611   00107A  6E05               	movwf	___flge@ff2^0,c
  4612   00107C  0E00               	movlw	0
  4613   00107E  6E06               	movwf	(___flge@ff2+1)^0,c
  4614   001080  0E9E               	movlw	158
  4615   001082  6E07               	movwf	(___flge@ff2+2)^0,c
  4616   001084  0E42               	movlw	66
  4617   001086  6E08               	movwf	(___flge@ff2+3)^0,c
  4618   001088  ECA0  F020         	call	___flge	;wreg free
  4619   00108C  B0D8               	btfsc	status,0,c
  4620   00108E  EF4B  F008         	goto	u4141
  4621   001092  EF4D  F008         	goto	u4140
  4622   001096                     u4141:
  4623   001096  EFB8  F008         	goto	l3950
  4624   00109A                     u4140:
  4625   00109A  0E00               	movlw	0
  4626   00109C  6E01               	movwf	___flge@ff1^0,c
  4627   00109E  0E00               	movlw	0
  4628   0010A0  6E02               	movwf	(___flge@ff1+1)^0,c
  4629   0010A2  0E48               	movlw	72
  4630   0010A4  6E03               	movwf	(___flge@ff1+2)^0,c
  4631   0010A6  0E42               	movlw	66
  4632   0010A8  6E04               	movwf	(___flge@ff1+3)^0,c
  4633   0010AA  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4634   0010AE  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4635   0010B2  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4636   0010B6  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4637   0010BA  ECA0  F020         	call	___flge	;wreg free
  4638   0010BE  B0D8               	btfsc	status,0,c
  4639   0010C0  EF64  F008         	goto	u4151
  4640   0010C4  EF66  F008         	goto	u4150
  4641   0010C8                     u4151:
  4642   0010C8  EFB8  F008         	goto	l3950
  4643   0010CC                     u4150:
  4644   0010CC  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4645   0010D0  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4646   0010D4  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4647   0010D8  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4648   0010DC  0E00               	movlw	0
  4649   0010DE  6E05               	movwf	___flge@ff2^0,c
  4650   0010E0  0E00               	movlw	0
  4651   0010E2  6E06               	movwf	(___flge@ff2+1)^0,c
  4652   0010E4  0E64               	movlw	100
  4653   0010E6  6E07               	movwf	(___flge@ff2+2)^0,c
  4654   0010E8  0E42               	movlw	66
  4655   0010EA  6E08               	movwf	(___flge@ff2+3)^0,c
  4656   0010EC  ECA0  F020         	call	___flge	;wreg free
  4657   0010F0  B0D8               	btfsc	status,0,c
  4658   0010F2  EF7D  F008         	goto	u4161
  4659   0010F6  EF7F  F008         	goto	u4160
  4660   0010FA                     u4161:
  4661   0010FA  EFB8  F008         	goto	l3950
  4662   0010FE                     u4160:
  4663   0010FE  0E00               	movlw	0
  4664   001100  6E01               	movwf	___flge@ff1^0,c
  4665   001102  0E00               	movlw	0
  4666   001104  6E02               	movwf	(___flge@ff1+1)^0,c
  4667   001106  0E20               	movlw	32
  4668   001108  6E03               	movwf	(___flge@ff1+2)^0,c
  4669   00110A  0E42               	movlw	66
  4670   00110C  6E04               	movwf	(___flge@ff1+3)^0,c
  4671   00110E  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4672   001112  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4673   001116  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4674   00111A  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4675   00111E  ECA0  F020         	call	___flge	;wreg free
  4676   001122  B0D8               	btfsc	status,0,c
  4677   001124  EF96  F008         	goto	u4171
  4678   001128  EF98  F008         	goto	u4170
  4679   00112C                     u4171:
  4680   00112C  EFB8  F008         	goto	l3950
  4681   001130                     u4170:
  4682   001130  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4683   001134  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4684   001138  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4685   00113C  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4686   001140  0E00               	movlw	0
  4687   001142  6E05               	movwf	___flge@ff2^0,c
  4688   001144  0E00               	movlw	0
  4689   001146  6E06               	movwf	(___flge@ff2+1)^0,c
  4690   001148  0E38               	movlw	56
  4691   00114A  6E07               	movwf	(___flge@ff2+2)^0,c
  4692   00114C  0E42               	movlw	66
  4693   00114E  6E08               	movwf	(___flge@ff2+3)^0,c
  4694   001150  ECA0  F020         	call	___flge	;wreg free
  4695   001154  B0D8               	btfsc	status,0,c
  4696   001156  EFAF  F008         	goto	u4181
  4697   00115A  EFB1  F008         	goto	u4180
  4698   00115E                     u4181:
  4699   00115E  EFB8  F008         	goto	l3950
  4700   001162                     u4180:
  4701   001162  0E00               	movlw	0
  4702   001164  0100               	movlb	0	; () banked
  4703   001166  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4704   001168  0E02               	movlw	2
  4705   00116A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4706   00116C  EF1B  F00C         	goto	l4028
  4707   001170                     l3950:
  4708   001170  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4709   001174  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4710   001178  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4711   00117C  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4712   001180  0E00               	movlw	0
  4713   001182  6E05               	movwf	___flge@ff2^0,c
  4714   001184  0E00               	movlw	0
  4715   001186  6E06               	movwf	(___flge@ff2+1)^0,c
  4716   001188  0E20               	movlw	32
  4717   00118A  6E07               	movwf	(___flge@ff2+2)^0,c
  4718   00118C  0E41               	movlw	65
  4719   00118E  6E08               	movwf	(___flge@ff2+3)^0,c
  4720   001190  ECA0  F020         	call	___flge	;wreg free
  4721   001194  B0D8               	btfsc	status,0,c
  4722   001196  EFCF  F008         	goto	u4191
  4723   00119A  EFD1  F008         	goto	u4190
  4724   00119E                     u4191:
  4725   00119E  EF0A  F009         	goto	l3958
  4726   0011A2                     u4190:
  4727   0011A2  0E00               	movlw	0
  4728   0011A4  6E01               	movwf	___flge@ff1^0,c
  4729   0011A6  0E00               	movlw	0
  4730   0011A8  6E02               	movwf	(___flge@ff1+1)^0,c
  4731   0011AA  0EF0               	movlw	240
  4732   0011AC  6E03               	movwf	(___flge@ff1+2)^0,c
  4733   0011AE  0E41               	movlw	65
  4734   0011B0  6E04               	movwf	(___flge@ff1+3)^0,c
  4735   0011B2  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4736   0011B6  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4737   0011BA  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4738   0011BE  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4739   0011C2  ECA0  F020         	call	___flge	;wreg free
  4740   0011C6  B0D8               	btfsc	status,0,c
  4741   0011C8  EFE8  F008         	goto	u4201
  4742   0011CC  EFEA  F008         	goto	u4200
  4743   0011D0                     u4201:
  4744   0011D0  EF0A  F009         	goto	l3958
  4745   0011D4                     u4200:
  4746   0011D4  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4747   0011D8  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4748   0011DC  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4749   0011E0  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4750   0011E4  0E00               	movlw	0
  4751   0011E6  6E05               	movwf	___flge@ff2^0,c
  4752   0011E8  0E00               	movlw	0
  4753   0011EA  6E06               	movwf	(___flge@ff2+1)^0,c
  4754   0011EC  0E0C               	movlw	12
  4755   0011EE  6E07               	movwf	(___flge@ff2+2)^0,c
  4756   0011F0  0E42               	movlw	66
  4757   0011F2  6E08               	movwf	(___flge@ff2+3)^0,c
  4758   0011F4  ECA0  F020         	call	___flge	;wreg free
  4759   0011F8  B0D8               	btfsc	status,0,c
  4760   0011FA  EF01  F009         	goto	u4211
  4761   0011FE  EF03  F009         	goto	u4210
  4762   001202                     u4211:
  4763   001202  EF0A  F009         	goto	l3958
  4764   001206                     u4210:
  4765   001206  0E00               	movlw	0
  4766   001208  0100               	movlb	0	; () banked
  4767   00120A  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4768   00120C  0E03               	movlw	3
  4769   00120E  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4770   001210  EF1B  F00C         	goto	l4028
  4771   001214                     l3958:
  4772   001214  0E00               	movlw	0
  4773   001216  6E01               	movwf	___flge@ff1^0,c
  4774   001218  0E00               	movlw	0
  4775   00121A  6E02               	movwf	(___flge@ff1+1)^0,c
  4776   00121C  0EA0               	movlw	160
  4777   00121E  6E03               	movwf	(___flge@ff1+2)^0,c
  4778   001220  0E41               	movlw	65
  4779   001222  6E04               	movwf	(___flge@ff1+3)^0,c
  4780   001224  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4781   001228  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4782   00122C  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4783   001230  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4784   001234  ECA0  F020         	call	___flge	;wreg free
  4785   001238  B0D8               	btfsc	status,0,c
  4786   00123A  EF21  F009         	goto	u4221
  4787   00123E  EF23  F009         	goto	u4220
  4788   001242                     u4221:
  4789   001242  EFA7  F009         	goto	l3972
  4790   001246                     u4220:
  4791   001246  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4792   00124A  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4793   00124E  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4794   001252  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4795   001256  0E00               	movlw	0
  4796   001258  6E05               	movwf	___flge@ff2^0,c
  4797   00125A  0E00               	movlw	0
  4798   00125C  6E06               	movwf	(___flge@ff2+1)^0,c
  4799   00125E  0EC8               	movlw	200
  4800   001260  6E07               	movwf	(___flge@ff2+2)^0,c
  4801   001262  0E41               	movlw	65
  4802   001264  6E08               	movwf	(___flge@ff2+3)^0,c
  4803   001266  ECA0  F020         	call	___flge	;wreg free
  4804   00126A  B0D8               	btfsc	status,0,c
  4805   00126C  EF3A  F009         	goto	u4231
  4806   001270  EF3C  F009         	goto	u4230
  4807   001274                     u4231:
  4808   001274  EFA7  F009         	goto	l3972
  4809   001278                     u4230:
  4810   001278  0E00               	movlw	0
  4811   00127A  6E01               	movwf	___flge@ff1^0,c
  4812   00127C  0E00               	movlw	0
  4813   00127E  6E02               	movwf	(___flge@ff1+1)^0,c
  4814   001280  0E82               	movlw	130
  4815   001282  6E03               	movwf	(___flge@ff1+2)^0,c
  4816   001284  0E42               	movlw	66
  4817   001286  6E04               	movwf	(___flge@ff1+3)^0,c
  4818   001288  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4819   00128C  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4820   001290  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4821   001294  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4822   001298  ECA0  F020         	call	___flge	;wreg free
  4823   00129C  B0D8               	btfsc	status,0,c
  4824   00129E  EF53  F009         	goto	u4241
  4825   0012A2  EF55  F009         	goto	u4240
  4826   0012A6                     u4241:
  4827   0012A6  EFA7  F009         	goto	l3972
  4828   0012AA                     u4240:
  4829   0012AA  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4830   0012AE  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4831   0012B2  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4832   0012B6  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4833   0012BA  0E00               	movlw	0
  4834   0012BC  6E05               	movwf	___flge@ff2^0,c
  4835   0012BE  0E00               	movlw	0
  4836   0012C0  6E06               	movwf	(___flge@ff2+1)^0,c
  4837   0012C2  0E8C               	movlw	140
  4838   0012C4  6E07               	movwf	(___flge@ff2+2)^0,c
  4839   0012C6  0E42               	movlw	66
  4840   0012C8  6E08               	movwf	(___flge@ff2+3)^0,c
  4841   0012CA  ECA0  F020         	call	___flge	;wreg free
  4842   0012CE  B0D8               	btfsc	status,0,c
  4843   0012D0  EF6C  F009         	goto	u4251
  4844   0012D4  EF6E  F009         	goto	u4250
  4845   0012D8                     u4251:
  4846   0012D8  EFA7  F009         	goto	l3972
  4847   0012DC                     u4250:
  4848   0012DC  0E00               	movlw	0
  4849   0012DE  6E01               	movwf	___flge@ff1^0,c
  4850   0012E0  0E00               	movlw	0
  4851   0012E2  6E02               	movwf	(___flge@ff1+1)^0,c
  4852   0012E4  0E58               	movlw	88
  4853   0012E6  6E03               	movwf	(___flge@ff1+2)^0,c
  4854   0012E8  0E42               	movlw	66
  4855   0012EA  6E04               	movwf	(___flge@ff1+3)^0,c
  4856   0012EC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4857   0012F0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4858   0012F4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4859   0012F8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4860   0012FC  ECA0  F020         	call	___flge	;wreg free
  4861   001300  B0D8               	btfsc	status,0,c
  4862   001302  EF85  F009         	goto	u4261
  4863   001306  EF87  F009         	goto	u4260
  4864   00130A                     u4261:
  4865   00130A  EFA7  F009         	goto	l3972
  4866   00130E                     u4260:
  4867   00130E  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4868   001312  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4869   001316  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4870   00131A  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4871   00131E  0E00               	movlw	0
  4872   001320  6E05               	movwf	___flge@ff2^0,c
  4873   001322  0E00               	movlw	0
  4874   001324  6E06               	movwf	(___flge@ff2+1)^0,c
  4875   001326  0E64               	movlw	100
  4876   001328  6E07               	movwf	(___flge@ff2+2)^0,c
  4877   00132A  0E42               	movlw	66
  4878   00132C  6E08               	movwf	(___flge@ff2+3)^0,c
  4879   00132E  ECA0  F020         	call	___flge	;wreg free
  4880   001332  B0D8               	btfsc	status,0,c
  4881   001334  EF9E  F009         	goto	u4271
  4882   001338  EFA0  F009         	goto	u4270
  4883   00133C                     u4271:
  4884   00133C  EFA7  F009         	goto	l3972
  4885   001340                     u4270:
  4886   001340  0E00               	movlw	0
  4887   001342  0100               	movlb	0	; () banked
  4888   001344  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4889   001346  0E04               	movlw	4
  4890   001348  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4891   00134A  EF1B  F00C         	goto	l4028
  4892   00134E                     l3972:
  4893   00134E  0E00               	movlw	0
  4894   001350  6E01               	movwf	___flge@ff1^0,c
  4895   001352  0E00               	movlw	0
  4896   001354  6E02               	movwf	(___flge@ff1+1)^0,c
  4897   001356  0E50               	movlw	80
  4898   001358  6E03               	movwf	(___flge@ff1+2)^0,c
  4899   00135A  0E41               	movlw	65
  4900   00135C  6E04               	movwf	(___flge@ff1+3)^0,c
  4901   00135E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4902   001362  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4903   001366  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4904   00136A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4905   00136E  ECA0  F020         	call	___flge	;wreg free
  4906   001372  B0D8               	btfsc	status,0,c
  4907   001374  EFBE  F009         	goto	u4281
  4908   001378  EFC0  F009         	goto	u4280
  4909   00137C                     u4281:
  4910   00137C  EF44  F00A         	goto	l3986
  4911   001380                     u4280:
  4912   001380  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4913   001384  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4914   001388  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4915   00138C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4916   001390  0E00               	movlw	0
  4917   001392  6E05               	movwf	___flge@ff2^0,c
  4918   001394  0E00               	movlw	0
  4919   001396  6E06               	movwf	(___flge@ff2+1)^0,c
  4920   001398  0E90               	movlw	144
  4921   00139A  6E07               	movwf	(___flge@ff2+2)^0,c
  4922   00139C  0E41               	movlw	65
  4923   00139E  6E08               	movwf	(___flge@ff2+3)^0,c
  4924   0013A0  ECA0  F020         	call	___flge	;wreg free
  4925   0013A4  B0D8               	btfsc	status,0,c
  4926   0013A6  EFD7  F009         	goto	u4291
  4927   0013AA  EFD9  F009         	goto	u4290
  4928   0013AE                     u4291:
  4929   0013AE  EF44  F00A         	goto	l3986
  4930   0013B2                     u4290:
  4931   0013B2  0E00               	movlw	0
  4932   0013B4  6E01               	movwf	___flge@ff1^0,c
  4933   0013B6  0E00               	movlw	0
  4934   0013B8  6E02               	movwf	(___flge@ff1+1)^0,c
  4935   0013BA  0E5C               	movlw	92
  4936   0013BC  6E03               	movwf	(___flge@ff1+2)^0,c
  4937   0013BE  0E42               	movlw	66
  4938   0013C0  6E04               	movwf	(___flge@ff1+3)^0,c
  4939   0013C2  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4940   0013C6  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4941   0013CA  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4942   0013CE  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4943   0013D2  ECA0  F020         	call	___flge	;wreg free
  4944   0013D6  B0D8               	btfsc	status,0,c
  4945   0013D8  EFF0  F009         	goto	u4301
  4946   0013DC  EFF2  F009         	goto	u4300
  4947   0013E0                     u4301:
  4948   0013E0  EF44  F00A         	goto	l3986
  4949   0013E4                     u4300:
  4950   0013E4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4951   0013E8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4952   0013EC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4953   0013F0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4954   0013F4  0E00               	movlw	0
  4955   0013F6  6E05               	movwf	___flge@ff2^0,c
  4956   0013F8  0E00               	movlw	0
  4957   0013FA  6E06               	movwf	(___flge@ff2+1)^0,c
  4958   0013FC  0E70               	movlw	112
  4959   0013FE  6E07               	movwf	(___flge@ff2+2)^0,c
  4960   001400  0E42               	movlw	66
  4961   001402  6E08               	movwf	(___flge@ff2+3)^0,c
  4962   001404  ECA0  F020         	call	___flge	;wreg free
  4963   001408  B0D8               	btfsc	status,0,c
  4964   00140A  EF09  F00A         	goto	u4311
  4965   00140E  EF0B  F00A         	goto	u4310
  4966   001412                     u4311:
  4967   001412  EF44  F00A         	goto	l3986
  4968   001416                     u4310:
  4969   001416  0E00               	movlw	0
  4970   001418  6E01               	movwf	___flge@ff1^0,c
  4971   00141A  0E00               	movlw	0
  4972   00141C  6E02               	movwf	(___flge@ff1+1)^0,c
  4973   00141E  0E48               	movlw	72
  4974   001420  6E03               	movwf	(___flge@ff1+2)^0,c
  4975   001422  0E42               	movlw	66
  4976   001424  6E04               	movwf	(___flge@ff1+3)^0,c
  4977   001426  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4978   00142A  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4979   00142E  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4980   001432  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4981   001436  ECA0  F020         	call	___flge	;wreg free
  4982   00143A  B0D8               	btfsc	status,0,c
  4983   00143C  EF22  F00A         	goto	u4321
  4984   001440  EF24  F00A         	goto	u4320
  4985   001444                     u4321:
  4986   001444  EF44  F00A         	goto	l3986
  4987   001448                     u4320:
  4988   001448  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4989   00144C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4990   001450  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4991   001454  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4992   001458  0E00               	movlw	0
  4993   00145A  6E05               	movwf	___flge@ff2^0,c
  4994   00145C  0E00               	movlw	0
  4995   00145E  6E06               	movwf	(___flge@ff2+1)^0,c
  4996   001460  0E58               	movlw	88
  4997   001462  6E07               	movwf	(___flge@ff2+2)^0,c
  4998   001464  0E42               	movlw	66
  4999   001466  6E08               	movwf	(___flge@ff2+3)^0,c
  5000   001468  ECA0  F020         	call	___flge	;wreg free
  5001   00146C  B0D8               	btfsc	status,0,c
  5002   00146E  EF3B  F00A         	goto	u4331
  5003   001472  EF3D  F00A         	goto	u4330
  5004   001476                     u4331:
  5005   001476  EF44  F00A         	goto	l3986
  5006   00147A                     u4330:
  5007   00147A  0E00               	movlw	0
  5008   00147C  0100               	movlb	0	; () banked
  5009   00147E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5010   001480  0E05               	movlw	5
  5011   001482  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5012   001484  EF1B  F00C         	goto	l4028
  5013   001488                     l3986:
  5014   001488  0E00               	movlw	0
  5015   00148A  6E01               	movwf	___flge@ff1^0,c
  5016   00148C  0E00               	movlw	0
  5017   00148E  6E02               	movwf	(___flge@ff1+1)^0,c
  5018   001490  0EA0               	movlw	160
  5019   001492  6E03               	movwf	(___flge@ff1+2)^0,c
  5020   001494  0E40               	movlw	64
  5021   001496  6E04               	movwf	(___flge@ff1+3)^0,c
  5022   001498  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5023   00149C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5024   0014A0  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5025   0014A4  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5026   0014A8  ECA0  F020         	call	___flge	;wreg free
  5027   0014AC  B0D8               	btfsc	status,0,c
  5028   0014AE  EF5B  F00A         	goto	u4341
  5029   0014B2  EF5D  F00A         	goto	u4340
  5030   0014B6                     u4341:
  5031   0014B6  EFE1  F00A         	goto	l4000
  5032   0014BA                     u4340:
  5033   0014BA  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5034   0014BE  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5035   0014C2  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5036   0014C6  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5037   0014CA  0E00               	movlw	0
  5038   0014CC  6E05               	movwf	___flge@ff2^0,c
  5039   0014CE  0E00               	movlw	0
  5040   0014D0  6E06               	movwf	(___flge@ff2+1)^0,c
  5041   0014D2  0E20               	movlw	32
  5042   0014D4  6E07               	movwf	(___flge@ff2+2)^0,c
  5043   0014D6  0E41               	movlw	65
  5044   0014D8  6E08               	movwf	(___flge@ff2+3)^0,c
  5045   0014DA  ECA0  F020         	call	___flge	;wreg free
  5046   0014DE  B0D8               	btfsc	status,0,c
  5047   0014E0  EF74  F00A         	goto	u4351
  5048   0014E4  EF76  F00A         	goto	u4350
  5049   0014E8                     u4351:
  5050   0014E8  EFE1  F00A         	goto	l4000
  5051   0014EC                     u4350:
  5052   0014EC  0E00               	movlw	0
  5053   0014EE  6E01               	movwf	___flge@ff1^0,c
  5054   0014F0  0E00               	movlw	0
  5055   0014F2  6E02               	movwf	(___flge@ff1+1)^0,c
  5056   0014F4  0E8C               	movlw	140
  5057   0014F6  6E03               	movwf	(___flge@ff1+2)^0,c
  5058   0014F8  0E42               	movlw	66
  5059   0014FA  6E04               	movwf	(___flge@ff1+3)^0,c
  5060   0014FC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5061   001500  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5062   001504  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5063   001508  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5064   00150C  ECA0  F020         	call	___flge	;wreg free
  5065   001510  B0D8               	btfsc	status,0,c
  5066   001512  EF8D  F00A         	goto	u4361
  5067   001516  EF8F  F00A         	goto	u4360
  5068   00151A                     u4361:
  5069   00151A  EFE1  F00A         	goto	l4000
  5070   00151E                     u4360:
  5071   00151E  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5072   001522  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5073   001526  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5074   00152A  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5075   00152E  0E00               	movlw	0
  5076   001530  6E05               	movwf	___flge@ff2^0,c
  5077   001532  0E00               	movlw	0
  5078   001534  6E06               	movwf	(___flge@ff2+1)^0,c
  5079   001536  0E96               	movlw	150
  5080   001538  6E07               	movwf	(___flge@ff2+2)^0,c
  5081   00153A  0E42               	movlw	66
  5082   00153C  6E08               	movwf	(___flge@ff2+3)^0,c
  5083   00153E  ECA0  F020         	call	___flge	;wreg free
  5084   001542  B0D8               	btfsc	status,0,c
  5085   001544  EFA6  F00A         	goto	u4371
  5086   001548  EFA8  F00A         	goto	u4370
  5087   00154C                     u4371:
  5088   00154C  EFE1  F00A         	goto	l4000
  5089   001550                     u4370:
  5090   001550  0E00               	movlw	0
  5091   001552  6E01               	movwf	___flge@ff1^0,c
  5092   001554  0E00               	movlw	0
  5093   001556  6E02               	movwf	(___flge@ff1+1)^0,c
  5094   001558  0E78               	movlw	120
  5095   00155A  6E03               	movwf	(___flge@ff1+2)^0,c
  5096   00155C  0E42               	movlw	66
  5097   00155E  6E04               	movwf	(___flge@ff1+3)^0,c
  5098   001560  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5099   001564  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5100   001568  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5101   00156C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5102   001570  ECA0  F020         	call	___flge	;wreg free
  5103   001574  B0D8               	btfsc	status,0,c
  5104   001576  EFBF  F00A         	goto	u4381
  5105   00157A  EFC1  F00A         	goto	u4380
  5106   00157E                     u4381:
  5107   00157E  EFE1  F00A         	goto	l4000
  5108   001582                     u4380:
  5109   001582  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5110   001586  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5111   00158A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5112   00158E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5113   001592  0E00               	movlw	0
  5114   001594  6E05               	movwf	___flge@ff2^0,c
  5115   001596  0E00               	movlw	0
  5116   001598  6E06               	movwf	(___flge@ff2+1)^0,c
  5117   00159A  0E86               	movlw	134
  5118   00159C  6E07               	movwf	(___flge@ff2+2)^0,c
  5119   00159E  0E42               	movlw	66
  5120   0015A0  6E08               	movwf	(___flge@ff2+3)^0,c
  5121   0015A2  ECA0  F020         	call	___flge	;wreg free
  5122   0015A6  B0D8               	btfsc	status,0,c
  5123   0015A8  EFD8  F00A         	goto	u4391
  5124   0015AC  EFDA  F00A         	goto	u4390
  5125   0015B0                     u4391:
  5126   0015B0  EFE1  F00A         	goto	l4000
  5127   0015B4                     u4390:
  5128   0015B4  0E00               	movlw	0
  5129   0015B6  0100               	movlb	0	; () banked
  5130   0015B8  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5131   0015BA  0E06               	movlw	6
  5132   0015BC  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5133   0015BE  EF1B  F00C         	goto	l4028
  5134   0015C2                     l4000:
  5135   0015C2  0E00               	movlw	0
  5136   0015C4  6E01               	movwf	___flge@ff1^0,c
  5137   0015C6  0E00               	movlw	0
  5138   0015C8  6E02               	movwf	(___flge@ff1+1)^0,c
  5139   0015CA  0E94               	movlw	148
  5140   0015CC  6E03               	movwf	(___flge@ff1+2)^0,c
  5141   0015CE  0E42               	movlw	66
  5142   0015D0  6E04               	movwf	(___flge@ff1+3)^0,c
  5143   0015D2  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5144   0015D6  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5145   0015DA  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5146   0015DE  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5147   0015E2  ECA0  F020         	call	___flge	;wreg free
  5148   0015E6  B0D8               	btfsc	status,0,c
  5149   0015E8  EFF8  F00A         	goto	u4401
  5150   0015EC  EFFA  F00A         	goto	u4400
  5151   0015F0                     u4401:
  5152   0015F0  EF7E  F00B         	goto	l4014
  5153   0015F4                     u4400:
  5154   0015F4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5155   0015F8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5156   0015FC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5157   001600  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5158   001604  0E00               	movlw	0
  5159   001606  6E05               	movwf	___flge@ff2^0,c
  5160   001608  0E00               	movlw	0
  5161   00160A  6E06               	movwf	(___flge@ff2+1)^0,c
  5162   00160C  0EAA               	movlw	170
  5163   00160E  6E07               	movwf	(___flge@ff2+2)^0,c
  5164   001610  0E42               	movlw	66
  5165   001612  6E08               	movwf	(___flge@ff2+3)^0,c
  5166   001614  ECA0  F020         	call	___flge	;wreg free
  5167   001618  B0D8               	btfsc	status,0,c
  5168   00161A  EF11  F00B         	goto	u4411
  5169   00161E  EF13  F00B         	goto	u4410
  5170   001622                     u4411:
  5171   001622  EF7E  F00B         	goto	l4014
  5172   001626                     u4410:
  5173   001626  0E00               	movlw	0
  5174   001628  6E01               	movwf	___flge@ff1^0,c
  5175   00162A  0E00               	movlw	0
  5176   00162C  6E02               	movwf	(___flge@ff1+1)^0,c
  5177   00162E  0EE0               	movlw	224
  5178   001630  6E03               	movwf	(___flge@ff1+2)^0,c
  5179   001632  0E41               	movlw	65
  5180   001634  6E04               	movwf	(___flge@ff1+3)^0,c
  5181   001636  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5182   00163A  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5183   00163E  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5184   001642  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5185   001646  ECA0  F020         	call	___flge	;wreg free
  5186   00164A  B0D8               	btfsc	status,0,c
  5187   00164C  EF2A  F00B         	goto	u4421
  5188   001650  EF2C  F00B         	goto	u4420
  5189   001654                     u4421:
  5190   001654  EF7E  F00B         	goto	l4014
  5191   001658                     u4420:
  5192   001658  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5193   00165C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5194   001660  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5195   001664  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5196   001668  0E00               	movlw	0
  5197   00166A  6E05               	movwf	___flge@ff2^0,c
  5198   00166C  0E00               	movlw	0
  5199   00166E  6E06               	movwf	(___flge@ff2+1)^0,c
  5200   001670  0E04               	movlw	4
  5201   001672  6E07               	movwf	(___flge@ff2+2)^0,c
  5202   001674  0E42               	movlw	66
  5203   001676  6E08               	movwf	(___flge@ff2+3)^0,c
  5204   001678  ECA0  F020         	call	___flge	;wreg free
  5205   00167C  B0D8               	btfsc	status,0,c
  5206   00167E  EF43  F00B         	goto	u4431
  5207   001682  EF45  F00B         	goto	u4430
  5208   001686                     u4431:
  5209   001686  EF7E  F00B         	goto	l4014
  5210   00168A                     u4430:
  5211   00168A  0E00               	movlw	0
  5212   00168C  6E01               	movwf	___flge@ff1^0,c
  5213   00168E  0E00               	movlw	0
  5214   001690  6E02               	movwf	(___flge@ff1+1)^0,c
  5215   001692  0E14               	movlw	20
  5216   001694  6E03               	movwf	(___flge@ff1+2)^0,c
  5217   001696  0E42               	movlw	66
  5218   001698  6E04               	movwf	(___flge@ff1+3)^0,c
  5219   00169A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5220   00169E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5221   0016A2  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5222   0016A6  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5223   0016AA  ECA0  F020         	call	___flge	;wreg free
  5224   0016AE  B0D8               	btfsc	status,0,c
  5225   0016B0  EF5C  F00B         	goto	u4441
  5226   0016B4  EF5E  F00B         	goto	u4440
  5227   0016B8                     u4441:
  5228   0016B8  EF7E  F00B         	goto	l4014
  5229   0016BC                     u4440:
  5230   0016BC  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5231   0016C0  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5232   0016C4  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5233   0016C8  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5234   0016CC  0E00               	movlw	0
  5235   0016CE  6E05               	movwf	___flge@ff2^0,c
  5236   0016D0  0E00               	movlw	0
  5237   0016D2  6E06               	movwf	(___flge@ff2+1)^0,c
  5238   0016D4  0E28               	movlw	40
  5239   0016D6  6E07               	movwf	(___flge@ff2+2)^0,c
  5240   0016D8  0E42               	movlw	66
  5241   0016DA  6E08               	movwf	(___flge@ff2+3)^0,c
  5242   0016DC  ECA0  F020         	call	___flge	;wreg free
  5243   0016E0  B0D8               	btfsc	status,0,c
  5244   0016E2  EF75  F00B         	goto	u4451
  5245   0016E6  EF77  F00B         	goto	u4450
  5246   0016EA                     u4451:
  5247   0016EA  EF7E  F00B         	goto	l4014
  5248   0016EE                     u4450:
  5249   0016EE  0E00               	movlw	0
  5250   0016F0  0100               	movlb	0	; () banked
  5251   0016F2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5252   0016F4  0E07               	movlw	7
  5253   0016F6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5254   0016F8  EF1B  F00C         	goto	l4028
  5255   0016FC                     l4014:
  5256   0016FC  0E00               	movlw	0
  5257   0016FE  6E01               	movwf	___flge@ff1^0,c
  5258   001700  0E00               	movlw	0
  5259   001702  6E02               	movwf	(___flge@ff1+1)^0,c
  5260   001704  0EB0               	movlw	176
  5261   001706  6E03               	movwf	(___flge@ff1+2)^0,c
  5262   001708  0E41               	movlw	65
  5263   00170A  6E04               	movwf	(___flge@ff1+3)^0,c
  5264   00170C  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5265   001710  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5266   001714  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5267   001718  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5268   00171C  ECA0  F020         	call	___flge	;wreg free
  5269   001720  B0D8               	btfsc	status,0,c
  5270   001722  EF95  F00B         	goto	u4461
  5271   001726  EF97  F00B         	goto	u4460
  5272   00172A                     u4461:
  5273   00172A  EF1B  F00C         	goto	l99
  5274   00172E                     u4460:
  5275   00172E  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5276   001732  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5277   001736  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5278   00173A  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5279   00173E  0E00               	movlw	0
  5280   001740  6E05               	movwf	___flge@ff2^0,c
  5281   001742  0E00               	movlw	0
  5282   001744  6E06               	movwf	(___flge@ff2+1)^0,c
  5283   001746  0ED8               	movlw	216
  5284   001748  6E07               	movwf	(___flge@ff2+2)^0,c
  5285   00174A  0E41               	movlw	65
  5286   00174C  6E08               	movwf	(___flge@ff2+3)^0,c
  5287   00174E  ECA0  F020         	call	___flge	;wreg free
  5288   001752  B0D8               	btfsc	status,0,c
  5289   001754  EFAE  F00B         	goto	u4471
  5290   001758  EFB0  F00B         	goto	u4470
  5291   00175C                     u4471:
  5292   00175C  EF1B  F00C         	goto	l99
  5293   001760                     u4470:
  5294   001760  0E00               	movlw	0
  5295   001762  6E01               	movwf	___flge@ff1^0,c
  5296   001764  0E00               	movlw	0
  5297   001766  6E02               	movwf	(___flge@ff1+1)^0,c
  5298   001768  0E40               	movlw	64
  5299   00176A  6E03               	movwf	(___flge@ff1+2)^0,c
  5300   00176C  0E42               	movlw	66
  5301   00176E  6E04               	movwf	(___flge@ff1+3)^0,c
  5302   001770  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5303   001774  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5304   001778  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5305   00177C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5306   001780  ECA0  F020         	call	___flge	;wreg free
  5307   001784  B0D8               	btfsc	status,0,c
  5308   001786  EFC7  F00B         	goto	u4481
  5309   00178A  EFC9  F00B         	goto	u4480
  5310   00178E                     u4481:
  5311   00178E  EF1B  F00C         	goto	l99
  5312   001792                     u4480:
  5313   001792  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5314   001796  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5315   00179A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5316   00179E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5317   0017A2  0E00               	movlw	0
  5318   0017A4  6E05               	movwf	___flge@ff2^0,c
  5319   0017A6  0E00               	movlw	0
  5320   0017A8  6E06               	movwf	(___flge@ff2+1)^0,c
  5321   0017AA  0E54               	movlw	84
  5322   0017AC  6E07               	movwf	(___flge@ff2+2)^0,c
  5323   0017AE  0E42               	movlw	66
  5324   0017B0  6E08               	movwf	(___flge@ff2+3)^0,c
  5325   0017B2  ECA0  F020         	call	___flge	;wreg free
  5326   0017B6  B0D8               	btfsc	status,0,c
  5327   0017B8  EFE0  F00B         	goto	u4491
  5328   0017BC  EFE2  F00B         	goto	u4490
  5329   0017C0                     u4491:
  5330   0017C0  EF1B  F00C         	goto	l99
  5331   0017C4                     u4490:
  5332   0017C4  0E00               	movlw	0
  5333   0017C6  6E01               	movwf	___flge@ff1^0,c
  5334   0017C8  0E00               	movlw	0
  5335   0017CA  6E02               	movwf	(___flge@ff1+1)^0,c
  5336   0017CC  0E34               	movlw	52
  5337   0017CE  6E03               	movwf	(___flge@ff1+2)^0,c
  5338   0017D0  0E42               	movlw	66
  5339   0017D2  6E04               	movwf	(___flge@ff1+3)^0,c
  5340   0017D4  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5341   0017D8  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5342   0017DC  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5343   0017E0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5344   0017E4  ECA0  F020         	call	___flge	;wreg free
  5345   0017E8  B0D8               	btfsc	status,0,c
  5346   0017EA  EFF9  F00B         	goto	u4501
  5347   0017EE  EFFB  F00B         	goto	u4500
  5348   0017F2                     u4501:
  5349   0017F2  EF1B  F00C         	goto	l99
  5350   0017F6                     u4500:
  5351   0017F6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5352   0017FA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5353   0017FE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5354   001802  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5355   001806  0E00               	movlw	0
  5356   001808  6E05               	movwf	___flge@ff2^0,c
  5357   00180A  0E00               	movlw	0
  5358   00180C  6E06               	movwf	(___flge@ff2+1)^0,c
  5359   00180E  0E48               	movlw	72
  5360   001810  6E07               	movwf	(___flge@ff2+2)^0,c
  5361   001812  0E42               	movlw	66
  5362   001814  6E08               	movwf	(___flge@ff2+3)^0,c
  5363   001816  ECA0  F020         	call	___flge	;wreg free
  5364   00181A  B0D8               	btfsc	status,0,c
  5365   00181C  EF12  F00C         	goto	u4511
  5366   001820  EF14  F00C         	goto	u4510
  5367   001824                     u4511:
  5368   001824  EF1B  F00C         	goto	l99
  5369   001828                     u4510:
  5370   001828  0E00               	movlw	0
  5371   00182A  0100               	movlb	0	; () banked
  5372   00182C  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5373   00182E  0E08               	movlw	8
  5374   001830  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5375   001832  EF1B  F00C         	goto	l4028
  5376   001836                     l99:
  5377   001836                     l4028:
  5378                           
  5379                           ;color.c: 222:     return card_color;
  5380   001836  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  5381   00183A  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  5382   00183E  0012               	return		;funcret
  5383   001840                     __end_of_color_cardCheck:
  5384                           	callstack 0
  5385                           
  5386 ;; *************** function _color_read_Red *****************
  5387 ;; Defined at:
  5388 ;;		line 46 in file "color.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  tmp             2    9[COMRAM] unsigned int 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2    4[COMRAM] unsigned int 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;Total ram usage:        7 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; Hardware stack levels required when called: 2
  5409 ;; This function calls:
  5410 ;;		_I2C_2_Master_Read
  5411 ;;		_I2C_2_Master_RepStart
  5412 ;;		_I2C_2_Master_Start
  5413 ;;		_I2C_2_Master_Stop
  5414 ;;		_I2C_2_Master_Write
  5415 ;; This function is called by:
  5416 ;;		_color_cardCheck
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text19
  5421   00468A                     __ptext19:
  5422                           	callstack 0
  5423   00468A                     _color_read_Red:
  5424                           	callstack 27
  5425   00468A                     
  5426                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  5427   00468A  EC43  F025         	call	_I2C_2_Master_Start	;wreg free
  5428                           
  5429                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  5430   00468E  0E52               	movlw	82
  5431   004690  EC38  F025         	call	_I2C_2_Master_Write
  5432                           
  5433                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  5434   004694  0EB6               	movlw	182
  5435   004696  EC38  F025         	call	_I2C_2_Master_Write
  5436                           
  5437                           ;color.c: 52:  I2C_2_Master_RepStart();
  5438   00469A  EC48  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5439                           
  5440                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  5441   00469E  0E53               	movlw	83
  5442   0046A0  EC38  F025         	call	_I2C_2_Master_Write
  5443                           
  5444                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  5445   0046A4  0E01               	movlw	1
  5446   0046A6  EC29  F024         	call	_I2C_2_Master_Read
  5447   0046AA  6E07               	movwf	??_color_read_Red^0,c
  5448   0046AC  5007               	movf	??_color_read_Red^0,w,c
  5449   0046AE  6E0A               	movwf	color_read_Red@tmp^0,c
  5450   0046B0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5451                           
  5452                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5453   0046B2  0E00               	movlw	0
  5454   0046B4  EC29  F024         	call	_I2C_2_Master_Read
  5455   0046B8  6E07               	movwf	??_color_read_Red^0,c
  5456   0046BA  5007               	movf	??_color_read_Red^0,w,c
  5457   0046BC  6E09               	movwf	(??_color_read_Red+2)^0,c
  5458   0046BE  6A08               	clrf	(??_color_read_Red+1)^0,c
  5459   0046C0  500A               	movf	color_read_Red@tmp^0,w,c
  5460   0046C2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5461   0046C4  6E0A               	movwf	color_read_Red@tmp^0,c
  5462   0046C6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5463   0046C8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5464   0046CA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5465                           
  5466                           ;color.c: 56:  I2C_2_Master_Stop();
  5467   0046CC  EC3E  F025         	call	_I2C_2_Master_Stop	;wreg free
  5468   0046D0                     
  5469                           ;color.c: 57:  return tmp;
  5470   0046D0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5471   0046D4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5472   0046D8  0012               	return		;funcret
  5473   0046DA                     __end_of_color_read_Red:
  5474                           	callstack 0
  5475                           
  5476 ;; *************** function _color_read_Green *****************
  5477 ;; Defined at:
  5478 ;;		line 60 in file "color.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  tmp             2    9[COMRAM] unsigned int 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  2    4[COMRAM] unsigned int 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5494 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;Total ram usage:        7 bytes
  5497 ;; Hardware stack levels used: 1
  5498 ;; Hardware stack levels required when called: 2
  5499 ;; This function calls:
  5500 ;;		_I2C_2_Master_Read
  5501 ;;		_I2C_2_Master_RepStart
  5502 ;;		_I2C_2_Master_Start
  5503 ;;		_I2C_2_Master_Stop
  5504 ;;		_I2C_2_Master_Write
  5505 ;; This function is called by:
  5506 ;;		_color_cardCheck
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text20
  5511   0046DA                     __ptext20:
  5512                           	callstack 0
  5513   0046DA                     _color_read_Green:
  5514                           	callstack 27
  5515   0046DA                     
  5516                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  5517   0046DA  EC43  F025         	call	_I2C_2_Master_Start	;wreg free
  5518                           
  5519                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  5520   0046DE  0E52               	movlw	82
  5521   0046E0  EC38  F025         	call	_I2C_2_Master_Write
  5522                           
  5523                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  5524   0046E4  0EB8               	movlw	184
  5525   0046E6  EC38  F025         	call	_I2C_2_Master_Write
  5526                           
  5527                           ;color.c: 66:  I2C_2_Master_RepStart();
  5528   0046EA  EC48  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5529                           
  5530                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  5531   0046EE  0E53               	movlw	83
  5532   0046F0  EC38  F025         	call	_I2C_2_Master_Write
  5533                           
  5534                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  5535   0046F4  0E01               	movlw	1
  5536   0046F6  EC29  F024         	call	_I2C_2_Master_Read
  5537   0046FA  6E07               	movwf	??_color_read_Green^0,c
  5538   0046FC  5007               	movf	??_color_read_Green^0,w,c
  5539   0046FE  6E0A               	movwf	color_read_Green@tmp^0,c
  5540   004700  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5541                           
  5542                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5543   004702  0E00               	movlw	0
  5544   004704  EC29  F024         	call	_I2C_2_Master_Read
  5545   004708  6E07               	movwf	??_color_read_Green^0,c
  5546   00470A  5007               	movf	??_color_read_Green^0,w,c
  5547   00470C  6E09               	movwf	(??_color_read_Green+2)^0,c
  5548   00470E  6A08               	clrf	(??_color_read_Green+1)^0,c
  5549   004710  500A               	movf	color_read_Green@tmp^0,w,c
  5550   004712  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5551   004714  6E0A               	movwf	color_read_Green@tmp^0,c
  5552   004716  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5553   004718  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5554   00471A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5555                           
  5556                           ;color.c: 70:  I2C_2_Master_Stop();
  5557   00471C  EC3E  F025         	call	_I2C_2_Master_Stop	;wreg free
  5558   004720                     
  5559                           ;color.c: 71:  return tmp;
  5560   004720  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5561   004724  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5562   004728  0012               	return		;funcret
  5563   00472A                     __end_of_color_read_Green:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _color_read_Clear *****************
  5567 ;; Defined at:
  5568 ;;		line 88 in file "color.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  tmp             2    9[COMRAM] unsigned int 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  2    4[COMRAM] unsigned int 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;Total ram usage:        7 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; Hardware stack levels required when called: 2
  5589 ;; This function calls:
  5590 ;;		_I2C_2_Master_Read
  5591 ;;		_I2C_2_Master_RepStart
  5592 ;;		_I2C_2_Master_Start
  5593 ;;		_I2C_2_Master_Stop
  5594 ;;		_I2C_2_Master_Write
  5595 ;; This function is called by:
  5596 ;;		_color_cardCheck
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text21
  5601   00472A                     __ptext21:
  5602                           	callstack 0
  5603   00472A                     _color_read_Clear:
  5604                           	callstack 27
  5605   00472A                     
  5606                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  5607   00472A  EC43  F025         	call	_I2C_2_Master_Start	;wreg free
  5608                           
  5609                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  5610   00472E  0E52               	movlw	82
  5611   004730  EC38  F025         	call	_I2C_2_Master_Write
  5612                           
  5613                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  5614   004734  0EB4               	movlw	180
  5615   004736  EC38  F025         	call	_I2C_2_Master_Write
  5616                           
  5617                           ;color.c: 96:  I2C_2_Master_RepStart();
  5618   00473A  EC48  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5619                           
  5620                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  5621   00473E  0E53               	movlw	83
  5622   004740  EC38  F025         	call	_I2C_2_Master_Write
  5623                           
  5624                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  5625   004744  0E01               	movlw	1
  5626   004746  EC29  F024         	call	_I2C_2_Master_Read
  5627   00474A  6E07               	movwf	??_color_read_Clear^0,c
  5628   00474C  5007               	movf	??_color_read_Clear^0,w,c
  5629   00474E  6E0A               	movwf	color_read_Clear@tmp^0,c
  5630   004750  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  5631                           
  5632                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5633   004752  0E00               	movlw	0
  5634   004754  EC29  F024         	call	_I2C_2_Master_Read
  5635   004758  6E07               	movwf	??_color_read_Clear^0,c
  5636   00475A  5007               	movf	??_color_read_Clear^0,w,c
  5637   00475C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  5638   00475E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  5639   004760  500A               	movf	color_read_Clear@tmp^0,w,c
  5640   004762  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  5641   004764  6E0A               	movwf	color_read_Clear@tmp^0,c
  5642   004766  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  5643   004768  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  5644   00476A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  5645                           
  5646                           ;color.c: 100:  I2C_2_Master_Stop();
  5647   00476C  EC3E  F025         	call	_I2C_2_Master_Stop	;wreg free
  5648   004770                     
  5649                           ;color.c: 101:  return tmp;
  5650   004770  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  5651   004774  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5652   004778  0012               	return		;funcret
  5653   00477A                     __end_of_color_read_Clear:
  5654                           	callstack 0
  5655                           
  5656 ;; *************** function _color_read_Blue *****************
  5657 ;; Defined at:
  5658 ;;		line 74 in file "color.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  tmp             2    9[COMRAM] unsigned int 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  2    4[COMRAM] unsigned int 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5674 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5675 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5676 ;;Total ram usage:        7 bytes
  5677 ;; Hardware stack levels used: 1
  5678 ;; Hardware stack levels required when called: 2
  5679 ;; This function calls:
  5680 ;;		_I2C_2_Master_Read
  5681 ;;		_I2C_2_Master_RepStart
  5682 ;;		_I2C_2_Master_Start
  5683 ;;		_I2C_2_Master_Stop
  5684 ;;		_I2C_2_Master_Write
  5685 ;; This function is called by:
  5686 ;;		_color_cardCheck
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text22
  5691   00477A                     __ptext22:
  5692                           	callstack 0
  5693   00477A                     _color_read_Blue:
  5694                           	callstack 27
  5695   00477A                     
  5696                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  5697   00477A  EC43  F025         	call	_I2C_2_Master_Start	;wreg free
  5698                           
  5699                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  5700   00477E  0E52               	movlw	82
  5701   004780  EC38  F025         	call	_I2C_2_Master_Write
  5702                           
  5703                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  5704   004784  0EBA               	movlw	186
  5705   004786  EC38  F025         	call	_I2C_2_Master_Write
  5706                           
  5707                           ;color.c: 80:  I2C_2_Master_RepStart();
  5708   00478A  EC48  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5709                           
  5710                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  5711   00478E  0E53               	movlw	83
  5712   004790  EC38  F025         	call	_I2C_2_Master_Write
  5713                           
  5714                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  5715   004794  0E01               	movlw	1
  5716   004796  EC29  F024         	call	_I2C_2_Master_Read
  5717   00479A  6E07               	movwf	??_color_read_Blue^0,c
  5718   00479C  5007               	movf	??_color_read_Blue^0,w,c
  5719   00479E  6E0A               	movwf	color_read_Blue@tmp^0,c
  5720   0047A0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5721                           
  5722                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5723   0047A2  0E00               	movlw	0
  5724   0047A4  EC29  F024         	call	_I2C_2_Master_Read
  5725   0047A8  6E07               	movwf	??_color_read_Blue^0,c
  5726   0047AA  5007               	movf	??_color_read_Blue^0,w,c
  5727   0047AC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5728   0047AE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5729   0047B0  500A               	movf	color_read_Blue@tmp^0,w,c
  5730   0047B2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5731   0047B4  6E0A               	movwf	color_read_Blue@tmp^0,c
  5732   0047B6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5733   0047B8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5734   0047BA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5735                           
  5736                           ;color.c: 84:  I2C_2_Master_Stop();
  5737   0047BC  EC3E  F025         	call	_I2C_2_Master_Stop	;wreg free
  5738   0047C0                     
  5739                           ;color.c: 85:  return tmp;
  5740   0047C0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5741   0047C4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5742   0047C8  0012               	return		;funcret
  5743   0047CA                     __end_of_color_read_Blue:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _I2C_2_Master_Write *****************
  5747 ;; Defined at:
  5748 ;;		line 45 in file "i2c.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  data_byte       1    wreg     unsigned char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  data_byte       1    1[COMRAM] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;Total ram usage:        1 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 1
  5769 ;; This function calls:
  5770 ;;		_I2C_2_Master_Idle
  5771 ;; This function is called by:
  5772 ;;		_color_writetoaddr
  5773 ;;		_color_read_Red
  5774 ;;		_color_read_Green
  5775 ;;		_color_read_Blue
  5776 ;;		_color_read_Clear
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text23
  5781   004A70                     __ptext23:
  5782                           	callstack 0
  5783   004A70                     _I2C_2_Master_Write:
  5784                           	callstack 27
  5785                           
  5786                           ;incstack = 0
  5787                           ;I2C_2_Master_Write@data_byte stored from wreg
  5788   004A70  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5789   004A72                     
  5790                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5791   004A72  ECE6  F024         	call	_I2C_2_Master_Idle	;wreg free
  5792   004A76                     
  5793                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5794   004A76  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5795   004A7A  0012               	return		;funcret
  5796   004A7C                     __end_of_I2C_2_Master_Write:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _I2C_2_Master_Stop *****************
  5800 ;; Defined at:
  5801 ;;		line 39 in file "i2c.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 1
  5822 ;; This function calls:
  5823 ;;		_I2C_2_Master_Idle
  5824 ;; This function is called by:
  5825 ;;		_color_writetoaddr
  5826 ;;		_color_read_Red
  5827 ;;		_color_read_Green
  5828 ;;		_color_read_Blue
  5829 ;;		_color_read_Clear
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text24
  5834   004A7C                     __ptext24:
  5835                           	callstack 0
  5836   004A7C                     _I2C_2_Master_Stop:
  5837                           	callstack 27
  5838   004A7C                     
  5839                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5840   004A7C  ECE6  F024         	call	_I2C_2_Master_Idle	;wreg free
  5841   004A80                     
  5842                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5843   004A80  010E               	movlb	14	; () banked
  5844   004A82  85DA               	bsf	218,2,b	;volatile
  5845   004A84                     
  5846                           ; BSR set to: 14
  5847   004A84  0012               	return		;funcret
  5848   004A86                     __end_of_I2C_2_Master_Stop:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _I2C_2_Master_Start *****************
  5852 ;; Defined at:
  5853 ;;		line 27 in file "i2c.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;		None
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;Total ram usage:        0 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; Hardware stack levels required when called: 1
  5874 ;; This function calls:
  5875 ;;		_I2C_2_Master_Idle
  5876 ;; This function is called by:
  5877 ;;		_color_writetoaddr
  5878 ;;		_color_read_Red
  5879 ;;		_color_read_Green
  5880 ;;		_color_read_Blue
  5881 ;;		_color_read_Clear
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text25
  5886   004A86                     __ptext25:
  5887                           	callstack 0
  5888   004A86                     _I2C_2_Master_Start:
  5889                           	callstack 27
  5890   004A86                     
  5891                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5892   004A86  ECE6  F024         	call	_I2C_2_Master_Idle	;wreg free
  5893   004A8A                     
  5894                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5895   004A8A  010E               	movlb	14	; () banked
  5896   004A8C  81DA               	bsf	218,0,b	;volatile
  5897   004A8E                     
  5898                           ; BSR set to: 14
  5899   004A8E  0012               	return		;funcret
  5900   004A90                     __end_of_I2C_2_Master_Start:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function _I2C_2_Master_RepStart *****************
  5904 ;; Defined at:
  5905 ;;		line 33 in file "i2c.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used: 1
  5925 ;; Hardware stack levels required when called: 1
  5926 ;; This function calls:
  5927 ;;		_I2C_2_Master_Idle
  5928 ;; This function is called by:
  5929 ;;		_color_read_Red
  5930 ;;		_color_read_Green
  5931 ;;		_color_read_Blue
  5932 ;;		_color_read_Clear
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text26
  5937   004A90                     __ptext26:
  5938                           	callstack 0
  5939   004A90                     _I2C_2_Master_RepStart:
  5940                           	callstack 27
  5941   004A90                     
  5942                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5943   004A90  ECE6  F024         	call	_I2C_2_Master_Idle	;wreg free
  5944   004A94                     
  5945                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5946   004A94  010E               	movlb	14	; () banked
  5947   004A96  83DA               	bsf	218,1,b	;volatile
  5948   004A98                     
  5949                           ; BSR set to: 14
  5950   004A98  0012               	return		;funcret
  5951   004A9A                     __end_of_I2C_2_Master_RepStart:
  5952                           	callstack 0
  5953                           
  5954 ;; *************** function _I2C_2_Master_Read *****************
  5955 ;; Defined at:
  5956 ;;		line 51 in file "i2c.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  ack             1    wreg     unsigned char 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  ack             1    2[COMRAM] unsigned char 
  5961 ;;  tmp             1    3[COMRAM] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      unsigned char 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;Total ram usage:        3 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; Hardware stack levels required when called: 1
  5978 ;; This function calls:
  5979 ;;		_I2C_2_Master_Idle
  5980 ;; This function is called by:
  5981 ;;		_color_read_Red
  5982 ;;		_color_read_Green
  5983 ;;		_color_read_Blue
  5984 ;;		_color_read_Clear
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text27
  5989   004852                     __ptext27:
  5990                           	callstack 0
  5991   004852                     _I2C_2_Master_Read:
  5992                           	callstack 27
  5993                           
  5994                           ; BSR set to: 14
  5995                           ;incstack = 0
  5996                           ;I2C_2_Master_Read@ack stored from wreg
  5997   004852  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5998   004854                     
  5999                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6000   004854  ECE6  F024         	call	_I2C_2_Master_Idle	;wreg free
  6001   004858                     
  6002                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6003   004858  010E               	movlb	14	; () banked
  6004   00485A  87DA               	bsf	218,3,b	;volatile
  6005                           
  6006                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6007   00485C  ECE6  F024         	call	_I2C_2_Master_Idle	;wreg free
  6008   004860                     
  6009                           ;i2c.c: 57:   tmp = SSP2BUF;
  6010   004860  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6011                           
  6012                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6013   004864  ECE6  F024         	call	_I2C_2_Master_Idle	;wreg free
  6014   004868                     
  6015                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6016   004868  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6017   00486A  B4D8               	btfsc	status,2,c
  6018   00486C  EF3A  F024         	goto	u3711
  6019   004870  EF3E  F024         	goto	u3710
  6020   004874                     u3711:
  6021   004874  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6022   004876  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6023   004878  EF3F  F024         	goto	u3728
  6024   00487C                     u3710:
  6025   00487C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6026   00487E                     u3728:
  6027   00487E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6028   004880  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6029   004882  010E               	movlb	14	; () banked
  6030   004884  51DA               	movf	218,w,b	;volatile
  6031   004886  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6032   004888  0BDF               	andlw	-33
  6033   00488A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6034   00488C  6FDA               	movwf	218,b	;volatile
  6035   00488E                     
  6036                           ; BSR set to: 14
  6037                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6038   00488E  89DA               	bsf	218,4,b	;volatile
  6039   004890                     
  6040                           ; BSR set to: 14
  6041                           ;i2c.c: 61:   return tmp;
  6042   004890  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6043   004892                     
  6044                           ; BSR set to: 14
  6045   004892  0012               	return		;funcret
  6046   004894                     __end_of_I2C_2_Master_Read:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function _I2C_2_Master_Idle *****************
  6050 ;; Defined at:
  6051 ;;		line 22 in file "i2c.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6069 ;;Total ram usage:        1 bytes
  6070 ;; Hardware stack levels used: 1
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_I2C_2_Master_Start
  6075 ;;		_I2C_2_Master_RepStart
  6076 ;;		_I2C_2_Master_Stop
  6077 ;;		_I2C_2_Master_Write
  6078 ;;		_I2C_2_Master_Read
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text28
  6083   0049CC                     __ptext28:
  6084                           	callstack 0
  6085   0049CC                     _I2C_2_Master_Idle:
  6086                           	callstack 27
  6087   0049CC                     l418:
  6088   0049CC  010E               	movlb	14	; () banked
  6089   0049CE  B5D8               	btfsc	216,2,b	;volatile
  6090   0049D0  EFEC  F024         	goto	u2971
  6091   0049D4  EFEE  F024         	goto	u2970
  6092   0049D8                     u2971:
  6093   0049D8  EFE6  F024         	goto	l418
  6094   0049DC                     u2970:
  6095   0049DC                     
  6096                           ; BSR set to: 14
  6097   0049DC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6098   0049E0  0E1F               	movlw	31
  6099   0049E2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6100   0049E4  A4D8               	btfss	status,2,c
  6101   0049E6  EFF7  F024         	goto	u2981
  6102   0049EA  EFF9  F024         	goto	u2980
  6103   0049EE                     u2981:
  6104   0049EE  EFE6  F024         	goto	l418
  6105   0049F2                     u2980:
  6106   0049F2                     
  6107                           ; BSR set to: 14
  6108   0049F2  0012               	return		;funcret
  6109   0049F4                     __end_of_I2C_2_Master_Idle:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function _RGB_to_HSV *****************
  6113 ;; Defined at:
  6114 ;;		line 125 in file "color.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  R               4   10[BANK0 ] float 
  6117 ;;  G               4   14[BANK0 ] float 
  6118 ;;  B               4   18[BANK0 ] float 
  6119 ;;  C               4   22[BANK0 ] float 
  6120 ;;  H               1   26[BANK0 ] PTR float 
  6121 ;;		 -> color_cardCheck@H(4), 
  6122 ;;  S               1   27[BANK0 ] PTR float 
  6123 ;;		 -> color_cardCheck@S(4), 
  6124 ;;  V               1   28[BANK0 ] PTR float 
  6125 ;;		 -> color_cardCheck@V(4), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  b               4   93[BANK0 ] float 
  6128 ;;  g               4   89[BANK0 ] float 
  6129 ;;  r               4   85[BANK0 ] float 
  6130 ;;  maxRGB          4   81[BANK0 ] float 
  6131 ;;  deltaRGB        4   77[BANK0 ] float 
  6132 ;;  H_temp          4   73[BANK0 ] float 
  6133 ;;  minRGB          4   57[BANK0 ] float 
  6134 ;;  c_norm          4   29[BANK0 ] float 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6144 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;Total ram usage:       87 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; Hardware stack levels required when called: 3
  6151 ;; This function calls:
  6152 ;;		___fladd
  6153 ;;		___fldiv
  6154 ;;		___fleq
  6155 ;;		___flge
  6156 ;;		___flmul
  6157 ;;		___flsub
  6158 ;;		_custom_floatmodulo
  6159 ;; This function is called by:
  6160 ;;		_color_cardCheck
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text29
  6165   001840                     __ptext29:
  6166                           	callstack 0
  6167   001840                     _RGB_to_HSV:
  6168                           	callstack 26
  6169   001840                     
  6170                           ;color.c: 128:     float r = R/65535.0;
  6171   001840  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  6172   001844  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  6173   001848  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  6174   00184C  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  6175   001850  0E00               	movlw	0
  6176   001852  6E26               	movwf	___fldiv@a^0,c
  6177   001854  0EFF               	movlw	255
  6178   001856  6E27               	movwf	(___fldiv@a+1)^0,c
  6179   001858  0E7F               	movlw	127
  6180   00185A  6E28               	movwf	(___fldiv@a+2)^0,c
  6181   00185C  0E47               	movlw	71
  6182   00185E  6E29               	movwf	(___fldiv@a+3)^0,c
  6183   001860  EC71  F017         	call	___fldiv	;wreg free
  6184   001864  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  6185   001868  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  6186   00186C  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  6187   001870  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  6188                           
  6189                           ;color.c: 129:     float g = G/65535.0;
  6190   001874  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  6191   001878  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  6192   00187C  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  6193   001880  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  6194   001884  0E00               	movlw	0
  6195   001886  6E26               	movwf	___fldiv@a^0,c
  6196   001888  0EFF               	movlw	255
  6197   00188A  6E27               	movwf	(___fldiv@a+1)^0,c
  6198   00188C  0E7F               	movlw	127
  6199   00188E  6E28               	movwf	(___fldiv@a+2)^0,c
  6200   001890  0E47               	movlw	71
  6201   001892  6E29               	movwf	(___fldiv@a+3)^0,c
  6202   001894  EC71  F017         	call	___fldiv	;wreg free
  6203   001898  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  6204   00189C  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  6205   0018A0  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  6206   0018A4  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  6207                           
  6208                           ;color.c: 130:     float b = B/65535.0;
  6209   0018A8  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  6210   0018AC  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  6211   0018B0  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  6212   0018B4  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  6213   0018B8  0E00               	movlw	0
  6214   0018BA  6E26               	movwf	___fldiv@a^0,c
  6215   0018BC  0EFF               	movlw	255
  6216   0018BE  6E27               	movwf	(___fldiv@a+1)^0,c
  6217   0018C0  0E7F               	movlw	127
  6218   0018C2  6E28               	movwf	(___fldiv@a+2)^0,c
  6219   0018C4  0E47               	movlw	71
  6220   0018C6  6E29               	movwf	(___fldiv@a+3)^0,c
  6221   0018C8  EC71  F017         	call	___fldiv	;wreg free
  6222   0018CC  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  6223   0018D0  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  6224   0018D4  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  6225   0018D8  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  6226                           
  6227                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  6228   0018DC  0E00               	movlw	0
  6229   0018DE  6E26               	movwf	___fldiv@a^0,c
  6230   0018E0  0EFF               	movlw	255
  6231   0018E2  6E27               	movwf	(___fldiv@a+1)^0,c
  6232   0018E4  0E7F               	movlw	127
  6233   0018E6  6E28               	movwf	(___fldiv@a+2)^0,c
  6234   0018E8  0E47               	movlw	71
  6235   0018EA  6E29               	movwf	(___fldiv@a+3)^0,c
  6236   0018EC  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  6237   0018F0  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  6238   0018F4  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  6239   0018F8  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  6240   0018FC  EC71  F017         	call	___fldiv	;wreg free
  6241   001900  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2705
  6242   001904  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2705+1
  6243   001908  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2705+2
  6244   00190C  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2705+3
  6245                           
  6246                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  6247   001910  0E00               	movlw	0
  6248   001912  6E22               	movwf	___fldiv@b^0,c
  6249   001914  0E00               	movlw	0
  6250   001916  6E23               	movwf	(___fldiv@b+1)^0,c
  6251   001918  0E80               	movlw	128
  6252   00191A  6E24               	movwf	(___fldiv@b+2)^0,c
  6253   00191C  0E3F               	movlw	63
  6254   00191E  6E25               	movwf	(___fldiv@b+3)^0,c
  6255   001920  C081  F026         	movff	_RGB_to_HSV$2705,___fldiv@a
  6256   001924  C082  F027         	movff	_RGB_to_HSV$2705+1,___fldiv@a+1
  6257   001928  C083  F028         	movff	_RGB_to_HSV$2705+2,___fldiv@a+2
  6258   00192C  C084  F029         	movff	_RGB_to_HSV$2705+3,___fldiv@a+3
  6259   001930  EC71  F017         	call	___fldiv	;wreg free
  6260   001934  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  6261   001938  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  6262   00193C  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  6263   001940  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  6264                           
  6265                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  6266   001944  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  6267   001948  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6268   00194C  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6269   001950  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6270   001954  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  6271   001958  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6272   00195C  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6273   001960  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6274   001964  ECA0  F020         	call	___flge	;wreg free
  6275   001968  A0D8               	btfss	status,0,c
  6276   00196A  EFB9  F00C         	goto	u3841
  6277   00196E  EFBB  F00C         	goto	u3840
  6278   001972                     u3841:
  6279   001972  EFF0  F00C         	goto	l3760
  6280   001976                     u3840:
  6281   001976  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  6282   00197A  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6283   00197E  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6284   001982  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6285   001986  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  6286   00198A  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6287   00198E  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6288   001992  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6289   001996  ECA0  F020         	call	___flge	;wreg free
  6290   00199A  A0D8               	btfss	status,0,c
  6291   00199C  EFD2  F00C         	goto	u3851
  6292   0019A0  EFD4  F00C         	goto	u3850
  6293   0019A4                     u3851:
  6294   0019A4  EFDE  F00C         	goto	l58
  6295   0019A8                     u3850:
  6296   0019A8  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  6297   0019AC  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  6298   0019B0  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  6299   0019B4  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  6300   0019B8  EFE6  F00C         	goto	l60
  6301   0019BC                     l58:
  6302   0019BC  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  6303   0019C0  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  6304   0019C4  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  6305   0019C8  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  6306   0019CC                     l60:
  6307   0019CC  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  6308   0019D0  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  6309   0019D4  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  6310   0019D8  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  6311   0019DC  EF23  F00D         	goto	l3764
  6312   0019E0                     l3760:
  6313   0019E0  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  6314   0019E4  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6315   0019E8  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6316   0019EC  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6317   0019F0  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  6318   0019F4  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6319   0019F8  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6320   0019FC  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6321   001A00  ECA0  F020         	call	___flge	;wreg free
  6322   001A04  A0D8               	btfss	status,0,c
  6323   001A06  EF07  F00D         	goto	u3861
  6324   001A0A  EF09  F00D         	goto	u3860
  6325   001A0E                     u3861:
  6326   001A0E  EF13  F00D         	goto	l62
  6327   001A12                     u3860:
  6328   001A12  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  6329   001A16  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  6330   001A1A  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  6331   001A1E  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  6332   001A22  EF1B  F00D         	goto	l64
  6333   001A26                     l62:
  6334   001A26  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  6335   001A2A  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  6336   001A2E  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  6337   001A32  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  6338   001A36                     l64:
  6339   001A36  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  6340   001A3A  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  6341   001A3E  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  6342   001A42  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  6343   001A46                     l3764:
  6344                           
  6345                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  6346   001A46  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  6347   001A4A  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6348   001A4E  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6349   001A52  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6350   001A56  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  6351   001A5A  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6352   001A5E  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6353   001A62  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6354   001A66  ECA0  F020         	call	___flge	;wreg free
  6355   001A6A  A0D8               	btfss	status,0,c
  6356   001A6C  EF3A  F00D         	goto	u3871
  6357   001A70  EF3C  F00D         	goto	u3870
  6358   001A74                     u3871:
  6359   001A74  EF71  F00D         	goto	l3770
  6360   001A78                     u3870:
  6361   001A78  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  6362   001A7C  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6363   001A80  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6364   001A84  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6365   001A88  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  6366   001A8C  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6367   001A90  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6368   001A94  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6369   001A98  ECA0  F020         	call	___flge	;wreg free
  6370   001A9C  A0D8               	btfss	status,0,c
  6371   001A9E  EF53  F00D         	goto	u3881
  6372   001AA2  EF55  F00D         	goto	u3880
  6373   001AA6                     u3881:
  6374   001AA6  EF5F  F00D         	goto	l70
  6375   001AAA                     u3880:
  6376   001AAA  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  6377   001AAE  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  6378   001AB2  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  6379   001AB6  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  6380   001ABA  EF67  F00D         	goto	l72
  6381   001ABE                     l70:
  6382   001ABE  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  6383   001AC2  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  6384   001AC6  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  6385   001ACA  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  6386   001ACE                     l72:
  6387   001ACE  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  6388   001AD2  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  6389   001AD6  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  6390   001ADA  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  6391   001ADE  EFA4  F00D         	goto	l3774
  6392   001AE2                     l3770:
  6393   001AE2  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  6394   001AE6  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6395   001AEA  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6396   001AEE  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6397   001AF2  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  6398   001AF6  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6399   001AFA  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6400   001AFE  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6401   001B02  ECA0  F020         	call	___flge	;wreg free
  6402   001B06  A0D8               	btfss	status,0,c
  6403   001B08  EF88  F00D         	goto	u3891
  6404   001B0C  EF8A  F00D         	goto	u3890
  6405   001B10                     u3891:
  6406   001B10  EF94  F00D         	goto	l74
  6407   001B14                     u3890:
  6408   001B14  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  6409   001B18  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  6410   001B1C  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  6411   001B20  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  6412   001B24  EF9C  F00D         	goto	l76
  6413   001B28                     l74:
  6414   001B28  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  6415   001B2C  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  6416   001B30  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  6417   001B34  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  6418   001B38                     l76:
  6419   001B38  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  6420   001B3C  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  6421   001B40  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  6422   001B44  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  6423   001B48                     l3774:
  6424                           
  6425                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  6426   001B48  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  6427   001B4C  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  6428   001B50  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  6429   001B54  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  6430   001B58  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  6431   001B5C  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  6432   001B60  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  6433   001B64  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  6434   001B68  ECE5  F023         	call	___flsub	;wreg free
  6435   001B6C  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  6436   001B70  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  6437   001B74  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  6438   001B78  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  6439                           
  6440                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  6441   001B7C  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  6442   001B80  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  6443   001B84  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  6444   001B88  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  6445   001B8C  0E00               	movlw	0
  6446   001B8E  6E05               	movwf	___fleq@ff2^0,c
  6447   001B90  0E00               	movlw	0
  6448   001B92  6E06               	movwf	(___fleq@ff2+1)^0,c
  6449   001B94  0E00               	movlw	0
  6450   001B96  6E07               	movwf	(___fleq@ff2+2)^0,c
  6451   001B98  0E00               	movlw	0
  6452   001B9A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6453   001B9C  EC3A  F022         	call	___fleq	;wreg free
  6454   001BA0  A0D8               	btfss	status,0,c
  6455   001BA2  EFD5  F00D         	goto	u3901
  6456   001BA6  EFD7  F00D         	goto	u3900
  6457   001BAA                     u3901:
  6458   001BAA  EFE2  F00D         	goto	l3778
  6459   001BAE                     u3900:
  6460   001BAE  0E00               	movlw	0
  6461   001BB0  0100               	movlb	0	; () banked
  6462   001BB2  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  6463   001BB4  0E00               	movlw	0
  6464   001BB6  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  6465   001BB8  0E00               	movlw	0
  6466   001BBA  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  6467   001BBC  0E00               	movlw	0
  6468   001BBE  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  6469   001BC0  EF43  F00F         	goto	l3798
  6470   001BC4                     l3778:
  6471   001BC4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6472   001BC8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6473   001BCC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6474   001BD0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6475   001BD4  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  6476   001BD8  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  6477   001BDC  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  6478   001BE0  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  6479   001BE4  EC3A  F022         	call	___fleq	;wreg free
  6480   001BE8  A0D8               	btfss	status,0,c
  6481   001BEA  EFF9  F00D         	goto	u3911
  6482   001BEE  EFFB  F00D         	goto	u3910
  6483   001BF2                     u3911:
  6484   001BF2  EF5D  F00E         	goto	l3786
  6485   001BF6                     u3910:
  6486   001BF6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6487   001BFA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6488   001BFE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6489   001C02  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6490   001C06  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  6491   001C0A  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  6492   001C0E  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  6493   001C12  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  6494   001C16  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  6495   001C1A  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  6496   001C1E  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  6497   001C22  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  6498   001C26  ECE5  F023         	call	___flsub	;wreg free
  6499   001C2A  C01A  F022         	movff	?___flsub,___fldiv@b
  6500   001C2E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6501   001C32  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6502   001C36  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6503   001C3A  EC71  F017         	call	___fldiv	;wreg free
  6504   001C3E  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2706
  6505   001C42  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2706+1
  6506   001C46  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2706+2
  6507   001C4A  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2706+3
  6508   001C4E  0E00               	movlw	0
  6509   001C50  6E58               	movwf	custom_floatmodulo@y^0,c
  6510   001C52  0E00               	movlw	0
  6511   001C54  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  6512   001C56  0EC0               	movlw	192
  6513   001C58  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  6514   001C5A  0E40               	movlw	64
  6515   001C5C  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  6516   001C5E  C085  F054         	movff	_RGB_to_HSV$2706,custom_floatmodulo@x
  6517   001C62  C086  F055         	movff	_RGB_to_HSV$2706+1,custom_floatmodulo@x+1
  6518   001C66  C087  F056         	movff	_RGB_to_HSV$2706+2,custom_floatmodulo@x+2
  6519   001C6A  C088  F057         	movff	_RGB_to_HSV$2706+3,custom_floatmodulo@x+3
  6520   001C6E  EC91  F01F         	call	_custom_floatmodulo	;wreg free
  6521   001C72  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2707
  6522   001C76  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2707+1
  6523   001C7A  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2707+2
  6524   001C7E  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2707+3
  6525   001C82  C089  F03B         	movff	_RGB_to_HSV$2707,___flmul@b
  6526   001C86  C08A  F03C         	movff	_RGB_to_HSV$2707+1,___flmul@b+1
  6527   001C8A  C08B  F03D         	movff	_RGB_to_HSV$2707+2,___flmul@b+2
  6528   001C8E  C08C  F03E         	movff	_RGB_to_HSV$2707+3,___flmul@b+3
  6529   001C92  0E00               	movlw	0
  6530   001C94  6E3F               	movwf	___flmul@a^0,c
  6531   001C96  0E00               	movlw	0
  6532   001C98  6E40               	movwf	(___flmul@a+1)^0,c
  6533   001C9A  0E70               	movlw	112
  6534   001C9C  6E41               	movwf	(___flmul@a+2)^0,c
  6535   001C9E  0E42               	movlw	66
  6536   001CA0  6E42               	movwf	(___flmul@a+3)^0,c
  6537   001CA2  EC5C  F015         	call	___flmul	;wreg free
  6538   001CA6  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6539   001CAA  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6540   001CAE  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6541   001CB2  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6542   001CB6  EF43  F00F         	goto	l3798
  6543   001CBA                     l3786:
  6544   001CBA  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6545   001CBE  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6546   001CC2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6547   001CC6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6548   001CCA  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  6549   001CCE  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  6550   001CD2  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  6551   001CD6  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  6552   001CDA  EC3A  F022         	call	___fleq	;wreg free
  6553   001CDE  A0D8               	btfss	status,0,c
  6554   001CE0  EF74  F00E         	goto	u3921
  6555   001CE4  EF76  F00E         	goto	u3920
  6556   001CE8                     u3921:
  6557   001CE8  EFD0  F00E         	goto	l3792
  6558   001CEC                     u3920:
  6559   001CEC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6560   001CF0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6561   001CF4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6562   001CF8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6563   001CFC  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  6564   001D00  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  6565   001D04  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  6566   001D08  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  6567   001D0C  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  6568   001D10  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  6569   001D14  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  6570   001D18  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  6571   001D1C  ECE5  F023         	call	___flsub	;wreg free
  6572   001D20  C01A  F022         	movff	?___flsub,___fldiv@b
  6573   001D24  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6574   001D28  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6575   001D2C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6576   001D30  EC71  F017         	call	___fldiv	;wreg free
  6577   001D34  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2708
  6578   001D38  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2708+1
  6579   001D3C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2708+2
  6580   001D40  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2708+3
  6581   001D44  0E00               	movlw	0
  6582   001D46  6E05               	movwf	___fladd@a^0,c
  6583   001D48  0E00               	movlw	0
  6584   001D4A  6E06               	movwf	(___fladd@a+1)^0,c
  6585   001D4C  0E00               	movlw	0
  6586   001D4E  6E07               	movwf	(___fladd@a+2)^0,c
  6587   001D50  0E40               	movlw	64
  6588   001D52  6E08               	movwf	(___fladd@a+3)^0,c
  6589   001D54  C0A5  F001         	movff	_RGB_to_HSV$2708,___fladd@b
  6590   001D58  C0A6  F002         	movff	_RGB_to_HSV$2708+1,___fladd@b+1
  6591   001D5C  C0A7  F003         	movff	_RGB_to_HSV$2708+2,___fladd@b+2
  6592   001D60  C0A8  F004         	movff	_RGB_to_HSV$2708+3,___fladd@b+3
  6593   001D64  ECFC  F012         	call	___fladd	;wreg free
  6594   001D68  C001  F03B         	movff	?___fladd,___flmul@b
  6595   001D6C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  6596   001D70  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  6597   001D74  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  6598   001D78  0E00               	movlw	0
  6599   001D7A  6E3F               	movwf	___flmul@a^0,c
  6600   001D7C  0E00               	movlw	0
  6601   001D7E  6E40               	movwf	(___flmul@a+1)^0,c
  6602   001D80  0E70               	movlw	112
  6603   001D82  6E41               	movwf	(___flmul@a+2)^0,c
  6604   001D84  0E42               	movlw	66
  6605   001D86  6E42               	movwf	(___flmul@a+3)^0,c
  6606   001D88  EC5C  F015         	call	___flmul	;wreg free
  6607   001D8C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6608   001D90  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6609   001D94  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6610   001D98  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6611   001D9C  EF43  F00F         	goto	l3798
  6612   001DA0                     l3792:
  6613   001DA0  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6614   001DA4  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6615   001DA8  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6616   001DAC  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6617   001DB0  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  6618   001DB4  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  6619   001DB8  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  6620   001DBC  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  6621   001DC0  EC3A  F022         	call	___fleq	;wreg free
  6622   001DC4  A0D8               	btfss	status,0,c
  6623   001DC6  EFE7  F00E         	goto	u3931
  6624   001DCA  EFE9  F00E         	goto	u3930
  6625   001DCE                     u3931:
  6626   001DCE  EF43  F00F         	goto	l80
  6627   001DD2                     u3930:
  6628   001DD2  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6629   001DD6  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6630   001DDA  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6631   001DDE  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6632   001DE2  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  6633   001DE6  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  6634   001DEA  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  6635   001DEE  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  6636   001DF2  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  6637   001DF6  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  6638   001DFA  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  6639   001DFE  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  6640   001E02  ECE5  F023         	call	___flsub	;wreg free
  6641   001E06  C01A  F022         	movff	?___flsub,___fldiv@b
  6642   001E0A  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6643   001E0E  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6644   001E12  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6645   001E16  EC71  F017         	call	___fldiv	;wreg free
  6646   001E1A  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2708
  6647   001E1E  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2708+1
  6648   001E22  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2708+2
  6649   001E26  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2708+3
  6650   001E2A  0E00               	movlw	0
  6651   001E2C  6E05               	movwf	___fladd@a^0,c
  6652   001E2E  0E00               	movlw	0
  6653   001E30  6E06               	movwf	(___fladd@a+1)^0,c
  6654   001E32  0E80               	movlw	128
  6655   001E34  6E07               	movwf	(___fladd@a+2)^0,c
  6656   001E36  0E40               	movlw	64
  6657   001E38  6E08               	movwf	(___fladd@a+3)^0,c
  6658   001E3A  C0A5  F001         	movff	_RGB_to_HSV$2708,___fladd@b
  6659   001E3E  C0A6  F002         	movff	_RGB_to_HSV$2708+1,___fladd@b+1
  6660   001E42  C0A7  F003         	movff	_RGB_to_HSV$2708+2,___fladd@b+2
  6661   001E46  C0A8  F004         	movff	_RGB_to_HSV$2708+3,___fladd@b+3
  6662   001E4A  ECFC  F012         	call	___fladd	;wreg free
  6663   001E4E  C001  F03B         	movff	?___fladd,___flmul@b
  6664   001E52  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  6665   001E56  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  6666   001E5A  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  6667   001E5E  0E00               	movlw	0
  6668   001E60  6E3F               	movwf	___flmul@a^0,c
  6669   001E62  0E00               	movlw	0
  6670   001E64  6E40               	movwf	(___flmul@a+1)^0,c
  6671   001E66  0E70               	movlw	112
  6672   001E68  6E41               	movwf	(___flmul@a+2)^0,c
  6673   001E6A  0E42               	movlw	66
  6674   001E6C  6E42               	movwf	(___flmul@a+3)^0,c
  6675   001E6E  EC5C  F015         	call	___flmul	;wreg free
  6676   001E72  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6677   001E76  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6678   001E7A  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6679   001E7E  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6680   001E82  EF43  F00F         	goto	l3798
  6681   001E86                     l80:
  6682   001E86                     l3798:
  6683                           
  6684                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  6685   001E86  0100               	movlb	0	; () banked
  6686   001E88  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  6687   001E8A  EF4B  F00F         	goto	u3940
  6688   001E8E  EF49  F00F         	goto	u3941
  6689   001E92                     u3941:
  6690   001E92  EF65  F00F         	goto	l3802
  6691   001E96                     u3940:
  6692   001E96                     
  6693                           ; BSR set to: 0
  6694   001E96  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  6695   001E9A  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  6696   001E9E  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  6697   001EA2  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  6698   001EA6  0E00               	movlw	0
  6699   001EA8  6E05               	movwf	___fladd@a^0,c
  6700   001EAA  0E00               	movlw	0
  6701   001EAC  6E06               	movwf	(___fladd@a+1)^0,c
  6702   001EAE  0EB4               	movlw	180
  6703   001EB0  6E07               	movwf	(___fladd@a+2)^0,c
  6704   001EB2  0E43               	movlw	67
  6705   001EB4  6E08               	movwf	(___fladd@a+3)^0,c
  6706   001EB6  ECFC  F012         	call	___fladd	;wreg free
  6707   001EBA  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  6708   001EBE  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  6709   001EC2  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  6710   001EC6  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  6711   001ECA                     l3802:
  6712                           
  6713                           ;color.c: 158:     *H = H_temp;
  6714   001ECA  0100               	movlb	0	; () banked
  6715   001ECC  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  6716   001ECE  6ED9               	movwf	fsr2l,c
  6717   001ED0  6ADA               	clrf	fsr2h,c
  6718   001ED2  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  6719   001ED6  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  6720   001EDA  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  6721   001EDE  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  6722   001EE2                     
  6723                           ; BSR set to: 0
  6724                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  6725   001EE2  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6726   001EE6  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6727   001EEA  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6728   001EEE  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6729   001EF2  0E00               	movlw	0
  6730   001EF4  6E05               	movwf	___fleq@ff2^0,c
  6731   001EF6  0E00               	movlw	0
  6732   001EF8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6733   001EFA  0E00               	movlw	0
  6734   001EFC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6735   001EFE  0E00               	movlw	0
  6736   001F00  6E08               	movwf	(___fleq@ff2+3)^0,c
  6737   001F02  EC3A  F022         	call	___fleq	;wreg free
  6738   001F06  A0D8               	btfss	status,0,c
  6739   001F08  EF88  F00F         	goto	u3951
  6740   001F0C  EF8A  F00F         	goto	u3950
  6741   001F10                     u3951:
  6742   001F10  EF98  F00F         	goto	l3808
  6743   001F14                     u3950:
  6744   001F14  0100               	movlb	0	; () banked
  6745   001F16  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6746   001F18  6ED9               	movwf	fsr2l,c
  6747   001F1A  6ADA               	clrf	fsr2h,c
  6748   001F1C  0E00               	movlw	0
  6749   001F1E  6EDE               	movwf	postinc2,c
  6750   001F20  0E00               	movlw	0
  6751   001F22  6EDE               	movwf	postinc2,c
  6752   001F24  0E00               	movlw	0
  6753   001F26  6EDE               	movwf	postinc2,c
  6754   001F28  0E00               	movlw	0
  6755   001F2A  6EDD               	movwf	postdec2,c
  6756   001F2C  EFC8  F00F         	goto	l3810
  6757   001F30                     l3808:
  6758                           
  6759                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  6760   001F30  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  6761   001F34  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  6762   001F38  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  6763   001F3C  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  6764   001F40  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  6765   001F44  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  6766   001F48  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  6767   001F4C  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  6768   001F50  EC71  F017         	call	___fldiv	;wreg free
  6769   001F54  C022  F03B         	movff	?___fldiv,___flmul@b
  6770   001F58  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  6771   001F5C  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  6772   001F60  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  6773   001F64  0E00               	movlw	0
  6774   001F66  6E3F               	movwf	___flmul@a^0,c
  6775   001F68  0E00               	movlw	0
  6776   001F6A  6E40               	movwf	(___flmul@a+1)^0,c
  6777   001F6C  0EC8               	movlw	200
  6778   001F6E  6E41               	movwf	(___flmul@a+2)^0,c
  6779   001F70  0E42               	movlw	66
  6780   001F72  6E42               	movwf	(___flmul@a+3)^0,c
  6781   001F74  EC5C  F015         	call	___flmul	;wreg free
  6782   001F78  0100               	movlb	0	; () banked
  6783   001F7A  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6784   001F7C  6ED9               	movwf	fsr2l,c
  6785   001F7E  6ADA               	clrf	fsr2h,c
  6786   001F80  C03B  FFDE         	movff	?___flmul,postinc2
  6787   001F84  C03C  FFDE         	movff	?___flmul+1,postinc2
  6788   001F88  C03D  FFDE         	movff	?___flmul+2,postinc2
  6789   001F8C  C03E  FFDE         	movff	?___flmul+3,postinc2
  6790   001F90                     l3810:
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  6794   001F90  0E00               	movlw	0
  6795   001F92  6E3F               	movwf	___flmul@a^0,c
  6796   001F94  0E00               	movlw	0
  6797   001F96  6E40               	movwf	(___flmul@a+1)^0,c
  6798   001F98  0EC8               	movlw	200
  6799   001F9A  6E41               	movwf	(___flmul@a+2)^0,c
  6800   001F9C  0E42               	movlw	66
  6801   001F9E  6E42               	movwf	(___flmul@a+3)^0,c
  6802   001FA0  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  6803   001FA4  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  6804   001FA8  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  6805   001FAC  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  6806   001FB0  EC5C  F015         	call	___flmul	;wreg free
  6807   001FB4  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2709
  6808   001FB8  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2709+1
  6809   001FBC  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2709+2
  6810   001FC0  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2709+3
  6811   001FC4                     
  6812                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  6813   001FC4  C08D  F03B         	movff	_RGB_to_HSV$2709,___flmul@b
  6814   001FC8  C08E  F03C         	movff	_RGB_to_HSV$2709+1,___flmul@b+1
  6815   001FCC  C08F  F03D         	movff	_RGB_to_HSV$2709+2,___flmul@b+2
  6816   001FD0  C090  F03E         	movff	_RGB_to_HSV$2709+3,___flmul@b+3
  6817   001FD4  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  6818   001FD8  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  6819   001FDC  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  6820   001FE0  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  6821   001FE4  EC5C  F015         	call	___flmul	;wreg free
  6822   001FE8  0100               	movlb	0	; () banked
  6823   001FEA  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  6824   001FEC  6ED9               	movwf	fsr2l,c
  6825   001FEE  6ADA               	clrf	fsr2h,c
  6826   001FF0  C03B  FFDE         	movff	?___flmul,postinc2
  6827   001FF4  C03C  FFDE         	movff	?___flmul+1,postinc2
  6828   001FF8  C03D  FFDE         	movff	?___flmul+2,postinc2
  6829   001FFC  C03E  FFDE         	movff	?___flmul+3,postinc2
  6830   002000                     
  6831                           ; BSR set to: 0
  6832   002000  0012               	return		;funcret
  6833   002002                     __end_of_RGB_to_HSV:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function _custom_floatmodulo *****************
  6837 ;; Defined at:
  6838 ;;		line 106 in file "color.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  x               4   83[COMRAM] float 
  6841 ;;  y               4   87[COMRAM] float 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  remainder       4    4[BANK0 ] float 
  6844 ;;  quotient        4    0[BANK0 ] float 
  6845 ;;  intPart         2    8[BANK0 ] int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  4   83[COMRAM] float 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;Total ram usage:       18 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 2
  6862 ;; This function calls:
  6863 ;;		___fldiv
  6864 ;;		___fleq
  6865 ;;		___flmul
  6866 ;;		___flsub
  6867 ;;		___fltol
  6868 ;;		___xxtofl
  6869 ;; This function is called by:
  6870 ;;		_RGB_to_HSV
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text30
  6875   003F22                     __ptext30:
  6876                           	callstack 0
  6877   003F22                     _custom_floatmodulo:
  6878                           	callstack 26
  6879   003F22                     
  6880                           ;color.c: 108:     if (y == 0.0) {
  6881   003F22  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  6882   003F26  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  6883   003F2A  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  6884   003F2E  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  6885   003F32  0E00               	movlw	0
  6886   003F34  6E05               	movwf	___fleq@ff2^0,c
  6887   003F36  0E00               	movlw	0
  6888   003F38  6E06               	movwf	(___fleq@ff2+1)^0,c
  6889   003F3A  0E00               	movlw	0
  6890   003F3C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6891   003F3E  0E00               	movlw	0
  6892   003F40  6E08               	movwf	(___fleq@ff2+3)^0,c
  6893   003F42  EC3A  F022         	call	___fleq	;wreg free
  6894   003F46  A0D8               	btfss	status,0,c
  6895   003F48  EFA8  F01F         	goto	u3731
  6896   003F4C  EFAA  F01F         	goto	u3730
  6897   003F50                     u3731:
  6898   003F50  EFB4  F01F         	goto	l3628
  6899   003F54                     u3730:
  6900   003F54                     
  6901                           ;color.c: 109:         return 0.0;
  6902   003F54  0E00               	movlw	0
  6903   003F56  6E54               	movwf	?_custom_floatmodulo^0,c
  6904   003F58  0E00               	movlw	0
  6905   003F5A  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  6906   003F5C  0E00               	movlw	0
  6907   003F5E  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  6908   003F60  0E00               	movlw	0
  6909   003F62  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  6910   003F64  EF1C  F020         	goto	l50
  6911   003F68                     l3628:
  6912                           
  6913                           ;color.c: 113:     float quotient = x / y;
  6914   003F68  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  6915   003F6C  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  6916   003F70  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  6917   003F74  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  6918   003F78  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  6919   003F7C  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  6920   003F80  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  6921   003F84  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  6922   003F88  EC71  F017         	call	___fldiv	;wreg free
  6923   003F8C  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  6924   003F90  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  6925   003F94  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  6926   003F98  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  6927                           
  6928                           ;color.c: 116:     int intPart = (int)quotient;
  6929   003F9C  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  6930   003FA0  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  6931   003FA4  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  6932   003FA8  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  6933   003FAC  EC1D  F020         	call	___fltol	;wreg free
  6934   003FB0  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  6935   003FB4  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  6936   003FB8                     
  6937                           ;color.c: 119:     float remainder = x - intPart * y;
  6938   003FB8  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  6939   003FBC  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  6940   003FC0  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  6941   003FC4  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  6942   003FC8  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  6943   003FCC  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  6944   003FD0  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  6945   003FD4  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  6946   003FD8  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  6947   003FDC  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  6948   003FE0  0E00               	movlw	0
  6949   003FE2  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6950   003FE4  0EFF               	movlw	-1
  6951   003FE6  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6952   003FE8  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6953   003FEA  0E01               	movlw	1
  6954   003FEC  EC3E  F019         	call	___xxtofl
  6955   003FF0  C00C  F03B         	movff	?___xxtofl,___flmul@b
  6956   003FF4  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  6957   003FF8  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  6958   003FFC  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  6959   004000  EC5C  F015         	call	___flmul	;wreg free
  6960   004004  C03B  F01E         	movff	?___flmul,___flsub@a
  6961   004008  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  6962   00400C  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  6963   004010  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  6964   004014  ECE5  F023         	call	___flsub	;wreg free
  6965   004018  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  6966   00401C  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  6967   004020  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  6968   004024  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  6969   004028                     
  6970                           ;color.c: 121:     return remainder;
  6971   004028  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  6972   00402C  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  6973   004030  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  6974   004034  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  6975   004038                     l50:
  6976   004038  0012               	return		;funcret
  6977   00403A                     __end_of_custom_floatmodulo:
  6978                           	callstack 0
  6979                           
  6980 ;; *************** function ___xxtofl *****************
  6981 ;; Defined at:
  6982 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  sign            1    wreg     unsigned char 
  6985 ;;  val             4   11[COMRAM] long 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;  sign            1   19[COMRAM] unsigned char 
  6988 ;;  arg             4   21[COMRAM] unsigned long 
  6989 ;;  exp             1   20[COMRAM] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  4   11[COMRAM] unsigned char 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;Total ram usage:       14 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_custom_floatmodulo
  7009 ;;		_color_cardCheck
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           	psect	text31
  7014   00327C                     __ptext31:
  7015                           	callstack 0
  7016   00327C                     ___xxtofl:
  7017                           	callstack 29
  7018                           
  7019                           ;incstack = 0
  7020                           ;___xxtofl@sign stored from wreg
  7021   00327C  6E14               	movwf	___xxtofl@sign^0,c
  7022   00327E  5014               	movf	___xxtofl@sign^0,w,c
  7023   003280  B4D8               	btfsc	status,2,c
  7024   003282  EF45  F019         	goto	u3571
  7025   003286  EF47  F019         	goto	u3570
  7026   00328A                     u3571:
  7027   00328A  EF69  F019         	goto	l1178
  7028   00328E                     u3570:
  7029   00328E  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7030   003290  EF4E  F019         	goto	u3580
  7031   003294  EF4C  F019         	goto	u3581
  7032   003298                     u3581:
  7033   003298  EF69  F019         	goto	l1178
  7034   00329C                     u3580:
  7035   00329C  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  7036   0032A0  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  7037   0032A4  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  7038   0032A8  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  7039   0032AC  1E10               	comf	??___xxtofl^0,f,c
  7040   0032AE  1E11               	comf	(??___xxtofl+1)^0,f,c
  7041   0032B0  1E12               	comf	(??___xxtofl+2)^0,f,c
  7042   0032B2  1E13               	comf	(??___xxtofl+3)^0,f,c
  7043   0032B4  2A10               	incf	??___xxtofl^0,f,c
  7044   0032B6  0E00               	movlw	0
  7045   0032B8  2211               	addwfc	(??___xxtofl+1)^0,f,c
  7046   0032BA  2212               	addwfc	(??___xxtofl+2)^0,f,c
  7047   0032BC  2213               	addwfc	(??___xxtofl+3)^0,f,c
  7048   0032BE  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  7049   0032C2  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  7050   0032C6  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  7051   0032CA  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  7052   0032CE  EF71  F019         	goto	l3538
  7053   0032D2                     l1178:
  7054   0032D2  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  7055   0032D6  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7056   0032DA  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7057   0032DE  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7058   0032E2                     l3538:
  7059   0032E2  500C               	movf	___xxtofl@val^0,w,c
  7060   0032E4  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  7061   0032E6  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  7062   0032E8  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  7063   0032EA  A4D8               	btfss	status,2,c
  7064   0032EC  EF7A  F019         	goto	u3591
  7065   0032F0  EF7C  F019         	goto	u3590
  7066   0032F4                     u3591:
  7067   0032F4  EF86  F019         	goto	l3544
  7068   0032F8                     u3590:
  7069   0032F8  0E00               	movlw	0
  7070   0032FA  6E0C               	movwf	?___xxtofl^0,c
  7071   0032FC  0E00               	movlw	0
  7072   0032FE  6E0D               	movwf	(?___xxtofl+1)^0,c
  7073   003300  0E00               	movlw	0
  7074   003302  6E0E               	movwf	(?___xxtofl+2)^0,c
  7075   003304  0E00               	movlw	0
  7076   003306  6E0F               	movwf	(?___xxtofl+3)^0,c
  7077   003308  EF17  F01A         	goto	l1181
  7078   00330C                     l3544:
  7079   00330C  0E96               	movlw	150
  7080   00330E  6E15               	movwf	___xxtofl@exp^0,c
  7081   003310  EF90  F019         	goto	l3548
  7082   003314                     l3546:
  7083   003314  2A15               	incf	___xxtofl@exp^0,f,c
  7084   003316  90D8               	bcf	status,0,c
  7085   003318  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7086   00331A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7087   00331C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7088   00331E  3216               	rrcf	___xxtofl@arg^0,f,c
  7089   003320                     l3548:
  7090   003320  0E00               	movlw	0
  7091   003322  1416               	andwf	___xxtofl@arg^0,w,c
  7092   003324  6E10               	movwf	??___xxtofl^0,c
  7093   003326  0E00               	movlw	0
  7094   003328  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7095   00332A  6E11               	movwf	(??___xxtofl+1)^0,c
  7096   00332C  0E00               	movlw	0
  7097   00332E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7098   003330  6E12               	movwf	(??___xxtofl+2)^0,c
  7099   003332  0EFE               	movlw	254
  7100   003334  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7101   003336  6E13               	movwf	(??___xxtofl+3)^0,c
  7102   003338  5010               	movf	??___xxtofl^0,w,c
  7103   00333A  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7104   00333C  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7105   00333E  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7106   003340  A4D8               	btfss	status,2,c
  7107   003342  EFA5  F019         	goto	u3601
  7108   003346  EFA7  F019         	goto	u3600
  7109   00334A                     u3601:
  7110   00334A  EF8A  F019         	goto	l3546
  7111   00334E                     u3600:
  7112   00334E  EFB5  F019         	goto	l1185
  7113   003352                     l3550:
  7114   003352  2A15               	incf	___xxtofl@exp^0,f,c
  7115   003354  0E01               	movlw	1
  7116   003356  2616               	addwf	___xxtofl@arg^0,f,c
  7117   003358  0E00               	movlw	0
  7118   00335A  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  7119   00335C  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  7120   00335E  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  7121   003360  90D8               	bcf	status,0,c
  7122   003362  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7123   003364  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7124   003366  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7125   003368  3216               	rrcf	___xxtofl@arg^0,f,c
  7126   00336A                     l1185:
  7127   00336A  0E00               	movlw	0
  7128   00336C  1416               	andwf	___xxtofl@arg^0,w,c
  7129   00336E  6E10               	movwf	??___xxtofl^0,c
  7130   003370  0E00               	movlw	0
  7131   003372  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7132   003374  6E11               	movwf	(??___xxtofl+1)^0,c
  7133   003376  0E00               	movlw	0
  7134   003378  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7135   00337A  6E12               	movwf	(??___xxtofl+2)^0,c
  7136   00337C  0EFF               	movlw	255
  7137   00337E  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7138   003380  6E13               	movwf	(??___xxtofl+3)^0,c
  7139   003382  5010               	movf	??___xxtofl^0,w,c
  7140   003384  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7141   003386  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7142   003388  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7143   00338A  A4D8               	btfss	status,2,c
  7144   00338C  EFCA  F019         	goto	u3611
  7145   003390  EFCC  F019         	goto	u3610
  7146   003394                     u3611:
  7147   003394  EFA9  F019         	goto	l3550
  7148   003398                     u3610:
  7149   003398  EFD4  F019         	goto	l3558
  7150   00339C                     l3556:
  7151   00339C  0615               	decf	___xxtofl@exp^0,f,c
  7152   00339E  90D8               	bcf	status,0,c
  7153   0033A0  3616               	rlcf	___xxtofl@arg^0,f,c
  7154   0033A2  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  7155   0033A4  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  7156   0033A6  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  7157   0033A8                     l3558:
  7158   0033A8  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  7159   0033AA  EFD9  F019         	goto	u3621
  7160   0033AE  EFDB  F019         	goto	u3620
  7161   0033B2                     u3621:
  7162   0033B2  EFE3  F019         	goto	l1192
  7163   0033B6                     u3620:
  7164   0033B6  0E02               	movlw	2
  7165   0033B8  6015               	cpfslt	___xxtofl@exp^0,c
  7166   0033BA  EFE1  F019         	goto	u3631
  7167   0033BE  EFE3  F019         	goto	u3630
  7168   0033C2                     u3631:
  7169   0033C2  EFCE  F019         	goto	l3556
  7170   0033C6                     u3630:
  7171   0033C6                     l1192:
  7172   0033C6  B015               	btfsc	___xxtofl@exp^0,0,c
  7173   0033C8  EFE8  F019         	goto	u3641
  7174   0033CC  EFEA  F019         	goto	u3640
  7175   0033D0                     u3641:
  7176   0033D0  EFEB  F019         	goto	l3564
  7177   0033D4                     u3640:
  7178   0033D4  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  7179   0033D6                     l3564:
  7180   0033D6  90D8               	bcf	status,0,c
  7181   0033D8  3215               	rrcf	___xxtofl@exp^0,f,c
  7182   0033DA  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  7183   0033DE  6A11               	clrf	(??___xxtofl+1)^0,c
  7184   0033E0  6A12               	clrf	(??___xxtofl+2)^0,c
  7185   0033E2  6A13               	clrf	(??___xxtofl+3)^0,c
  7186   0033E4  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  7187   0033E8  6A12               	clrf	(??___xxtofl+2)^0,c
  7188   0033EA  6A11               	clrf	(??___xxtofl+1)^0,c
  7189   0033EC  6A10               	clrf	??___xxtofl^0,c
  7190   0033EE  5010               	movf	??___xxtofl^0,w,c
  7191   0033F0  1216               	iorwf	___xxtofl@arg^0,f,c
  7192   0033F2  5011               	movf	(??___xxtofl+1)^0,w,c
  7193   0033F4  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  7194   0033F6  5012               	movf	(??___xxtofl+2)^0,w,c
  7195   0033F8  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  7196   0033FA  5013               	movf	(??___xxtofl+3)^0,w,c
  7197   0033FC  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  7198   0033FE  5014               	movf	___xxtofl@sign^0,w,c
  7199   003400  B4D8               	btfsc	status,2,c
  7200   003402  EF05  F01A         	goto	u3651
  7201   003406  EF07  F01A         	goto	u3650
  7202   00340A                     u3651:
  7203   00340A  EF0F  F01A         	goto	l3574
  7204   00340E                     u3650:
  7205   00340E  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7206   003410  EF0E  F01A         	goto	u3660
  7207   003414  EF0C  F01A         	goto	u3661
  7208   003418                     u3661:
  7209   003418  EF0F  F01A         	goto	l3574
  7210   00341C                     u3660:
  7211   00341C  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  7212   00341E                     l3574:
  7213   00341E  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  7214   003422  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7215   003426  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7216   00342A  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7217   00342E                     l1181:
  7218   00342E  0012               	return		;funcret
  7219   003430                     __end_of___xxtofl:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function ___fltol *****************
  7223 ;; Defined at:
  7224 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  f1              4    0[COMRAM] unsigned char 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  exp1            1    9[COMRAM] unsigned char 
  7229 ;;  sign1           1    8[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  4    0[COMRAM] long 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7243 ;;Total ram usage:       10 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_custom_floatmodulo
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text32
  7253   00403A                     __ptext32:
  7254                           	callstack 0
  7255   00403A                     ___fltol:
  7256                           	callstack 27
  7257   00403A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7258   00403C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7259   00403E  6E0A               	movwf	___fltol@exp1^0,c
  7260   004040  500A               	movf	___fltol@exp1^0,w,c
  7261   004042  A4D8               	btfss	status,2,c
  7262   004044  EF26  F020         	goto	u3441
  7263   004048  EF28  F020         	goto	u3440
  7264   00404C                     u3441:
  7265   00404C  EF32  F020         	goto	l3456
  7266   004050                     u3440:
  7267   004050                     l3452:
  7268   004050  0E00               	movlw	0
  7269   004052  6E01               	movwf	?___fltol^0,c
  7270   004054  0E00               	movlw	0
  7271   004056  6E02               	movwf	(?___fltol+1)^0,c
  7272   004058  0E00               	movlw	0
  7273   00405A  6E03               	movwf	(?___fltol+2)^0,c
  7274   00405C  0E00               	movlw	0
  7275   00405E  6E04               	movwf	(?___fltol+3)^0,c
  7276   004060  EF9F  F020         	goto	l820
  7277   004064                     l3456:
  7278   004064  C001  F005         	movff	___fltol@f1,??___fltol
  7279   004068  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7280   00406C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7281   004070  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7282   004074  0E20               	movlw	32
  7283   004076  EF42  F020         	goto	u3450
  7284   00407A                     u3455:
  7285   00407A  90D8               	bcf	status,0,c
  7286   00407C  3208               	rrcf	(??___fltol+3)^0,f,c
  7287   00407E  3207               	rrcf	(??___fltol+2)^0,f,c
  7288   004080  3206               	rrcf	(??___fltol+1)^0,f,c
  7289   004082  3205               	rrcf	??___fltol^0,f,c
  7290   004084                     u3450:
  7291   004084  2EE8               	decfsz	wreg,f,c
  7292   004086  EF3D  F020         	goto	u3455
  7293   00408A  5005               	movf	??___fltol^0,w,c
  7294   00408C  6E09               	movwf	___fltol@sign1^0,c
  7295   00408E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7296   004090  0EFF               	movlw	255
  7297   004092  1601               	andwf	___fltol@f1^0,f,c
  7298   004094  0EFF               	movlw	255
  7299   004096  1602               	andwf	(___fltol@f1+1)^0,f,c
  7300   004098  0EFF               	movlw	255
  7301   00409A  1603               	andwf	(___fltol@f1+2)^0,f,c
  7302   00409C  0E00               	movlw	0
  7303   00409E  1604               	andwf	(___fltol@f1+3)^0,f,c
  7304   0040A0  0E96               	movlw	150
  7305   0040A2  5E0A               	subwf	___fltol@exp1^0,f,c
  7306   0040A4  BE0A               	btfsc	___fltol@exp1^0,7,c
  7307   0040A6  EF59  F020         	goto	u3460
  7308   0040AA  EF57  F020         	goto	u3461
  7309   0040AE                     u3461:
  7310   0040AE  EF6F  F020         	goto	l3476
  7311   0040B2                     u3460:
  7312   0040B2  500A               	movf	___fltol@exp1^0,w,c
  7313   0040B4  0A80               	xorlw	128
  7314   0040B6  0F97               	addlw	151
  7315   0040B8  B0D8               	btfsc	status,0,c
  7316   0040BA  EF61  F020         	goto	u3471
  7317   0040BE  EF63  F020         	goto	u3470
  7318   0040C2                     u3471:
  7319   0040C2  EF65  F020         	goto	l3472
  7320   0040C6                     u3470:
  7321   0040C6  EF28  F020         	goto	l3452
  7322   0040CA                     l3472:
  7323   0040CA  90D8               	bcf	status,0,c
  7324   0040CC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7325   0040CE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7326   0040D0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7327   0040D2  3201               	rrcf	___fltol@f1^0,f,c
  7328   0040D4  3E0A               	incfsz	___fltol@exp1^0,f,c
  7329   0040D6  EF65  F020         	goto	l3472
  7330   0040DA  EF87  F020         	goto	l3486
  7331   0040DE                     l3476:
  7332   0040DE  0E1F               	movlw	31
  7333   0040E0  640A               	cpfsgt	___fltol@exp1^0,c
  7334   0040E2  EF75  F020         	goto	u3481
  7335   0040E6  EF77  F020         	goto	u3480
  7336   0040EA                     u3481:
  7337   0040EA  EF7F  F020         	goto	l3484
  7338   0040EE                     u3480:
  7339   0040EE  EF28  F020         	goto	l3452
  7340   0040F2                     l3482:
  7341   0040F2  90D8               	bcf	status,0,c
  7342   0040F4  3601               	rlcf	___fltol@f1^0,f,c
  7343   0040F6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7344   0040F8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7345   0040FA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7346   0040FC  060A               	decf	___fltol@exp1^0,f,c
  7347   0040FE                     l3484:
  7348   0040FE  500A               	movf	___fltol@exp1^0,w,c
  7349   004100  A4D8               	btfss	status,2,c
  7350   004102  EF85  F020         	goto	u3491
  7351   004106  EF87  F020         	goto	u3490
  7352   00410A                     u3491:
  7353   00410A  EF79  F020         	goto	l3482
  7354   00410E                     u3490:
  7355   00410E                     l3486:
  7356   00410E  5009               	movf	___fltol@sign1^0,w,c
  7357   004110  B4D8               	btfsc	status,2,c
  7358   004112  EF8D  F020         	goto	u3501
  7359   004116  EF8F  F020         	goto	u3500
  7360   00411A                     u3501:
  7361   00411A  EF97  F020         	goto	l3490
  7362   00411E                     u3500:
  7363   00411E  1E04               	comf	(___fltol@f1+3)^0,f,c
  7364   004120  1E03               	comf	(___fltol@f1+2)^0,f,c
  7365   004122  1E02               	comf	(___fltol@f1+1)^0,f,c
  7366   004124  6C01               	negf	___fltol@f1^0,c
  7367   004126  0E00               	movlw	0
  7368   004128  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7369   00412A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7370   00412C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7371   00412E                     l3490:
  7372   00412E  C001  F001         	movff	___fltol@f1,?___fltol
  7373   004132  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7374   004136  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7375   00413A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7376   00413E                     l820:
  7377   00413E  0012               	return		;funcret
  7378   004140                     __end_of___fltol:
  7379                           	callstack 0
  7380                           
  7381 ;; *************** function ___flsub *****************
  7382 ;; Defined at:
  7383 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  b               4   25[COMRAM] long 
  7386 ;;  a               4   29[COMRAM] long 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  4   25[COMRAM] long 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7398 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;Total ram usage:        8 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 1
  7405 ;; This function calls:
  7406 ;;		___fladd
  7407 ;; This function is called by:
  7408 ;;		_custom_floatmodulo
  7409 ;;		_RGB_to_HSV
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text33
  7414   0047CA                     __ptext33:
  7415                           	callstack 0
  7416   0047CA                     ___flsub:
  7417                           	callstack 26
  7418   0047CA  0E00               	movlw	0
  7419   0047CC  1A1E               	xorwf	___flsub@a^0,f,c
  7420   0047CE  0E00               	movlw	0
  7421   0047D0  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7422   0047D2  0E00               	movlw	0
  7423   0047D4  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7424   0047D6  0E80               	movlw	128
  7425   0047D8  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7426   0047DA  C01A  F001         	movff	___flsub@b,___fladd@b
  7427   0047DE  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7428   0047E2  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7429   0047E6  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7430   0047EA  C01E  F005         	movff	___flsub@a,___fladd@a
  7431   0047EE  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7432   0047F2  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7433   0047F6  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7434   0047FA  ECFC  F012         	call	___fladd	;wreg free
  7435   0047FE  C001  F01A         	movff	?___fladd,?___flsub
  7436   004802  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7437   004806  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7438   00480A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7439   00480E  0012               	return		;funcret
  7440   004810                     __end_of___flsub:
  7441                           	callstack 0
  7442                           
  7443 ;; *************** function ___fladd *****************
  7444 ;; Defined at:
  7445 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  b               4    0[COMRAM] long 
  7448 ;;  a               4    4[COMRAM] long 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  grs             1   15[COMRAM] unsigned char 
  7451 ;;  bexp            1   14[COMRAM] unsigned char 
  7452 ;;  aexp            1   13[COMRAM] unsigned char 
  7453 ;;  signs           1   12[COMRAM] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  4    0[COMRAM] unsigned char 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7463 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7467 ;;Total ram usage:       16 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_RGB_to_HSV
  7473 ;;		___flsub
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text34
  7478   0025F8                     __ptext34:
  7479                           	callstack 0
  7480   0025F8                     ___fladd:
  7481                           	callstack 26
  7482   0025F8  5004               	movf	(___fladd@b+3)^0,w,c
  7483   0025FA  0B80               	andlw	128
  7484   0025FC  6E0D               	movwf	___fladd@signs^0,c
  7485   0025FE  5004               	movf	(___fladd@b+3)^0,w,c
  7486   002600  2404               	addwf	(___fladd@b+3)^0,w,c
  7487   002602  6E0F               	movwf	___fladd@bexp^0,c
  7488   002604  AE03               	btfss	(___fladd@b+2)^0,7,c
  7489   002606  EF07  F013         	goto	u2581
  7490   00260A  EF09  F013         	goto	u2580
  7491   00260E                     u2581:
  7492   00260E  EF0A  F013         	goto	l2960
  7493   002612                     u2580:
  7494   002612  800F               	bsf	___fladd@bexp^0,0,c
  7495   002614                     l2960:
  7496   002614  500F               	movf	___fladd@bexp^0,w,c
  7497   002616  B4D8               	btfsc	status,2,c
  7498   002618  EF10  F013         	goto	u2591
  7499   00261C  EF12  F013         	goto	u2590
  7500   002620                     u2591:
  7501   002620  EF27  F013         	goto	l2970
  7502   002624                     u2590:
  7503   002624  280F               	incf	___fladd@bexp^0,w,c
  7504   002626  A4D8               	btfss	status,2,c
  7505   002628  EF18  F013         	goto	u2601
  7506   00262C  EF1A  F013         	goto	u2600
  7507   002630                     u2601:
  7508   002630  EF22  F013         	goto	l2966
  7509   002634                     u2600:
  7510   002634  0E00               	movlw	0
  7511   002636  6E01               	movwf	___fladd@b^0,c
  7512   002638  0E00               	movlw	0
  7513   00263A  6E02               	movwf	(___fladd@b+1)^0,c
  7514   00263C  0E00               	movlw	0
  7515   00263E  6E03               	movwf	(___fladd@b+2)^0,c
  7516   002640  0E00               	movlw	0
  7517   002642  6E04               	movwf	(___fladd@b+3)^0,c
  7518   002644                     l2966:
  7519   002644  8E03               	bsf	(___fladd@b+2)^0,7,c
  7520   002646  0E00               	movlw	0
  7521   002648  6E04               	movwf	(___fladd@b+3)^0,c
  7522   00264A  EF2F  F013         	goto	l2972
  7523   00264E                     l2970:
  7524   00264E  0E00               	movlw	0
  7525   002650  6E01               	movwf	___fladd@b^0,c
  7526   002652  0E00               	movlw	0
  7527   002654  6E02               	movwf	(___fladd@b+1)^0,c
  7528   002656  0E00               	movlw	0
  7529   002658  6E03               	movwf	(___fladd@b+2)^0,c
  7530   00265A  0E00               	movlw	0
  7531   00265C  6E04               	movwf	(___fladd@b+3)^0,c
  7532   00265E                     l2972:
  7533   00265E  5008               	movf	(___fladd@a+3)^0,w,c
  7534   002660  0B80               	andlw	128
  7535   002662  6E0E               	movwf	___fladd@aexp^0,c
  7536   002664  500D               	movf	___fladd@signs^0,w,c
  7537   002666  180E               	xorwf	___fladd@aexp^0,w,c
  7538   002668  B4D8               	btfsc	status,2,c
  7539   00266A  EF39  F013         	goto	u2611
  7540   00266E  EF3B  F013         	goto	u2610
  7541   002672                     u2611:
  7542   002672  EF3C  F013         	goto	l2978
  7543   002676                     u2610:
  7544   002676  8C0D               	bsf	___fladd@signs^0,6,c
  7545   002678                     l2978:
  7546   002678  5008               	movf	(___fladd@a+3)^0,w,c
  7547   00267A  2408               	addwf	(___fladd@a+3)^0,w,c
  7548   00267C  6E0E               	movwf	___fladd@aexp^0,c
  7549   00267E  AE07               	btfss	(___fladd@a+2)^0,7,c
  7550   002680  EF44  F013         	goto	u2621
  7551   002684  EF46  F013         	goto	u2620
  7552   002688                     u2621:
  7553   002688  EF47  F013         	goto	l2984
  7554   00268C                     u2620:
  7555   00268C  800E               	bsf	___fladd@aexp^0,0,c
  7556   00268E                     l2984:
  7557   00268E  500E               	movf	___fladd@aexp^0,w,c
  7558   002690  B4D8               	btfsc	status,2,c
  7559   002692  EF4D  F013         	goto	u2631
  7560   002696  EF4F  F013         	goto	u2630
  7561   00269A                     u2631:
  7562   00269A  EF64  F013         	goto	l2994
  7563   00269E                     u2630:
  7564   00269E  280E               	incf	___fladd@aexp^0,w,c
  7565   0026A0  A4D8               	btfss	status,2,c
  7566   0026A2  EF55  F013         	goto	u2641
  7567   0026A6  EF57  F013         	goto	u2640
  7568   0026AA                     u2641:
  7569   0026AA  EF5F  F013         	goto	l2990
  7570   0026AE                     u2640:
  7571   0026AE  0E00               	movlw	0
  7572   0026B0  6E05               	movwf	___fladd@a^0,c
  7573   0026B2  0E00               	movlw	0
  7574   0026B4  6E06               	movwf	(___fladd@a+1)^0,c
  7575   0026B6  0E00               	movlw	0
  7576   0026B8  6E07               	movwf	(___fladd@a+2)^0,c
  7577   0026BA  0E00               	movlw	0
  7578   0026BC  6E08               	movwf	(___fladd@a+3)^0,c
  7579   0026BE                     l2990:
  7580   0026BE  8E07               	bsf	(___fladd@a+2)^0,7,c
  7581   0026C0  0E00               	movlw	0
  7582   0026C2  6E08               	movwf	(___fladd@a+3)^0,c
  7583   0026C4  EF6C  F013         	goto	l2996
  7584   0026C8                     l2994:
  7585   0026C8  0E00               	movlw	0
  7586   0026CA  6E05               	movwf	___fladd@a^0,c
  7587   0026CC  0E00               	movlw	0
  7588   0026CE  6E06               	movwf	(___fladd@a+1)^0,c
  7589   0026D0  0E00               	movlw	0
  7590   0026D2  6E07               	movwf	(___fladd@a+2)^0,c
  7591   0026D4  0E00               	movlw	0
  7592   0026D6  6E08               	movwf	(___fladd@a+3)^0,c
  7593   0026D8                     l2996:
  7594   0026D8  500F               	movf	___fladd@bexp^0,w,c
  7595   0026DA  5C0E               	subwf	___fladd@aexp^0,w,c
  7596   0026DC  B0D8               	btfsc	status,0,c
  7597   0026DE  EF73  F013         	goto	u2651
  7598   0026E2  EF75  F013         	goto	u2650
  7599   0026E6                     u2651:
  7600   0026E6  EF9C  F013         	goto	l3032
  7601   0026EA                     u2650:
  7602   0026EA  AC0D               	btfss	___fladd@signs^0,6,c
  7603   0026EC  EF7A  F013         	goto	u2661
  7604   0026F0  EF7C  F013         	goto	u2660
  7605   0026F4                     u2661:
  7606   0026F4  EF7E  F013         	goto	l3002
  7607   0026F8                     u2660:
  7608   0026F8  0E80               	movlw	128
  7609   0026FA  1A0D               	xorwf	___fladd@signs^0,f,c
  7610   0026FC                     l3002:
  7611   0026FC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7612   002700  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7613   002704  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7614   002708  C001  F010         	movff	___fladd@b,___fladd@grs
  7615   00270C  C005  F001         	movff	___fladd@a,___fladd@b
  7616   002710  C010  F005         	movff	___fladd@grs,___fladd@a
  7617   002714  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7618   002718  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7619   00271C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7620   002720  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7621   002724  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7622   002728  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7623   00272C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7624   002730  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7625   002734  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7626   002738                     l3032:
  7627   002738  0E00               	movlw	0
  7628   00273A  6E10               	movwf	___fladd@grs^0,c
  7629   00273C  500F               	movf	___fladd@bexp^0,w,c
  7630   00273E  C00E  F009         	movff	___fladd@aexp,??___fladd
  7631   002742  6A0A               	clrf	(??___fladd+1)^0,c
  7632   002744  5E09               	subwf	??___fladd^0,f,c
  7633   002746  0E00               	movlw	0
  7634   002748  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7635   00274A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7636   00274C  EFB1  F013         	goto	u2671
  7637   002750  500A               	movf	(??___fladd+1)^0,w,c
  7638   002752  E109               	bnz	u2670
  7639   002754  0E1A               	movlw	26
  7640   002756  5C09               	subwf	??___fladd^0,w,c
  7641   002758  A0D8               	btfss	status,0,c
  7642   00275A  EFB1  F013         	goto	u2671
  7643   00275E  EFB3  F013         	goto	u2670
  7644   002762                     u2671:
  7645   002762  EFEA  F013         	goto	l1052
  7646   002766                     u2670:
  7647   002766  5001               	movf	___fladd@b^0,w,c
  7648   002768  1002               	iorwf	(___fladd@b+1)^0,w,c
  7649   00276A  1003               	iorwf	(___fladd@b+2)^0,w,c
  7650   00276C  1004               	iorwf	(___fladd@b+3)^0,w,c
  7651   00276E  A4D8               	btfss	status,2,c
  7652   002770  EFBC  F013         	goto	u2681
  7653   002774  EFBF  F013         	goto	u2680
  7654   002778                     u2681:
  7655   002778  0E01               	movlw	1
  7656   00277A  EFC0  F013         	goto	u2690
  7657   00277E                     u2680:
  7658   00277E  0E00               	movlw	0
  7659   002780                     u2690:
  7660   002780  6E10               	movwf	___fladd@grs^0,c
  7661   002782  0E00               	movlw	0
  7662   002784  6E01               	movwf	___fladd@b^0,c
  7663   002786  0E00               	movlw	0
  7664   002788  6E02               	movwf	(___fladd@b+1)^0,c
  7665   00278A  0E00               	movlw	0
  7666   00278C  6E03               	movwf	(___fladd@b+2)^0,c
  7667   00278E  0E00               	movlw	0
  7668   002790  6E04               	movwf	(___fladd@b+3)^0,c
  7669   002792  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7670   002796  EFF3  F013         	goto	l1051
  7671   00279A                     l1053:
  7672   00279A  A010               	btfss	___fladd@grs^0,0,c
  7673   00279C  EFD2  F013         	goto	u2701
  7674   0027A0  EFD4  F013         	goto	u2700
  7675   0027A4                     u2701:
  7676   0027A4  EFDA  F013         	goto	l3044
  7677   0027A8                     u2700:
  7678   0027A8  90D8               	bcf	status,0,c
  7679   0027AA  3010               	rrcf	___fladd@grs^0,w,c
  7680   0027AC  0901               	iorlw	1
  7681   0027AE  6E10               	movwf	___fladd@grs^0,c
  7682   0027B0  EFDC  F013         	goto	l3046
  7683   0027B4                     l3044:
  7684   0027B4  90D8               	bcf	status,0,c
  7685   0027B6  3210               	rrcf	___fladd@grs^0,f,c
  7686   0027B8                     l3046:
  7687   0027B8  A001               	btfss	___fladd@b^0,0,c
  7688   0027BA  EFE1  F013         	goto	u2711
  7689   0027BE  EFE3  F013         	goto	u2710
  7690   0027C2                     u2711:
  7691   0027C2  EFE4  F013         	goto	l3050
  7692   0027C6                     u2710:
  7693   0027C6  8E10               	bsf	___fladd@grs^0,7,c
  7694   0027C8                     l3050:
  7695   0027C8  3404               	rlcf	(___fladd@b+3)^0,w,c
  7696   0027CA  3204               	rrcf	(___fladd@b+3)^0,f,c
  7697   0027CC  3203               	rrcf	(___fladd@b+2)^0,f,c
  7698   0027CE  3202               	rrcf	(___fladd@b+1)^0,f,c
  7699   0027D0  3201               	rrcf	___fladd@b^0,f,c
  7700   0027D2  2A0F               	incf	___fladd@bexp^0,f,c
  7701   0027D4                     l1052:
  7702   0027D4  500E               	movf	___fladd@aexp^0,w,c
  7703   0027D6  5C0F               	subwf	___fladd@bexp^0,w,c
  7704   0027D8  A0D8               	btfss	status,0,c
  7705   0027DA  EFF1  F013         	goto	u2721
  7706   0027DE  EFF3  F013         	goto	u2720
  7707   0027E2                     u2721:
  7708   0027E2  EFCD  F013         	goto	l1053
  7709   0027E6                     u2720:
  7710   0027E6                     l1051:
  7711   0027E6  BC0D               	btfsc	___fladd@signs^0,6,c
  7712   0027E8  EFF8  F013         	goto	u2731
  7713   0027EC  EFFA  F013         	goto	u2730
  7714   0027F0                     u2731:
  7715   0027F0  EF3A  F014         	goto	l3078
  7716   0027F4                     u2730:
  7717   0027F4  500F               	movf	___fladd@bexp^0,w,c
  7718   0027F6  A4D8               	btfss	status,2,c
  7719   0027F8  EF00  F014         	goto	u2741
  7720   0027FC  EF02  F014         	goto	u2740
  7721   002800                     u2741:
  7722   002800  EF0C  F014         	goto	l3060
  7723   002804                     u2740:
  7724   002804  0E00               	movlw	0
  7725   002806  6E01               	movwf	?___fladd^0,c
  7726   002808  0E00               	movlw	0
  7727   00280A  6E02               	movwf	(?___fladd+1)^0,c
  7728   00280C  0E00               	movlw	0
  7729   00280E  6E03               	movwf	(?___fladd+2)^0,c
  7730   002810  0E00               	movlw	0
  7731   002812  6E04               	movwf	(?___fladd+3)^0,c
  7732   002814  EF5B  F015         	goto	l1060
  7733   002818                     l3060:
  7734   002818  5005               	movf	___fladd@a^0,w,c
  7735   00281A  2601               	addwf	___fladd@b^0,f,c
  7736   00281C  5006               	movf	(___fladd@a+1)^0,w,c
  7737   00281E  2202               	addwfc	(___fladd@b+1)^0,f,c
  7738   002820  5007               	movf	(___fladd@a+2)^0,w,c
  7739   002822  2203               	addwfc	(___fladd@b+2)^0,f,c
  7740   002824  5008               	movf	(___fladd@a+3)^0,w,c
  7741   002826  2204               	addwfc	(___fladd@b+3)^0,f,c
  7742   002828  A004               	btfss	(___fladd@b+3)^0,0,c
  7743   00282A  EF19  F014         	goto	u2751
  7744   00282E  EF1B  F014         	goto	u2750
  7745   002832                     u2751:
  7746   002832  EFC7  F014         	goto	l3114
  7747   002836                     u2750:
  7748   002836  A010               	btfss	___fladd@grs^0,0,c
  7749   002838  EF20  F014         	goto	u2761
  7750   00283C  EF22  F014         	goto	u2760
  7751   002840                     u2761:
  7752   002840  EF28  F014         	goto	l3068
  7753   002844                     u2760:
  7754   002844  90D8               	bcf	status,0,c
  7755   002846  3010               	rrcf	___fladd@grs^0,w,c
  7756   002848  0901               	iorlw	1
  7757   00284A  6E10               	movwf	___fladd@grs^0,c
  7758   00284C  EF2A  F014         	goto	l3070
  7759   002850                     l3068:
  7760   002850  90D8               	bcf	status,0,c
  7761   002852  3210               	rrcf	___fladd@grs^0,f,c
  7762   002854                     l3070:
  7763   002854  A001               	btfss	___fladd@b^0,0,c
  7764   002856  EF2F  F014         	goto	u2771
  7765   00285A  EF31  F014         	goto	u2770
  7766   00285E                     u2771:
  7767   00285E  EF32  F014         	goto	l3074
  7768   002862                     u2770:
  7769   002862  8E10               	bsf	___fladd@grs^0,7,c
  7770   002864                     l3074:
  7771   002864  3404               	rlcf	(___fladd@b+3)^0,w,c
  7772   002866  3204               	rrcf	(___fladd@b+3)^0,f,c
  7773   002868  3203               	rrcf	(___fladd@b+2)^0,f,c
  7774   00286A  3202               	rrcf	(___fladd@b+1)^0,f,c
  7775   00286C  3201               	rrcf	___fladd@b^0,f,c
  7776   00286E  2A0F               	incf	___fladd@bexp^0,f,c
  7777   002870  EFC7  F014         	goto	l3114
  7778   002874                     l3078:
  7779   002874  5005               	movf	___fladd@a^0,w,c
  7780   002876  5C01               	subwf	___fladd@b^0,w,c
  7781   002878  5006               	movf	(___fladd@a+1)^0,w,c
  7782   00287A  5802               	subwfb	(___fladd@b+1)^0,w,c
  7783   00287C  5007               	movf	(___fladd@a+2)^0,w,c
  7784   00287E  5803               	subwfb	(___fladd@b+2)^0,w,c
  7785   002880  5004               	movf	(___fladd@b+3)^0,w,c
  7786   002882  0A80               	xorlw	128
  7787   002884  6E09               	movwf	??___fladd^0,c
  7788   002886  5008               	movf	(___fladd@a+3)^0,w,c
  7789   002888  0A80               	xorlw	128
  7790   00288A  5809               	subwfb	??___fladd^0,w,c
  7791   00288C  B0D8               	btfsc	status,0,c
  7792   00288E  EF4B  F014         	goto	u2781
  7793   002892  EF4D  F014         	goto	u2780
  7794   002896                     u2781:
  7795   002896  EF78  F014         	goto	l3088
  7796   00289A                     u2780:
  7797   00289A  5001               	movf	___fladd@b^0,w,c
  7798   00289C  5C05               	subwf	___fladd@a^0,w,c
  7799   00289E  6E09               	movwf	??___fladd^0,c
  7800   0028A0  5002               	movf	(___fladd@b+1)^0,w,c
  7801   0028A2  5806               	subwfb	(___fladd@a+1)^0,w,c
  7802   0028A4  6E0A               	movwf	(??___fladd+1)^0,c
  7803   0028A6  5003               	movf	(___fladd@b+2)^0,w,c
  7804   0028A8  5807               	subwfb	(___fladd@a+2)^0,w,c
  7805   0028AA  6E0B               	movwf	(??___fladd+2)^0,c
  7806   0028AC  5004               	movf	(___fladd@b+3)^0,w,c
  7807   0028AE  5808               	subwfb	(___fladd@a+3)^0,w,c
  7808   0028B0  6E0C               	movwf	(??___fladd+3)^0,c
  7809   0028B2  0EFF               	movlw	255
  7810   0028B4  2409               	addwf	??___fladd^0,w,c
  7811   0028B6  6E01               	movwf	___fladd@b^0,c
  7812   0028B8  0EFF               	movlw	255
  7813   0028BA  200A               	addwfc	(??___fladd+1)^0,w,c
  7814   0028BC  6E02               	movwf	(___fladd@b+1)^0,c
  7815   0028BE  0EFF               	movlw	255
  7816   0028C0  200B               	addwfc	(??___fladd+2)^0,w,c
  7817   0028C2  6E03               	movwf	(___fladd@b+2)^0,c
  7818   0028C4  0EFF               	movlw	255
  7819   0028C6  200C               	addwfc	(??___fladd+3)^0,w,c
  7820   0028C8  6E04               	movwf	(___fladd@b+3)^0,c
  7821   0028CA  0E80               	movlw	128
  7822   0028CC  1A0D               	xorwf	___fladd@signs^0,f,c
  7823   0028CE  6C10               	negf	___fladd@grs^0,c
  7824   0028D0  5010               	movf	___fladd@grs^0,w,c
  7825   0028D2  A4D8               	btfss	status,2,c
  7826   0028D4  EF6E  F014         	goto	u2791
  7827   0028D8  EF70  F014         	goto	u2790
  7828   0028DC                     u2791:
  7829   0028DC  EF80  F014         	goto	l1068
  7830   0028E0                     u2790:
  7831   0028E0  0E01               	movlw	1
  7832   0028E2  2601               	addwf	___fladd@b^0,f,c
  7833   0028E4  0E00               	movlw	0
  7834   0028E6  2202               	addwfc	(___fladd@b+1)^0,f,c
  7835   0028E8  2203               	addwfc	(___fladd@b+2)^0,f,c
  7836   0028EA  2204               	addwfc	(___fladd@b+3)^0,f,c
  7837   0028EC  EF80  F014         	goto	l1068
  7838   0028F0                     l3088:
  7839   0028F0  5005               	movf	___fladd@a^0,w,c
  7840   0028F2  5E01               	subwf	___fladd@b^0,f,c
  7841   0028F4  5006               	movf	(___fladd@a+1)^0,w,c
  7842   0028F6  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7843   0028F8  5007               	movf	(___fladd@a+2)^0,w,c
  7844   0028FA  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7845   0028FC  5008               	movf	(___fladd@a+3)^0,w,c
  7846   0028FE  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7847   002900                     l1068:
  7848   002900  5001               	movf	___fladd@b^0,w,c
  7849   002902  1002               	iorwf	(___fladd@b+1)^0,w,c
  7850   002904  1003               	iorwf	(___fladd@b+2)^0,w,c
  7851   002906  1004               	iorwf	(___fladd@b+3)^0,w,c
  7852   002908  A4D8               	btfss	status,2,c
  7853   00290A  EF89  F014         	goto	u2801
  7854   00290E  EF8B  F014         	goto	u2800
  7855   002912                     u2801:
  7856   002912  EFC0  F014         	goto	l3112
  7857   002916                     u2800:
  7858   002916  5010               	movf	___fladd@grs^0,w,c
  7859   002918  A4D8               	btfss	status,2,c
  7860   00291A  EF91  F014         	goto	u2811
  7861   00291E  EF93  F014         	goto	u2810
  7862   002922                     u2811:
  7863   002922  EFC0  F014         	goto	l3112
  7864   002926                     u2810:
  7865   002926  0E00               	movlw	0
  7866   002928  6E01               	movwf	?___fladd^0,c
  7867   00292A  0E00               	movlw	0
  7868   00292C  6E02               	movwf	(?___fladd+1)^0,c
  7869   00292E  0E00               	movlw	0
  7870   002930  6E03               	movwf	(?___fladd+2)^0,c
  7871   002932  0E00               	movlw	0
  7872   002934  6E04               	movwf	(?___fladd+3)^0,c
  7873   002936  EF5B  F015         	goto	l1060
  7874   00293A                     l3096:
  7875   00293A  90D8               	bcf	status,0,c
  7876   00293C  3601               	rlcf	___fladd@b^0,f,c
  7877   00293E  3602               	rlcf	(___fladd@b+1)^0,f,c
  7878   002940  3603               	rlcf	(___fladd@b+2)^0,f,c
  7879   002942  3604               	rlcf	(___fladd@b+3)^0,f,c
  7880   002944  AE10               	btfss	___fladd@grs^0,7,c
  7881   002946  EFA7  F014         	goto	u2821
  7882   00294A  EFA9  F014         	goto	u2820
  7883   00294E                     u2821:
  7884   00294E  EFAA  F014         	goto	l3102
  7885   002952                     u2820:
  7886   002952  8001               	bsf	___fladd@b^0,0,c
  7887   002954                     l3102:
  7888   002954  A010               	btfss	___fladd@grs^0,0,c
  7889   002956  EFAF  F014         	goto	u2831
  7890   00295A  EFB1  F014         	goto	u2830
  7891   00295E                     u2831:
  7892   00295E  EFB5  F014         	goto	l3106
  7893   002962                     u2830:
  7894   002962  80D8               	bsf	status,0,c
  7895   002964  3610               	rlcf	___fladd@grs^0,f,c
  7896   002966  EFB7  F014         	goto	l3108
  7897   00296A                     l3106:
  7898   00296A  90D8               	bcf	status,0,c
  7899   00296C  3610               	rlcf	___fladd@grs^0,f,c
  7900   00296E                     l3108:
  7901   00296E  500F               	movf	___fladd@bexp^0,w,c
  7902   002970  B4D8               	btfsc	status,2,c
  7903   002972  EFBD  F014         	goto	u2841
  7904   002976  EFBF  F014         	goto	u2840
  7905   00297A                     u2841:
  7906   00297A  EFC0  F014         	goto	l3112
  7907   00297E                     u2840:
  7908   00297E  060F               	decf	___fladd@bexp^0,f,c
  7909   002980                     l3112:
  7910   002980  AE03               	btfss	(___fladd@b+2)^0,7,c
  7911   002982  EFC5  F014         	goto	u2851
  7912   002986  EFC7  F014         	goto	u2850
  7913   00298A                     u2851:
  7914   00298A  EF9D  F014         	goto	l3096
  7915   00298E                     u2850:
  7916   00298E                     l3114:
  7917   00298E  0E00               	movlw	0
  7918   002990  6E0E               	movwf	___fladd@aexp^0,c
  7919   002992  AE10               	btfss	___fladd@grs^0,7,c
  7920   002994  EFCE  F014         	goto	u2861
  7921   002998  EFD0  F014         	goto	u2860
  7922   00299C                     u2861:
  7923   00299C  EFE8  F014         	goto	l1077
  7924   0029A0                     u2860:
  7925   0029A0  C010  F009         	movff	___fladd@grs,??___fladd
  7926   0029A4  0E7F               	movlw	127
  7927   0029A6  1609               	andwf	??___fladd^0,f,c
  7928   0029A8  B4D8               	btfsc	status,2,c
  7929   0029AA  EFD9  F014         	goto	u2871
  7930   0029AE  EFDB  F014         	goto	u2870
  7931   0029B2                     u2871:
  7932   0029B2  EFDF  F014         	goto	l1078
  7933   0029B6                     u2870:
  7934   0029B6                     l3120:
  7935   0029B6  0E01               	movlw	1
  7936   0029B8  6E0E               	movwf	___fladd@aexp^0,c
  7937   0029BA  EFE8  F014         	goto	l1077
  7938   0029BE                     l1078:
  7939   0029BE  A001               	btfss	___fladd@b^0,0,c
  7940   0029C0  EFE4  F014         	goto	u2881
  7941   0029C4  EFE6  F014         	goto	u2880
  7942   0029C8                     u2881:
  7943   0029C8  EFE8  F014         	goto	l1077
  7944   0029CC                     u2880:
  7945   0029CC  EFDB  F014         	goto	l3120
  7946   0029D0                     l1077:
  7947   0029D0  500E               	movf	___fladd@aexp^0,w,c
  7948   0029D2  B4D8               	btfsc	status,2,c
  7949   0029D4  EFEE  F014         	goto	u2891
  7950   0029D8  EFF0  F014         	goto	u2890
  7951   0029DC                     u2891:
  7952   0029DC  EF1B  F015         	goto	l3132
  7953   0029E0                     u2890:
  7954   0029E0  0E01               	movlw	1
  7955   0029E2  2601               	addwf	___fladd@b^0,f,c
  7956   0029E4  0E00               	movlw	0
  7957   0029E6  2202               	addwfc	(___fladd@b+1)^0,f,c
  7958   0029E8  2203               	addwfc	(___fladd@b+2)^0,f,c
  7959   0029EA  2204               	addwfc	(___fladd@b+3)^0,f,c
  7960   0029EC  A004               	btfss	(___fladd@b+3)^0,0,c
  7961   0029EE  EFFB  F014         	goto	u2901
  7962   0029F2  EFFD  F014         	goto	u2900
  7963   0029F6                     u2901:
  7964   0029F6  EF1B  F015         	goto	l3132
  7965   0029FA                     u2900:
  7966   0029FA  C001  F009         	movff	___fladd@b,??___fladd
  7967   0029FE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7968   002A02  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7969   002A06  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7970   002A0A  340C               	rlcf	(??___fladd+3)^0,w,c
  7971   002A0C  320C               	rrcf	(??___fladd+3)^0,f,c
  7972   002A0E  320B               	rrcf	(??___fladd+2)^0,f,c
  7973   002A10  320A               	rrcf	(??___fladd+1)^0,f,c
  7974   002A12  3209               	rrcf	??___fladd^0,f,c
  7975   002A14  C009  F001         	movff	??___fladd,___fladd@b
  7976   002A18  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7977   002A1C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7978   002A20  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7979   002A24  280F               	incf	___fladd@bexp^0,w,c
  7980   002A26  B4D8               	btfsc	status,2,c
  7981   002A28  EF18  F015         	goto	u2911
  7982   002A2C  EF1A  F015         	goto	u2910
  7983   002A30                     u2911:
  7984   002A30  EF1B  F015         	goto	l3132
  7985   002A34                     u2910:
  7986   002A34  2A0F               	incf	___fladd@bexp^0,f,c
  7987   002A36                     l3132:
  7988   002A36  280F               	incf	___fladd@bexp^0,w,c
  7989   002A38  B4D8               	btfsc	status,2,c
  7990   002A3A  EF21  F015         	goto	u2921
  7991   002A3E  EF23  F015         	goto	u2920
  7992   002A42                     u2921:
  7993   002A42  EF2B  F015         	goto	l3136
  7994   002A46                     u2920:
  7995   002A46  500F               	movf	___fladd@bexp^0,w,c
  7996   002A48  A4D8               	btfss	status,2,c
  7997   002A4A  EF29  F015         	goto	u2931
  7998   002A4E  EF2B  F015         	goto	u2930
  7999   002A52                     u2931:
  8000   002A52  EF3D  F015         	goto	l3140
  8001   002A56                     u2930:
  8002   002A56                     l3136:
  8003   002A56  0E00               	movlw	0
  8004   002A58  6E01               	movwf	___fladd@b^0,c
  8005   002A5A  0E00               	movlw	0
  8006   002A5C  6E02               	movwf	(___fladd@b+1)^0,c
  8007   002A5E  0E00               	movlw	0
  8008   002A60  6E03               	movwf	(___fladd@b+2)^0,c
  8009   002A62  0E00               	movlw	0
  8010   002A64  6E04               	movwf	(___fladd@b+3)^0,c
  8011   002A66  500F               	movf	___fladd@bexp^0,w,c
  8012   002A68  A4D8               	btfss	status,2,c
  8013   002A6A  EF39  F015         	goto	u2941
  8014   002A6E  EF3B  F015         	goto	u2940
  8015   002A72                     u2941:
  8016   002A72  EF3D  F015         	goto	l3140
  8017   002A76                     u2940:
  8018   002A76  0E00               	movlw	0
  8019   002A78  6E0D               	movwf	___fladd@signs^0,c
  8020   002A7A                     l3140:
  8021   002A7A  A00F               	btfss	___fladd@bexp^0,0,c
  8022   002A7C  EF42  F015         	goto	u2951
  8023   002A80  EF44  F015         	goto	u2950
  8024   002A84                     u2951:
  8025   002A84  EF47  F015         	goto	l3144
  8026   002A88                     u2950:
  8027   002A88  8E03               	bsf	(___fladd@b+2)^0,7,c
  8028   002A8A  EF48  F015         	goto	l3146
  8029   002A8E                     l3144:
  8030   002A8E  9E03               	bcf	(___fladd@b+2)^0,7,c
  8031   002A90                     l3146:
  8032   002A90  90D8               	bcf	status,0,c
  8033   002A92  300F               	rrcf	___fladd@bexp^0,w,c
  8034   002A94  6E04               	movwf	(___fladd@b+3)^0,c
  8035   002A96  AE0D               	btfss	___fladd@signs^0,7,c
  8036   002A98  EF50  F015         	goto	u2961
  8037   002A9C  EF52  F015         	goto	u2960
  8038   002AA0                     u2961:
  8039   002AA0  EF53  F015         	goto	l3152
  8040   002AA4                     u2960:
  8041   002AA4  8E04               	bsf	(___fladd@b+3)^0,7,c
  8042   002AA6                     l3152:
  8043   002AA6  C001  F001         	movff	___fladd@b,?___fladd
  8044   002AAA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8045   002AAE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8046   002AB2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8047   002AB6                     l1060:
  8048   002AB6  0012               	return		;funcret
  8049   002AB8                     __end_of___fladd:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function ___flmul *****************
  8053 ;; Defined at:
  8054 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  b               4   58[COMRAM] unsigned char 
  8057 ;;  a               4   62[COMRAM] unsigned char 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  prod            4   77[COMRAM] struct .
  8060 ;;  grs             4   71[COMRAM] unsigned long 
  8061 ;;  temp            2   81[COMRAM] struct .
  8062 ;;  bexp            1   76[COMRAM] unsigned char 
  8063 ;;  aexp            1   75[COMRAM] unsigned char 
  8064 ;;  sign            1   70[COMRAM] unsigned char 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  4   58[COMRAM] unsigned char 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0, prodl, prodh
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8074 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;Total ram usage:       25 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_custom_floatmodulo
  8084 ;;		_RGB_to_HSV
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text35
  8089   002AB8                     __ptext35:
  8090                           	callstack 0
  8091   002AB8                     ___flmul:
  8092                           	callstack 27
  8093   002AB8  503E               	movf	(___flmul@b+3)^0,w,c
  8094   002ABA  0B80               	andlw	128
  8095   002ABC  6E47               	movwf	___flmul@sign^0,c
  8096   002ABE  503E               	movf	(___flmul@b+3)^0,w,c
  8097   002AC0  243E               	addwf	(___flmul@b+3)^0,w,c
  8098   002AC2  6E4D               	movwf	___flmul@bexp^0,c
  8099   002AC4  AE3D               	btfss	(___flmul@b+2)^0,7,c
  8100   002AC6  EF67  F015         	goto	u3221
  8101   002ACA  EF69  F015         	goto	u3220
  8102   002ACE                     u3221:
  8103   002ACE  EF6A  F015         	goto	l3304
  8104   002AD2                     u3220:
  8105   002AD2  804D               	bsf	___flmul@bexp^0,0,c
  8106   002AD4                     l3304:
  8107   002AD4  504D               	movf	___flmul@bexp^0,w,c
  8108   002AD6  B4D8               	btfsc	status,2,c
  8109   002AD8  EF70  F015         	goto	u3231
  8110   002ADC  EF72  F015         	goto	u3230
  8111   002AE0                     u3231:
  8112   002AE0  EF85  F015         	goto	l3312
  8113   002AE4                     u3230:
  8114   002AE4  284D               	incf	___flmul@bexp^0,w,c
  8115   002AE6  A4D8               	btfss	status,2,c
  8116   002AE8  EF78  F015         	goto	u3241
  8117   002AEC  EF7A  F015         	goto	u3240
  8118   002AF0                     u3241:
  8119   002AF0  EF82  F015         	goto	l3310
  8120   002AF4                     u3240:
  8121   002AF4  0E00               	movlw	0
  8122   002AF6  6E3B               	movwf	___flmul@b^0,c
  8123   002AF8  0E00               	movlw	0
  8124   002AFA  6E3C               	movwf	(___flmul@b+1)^0,c
  8125   002AFC  0E00               	movlw	0
  8126   002AFE  6E3D               	movwf	(___flmul@b+2)^0,c
  8127   002B00  0E00               	movlw	0
  8128   002B02  6E3E               	movwf	(___flmul@b+3)^0,c
  8129   002B04                     l3310:
  8130   002B04  8E3D               	bsf	(___flmul@b+2)^0,7,c
  8131   002B06  EF8D  F015         	goto	l3314
  8132   002B0A                     l3312:
  8133   002B0A  0E00               	movlw	0
  8134   002B0C  6E3B               	movwf	___flmul@b^0,c
  8135   002B0E  0E00               	movlw	0
  8136   002B10  6E3C               	movwf	(___flmul@b+1)^0,c
  8137   002B12  0E00               	movlw	0
  8138   002B14  6E3D               	movwf	(___flmul@b+2)^0,c
  8139   002B16  0E00               	movlw	0
  8140   002B18  6E3E               	movwf	(___flmul@b+3)^0,c
  8141   002B1A                     l3314:
  8142   002B1A  5042               	movf	(___flmul@a+3)^0,w,c
  8143   002B1C  0B80               	andlw	128
  8144   002B1E  1A47               	xorwf	___flmul@sign^0,f,c
  8145   002B20  5042               	movf	(___flmul@a+3)^0,w,c
  8146   002B22  2442               	addwf	(___flmul@a+3)^0,w,c
  8147   002B24  6E4C               	movwf	___flmul@aexp^0,c
  8148   002B26  AE41               	btfss	(___flmul@a+2)^0,7,c
  8149   002B28  EF98  F015         	goto	u3251
  8150   002B2C  EF9A  F015         	goto	u3250
  8151   002B30                     u3251:
  8152   002B30  EF9B  F015         	goto	l3322
  8153   002B34                     u3250:
  8154   002B34  804C               	bsf	___flmul@aexp^0,0,c
  8155   002B36                     l3322:
  8156   002B36  504C               	movf	___flmul@aexp^0,w,c
  8157   002B38  B4D8               	btfsc	status,2,c
  8158   002B3A  EFA1  F015         	goto	u3261
  8159   002B3E  EFA3  F015         	goto	u3260
  8160   002B42                     u3261:
  8161   002B42  EFB6  F015         	goto	l3330
  8162   002B46                     u3260:
  8163   002B46  284C               	incf	___flmul@aexp^0,w,c
  8164   002B48  A4D8               	btfss	status,2,c
  8165   002B4A  EFA9  F015         	goto	u3271
  8166   002B4E  EFAB  F015         	goto	u3270
  8167   002B52                     u3271:
  8168   002B52  EFB3  F015         	goto	l3328
  8169   002B56                     u3270:
  8170   002B56  0E00               	movlw	0
  8171   002B58  6E3F               	movwf	___flmul@a^0,c
  8172   002B5A  0E00               	movlw	0
  8173   002B5C  6E40               	movwf	(___flmul@a+1)^0,c
  8174   002B5E  0E00               	movlw	0
  8175   002B60  6E41               	movwf	(___flmul@a+2)^0,c
  8176   002B62  0E00               	movlw	0
  8177   002B64  6E42               	movwf	(___flmul@a+3)^0,c
  8178   002B66                     l3328:
  8179   002B66  8E41               	bsf	(___flmul@a+2)^0,7,c
  8180   002B68  EFBE  F015         	goto	l1137
  8181   002B6C                     l3330:
  8182   002B6C  0E00               	movlw	0
  8183   002B6E  6E3F               	movwf	___flmul@a^0,c
  8184   002B70  0E00               	movlw	0
  8185   002B72  6E40               	movwf	(___flmul@a+1)^0,c
  8186   002B74  0E00               	movlw	0
  8187   002B76  6E41               	movwf	(___flmul@a+2)^0,c
  8188   002B78  0E00               	movlw	0
  8189   002B7A  6E42               	movwf	(___flmul@a+3)^0,c
  8190   002B7C                     l1137:
  8191   002B7C  504C               	movf	___flmul@aexp^0,w,c
  8192   002B7E  B4D8               	btfsc	status,2,c
  8193   002B80  EFC4  F015         	goto	u3281
  8194   002B84  EFC6  F015         	goto	u3280
  8195   002B88                     u3281:
  8196   002B88  EFCE  F015         	goto	l3334
  8197   002B8C                     u3280:
  8198   002B8C  504D               	movf	___flmul@bexp^0,w,c
  8199   002B8E  A4D8               	btfss	status,2,c
  8200   002B90  EFCC  F015         	goto	u3291
  8201   002B94  EFCE  F015         	goto	u3290
  8202   002B98                     u3291:
  8203   002B98  EFD8  F015         	goto	l3338
  8204   002B9C                     u3290:
  8205   002B9C                     l3334:
  8206   002B9C  0E00               	movlw	0
  8207   002B9E  6E3B               	movwf	?___flmul^0,c
  8208   002BA0  0E00               	movlw	0
  8209   002BA2  6E3C               	movwf	(?___flmul+1)^0,c
  8210   002BA4  0E00               	movlw	0
  8211   002BA6  6E3D               	movwf	(?___flmul+2)^0,c
  8212   002BA8  0E00               	movlw	0
  8213   002BAA  6E3E               	movwf	(?___flmul+3)^0,c
  8214   002BAC  EF70  F017         	goto	l1141
  8215   002BB0                     l3338:
  8216   002BB0  5041               	movf	(___flmul@a+2)^0,w,c
  8217   002BB2  023B               	mulwf	___flmul@b^0,c
  8218   002BB4  CFF3 F052          	movff	prodl,___flmul@temp
  8219   002BB8  CFF4 F053          	movff	prodh,___flmul@temp+1
  8220   002BBC  5052               	movf	___flmul@temp^0,w,c
  8221   002BBE  6E48               	movwf	___flmul@grs^0,c
  8222   002BC0  6A49               	clrf	(___flmul@grs+1)^0,c
  8223   002BC2  6A4A               	clrf	(___flmul@grs+2)^0,c
  8224   002BC4  6A4B               	clrf	(___flmul@grs+3)^0,c
  8225   002BC6  5053               	movf	(___flmul@temp+1)^0,w,c
  8226   002BC8  6E4E               	movwf	___flmul@prod^0,c
  8227   002BCA  6A4F               	clrf	(___flmul@prod+1)^0,c
  8228   002BCC  6A50               	clrf	(___flmul@prod+2)^0,c
  8229   002BCE  6A51               	clrf	(___flmul@prod+3)^0,c
  8230   002BD0  5040               	movf	(___flmul@a+1)^0,w,c
  8231   002BD2  023C               	mulwf	(___flmul@b+1)^0,c
  8232   002BD4  CFF3 F052          	movff	prodl,___flmul@temp
  8233   002BD8  CFF4 F053          	movff	prodh,___flmul@temp+1
  8234   002BDC  5052               	movf	___flmul@temp^0,w,c
  8235   002BDE  2648               	addwf	___flmul@grs^0,f,c
  8236   002BE0  0E00               	movlw	0
  8237   002BE2  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8238   002BE4  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8239   002BE6  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8240   002BE8  5053               	movf	(___flmul@temp+1)^0,w,c
  8241   002BEA  264E               	addwf	___flmul@prod^0,f,c
  8242   002BEC  0E00               	movlw	0
  8243   002BEE  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8244   002BF0  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8245   002BF2  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8246   002BF4  503F               	movf	___flmul@a^0,w,c
  8247   002BF6  023D               	mulwf	(___flmul@b+2)^0,c
  8248   002BF8  CFF3 F052          	movff	prodl,___flmul@temp
  8249   002BFC  CFF4 F053          	movff	prodh,___flmul@temp+1
  8250   002C00  5052               	movf	___flmul@temp^0,w,c
  8251   002C02  2648               	addwf	___flmul@grs^0,f,c
  8252   002C04  0E00               	movlw	0
  8253   002C06  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8254   002C08  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8255   002C0A  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8256   002C0C  5053               	movf	(___flmul@temp+1)^0,w,c
  8257   002C0E  264E               	addwf	___flmul@prod^0,f,c
  8258   002C10  0E00               	movlw	0
  8259   002C12  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8260   002C14  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8261   002C16  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8262   002C18  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8263   002C1C  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8264   002C20  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8265   002C24  6A48               	clrf	___flmul@grs^0,c
  8266   002C26  503F               	movf	___flmul@a^0,w,c
  8267   002C28  023C               	mulwf	(___flmul@b+1)^0,c
  8268   002C2A  CFF3 F052          	movff	prodl,___flmul@temp
  8269   002C2E  CFF4 F053          	movff	prodh,___flmul@temp+1
  8270   002C32  5052               	movf	___flmul@temp^0,w,c
  8271   002C34  2648               	addwf	___flmul@grs^0,f,c
  8272   002C36  5053               	movf	(___flmul@temp+1)^0,w,c
  8273   002C38  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8274   002C3A  0E00               	movlw	0
  8275   002C3C  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8276   002C3E  0E00               	movlw	0
  8277   002C40  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8278   002C42  5040               	movf	(___flmul@a+1)^0,w,c
  8279   002C44  023B               	mulwf	___flmul@b^0,c
  8280   002C46  CFF3 F052          	movff	prodl,___flmul@temp
  8281   002C4A  CFF4 F053          	movff	prodh,___flmul@temp+1
  8282   002C4E  5052               	movf	___flmul@temp^0,w,c
  8283   002C50  2648               	addwf	___flmul@grs^0,f,c
  8284   002C52  5053               	movf	(___flmul@temp+1)^0,w,c
  8285   002C54  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8286   002C56  0E00               	movlw	0
  8287   002C58  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8288   002C5A  0E00               	movlw	0
  8289   002C5C  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8290   002C5E  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8291   002C62  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8292   002C66  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8293   002C6A  6A48               	clrf	___flmul@grs^0,c
  8294   002C6C  503F               	movf	___flmul@a^0,w,c
  8295   002C6E  023B               	mulwf	___flmul@b^0,c
  8296   002C70  CFF3 F052          	movff	prodl,___flmul@temp
  8297   002C74  CFF4 F053          	movff	prodh,___flmul@temp+1
  8298   002C78  5052               	movf	___flmul@temp^0,w,c
  8299   002C7A  2648               	addwf	___flmul@grs^0,f,c
  8300   002C7C  5053               	movf	(___flmul@temp+1)^0,w,c
  8301   002C7E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8302   002C80  0E00               	movlw	0
  8303   002C82  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8304   002C84  0E00               	movlw	0
  8305   002C86  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8306   002C88  5041               	movf	(___flmul@a+2)^0,w,c
  8307   002C8A  023C               	mulwf	(___flmul@b+1)^0,c
  8308   002C8C  CFF3 F052          	movff	prodl,___flmul@temp
  8309   002C90  CFF4 F053          	movff	prodh,___flmul@temp+1
  8310   002C94  5052               	movf	___flmul@temp^0,w,c
  8311   002C96  264E               	addwf	___flmul@prod^0,f,c
  8312   002C98  5053               	movf	(___flmul@temp+1)^0,w,c
  8313   002C9A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8314   002C9C  0E00               	movlw	0
  8315   002C9E  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8316   002CA0  0E00               	movlw	0
  8317   002CA2  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8318   002CA4  5040               	movf	(___flmul@a+1)^0,w,c
  8319   002CA6  023D               	mulwf	(___flmul@b+2)^0,c
  8320   002CA8  CFF3 F052          	movff	prodl,___flmul@temp
  8321   002CAC  CFF4 F053          	movff	prodh,___flmul@temp+1
  8322   002CB0  5052               	movf	___flmul@temp^0,w,c
  8323   002CB2  264E               	addwf	___flmul@prod^0,f,c
  8324   002CB4  5053               	movf	(___flmul@temp+1)^0,w,c
  8325   002CB6  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8326   002CB8  0E00               	movlw	0
  8327   002CBA  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8328   002CBC  0E00               	movlw	0
  8329   002CBE  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8330   002CC0  5041               	movf	(___flmul@a+2)^0,w,c
  8331   002CC2  023D               	mulwf	(___flmul@b+2)^0,c
  8332   002CC4  CFF3 F052          	movff	prodl,___flmul@temp
  8333   002CC8  CFF4 F053          	movff	prodh,___flmul@temp+1
  8334   002CCC  5052               	movf	___flmul@temp^0,w,c
  8335   002CCE  6E43               	movwf	??___flmul^0,c
  8336   002CD0  5053               	movf	(___flmul@temp+1)^0,w,c
  8337   002CD2  6E44               	movwf	(??___flmul+1)^0,c
  8338   002CD4  6A45               	clrf	(??___flmul+2)^0,c
  8339   002CD6  6A46               	clrf	(??___flmul+3)^0,c
  8340   002CD8  C045  F046         	movff	??___flmul+2,??___flmul+3
  8341   002CDC  C044  F045         	movff	??___flmul+1,??___flmul+2
  8342   002CE0  C043  F044         	movff	??___flmul,??___flmul+1
  8343   002CE4  6A43               	clrf	??___flmul^0,c
  8344   002CE6  5043               	movf	??___flmul^0,w,c
  8345   002CE8  264E               	addwf	___flmul@prod^0,f,c
  8346   002CEA  5044               	movf	(??___flmul+1)^0,w,c
  8347   002CEC  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8348   002CEE  5045               	movf	(??___flmul+2)^0,w,c
  8349   002CF0  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8350   002CF2  5046               	movf	(??___flmul+3)^0,w,c
  8351   002CF4  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8352   002CF6  C048  F043         	movff	___flmul@grs,??___flmul
  8353   002CFA  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  8354   002CFE  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  8355   002D02  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  8356   002D06  0E19               	movlw	25
  8357   002D08  EF8B  F016         	goto	u3300
  8358   002D0C                     u3305:
  8359   002D0C  90D8               	bcf	status,0,c
  8360   002D0E  3246               	rrcf	(??___flmul+3)^0,f,c
  8361   002D10  3245               	rrcf	(??___flmul+2)^0,f,c
  8362   002D12  3244               	rrcf	(??___flmul+1)^0,f,c
  8363   002D14  3243               	rrcf	??___flmul^0,f,c
  8364   002D16                     u3300:
  8365   002D16  2EE8               	decfsz	wreg,f,c
  8366   002D18  EF86  F016         	goto	u3305
  8367   002D1C  5043               	movf	??___flmul^0,w,c
  8368   002D1E  264E               	addwf	___flmul@prod^0,f,c
  8369   002D20  5044               	movf	(??___flmul+1)^0,w,c
  8370   002D22  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8371   002D24  5045               	movf	(??___flmul+2)^0,w,c
  8372   002D26  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8373   002D28  5046               	movf	(??___flmul+3)^0,w,c
  8374   002D2A  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8375   002D2C  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8376   002D30  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8377   002D34  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8378   002D38  6A48               	clrf	___flmul@grs^0,c
  8379   002D3A  504C               	movf	___flmul@aexp^0,w,c
  8380   002D3C  C04D  F043         	movff	___flmul@bexp,??___flmul
  8381   002D40  6A44               	clrf	(??___flmul+1)^0,c
  8382   002D42  2643               	addwf	??___flmul^0,f,c
  8383   002D44  0E00               	movlw	0
  8384   002D46  2244               	addwfc	(??___flmul+1)^0,f,c
  8385   002D48  0E82               	movlw	130
  8386   002D4A  2443               	addwf	??___flmul^0,w,c
  8387   002D4C  6E52               	movwf	___flmul@temp^0,c
  8388   002D4E  0EFF               	movlw	255
  8389   002D50  2044               	addwfc	(??___flmul+1)^0,w,c
  8390   002D52  6E53               	movwf	(___flmul@temp+1)^0,c
  8391   002D54  EFC1  F016         	goto	l3386
  8392   002D58                     l3380:
  8393   002D58  90D8               	bcf	status,0,c
  8394   002D5A  364E               	rlcf	___flmul@prod^0,f,c
  8395   002D5C  364F               	rlcf	(___flmul@prod+1)^0,f,c
  8396   002D5E  3650               	rlcf	(___flmul@prod+2)^0,f,c
  8397   002D60  3651               	rlcf	(___flmul@prod+3)^0,f,c
  8398   002D62  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8399   002D64  EFB6  F016         	goto	u3311
  8400   002D68  EFB8  F016         	goto	u3310
  8401   002D6C                     u3311:
  8402   002D6C  EFB9  F016         	goto	l1144
  8403   002D70                     u3310:
  8404   002D70  804E               	bsf	___flmul@prod^0,0,c
  8405   002D72                     l1144:
  8406   002D72  90D8               	bcf	status,0,c
  8407   002D74  3648               	rlcf	___flmul@grs^0,f,c
  8408   002D76  3649               	rlcf	(___flmul@grs+1)^0,f,c
  8409   002D78  364A               	rlcf	(___flmul@grs+2)^0,f,c
  8410   002D7A  364B               	rlcf	(___flmul@grs+3)^0,f,c
  8411   002D7C  0652               	decf	___flmul@temp^0,f,c
  8412   002D7E  A0D8               	btfss	status,0,c
  8413   002D80  0653               	decf	(___flmul@temp+1)^0,f,c
  8414   002D82                     l3386:
  8415   002D82  AE50               	btfss	(___flmul@prod+2)^0,7,c
  8416   002D84  EFC6  F016         	goto	u3321
  8417   002D88  EFC8  F016         	goto	u3320
  8418   002D8C                     u3321:
  8419   002D8C  EFAC  F016         	goto	l3380
  8420   002D90                     u3320:
  8421   002D90  0E00               	movlw	0
  8422   002D92  6E4C               	movwf	___flmul@aexp^0,c
  8423   002D94  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8424   002D96  EFCF  F016         	goto	u3331
  8425   002D9A  EFD1  F016         	goto	u3330
  8426   002D9E                     u3331:
  8427   002D9E  EFF5  F016         	goto	l1146
  8428   002DA2                     u3330:
  8429   002DA2  0EFF               	movlw	255
  8430   002DA4  1448               	andwf	___flmul@grs^0,w,c
  8431   002DA6  6E43               	movwf	??___flmul^0,c
  8432   002DA8  0EFF               	movlw	255
  8433   002DAA  1449               	andwf	(___flmul@grs+1)^0,w,c
  8434   002DAC  6E44               	movwf	(??___flmul+1)^0,c
  8435   002DAE  0EFF               	movlw	255
  8436   002DB0  144A               	andwf	(___flmul@grs+2)^0,w,c
  8437   002DB2  6E45               	movwf	(??___flmul+2)^0,c
  8438   002DB4  0E7F               	movlw	127
  8439   002DB6  144B               	andwf	(___flmul@grs+3)^0,w,c
  8440   002DB8  6E46               	movwf	(??___flmul+3)^0,c
  8441   002DBA  5043               	movf	??___flmul^0,w,c
  8442   002DBC  1044               	iorwf	(??___flmul+1)^0,w,c
  8443   002DBE  1045               	iorwf	(??___flmul+2)^0,w,c
  8444   002DC0  1046               	iorwf	(??___flmul+3)^0,w,c
  8445   002DC2  B4D8               	btfsc	status,2,c
  8446   002DC4  EFE6  F016         	goto	u3341
  8447   002DC8  EFE8  F016         	goto	u3340
  8448   002DCC                     u3341:
  8449   002DCC  EFEC  F016         	goto	l1147
  8450   002DD0                     u3340:
  8451   002DD0                     l3394:
  8452   002DD0  0E01               	movlw	1
  8453   002DD2  6E4C               	movwf	___flmul@aexp^0,c
  8454   002DD4  EFF5  F016         	goto	l1146
  8455   002DD8                     l1147:
  8456   002DD8  A04E               	btfss	___flmul@prod^0,0,c
  8457   002DDA  EFF1  F016         	goto	u3351
  8458   002DDE  EFF3  F016         	goto	u3350
  8459   002DE2                     u3351:
  8460   002DE2  EFF5  F016         	goto	l1146
  8461   002DE6                     u3350:
  8462   002DE6  EFE8  F016         	goto	l3394
  8463   002DEA                     l1146:
  8464   002DEA  504C               	movf	___flmul@aexp^0,w,c
  8465   002DEC  B4D8               	btfsc	status,2,c
  8466   002DEE  EFFB  F016         	goto	u3361
  8467   002DF2  EFFD  F016         	goto	u3360
  8468   002DF6                     u3361:
  8469   002DF6  EF21  F017         	goto	l3406
  8470   002DFA                     u3360:
  8471   002DFA  0E01               	movlw	1
  8472   002DFC  264E               	addwf	___flmul@prod^0,f,c
  8473   002DFE  0E00               	movlw	0
  8474   002E00  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8475   002E02  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8476   002E04  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8477   002E06  A051               	btfss	(___flmul@prod+3)^0,0,c
  8478   002E08  EF08  F017         	goto	u3371
  8479   002E0C  EF0A  F017         	goto	u3370
  8480   002E10                     u3371:
  8481   002E10  EF21  F017         	goto	l3406
  8482   002E14                     u3370:
  8483   002E14  C04E  F043         	movff	___flmul@prod,??___flmul
  8484   002E18  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  8485   002E1C  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  8486   002E20  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  8487   002E24  3446               	rlcf	(??___flmul+3)^0,w,c
  8488   002E26  3246               	rrcf	(??___flmul+3)^0,f,c
  8489   002E28  3245               	rrcf	(??___flmul+2)^0,f,c
  8490   002E2A  3244               	rrcf	(??___flmul+1)^0,f,c
  8491   002E2C  3243               	rrcf	??___flmul^0,f,c
  8492   002E2E  C043  F04E         	movff	??___flmul,___flmul@prod
  8493   002E32  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  8494   002E36  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  8495   002E3A  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  8496   002E3E  4A52               	infsnz	___flmul@temp^0,f,c
  8497   002E40  2A53               	incf	(___flmul@temp+1)^0,f,c
  8498   002E42                     l3406:
  8499   002E42  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  8500   002E44  EF2C  F017         	goto	u3381
  8501   002E48  5053               	movf	(___flmul@temp+1)^0,w,c
  8502   002E4A  E108               	bnz	u3380
  8503   002E4C  2852               	incf	___flmul@temp^0,w,c
  8504   002E4E  A0D8               	btfss	status,0,c
  8505   002E50  EF2C  F017         	goto	u3381
  8506   002E54  EF2E  F017         	goto	u3380
  8507   002E58                     u3381:
  8508   002E58  EF38  F017         	goto	l3410
  8509   002E5C                     u3380:
  8510   002E5C  0E00               	movlw	0
  8511   002E5E  6E4E               	movwf	___flmul@prod^0,c
  8512   002E60  0E00               	movlw	0
  8513   002E62  6E4F               	movwf	(___flmul@prod+1)^0,c
  8514   002E64  0E80               	movlw	128
  8515   002E66  6E50               	movwf	(___flmul@prod+2)^0,c
  8516   002E68  0E7F               	movlw	127
  8517   002E6A  6E51               	movwf	(___flmul@prod+3)^0,c
  8518   002E6C  EF66  F017         	goto	l3422
  8519   002E70                     l3410:
  8520   002E70  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  8521   002E72  EF45  F017         	goto	u3390
  8522   002E76  5053               	movf	(___flmul@temp+1)^0,w,c
  8523   002E78  E106               	bnz	u3391
  8524   002E7A  0452               	decf	___flmul@temp^0,w,c
  8525   002E7C  B0D8               	btfsc	status,0,c
  8526   002E7E  EF43  F017         	goto	u3391
  8527   002E82  EF45  F017         	goto	u3390
  8528   002E86                     u3391:
  8529   002E86  EF51  F017         	goto	l1154
  8530   002E8A                     u3390:
  8531   002E8A  0E00               	movlw	0
  8532   002E8C  6E4E               	movwf	___flmul@prod^0,c
  8533   002E8E  0E00               	movlw	0
  8534   002E90  6E4F               	movwf	(___flmul@prod+1)^0,c
  8535   002E92  0E00               	movlw	0
  8536   002E94  6E50               	movwf	(___flmul@prod+2)^0,c
  8537   002E96  0E00               	movlw	0
  8538   002E98  6E51               	movwf	(___flmul@prod+3)^0,c
  8539   002E9A  0E00               	movlw	0
  8540   002E9C  6E47               	movwf	___flmul@sign^0,c
  8541   002E9E  EF66  F017         	goto	l3422
  8542   002EA2                     l1154:
  8543   002EA2  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  8544   002EA6  0EFF               	movlw	255
  8545   002EA8  164E               	andwf	___flmul@prod^0,f,c
  8546   002EAA  0EFF               	movlw	255
  8547   002EAC  164F               	andwf	(___flmul@prod+1)^0,f,c
  8548   002EAE  0E7F               	movlw	127
  8549   002EB0  1650               	andwf	(___flmul@prod+2)^0,f,c
  8550   002EB2  0E00               	movlw	0
  8551   002EB4  1651               	andwf	(___flmul@prod+3)^0,f,c
  8552   002EB6  A04D               	btfss	___flmul@bexp^0,0,c
  8553   002EB8  EF60  F017         	goto	u3401
  8554   002EBC  EF62  F017         	goto	u3400
  8555   002EC0                     u3401:
  8556   002EC0  EF63  F017         	goto	l3420
  8557   002EC4                     u3400:
  8558   002EC4  8E50               	bsf	(___flmul@prod+2)^0,7,c
  8559   002EC6                     l3420:
  8560   002EC6  90D8               	bcf	status,0,c
  8561   002EC8  304D               	rrcf	___flmul@bexp^0,w,c
  8562   002ECA  6E51               	movwf	(___flmul@prod+3)^0,c
  8563   002ECC                     l3422:
  8564   002ECC  5047               	movf	___flmul@sign^0,w,c
  8565   002ECE  1251               	iorwf	(___flmul@prod+3)^0,f,c
  8566   002ED0  C04E  F03B         	movff	___flmul@prod,?___flmul
  8567   002ED4  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  8568   002ED8  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  8569   002EDC  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  8570   002EE0                     l1141:
  8571   002EE0  0012               	return		;funcret
  8572   002EE2                     __end_of___flmul:
  8573                           	callstack 0
  8574                           
  8575 ;; *************** function ___fleq *****************
  8576 ;; Defined at:
  8577 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  ff1             4    0[COMRAM] unsigned char 
  8580 ;;  ff2             4    4[COMRAM] unsigned char 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;		None               void
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8592 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;Total ram usage:       12 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_custom_floatmodulo
  8602 ;;		_RGB_to_HSV
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text36
  8607   004474                     __ptext36:
  8608                           	callstack 0
  8609   004474                     ___fleq:
  8610                           	callstack 27
  8611   004474  0E00               	movlw	0
  8612   004476  1401               	andwf	___fleq@ff1^0,w,c
  8613   004478  6E09               	movwf	??___fleq^0,c
  8614   00447A  0E00               	movlw	0
  8615   00447C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8616   00447E  6E0A               	movwf	(??___fleq+1)^0,c
  8617   004480  0E80               	movlw	128
  8618   004482  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8619   004484  6E0B               	movwf	(??___fleq+2)^0,c
  8620   004486  0E7F               	movlw	127
  8621   004488  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8622   00448A  6E0C               	movwf	(??___fleq+3)^0,c
  8623   00448C  5009               	movf	??___fleq^0,w,c
  8624   00448E  100A               	iorwf	(??___fleq+1)^0,w,c
  8625   004490  100B               	iorwf	(??___fleq+2)^0,w,c
  8626   004492  100C               	iorwf	(??___fleq+3)^0,w,c
  8627   004494  A4D8               	btfss	status,2,c
  8628   004496  EF4F  F022         	goto	u3411
  8629   00449A  EF51  F022         	goto	u3410
  8630   00449E                     u3411:
  8631   00449E  EF59  F022         	goto	l3438
  8632   0044A2                     u3410:
  8633   0044A2  0E00               	movlw	0
  8634   0044A4  6E01               	movwf	___fleq@ff1^0,c
  8635   0044A6  0E00               	movlw	0
  8636   0044A8  6E02               	movwf	(___fleq@ff1+1)^0,c
  8637   0044AA  0E00               	movlw	0
  8638   0044AC  6E03               	movwf	(___fleq@ff1+2)^0,c
  8639   0044AE  0E00               	movlw	0
  8640   0044B0  6E04               	movwf	(___fleq@ff1+3)^0,c
  8641   0044B2                     l3438:
  8642   0044B2  0E00               	movlw	0
  8643   0044B4  1405               	andwf	___fleq@ff2^0,w,c
  8644   0044B6  6E09               	movwf	??___fleq^0,c
  8645   0044B8  0E00               	movlw	0
  8646   0044BA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8647   0044BC  6E0A               	movwf	(??___fleq+1)^0,c
  8648   0044BE  0E80               	movlw	128
  8649   0044C0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8650   0044C2  6E0B               	movwf	(??___fleq+2)^0,c
  8651   0044C4  0E7F               	movlw	127
  8652   0044C6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8653   0044C8  6E0C               	movwf	(??___fleq+3)^0,c
  8654   0044CA  5009               	movf	??___fleq^0,w,c
  8655   0044CC  100A               	iorwf	(??___fleq+1)^0,w,c
  8656   0044CE  100B               	iorwf	(??___fleq+2)^0,w,c
  8657   0044D0  100C               	iorwf	(??___fleq+3)^0,w,c
  8658   0044D2  A4D8               	btfss	status,2,c
  8659   0044D4  EF6E  F022         	goto	u3421
  8660   0044D8  EF70  F022         	goto	u3420
  8661   0044DC                     u3421:
  8662   0044DC  EF78  F022         	goto	l3442
  8663   0044E0                     u3420:
  8664   0044E0  0E00               	movlw	0
  8665   0044E2  6E05               	movwf	___fleq@ff2^0,c
  8666   0044E4  0E00               	movlw	0
  8667   0044E6  6E06               	movwf	(___fleq@ff2+1)^0,c
  8668   0044E8  0E00               	movlw	0
  8669   0044EA  6E07               	movwf	(___fleq@ff2+2)^0,c
  8670   0044EC  0E00               	movlw	0
  8671   0044EE  6E08               	movwf	(___fleq@ff2+3)^0,c
  8672   0044F0                     l3442:
  8673   0044F0  5005               	movf	___fleq@ff2^0,w,c
  8674   0044F2  1801               	xorwf	___fleq@ff1^0,w,c
  8675   0044F4  E10F               	bnz	u3430
  8676   0044F6  5006               	movf	(___fleq@ff2+1)^0,w,c
  8677   0044F8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8678   0044FA  E10C               	bnz	u3430
  8679   0044FC  5007               	movf	(___fleq@ff2+2)^0,w,c
  8680   0044FE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8681   004500  E109               	bnz	u3430
  8682   004502  5008               	movf	(___fleq@ff2+3)^0,w,c
  8683   004504  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8684   004506  B4D8               	btfsc	status,2,c
  8685   004508  EF88  F022         	goto	u3431
  8686   00450C  EF8A  F022         	goto	u3430
  8687   004510                     u3431:
  8688   004510  EF8D  F022         	goto	l3446
  8689   004514                     u3430:
  8690   004514  90D8               	bcf	status,0,c
  8691   004516  EF8E  F022         	goto	l782
  8692   00451A                     l3446:
  8693   00451A  80D8               	bsf	status,0,c
  8694   00451C                     l782:
  8695   00451C  0012               	return		;funcret
  8696   00451E                     __end_of___fleq:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function ___fldiv *****************
  8700 ;; Defined at:
  8701 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  b               4   33[COMRAM] unsigned char 
  8704 ;;  a               4   37[COMRAM] unsigned char 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  grs             4   52[COMRAM] unsigned long 
  8707 ;;  rem             4   45[COMRAM] unsigned long 
  8708 ;;  new_exp         2   50[COMRAM] short 
  8709 ;;  aexp            1   57[COMRAM] unsigned char 
  8710 ;;  bexp            1   56[COMRAM] unsigned char 
  8711 ;;  sign            1   49[COMRAM] unsigned char 
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  4   33[COMRAM] unsigned char 
  8714 ;; Registers used:
  8715 ;;		wreg, status,2, status,0
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8721 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;Total ram usage:       25 bytes
  8726 ;; Hardware stack levels used: 1
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_custom_floatmodulo
  8731 ;;		_RGB_to_HSV
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text37
  8736   002EE2                     __ptext37:
  8737                           	callstack 0
  8738   002EE2                     ___fldiv:
  8739                           	callstack 27
  8740   002EE2  5025               	movf	(___fldiv@b+3)^0,w,c
  8741   002EE4  0B80               	andlw	128
  8742   002EE6  6E32               	movwf	___fldiv@sign^0,c
  8743   002EE8  5025               	movf	(___fldiv@b+3)^0,w,c
  8744   002EEA  2425               	addwf	(___fldiv@b+3)^0,w,c
  8745   002EEC  6E39               	movwf	___fldiv@bexp^0,c
  8746   002EEE  AE24               	btfss	(___fldiv@b+2)^0,7,c
  8747   002EF0  EF7C  F017         	goto	u2991
  8748   002EF4  EF7E  F017         	goto	u2990
  8749   002EF8                     u2991:
  8750   002EF8  EF7F  F017         	goto	l3166
  8751   002EFC                     u2990:
  8752   002EFC  8039               	bsf	___fldiv@bexp^0,0,c
  8753   002EFE                     l3166:
  8754   002EFE  5039               	movf	___fldiv@bexp^0,w,c
  8755   002F00  B4D8               	btfsc	status,2,c
  8756   002F02  EF85  F017         	goto	u3001
  8757   002F06  EF87  F017         	goto	u3000
  8758   002F0A                     u3001:
  8759   002F0A  EF9C  F017         	goto	l3176
  8760   002F0E                     u3000:
  8761   002F0E  2839               	incf	___fldiv@bexp^0,w,c
  8762   002F10  A4D8               	btfss	status,2,c
  8763   002F12  EF8D  F017         	goto	u3011
  8764   002F16  EF8F  F017         	goto	u3010
  8765   002F1A                     u3011:
  8766   002F1A  EF97  F017         	goto	l3172
  8767   002F1E                     u3010:
  8768   002F1E  0E00               	movlw	0
  8769   002F20  6E22               	movwf	___fldiv@b^0,c
  8770   002F22  0E00               	movlw	0
  8771   002F24  6E23               	movwf	(___fldiv@b+1)^0,c
  8772   002F26  0E00               	movlw	0
  8773   002F28  6E24               	movwf	(___fldiv@b+2)^0,c
  8774   002F2A  0E00               	movlw	0
  8775   002F2C  6E25               	movwf	(___fldiv@b+3)^0,c
  8776   002F2E                     l3172:
  8777   002F2E  8E24               	bsf	(___fldiv@b+2)^0,7,c
  8778   002F30  0E00               	movlw	0
  8779   002F32  6E25               	movwf	(___fldiv@b+3)^0,c
  8780   002F34  EFA4  F017         	goto	l3178
  8781   002F38                     l3176:
  8782   002F38  0E00               	movlw	0
  8783   002F3A  6E22               	movwf	___fldiv@b^0,c
  8784   002F3C  0E00               	movlw	0
  8785   002F3E  6E23               	movwf	(___fldiv@b+1)^0,c
  8786   002F40  0E00               	movlw	0
  8787   002F42  6E24               	movwf	(___fldiv@b+2)^0,c
  8788   002F44  0E00               	movlw	0
  8789   002F46  6E25               	movwf	(___fldiv@b+3)^0,c
  8790   002F48                     l3178:
  8791   002F48  5029               	movf	(___fldiv@a+3)^0,w,c
  8792   002F4A  0B80               	andlw	128
  8793   002F4C  1A32               	xorwf	___fldiv@sign^0,f,c
  8794   002F4E  5029               	movf	(___fldiv@a+3)^0,w,c
  8795   002F50  2429               	addwf	(___fldiv@a+3)^0,w,c
  8796   002F52  6E3A               	movwf	___fldiv@aexp^0,c
  8797   002F54  AE28               	btfss	(___fldiv@a+2)^0,7,c
  8798   002F56  EFAF  F017         	goto	u3021
  8799   002F5A  EFB1  F017         	goto	u3020
  8800   002F5E                     u3021:
  8801   002F5E  EFB2  F017         	goto	l3186
  8802   002F62                     u3020:
  8803   002F62  803A               	bsf	___fldiv@aexp^0,0,c
  8804   002F64                     l3186:
  8805   002F64  503A               	movf	___fldiv@aexp^0,w,c
  8806   002F66  B4D8               	btfsc	status,2,c
  8807   002F68  EFB8  F017         	goto	u3031
  8808   002F6C  EFBA  F017         	goto	u3030
  8809   002F70                     u3031:
  8810   002F70  EFCF  F017         	goto	l3196
  8811   002F74                     u3030:
  8812   002F74  283A               	incf	___fldiv@aexp^0,w,c
  8813   002F76  A4D8               	btfss	status,2,c
  8814   002F78  EFC0  F017         	goto	u3041
  8815   002F7C  EFC2  F017         	goto	u3040
  8816   002F80                     u3041:
  8817   002F80  EFCA  F017         	goto	l3192
  8818   002F84                     u3040:
  8819   002F84  0E00               	movlw	0
  8820   002F86  6E26               	movwf	___fldiv@a^0,c
  8821   002F88  0E00               	movlw	0
  8822   002F8A  6E27               	movwf	(___fldiv@a+1)^0,c
  8823   002F8C  0E00               	movlw	0
  8824   002F8E  6E28               	movwf	(___fldiv@a+2)^0,c
  8825   002F90  0E00               	movlw	0
  8826   002F92  6E29               	movwf	(___fldiv@a+3)^0,c
  8827   002F94                     l3192:
  8828   002F94  8E28               	bsf	(___fldiv@a+2)^0,7,c
  8829   002F96  0E00               	movlw	0
  8830   002F98  6E29               	movwf	(___fldiv@a+3)^0,c
  8831   002F9A  EFD7  F017         	goto	l3198
  8832   002F9E                     l3196:
  8833   002F9E  0E00               	movlw	0
  8834   002FA0  6E26               	movwf	___fldiv@a^0,c
  8835   002FA2  0E00               	movlw	0
  8836   002FA4  6E27               	movwf	(___fldiv@a+1)^0,c
  8837   002FA6  0E00               	movlw	0
  8838   002FA8  6E28               	movwf	(___fldiv@a+2)^0,c
  8839   002FAA  0E00               	movlw	0
  8840   002FAC  6E29               	movwf	(___fldiv@a+3)^0,c
  8841   002FAE                     l3198:
  8842   002FAE  5026               	movf	___fldiv@a^0,w,c
  8843   002FB0  1027               	iorwf	(___fldiv@a+1)^0,w,c
  8844   002FB2  1028               	iorwf	(___fldiv@a+2)^0,w,c
  8845   002FB4  1029               	iorwf	(___fldiv@a+3)^0,w,c
  8846   002FB6  A4D8               	btfss	status,2,c
  8847   002FB8  EFE0  F017         	goto	u3051
  8848   002FBC  EFE2  F017         	goto	u3050
  8849   002FC0                     u3051:
  8850   002FC0  EFFA  F017         	goto	l3210
  8851   002FC4                     u3050:
  8852   002FC4  0E00               	movlw	0
  8853   002FC6  6E22               	movwf	___fldiv@b^0,c
  8854   002FC8  0E00               	movlw	0
  8855   002FCA  6E23               	movwf	(___fldiv@b+1)^0,c
  8856   002FCC  0E00               	movlw	0
  8857   002FCE  6E24               	movwf	(___fldiv@b+2)^0,c
  8858   002FD0  0E00               	movlw	0
  8859   002FD2  6E25               	movwf	(___fldiv@b+3)^0,c
  8860   002FD4  0E80               	movlw	128
  8861   002FD6  1224               	iorwf	(___fldiv@b+2)^0,f,c
  8862   002FD8  0E7F               	movlw	127
  8863   002FDA  1225               	iorwf	(___fldiv@b+3)^0,f,c
  8864   002FDC                     l3204:
  8865   002FDC  5032               	movf	___fldiv@sign^0,w,c
  8866   002FDE  1225               	iorwf	(___fldiv@b+3)^0,f,c
  8867   002FE0  C022  F022         	movff	___fldiv@b,?___fldiv
  8868   002FE4  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  8869   002FE8  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  8870   002FEC  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  8871   002FF0  EF3D  F019         	goto	l1105
  8872   002FF4                     l3210:
  8873   002FF4  5039               	movf	___fldiv@bexp^0,w,c
  8874   002FF6  A4D8               	btfss	status,2,c
  8875   002FF8  EF00  F018         	goto	u3061
  8876   002FFC  EF02  F018         	goto	u3060
  8877   003000                     u3061:
  8878   003000  EF0C  F018         	goto	l3218
  8879   003004                     u3060:
  8880   003004  0E00               	movlw	0
  8881   003006  6E22               	movwf	?___fldiv^0,c
  8882   003008  0E00               	movlw	0
  8883   00300A  6E23               	movwf	(?___fldiv+1)^0,c
  8884   00300C  0E00               	movlw	0
  8885   00300E  6E24               	movwf	(?___fldiv+2)^0,c
  8886   003010  0E00               	movlw	0
  8887   003012  6E25               	movwf	(?___fldiv+3)^0,c
  8888   003014  EF3D  F019         	goto	l1105
  8889   003018                     l3218:
  8890   003018  503A               	movf	___fldiv@aexp^0,w,c
  8891   00301A  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  8892   00301E  6A2B               	clrf	(??___fldiv+1)^0,c
  8893   003020  5E2A               	subwf	??___fldiv^0,f,c
  8894   003022  0E00               	movlw	0
  8895   003024  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  8896   003026  0E7F               	movlw	127
  8897   003028  242A               	addwf	??___fldiv^0,w,c
  8898   00302A  6E33               	movwf	___fldiv@new_exp^0,c
  8899   00302C  0E00               	movlw	0
  8900   00302E  202B               	addwfc	(??___fldiv+1)^0,w,c
  8901   003030  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  8902   003032  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  8903   003036  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  8904   00303A  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  8905   00303E  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  8906   003042  0E00               	movlw	0
  8907   003044  6E22               	movwf	___fldiv@b^0,c
  8908   003046  0E00               	movlw	0
  8909   003048  6E23               	movwf	(___fldiv@b+1)^0,c
  8910   00304A  0E00               	movlw	0
  8911   00304C  6E24               	movwf	(___fldiv@b+2)^0,c
  8912   00304E  0E00               	movlw	0
  8913   003050  6E25               	movwf	(___fldiv@b+3)^0,c
  8914   003052  0E00               	movlw	0
  8915   003054  6E35               	movwf	___fldiv@grs^0,c
  8916   003056  0E00               	movlw	0
  8917   003058  6E36               	movwf	(___fldiv@grs+1)^0,c
  8918   00305A  0E00               	movlw	0
  8919   00305C  6E37               	movwf	(___fldiv@grs+2)^0,c
  8920   00305E  0E00               	movlw	0
  8921   003060  6E38               	movwf	(___fldiv@grs+3)^0,c
  8922   003062  0E00               	movlw	0
  8923   003064  6E3A               	movwf	___fldiv@aexp^0,c
  8924   003066  EF6D  F018         	goto	l1107
  8925   00306A                     l3228:
  8926   00306A  503A               	movf	___fldiv@aexp^0,w,c
  8927   00306C  B4D8               	btfsc	status,2,c
  8928   00306E  EF3B  F018         	goto	u3071
  8929   003072  EF3D  F018         	goto	u3070
  8930   003076                     u3071:
  8931   003076  EF54  F018         	goto	l3236
  8932   00307A                     u3070:
  8933   00307A  90D8               	bcf	status,0,c
  8934   00307C  362E               	rlcf	___fldiv@rem^0,f,c
  8935   00307E  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  8936   003080  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  8937   003082  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  8938   003084  90D8               	bcf	status,0,c
  8939   003086  3622               	rlcf	___fldiv@b^0,f,c
  8940   003088  3623               	rlcf	(___fldiv@b+1)^0,f,c
  8941   00308A  3624               	rlcf	(___fldiv@b+2)^0,f,c
  8942   00308C  3625               	rlcf	(___fldiv@b+3)^0,f,c
  8943   00308E  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  8944   003090  EF4C  F018         	goto	u3081
  8945   003094  EF4E  F018         	goto	u3080
  8946   003098                     u3081:
  8947   003098  EF4F  F018         	goto	l1110
  8948   00309C                     u3080:
  8949   00309C  8022               	bsf	___fldiv@b^0,0,c
  8950   00309E                     l1110:
  8951   00309E  90D8               	bcf	status,0,c
  8952   0030A0  3635               	rlcf	___fldiv@grs^0,f,c
  8953   0030A2  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  8954   0030A4  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  8955   0030A6  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  8956   0030A8                     l3236:
  8957   0030A8  5026               	movf	___fldiv@a^0,w,c
  8958   0030AA  5C2E               	subwf	___fldiv@rem^0,w,c
  8959   0030AC  5027               	movf	(___fldiv@a+1)^0,w,c
  8960   0030AE  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  8961   0030B0  5028               	movf	(___fldiv@a+2)^0,w,c
  8962   0030B2  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  8963   0030B4  5029               	movf	(___fldiv@a+3)^0,w,c
  8964   0030B6  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  8965   0030B8  A0D8               	btfss	status,0,c
  8966   0030BA  EF61  F018         	goto	u3091
  8967   0030BE  EF63  F018         	goto	u3090
  8968   0030C2                     u3091:
  8969   0030C2  EF6C  F018         	goto	l3242
  8970   0030C6                     u3090:
  8971   0030C6  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  8972   0030C8  5026               	movf	___fldiv@a^0,w,c
  8973   0030CA  5E2E               	subwf	___fldiv@rem^0,f,c
  8974   0030CC  5027               	movf	(___fldiv@a+1)^0,w,c
  8975   0030CE  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  8976   0030D0  5028               	movf	(___fldiv@a+2)^0,w,c
  8977   0030D2  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  8978   0030D4  5029               	movf	(___fldiv@a+3)^0,w,c
  8979   0030D6  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  8980   0030D8                     l3242:
  8981   0030D8  2A3A               	incf	___fldiv@aexp^0,f,c
  8982   0030DA                     l1107:
  8983   0030DA  0E19               	movlw	25
  8984   0030DC  643A               	cpfsgt	___fldiv@aexp^0,c
  8985   0030DE  EF73  F018         	goto	u3101
  8986   0030E2  EF75  F018         	goto	u3100
  8987   0030E6                     u3101:
  8988   0030E6  EF35  F018         	goto	l3228
  8989   0030EA                     u3100:
  8990   0030EA  502E               	movf	___fldiv@rem^0,w,c
  8991   0030EC  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  8992   0030EE  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  8993   0030F0  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  8994   0030F2  B4D8               	btfsc	status,2,c
  8995   0030F4  EF7E  F018         	goto	u3111
  8996   0030F8  EF80  F018         	goto	u3110
  8997   0030FC                     u3111:
  8998   0030FC  EF98  F018         	goto	l3254
  8999   003100                     u3110:
  9000   003100  8035               	bsf	___fldiv@grs^0,0,c
  9001   003102  EF98  F018         	goto	l3254
  9002   003106                     l3248:
  9003   003106  90D8               	bcf	status,0,c
  9004   003108  3622               	rlcf	___fldiv@b^0,f,c
  9005   00310A  3623               	rlcf	(___fldiv@b+1)^0,f,c
  9006   00310C  3624               	rlcf	(___fldiv@b+2)^0,f,c
  9007   00310E  3625               	rlcf	(___fldiv@b+3)^0,f,c
  9008   003110  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9009   003112  EF8D  F018         	goto	u3121
  9010   003116  EF8F  F018         	goto	u3120
  9011   00311A                     u3121:
  9012   00311A  EF90  F018         	goto	l1116
  9013   00311E                     u3120:
  9014   00311E  8022               	bsf	___fldiv@b^0,0,c
  9015   003120                     l1116:
  9016   003120  90D8               	bcf	status,0,c
  9017   003122  3635               	rlcf	___fldiv@grs^0,f,c
  9018   003124  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  9019   003126  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  9020   003128  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  9021   00312A  0633               	decf	___fldiv@new_exp^0,f,c
  9022   00312C  A0D8               	btfss	status,0,c
  9023   00312E  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  9024   003130                     l3254:
  9025   003130  AE24               	btfss	(___fldiv@b+2)^0,7,c
  9026   003132  EF9D  F018         	goto	u3131
  9027   003136  EF9F  F018         	goto	u3130
  9028   00313A                     u3131:
  9029   00313A  EF83  F018         	goto	l3248
  9030   00313E                     u3130:
  9031   00313E  0E00               	movlw	0
  9032   003140  6E3A               	movwf	___fldiv@aexp^0,c
  9033   003142  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9034   003144  EFA6  F018         	goto	u3141
  9035   003148  EFA8  F018         	goto	u3140
  9036   00314C                     u3141:
  9037   00314C  EFCC  F018         	goto	l1118
  9038   003150                     u3140:
  9039   003150  0EFF               	movlw	255
  9040   003152  1435               	andwf	___fldiv@grs^0,w,c
  9041   003154  6E2A               	movwf	??___fldiv^0,c
  9042   003156  0EFF               	movlw	255
  9043   003158  1436               	andwf	(___fldiv@grs+1)^0,w,c
  9044   00315A  6E2B               	movwf	(??___fldiv+1)^0,c
  9045   00315C  0EFF               	movlw	255
  9046   00315E  1437               	andwf	(___fldiv@grs+2)^0,w,c
  9047   003160  6E2C               	movwf	(??___fldiv+2)^0,c
  9048   003162  0E7F               	movlw	127
  9049   003164  1438               	andwf	(___fldiv@grs+3)^0,w,c
  9050   003166  6E2D               	movwf	(??___fldiv+3)^0,c
  9051   003168  502A               	movf	??___fldiv^0,w,c
  9052   00316A  102B               	iorwf	(??___fldiv+1)^0,w,c
  9053   00316C  102C               	iorwf	(??___fldiv+2)^0,w,c
  9054   00316E  102D               	iorwf	(??___fldiv+3)^0,w,c
  9055   003170  B4D8               	btfsc	status,2,c
  9056   003172  EFBD  F018         	goto	u3151
  9057   003176  EFBF  F018         	goto	u3150
  9058   00317A                     u3151:
  9059   00317A  EFC3  F018         	goto	l1119
  9060   00317E                     u3150:
  9061   00317E                     l3262:
  9062   00317E  0E01               	movlw	1
  9063   003180  6E3A               	movwf	___fldiv@aexp^0,c
  9064   003182  EFCC  F018         	goto	l1118
  9065   003186                     l1119:
  9066   003186  A022               	btfss	___fldiv@b^0,0,c
  9067   003188  EFC8  F018         	goto	u3161
  9068   00318C  EFCA  F018         	goto	u3160
  9069   003190                     u3161:
  9070   003190  EFCC  F018         	goto	l1118
  9071   003194                     u3160:
  9072   003194  EFBF  F018         	goto	l3262
  9073   003198                     l1118:
  9074   003198  503A               	movf	___fldiv@aexp^0,w,c
  9075   00319A  B4D8               	btfsc	status,2,c
  9076   00319C  EFD2  F018         	goto	u3171
  9077   0031A0  EFD4  F018         	goto	u3170
  9078   0031A4                     u3171:
  9079   0031A4  EFF8  F018         	goto	l3274
  9080   0031A8                     u3170:
  9081   0031A8  0E01               	movlw	1
  9082   0031AA  2622               	addwf	___fldiv@b^0,f,c
  9083   0031AC  0E00               	movlw	0
  9084   0031AE  2223               	addwfc	(___fldiv@b+1)^0,f,c
  9085   0031B0  2224               	addwfc	(___fldiv@b+2)^0,f,c
  9086   0031B2  2225               	addwfc	(___fldiv@b+3)^0,f,c
  9087   0031B4  A025               	btfss	(___fldiv@b+3)^0,0,c
  9088   0031B6  EFDF  F018         	goto	u3181
  9089   0031BA  EFE1  F018         	goto	u3180
  9090   0031BE                     u3181:
  9091   0031BE  EFF8  F018         	goto	l3274
  9092   0031C2                     u3180:
  9093   0031C2  C022  F02A         	movff	___fldiv@b,??___fldiv
  9094   0031C6  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  9095   0031CA  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  9096   0031CE  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  9097   0031D2  342D               	rlcf	(??___fldiv+3)^0,w,c
  9098   0031D4  322D               	rrcf	(??___fldiv+3)^0,f,c
  9099   0031D6  322C               	rrcf	(??___fldiv+2)^0,f,c
  9100   0031D8  322B               	rrcf	(??___fldiv+1)^0,f,c
  9101   0031DA  322A               	rrcf	??___fldiv^0,f,c
  9102   0031DC  C02A  F022         	movff	??___fldiv,___fldiv@b
  9103   0031E0  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  9104   0031E4  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  9105   0031E8  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  9106   0031EC  4A33               	infsnz	___fldiv@new_exp^0,f,c
  9107   0031EE  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  9108   0031F0                     l3274:
  9109   0031F0  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9110   0031F2  EF03  F019         	goto	u3191
  9111   0031F6  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9112   0031F8  E108               	bnz	u3190
  9113   0031FA  2833               	incf	___fldiv@new_exp^0,w,c
  9114   0031FC  A0D8               	btfss	status,0,c
  9115   0031FE  EF03  F019         	goto	u3191
  9116   003202  EF05  F019         	goto	u3190
  9117   003206                     u3191:
  9118   003206  EF10  F019         	goto	l3278
  9119   00320A                     u3190:
  9120   00320A  0E00               	movlw	0
  9121   00320C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9122   00320E  6833               	setf	___fldiv@new_exp^0,c
  9123   003210  0E00               	movlw	0
  9124   003212  6E22               	movwf	___fldiv@b^0,c
  9125   003214  0E00               	movlw	0
  9126   003216  6E23               	movwf	(___fldiv@b+1)^0,c
  9127   003218  0E00               	movlw	0
  9128   00321A  6E24               	movwf	(___fldiv@b+2)^0,c
  9129   00321C  0E00               	movlw	0
  9130   00321E  6E25               	movwf	(___fldiv@b+3)^0,c
  9131   003220                     l3278:
  9132   003220  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9133   003222  EF1D  F019         	goto	u3200
  9134   003226  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9135   003228  E106               	bnz	u3201
  9136   00322A  0433               	decf	___fldiv@new_exp^0,w,c
  9137   00322C  B0D8               	btfsc	status,0,c
  9138   00322E  EF1B  F019         	goto	u3201
  9139   003232  EF1D  F019         	goto	u3200
  9140   003236                     u3201:
  9141   003236  EF2B  F019         	goto	l3282
  9142   00323A                     u3200:
  9143   00323A  0E00               	movlw	0
  9144   00323C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9145   00323E  0E00               	movlw	0
  9146   003240  6E33               	movwf	___fldiv@new_exp^0,c
  9147   003242  0E00               	movlw	0
  9148   003244  6E22               	movwf	___fldiv@b^0,c
  9149   003246  0E00               	movlw	0
  9150   003248  6E23               	movwf	(___fldiv@b+1)^0,c
  9151   00324A  0E00               	movlw	0
  9152   00324C  6E24               	movwf	(___fldiv@b+2)^0,c
  9153   00324E  0E00               	movlw	0
  9154   003250  6E25               	movwf	(___fldiv@b+3)^0,c
  9155   003252  0E00               	movlw	0
  9156   003254  6E32               	movwf	___fldiv@sign^0,c
  9157   003256                     l3282:
  9158   003256  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  9159   00325A  A039               	btfss	___fldiv@bexp^0,0,c
  9160   00325C  EF32  F019         	goto	u3211
  9161   003260  EF34  F019         	goto	u3210
  9162   003264                     u3211:
  9163   003264  EF37  F019         	goto	l3288
  9164   003268                     u3210:
  9165   003268  8E24               	bsf	(___fldiv@b+2)^0,7,c
  9166   00326A  EF38  F019         	goto	l3290
  9167   00326E                     l3288:
  9168   00326E  9E24               	bcf	(___fldiv@b+2)^0,7,c
  9169   003270                     l3290:
  9170   003270  90D8               	bcf	status,0,c
  9171   003272  3039               	rrcf	___fldiv@bexp^0,w,c
  9172   003274  6E25               	movwf	(___fldiv@b+3)^0,c
  9173   003276  EFEE  F017         	goto	l3204
  9174   00327A                     l1105:
  9175   00327A  0012               	return		;funcret
  9176   00327C                     __end_of___fldiv:
  9177                           	callstack 0
  9178                           
  9179 ;; *************** function ___flge *****************
  9180 ;; Defined at:
  9181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  ff1             4    0[COMRAM] unsigned char 
  9184 ;;  ff2             4    4[COMRAM] unsigned char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;		None               void
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9196 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;Total ram usage:       12 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_RGB_to_HSV
  9206 ;;		_color_cardCheck
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text38
  9211   004140                     __ptext38:
  9212                           	callstack 0
  9213   004140                     ___flge:
  9214                           	callstack 29
  9215   004140  0E00               	movlw	0
  9216   004142  1401               	andwf	___flge@ff1^0,w,c
  9217   004144  6E09               	movwf	??___flge^0,c
  9218   004146  0E00               	movlw	0
  9219   004148  1402               	andwf	(___flge@ff1+1)^0,w,c
  9220   00414A  6E0A               	movwf	(??___flge+1)^0,c
  9221   00414C  0E80               	movlw	128
  9222   00414E  1403               	andwf	(___flge@ff1+2)^0,w,c
  9223   004150  6E0B               	movwf	(??___flge+2)^0,c
  9224   004152  0E7F               	movlw	127
  9225   004154  1404               	andwf	(___flge@ff1+3)^0,w,c
  9226   004156  6E0C               	movwf	(??___flge+3)^0,c
  9227   004158  5009               	movf	??___flge^0,w,c
  9228   00415A  100A               	iorwf	(??___flge+1)^0,w,c
  9229   00415C  100B               	iorwf	(??___flge+2)^0,w,c
  9230   00415E  100C               	iorwf	(??___flge+3)^0,w,c
  9231   004160  A4D8               	btfss	status,2,c
  9232   004162  EFB5  F020         	goto	u3741
  9233   004166  EFB7  F020         	goto	u3740
  9234   00416A                     u3741:
  9235   00416A  EFBF  F020         	goto	l3646
  9236   00416E                     u3740:
  9237   00416E  0E00               	movlw	0
  9238   004170  6E01               	movwf	___flge@ff1^0,c
  9239   004172  0E00               	movlw	0
  9240   004174  6E02               	movwf	(___flge@ff1+1)^0,c
  9241   004176  0E00               	movlw	0
  9242   004178  6E03               	movwf	(___flge@ff1+2)^0,c
  9243   00417A  0E00               	movlw	0
  9244   00417C  6E04               	movwf	(___flge@ff1+3)^0,c
  9245   00417E                     l3646:
  9246   00417E  0E00               	movlw	0
  9247   004180  1405               	andwf	___flge@ff2^0,w,c
  9248   004182  6E09               	movwf	??___flge^0,c
  9249   004184  0E00               	movlw	0
  9250   004186  1406               	andwf	(___flge@ff2+1)^0,w,c
  9251   004188  6E0A               	movwf	(??___flge+1)^0,c
  9252   00418A  0E80               	movlw	128
  9253   00418C  1407               	andwf	(___flge@ff2+2)^0,w,c
  9254   00418E  6E0B               	movwf	(??___flge+2)^0,c
  9255   004190  0E7F               	movlw	127
  9256   004192  1408               	andwf	(___flge@ff2+3)^0,w,c
  9257   004194  6E0C               	movwf	(??___flge+3)^0,c
  9258   004196  5009               	movf	??___flge^0,w,c
  9259   004198  100A               	iorwf	(??___flge+1)^0,w,c
  9260   00419A  100B               	iorwf	(??___flge+2)^0,w,c
  9261   00419C  100C               	iorwf	(??___flge+3)^0,w,c
  9262   00419E  A4D8               	btfss	status,2,c
  9263   0041A0  EFD4  F020         	goto	u3751
  9264   0041A4  EFD6  F020         	goto	u3750
  9265   0041A8                     u3751:
  9266   0041A8  EFDE  F020         	goto	l3650
  9267   0041AC                     u3750:
  9268   0041AC  0E00               	movlw	0
  9269   0041AE  6E05               	movwf	___flge@ff2^0,c
  9270   0041B0  0E00               	movlw	0
  9271   0041B2  6E06               	movwf	(___flge@ff2+1)^0,c
  9272   0041B4  0E00               	movlw	0
  9273   0041B6  6E07               	movwf	(___flge@ff2+2)^0,c
  9274   0041B8  0E00               	movlw	0
  9275   0041BA  6E08               	movwf	(___flge@ff2+3)^0,c
  9276   0041BC                     l3650:
  9277   0041BC  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9278   0041BE  EFE3  F020         	goto	u3761
  9279   0041C2  EFE5  F020         	goto	u3760
  9280   0041C6                     u3761:
  9281   0041C6  EFEE  F020         	goto	l3654
  9282   0041CA                     u3760:
  9283   0041CA  6C01               	negf	___flge@ff1^0,c
  9284   0041CC  1E02               	comf	(___flge@ff1+1)^0,f,c
  9285   0041CE  B0D8               	btfsc	status,0,c
  9286   0041D0  2A02               	incf	(___flge@ff1+1)^0,f,c
  9287   0041D2  1E03               	comf	(___flge@ff1+2)^0,f,c
  9288   0041D4  B0D8               	btfsc	status,0,c
  9289   0041D6  2A03               	incf	(___flge@ff1+2)^0,f,c
  9290   0041D8  0E80               	movlw	128
  9291   0041DA  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9292   0041DC                     l3654:
  9293   0041DC  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9294   0041DE  EFF3  F020         	goto	u3771
  9295   0041E2  EFF5  F020         	goto	u3770
  9296   0041E6                     u3771:
  9297   0041E6  EFFE  F020         	goto	l788
  9298   0041EA                     u3770:
  9299   0041EA  6C05               	negf	___flge@ff2^0,c
  9300   0041EC  1E06               	comf	(___flge@ff2+1)^0,f,c
  9301   0041EE  B0D8               	btfsc	status,0,c
  9302   0041F0  2A06               	incf	(___flge@ff2+1)^0,f,c
  9303   0041F2  1E07               	comf	(___flge@ff2+2)^0,f,c
  9304   0041F4  B0D8               	btfsc	status,0,c
  9305   0041F6  2A07               	incf	(___flge@ff2+2)^0,f,c
  9306   0041F8  0E80               	movlw	128
  9307   0041FA  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9308   0041FC                     l788:
  9309   0041FC  0E00               	movlw	0
  9310   0041FE  1A01               	xorwf	___flge@ff1^0,f,c
  9311   004200  0E00               	movlw	0
  9312   004202  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9313   004204  0E00               	movlw	0
  9314   004206  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9315   004208  0E80               	movlw	128
  9316   00420A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  9317   00420C  0E00               	movlw	0
  9318   00420E  1A05               	xorwf	___flge@ff2^0,f,c
  9319   004210  0E00               	movlw	0
  9320   004212  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  9321   004214  0E00               	movlw	0
  9322   004216  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  9323   004218  0E80               	movlw	128
  9324   00421A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  9325   00421C  5005               	movf	___flge@ff2^0,w,c
  9326   00421E  5C01               	subwf	___flge@ff1^0,w,c
  9327   004220  5006               	movf	(___flge@ff2+1)^0,w,c
  9328   004222  5802               	subwfb	(___flge@ff1+1)^0,w,c
  9329   004224  5007               	movf	(___flge@ff2+2)^0,w,c
  9330   004226  5803               	subwfb	(___flge@ff1+2)^0,w,c
  9331   004228  5008               	movf	(___flge@ff2+3)^0,w,c
  9332   00422A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  9333   00422C  B0D8               	btfsc	status,0,c
  9334   00422E  EF1B  F021         	goto	u3781
  9335   004232  EF1D  F021         	goto	u3780
  9336   004236                     u3781:
  9337   004236  EF20  F021         	goto	l3660
  9338   00423A                     u3780:
  9339   00423A  90D8               	bcf	status,0,c
  9340   00423C  EF21  F021         	goto	l793
  9341   004240                     l3660:
  9342   004240  80D8               	bsf	status,0,c
  9343   004242                     l793:
  9344   004242  0012               	return		;funcret
  9345   004244                     __end_of___flge:
  9346                           	callstack 0
  9347                           
  9348 ;; *************** function _backward *****************
  9349 ;; Defined at:
  9350 ;;		line 166 in file "dc_motor_v1.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  Distance_Cal    1    wreg     unsigned char 
  9353 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9354 ;;		 -> motorL(9), 
  9355 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9356 ;;		 -> motorR(9), 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  Distance_Cal    1   26[COMRAM] unsigned char 
  9359 ;;  j               2   29[COMRAM] int 
  9360 ;;  i               2   27[COMRAM] int 
  9361 ;;  delay_time      2   33[COMRAM] int 
  9362 ;;  max_power       2   31[COMRAM] int 
  9363 ;;  acceleration    2    0        int 
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  1    wreg      void 
  9366 ;; Registers used:
  9367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;Total ram usage:       16 bytes
  9378 ;; Hardware stack levels used: 1
  9379 ;; Hardware stack levels required when called: 2
  9380 ;; This function calls:
  9381 ;;		___awdiv
  9382 ;;		_delay_ms_function
  9383 ;;		_setMotorPWM
  9384 ;; This function is called by:
  9385 ;;		_main
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text39
  9390   003924                     __ptext39:
  9391                           	callstack 0
  9392   003924                     _backward:
  9393                           	callstack 28
  9394                           
  9395                           ;incstack = 0
  9396                           ;backward@Distance_Calibration stored from wreg
  9397   003924  6E1B               	movwf	backward@Distance_Calibration^0,c
  9398   003926                     
  9399                           ;dc_motor_v1.c: 167:     mL->direction = 0;
  9400   003926  EE20 F001          	lfsr	2,1
  9401   00392A  5014               	movf	backward@mL^0,w,c
  9402   00392C  26D9               	addwf	fsr2l,f,c
  9403   00392E  5015               	movf	(backward@mL+1)^0,w,c
  9404   003930  22DA               	addwfc	fsr2h,f,c
  9405   003932  6ADF               	clrf	indf2,c
  9406                           
  9407                           ;dc_motor_v1.c: 168:     mR->direction = 0;
  9408   003934  EE20 F001          	lfsr	2,1
  9409   003938  5016               	movf	backward@mR^0,w,c
  9410   00393A  26D9               	addwf	fsr2l,f,c
  9411   00393C  5017               	movf	(backward@mR+1)^0,w,c
  9412   00393E  22DA               	addwfc	fsr2h,f,c
  9413   003940  6ADF               	clrf	indf2,c
  9414   003942                     
  9415                           ;dc_motor_v1.c: 171:     int max_power = 20;
  9416   003942  0E00               	movlw	0
  9417   003944  6E21               	movwf	(backward@max_power+1)^0,c
  9418   003946  0E14               	movlw	20
  9419   003948  6E20               	movwf	backward@max_power^0,c
  9420   00394A                     
  9421                           ;dc_motor_v1.c: 173:     int delay_time = acceleration_time/max_power;
  9422   00394A  0E00               	movlw	0
  9423   00394C  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9424   00394E  0E64               	movlw	100
  9425   003950  6E01               	movwf	___awdiv@dividend^0,c
  9426   003952  0E00               	movlw	0
  9427   003954  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9428   003956  0E14               	movlw	20
  9429   003958  6E03               	movwf	___awdiv@divisor^0,c
  9430   00395A  EC22  F021         	call	___awdiv	;wreg free
  9431   00395E  C001  F022         	movff	?___awdiv,backward@delay_time
  9432   003962  C002  F023         	movff	?___awdiv+1,backward@delay_time+1
  9433   003966                     
  9434                           ;dc_motor_v1.c: 176:     for(int i=0; i< max_power; i++){
  9435   003966  0E00               	movlw	0
  9436   003968  6E1D               	movwf	(backward@i+1)^0,c
  9437   00396A  0E00               	movlw	0
  9438   00396C  6E1C               	movwf	backward@i^0,c
  9439   00396E  EFE5  F01C         	goto	l4772
  9440   003972                     l4762:
  9441                           
  9442                           ;dc_motor_v1.c: 177:         mL->power = mL->power + 1;
  9443   003972  C014  FFD9         	movff	backward@mL,fsr2l
  9444   003976  C015  FFDA         	movff	backward@mL+1,fsr2h
  9445   00397A  50DF               	movf	indf2,w,c
  9446   00397C  6E18               	movwf	??_backward^0,c
  9447   00397E  2818               	incf	??_backward^0,w,c
  9448   003980  C014  FFD9         	movff	backward@mL,fsr2l
  9449   003984  C015  FFDA         	movff	backward@mL+1,fsr2h
  9450   003988  6EDF               	movwf	indf2,c
  9451                           
  9452                           ;dc_motor_v1.c: 178:         mR->power = mR->power + 1 ;
  9453   00398A  C016  FFD9         	movff	backward@mR,fsr2l
  9454   00398E  C017  FFDA         	movff	backward@mR+1,fsr2h
  9455   003992  50DF               	movf	indf2,w,c
  9456   003994  6E18               	movwf	??_backward^0,c
  9457   003996  2818               	incf	??_backward^0,w,c
  9458   003998  C016  FFD9         	movff	backward@mR,fsr2l
  9459   00399C  C017  FFDA         	movff	backward@mR+1,fsr2h
  9460   0039A0  6EDF               	movwf	indf2,c
  9461   0039A2                     
  9462                           ;dc_motor_v1.c: 179:         setMotorPWM(mR);
  9463   0039A2  C016  F00E         	movff	backward@mR,setMotorPWM@m
  9464   0039A6  C017  F00F         	movff	backward@mR+1,setMotorPWM@m+1
  9465   0039AA  EC30  F01E         	call	_setMotorPWM	;wreg free
  9466   0039AE                     
  9467                           ;dc_motor_v1.c: 180:         setMotorPWM(mL);
  9468   0039AE  C014  F00E         	movff	backward@mL,setMotorPWM@m
  9469   0039B2  C015  F00F         	movff	backward@mL+1,setMotorPWM@m+1
  9470   0039B6  EC30  F01E         	call	_setMotorPWM	;wreg free
  9471   0039BA                     
  9472                           ;dc_motor_v1.c: 181:         delay_ms_function(delay_time);
  9473   0039BA  C022  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9474   0039BE  C023  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9475   0039C2  ECBA  F024         	call	_delay_ms_function	;wreg free
  9476   0039C6                     
  9477                           ;dc_motor_v1.c: 182:     }
  9478   0039C6  4A1C               	infsnz	backward@i^0,f,c
  9479   0039C8  2A1D               	incf	(backward@i+1)^0,f,c
  9480   0039CA                     l4772:
  9481   0039CA  5020               	movf	backward@max_power^0,w,c
  9482   0039CC  5C1C               	subwf	backward@i^0,w,c
  9483   0039CE  501D               	movf	(backward@i+1)^0,w,c
  9484   0039D0  0A80               	xorlw	128
  9485   0039D2  6E18               	movwf	??_backward^0,c
  9486   0039D4  5021               	movf	(backward@max_power+1)^0,w,c
  9487   0039D6  0A80               	xorlw	128
  9488   0039D8  5818               	subwfb	??_backward^0,w,c
  9489   0039DA  A0D8               	btfss	status,0,c
  9490   0039DC  EFF2  F01C         	goto	u5271
  9491   0039E0  EFF4  F01C         	goto	u5270
  9492   0039E4                     u5271:
  9493   0039E4  EFB9  F01C         	goto	l4762
  9494   0039E8                     u5270:
  9495   0039E8                     
  9496                           ;dc_motor_v1.c: 185:     for(int j=0; j<Distance_Calibration; j++){
  9497   0039E8  0E00               	movlw	0
  9498   0039EA  6E1F               	movwf	(backward@j+1)^0,c
  9499   0039EC  0E00               	movlw	0
  9500   0039EE  6E1E               	movwf	backward@j^0,c
  9501   0039F0  EF03  F01D         	goto	l244
  9502   0039F4                     l4776:
  9503                           
  9504                           ;dc_motor_v1.c: 186:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9505   0039F4  0ED0               	movlw	208
  9506   0039F6  6E18               	movwf	??_backward^0,c
  9507   0039F8  0ECA               	movlw	202
  9508   0039FA                     u5767:
  9509   0039FA  2EE8               	decfsz	wreg,f,c
  9510   0039FC  D7FE               	bra	u5767
  9511   0039FE  2E18               	decfsz	??_backward^0,f,c
  9512   003A00  D7FC               	bra	u5767
  9513   003A02                     
  9514                           ;dc_motor_v1.c: 187:     }
  9515   003A02  4A1E               	infsnz	backward@j^0,f,c
  9516   003A04  2A1F               	incf	(backward@j+1)^0,f,c
  9517   003A06                     l244:
  9518   003A06  501B               	movf	backward@Distance_Calibration^0,w,c
  9519   003A08  6E18               	movwf	??_backward^0,c
  9520   003A0A  6A19               	clrf	(??_backward+1)^0,c
  9521   003A0C  5018               	movf	??_backward^0,w,c
  9522   003A0E  5C1E               	subwf	backward@j^0,w,c
  9523   003A10  501F               	movf	(backward@j+1)^0,w,c
  9524   003A12  0A80               	xorlw	128
  9525   003A14  6E1A               	movwf	(??_backward+2)^0,c
  9526   003A16  5019               	movf	(??_backward+1)^0,w,c
  9527   003A18  0A80               	xorlw	128
  9528   003A1A  581A               	subwfb	(??_backward+2)^0,w,c
  9529   003A1C  A0D8               	btfss	status,0,c
  9530   003A1E  EF13  F01D         	goto	u5281
  9531   003A22  EF15  F01D         	goto	u5280
  9532   003A26                     u5281:
  9533   003A26  EFFA  F01C         	goto	l4776
  9534   003A2A                     u5280:
  9535   003A2A  EF4B  F01D         	goto	l4794
  9536   003A2E                     l4780:
  9537                           
  9538                           ;dc_motor_v1.c: 191:         if(mR->power> 0 ){
  9539   003A2E  C016  FFD9         	movff	backward@mR,fsr2l
  9540   003A32  C017  FFDA         	movff	backward@mR+1,fsr2h
  9541   003A36  50DF               	movf	indf2,w,c
  9542   003A38  B4D8               	btfsc	status,2,c
  9543   003A3A  EF21  F01D         	goto	u5291
  9544   003A3E  EF23  F01D         	goto	u5290
  9545   003A42                     u5291:
  9546   003A42  EF28  F01D         	goto	l4784
  9547   003A46                     u5290:
  9548   003A46                     
  9549                           ;dc_motor_v1.c: 192:             mR->power--;
  9550   003A46  C016  FFD9         	movff	backward@mR,fsr2l
  9551   003A4A  C017  FFDA         	movff	backward@mR+1,fsr2h
  9552   003A4E  06DF               	decf	indf2,f,c
  9553   003A50                     l4784:
  9554                           
  9555                           ;dc_motor_v1.c: 194:         if(mL->power> 0 ){
  9556   003A50  C014  FFD9         	movff	backward@mL,fsr2l
  9557   003A54  C015  FFDA         	movff	backward@mL+1,fsr2h
  9558   003A58  50DF               	movf	indf2,w,c
  9559   003A5A  B4D8               	btfsc	status,2,c
  9560   003A5C  EF32  F01D         	goto	u5301
  9561   003A60  EF34  F01D         	goto	u5300
  9562   003A64                     u5301:
  9563   003A64  EF39  F01D         	goto	l4788
  9564   003A68                     u5300:
  9565   003A68                     
  9566                           ;dc_motor_v1.c: 195:             mL->power--;
  9567   003A68  C014  FFD9         	movff	backward@mL,fsr2l
  9568   003A6C  C015  FFDA         	movff	backward@mL+1,fsr2h
  9569   003A70  06DF               	decf	indf2,f,c
  9570   003A72                     l4788:
  9571                           
  9572                           ;dc_motor_v1.c: 197:         setMotorPWM(mR);
  9573   003A72  C016  F00E         	movff	backward@mR,setMotorPWM@m
  9574   003A76  C017  F00F         	movff	backward@mR+1,setMotorPWM@m+1
  9575   003A7A  EC30  F01E         	call	_setMotorPWM	;wreg free
  9576   003A7E                     
  9577                           ;dc_motor_v1.c: 198:         setMotorPWM(mL);
  9578   003A7E  C014  F00E         	movff	backward@mL,setMotorPWM@m
  9579   003A82  C015  F00F         	movff	backward@mL+1,setMotorPWM@m+1
  9580   003A86  EC30  F01E         	call	_setMotorPWM	;wreg free
  9581   003A8A                     
  9582                           ;dc_motor_v1.c: 199:         delay_ms_function(delay_time);
  9583   003A8A  C022  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9584   003A8E  C023  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9585   003A92  ECBA  F024         	call	_delay_ms_function	;wreg free
  9586   003A96                     l4794:
  9587                           
  9588                           ;dc_motor_v1.c: 190:     while(mL->power || mR->power > 0){
  9589   003A96  C014  FFD9         	movff	backward@mL,fsr2l
  9590   003A9A  C015  FFDA         	movff	backward@mL+1,fsr2h
  9591   003A9E  50DF               	movf	indf2,w,c
  9592   003AA0  A4D8               	btfss	status,2,c
  9593   003AA2  EF55  F01D         	goto	u5311
  9594   003AA6  EF57  F01D         	goto	u5310
  9595   003AAA                     u5311:
  9596   003AAA  EF17  F01D         	goto	l4780
  9597   003AAE                     u5310:
  9598   003AAE  C016  FFD9         	movff	backward@mR,fsr2l
  9599   003AB2  C017  FFDA         	movff	backward@mR+1,fsr2h
  9600   003AB6  50DF               	movf	indf2,w,c
  9601   003AB8  A4D8               	btfss	status,2,c
  9602   003ABA  EF61  F01D         	goto	u5321
  9603   003ABE  EF63  F01D         	goto	u5320
  9604   003AC2                     u5321:
  9605   003AC2  EF17  F01D         	goto	l4780
  9606   003AC6                     u5320:
  9607   003AC6  0012               	return		;funcret
  9608   003AC8                     __end_of_backward:
  9609                           	callstack 0
  9610                           
  9611 ;; *************** function _setMotorPWM *****************
  9612 ;; Defined at:
  9613 ;;		line 75 in file "dc_motor_v1.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9616 ;;		 -> motorR(9), motorL(9), 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  negDuty         1   18[COMRAM] unsigned char 
  9619 ;;  posDuty         1   17[COMRAM] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;Total ram usage:        6 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 1
  9636 ;; This function calls:
  9637 ;;		___lwdiv
  9638 ;;		___wmul
  9639 ;; This function is called by:
  9640 ;;		_forward
  9641 ;;		_backward
  9642 ;;		_turnLEFT
  9643 ;;		_turnRIGHT
  9644 ;;		_stop
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text40
  9649   003C60                     __ptext40:
  9650                           	callstack 0
  9651   003C60                     _setMotorPWM:
  9652                           	callstack 28
  9653   003C60                     
  9654                           ;dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 76: {;dc_motor_v1.c: 77
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 79:     if(m->brakemode) {
  9655   003C60  EE20 F002          	lfsr	2,2
  9656   003C64  500E               	movf	setMotorPWM@m^0,w,c
  9657   003C66  26D9               	addwf	fsr2l,f,c
  9658   003C68  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9659   003C6A  22DA               	addwfc	fsr2h,f,c
  9660   003C6C  50DF               	movf	indf2,w,c
  9661   003C6E  B4D8               	btfsc	status,2,c
  9662   003C70  EF3C  F01E         	goto	u5111
  9663   003C74  EF3E  F01E         	goto	u5110
  9664   003C78                     u5111:
  9665   003C78  EF72  F01E         	goto	l4640
  9666   003C7C                     u5110:
  9667   003C7C                     
  9668                           ;dc_motor_v1.c: 80:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9669   003C7C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9670   003C80  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9671   003C84  50DF               	movf	indf2,w,c
  9672   003C86  6E10               	movwf	??_setMotorPWM^0,c
  9673   003C88  5010               	movf	??_setMotorPWM^0,w,c
  9674   003C8A  6E01               	movwf	___wmul@multiplier^0,c
  9675   003C8C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9676   003C8E  EE20 F003          	lfsr	2,3
  9677   003C92  500E               	movf	setMotorPWM@m^0,w,c
  9678   003C94  26D9               	addwf	fsr2l,f,c
  9679   003C96  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9680   003C98  22DA               	addwfc	fsr2h,f,c
  9681   003C9A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9682   003C9E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9683   003CA2  ECFA  F024         	call	___wmul	;wreg free
  9684   003CA6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9685   003CAA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9686   003CAE  0E00               	movlw	0
  9687   003CB0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9688   003CB2  0E64               	movlw	100
  9689   003CB4  6E09               	movwf	___lwdiv@divisor^0,c
  9690   003CB6  ECD9  F022         	call	___lwdiv	;wreg free
  9691   003CBA  EE20 F003          	lfsr	2,3
  9692   003CBE  500E               	movf	setMotorPWM@m^0,w,c
  9693   003CC0  26D9               	addwf	fsr2l,f,c
  9694   003CC2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9695   003CC4  22DA               	addwfc	fsr2h,f,c
  9696   003CC6  50DF               	movf	indf2,w,c
  9697   003CC8  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9698   003CCA  5007               	movf	?___lwdiv^0,w,c
  9699   003CCC  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9700   003CCE  6E12               	movwf	setMotorPWM@posDuty^0,c
  9701   003CD0                     
  9702                           ;dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  9703   003CD0  EE20 F003          	lfsr	2,3
  9704   003CD4  500E               	movf	setMotorPWM@m^0,w,c
  9705   003CD6  26D9               	addwf	fsr2l,f,c
  9706   003CD8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9707   003CDA  22DA               	addwfc	fsr2h,f,c
  9708   003CDC  50DF               	movf	indf2,w,c
  9709   003CDE  6E13               	movwf	setMotorPWM@negDuty^0,c
  9710                           
  9711                           ;dc_motor_v1.c: 82:     }
  9712   003CE0  EF95  F01E         	goto	l4644
  9713   003CE4                     l4640:
  9714                           
  9715                           ;dc_motor_v1.c: 84:         posDuty=0;
  9716   003CE4  0E00               	movlw	0
  9717   003CE6  6E12               	movwf	setMotorPWM@posDuty^0,c
  9718   003CE8                     
  9719                           ;dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9720   003CE8  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9721   003CEC  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9722   003CF0  50DF               	movf	indf2,w,c
  9723   003CF2  6E10               	movwf	??_setMotorPWM^0,c
  9724   003CF4  5010               	movf	??_setMotorPWM^0,w,c
  9725   003CF6  6E01               	movwf	___wmul@multiplier^0,c
  9726   003CF8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9727   003CFA  EE20 F003          	lfsr	2,3
  9728   003CFE  500E               	movf	setMotorPWM@m^0,w,c
  9729   003D00  26D9               	addwf	fsr2l,f,c
  9730   003D02  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9731   003D04  22DA               	addwfc	fsr2h,f,c
  9732   003D06  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9733   003D0A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9734   003D0E  ECFA  F024         	call	___wmul	;wreg free
  9735   003D12  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9736   003D16  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9737   003D1A  0E00               	movlw	0
  9738   003D1C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9739   003D1E  0E64               	movlw	100
  9740   003D20  6E09               	movwf	___lwdiv@divisor^0,c
  9741   003D22  ECD9  F022         	call	___lwdiv	;wreg free
  9742   003D26  5007               	movf	?___lwdiv^0,w,c
  9743   003D28  6E13               	movwf	setMotorPWM@negDuty^0,c
  9744   003D2A                     l4644:
  9745                           
  9746                           ;dc_motor_v1.c: 88:     if (m->direction) {
  9747   003D2A  EE20 F001          	lfsr	2,1
  9748   003D2E  500E               	movf	setMotorPWM@m^0,w,c
  9749   003D30  26D9               	addwf	fsr2l,f,c
  9750   003D32  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9751   003D34  22DA               	addwfc	fsr2h,f,c
  9752   003D36  50DF               	movf	indf2,w,c
  9753   003D38  B4D8               	btfsc	status,2,c
  9754   003D3A  EFA1  F01E         	goto	u5121
  9755   003D3E  EFA3  F01E         	goto	u5120
  9756   003D42                     u5121:
  9757   003D42  EFC5  F01E         	goto	l4648
  9758   003D46                     u5120:
  9759   003D46                     
  9760                           ;dc_motor_v1.c: 89:         *(m->posDutyHighByte)=posDuty;
  9761   003D46  EE20 F005          	lfsr	2,5
  9762   003D4A  500E               	movf	setMotorPWM@m^0,w,c
  9763   003D4C  26D9               	addwf	fsr2l,f,c
  9764   003D4E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9765   003D50  22DA               	addwfc	fsr2h,f,c
  9766   003D52  CFDE F010          	movff	postinc2,??_setMotorPWM
  9767   003D56  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9768   003D5A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9769   003D5E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9770   003D62  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9771                           
  9772                           ;dc_motor_v1.c: 90:         *(m->negDutyHighByte)=negDuty;
  9773   003D66  EE20 F007          	lfsr	2,7
  9774   003D6A  500E               	movf	setMotorPWM@m^0,w,c
  9775   003D6C  26D9               	addwf	fsr2l,f,c
  9776   003D6E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9777   003D70  22DA               	addwfc	fsr2h,f,c
  9778   003D72  CFDE F010          	movff	postinc2,??_setMotorPWM
  9779   003D76  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9780   003D7A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9781   003D7E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9782   003D82  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9783                           
  9784                           ;dc_motor_v1.c: 91:     } else {
  9785   003D86  EFE5  F01E         	goto	l216
  9786   003D8A                     l4648:
  9787                           
  9788                           ;dc_motor_v1.c: 92:         *(m->posDutyHighByte)=negDuty;
  9789   003D8A  EE20 F005          	lfsr	2,5
  9790   003D8E  500E               	movf	setMotorPWM@m^0,w,c
  9791   003D90  26D9               	addwf	fsr2l,f,c
  9792   003D92  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9793   003D94  22DA               	addwfc	fsr2h,f,c
  9794   003D96  CFDE F010          	movff	postinc2,??_setMotorPWM
  9795   003D9A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9796   003D9E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9797   003DA2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9798   003DA6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9799                           
  9800                           ;dc_motor_v1.c: 93:         *(m->negDutyHighByte)=posDuty;
  9801   003DAA  EE20 F007          	lfsr	2,7
  9802   003DAE  500E               	movf	setMotorPWM@m^0,w,c
  9803   003DB0  26D9               	addwf	fsr2l,f,c
  9804   003DB2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9805   003DB4  22DA               	addwfc	fsr2h,f,c
  9806   003DB6  CFDE F010          	movff	postinc2,??_setMotorPWM
  9807   003DBA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9808   003DBE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9809   003DC2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9810   003DC6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9811   003DCA                     l216:
  9812   003DCA  0012               	return		;funcret
  9813   003DCC                     __end_of_setMotorPWM:
  9814                           	callstack 0
  9815                           
  9816 ;; *************** function ___wmul *****************
  9817 ;; Defined at:
  9818 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  multiplier      2    0[COMRAM] unsigned int 
  9821 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  product         2    4[COMRAM] unsigned int 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  2    0[COMRAM] unsigned int 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2, status,0, prodl, prodh
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;Total ram usage:        6 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_setMotorPWM
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text41
  9847   0049F4                     __ptext41:
  9848                           	callstack 0
  9849   0049F4                     ___wmul:
  9850                           	callstack 28
  9851   0049F4  5001               	movf	___wmul@multiplier^0,w,c
  9852   0049F6  0203               	mulwf	___wmul@multiplicand^0,c
  9853   0049F8  CFF3 F005          	movff	prodl,___wmul@product
  9854   0049FC  CFF4 F006          	movff	prodh,___wmul@product+1
  9855   004A00  5001               	movf	___wmul@multiplier^0,w,c
  9856   004A02  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9857   004A04  50F3               	movf	243,w,c
  9858   004A06  2606               	addwf	(___wmul@product+1)^0,f,c
  9859   004A08  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9860   004A0A  0203               	mulwf	___wmul@multiplicand^0,c
  9861   004A0C  50F3               	movf	243,w,c
  9862   004A0E  2606               	addwf	(___wmul@product+1)^0,f,c
  9863   004A10  C005  F001         	movff	___wmul@product,?___wmul
  9864   004A14  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9865   004A18  0012               	return		;funcret
  9866   004A1A                     __end_of___wmul:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function ___lwdiv *****************
  9870 ;; Defined at:
  9871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  dividend        2    6[COMRAM] unsigned int 
  9874 ;;  divisor         2    8[COMRAM] unsigned int 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  quotient        2   10[COMRAM] unsigned int 
  9877 ;;  counter         1   12[COMRAM] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  2    6[COMRAM] unsigned int 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;Total ram usage:        7 bytes
  9892 ;; Hardware stack levels used: 1
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_setMotorPWM
  9897 ;;		_vfpfcnvrt
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text42
  9902   0045B2                     __ptext42:
  9903                           	callstack 0
  9904   0045B2                     ___lwdiv:
  9905                           	callstack 28
  9906   0045B2  0E00               	movlw	0
  9907   0045B4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9908   0045B6  0E00               	movlw	0
  9909   0045B8  6E0B               	movwf	___lwdiv@quotient^0,c
  9910   0045BA  5009               	movf	___lwdiv@divisor^0,w,c
  9911   0045BC  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9912   0045BE  B4D8               	btfsc	status,2,c
  9913   0045C0  EFE4  F022         	goto	u3511
  9914   0045C4  EFE6  F022         	goto	u3510
  9915   0045C8                     u3511:
  9916   0045C8  EF0E  F023         	goto	l1014
  9917   0045CC                     u3510:
  9918   0045CC  0E01               	movlw	1
  9919   0045CE  6E0D               	movwf	___lwdiv@counter^0,c
  9920   0045D0  EFEE  F022         	goto	l3502
  9921   0045D4                     l3500:
  9922   0045D4  90D8               	bcf	status,0,c
  9923   0045D6  3609               	rlcf	___lwdiv@divisor^0,f,c
  9924   0045D8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9925   0045DA  2A0D               	incf	___lwdiv@counter^0,f,c
  9926   0045DC                     l3502:
  9927   0045DC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9928   0045DE  EFF3  F022         	goto	u3521
  9929   0045E2  EFF5  F022         	goto	u3520
  9930   0045E6                     u3521:
  9931   0045E6  EFEA  F022         	goto	l3500
  9932   0045EA                     u3520:
  9933   0045EA                     l3504:
  9934   0045EA  90D8               	bcf	status,0,c
  9935   0045EC  360B               	rlcf	___lwdiv@quotient^0,f,c
  9936   0045EE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9937   0045F0  5009               	movf	___lwdiv@divisor^0,w,c
  9938   0045F2  5C07               	subwf	___lwdiv@dividend^0,w,c
  9939   0045F4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9940   0045F6  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9941   0045F8  A0D8               	btfss	status,0,c
  9942   0045FA  EF01  F023         	goto	u3531
  9943   0045FE  EF03  F023         	goto	u3530
  9944   004602                     u3531:
  9945   004602  EF08  F023         	goto	l3512
  9946   004606                     u3530:
  9947   004606  5009               	movf	___lwdiv@divisor^0,w,c
  9948   004608  5E07               	subwf	___lwdiv@dividend^0,f,c
  9949   00460A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9950   00460C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9951   00460E  800B               	bsf	___lwdiv@quotient^0,0,c
  9952   004610                     l3512:
  9953   004610  90D8               	bcf	status,0,c
  9954   004612  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9955   004614  3209               	rrcf	___lwdiv@divisor^0,f,c
  9956   004616  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9957   004618  EFF5  F022         	goto	l3504
  9958   00461C                     l1014:
  9959   00461C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9960   004620  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9961   004624  0012               	return		;funcret
  9962   004626                     __end_of___lwdiv:
  9963                           	callstack 0
  9964                           
  9965 ;; *************** function _delay_ms_function *****************
  9966 ;; Defined at:
  9967 ;;		line 67 in file "dc_motor_v1.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;		None
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;Total ram usage:        3 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_forward
  9991 ;;		_backward
  9992 ;;		_turnLEFT
  9993 ;;		_turnRIGHT
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text43
  9998   004974                     __ptext43:
  9999                           	callstack 0
 10000   004974                     _delay_ms_function:
 10001                           	callstack 29
 10002   004974                     
 10003                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
 10004   004974  EFC7  F024         	goto	l206
 10005   004978                     l3816:
 10006                           
 10007                           ;dc_motor_v1.c: 69:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10008   004978  0E15               	movlw	21
 10009   00497A  6E03               	movwf	??_delay_ms_function^0,c
 10010   00497C  0EC6               	movlw	198
 10011   00497E                     u5777:
 10012   00497E  2EE8               	decfsz	wreg,f,c
 10013   004980  D7FE               	bra	u5777
 10014   004982  2E03               	decfsz	??_delay_ms_function^0,f,c
 10015   004984  D7FC               	bra	u5777
 10016   004986  D000               	nop2	
 10017   004988                     
 10018                           ;dc_motor_v1.c: 70:         milliseconds--;
 10019   004988  0601               	decf	delay_ms_function@milliseconds^0,f,c
 10020   00498A  A0D8               	btfss	status,0,c
 10021   00498C  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
 10022   00498E                     l206:
 10023                           
 10024                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
 10025   00498E  5001               	movf	delay_ms_function@milliseconds^0,w,c
 10026   004990  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
 10027   004992  A4D8               	btfss	status,2,c
 10028   004994  EFCE  F024         	goto	u3961
 10029   004998  EFD0  F024         	goto	u3960
 10030   00499C                     u3961:
 10031   00499C  EFBC  F024         	goto	l3816
 10032   0049A0                     u3960:
 10033   0049A0  0012               	return		;funcret
 10034   0049A2                     __end_of_delay_ms_function:
 10035                           	callstack 0
 10036                           
 10037 ;; *************** function ___awdiv *****************
 10038 ;; Defined at:
 10039 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  dividend        2    0[COMRAM] int 
 10042 ;;  divisor         2    2[COMRAM] int 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  quotient        2    6[COMRAM] int 
 10045 ;;  sign            1    5[COMRAM] unsigned char 
 10046 ;;  counter         1    4[COMRAM] unsigned char 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  2    0[COMRAM] int 
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;Total ram usage:        8 bytes
 10061 ;; Hardware stack levels used: 1
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_forward
 10066 ;;		_backward
 10067 ;;		_turnLEFT
 10068 ;;		_turnRIGHT
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text44
 10073   004244                     __ptext44:
 10074                           	callstack 0
 10075   004244                     ___awdiv:
 10076                           	callstack 29
 10077   004244  0E00               	movlw	0
 10078   004246  6E06               	movwf	___awdiv@sign^0,c
 10079   004248  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10080   00424A  EF2B  F021         	goto	u4000
 10081   00424E  EF29  F021         	goto	u4001
 10082   004252                     u4001:
 10083   004252  EF31  F021         	goto	l3848
 10084   004256                     u4000:
 10085   004256  6C03               	negf	___awdiv@divisor^0,c
 10086   004258  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10087   00425A  B0D8               	btfsc	status,0,c
 10088   00425C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10089   00425E  0E01               	movlw	1
 10090   004260  6E06               	movwf	___awdiv@sign^0,c
 10091   004262                     l3848:
 10092   004262  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10093   004264  EF38  F021         	goto	u4010
 10094   004268  EF36  F021         	goto	u4011
 10095   00426C                     u4011:
 10096   00426C  EF3E  F021         	goto	l3854
 10097   004270                     u4010:
 10098   004270  6C01               	negf	___awdiv@dividend^0,c
 10099   004272  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10100   004274  B0D8               	btfsc	status,0,c
 10101   004276  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10102   004278  0E01               	movlw	1
 10103   00427A  1A06               	xorwf	___awdiv@sign^0,f,c
 10104   00427C                     l3854:
 10105   00427C  0E00               	movlw	0
 10106   00427E  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10107   004280  0E00               	movlw	0
 10108   004282  6E07               	movwf	___awdiv@quotient^0,c
 10109   004284  5003               	movf	___awdiv@divisor^0,w,c
 10110   004286  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10111   004288  B4D8               	btfsc	status,2,c
 10112   00428A  EF49  F021         	goto	u4021
 10113   00428E  EF4B  F021         	goto	u4020
 10114   004292                     u4021:
 10115   004292  EF73  F021         	goto	l3876
 10116   004296                     u4020:
 10117   004296  0E01               	movlw	1
 10118   004298  6E05               	movwf	___awdiv@counter^0,c
 10119   00429A  EF53  F021         	goto	l3862
 10120   00429E                     l3860:
 10121   00429E  90D8               	bcf	status,0,c
 10122   0042A0  3603               	rlcf	___awdiv@divisor^0,f,c
 10123   0042A2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10124   0042A4  2A05               	incf	___awdiv@counter^0,f,c
 10125   0042A6                     l3862:
 10126   0042A6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10127   0042A8  EF58  F021         	goto	u4031
 10128   0042AC  EF5A  F021         	goto	u4030
 10129   0042B0                     u4031:
 10130   0042B0  EF4F  F021         	goto	l3860
 10131   0042B4                     u4030:
 10132   0042B4                     l3864:
 10133   0042B4  90D8               	bcf	status,0,c
 10134   0042B6  3607               	rlcf	___awdiv@quotient^0,f,c
 10135   0042B8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10136   0042BA  5003               	movf	___awdiv@divisor^0,w,c
 10137   0042BC  5C01               	subwf	___awdiv@dividend^0,w,c
 10138   0042BE  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10139   0042C0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10140   0042C2  A0D8               	btfss	status,0,c
 10141   0042C4  EF66  F021         	goto	u4041
 10142   0042C8  EF68  F021         	goto	u4040
 10143   0042CC                     u4041:
 10144   0042CC  EF6D  F021         	goto	l3872
 10145   0042D0                     u4040:
 10146   0042D0  5003               	movf	___awdiv@divisor^0,w,c
 10147   0042D2  5E01               	subwf	___awdiv@dividend^0,f,c
 10148   0042D4  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10149   0042D6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10150   0042D8  8007               	bsf	___awdiv@quotient^0,0,c
 10151   0042DA                     l3872:
 10152   0042DA  90D8               	bcf	status,0,c
 10153   0042DC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10154   0042DE  3203               	rrcf	___awdiv@divisor^0,f,c
 10155   0042E0  2E05               	decfsz	___awdiv@counter^0,f,c
 10156   0042E2  EF5A  F021         	goto	l3864
 10157   0042E6                     l3876:
 10158   0042E6  5006               	movf	___awdiv@sign^0,w,c
 10159   0042E8  B4D8               	btfsc	status,2,c
 10160   0042EA  EF79  F021         	goto	u4051
 10161   0042EE  EF7B  F021         	goto	u4050
 10162   0042F2                     u4051:
 10163   0042F2  EF7F  F021         	goto	l3880
 10164   0042F6                     u4050:
 10165   0042F6  6C07               	negf	___awdiv@quotient^0,c
 10166   0042F8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10167   0042FA  B0D8               	btfsc	status,0,c
 10168   0042FC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10169   0042FE                     l3880:
 10170   0042FE  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10171   004302  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10172   004306  0012               	return		;funcret
 10173   004308                     __end_of___awdiv:
 10174                           	callstack 0
 10175                           
 10176 ;; *************** function _adjust_calibration *****************
 10177 ;; Defined at:
 10178 ;;		line 6 in file "calibration.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  calibration_    2    0[COMRAM] PTR int 
 10181 ;;		 -> calibration(9), 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;		None
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  1    wreg      void 
 10186 ;; Registers used:
 10187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;Total ram usage:        6 bytes
 10198 ;; Hardware stack levels used: 1
 10199 ;; This function calls:
 10200 ;;		Nothing
 10201 ;; This function is called by:
 10202 ;;		_main
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text45
 10207   003DCC                     __ptext45:
 10208                           	callstack 0
 10209   003DCC                     _adjust_calibration:
 10210                           	callstack 30
 10211   003DCC                     l124:
 10212                           
 10213                           ;calibration.c: 11:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10214   003DCC  A68E               	btfss	142,3,c	;volatile
 10215   003DCE  EFEB  F01E         	goto	u5131
 10216   003DD2  EFED  F01E         	goto	u5130
 10217   003DD6                     u5131:
 10218   003DD6  EFF4  F01E         	goto	l4652
 10219   003DDA                     u5130:
 10220   003DDA  B48E               	btfsc	142,2,c	;volatile
 10221   003DDC  EFF2  F01E         	goto	u5141
 10222   003DE0  EFF4  F01E         	goto	u5140
 10223   003DE4                     u5141:
 10224   003DE4  EFE6  F01E         	goto	l124
 10225   003DE8                     u5140:
 10226   003DE8                     l4652:
 10227                           
 10228                           ;calibration.c: 12:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10229   003DE8  0E09               	movlw	9
 10230   003DEA  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10231   003DEC  0E1E               	movlw	30
 10232   003DEE  6E03               	movwf	??_adjust_calibration^0,c
 10233   003DF0  0EE4               	movlw	228
 10234   003DF2                     u5787:
 10235   003DF2  2EE8               	decfsz	wreg,f,c
 10236   003DF4  D7FE               	bra	u5787
 10237   003DF6  2E03               	decfsz	??_adjust_calibration^0,f,c
 10238   003DF8  D7FC               	bra	u5787
 10239   003DFA  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10240   003DFC  D7FA               	bra	u5787
 10241   003DFE  D000               	nop2	
 10242   003E00                     
 10243                           ;calibration.c: 14:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10244   003E00  B68E               	btfsc	142,3,c	;volatile
 10245   003E02  EF05  F01F         	goto	u5151
 10246   003E06  EF07  F01F         	goto	u5150
 10247   003E0A                     u5151:
 10248   003E0A  EF20  F01F         	goto	l128
 10249   003E0E                     u5150:
 10250   003E0E  B48E               	btfsc	142,2,c	;volatile
 10251   003E10  EF0C  F01F         	goto	u5161
 10252   003E14  EF0E  F01F         	goto	u5160
 10253   003E18                     u5161:
 10254   003E18  EF20  F01F         	goto	l128
 10255   003E1C                     u5160:
 10256   003E1C                     
 10257                           ;calibration.c: 16:                 LATHbits.LATH3 = 1;
 10258   003E1C  8680               	bsf	128,3,c	;volatile
 10259                           
 10260                           ;calibration.c: 17:                 LATDbits.LATD7 = 1;
 10261   003E1E  8E7C               	bsf	124,7,c	;volatile
 10262   003E20                     
 10263                           ;calibration.c: 18:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10264   003E20  0E52               	movlw	82
 10265   003E22  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10266   003E24  0E2B               	movlw	43
 10267   003E26  6E03               	movwf	??_adjust_calibration^0,c
 10268   003E28  0E00               	movlw	0
 10269   003E2A                     u5797:
 10270   003E2A  2EE8               	decfsz	wreg,f,c
 10271   003E2C  D7FE               	bra	u5797
 10272   003E2E  2E03               	decfsz	??_adjust_calibration^0,f,c
 10273   003E30  D7FC               	bra	u5797
 10274   003E32  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10275   003E34  D7FA               	bra	u5797
 10276   003E36  D000               	nop2	
 10277   003E38                     
 10278                           ;calibration.c: 19:                 LATHbits.LATH3 = 0;
 10279   003E38  9680               	bcf	128,3,c	;volatile
 10280   003E3A                     
 10281                           ;calibration.c: 20:                 LATDbits.LATD7 = 0;
 10282   003E3A  9E7C               	bcf	124,7,c	;volatile
 10283                           
 10284                           ;calibration.c: 21:                 break;
 10285   003E3C  EF90  F01F         	goto	l134
 10286   003E40                     l128:
 10287                           
 10288                           ;calibration.c: 24:                 if(!PORTFbits.RF2){
 10289   003E40  B48E               	btfsc	142,2,c	;volatile
 10290   003E42  EF25  F01F         	goto	u5171
 10291   003E46  EF27  F01F         	goto	u5170
 10292   003E4A                     u5171:
 10293   003E4A  EF55  F01F         	goto	l4678
 10294   003E4E                     u5170:
 10295   003E4E                     
 10296                           ;calibration.c: 25:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10297   003E4E  0E11               	movlw	17
 10298   003E50  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10299   003E52  0E3C               	movlw	60
 10300   003E54  6E03               	movwf	??_adjust_calibration^0,c
 10301   003E56  0ECB               	movlw	203
 10302   003E58                     u5807:
 10303   003E58  2EE8               	decfsz	wreg,f,c
 10304   003E5A  D7FE               	bra	u5807
 10305   003E5C  2E03               	decfsz	??_adjust_calibration^0,f,c
 10306   003E5E  D7FC               	bra	u5807
 10307   003E60  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10308   003E62  D7FA               	bra	u5807
 10309   003E64  0000               	nop	
 10310   003E66                     
 10311                           ;calibration.c: 26:                     *calibration_label = *calibration_label + 2;
 10312   003E66  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10313   003E6A  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10314   003E6E  CFDE F003          	movff	postinc2,??_adjust_calibration
 10315   003E72  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10316   003E76  0E02               	movlw	2
 10317   003E78  2603               	addwf	??_adjust_calibration^0,f,c
 10318   003E7A  0E00               	movlw	0
 10319   003E7C  2204               	addwfc	(??_adjust_calibration+1)^0,f,c
 10320   003E7E  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10321   003E82  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10322   003E86  C003  FFDE         	movff	??_adjust_calibration,postinc2
 10323   003E8A  C004  FFDD         	movff	??_adjust_calibration+1,postdec2
 10324   003E8E                     
 10325                           ;calibration.c: 27:                     LATDbits.LATD7 = 1;
 10326   003E8E  8E7C               	bsf	124,7,c	;volatile
 10327   003E90                     
 10328                           ;calibration.c: 28:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10329   003E90  0E11               	movlw	17
 10330   003E92  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10331   003E94  0E3C               	movlw	60
 10332   003E96  6E03               	movwf	??_adjust_calibration^0,c
 10333   003E98  0ECB               	movlw	203
 10334   003E9A                     u5817:
 10335   003E9A  2EE8               	decfsz	wreg,f,c
 10336   003E9C  D7FE               	bra	u5817
 10337   003E9E  2E03               	decfsz	??_adjust_calibration^0,f,c
 10338   003EA0  D7FC               	bra	u5817
 10339   003EA2  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10340   003EA4  D7FA               	bra	u5817
 10341   003EA6  0000               	nop	
 10342   003EA8                     
 10343                           ;calibration.c: 29:                     LATDbits.LATD7 = 0;
 10344   003EA8  9E7C               	bcf	124,7,c	;volatile
 10345   003EAA                     l4678:
 10346                           
 10347                           ;calibration.c: 32:                 if(!PORTFbits.RF3){
 10348   003EAA  B68E               	btfsc	142,3,c	;volatile
 10349   003EAC  EF5A  F01F         	goto	u5181
 10350   003EB0  EF5C  F01F         	goto	u5180
 10351   003EB4                     u5181:
 10352   003EB4  EF8E  F01F         	goto	l125
 10353   003EB8                     u5180:
 10354   003EB8                     
 10355                           ;calibration.c: 33:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10356   003EB8  0E11               	movlw	17
 10357   003EBA  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10358   003EBC  0E3C               	movlw	60
 10359   003EBE  6E03               	movwf	??_adjust_calibration^0,c
 10360   003EC0  0ECB               	movlw	203
 10361   003EC2                     u5827:
 10362   003EC2  2EE8               	decfsz	wreg,f,c
 10363   003EC4  D7FE               	bra	u5827
 10364   003EC6  2E03               	decfsz	??_adjust_calibration^0,f,c
 10365   003EC8  D7FC               	bra	u5827
 10366   003ECA  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10367   003ECC  D7FA               	bra	u5827
 10368   003ECE  0000               	nop	
 10369   003ED0                     
 10370                           ;calibration.c: 34:                     *calibration_label = *calibration_label - 2;
 10371   003ED0  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10372   003ED4  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10373   003ED8  CFDE F003          	movff	postinc2,??_adjust_calibration
 10374   003EDC  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10375   003EE0  0EFE               	movlw	254
 10376   003EE2  2403               	addwf	??_adjust_calibration^0,w,c
 10377   003EE4  6E05               	movwf	(??_adjust_calibration+2)^0,c
 10378   003EE6  0EFF               	movlw	255
 10379   003EE8  2004               	addwfc	(??_adjust_calibration+1)^0,w,c
 10380   003EEA  6E06               	movwf	(??_adjust_calibration+3)^0,c
 10381   003EEC  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10382   003EF0  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10383   003EF4  C005  FFDE         	movff	??_adjust_calibration+2,postinc2
 10384   003EF8  C006  FFDD         	movff	??_adjust_calibration+3,postdec2
 10385   003EFC                     
 10386                           ;calibration.c: 35:                     LATHbits.LATH3 = 1;
 10387   003EFC  8680               	bsf	128,3,c	;volatile
 10388   003EFE                     
 10389                           ;calibration.c: 36:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10390   003EFE  0E11               	movlw	17
 10391   003F00  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10392   003F02  0E3C               	movlw	60
 10393   003F04  6E03               	movwf	??_adjust_calibration^0,c
 10394   003F06  0ECB               	movlw	203
 10395   003F08                     u5837:
 10396   003F08  2EE8               	decfsz	wreg,f,c
 10397   003F0A  D7FE               	bra	u5837
 10398   003F0C  2E03               	decfsz	??_adjust_calibration^0,f,c
 10399   003F0E  D7FC               	bra	u5837
 10400   003F10  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10401   003F12  D7FA               	bra	u5837
 10402   003F14  0000               	nop	
 10403   003F16                     
 10404                           ;calibration.c: 37:                     LATHbits.LATH3 = 0;
 10405   003F16  9680               	bcf	128,3,c	;volatile
 10406   003F18  EFE6  F01E         	goto	l124
 10407   003F1C                     l125:
 10408   003F1C  EFE6  F01E         	goto	l124
 10409   003F20                     l134:
 10410   003F20  0012               	return		;funcret
 10411   003F22                     __end_of_adjust_calibration:
 10412                           	callstack 0
 10413                           
 10414                           	psect	rparam
 10415   000000                     
 10416                           	psect	config
 10417                           
 10418                           ;Config register CONFIG1L @ 0x300000
 10419                           ;	External Oscillator mode Selection bits
 10420                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10421                           ;	Power-up default value for COSC bits
 10422                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10423   300000                     	org	3145728
 10424   300000  AA                 	db	170
 10425                           
 10426                           ;Config register CONFIG1H @ 0x300001
 10427                           ;	unspecified, using default values
 10428                           ;	Clock Out Enable bit
 10429                           ;	CLKOUTEN = 0x1, unprogrammed default
 10430                           ;	Clock Switch Enable bit
 10431                           ;	CSWEN = 0x1, unprogrammed default
 10432                           ;	Fail-Safe Clock Monitor Enable bit
 10433                           ;	FCMEN = 0x1, unprogrammed default
 10434   300001                     	org	3145729
 10435   300001  FF                 	db	255
 10436                           
 10437                           ;Config register CONFIG3L @ 0x300004
 10438                           ;	WDT Period Select bits
 10439                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10440                           ;	WDT operating mode
 10441                           ;	WDTE = OFF, WDT Disabled
 10442   300004                     	org	3145732
 10443   300004  9F                 	db	159
 10444                           
 10445                           ;Config register CONFIG3H @ 0x300005
 10446                           ;	unspecified, using default values
 10447                           ;	WDT Window Select bits
 10448                           ;	WDTCWS = 0x7, unprogrammed default
 10449                           ;	WDT input clock selector
 10450                           ;	WDTCCS = 0x7, unprogrammed default
 10451   300005                     	org	3145733
 10452   300005  FF                 	db	255
 10453                           tosu	equ	0xFFF
 10454                           tosh	equ	0xFFE
 10455                           tosl	equ	0xFFD
 10456                           stkptr	equ	0xFFC
 10457                           pclatu	equ	0xFFB
 10458                           pclath	equ	0xFFA
 10459                           pcl	equ	0xFF9
 10460                           tblptru	equ	0xFF8
 10461                           tblptrh	equ	0xFF7
 10462                           tblptrl	equ	0xFF6
 10463                           tablat	equ	0xFF5
 10464                           prodh	equ	0xFF4
 10465                           prodl	equ	0xFF3
 10466                           indf0	equ	0xFEF
 10467                           postinc0	equ	0xFEE
 10468                           postdec0	equ	0xFED
 10469                           preinc0	equ	0xFEC
 10470                           plusw0	equ	0xFEB
 10471                           fsr0h	equ	0xFEA
 10472                           fsr0l	equ	0xFE9
 10473                           wreg	equ	0xFE8
 10474                           indf1	equ	0xFE7
 10475                           postinc1	equ	0xFE6
 10476                           postdec1	equ	0xFE5
 10477                           preinc1	equ	0xFE4
 10478                           plusw1	equ	0xFE3
 10479                           fsr1h	equ	0xFE2
 10480                           fsr1l	equ	0xFE1
 10481                           bsr	equ	0xFE0
 10482                           indf2	equ	0xFDF
 10483                           postinc2	equ	0xFDE
 10484                           postdec2	equ	0xFDD
 10485                           preinc2	equ	0xFDC
 10486                           plusw2	equ	0xFDB
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        1
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160    130     158
    BANK1           256     52     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    backward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    backward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    S2339$buffer	PTR unsigned char  size(2) Largest target is 0

    S2339$source	PTR const unsigned char  size(2) Largest target is 0

    S350DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    S350DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@senddata(BANK1[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), motorR(BANK1[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@senddata(BANK1[20]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    switch_calibration@calibration_index	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    turnLEFT@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_color_cardCheck
    _turnRIGHT->_setMotorPWM
    _turnLEFT->_setMotorPWM
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lwdiv
    _sendStringSerial4->_sendCharSerial4
    _forward->_setMotorPWM
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   76264
                                            127 BANK0      3     3      0
                                              0 BANK1     52    52      0
                 _adjust_calibration
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
                 _switch_calibration
                           _turnLEFT
                          _turnRIGHT
 ---------------------------------------------------------------------------------
 (1) _turnRIGHT                                           18    14      4    5837
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLEFT                                            18    14      4    6917
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _switch_calibration                                   4     2      2     422
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    2977
                                             28 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2626
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    2276
                                             13 COMRAM    11     8      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                             18    14      4    5837
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_cardCheck                                     32    30      2   44885
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RGB_to_HSV                                          87    68     19   34610
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (3) _custom_floatmodulo                                  18    10      8   11664
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2656
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2767
                                             33 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _backward                                            18    14      4    6917
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2993
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     510
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms_function                                    3     1      2     631
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _adjust_calibration                                   6     4      2     484
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adjust_calibration
   _backward
     ___awdiv
     _delay_ms_function
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _color_cardCheck
     _RGB_to_HSV
       ___fladd
       ___fldiv
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
       ___fleq
       ___flge
       ___flmul
         ___fladd (ARG)
         ___fldiv (ARG)
         ___flsub (ARG)
         ___xxtofl (ARG)
       ___flsub
       _custom_floatmodulo
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
     ___flge
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     ___awdiv
     _delay_ms_function
     _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _switch_calibration
   _turnLEFT
     ___awdiv
     _delay_ms_function
     _setMotorPWM
   _turnRIGHT
     ___awdiv
     _delay_ms_function
     _setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     34      BF       7       74.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC      58        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 11:51:42 2024

                     _color_read_Red 468A                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 477A                                   l31 48D2  
                                 l40 4728                                   l50 4038  
                                 l34 4A38                                   l43 47C8  
                                 l60 19CC                                   l37 46D8  
                                 l70 1ABE                                   l62 1A26  
                                 l46 4778                                   l80 1E86  
                                 l72 1ACE                                   l64 1A36  
                                 l74 1B28                                   l58 19BC  
                                 l76 1B38                                   l87 2000  
                                 l99 1836                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                     _color_read_Clear 472A  
                   _color_read_Green 46DA                                  l105 183E  
                                l203 45B0                                  l124 3DCC  
                                l125 3F1C                                  l134 3F20  
                                l206 498E                                  l230 3516  
                                l142 4472                                  l128 3E40  
                                l216 3DCA                                  l209 49A0  
                                l137 43C2                                  l138 4430  
                                l252 3AC6                                  l244 3A06  
                                l421 49F2                                  l430 4A84  
                                l238 35D6                                  l415 49CA  
                                l424 4A8E                                  l280 377C  
                                l272 36BC                                  l433 4A7A  
                                l418 49CC                                  l266 3922  
                                l258 3862                                  l523 4A18  
                                l427 4A98                                  l436 4892  
                                l375 2568                                  l473 4A56  
                                l482 4A5A                                  l491 4972  
                                l820 413E                                  l485 4A6E  
                                l754 4306                                  l782 451C  
                                l793 4242                                  l788 41FC  
                                wreg 0FE8                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
         __end_of_adjust_calibration 3F22                         ___fltol@exp1 000A  
                               l1021 4624                                 l1014 461C  
                               l1110 309E                                 l1031 4688  
                               l1024 4680                                 l1105 327A  
                               l1201 490E                                 l1107 30DA  
                               l1051 27E6                                 l1116 3120  
                               l1060 2AB6                                 l1052 27D4  
                               l1141 2EE0                                 l1053 279A  
                               l1118 3198                                 l1119 3186  
                               l1144 2D72                                 l3000 26F8  
                               l1137 2B7C                                 l1154 2EA2  
                               l1146 2DEA                                 l3010 270C  
                               l3002 26FC                                 l1147 2DD8  
                               l3100 2952                                 l1068 2900  
                               l3020 2720                                 l3012 2710  
                               l3004 2700                                 l1077 29D0  
                               l1093 480E                                 l1181 342E  
                               l1245 4850                                 l1078 29BE  
                               l3110 297E                                 l3102 2954  
                               l3030 2734                                 l3022 2724  
                               l3014 2714                                 l3006 2704  
                               l1238 3C5E                                 l3200 2FC4  
                               l3120 29B6                                 l3104 2962  
                               l3112 2980                                 l3040 2792  
                               l3024 2728                                 l3016 2718  
                               l3008 2708                                 l3032 2738  
                               l1192 33C6                                 l4000 15C2  
                               l1185 336A                                 l1257 43C0  
                               l3202 2FD4                                 l3210 2FF4  
                               l3130 2A34                                 l3106 296A  
                               l3114 298E                                 l3050 27C8  
                               l3042 27A8                                 l3034 273C  
                               l3026 272C                                 l3018 271C  
                               l1178 32D2                                 l4010 16BC  
                               l4002 15F4                                 l3220 3032  
                               l3212 3004                                 l3204 2FDC  
                               l3300 2AC4                                 l3140 2A7A  
                               l3124 29E0                                 l3132 2A36  
                               l3116 2992                                 l3108 296E  
                               l3060 2818                                 l3052 27D2  
                               l3044 27B4                                 l3036 2766  
                               l3028 2730                                 l4020 1792  
                               l4012 16EE                                 l4004 1626  
                               l4100 4588                                 l1268 4A9A  
                               l3230 307A                                 l3222 3042  
                               l3214 3004                                 l3206 2FE0  
                               l3310 2B04                                 l3302 2AD2  
                               l3150 2AA4                                 l3142 2A88  
                               l3134 2A46                                 l3126 29EC  
                               l3118 29A0                                 l3070 2854  
                               l3062 2828                                 l3054 27F4  
                               l3046 27B8                                 l3038 2782  
                               l4022 17C4                                 l4006 1658  
                               l4014 16FC                                 l4110 45AA  
                               l4102 4592                                 l3240 30C8  
                               l3232 308E                                 l3224 3052  
                               l3160 2EE2                                 l3400 2E06  
                               l3320 2B34                                 l3312 2B0A  
                               l3304 2AD4                                 l3152 2AA6  
                               l3144 2A8E                                 l3136 2A56  
                               l3128 29FA                                 l3080 289A  
                               l3072 2862                                 l3064 2836  
                               l3056 2804                                 l3048 27C6  
                               l4024 17F6                                 l4016 172E  
                               l4008 168A                                 l4112 45AC  
                               l4104 4594                                 l5000 2178  
                               l3250 3110                                 l3242 30D8  
                               l3234 309C                                 l3226 3062  
                               l3218 3018                                 l3170 2F1E  
                               l3162 2EEE                                 l3410 2E70  
                               l3402 2E14                                 l3330 2B6C  
                               l3322 2B36                                 l3314 2B1A  
                               l3306 2AE4                                 l3146 2A90  
                               l3138 2A76                                 l3090 2916  
                               l3082 28CE                                 l3074 2864  
                               l3066 2844                                 l4026 1828  
                               l4018 1760                                 l4114 45AE  
                               l4106 459E                                 l5010 21BC  
                               l5002 2190                                 l3500 45D4  
                               l3260 3150                                 l3252 311E  
                               l3244 30EA                                 l3236 30A8  
                               l3228 306A                                 l3180 2F4E  
                               l3172 2F2E                                 l3164 2EFC  
                               l3420 2EC6                                 l3412 2E8A  
                               l3404 2E3E                                 l3340 2BBC  
                               l3332 2B8C                                 l3324 2B46  
                               l3316 2B20                                 l3308 2AF4  
                               l3148 2A96                                 l3092 2926  
                               l3084 28D0                                 l3076 286E  
                               l3068 2850                                 l3156 49CC  
                               l4028 1836                                 l4108 45A0  
                               l4300 4A3A                                 l5100 2534  
                               l5020 21D4                                 l5012 21C8  
                               l5004 219C                                 l3510 460E  
                               l3502 45DC                                 l3270 31C2  
                               l3262 317E                                 l3246 3100  
                               l3254 3130                                 l3238 30C6  
                               l3190 2F84                                 l3182 2F54  
                               l3174 2F30                                 l3166 2EFE  
                               l3414 2EA6                                 l3422 2ECC  
                               l3406 2E42                                 l3350 2C0C  
                               l3342 2BC6                                 l3334 2B9C  
                               l3326 2B56                                 l3318 2B26  
                               l3086 28E0                                 l3078 2874  
                               l3430 47DA                                 l3158 49DC  
                               l4310 4A54                                 l4302 4A44  
                               l5102 253A                                 l5110 2574  
                               l5030 2200                                 l5022 21EC  
                               l5014 21CC                                 l3512 4610  
                               l3504 45EA                                 l3280 323A  
                               l3272 31EC                                 l3256 313E  
                               l3248 3106                                 l3192 2F94  
                               l3184 2F62                                 l3168 2F0E  
                               l3176 2F38                                 l3440 44E0  
                               l3424 2ED0                                 l3416 2EB6  
                               l3408 2E5C                                 l3360 2C4E  
                               l3352 2C18                                 l3344 2BDC  
                               l3328 2B66                                 l3096 293A  
                               l3088 28F0                                 l3600 4A7C  
                               l4304 4A46                                 l3520 4640  
                               l4320 4900                                 l4312 48D4  
                               l5120 25D2                                 l5112 257E  
                               l5040 223E                                 l5032 2214  
                               l5024 21F0                                 l5016 21D0  
                               l5008 21B0                                 l3514 4616  
                               l3506 45F0                                 l3290 3270  
                               l3282 3256                                 l3266 31A8  
                               l3274 31F0                                 l3258 3142  
                               l3194 2F96                                 l3186 2F64  
                               l3178 2F48                                 l3442 44F0  
                               l3434 4474                                 l3418 2EC4  
                               l3370 2CB0                                 l3362 2C5E  
                               l3354 2C26                                 l3346 2BE8  
                               l3338 2BB0                                 l3098 2944  
                               l3450 403A                                 l3610 4858  
                               l3602 4A80                                 l4090 452E  
                               l4306 4A50                                 l4330 495A  
                               l3530 467A                                 l3522 4648  
                               l4314 48E0                                 l5122 25EA  
                               l5106 2568                                 l5050 2296  
                               l5042 224E                                 l5034 2226  
                               l5026 21FC                                 l5018 21D2  
                               l3508 4606                                 l3284 325A  
                               l3276 320A                                 l3268 31B4  
                               l3188 2F74                                 l3196 2F9E  
                               l3444 4514                                 l3436 44A2  
                               l3380 2D58                                 l3372 2CCC  
                               l3364 2C78                                 l3356 2C32  
                               l3348 2C00                                 l3428 47CA  
                               l3460 4090                                 l3452 4050  
                               l3540 32F8                                 l3532 327E  
                               l3612 4860                                 l3604 4A90  
                               l4092 4554                                 l4308 4A52  
                               l4324 4944                                 l3524 4656  
                               l3516 4626                                 l3700 3C2C  
                               l4316 48E8                                 l5116 259E  
                               l5060 22EE                                 l5052 22A6  
                               l5044 2250                                 l5036 222A  
                               l5028 21FE                                 l3286 3268  
                               l3278 3220                                 l3198 2FAE  
                               l3446 451A                                 l3438 44B2  
                               l3390 2D94                                 l3382 2D62  
                               l3374 2CF6                                 l3366 2C88  
                               l3358 2C42                                 l3462 40A0  
                               l3550 3352                                 l3534 328E  
                               l3630 3FB8                                 l3622 3F22  
                               l3614 4868                                 l3606 4A94  
                               l4094 4558                                 l4326 4948  
                               l3526 466C                                 l3518 4638  
                               l4318 48F0                                 l5118 25C6  
                               l5062 22FE                                 l5070 234A  
                               l5054 22A8                                 l5046 2266  
                               l5038 222C                                 l3288 326E  
                               l3392 2DA2                                 l3384 2D70  
                               l3376 2D2C                                 l3368 2CA4  
                               l3472 40CA                                 l3464 40A4  
                               l3456 4064                                 l3560 33B6  
                               l3552 3354                                 l3544 330C  
                               l3536 329C                                 l3632 4028  
                               l3624 3F54                                 l3800 1E96  
                               l3616 488E                                 l3608 4854  
                               l3720 49B2                                 l4096 457C  
                               l4088 451E                                 l4328 4956  
                               l3528 4674                                 l3704 3C38  
                               l5080 23F4                                 l5072 235E  
                               l5064 2300                                 l5056 22BE  
                               l5048 2282                                 l3650 41BC  
                               l3642 4140                                 l3394 2DD0  
                               l3386 2D82                                 l3378 2D3A  
                               l3298 2AB8                                 l3490 412E  
                               l3482 40F2                                 l3474 40D4  
                               l3466 40B2                                 l3458 408E  
                               l3570 340E                                 l3562 33D4  
                               l3554 3360                                 l3546 3314  
                               l3538 32E2                                 l3810 1F90  
                               l3802 1ECA                                 l3618 4890  
                               l3730 468A                                 l3722 49B4  
                               l4098 4586                                 l5090 24B0  
                               l5082 2410                                 l5074 23D4  
                               l5066 2316                                 l5058 22DA  
                               l3636 49F4                                 l3660 4240  
                               l3652 41CA                                 l3644 416E  
                               l3388 2D90                                 l3484 40FE  
                               l3476 40DE                                 l3572 341C  
                               l3564 33D6                                 l3556 339C  
                               l3548 3320                                 l3628 3F68  
                               l3812 1FC4                                 l3804 1EE2  
                               l3732 46D0                                 l3724 49B6  
                               l3716 49A2                                 l3900 48B2  
                               l3580 4318                                 l5156 3C1E  
                               l4700 443E                                 l5092 24E2  
                               l5084 2442                                 l5076 23E2  
                               l5068 232E                                 l3814 4974  
                               l3494 45B2                                 l3638 4A10  
                               l3654 41DC                                 l3646 417E  
                               l3398 2DFA                                 l3486 410E  
                               l3574 341E                                 l3566 33DA  
                               l3558 33A8                                 l3806 1F14  
                               l3742 477A                                 l3750 4770  
                               l3726 49B8                                 l3718 49AC  
                               l3910 48CC                                 l3902 48BC  
                               l4710 345A                                 l3582 4328  
                               l3670 3B04                                 l4702 4456  
                               l5094 24FE                                 l5086 2460  
                               l3840 4244                                 l3816 4978  
                               l3496 45BA                                 l4640 3CE4  
                               l3656 41EA                                 l3648 41AC  
                               l2960 2614                                 l3488 411E  
                               l3568 33FE                                 l3808 1F30  
                               l3760 19E0                                 l3592 4A86  
                               l3744 47C0                                 l3736 46DA  
                               l3920 0EF2                                 l3728 4A1C  
                               l3912 48CE                                 l3904 48C6  
                               l4720 34BE                                 l4712 345A  
                               l3584 4332                                 l3680 3B58  
                               l3672 3B08                                 l3664 3AC8  
                               l4704 4470                                 l4800 379E  
                               l5096 2510                                 l5088 2492  
                               l4650 3DDA                                 l3850 4270  
                               l3842 4248                                 l3818 4988  
                               l3498 45CC                                 l4642 3CE8  
                               l4634 3C60                                 l3658 423A  
                               l2962 2624                                 l2970 264E  
                               l2954 25F8                                 l3770 1AE2  
                               l3762 1A12                                 l3754 1840  
                               l3594 4A8A                                 l3738 4720  
                               l3930 0FC4                                 l3922 0EFC  
                               l3914 48D0                                 l3906 48C8  
                               l4730 3504                                 l4722 34CA  
                               l4714 3476                                 l4706 3432  
                               l3586 434E                                 l3578 4308  
                               l3690 3BC6                                 l3682 3B5C  
                               l3674 3B12                                 l3666 3AEE  
                               l4810 37FE                                 l4802 37A6  
                               l5098 251C                                 l4660 3E20  
                               l4652 3DE8                                 l3860 429E  
                               l3852 4278                                 l3844 4256  
                               l4644 3D2A                                 l4636 3C7C  
                               l2980 267E                                 l2972 265E  
                               l2964 2634                                 l2956 2604  
                               l3780 1BF6                                 l3772 1B14  
                               l3764 1A46                                 l3756 1976  
                               l3596 4A72                                 l3748 472A  
                               l3940 109A                                 l3932 0FF6  
                               l3924 0F2E                                 l3916 0E08  
                               l3908 48CA                                 l4740 3578  
                               l4732 3512                                 l4724 34D6  
                               l4716 3482                                 l4708 3452  
                               l3836 4A5A                                 l3588 4380  
                               l3692 3BE4                                 l3684 3B84  
                               l3676 3B32                                 l3668 3AF6  
                               l4820 3844                                 l4812 380A  
                               l4804 37A6                                 l4670 3E66  
                               l4662 3E38                                 l4654 3E00  
                               l3870 42D8                                 l3862 42A6  
                               l3854 427C                                 l3846 425E  
                               l4646 3D46                                 l4638 3CD0  
                               l2990 26BE                                 l2982 268C  
                               l2974 2664                                 l2966 2644  
                               l2958 2612                                 l3790 1D44  
                               l3782 1C4E                                 l3774 1B48  
                               l3766 1A78                                 l3758 19A8  
                               l3598 4A76                                 l3942 10CC  
                               l3950 1170                                 l3934 1028  
                               l3926 0F60                                 l3918 0EA0  
                               l4750 35BE                                 l4742 3582  
                               l4734 353E                                 l4718 34B2  
                               l4726 34DA                                 l3838 4A6A  
                               l3694 3BE6                                 l3686 3BA0  
                               l3678 3B4A                                 l4830 38AC  
                               l4822 3850                                 l4814 3816  
                               l4806 37C2                                 l4910 2002  
                               l4680 3EB8                                 l4672 3E8E  
                               l4664 3E3A                                 l4656 3E0E  
                               l3880 42FE                                 l3872 42DA  
                               l3864 42B4                                 l3856 4284  
                               l3848 4262                                 l4648 3D8A  
                               l4760 3966                                 l4752 3926  
                               l2992 26C0                                 l2984 268E  
                               l2976 2676                                 l2968 2646  
                               l3792 1DA0                                 l3784 1C82  
                               l3776 1BAE                                 l3768 1AAA  
                               l3960 1246                                 l3952 11A2  
                               l3944 10FE                                 l3928 0F92  
                               l3936 1036                                 l4744 358E  
                               l4736 3556                                 l4728 34F8  
                               l3688 3BB2                                 l4832 38C4  
                               l4840 38F2                                 l4824 385E  
                               l4816 3822                                 l4808 37CE  
                               l4920 201C                                 l4912 2002  
                               l4682 3ED0                                 l4674 3E90  
                               l4658 3E1C                                 l3874 42E0  
                               l3866 42BA                                 l3858 4296  
                               l4770 39C6                                 l4762 3972  
                               l4754 3942                                 l2986 269E  
                               l2994 26C8                                 l2978 2678  
                               l3794 1DD2                                 l3786 1CBA  
                               l3778 1BC4                                 l3970 1340  
                               l3962 1278                                 l3954 11D4  
                               l3946 1130                                 l3938 1068  
                               l4746 359A                                 l4738 3560  
                               l3698 3BFC                                 l3890 4848  
                               l4690 43D0                                 l4842 390A  
                               l4834 38CE                                 l4826 388A  
                               l4818 3826                                 l4850 3600  
                               l4930 203C                                 l4922 2024  
                               l4914 200E                                 l4684 3EFC  
                               l4676 3EA8                                 l4668 3E4E  
                               l3868 42D0                                 l3876 42E6  
                               l4780 3A2E                                 l4764 39A2  
                               l4772 39CA                                 l4756 394A  
                               l2996 26D8                                 l2988 26AE  
                               l3796 1E2A                                 l3788 1CEC  
                               l3980 1416                                 l3964 12AA  
                               l3972 134E                                 l3956 1206  
                               l3948 1162                                 l4748 35A6  
                               l3884 4810                                 l4692 43E8  
                               l4836 38DA                                 l4828 38A2  
                               l4860 3670                                 l4852 361C  
                               l4844 35DA                                 l4940 205A  
                               l4932 2040                                 l4924 202C  
                               l4916 2014                                 l4686 3EFE  
                               l4678 3EAA                                 l3878 42F6  
                               l4790 3A7E                                 l4782 3A46  
                               l4774 39E8                                 l4766 39AE  
                               l4758 394A                                 l2998 26EA  
                               l3798 1E86                                 l3990 14EC  
                               l3982 1448                                 l3974 1380  
                               l3966 12DC                                 l3958 1214  
                               l3894 4894                                 l3886 4818  
                               l4694 4410                                 l4838 38E6  
                               l4870 36B8                                 l4862 367C  
                               l4854 3628                                 l4846 35F8  
                               l4950 2066                                 l4942 205C  
                               l4934 2048                                 l4926 2034  
                               l4918 2018                                 l4688 3F16  
                               l4792 3A8A                                 l4784 3A50  
                               l4776 39F4                                 l4768 39BA  
                               l3992 151E                                 l3984 147A  
                               l3976 13B2                                 l3968 130E  
                               l3896 4898                                 l3888 4828  
                               l4696 4412                                 l4880 3728  
                               l4872 36E4                                 l4856 3658  
                               l4864 3680                                 l4848 3600  
                               l4960 2078                                 l4952 2068  
                               l4944 205E                                 l4936 2050  
                               l4928 2038                                 l4786 3A68  
                               l4794 3A96                                 l4778 3A02  
                               l3994 1550                                 l3978 13E4  
                               l3986 1488                                 l3898 48A2  
                               l4698 442A                                 l4882 3734  
                               l4874 36FC                                 l4866 369E  
                               l4858 3664                                 l4970 208C  
                               l4962 207C                                 l4954 206A  
                               l4946 2060                                 l4938 2058  
                               l4796 3AAE                                 l4788 3A72  
                               l3996 1582                                 l3988 14BA  
                               l4884 3740                                 l4876 3706  
                               l4868 36AA                                 l4980 20D0  
                               l4972 2090                                 l4964 2080  
                               l4956 2070                                 l4948 2062  
                               l3998 15B4                                 l4798 3780  
                               l4878 371E                                 l4886 374C  
                               l4990 2128                                 l4982 20E4  
                               l4974 20A0                                 l4966 2084  
                               l4958 2074                                 l4888 3764  
                               l4992 2134                                 l4984 20F0  
                               l4976 20AC                                 l4968 2088  
                               l4994 214C                                 l4986 2108  
                               l4978 20C4                                 l4996 2158  
                               l4988 2114                                 l4998 216C  
                               STR_1 0E01                                 u3000 2F0E  
                               u3001 2F0A                                 u3010 2F1E  
                               u3011 2F1A                                 u3100 30EA  
                               u3020 2F62                                 u3101 30E6  
                               u3021 2F5E                                 u3110 3100  
                               u3030 2F74                                 u3111 30FC  
                               u3031 2F70                                 u4000 4256  
                               u3200 323A                                 u3120 311E  
                               u3040 2F84                         _BAUD4CONbits 0EE9  
                               u4001 4252                                 u3201 3236  
                               u3121 311A                                 u3041 2F80  
                               u4010 4270                                 u3210 3268  
                               u3130 313E                                 u3050 2FC4  
                               u4011 426C                                 u3211 3264  
                               u3131 313A                                 u3051 2FC0  
                               u4020 4296                                 u3140 3150  
                               u3060 3004                                 u3300 2D16  
                               u3220 2AD2                                 u4100 0FC4  
                               u4021 4292                                 u3141 314C  
                               u3061 3000                                 u3221 2ACE  
                               u4101 0FC0                                 u4030 42B4  
                               u3150 317E                                 u3070 307A  
                               u3310 2D70                                 u3230 2AE4  
                               u4110 0FF6                                 u4031 42B0  
                               u3151 317A                                 u3071 3076  
                               u3311 2D6C                                 u3231 2AE0  
                               u4111 0FF2                                 u4040 42D0  
                               u3160 3194                                 u3080 309C  
                               u3400 2EC4                                 u3320 2D90  
                               u3240 2AF4                                 u2600 2634  
                               u4200 11D4                                 u4120 1028  
                               u4041 42CC                                 u3161 3190  
                               u3081 3098                                 u3401 2EC0  
                               u3321 2D8C                                 u3305 2D0C  
                               u3241 2AF0                                 u2601 2630  
                               u4201 11D0                                 u4121 1024  
                               u4050 42F6                                 u3170 31A8  
                               u3090 30C6                                 u3410 44A2  
                               u3330 2DA2                                 u3250 2B34  
                               u2610 2676                                 u4210 1206  
                               u4130 1068                                 _T2PR 0FBC  
                               u4051 42F2                                 u3171 31A4  
                               u3091 30C2                                 u3411 449E  
                               u3331 2D9E                                 u3251 2B30  
                               u2611 2672                                 u4211 1202  
                               u4131 1064                                 u3180 31C2  
                               u3420 44E0                                 u3340 2DD0  
                               u3260 2B46                                 u2700 27A8  
                               u2620 268C                                 u3500 411E  
                               u4300 13E4                                 u4220 1246  
                               u4140 109A                                 u4060 4848  
                               u3181 31BE                                 u3421 44DC  
                               u3341 2DCC                                 u3261 2B42  
                               u2701 27A4                                 u2621 2688  
                               u3501 411A                                 u4301 13E0  
                               u4221 1242                                 u4141 1096  
                               u4061 4844                                 u3510 45CC  
                               u5110 3C7C                                 u3190 320A  
                               u3430 4514                                 u3350 2DE6  
                               u3270 2B56                                 u2710 27C6  
                               u2630 269E                                 u4310 1416  
                               u4230 1278                                 u4150 10CC  
                               u4070 0F2E                                 u3511 45C8  
                               u5111 3C78                                 u3191 3206  
                               u3431 4510                                 u3351 2DE2  
                               u3271 2B52                                 u2711 27C2  
                               u2631 269A                                 u4311 1412  
                               u4231 1274                                 u4151 10C8  
                               u4071 0F2A                                 u3520 45EA  
                               u5120 3D46                                 u3360 2DFA  
                               u3280 2B8C                                 u2800 2916  
                               u2720 27E6                                 u2640 26AE  
                               u3440 4050                                 u3600 334E  
                               u4400 15F4                                 u4320 1448  
                               u4240 12AA                                 u4160 10FE  
                               u4080 0F60                                 u5200 443E  
                               u3521 45E6                                 u5121 3D42  
                               u3361 2DF6                                 u3281 2B88  
                               u2801 2912                                 u2721 27E2  
                               u2641 26AA                                 u3441 404C  
                               u3601 334A                                 u4401 15F0  
                               u4321 1444                                 u4241 12A6  
                               u4161 10FA                                 u4081 0F5C  
                               u5201 443A                                 u5130 3DDA  
                               u3530 4606                                 u3370 2E14  
                               u3290 2B9C                                 u2810 2926  
                               u2730 27F4                                 u2650 26EA  
                               u3450 4084                                 u3610 3398  
                               u4410 1626                                 u4330 147A  
                               u4250 12DC                                 u4170 1130  
                               u4090 0F92                                 u5210 34F8  
                               u5131 3DD6                                 u3531 4602  
                               u3371 2E10                                 u3291 2B98  
                               u2811 2922                                 u2731 27F0  
                               u2651 26E6                                 u3611 3394  
                               u4411 1622                                 u4331 1476  
                               u4251 12D8                                 u4171 112C  
                               u4091 0F8E                                 u5211 34F4  
                               u5140 3DE8                                 u5300 3A68  
                               u3380 2E5C                                 u2900 29FA  
                               u2820 2952                                 u2740 2804  
                               u2660 26F8                                 u2580 2612  
                               u3460 40B2                                 u3620 33B6  
                               u4500 17F6                                 u4420 1658  
                               u4340 14BA                                 u4260 130E  
                               u4180 1162                                 u5220 353A  
                               u3540 4638                                 u3700 4380  
                               u5141 3DE4                                 u5301 3A64  
                               u3381 2E58                                 u2901 29F6  
                               u2821 294E                                 u2741 2800  
                               u2661 26F4                                 u2581 260E  
                               u3461 40AE                                 u3621 33B2  
                               u4501 17F2                                 u4421 1654  
                               u4341 14B6                                 u4261 130A  
                               u4181 115E                                 u5221 3536  
                               u3541 4634                                 u3701 437C  
                               u5150 3E0E                                 u5310 3AAE  
                               u3390 2E8A                                 u2910 2A34  
                               u2830 2962                                 u2750 2836  
                               u2670 2766                                 u2590 2624  
                               u3470 40C6                                 u3630 33C6  
                               u3710 487C                                 u4510 1828  
                               u4430 168A                                 u4350 14EC  
                               u4270 1340                                 u4190 11A2  
                               u5230 3556                                 u3550 4656  
                               u5151 3E0A                                 u5311 3AAA  
                               u3391 2E86                                 u2911 2A30  
                               u2831 295E                                 u2751 2832  
                               u2671 2762                                 u2591 2620  
                               u3471 40C2                                 u3455 407A  
                               u3631 33C2                                 u3711 4874  
                               u4511 1824                                 u4431 1686  
                               u4351 14E8                                 u4271 133C  
                               u4191 119E                                 u5231 3552  
                               u3551 4652                                 u5160 3E1C  
                               u5320 3AC6                                 u2920 2A46  
                               u2840 297E                                 u2760 2844  
                               u2680 277E                                 u3480 40EE  
                               u3640 33D4                                 u4440 16BC  
                               u4360 151E                                 u4280 1380  
                               u5240 3578                                 u3560 466C  
                               u3800 3B32                                 u5400 36E0  
                               u5161 3E18                                 u5321 3AC2  
                               u2921 2A42                                 u2841 297A  
                               u2761 2840                                 u2681 2778  
                               u3481 40EA                                 u3641 33D0  
                               u4441 16B8                                 u4361 151A  
                               u4281 137C                                 u5241 3574  
                               u3561 4668                                 u3801 3B2E  
                               u5401 36DC                                 u5170 3E4E  
                               u2930 2A56                                 u2850 298E  
                               u2770 2862                                 u2690 2780  
                               u3490 410E                                 u3650 340E  
                               u3570 328E                                 u3730 3F54  
                               u4450 16EE                                 u4370 1550  
                               u4290 13B2                                 u5250 35BE  
                               u3810 3BB2                                 u5330 3844  
                               u5410 36FC                                 u5171 3E4A  
                               u2931 2A52                                 u2851 298A  
                               u2771 285E                                 u3491 410A  
                               u3651 340A                                 u3571 328A  
                               u3731 3F50                                 u4451 16EA  
                               u4371 154C                                 u4291 13AE  
                               u5251 35BA                                 u3811 3BAE  
                               u5331 3840                                 u5411 36F8  
                               u5180 3EB8                                 u3740 416E  
                               u2940 2A76                                 u2860 29A0  
                               u2780 289A                                 u3660 341C  
                               u3580 329C                                 u3900 1BAE  
                               u4460 172E                                 u4380 1582  
                               u5260 35D6                                 u3820 3BC2  
                               u5340 3886                                 u5420 371E  
                               u5500 20E4                                 u5181 3EB4  
                               u3741 416A                                 u2941 2A72  
                               u2861 299C                                 u2781 2896  
                               u3661 3418                                 u3581 3298  
                               u3901 1BAA                                 u4461 172A  
                               u4381 157E                                 u5261 35D2  
                               u3821 3BBE                                 u5341 3882  
                               u5421 371A                                 u5501 20E0  
                               u5270 39E8                                 u3750 41AC  
                               u2950 2A88                                 u2870 29B6  
                               u2790 28E0                                 u3590 32F8  
                               u3910 1BF6                                 u4470 1760  
                               u4390 15B4                                 u3670 4318  
                               u3830 3BF8                                 u5190 43D0  
                               u5350 38A2                                 u5430 3764  
                               u5510 2128                                 u5271 39E4  
                               u3751 41A8                                 u2951 2A84  
                               u2871 29B2                                 u2791 28DC  
                               u3591 32F4                                 u3911 1BF2  
                               u4471 175C                                 u4391 15B0  
                               u3671 4314                                 u3831 3BF4  
                               u5191 43CC                                 u5351 389E  
                               u5431 3760                                 u5511 2124  
                               u5280 3A2A                                 u3760 41CA  
                               u2960 2AA4                                 u2880 29CC  
                               u3920 1CEC                                 u3840 1976  
                               u3728 487E                                 u4480 1792  
                               u3680 4328                                 u5360 38C4  
                               u5440 377C                                 u5600 23F0  
                               u5520 216C                                 u5281 3A26  
                               u3761 41C6                                 u2961 2AA0  
                               u2881 29C8                                 u3921 1CE8  
                               u3841 1972                                 u4481 178E  
                               u3681 4324                                 u5361 38C0  
                               u5441 3778                                 u5601 23EC  
                               u5521 2168                                 u5290 3A46  
                               u3770 41EA                                 u2890 29E0  
                               u3930 1DD2                                 u3850 19A8  
                               u2970 49DC                                 u4490 17C4  
                               u3690 434E                                 u5370 390A  
                               u5610 2410                                 u5530 21B0  
                               u5291 3A42                                 u3771 41E6  
                               u2891 29DC                                 u3931 1DCE  
                               u3851 19A4                                 u2971 49D8  
                               u4491 17C0                                 u3691 434A  
                               u5371 3906                                 u5611 240C  
                               u5531 21AC                                 u3780 423A  
                               u3940 1E96                                 u3860 1A12  
                               u2980 49F2                                 u5380 3922  
                               u5620 2460                                 u3781 4236  
                               u3941 1E92                                 u3861 1A0E  
                               u2981 49EE                                 u5381 391E  
                               u5621 245C                                 u5541 21C2  
                               u2990 2EFC                                 u3950 1F14  
                               u3870 1A78                                 u3790 3AEE  
                               u5390 369E                                 u5630 24B0  
                               u5550 2214                                 u2991 2EF8  
                               u3951 1F10                                 u3871 1A74  
                               u3791 3AEA                                 u5391 369A  
                               u5631 24AC                                 u5551 2210  
                               u3960 49A0                                 u3880 1AAA  
                               u4840 4972                                 u5640 24FE  
                               u5560 223E                                 u3961 499C  
                               u3881 1AA6                                 u4841 496E  
                               u5641 24FA                                 u5561 223A  
                               u3890 1B14                                 u5650 2564  
                               u5570 2296                                 u5490 20A0  
                               u3891 1B10                                 u5707 43DA  
                               u5651 2560                                 u5571 2292  
                               u5491 209C                                 u5660 259A  
                               u5580 22EE                                 u5717 441C  
                               u5661 2596                                 u5581 22EA  
                               u3990 4A6A                                 u5590 235E  
                               u5807 3E58                                 u3991 4A66  
                               u5727 4448                                 u5591 235A  
                               u5817 3E9A                                 u5737 4462  
                               u5827 3EC2                                 u5747 350A  
                               u5837 3F08                                 u5757 48A8  
                               u5677 25DE                                 u5767 39FA  
                               u5687 36B0                                 u5777 497E  
                               u5697 3856                                 u5787 3DF2  
                               u5797 3E2A                                 _dbuf 013C  
                               _main 2002                                 _prec 00F8  
                               _temp 00FD                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               prodh 0FF4                                 prodl 0FF3  
                               start 0000                      ___fldiv@new_exp 0033  
             __end_of_color_read_Red 46DA                         ___param_bank 0000  
            __end_of_color_cardCheck 1840                        ___fltol@sign1 0009  
                    __end_of___fladd 2AB8                                ?_main 0001  
                    __end_of___fldiv 327C                      __end_of___awdiv 4308  
                    __end_of___flmul 2EE2                      __end_of___flsub 4810  
                    __end_of___fltol 4140                      ___awdiv@divisor 0003  
                        ?_RGB_to_HSV 006A                      __end_of___lwdiv 4626  
                    __end_of___lwmod 468A                      ___awdiv@counter 0005  
                       vfpfcnvrt@fmt 000F              __end_of_sendCharSerial4 4A70  
         __end_of_I2C_2_Master_Start 4A90           __end_of_I2C_2_Master_Write 4A7C  
                              _flags 00FA                         main@senddata 018B  
                              _fputc 4308                      __end_of_forward 35D8  
                              _width 00F6                                _putch 4A9A  
                              main@i 01BD                                main@j 01B5  
                              tablat 0FF5                                status 0FD8  
                    __end_of_sprintf 4910              __end_of_color_read_Blue 47CA  
              _I2C_2_Master_RepStart 4A90                   _switch_calibration 43C2  
                    ?_color_read_Red 0005                      __initialization 4910  
                    main@Color_Value 01BB                         __end_of_main 25F8  
                ?_switch_calibration 0001                               ??_main 00DF  
                      __activetblptr 0003                  main@Operation_Count 01BA  
                       ?_setMotorPWM 000E                               ?_fputc 0001  
                             _CCPR1H 0FAA                               _CCPR2H 0FA6  
                             _CCPR3H 0F25                               _CCPR4H 0F21  
                   ___awdiv@dividend 0001                 ??_switch_calibration 0003  
                             ?_putch 0001                               _RC0PPS 0E62  
                             _RC4REG 0EE3                               _RE2PPS 0E74  
                             _RD5PPS 0E6F                               _RC7PPS 0E69  
                             _RD6PPS 0E70                               _RE4PPS 0E76  
                             _RG6PPS 0E88                     __end_of_backward 3AC8  
           __end_of_color_click_init 48D4                               _RX4PPS 0E15  
                   forward@max_power 0020                               _TX4REG 0EE4  
                   __end_of___xxtofl 3430                         _CCPTMRS0bits 0FAD  
                       vfprintf@cfmt 001C                               ___flge 4140  
                             ___fleq 4474                     ?_color_cardCheck 005C  
                          ??___fladd 0009                               ___wmul 49F4  
                          ??___fldiv 002A                            ??___awdiv 0005  
                          ??___flmul 0043                            ??___flsub 0022  
                          ??___fltol 0005                            ??___lwdiv 000B  
                          ??___lwmod 0005        delay_ms_function@milliseconds 0001  
                             clear_0 4928                               clear_1 4934  
                   ___awdiv@quotient 0007                               _motorL 0179  
                             _motorR 0170                               isa$std 0001  
                             fputc@c 0001                            ??_forward 0018  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                   ?_sendCharSerial4 0001                               putch@c 0001  
                   __end_of_vfprintf 4852                    ??_initDCmotorsPWM 0003  
                          ??_sprintf 0022                     __end_of_turnLEFT 3924  
                         ___flge@ff1 0001                           ___flge@ff2 0005  
                       ___xxtofl@arg 0016                         ___xxtofl@exp 0015  
                       ___xxtofl@val 000C                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 493E             __end_of_color_read_Clear 477A  
           __end_of_color_read_Green 472A               ?_I2C_2_Master_RepStart 0001  
                      ___rparam_used 0001                           ___fltol@f1 0001  
                   ?_color_read_Blue 0005                       __pcstackCOMRAM 0001  
                       __pidataBANK0 4A9C                        __end_of_fputc 43C2  
                      __end_of_putch 4A9C                    forward@delay_time 0022  
                     _RGB_to_HSV$321 009D                       _RGB_to_HSV$322 00A1  
                     _RGB_to_HSV$318 0091                       _RGB_to_HSV$319 0095  
                 RGB_to_HSV@deltaRGB 00AD                              ??_fputc 0004  
                            ??_putch 0001                           __pbssBANK0 00E2  
                         __pbssBANK1 0100                    _color_writetoaddr 4A1A  
                       _T2CLKCONbits 0FBF                   _adjust_calibration 3DCC  
                            ?___flge 0001                              ?___fleq 0001  
                 ?_color_writetoaddr 0003                              ?___wmul 0001  
                 backward@delay_time 0022                  ?_adjust_calibration 0001  
                ??_color_writetoaddr 0004                            ?_backward 0014  
                       ??_RGB_to_HSV 005C                    _delay_ms_function 4974  
                         backward@mL 0014                           backward@mR 0016  
                          ?___xxtofl 000C                   ?_delay_ms_function 0001  
                            _SP4BRGH 0EE6                              _SP4BRGL 0EE5  
                            _SSP2ADD 0ED6                              _SSP2BUF 0ED5  
                ??_delay_ms_function 0003                 ??_adjust_calibration 0003  
             color_writetoaddr@value 0003         turnLEFT@rotation_calibration 001B  
                   ??_color_read_Red 0007            __end_of_color_writetoaddr 4A3A  
                        RGB_to_HSV@B 0072                          RGB_to_HSV@C 0076  
                        RGB_to_HSV@G 006E                          RGB_to_HSV@H 007A  
                        RGB_to_HSV@R 006A                          RGB_to_HSV@S 007B  
                        RGB_to_HSV@V 007C                          RGB_to_HSV@b 00BD  
                        RGB_to_HSV@g 00B9                   _I2C_2_Master_Start 4A86  
                        RGB_to_HSV@r 00B5                           _initUSART4 4A3A  
                 _I2C_2_Master_Write 4A70                              __Hparam 0000  
                 __end_of_RGB_to_HSV 2002                              __Lparam 0000  
                  color_read_Red@tmp 000A              sendStringSerial4@string 0002  
                            ___fladd 25F8                              ___fldiv 2EE2  
                            ___awdiv 4244                              ___flmul 2AB8  
                            ___flsub 47CA                              ___fltol 403A  
                ?_I2C_2_Master_Start 0001                              ___lwdiv 45B2  
                ?_I2C_2_Master_Write 0001                              ___lwmod 4626  
                          ?_vfprintf 0019                         __psmallconst 0E00  
                          ?_turnLEFT 0014            __end_of_delay_ms_function 49A2  
                            __pcinit 4910                              __ramtop 0E00  
                            __ptext0 2002                              __ptext1 35D8  
                            __ptext2 377E                              __ptext3 43C2  
                            __ptext4 48D4                              __ptext5 4810  
                            __ptext6 3AC8                              __ptext7 4308  
                            __ptext8 4A9A                              __ptext9 4626  
                         ??_backward 0018                            _T2CONbits 0FBD  
                            _forward 3430                           ??___xxtofl 0010  
                          _T2HLTbits 0FBE                        _RxBufWriteCnt 00FC  
                            _sprintf 48D4                 ??_I2C_2_Master_Start 0002  
               ??_I2C_2_Master_Write 0002                 end_of_initialization 493E  
                            fputc@fp 0003                    ?_color_click_init 0001  
                 ??_color_click_init 0005                    __end_of_vfpfcnvrt 3C60  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc1 0FE6                              postinc2 0FDE  
                   vfpfcnvrt@convarg 0013                           main@F14555 015C  
                         ??_vfprintf 001C                           ??_turnLEFT 0018  
                  __end_of_turnRIGHT 377E                      _initDCmotorsPWM 451E  
                 turnRIGHT@max_power 0020                            _PORTFbits 0F8E  
                 setMotorPWM@negDuty 0013                          ___fladd@grs 0010  
                      ___xxtofl@sign 0014                            _TRISAbits 0F81  
                 setMotorPWM@posDuty 0012                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 0001  
switch_calibration@calibration_index 0001                          ___fldiv@grs 0035  
                        ___fldiv@rem 002E                           main@i_1541 01B8  
           color_writetoaddr@address 0004              ??_I2C_2_Master_RepStart 0002  
                        ___flmul@grs 0048                          _CCP1CONbits 0FAB  
                  ?_color_read_Clear 0005                         _EUSART4RXbuf 00E2  
                       _EUSART4TXbuf 0100                          _CCP2CONbits 0FA7  
                         main@length 01B3                    ?_color_read_Green 0005  
                        _CCP3CONbits 0F26                          ?_initUSART4 0001  
        forward@Distance_Calibration 001B                          _CCP4CONbits 0F22  
          sendCharSerial4@charToSend 0001                   ??_color_read_Clear 0007  
                 ??_color_read_Green 0007           __end_of_custom_floatmodulo 403A  
                     __end_of___flge 4244                       __end_of___fleq 451E  
                        vfpfcnvrt@ap 0010                          vfpfcnvrt@cp 0017  
                        vfpfcnvrt@fp 000E                       __end_of___wmul 4A1A  
          color_cardCheck@card_color 00D1                     RGB_to_HSV@H_temp 00A9  
                color_read_Clear@tmp 000A                  start_initialization 4910  
                      _TxBufWriteCnt 005F                     RGB_to_HSV@c_norm 007D  
                   RGB_to_HSV@maxRGB 00B1                     RGB_to_HSV@minRGB 0099  
                    _RGB_to_HSV$2705 0081                      _RGB_to_HSV$2706 0085  
                    _RGB_to_HSV$2707 0089                      _RGB_to_HSV$2708 00A5  
                    _RGB_to_HSV$2709 008D                  color_read_Green@tmp 000A  
                 turnLEFT@delay_time 0022              __end_of_initDCmotorsPWM 45B2  
                        vfprintf@fmt 001A                             ??___flge 0009  
                           ??___fleq 0009                             ??___wmul 0005  
                custom_floatmodulo@x 0054                  custom_floatmodulo@y 0058  
                        __pdataBANK0 00FD                          _calibration 0182  
                          ___fladd@a 0005                            ___fladd@b 0001  
       backward@Distance_Calibration 001B                            ___fldiv@a 0026  
                          ___fldiv@b 0022                            ___flmul@a 003F  
                          ___flmul@b 003B                          __pbssCOMRAM 005E  
                          ___flsub@a 001E                            ___flsub@b 001A  
                      __pcstackBANK0 0060                        __pcstackBANK1 018B  
              main@Operation_History 019F            custom_floatmodulo@intPart 0068  
                   ___lwdiv@dividend 0007                          turnRIGHT@mL 0014  
                        turnRIGHT@mR 0016                             ?___fladd 0001  
                           ?___fldiv 0022                             ?___awdiv 0001  
                           ?___flmul 003B                             ?___flsub 001A  
                           ?___fltol 0001                             ?___lwdiv 0007  
                           ?___lwmod 0001                            backward@i 001C  
                          backward@j 001E                 I2C_2_Master_Read@ack 0003  
               I2C_2_Master_Read@tmp 0004                          __smallconst 0E00  
                           ?_forward 0014                    _I2C_2_Master_Idle 49CC  
                  _I2C_2_Master_Init 49A2                    _I2C_2_Master_Read 4852  
                  _I2C_2_Master_Stop 4A7C                         _RxBufReadCnt 00FB  
                 ?_I2C_2_Master_Idle 0001                   ?_I2C_2_Master_Init 0001  
                  main@distance_back 01B4                   ?_I2C_2_Master_Read 0001  
                      ??_setMotorPWM 0010                   ?_I2C_2_Master_Stop 0001  
                   ___lwdiv@quotient 000B             initDCmotorsPWM@PWMperiod 0001  
                           ?_sprintf 001D                    ??_color_cardCheck 005E  
                  backward@max_power 0020                    _sendStringSerial4 4944  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 0F79                  ??_I2C_2_Master_Stop 0002  
                           _LATCbits 0F7B                             _LATDbits 0F7C  
                           _LATEbits 0F7D                             _LATFbits 0F7E  
                           _LATGbits 0F7F                             _LATHbits 0F80  
                 ?_sendStringSerial4 0002                             _PIE4bits 0E2D  
                           _PIR4bits 0E37                     ?_initDCmotorsPWM 0001  
                  ??_sendCharSerial4 0001                             _SSP2CON2 0EDA  
                ??_sendStringSerial4 0004                             _SSP2STAT 0ED8  
                          _vfpfcnvrt 3AC8            __end_of_I2C_2_Master_Idle 49F4  
          __end_of_I2C_2_Master_Init 49CC            __end_of_I2C_2_Master_Read 4894  
                  ___wmul@multiplier 0001            __end_of_I2C_2_Master_Stop 4A86  
                       setMotorPWM@m 000E          I2C_2_Master_Write@data_byte 0002  
      turnRIGHT@rotation_calibration 001B                            _turnRIGHT 35D8  
                  ??_color_read_Blue 0007                         _TxBufReadCnt 005E  
                         vfpfcnvrt@c 0018            __end_of_sendStringSerial4 4974  
      __end_of_I2C_2_Master_RepStart 4A9A                   color_read_Blue@tmp 000A  
                __end_of_setMotorPWM 3DCC                         ??_initUSART4 0001  
                           __Hrparam 0000                           vfprintf@ap 001B  
                           __Lrparam 0000                           vfprintf@fp 0019  
                          forward@mL 0014                            forward@mR 0016  
                         ?_vfpfcnvrt 000E                             _backward 3924  
                         _ANSELDbits 0EA7                           _ANSELFbits 0EB4  
                         sprintf@fmt 001F                           turnLEFT@mL 0014  
                         turnLEFT@mR 0016                             ___xxtofl 327C  
                         ?_turnRIGHT 0014                   _custom_floatmodulo 3F22  
                    ___lwdiv@divisor 0009                           turnRIGHT@i 001C  
                         turnRIGHT@j 001E           __end_of_switch_calibration 4474  
                 __end_of_initUSART4 4A58                      ___lwdiv@counter 000D  
                           __ptext10 4944                             __ptext11 4A58  
                           __ptext20 46DA                             __ptext12 4A3A  
                           __ptext21 472A                             __ptext13 451E  
                           __ptext30 3F22                             __ptext22 477A  
                           __ptext14 3430                             __ptext31 327C  
                           __ptext23 4A70                             __ptext15 4894  
                           __ptext40 3C60                             __ptext32 403A  
                           __ptext24 4A7C                             __ptext16 4A1A  
                           __ptext41 49F4                             __ptext33 47CA  
                           __ptext25 4A86                             __ptext17 49A2  
                           __ptext42 45B2                             __ptext34 25F8  
                           __ptext26 4A90                             __ptext18 0E08  
                           __ptext43 4974                             __ptext35 2AB8  
                           __ptext27 4852                             __ptext19 468A  
                           __ptext44 4244                             __ptext36 4474  
                           __ptext28 49CC                             __ptext45 3DCC  
                           __ptext37 2EE2                             __ptext29 1840  
                           __ptext38 4140                             __ptext39 3924  
        custom_floatmodulo@remainder 0064                    turnLEFT@max_power 0020  
                       _SSP2CON1bits 0ED9                         _SSP2CON2bits 0EDA  
                ?_custom_floatmodulo 0054                             isa$xinst 0000  
                         _RC4STAbits 0EE7                             _vfprintf 4810  
               ??_custom_floatmodulo 005C                             _turnLEFT 377E  
                turnRIGHT@delay_time 0022                    main@Forward_Count 01B7  
                           forward@i 001C                             forward@j 001E  
                        _setMotorPWM 3C60                            sprintf@ap 0022  
                          turnLEFT@i 001C                            turnLEFT@j 001E  
                   ___lwmod@dividend 0001           custom_floatmodulo@quotient 0060  
                        ??_vfpfcnvrt 0011                     _color_click_init 4894  
                    _color_cardCheck 0E08                             sprintf@f 0023  
                         _RGB_to_HSV 1840                             sprintf@s 001D  
                         _SSP2DATPPS 0E1D                           _SSP2CLKPPS 0E1C  
                    ___lwmod@divisor 0003                          ??_turnRIGHT 0018  
                    ___lwmod@counter 0005                     color_cardCheck@H 00D3  
                   color_cardCheck@S 00D7                     color_cardCheck@V 00DB  
                   color_cardCheck@b 00C9                     color_cardCheck@c 00CD  
                   color_cardCheck@g 00C5                     color_cardCheck@r 00C1  
                      ___fladd@signs 000D                           _TX4STAbits 0EE8  
                    _sendCharSerial4 4A58                         ___fladd@aexp 000E  
                       ___fladd@bexp 000F  
