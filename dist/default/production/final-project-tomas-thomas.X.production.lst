

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 23:46:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 21/07/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataBANK0
   101   004A92                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _temp
   105   004A92  07                 	db	7
   106   000000                     _TX4REG	set	3812
   107   000000                     _RC4STAbits	set	3815
   108   000000                     _SP4BRGH	set	3814
   109   000000                     _TRISDbits	set	3972
   110   000000                     _LATEbits	set	3965
   111   000000                     _LATHbits	set	3968
   112   000000                     _SSP2CON2bits	set	3802
   113   000000                     _RX4PPS	set	3605
   114   000000                     _SSP2CLKPPS	set	3612
   115   000000                     _SSP2DATPPS	set	3613
   116   000000                     _RC7PPS	set	3689
   117   000000                     _RE2PPS	set	3700
   118   000000                     _LATAbits	set	3961
   119   000000                     _LATGbits	set	3967
   120   000000                     _TRISAbits	set	3969
   121   000000                     _TRISGbits	set	3975
   122   000000                     _TRISHbits	set	3976
   123   000000                     _PORTFbits	set	3982
   124   000000                     _TRISCbits	set	3971
   125   000000                     _TRISEbits	set	3973
   126   000000                     _TRISFbits	set	3974
   127   000000                     _LATCbits	set	3963
   128   000000                     _LATDbits	set	3964
   129   000000                     _LATFbits	set	3966
   130   000000                     _T2PR	set	4028
   131   000000                     _T2CONbits	set	4029
   132   000000                     _CCPR2H	set	4006
   133   000000                     _CCPR1H	set	4010
   134   000000                     _RE4PPS	set	3702
   135   000000                     _RG6PPS	set	3720
   136   000000                     _RD5PPS	set	3695
   137   000000                     _ANSELDbits	set	3751
   138   000000                     _ANSELFbits	set	3764
   139   000000                     _CCPR4H	set	3873
   140   000000                     _CCPR3H	set	3877
   141   000000                     _T2CLKCONbits	set	4031
   142   000000                     _T2HLTbits	set	4030
   143   000000                     _CCP1CONbits	set	4011
   144   000000                     _CCPTMRS0bits	set	4013
   145   000000                     _CCP2CONbits	set	4007
   146   000000                     _CCP3CONbits	set	3878
   147   000000                     _CCP4CONbits	set	3874
   148   000000                     _SSP2BUF	set	3797
   149   000000                     _SSP2ADD	set	3798
   150   000000                     _SSP2CON1bits	set	3801
   151   000000                     _RC4REG	set	3811
   152   000000                     _SP4BRGL	set	3813
   153   000000                     _TX4STAbits	set	3816
   154   000000                     _BAUD4CONbits	set	3817
   155   000000                     _SSP2CON2	set	3802
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _PIE4bits	set	3629
   158   000000                     _PIR4bits	set	3639
   159   000000                     _RC0PPS	set	3682
   160   000000                     _RD6PPS	set	3696
   161                           
   162                           	psect	smallconst
   163   000E00                     __psmallconst:
   164                           	callstack 0
   165   000E00  00                 	db	0
   166   000E01                     STR_1:
   167   000E01  25                 	db	37
   168   000E02  75                 	db	117	;'u'
   169   000E03  2C                 	db	44
   170   000E04  20                 	db	32
   171   000E05  00                 	db	0
   172   000E06  00                 	db	0	; dummy byte at the end
   173   000000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177   004906                     __pcinit:
   178                           	callstack 0
   179   004906                     start_initialization:
   180                           	callstack 0
   181   004906                     __initialization:
   182                           	callstack 0
   183                           
   184                           ; Initialize objects allocated to BANK0 (1 bytes)
   185                           ; load TBLPTR registers with __pidataBANK0
   186   004906  0E92               	movlw	low __pidataBANK0
   187   004908  6EF6               	movwf	tblptrl,c
   188   00490A  0E4A               	movlw	high __pidataBANK0
   189   00490C  6EF7               	movwf	tblptrh,c
   190   00490E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   191   004910  6EF8               	movwf	tblptru,c
   192   004912  0009               	tblrd		*+	;fetch initializer
   193   004914  CFF5 F0FD          	movff	tablat,__pdataBANK0
   194                           
   195                           ; Clear objects allocated to BANK1 (140 bytes)
   196   004918  EE01  F000         	lfsr	0,__pbssBANK1
   197   00491C  0E8C               	movlw	140
   198   00491E                     clear_0:
   199   00491E  6AEE               	clrf	postinc0,c
   200   004920  06E8               	decf	wreg,f,c
   201   004922  E1FD               	bnz	clear_0
   202                           
   203                           ; Clear objects allocated to BANK0 (27 bytes)
   204   004924  EE00  F0E2         	lfsr	0,__pbssBANK0
   205   004928  0E1B               	movlw	27
   206   00492A                     clear_1:
   207   00492A  6AEE               	clrf	postinc0,c
   208   00492C  06E8               	decf	wreg,f,c
   209   00492E  E1FD               	bnz	clear_1
   210                           
   211                           ; Clear objects allocated to COMRAM (2 bytes)
   212   004930  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   213   004932  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   214   004934                     end_of_initialization:
   215                           	callstack 0
   216   004934                     __end_of__initialization:
   217                           	callstack 0
   218   004934  0100               	movlb	0
   219   004936  EF01  F010         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222   00005E                     __pbssCOMRAM:
   223                           	callstack 0
   224   00005E                     _TxBufReadCnt:
   225                           	callstack 0
   226   00005E                     	ds	1
   227   00005F                     _TxBufWriteCnt:
   228                           	callstack 0
   229   00005F                     	ds	1
   230                           
   231                           	psect	bssBANK0
   232   0000E2                     __pbssBANK0:
   233                           	callstack 0
   234   0000E2                     _EUSART4RXbuf:
   235                           	callstack 0
   236   0000E2                     	ds	20
   237   0000F6                     _width:
   238                           	callstack 0
   239   0000F6                     	ds	2
   240   0000F8                     _prec:
   241                           	callstack 0
   242   0000F8                     	ds	2
   243   0000FA                     _flags:
   244                           	callstack 0
   245   0000FA                     	ds	1
   246   0000FB                     _RxBufReadCnt:
   247                           	callstack 0
   248   0000FB                     	ds	1
   249   0000FC                     _RxBufWriteCnt:
   250                           	callstack 0
   251   0000FC                     	ds	1
   252                           
   253                           	psect	dataBANK0
   254   0000FD                     __pdataBANK0:
   255                           	callstack 0
   256   0000FD                     _temp:
   257                           	callstack 0
   258   0000FD                     	ds	1
   259                           
   260                           	psect	bssBANK1
   261   000100                     __pbssBANK1:
   262                           	callstack 0
   263   000100                     _EUSART4TXbuf:
   264                           	callstack 0
   265   000100                     	ds	60
   266   00013C                     _dbuf:
   267                           	callstack 0
   268   00013C                     	ds	32
   269   00015C                     	ds	20
   270   000170                     _calibration:
   271                           	callstack 0
   272   000170                     	ds	10
   273   00017A                     _motorR:
   274                           	callstack 0
   275   00017A                     	ds	9
   276   000183                     _motorL:
   277                           	callstack 0
   278   000183                     	ds	9
   279                           
   280                           	psect	cstackBANK1
   281   00018C                     __pcstackBANK1:
   282                           	callstack 0
   283   00018C                     main@senddata:
   284                           	callstack 0
   285                           
   286                           ; 20 bytes @ 0x0
   287   00018C                     	ds	20
   288   0001A0                     main@Operation_History:
   289                           	callstack 0
   290                           
   291                           ; 20 bytes @ 0x14
   292   0001A0                     	ds	20
   293   0001B4                     main@length:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x28
   297   0001B4                     	ds	1
   298   0001B5                     main@distance_back:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x29
   302   0001B5                     	ds	1
   303   0001B6                     main@j:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x2A
   307   0001B6                     	ds	2
   308   0001B8                     main@Forward_Count:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x2C
   312   0001B8                     	ds	1
   313   0001B9                     main@i_1544:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x2D
   317   0001B9                     	ds	2
   318   0001BB                     main@Operation_Count:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x2F
   322   0001BB                     	ds	1
   323   0001BC                     main@Color_Value:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x30
   327   0001BC                     	ds	2
   328   0001BE                     main@i:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x32
   332   0001BE                     	ds	2
   333                           
   334                           	psect	cstackBANK0
   335   000060                     __pcstackBANK0:
   336                           	callstack 0
   337   000060                     custom_floatmodulo@quotient:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x0
   341   000060                     	ds	4
   342   000064                     custom_floatmodulo@remainder:
   343                           	callstack 0
   344                           
   345                           ; 4 bytes @ 0x4
   346   000064                     	ds	4
   347   000068                     custom_floatmodulo@intPart:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x8
   351   000068                     	ds	2
   352   00006A                     RGB_to_HSV@R:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0xA
   356   00006A                     	ds	4
   357   00006E                     RGB_to_HSV@G:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0xE
   361   00006E                     	ds	4
   362   000072                     RGB_to_HSV@B:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x12
   366   000072                     	ds	4
   367   000076                     RGB_to_HSV@C:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x16
   371   000076                     	ds	4
   372   00007A                     RGB_to_HSV@H:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x1A
   376   00007A                     	ds	1
   377   00007B                     RGB_to_HSV@S:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x1B
   381   00007B                     	ds	1
   382   00007C                     RGB_to_HSV@V:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x1C
   386   00007C                     	ds	1
   387   00007D                     RGB_to_HSV@c_norm:
   388                           	callstack 0
   389                           
   390                           ; 4 bytes @ 0x1D
   391   00007D                     	ds	4
   392   000081                     _RGB_to_HSV$2708:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x21
   396   000081                     	ds	4
   397   000085                     _RGB_to_HSV$2709:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x25
   401   000085                     	ds	4
   402   000089                     _RGB_to_HSV$2710:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x29
   406   000089                     	ds	4
   407   00008D                     _RGB_to_HSV$2712:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x2D
   411   00008D                     	ds	4
   412   000091                     _RGB_to_HSV$318:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x31
   416   000091                     	ds	4
   417   000095                     _RGB_to_HSV$319:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x35
   421   000095                     	ds	4
   422   000099                     RGB_to_HSV@minRGB:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x39
   426   000099                     	ds	4
   427   00009D                     _RGB_to_HSV$321:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x3D
   431   00009D                     	ds	4
   432   0000A1                     _RGB_to_HSV$322:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x41
   436   0000A1                     	ds	4
   437   0000A5                     _RGB_to_HSV$2711:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x45
   441   0000A5                     	ds	4
   442   0000A9                     RGB_to_HSV@H_temp:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x49
   446   0000A9                     	ds	4
   447   0000AD                     RGB_to_HSV@deltaRGB:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x4D
   451   0000AD                     	ds	4
   452   0000B1                     RGB_to_HSV@maxRGB:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x51
   456   0000B1                     	ds	4
   457   0000B5                     RGB_to_HSV@r:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x55
   461   0000B5                     	ds	4
   462   0000B9                     RGB_to_HSV@g:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x59
   466   0000B9                     	ds	4
   467   0000BD                     RGB_to_HSV@b:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x5D
   471   0000BD                     	ds	4
   472   0000C1                     color_cardCheck@r:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x61
   476   0000C1                     	ds	4
   477   0000C5                     color_cardCheck@g:
   478                           	callstack 0
   479                           
   480                           ; 4 bytes @ 0x65
   481   0000C5                     	ds	4
   482   0000C9                     color_cardCheck@b:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x69
   486   0000C9                     	ds	4
   487   0000CD                     color_cardCheck@c:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x6D
   491   0000CD                     	ds	4
   492   0000D1                     color_cardCheck@card_color:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x71
   496   0000D1                     	ds	2
   497   0000D3                     color_cardCheck@H:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x73
   501   0000D3                     	ds	4
   502   0000D7                     color_cardCheck@S:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x77
   506   0000D7                     	ds	4
   507   0000DB                     color_cardCheck@V:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x7B
   511   0000DB                     	ds	4
   512   0000DF                     ??_main:
   513                           
   514                           ; 1 bytes @ 0x7F
   515   0000DF                     	ds	3
   516                           
   517                           	psect	cstackCOMRAM
   518   000001                     __pcstackCOMRAM:
   519                           	callstack 0
   520   000001                     ??_I2C_2_Master_Idle:
   521   000001                     ?___wmul:
   522                           	callstack 0
   523   000001                     ?___awdiv:
   524                           	callstack 0
   525   000001                     ?___lwmod:
   526                           	callstack 0
   527   000001                     ?___fladd:
   528                           	callstack 0
   529   000001                     ?___fltol:
   530                           	callstack 0
   531   000001                     sendCharSerial4@charToSend:
   532                           	callstack 0
   533   000001                     adjust_calibration@calibration_label:
   534                           	callstack 0
   535   000001                     switch_calibration@calibration_index:
   536                           	callstack 0
   537   000001                     initDCmotorsPWM@PWMperiod:
   538                           	callstack 0
   539   000001                     delay_ms_function@milliseconds:
   540                           	callstack 0
   541   000001                     ___wmul@multiplier:
   542                           	callstack 0
   543   000001                     ___awdiv@dividend:
   544                           	callstack 0
   545   000001                     ___lwmod@dividend:
   546                           	callstack 0
   547   000001                     fputc@c:
   548                           	callstack 0
   549   000001                     ___fleq@ff1:
   550                           	callstack 0
   551   000001                     ___flge@ff1:
   552                           	callstack 0
   553   000001                     ___fltol@f1:
   554                           	callstack 0
   555   000001                     ___fladd@b:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x0
   559   000001                     	ds	1
   560   000002                     ??_I2C_2_Master_Read:
   561   000002                     I2C_2_Master_Write@data_byte:
   562                           	callstack 0
   563   000002                     sendStringSerial4@string:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1
   567   000002                     	ds	1
   568   000003                     ??_adjust_calibration:
   569   000003                     ??_switch_calibration:
   570   000003                     ??_delay_ms_function:
   571   000003                     color_writetoaddr@value:
   572                           	callstack 0
   573   000003                     I2C_2_Master_Read@ack:
   574                           	callstack 0
   575   000003                     fputc@fp:
   576                           	callstack 0
   577   000003                     ___wmul@multiplicand:
   578                           	callstack 0
   579   000003                     ___awdiv@divisor:
   580                           	callstack 0
   581   000003                     ___lwmod@divisor:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2
   585   000003                     	ds	1
   586   000004                     ??_fputc:
   587   000004                     color_writetoaddr@address:
   588                           	callstack 0
   589   000004                     I2C_2_Master_Read@tmp:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x3
   593   000004                     	ds	1
   594   000005                     ??_color_click_init:
   595   000005                     ??___fltol:
   596   000005                     ?_color_read_Red:
   597                           	callstack 0
   598   000005                     ?_color_read_Green:
   599                           	callstack 0
   600   000005                     ?_color_read_Blue:
   601                           	callstack 0
   602   000005                     ?_color_read_Clear:
   603                           	callstack 0
   604   000005                     ___awdiv@counter:
   605                           	callstack 0
   606   000005                     ___lwmod@counter:
   607                           	callstack 0
   608   000005                     ___wmul@product:
   609                           	callstack 0
   610   000005                     ___fleq@ff2:
   611                           	callstack 0
   612   000005                     ___flge@ff2:
   613                           	callstack 0
   614   000005                     ___fladd@a:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x4
   618   000005                     	ds	1
   619   000006                     ___awdiv@sign:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x5
   623   000006                     	ds	1
   624   000007                     ??_color_read_Red:
   625   000007                     ??_color_read_Green:
   626   000007                     ??_color_read_Blue:
   627   000007                     ??_color_read_Clear:
   628   000007                     ?___lwdiv:
   629                           	callstack 0
   630   000007                     ___awdiv@quotient:
   631                           	callstack 0
   632   000007                     ___lwdiv@dividend:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x6
   636   000007                     	ds	2
   637   000009                     ??___fladd:
   638   000009                     ??___fleq:
   639   000009                     ??___flge:
   640   000009                     ___fltol@sign1:
   641                           	callstack 0
   642   000009                     ___lwdiv@divisor:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x8
   646   000009                     	ds	1
   647   00000A                     ___fltol@exp1:
   648                           	callstack 0
   649   00000A                     color_read_Red@tmp:
   650                           	callstack 0
   651   00000A                     color_read_Green@tmp:
   652                           	callstack 0
   653   00000A                     color_read_Blue@tmp:
   654                           	callstack 0
   655   00000A                     color_read_Clear@tmp:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x9
   659   00000A                     	ds	1
   660   00000B                     ___lwdiv@quotient:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0xA
   664   00000B                     	ds	1
   665   00000C                     ?___xxtofl:
   666                           	callstack 0
   667   00000C                     ___xxtofl@val:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0xB
   671   00000C                     	ds	1
   672   00000D                     ___lwdiv@counter:
   673                           	callstack 0
   674   00000D                     ___fladd@signs:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0xC
   678   00000D                     	ds	1
   679   00000E                     ___fladd@aexp:
   680                           	callstack 0
   681   00000E                     vfpfcnvrt@fp:
   682                           	callstack 0
   683   00000E                     setMotorPWM@m:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0xD
   687   00000E                     	ds	1
   688   00000F                     ___fladd@bexp:
   689                           	callstack 0
   690   00000F                     vfpfcnvrt@fmt:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0xE
   694   00000F                     	ds	1
   695   000010                     ??_setMotorPWM:
   696   000010                     ??___xxtofl:
   697   000010                     ___fladd@grs:
   698                           	callstack 0
   699   000010                     vfpfcnvrt@ap:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0xF
   703   000010                     	ds	1
   704   000011                     ??_vfpfcnvrt:
   705                           
   706                           ; 1 bytes @ 0x10
   707   000011                     	ds	1
   708   000012                     setMotorPWM@posDuty:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x11
   712   000012                     	ds	1
   713   000013                     setMotorPWM@negDuty:
   714                           	callstack 0
   715   000013                     vfpfcnvrt@convarg:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x12
   719   000013                     	ds	1
   720   000014                     ___xxtofl@sign:
   721                           	callstack 0
   722   000014                     forward@mL:
   723                           	callstack 0
   724   000014                     backward@mL:
   725                           	callstack 0
   726   000014                     turnLEFT@mL:
   727                           	callstack 0
   728   000014                     turnRIGHT@mL:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x13
   732   000014                     	ds	1
   733   000015                     ___xxtofl@exp:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x14
   737   000015                     	ds	1
   738   000016                     forward@mR:
   739                           	callstack 0
   740   000016                     backward@mR:
   741                           	callstack 0
   742   000016                     turnLEFT@mR:
   743                           	callstack 0
   744   000016                     turnRIGHT@mR:
   745                           	callstack 0
   746   000016                     ___xxtofl@arg:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x15
   750   000016                     	ds	1
   751   000017                     vfpfcnvrt@cp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x16
   755   000017                     	ds	1
   756   000018                     ??_forward:
   757   000018                     ??_backward:
   758   000018                     ??_turnLEFT:
   759   000018                     ??_turnRIGHT:
   760   000018                     vfpfcnvrt@c:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x17
   764   000018                     	ds	1
   765   000019                     ?_vfprintf:
   766                           	callstack 0
   767   000019                     vfprintf@fp:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x18
   771   000019                     	ds	1
   772   00001A                     ?___flsub:
   773                           	callstack 0
   774   00001A                     vfprintf@fmt:
   775                           	callstack 0
   776   00001A                     ___flsub@b:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x19
   780   00001A                     	ds	1
   781   00001B                     forward@Distance_Calibration:
   782                           	callstack 0
   783   00001B                     backward@Distance_Calibration:
   784                           	callstack 0
   785   00001B                     turnLEFT@rotation_calibration:
   786                           	callstack 0
   787   00001B                     turnRIGHT@rotation_calibration:
   788                           	callstack 0
   789   00001B                     vfprintf@ap:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x1A
   793   00001B                     	ds	1
   794   00001C                     vfprintf@cfmt:
   795                           	callstack 0
   796   00001C                     forward@i:
   797                           	callstack 0
   798   00001C                     backward@i:
   799                           	callstack 0
   800   00001C                     turnLEFT@i:
   801                           	callstack 0
   802   00001C                     turnRIGHT@i:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1B
   806   00001C                     	ds	1
   807   00001D                     ?_sprintf:
   808                           	callstack 0
   809   00001D                     sprintf@s:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x1C
   813   00001D                     	ds	1
   814   00001E                     forward@j:
   815                           	callstack 0
   816   00001E                     backward@j:
   817                           	callstack 0
   818   00001E                     turnLEFT@j:
   819                           	callstack 0
   820   00001E                     turnRIGHT@j:
   821                           	callstack 0
   822   00001E                     ___flsub@a:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x1D
   826   00001E                     	ds	1
   827   00001F                     sprintf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x1E
   831   00001F                     	ds	1
   832   000020                     forward@max_power:
   833                           	callstack 0
   834   000020                     backward@max_power:
   835                           	callstack 0
   836   000020                     turnLEFT@max_power:
   837                           	callstack 0
   838   000020                     turnRIGHT@max_power:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x1F
   842   000020                     	ds	2
   843   000022                     ?___fldiv:
   844                           	callstack 0
   845   000022                     sprintf@ap:
   846                           	callstack 0
   847   000022                     forward@delay_time:
   848                           	callstack 0
   849   000022                     backward@delay_time:
   850                           	callstack 0
   851   000022                     turnLEFT@delay_time:
   852                           	callstack 0
   853   000022                     turnRIGHT@delay_time:
   854                           	callstack 0
   855   000022                     ___fldiv@b:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x21
   859   000022                     	ds	1
   860   000023                     sprintf@f:
   861                           	callstack 0
   862                           
   863                           ; 12 bytes @ 0x22
   864   000023                     	ds	3
   865   000026                     ___fldiv@a:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x25
   869   000026                     	ds	4
   870   00002A                     ??___fldiv:
   871                           
   872                           ; 1 bytes @ 0x29
   873   00002A                     	ds	4
   874   00002E                     ___fldiv@rem:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x2D
   878   00002E                     	ds	4
   879   000032                     ___fldiv@sign:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x31
   883   000032                     	ds	1
   884   000033                     ___fldiv@new_exp:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x32
   888   000033                     	ds	2
   889   000035                     ___fldiv@grs:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x34
   893   000035                     	ds	4
   894   000039                     ___fldiv@bexp:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x38
   898   000039                     	ds	1
   899   00003A                     ___fldiv@aexp:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x39
   903   00003A                     	ds	1
   904   00003B                     ?___flmul:
   905                           	callstack 0
   906   00003B                     ___flmul@b:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x3A
   910   00003B                     	ds	4
   911   00003F                     ___flmul@a:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x3E
   915   00003F                     	ds	4
   916   000043                     ??___flmul:
   917                           
   918                           ; 1 bytes @ 0x42
   919   000043                     	ds	4
   920   000047                     ___flmul@sign:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x46
   924   000047                     	ds	1
   925   000048                     ___flmul@grs:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x47
   929   000048                     	ds	4
   930   00004C                     ___flmul@aexp:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x4B
   934   00004C                     	ds	1
   935   00004D                     ___flmul@bexp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x4C
   939   00004D                     	ds	1
   940   00004E                     ___flmul@prod:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x4D
   944   00004E                     	ds	4
   945   000052                     ___flmul@temp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x51
   949   000052                     	ds	2
   950   000054                     ?_custom_floatmodulo:
   951                           	callstack 0
   952   000054                     custom_floatmodulo@x:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x53
   956   000054                     	ds	4
   957   000058                     custom_floatmodulo@y:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x57
   961   000058                     	ds	4
   962   00005C                     ?_color_cardCheck:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x5B
   966   00005C                     	ds	2
   967   00005E                     
   968                           ; 1 bytes @ 0x5D
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   971 ;;
   972 ;; *************** function _main *****************
   973 ;; Defined at:
   974 ;;		line 18 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  j               2   42[BANK1 ] int 
   979 ;;  distance_bac    1   41[BANK1 ] unsigned char 
   980 ;;  i               2   50[BANK1 ] int 
   981 ;;  i               2   45[BANK1 ] int 
   982 ;;  senddata       20    0[BANK1 ] unsigned char [20]
   983 ;;  Operation_Hi   20   20[BANK1 ] unsigned char [20]
   984 ;;  Color_Value     2   48[BANK1 ] int 
   985 ;;  PWMperiod       2    0        unsigned int 
   986 ;;  Operation_Co    1   47[BANK1 ] unsigned char 
   987 ;;  Forward_Coun    1   44[BANK1 ] unsigned char 
   988 ;;  length          1   40[BANK1 ] unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;      Totals:         0       3      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;Total ram usage:       55 bytes
  1003 ;; Hardware stack levels required when called: 5
  1004 ;; This function calls:
  1005 ;;		_adjust_calibration
  1006 ;;		_backward
  1007 ;;		_color_cardCheck
  1008 ;;		_color_click_init
  1009 ;;		_forward
  1010 ;;		_initDCmotorsPWM
  1011 ;;		_initUSART4
  1012 ;;		_sendStringSerial4
  1013 ;;		_sprintf
  1014 ;;		_switch_calibration
  1015 ;;		_turnLEFT
  1016 ;;		_turnRIGHT
  1017 ;; This function is called by:
  1018 ;;		Startup code after reset
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text0
  1023   002002                     __ptext0:
  1024                           	callstack 0
  1025   002002                     _main:
  1026                           	callstack 26
  1027   002002                     
  1028                           ;main.c: 20:     initDCmotorsPWM(PWMperiod);
  1029   002002  0E00               	movlw	0
  1030   002004  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1031   002006  0E63               	movlw	99
  1032   002008  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1033   00200A  EC8A  F022         	call	_initDCmotorsPWM	;wreg free
  1034   00200E                     
  1035                           ;main.c: 24:     motorL.power=0;
  1036   00200E  0E00               	movlw	0
  1037   002010  0101               	movlb	1	; () banked
  1038   002012  6F83               	movwf	_motorL& (0+255),b
  1039   002014                     
  1040                           ; BSR set to: 1
  1041                           ;main.c: 25:     motorL.direction=1;
  1042   002014  0E01               	movlw	1
  1043   002016  6F84               	movwf	(_motorL+1)& (0+255),b
  1044   002018                     
  1045                           ; BSR set to: 1
  1046                           ;main.c: 26:     motorL.brakemode=1;
  1047   002018  0E01               	movlw	1
  1048   00201A  6F85               	movwf	(_motorL+2)& (0+255),b
  1049   00201C                     
  1050                           ; BSR set to: 1
  1051                           ;main.c: 27:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1052   00201C  0EAA               	movlw	170
  1053   00201E  6F88               	movwf	(_motorL+5)& (0+255),b
  1054   002020  0E0F               	movlw	15
  1055   002022  6F89               	movwf	(_motorL+6)& (0+255),b
  1056   002024                     
  1057                           ; BSR set to: 1
  1058                           ;main.c: 28:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1059   002024  0EA6               	movlw	166
  1060   002026  6F8A               	movwf	(_motorL+7)& (0+255),b
  1061   002028  0E0F               	movlw	15
  1062   00202A  6F8B               	movwf	(_motorL+8)& (0+255),b
  1063   00202C                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
  1066   00202C  0E00               	movlw	0
  1067   00202E  6F87               	movwf	(_motorL+4)& (0+255),b
  1068   002030  0E63               	movlw	99
  1069   002032  6F86               	movwf	(_motorL+3)& (0+255),b
  1070   002034                     
  1071                           ; BSR set to: 1
  1072                           ;main.c: 31:     motorR.power=0;
  1073   002034  0E00               	movlw	0
  1074   002036  6F7A               	movwf	_motorR& (0+255),b
  1075   002038                     
  1076                           ; BSR set to: 1
  1077                           ;main.c: 32:     motorR.direction=1;
  1078   002038  0E01               	movlw	1
  1079   00203A  6F7B               	movwf	(_motorR+1)& (0+255),b
  1080   00203C                     
  1081                           ; BSR set to: 1
  1082                           ;main.c: 33:     motorR.brakemode=1;
  1083   00203C  0E01               	movlw	1
  1084   00203E  6F7C               	movwf	(_motorR+2)& (0+255),b
  1085   002040                     
  1086                           ; BSR set to: 1
  1087                           ;main.c: 34:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1088   002040  0E25               	movlw	37
  1089   002042  6F7F               	movwf	(_motorR+5)& (0+255),b
  1090   002044  0E0F               	movlw	15
  1091   002046  6F80               	movwf	(_motorR+6)& (0+255),b
  1092   002048                     
  1093                           ; BSR set to: 1
  1094                           ;main.c: 35:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1095   002048  0E21               	movlw	33
  1096   00204A  6F81               	movwf	(_motorR+7)& (0+255),b
  1097   00204C  0E0F               	movlw	15
  1098   00204E  6F82               	movwf	(_motorR+8)& (0+255),b
  1099   002050                     
  1100                           ; BSR set to: 1
  1101                           ;main.c: 36:     motorR.PWMperiod=PWMperiod;
  1102   002050  0E00               	movlw	0
  1103   002052  6F7E               	movwf	(_motorR+4)& (0+255),b
  1104   002054  0E63               	movlw	99
  1105   002056  6F7D               	movwf	(_motorR+3)& (0+255),b
  1106   002058                     
  1107                           ; BSR set to: 1
  1108                           ;main.c: 42:     TRISDbits.TRISD7 = 0;
  1109   002058  9E84               	bcf	132,7,c	;volatile
  1110   00205A                     
  1111                           ; BSR set to: 1
  1112                           ;main.c: 43:     LATDbits.LATD7 = 0;
  1113   00205A  9E7C               	bcf	124,7,c	;volatile
  1114   00205C                     
  1115                           ; BSR set to: 1
  1116                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
  1117   00205C  9688               	bcf	136,3,c	;volatile
  1118   00205E                     
  1119                           ; BSR set to: 1
  1120                           ;main.c: 47:     LATHbits.LATH3 = 0;
  1121   00205E  9680               	bcf	128,3,c	;volatile
  1122   002060                     
  1123                           ; BSR set to: 1
  1124                           ;main.c: 50:     TRISFbits.TRISF2=1;
  1125   002060  8486               	bsf	134,2,c	;volatile
  1126   002062                     
  1127                           ; BSR set to: 1
  1128                           ;main.c: 51:     ANSELFbits.ANSELF2=0;
  1129   002062  010E               	movlb	14	; () banked
  1130   002064  95B4               	bcf	180,2,b	;volatile
  1131   002066                     
  1132                           ; BSR set to: 14
  1133                           ;main.c: 54:     TRISFbits.TRISF3=1;
  1134   002066  8686               	bsf	134,3,c	;volatile
  1135   002068                     
  1136                           ; BSR set to: 14
  1137                           ;main.c: 55:     ANSELFbits.ANSELF3=0;
  1138   002068  97B4               	bcf	180,3,b	;volatile
  1139   00206A                     
  1140                           ; BSR set to: 14
  1141                           ;main.c: 59:     calibration.index = 1;
  1142   00206A  0E01               	movlw	1
  1143   00206C  0101               	movlb	1	; () banked
  1144   00206E  6F70               	movwf	_calibration& (0+255),b
  1145   002070                     
  1146                           ; BSR set to: 1
  1147                           ;main.c: 60:     calibration.over = 0;
  1148   002070  0E00               	movlw	0
  1149   002072  6F71               	movwf	(_calibration+1)& (0+255),b
  1150   002074                     
  1151                           ; BSR set to: 1
  1152                           ;main.c: 66:     calibration.left_90 = 60;
  1153   002074  0E3C               	movlw	60
  1154   002076  6F72               	movwf	(_calibration+2)& (0+255),b
  1155   002078                     
  1156                           ; BSR set to: 1
  1157                           ;main.c: 67:     calibration.right_90 = 60;
  1158   002078  0E3C               	movlw	60
  1159   00207A  6F73               	movwf	(_calibration+3)& (0+255),b
  1160   00207C                     
  1161                           ; BSR set to: 1
  1162                           ;main.c: 68:     calibration.left_135 = 60;
  1163   00207C  0E3C               	movlw	60
  1164   00207E  6F74               	movwf	(_calibration+4)& (0+255),b
  1165   002080                     
  1166                           ; BSR set to: 1
  1167                           ;main.c: 69:     calibration.right_135 = 10;
  1168   002080  0E0A               	movlw	10
  1169   002082  6F75               	movwf	(_calibration+5)& (0+255),b
  1170   002084                     
  1171                           ; BSR set to: 1
  1172                           ;main.c: 70:     calibration.forward = 50;
  1173   002084  0E32               	movlw	50
  1174   002086  6F76               	movwf	(_calibration+6)& (0+255),b
  1175   002088                     
  1176                           ; BSR set to: 1
  1177                           ;main.c: 71:     calibration.backward = 50;
  1178   002088  0E32               	movlw	50
  1179   00208A  6F77               	movwf	(_calibration+7)& (0+255),b
  1180   00208C                     
  1181                           ; BSR set to: 1
  1182                           ;main.c: 73:     calibration.forward_motorL = 20;
  1183   00208C  0E14               	movlw	20
  1184   00208E  6F78               	movwf	(_calibration+8)& (0+255),b
  1185   002090                     
  1186                           ; BSR set to: 1
  1187                           ;main.c: 74:     calibration.forward_motorR = 20;
  1188   002090  0E14               	movlw	20
  1189   002092  6F79               	movwf	(_calibration+9)& (0+255),b
  1190   002094                     l4973:
  1191                           
  1192                           ; BSR set to: 1
  1193                           ;main.c: 83:         if(calibration.index == 1){
  1194   002094  0570               	decf	_calibration& (0+255),w,b
  1195   002096  A4D8               	btfss	status,2,c
  1196   002098  EF50  F010         	goto	u5471
  1197   00209C  EF52  F010         	goto	u5470
  1198   0020A0                     u5471:
  1199   0020A0  EF6A  F010         	goto	l4981
  1200   0020A4                     u5470:
  1201   0020A4                     
  1202                           ; BSR set to: 1
  1203                           ;main.c: 84:             adjust_calibration(&calibration.right_90);
  1204   0020A4  0E73               	movlw	low (_calibration+3)
  1205   0020A6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1206   0020A8  0E01               	movlw	high (_calibration+3)
  1207   0020AA  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1208   0020AC  ECE1  F01E         	call	_adjust_calibration	;wreg free
  1209   0020B0                     
  1210                           ;main.c: 85:             turnRIGHT(calibration.right_90, &motorL, &motorR);
  1211   0020B0  0E83               	movlw	low _motorL
  1212   0020B2  6E14               	movwf	turnRIGHT@mL^0,c
  1213   0020B4  0E01               	movlw	high _motorL
  1214   0020B6  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1215   0020B8  0E7A               	movlw	low _motorR
  1216   0020BA  6E16               	movwf	turnRIGHT@mR^0,c
  1217   0020BC  0E01               	movlw	high _motorR
  1218   0020BE  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1219   0020C0  0101               	movlb	1	; () banked
  1220   0020C2  5173               	movf	(_calibration+3)& (0+255),w,b
  1221   0020C4  ECE7  F01A         	call	_turnRIGHT
  1222   0020C8                     
  1223                           ;main.c: 86:             switch_calibration(&calibration.index);
  1224   0020C8  0E70               	movlw	low _calibration
  1225   0020CA  6E01               	movwf	switch_calibration@calibration_index^0,c
  1226   0020CC  0E01               	movlw	high _calibration
  1227   0020CE  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1228   0020D0  ECDC  F021         	call	_switch_calibration	;wreg free
  1229   0020D4                     l4981:
  1230                           
  1231                           ;main.c: 90:         if(calibration.index == 2){
  1232   0020D4  0E02               	movlw	2
  1233   0020D6  0101               	movlb	1	; () banked
  1234   0020D8  1970               	xorwf	_calibration& (0+255),w,b
  1235   0020DA  A4D8               	btfss	status,2,c
  1236   0020DC  EF72  F010         	goto	u5481
  1237   0020E0  EF74  F010         	goto	u5480
  1238   0020E4                     u5481:
  1239   0020E4  EF8C  F010         	goto	l4989
  1240   0020E8                     u5480:
  1241   0020E8                     
  1242                           ; BSR set to: 1
  1243                           ;main.c: 91:             adjust_calibration(&calibration.left_90);
  1244   0020E8  0E72               	movlw	low (_calibration+2)
  1245   0020EA  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1246   0020EC  0E01               	movlw	high (_calibration+2)
  1247   0020EE  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1248   0020F0  ECE1  F01E         	call	_adjust_calibration	;wreg free
  1249   0020F4                     
  1250                           ;main.c: 92:             turnLEFT(calibration.left_90, &motorL, &motorR);
  1251   0020F4  0E83               	movlw	low _motorL
  1252   0020F6  6E14               	movwf	turnLEFT@mL^0,c
  1253   0020F8  0E01               	movlw	high _motorL
  1254   0020FA  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1255   0020FC  0E7A               	movlw	low _motorR
  1256   0020FE  6E16               	movwf	turnLEFT@mR^0,c
  1257   002100  0E01               	movlw	high _motorR
  1258   002102  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1259   002104  0101               	movlb	1	; () banked
  1260   002106  5172               	movf	(_calibration+2)& (0+255),w,b
  1261   002108  ECBA  F01B         	call	_turnLEFT
  1262   00210C                     
  1263                           ;main.c: 93:             switch_calibration(&calibration.index);
  1264   00210C  0E70               	movlw	low _calibration
  1265   00210E  6E01               	movwf	switch_calibration@calibration_index^0,c
  1266   002110  0E01               	movlw	high _calibration
  1267   002112  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1268   002114  ECDC  F021         	call	_switch_calibration	;wreg free
  1269   002118                     l4989:
  1270                           
  1271                           ;main.c: 97:         if(calibration.index == 3){
  1272   002118  0E03               	movlw	3
  1273   00211A  0101               	movlb	1	; () banked
  1274   00211C  1970               	xorwf	_calibration& (0+255),w,b
  1275   00211E  A4D8               	btfss	status,2,c
  1276   002120  EF94  F010         	goto	u5491
  1277   002124  EF96  F010         	goto	u5490
  1278   002128                     u5491:
  1279   002128  EFAE  F010         	goto	l4997
  1280   00212C                     u5490:
  1281   00212C                     
  1282                           ; BSR set to: 1
  1283                           ;main.c: 98:             adjust_calibration(&calibration.forward);
  1284   00212C  0E76               	movlw	low (_calibration+6)
  1285   00212E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1286   002130  0E01               	movlw	high (_calibration+6)
  1287   002132  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1288   002134  ECE1  F01E         	call	_adjust_calibration	;wreg free
  1289   002138                     
  1290                           ;main.c: 99:             forward(calibration.forward, &motorL, &motorR);
  1291   002138  0E83               	movlw	low _motorL
  1292   00213A  6E14               	movwf	forward@mL^0,c
  1293   00213C  0E01               	movlw	high _motorL
  1294   00213E  6E15               	movwf	(forward@mL+1)^0,c
  1295   002140  0E7A               	movlw	low _motorR
  1296   002142  6E16               	movwf	forward@mR^0,c
  1297   002144  0E01               	movlw	high _motorR
  1298   002146  6E17               	movwf	(forward@mR+1)^0,c
  1299   002148  0101               	movlb	1	; () banked
  1300   00214A  5176               	movf	(_calibration+6)& (0+255),w,b
  1301   00214C  EC13  F01A         	call	_forward
  1302   002150                     
  1303                           ;main.c: 100:             switch_calibration(&calibration.index);
  1304   002150  0E70               	movlw	low _calibration
  1305   002152  6E01               	movwf	switch_calibration@calibration_index^0,c
  1306   002154  0E01               	movlw	high _calibration
  1307   002156  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1308   002158  ECDC  F021         	call	_switch_calibration	;wreg free
  1309   00215C                     l4997:
  1310                           
  1311                           ;main.c: 108:         if(calibration.index == 4){
  1312   00215C  0E04               	movlw	4
  1313   00215E  0101               	movlb	1	; () banked
  1314   002160  1970               	xorwf	_calibration& (0+255),w,b
  1315   002162  A4D8               	btfss	status,2,c
  1316   002164  EFB6  F010         	goto	u5501
  1317   002168  EFB8  F010         	goto	u5500
  1318   00216C                     u5501:
  1319   00216C  EF4A  F010         	goto	l4973
  1320   002170                     u5500:
  1321   002170                     
  1322                           ; BSR set to: 1
  1323                           ;main.c: 116:     char Operation_Count = 0;
  1324   002170  0E00               	movlw	0
  1325   002172  6FBB               	movwf	main@Operation_Count& (0+255),b
  1326                           
  1327                           ;main.c: 117:     char Forward_Count = 0;
  1328   002174  0E00               	movlw	0
  1329   002176  6FB8               	movwf	main@Forward_Count& (0+255),b
  1330                           
  1331                           ;main.c: 118:     char length = 20;
  1332   002178  0E14               	movlw	20
  1333   00217A  6FB4               	movwf	main@length& (0+255),b
  1334   00217C                     
  1335                           ; BSR set to: 1
  1336                           ;main.c: 119:     char Operation_History[20] = {0};
  1337   00217C  EE21  F0A0         	lfsr	2,main@Operation_History
  1338   002180  0E13               	movlw	19
  1339   002182                     u5511:
  1340   002182  6ADE               	clrf	postinc2,c
  1341   002184  06E8               	decf	wreg,f,c
  1342   002186  E2FD               	bc	u5511
  1343   002188                     
  1344                           ; BSR set to: 1
  1345                           ;main.c: 120:     int Color_Value;;main.c: 122:     color_click_init();
  1346   002188  EC45  F024         	call	_color_click_init	;wreg free
  1347   00218C                     
  1348                           ;main.c: 123:     initUSART4();
  1349   00218C  EC18  F025         	call	_initUSART4	;wreg free
  1350   002190                     
  1351                           ;main.c: 127:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1352   002190  0E52               	movlw	82
  1353   002192  0100               	movlb	0	; () banked
  1354   002194  6FE0               	movwf	(??_main+1)& (0+255),b
  1355   002196  0E2B               	movlw	43
  1356   002198  6FDF               	movwf	??_main& (0+255),b
  1357   00219A  0E00               	movlw	0
  1358   00219C                     u5647:
  1359   00219C  2EE8               	decfsz	wreg,f,c
  1360   00219E  D7FE               	bra	u5647
  1361   0021A0  2FDF               	decfsz	??_main& (0+255),f,b
  1362   0021A2  D7FC               	bra	u5647
  1363   0021A4  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1364   0021A6  D7FA               	bra	u5647
  1365   0021A8  0000               	nop	
  1366   0021AA                     l5011:
  1367                           
  1368                           ;main.c: 132:         LATHbits.LATH3 = 1;
  1369   0021AA  8680               	bsf	128,3,c	;volatile
  1370   0021AC                     
  1371                           ;main.c: 133:         LATDbits.LATD7 = 1;
  1372   0021AC  8E7C               	bsf	124,7,c	;volatile
  1373   0021AE                     
  1374                           ;main.c: 135:         forward(calibration.forward, &motorL, &motorR);
  1375   0021AE  0E83               	movlw	low _motorL
  1376   0021B0  6E14               	movwf	forward@mL^0,c
  1377   0021B2  0E01               	movlw	high _motorL
  1378   0021B4  6E15               	movwf	(forward@mL+1)^0,c
  1379   0021B6  0E7A               	movlw	low _motorR
  1380   0021B8  6E16               	movwf	forward@mR^0,c
  1381   0021BA  0E01               	movlw	high _motorR
  1382   0021BC  6E17               	movwf	(forward@mR+1)^0,c
  1383   0021BE  0101               	movlb	1	; () banked
  1384   0021C0  5176               	movf	(_calibration+6)& (0+255),w,b
  1385   0021C2  EC13  F01A         	call	_forward
  1386   0021C6                     
  1387                           ;main.c: 136:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1388   0021C6  0E52               	movlw	82
  1389   0021C8  0100               	movlb	0	; () banked
  1390   0021CA  6FE0               	movwf	(??_main+1)& (0+255),b
  1391   0021CC  0E2B               	movlw	43
  1392   0021CE  6FDF               	movwf	??_main& (0+255),b
  1393   0021D0  0E00               	movlw	0
  1394   0021D2                     u5657:
  1395   0021D2  2EE8               	decfsz	wreg,f,c
  1396   0021D4  D7FE               	bra	u5657
  1397   0021D6  2FDF               	decfsz	??_main& (0+255),f,b
  1398   0021D8  D7FC               	bra	u5657
  1399   0021DA  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1400   0021DC  D7FA               	bra	u5657
  1401   0021DE  0000               	nop	
  1402   0021E0                     
  1403                           ;main.c: 137:         Forward_Count++;
  1404   0021E0  0101               	movlb	1	; () banked
  1405   0021E2  2BB8               	incf	main@Forward_Count& (0+255),f,b
  1406   0021E4                     
  1407                           ; BSR set to: 1
  1408                           ;main.c: 138:         Color_Value = color_cardCheck();
  1409   0021E4  EC04  F007         	call	_color_cardCheck	;wreg free
  1410   0021E8  C05C  F1BC         	movff	?_color_cardCheck,main@Color_Value
  1411   0021EC  C05D  F1BD         	movff	?_color_cardCheck+1,main@Color_Value+1
  1412   0021F0                     
  1413                           ;main.c: 140:         LATHbits.LATH3 = 0;
  1414   0021F0  9680               	bcf	128,3,c	;volatile
  1415   0021F2                     
  1416                           ;main.c: 141:         LATDbits.LATD7 = 0;
  1417   0021F2  9E7C               	bcf	124,7,c	;volatile
  1418   0021F4                     
  1419                           ;main.c: 142:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1420   0021F4  0E52               	movlw	82
  1421   0021F6  0100               	movlb	0	; () banked
  1422   0021F8  6FE0               	movwf	(??_main+1)& (0+255),b
  1423   0021FA  0E2B               	movlw	43
  1424   0021FC  6FDF               	movwf	??_main& (0+255),b
  1425   0021FE  0E00               	movlw	0
  1426   002200                     u5667:
  1427   002200  2EE8               	decfsz	wreg,f,c
  1428   002202  D7FE               	bra	u5667
  1429   002204  2FDF               	decfsz	??_main& (0+255),f,b
  1430   002206  D7FC               	bra	u5667
  1431   002208  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  1432   00220A  D7FA               	bra	u5667
  1433   00220C  0000               	nop	
  1434   00220E                     
  1435                           ;main.c: 144:         if(Color_Value != 0){
  1436   00220E  0101               	movlb	1	; () banked
  1437   002210  51BC               	movf	main@Color_Value& (0+255),w,b
  1438   002212  11BD               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1439   002214  B4D8               	btfsc	status,2,c
  1440   002216  EF0F  F011         	goto	u5521
  1441   00221A  EF11  F011         	goto	u5520
  1442   00221E                     u5521:
  1443   00221E  EFB5  F012         	goto	l5109
  1444   002222                     u5520:
  1445   002222                     
  1446                           ; BSR set to: 1
  1447                           ;main.c: 145:             Operation_History[Operation_Count] = Forward_Count + 10;
  1448   002222  0EA0               	movlw	low main@Operation_History
  1449   002224  25BB               	addwf	main@Operation_Count& (0+255),w,b
  1450   002226  6ED9               	movwf	fsr2l,c
  1451   002228  6ADA               	clrf	fsr2h,c
  1452   00222A  0E01               	movlw	high main@Operation_History
  1453   00222C  22DA               	addwfc	fsr2h,f,c
  1454   00222E  51B8               	movf	main@Forward_Count& (0+255),w,b
  1455   002230  0F0A               	addlw	10
  1456   002232  6EDF               	movwf	indf2,c
  1457   002234                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 146:             Forward_Count = 0;
  1460   002234  0E00               	movlw	0
  1461   002236  6FB8               	movwf	main@Forward_Count& (0+255),b
  1462   002238                     
  1463                           ; BSR set to: 1
  1464                           ;main.c: 147:             Operation_Count++;
  1465   002238  2BBB               	incf	main@Operation_Count& (0+255),f,b
  1466   00223A                     
  1467                           ; BSR set to: 1
  1468                           ;main.c: 149:             if(Color_Value == 1){
  1469   00223A  05BC               	decf	main@Color_Value& (0+255),w,b
  1470   00223C  11BD               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1471   00223E  A4D8               	btfss	status,2,c
  1472   002240  EF24  F011         	goto	u5531
  1473   002244  EF26  F011         	goto	u5530
  1474   002248                     u5531:
  1475   002248  EF48  F011         	goto	l5047
  1476   00224C                     u5530:
  1477   00224C                     
  1478                           ; BSR set to: 1
  1479                           ;main.c: 150:                 Operation_History[Operation_Count] = Color_Value;
  1480   00224C  0EA0               	movlw	low main@Operation_History
  1481   00224E  25BB               	addwf	main@Operation_Count& (0+255),w,b
  1482   002250  6ED9               	movwf	fsr2l,c
  1483   002252  6ADA               	clrf	fsr2h,c
  1484   002254  0E01               	movlw	high main@Operation_History
  1485   002256  22DA               	addwfc	fsr2h,f,c
  1486   002258  C1BC  FFDF         	movff	main@Color_Value,indf2
  1487   00225C                     
  1488                           ; BSR set to: 1
  1489                           ;main.c: 151:                 Operation_Count++;
  1490   00225C  2BBB               	incf	main@Operation_Count& (0+255),f,b
  1491   00225E                     
  1492                           ; BSR set to: 1
  1493                           ;main.c: 152:                 backward(calibration.backward, &motorL, &motorR);
  1494   00225E  0E83               	movlw	low _motorL
  1495   002260  6E14               	movwf	backward@mL^0,c
  1496   002262  0E01               	movlw	high _motorL
  1497   002264  6E15               	movwf	(backward@mL+1)^0,c
  1498   002266  0E7A               	movlw	low _motorR
  1499   002268  6E16               	movwf	backward@mR^0,c
  1500   00226A  0E01               	movlw	high _motorR
  1501   00226C  6E17               	movwf	(backward@mR+1)^0,c
  1502   00226E  5177               	movf	(_calibration+7)& (0+255),w,b
  1503   002270  EC8D  F01C         	call	_backward
  1504   002274                     
  1505                           ;main.c: 153:                 turnRIGHT(calibration.right_90, &motorL, &motorR);
  1506   002274  0E83               	movlw	low _motorL
  1507   002276  6E14               	movwf	turnRIGHT@mL^0,c
  1508   002278  0E01               	movlw	high _motorL
  1509   00227A  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1510   00227C  0E7A               	movlw	low _motorR
  1511   00227E  6E16               	movwf	turnRIGHT@mR^0,c
  1512   002280  0E01               	movlw	high _motorR
  1513   002282  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1514   002284  0101               	movlb	1	; () banked
  1515   002286  5173               	movf	(_calibration+3)& (0+255),w,b
  1516   002288  ECE7  F01A         	call	_turnRIGHT
  1517                           
  1518                           ;main.c: 154:             }
  1519   00228C  EFB5  F012         	goto	l5109
  1520   002290                     l5047:
  1521                           
  1522                           ; BSR set to: 1
  1523   002290  0E02               	movlw	2
  1524   002292  19BC               	xorwf	main@Color_Value& (0+255),w,b
  1525   002294  11BD               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1526   002296  A4D8               	btfss	status,2,c
  1527   002298  EF50  F011         	goto	u5541
  1528   00229C  EF52  F011         	goto	u5540
  1529   0022A0                     u5541:
  1530   0022A0  EF74  F011         	goto	l5057
  1531   0022A4                     u5540:
  1532   0022A4                     
  1533                           ; BSR set to: 1
  1534                           ;main.c: 158:                 Operation_History[Operation_Count] = Color_Value;
  1535   0022A4  0EA0               	movlw	low main@Operation_History
  1536   0022A6  25BB               	addwf	main@Operation_Count& (0+255),w,b
  1537   0022A8  6ED9               	movwf	fsr2l,c
  1538   0022AA  6ADA               	clrf	fsr2h,c
  1539   0022AC  0E01               	movlw	high main@Operation_History
  1540   0022AE  22DA               	addwfc	fsr2h,f,c
  1541   0022B0  C1BC  FFDF         	movff	main@Color_Value,indf2
  1542   0022B4                     
  1543                           ; BSR set to: 1
  1544                           ;main.c: 159:                 Operation_Count++;
  1545   0022B4  2BBB               	incf	main@Operation_Count& (0+255),f,b
  1546   0022B6                     
  1547                           ; BSR set to: 1
  1548                           ;main.c: 160:                 backward(calibration.backward, &motorL, &motorR);
  1549   0022B6  0E83               	movlw	low _motorL
  1550   0022B8  6E14               	movwf	backward@mL^0,c
  1551   0022BA  0E01               	movlw	high _motorL
  1552   0022BC  6E15               	movwf	(backward@mL+1)^0,c
  1553   0022BE  0E7A               	movlw	low _motorR
  1554   0022C0  6E16               	movwf	backward@mR^0,c
  1555   0022C2  0E01               	movlw	high _motorR
  1556   0022C4  6E17               	movwf	(backward@mR+1)^0,c
  1557   0022C6  5177               	movf	(_calibration+7)& (0+255),w,b
  1558   0022C8  EC8D  F01C         	call	_backward
  1559   0022CC                     
  1560                           ;main.c: 161:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1561   0022CC  0E83               	movlw	low _motorL
  1562   0022CE  6E14               	movwf	turnLEFT@mL^0,c
  1563   0022D0  0E01               	movlw	high _motorL
  1564   0022D2  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1565   0022D4  0E7A               	movlw	low _motorR
  1566   0022D6  6E16               	movwf	turnLEFT@mR^0,c
  1567   0022D8  0E01               	movlw	high _motorR
  1568   0022DA  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1569   0022DC  0101               	movlb	1	; () banked
  1570   0022DE  5172               	movf	(_calibration+2)& (0+255),w,b
  1571   0022E0  ECBA  F01B         	call	_turnLEFT
  1572                           
  1573                           ;main.c: 162:             }
  1574   0022E4  EFB5  F012         	goto	l5109
  1575   0022E8                     l5057:
  1576                           
  1577                           ; BSR set to: 1
  1578   0022E8  0E03               	movlw	3
  1579   0022EA  19BC               	xorwf	main@Color_Value& (0+255),w,b
  1580   0022EC  11BD               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1581   0022EE  A4D8               	btfss	status,2,c
  1582   0022F0  EF7C  F011         	goto	u5551
  1583   0022F4  EF7E  F011         	goto	u5550
  1584   0022F8                     u5551:
  1585   0022F8  EFAC  F011         	goto	l5069
  1586   0022FC                     u5550:
  1587   0022FC                     
  1588                           ; BSR set to: 1
  1589                           ;main.c: 166:                 Operation_History[Operation_Count] = Color_Value;
  1590   0022FC  0EA0               	movlw	low main@Operation_History
  1591   0022FE  25BB               	addwf	main@Operation_Count& (0+255),w,b
  1592   002300  6ED9               	movwf	fsr2l,c
  1593   002302  6ADA               	clrf	fsr2h,c
  1594   002304  0E01               	movlw	high main@Operation_History
  1595   002306  22DA               	addwfc	fsr2h,f,c
  1596   002308  C1BC  FFDF         	movff	main@Color_Value,indf2
  1597   00230C                     
  1598                           ; BSR set to: 1
  1599                           ;main.c: 167:                 Operation_Count++;
  1600   00230C  2BBB               	incf	main@Operation_Count& (0+255),f,b
  1601   00230E                     
  1602                           ; BSR set to: 1
  1603                           ;main.c: 168:                 backward(calibration.backward, &motorL, &motorR);
  1604   00230E  0E83               	movlw	low _motorL
  1605   002310  6E14               	movwf	backward@mL^0,c
  1606   002312  0E01               	movlw	high _motorL
  1607   002314  6E15               	movwf	(backward@mL+1)^0,c
  1608   002316  0E7A               	movlw	low _motorR
  1609   002318  6E16               	movwf	backward@mR^0,c
  1610   00231A  0E01               	movlw	high _motorR
  1611   00231C  6E17               	movwf	(backward@mR+1)^0,c
  1612   00231E  5177               	movf	(_calibration+7)& (0+255),w,b
  1613   002320  EC8D  F01C         	call	_backward
  1614   002324                     
  1615                           ;main.c: 169:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1616   002324  0E83               	movlw	low _motorL
  1617   002326  6E14               	movwf	turnLEFT@mL^0,c
  1618   002328  0E01               	movlw	high _motorL
  1619   00232A  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1620   00232C  0E7A               	movlw	low _motorR
  1621   00232E  6E16               	movwf	turnLEFT@mR^0,c
  1622   002330  0E01               	movlw	high _motorR
  1623   002332  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1624   002334  0101               	movlb	1	; () banked
  1625   002336  5172               	movf	(_calibration+2)& (0+255),w,b
  1626   002338  ECBA  F01B         	call	_turnLEFT
  1627   00233C                     
  1628                           ;main.c: 170:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1629   00233C  0E83               	movlw	low _motorL
  1630   00233E  6E14               	movwf	turnLEFT@mL^0,c
  1631   002340  0E01               	movlw	high _motorL
  1632   002342  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1633   002344  0E7A               	movlw	low _motorR
  1634   002346  6E16               	movwf	turnLEFT@mR^0,c
  1635   002348  0E01               	movlw	high _motorR
  1636   00234A  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1637   00234C  0101               	movlb	1	; () banked
  1638   00234E  5172               	movf	(_calibration+2)& (0+255),w,b
  1639   002350  ECBA  F01B         	call	_turnLEFT
  1640                           
  1641                           ;main.c: 171:             }
  1642   002354  EFB5  F012         	goto	l5109
  1643   002358                     l5069:
  1644                           
  1645                           ; BSR set to: 1
  1646   002358  0E08               	movlw	8
  1647   00235A  19BC               	xorwf	main@Color_Value& (0+255),w,b
  1648   00235C  11BD               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1649   00235E  A4D8               	btfss	status,2,c
  1650   002360  EFB4  F011         	goto	u5561
  1651   002364  EFB6  F011         	goto	u5560
  1652   002368                     u5561:
  1653   002368  EFB5  F012         	goto	l5109
  1654   00236C                     u5560:
  1655   00236C                     
  1656                           ; BSR set to: 1
  1657                           ;main.c: 174:                 backward(calibration.backward, &motorL, &motorR);
  1658   00236C  0E83               	movlw	low _motorL
  1659   00236E  6E14               	movwf	backward@mL^0,c
  1660   002370  0E01               	movlw	high _motorL
  1661   002372  6E15               	movwf	(backward@mL+1)^0,c
  1662   002374  0E7A               	movlw	low _motorR
  1663   002376  6E16               	movwf	backward@mR^0,c
  1664   002378  0E01               	movlw	high _motorR
  1665   00237A  6E17               	movwf	(backward@mR+1)^0,c
  1666   00237C  5177               	movf	(_calibration+7)& (0+255),w,b
  1667   00237E  EC8D  F01C         	call	_backward
  1668                           
  1669                           ;main.c: 176:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1670   002382  0E83               	movlw	low _motorL
  1671   002384  6E14               	movwf	turnLEFT@mL^0,c
  1672   002386  0E01               	movlw	high _motorL
  1673   002388  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1674   00238A  0E7A               	movlw	low _motorR
  1675   00238C  6E16               	movwf	turnLEFT@mR^0,c
  1676   00238E  0E01               	movlw	high _motorR
  1677   002390  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1678   002392  0101               	movlb	1	; () banked
  1679   002394  5172               	movf	(_calibration+2)& (0+255),w,b
  1680   002396  ECBA  F01B         	call	_turnLEFT
  1681                           
  1682                           ;main.c: 177:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1683   00239A  0E83               	movlw	low _motorL
  1684   00239C  6E14               	movwf	turnLEFT@mL^0,c
  1685   00239E  0E01               	movlw	high _motorL
  1686   0023A0  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1687   0023A2  0E7A               	movlw	low _motorR
  1688   0023A4  6E16               	movwf	turnLEFT@mR^0,c
  1689   0023A6  0E01               	movlw	high _motorR
  1690   0023A8  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1691   0023AA  0101               	movlb	1	; () banked
  1692   0023AC  5172               	movf	(_calibration+2)& (0+255),w,b
  1693   0023AE  ECBA  F01B         	call	_turnLEFT
  1694                           
  1695                           ;main.c: 178:                 backward(calibration.backward, &motorL, &motorR);
  1696   0023B2  0E83               	movlw	low _motorL
  1697   0023B4  6E14               	movwf	backward@mL^0,c
  1698   0023B6  0E01               	movlw	high _motorL
  1699   0023B8  6E15               	movwf	(backward@mL+1)^0,c
  1700   0023BA  0E7A               	movlw	low _motorR
  1701   0023BC  6E16               	movwf	backward@mR^0,c
  1702   0023BE  0E01               	movlw	high _motorR
  1703   0023C0  6E17               	movwf	(backward@mR+1)^0,c
  1704   0023C2  0101               	movlb	1	; () banked
  1705   0023C4  5177               	movf	(_calibration+7)& (0+255),w,b
  1706   0023C6  EC8D  F01C         	call	_backward
  1707   0023CA                     
  1708                           ;main.c: 180:                 for (int i = (length-1); i >= 0; i--) {
  1709   0023CA  0EFF               	movlw	255
  1710   0023CC  0101               	movlb	1	; () banked
  1711   0023CE  25B4               	addwf	main@length& (0+255),w,b
  1712   0023D0  6FBE               	movwf	main@i& (0+255),b
  1713   0023D2  6BBF               	clrf	(main@i+1)& (0+255),b
  1714   0023D4  0EFF               	movlw	255
  1715   0023D6  23BF               	addwfc	(main@i+1)& (0+255),f,b
  1716   0023D8                     l5075:
  1717                           
  1718                           ; BSR set to: 1
  1719   0023D8  BFBF               	btfsc	(main@i+1)& (0+255),7,b
  1720   0023DA  EFF3  F011         	goto	u5570
  1721   0023DE  EFF1  F011         	goto	u5571
  1722   0023E2                     u5571:
  1723   0023E2  EFF5  F011         	goto	l5079
  1724   0023E6                     u5570:
  1725   0023E6  EFB5  F012         	goto	l5109
  1726   0023EA                     l5079:
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;main.c: 181:                     if(Operation_History[i] == 1){
  1730   0023EA  0EA0               	movlw	low main@Operation_History
  1731   0023EC  25BE               	addwf	main@i& (0+255),w,b
  1732   0023EE  6ED9               	movwf	fsr2l,c
  1733   0023F0  0E01               	movlw	high main@Operation_History
  1734   0023F2  21BF               	addwfc	(main@i+1)& (0+255),w,b
  1735   0023F4  6EDA               	movwf	fsr2h,c
  1736   0023F6  04DE               	decf	postinc2,w,c
  1737   0023F8  A4D8               	btfss	status,2,c
  1738   0023FA  EF01  F012         	goto	u5581
  1739   0023FE  EF03  F012         	goto	u5580
  1740   002402                     u5581:
  1741   002402  EF1C  F012         	goto	l5083
  1742   002406                     u5580:
  1743   002406                     
  1744                           ; BSR set to: 1
  1745                           ;main.c: 182:                         turnLEFT(calibration.left_90, &motorL, &motorR);
  1746   002406  0E83               	movlw	low _motorL
  1747   002408  6E14               	movwf	turnLEFT@mL^0,c
  1748   00240A  0E01               	movlw	high _motorL
  1749   00240C  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1750   00240E  0E7A               	movlw	low _motorR
  1751   002410  6E16               	movwf	turnLEFT@mR^0,c
  1752   002412  0E01               	movlw	high _motorR
  1753   002414  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1754   002416  5172               	movf	(_calibration+2)& (0+255),w,b
  1755   002418  ECBA  F01B         	call	_turnLEFT
  1756                           
  1757                           ;main.c: 183:                         backward(calibration.backward, &motorL, &motorR);
  1758   00241C  0E83               	movlw	low _motorL
  1759   00241E  6E14               	movwf	backward@mL^0,c
  1760   002420  0E01               	movlw	high _motorL
  1761   002422  6E15               	movwf	(backward@mL+1)^0,c
  1762   002424  0E7A               	movlw	low _motorR
  1763   002426  6E16               	movwf	backward@mR^0,c
  1764   002428  0E01               	movlw	high _motorR
  1765   00242A  6E17               	movwf	(backward@mR+1)^0,c
  1766   00242C  0101               	movlb	1	; () banked
  1767   00242E  5177               	movf	(_calibration+7)& (0+255),w,b
  1768   002430  EC8D  F01C         	call	_backward
  1769                           
  1770                           ;main.c: 184:                     }
  1771   002434  EFAF  F012         	goto	l5105
  1772   002438                     l5083:
  1773                           
  1774                           ; BSR set to: 1
  1775   002438  0EA0               	movlw	low main@Operation_History
  1776   00243A  25BE               	addwf	main@i& (0+255),w,b
  1777   00243C  6ED9               	movwf	fsr2l,c
  1778   00243E  0E01               	movlw	high main@Operation_History
  1779   002440  21BF               	addwfc	(main@i+1)& (0+255),w,b
  1780   002442  6EDA               	movwf	fsr2h,c
  1781   002444  0E02               	movlw	2
  1782   002446  18DE               	xorwf	postinc2,w,c
  1783   002448  A4D8               	btfss	status,2,c
  1784   00244A  EF29  F012         	goto	u5591
  1785   00244E  EF2B  F012         	goto	u5590
  1786   002452                     u5591:
  1787   002452  EF44  F012         	goto	l5087
  1788   002456                     u5590:
  1789   002456                     
  1790                           ; BSR set to: 1
  1791                           ;main.c: 186:                         turnRIGHT(calibration.right_90, &motorL, &motorR);
  1792   002456  0E83               	movlw	low _motorL
  1793   002458  6E14               	movwf	turnRIGHT@mL^0,c
  1794   00245A  0E01               	movlw	high _motorL
  1795   00245C  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1796   00245E  0E7A               	movlw	low _motorR
  1797   002460  6E16               	movwf	turnRIGHT@mR^0,c
  1798   002462  0E01               	movlw	high _motorR
  1799   002464  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1800   002466  5173               	movf	(_calibration+3)& (0+255),w,b
  1801   002468  ECE7  F01A         	call	_turnRIGHT
  1802                           
  1803                           ;main.c: 187:                         backward(calibration.backward, &motorL, &motorR);
  1804   00246C  0E83               	movlw	low _motorL
  1805   00246E  6E14               	movwf	backward@mL^0,c
  1806   002470  0E01               	movlw	high _motorL
  1807   002472  6E15               	movwf	(backward@mL+1)^0,c
  1808   002474  0E7A               	movlw	low _motorR
  1809   002476  6E16               	movwf	backward@mR^0,c
  1810   002478  0E01               	movlw	high _motorR
  1811   00247A  6E17               	movwf	(backward@mR+1)^0,c
  1812   00247C  0101               	movlb	1	; () banked
  1813   00247E  5177               	movf	(_calibration+7)& (0+255),w,b
  1814   002480  EC8D  F01C         	call	_backward
  1815                           
  1816                           ;main.c: 188:                     }
  1817   002484  EFAF  F012         	goto	l5105
  1818   002488                     l5087:
  1819                           
  1820                           ; BSR set to: 1
  1821   002488  0EA0               	movlw	low main@Operation_History
  1822   00248A  25BE               	addwf	main@i& (0+255),w,b
  1823   00248C  6ED9               	movwf	fsr2l,c
  1824   00248E  0E01               	movlw	high main@Operation_History
  1825   002490  21BF               	addwfc	(main@i+1)& (0+255),w,b
  1826   002492  6EDA               	movwf	fsr2h,c
  1827   002494  0E03               	movlw	3
  1828   002496  18DE               	xorwf	postinc2,w,c
  1829   002498  A4D8               	btfss	status,2,c
  1830   00249A  EF51  F012         	goto	u5601
  1831   00249E  EF53  F012         	goto	u5600
  1832   0024A2                     u5601:
  1833   0024A2  EF6C  F012         	goto	l5091
  1834   0024A6                     u5600:
  1835   0024A6                     
  1836                           ; BSR set to: 1
  1837                           ;main.c: 191:                         turnLEFT(calibration.left_90, &motorL, &motorR);
  1838   0024A6  0E83               	movlw	low _motorL
  1839   0024A8  6E14               	movwf	turnLEFT@mL^0,c
  1840   0024AA  0E01               	movlw	high _motorL
  1841   0024AC  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1842   0024AE  0E7A               	movlw	low _motorR
  1843   0024B0  6E16               	movwf	turnLEFT@mR^0,c
  1844   0024B2  0E01               	movlw	high _motorR
  1845   0024B4  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1846   0024B6  5172               	movf	(_calibration+2)& (0+255),w,b
  1847   0024B8  ECBA  F01B         	call	_turnLEFT
  1848                           
  1849                           ;main.c: 192:                         turnLEFT(calibration.left_90, &motorL, &motorR);
  1850   0024BC  0E83               	movlw	low _motorL
  1851   0024BE  6E14               	movwf	turnLEFT@mL^0,c
  1852   0024C0  0E01               	movlw	high _motorL
  1853   0024C2  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1854   0024C4  0E7A               	movlw	low _motorR
  1855   0024C6  6E16               	movwf	turnLEFT@mR^0,c
  1856   0024C8  0E01               	movlw	high _motorR
  1857   0024CA  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1858   0024CC  0101               	movlb	1	; () banked
  1859   0024CE  5172               	movf	(_calibration+2)& (0+255),w,b
  1860   0024D0  ECBA  F01B         	call	_turnLEFT
  1861                           
  1862                           ;main.c: 193:                     }
  1863   0024D4  EFAF  F012         	goto	l5105
  1864   0024D8                     l5091:
  1865                           
  1866                           ; BSR set to: 1
  1867   0024D8  0EA0               	movlw	low main@Operation_History
  1868   0024DA  25BE               	addwf	main@i& (0+255),w,b
  1869   0024DC  6ED9               	movwf	fsr2l,c
  1870   0024DE  0E01               	movlw	high main@Operation_History
  1871   0024E0  21BF               	addwfc	(main@i+1)& (0+255),w,b
  1872   0024E2  6EDA               	movwf	fsr2h,c
  1873   0024E4  0E0A               	movlw	10
  1874   0024E6  64DF               	cpfsgt	indf2,c
  1875   0024E8  EF78  F012         	goto	u5611
  1876   0024EC  EF7A  F012         	goto	u5610
  1877   0024F0                     u5611:
  1878   0024F0  EFAF  F012         	goto	l374
  1879   0024F4                     u5610:
  1880   0024F4                     
  1881                           ; BSR set to: 1
  1882                           ;main.c: 212:                         unsigned char distance_back = Operation_History[i]
      +                           - 10;
  1883   0024F4  0EA0               	movlw	low main@Operation_History
  1884   0024F6  25BE               	addwf	main@i& (0+255),w,b
  1885   0024F8  6ED9               	movwf	fsr2l,c
  1886   0024FA  0E01               	movlw	high main@Operation_History
  1887   0024FC  21BF               	addwfc	(main@i+1)& (0+255),w,b
  1888   0024FE  6EDA               	movwf	fsr2h,c
  1889   002500  50DF               	movf	indf2,w,c
  1890   002502  0FF6               	addlw	246
  1891   002504  6FB5               	movwf	main@distance_back& (0+255),b
  1892   002506                     
  1893                           ; BSR set to: 1
  1894                           ;main.c: 213:                         for (int j = 0; j < distance_back; j++) {forward(c
      +                          alibration.forward, &motorL, &motorR);}
  1895   002506  0E00               	movlw	0
  1896   002508  6FB7               	movwf	(main@j+1)& (0+255),b
  1897   00250A  0E00               	movlw	0
  1898   00250C  6FB6               	movwf	main@j& (0+255),b
  1899   00250E  EF98  F012         	goto	l5101
  1900   002512                     l5097:
  1901                           
  1902                           ; BSR set to: 0
  1903   002512  0E83               	movlw	low _motorL
  1904   002514  6E14               	movwf	forward@mL^0,c
  1905   002516  0E01               	movlw	high _motorL
  1906   002518  6E15               	movwf	(forward@mL+1)^0,c
  1907   00251A  0E7A               	movlw	low _motorR
  1908   00251C  6E16               	movwf	forward@mR^0,c
  1909   00251E  0E01               	movlw	high _motorR
  1910   002520  6E17               	movwf	(forward@mR+1)^0,c
  1911   002522  0101               	movlb	1	; () banked
  1912   002524  5176               	movf	(_calibration+6)& (0+255),w,b
  1913   002526  EC13  F01A         	call	_forward
  1914   00252A  0101               	movlb	1	; () banked
  1915   00252C  4BB6               	infsnz	main@j& (0+255),f,b
  1916   00252E  2BB7               	incf	(main@j+1)& (0+255),f,b
  1917   002530                     l5101:
  1918                           
  1919                           ; BSR set to: 1
  1920   002530  51B5               	movf	main@distance_back& (0+255),w,b
  1921   002532  0100               	movlb	0	; () banked
  1922   002534  6FDF               	movwf	??_main& (0+255),b
  1923   002536  6BE0               	clrf	(??_main+1)& (0+255),b
  1924   002538  51DF               	movf	??_main& (0+255),w,b
  1925   00253A  0101               	movlb	1	; () banked
  1926   00253C  5DB6               	subwf	main@j& (0+255),w,b
  1927   00253E  51B7               	movf	(main@j+1)& (0+255),w,b
  1928   002540  0A80               	xorlw	128
  1929   002542  0100               	movlb	0	; () banked
  1930   002544  6FE1               	movwf	(??_main+2)& (0+255),b
  1931   002546  51E0               	movf	(??_main+1)& (0+255),w,b
  1932   002548  0A80               	xorlw	128
  1933   00254A  59E1               	subwfb	(??_main+2)& (0+255),w,b
  1934   00254C  A0D8               	btfss	status,0,c
  1935   00254E  EFAB  F012         	goto	u5621
  1936   002552  EFAD  F012         	goto	u5620
  1937   002556                     u5621:
  1938   002556  EF89  F012         	goto	l5097
  1939   00255A                     u5620:
  1940   00255A  EFAF  F012         	goto	l5105
  1941   00255E                     l374:
  1942   00255E                     l5105:
  1943                           
  1944                           ;main.c: 221:                 }
  1945   00255E  0101               	movlb	1	; () banked
  1946   002560  07BE               	decf	main@i& (0+255),f,b
  1947   002562  A0D8               	btfss	status,0,c
  1948   002564  07BF               	decf	(main@i+1)& (0+255),f,b
  1949   002566  EFEC  F011         	goto	l5075
  1950   00256A                     l5109:
  1951                           
  1952                           ;main.c: 231:          char senddata[20];;main.c: 233:          for (int i = 0; i < 10; 
      +                          i++) {
  1953   00256A  0E00               	movlw	0
  1954   00256C  0101               	movlb	1	; () banked
  1955   00256E  6FBA               	movwf	(main@i_1544+1)& (0+255),b
  1956   002570  0E00               	movlw	0
  1957   002572  6FB9               	movwf	main@i_1544& (0+255),b
  1958   002574                     l5111:
  1959                           
  1960                           ; BSR set to: 1
  1961   002574  BFBA               	btfsc	(main@i_1544+1)& (0+255),7,b
  1962   002576  EFC6  F012         	goto	u5631
  1963   00257A  51BA               	movf	(main@i_1544+1)& (0+255),w,b
  1964   00257C  E109               	bnz	u5630
  1965   00257E  0E0A               	movlw	10
  1966   002580  5DB9               	subwf	main@i_1544& (0+255),w,b
  1967   002582  A0D8               	btfss	status,0,c
  1968   002584  EFC6  F012         	goto	u5631
  1969   002588  EFC8  F012         	goto	u5630
  1970   00258C                     u5631:
  1971   00258C  EFCA  F012         	goto	l5115
  1972   002590                     u5630:
  1973   002590  EFD5  F010         	goto	l5011
  1974   002594                     l5115:
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;main.c: 234:             sprintf(senddata, "%u, ", Operation_History[i]);
  1978   002594  0E8C               	movlw	low main@senddata
  1979   002596  6E1D               	movwf	sprintf@s^0,c
  1980   002598  0E01               	movlw	high main@senddata
  1981   00259A  6E1E               	movwf	(sprintf@s+1)^0,c
  1982   00259C  0E01               	movlw	low STR_1
  1983   00259E  6E1F               	movwf	sprintf@fmt^0,c
  1984   0025A0  0EA0               	movlw	low main@Operation_History
  1985   0025A2  25B9               	addwf	main@i_1544& (0+255),w,b
  1986   0025A4  6ED9               	movwf	fsr2l,c
  1987   0025A6  0E01               	movlw	high main@Operation_History
  1988   0025A8  21BA               	addwfc	(main@i_1544+1)& (0+255),w,b
  1989   0025AA  6EDA               	movwf	fsr2h,c
  1990   0025AC  50DF               	movf	indf2,w,c
  1991   0025AE  0100               	movlb	0	; () banked
  1992   0025B0  6FDF               	movwf	??_main& (0+255),b
  1993   0025B2  51DF               	movf	??_main& (0+255),w,b
  1994   0025B4  6E20               	movwf	(?_sprintf+3)^0,c
  1995   0025B6  6A21               	clrf	(?_sprintf+4)^0,c
  1996   0025B8  EC65  F024         	call	_sprintf	;wreg free
  1997   0025BC                     
  1998                           ;main.c: 235:             sendStringSerial4(senddata);
  1999   0025BC  0E8C               	movlw	low main@senddata
  2000   0025BE  6E02               	movwf	sendStringSerial4@string^0,c
  2001   0025C0  0E01               	movlw	high main@senddata
  2002   0025C2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2003   0025C4  EC9D  F024         	call	_sendStringSerial4	;wreg free
  2004   0025C8                     
  2005                           ;main.c: 236:             _delay((unsigned long)((50)*(64000000/4000.0)));
  2006   0025C8  0E05               	movlw	5
  2007   0025CA  0100               	movlb	0	; () banked
  2008   0025CC  6FE0               	movwf	(??_main+1)& (0+255),b
  2009   0025CE  0E0F               	movlw	15
  2010   0025D0  6FDF               	movwf	??_main& (0+255),b
  2011   0025D2  0EF1               	movlw	241
  2012   0025D4                     u5677:
  2013   0025D4  2EE8               	decfsz	wreg,f,c
  2014   0025D6  D7FE               	bra	u5677
  2015   0025D8  2FDF               	decfsz	??_main& (0+255),f,b
  2016   0025DA  D7FC               	bra	u5677
  2017   0025DC  2FE0               	decfsz	(??_main+1)& (0+255),f,b
  2018   0025DE  D7FA               	bra	u5677
  2019   0025E0                     
  2020                           ;main.c: 237:         }
  2021   0025E0  0101               	movlb	1	; () banked
  2022   0025E2  4BB9               	infsnz	main@i_1544& (0+255),f,b
  2023   0025E4  2BBA               	incf	(main@i_1544+1)& (0+255),f,b
  2024   0025E6  EFBA  F012         	goto	l5111
  2025   0025EA  EF00  F000         	goto	start
  2026   0025EE                     __end_of_main:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _turnRIGHT *****************
  2030 ;; Defined at:
  2031 ;;		line 244 in file "dc_motor_v1.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  rotation_cal    1    wreg     unsigned char 
  2034 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  2035 ;;		 -> motorL(9), 
  2036 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  2037 ;;		 -> motorR(9), 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  rotation_cal    1   26[COMRAM] unsigned char 
  2040 ;;  j               2   29[COMRAM] int 
  2041 ;;  i               2   27[COMRAM] int 
  2042 ;;  delay_time      2   33[COMRAM] int 
  2043 ;;  max_power       2   31[COMRAM] int 
  2044 ;;  acceleration    2    0        int 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;Total ram usage:       16 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 2
  2061 ;; This function calls:
  2062 ;;		___awdiv
  2063 ;;		_delay_ms_function
  2064 ;;		_setMotorPWM
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text1
  2071   0035CE                     __ptext1:
  2072                           	callstack 0
  2073   0035CE                     _turnRIGHT:
  2074                           	callstack 28
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;incstack = 0
  2078                           ;turnRIGHT@rotation_calibration stored from wreg
  2079   0035CE  6E1B               	movwf	turnRIGHT@rotation_calibration^0,c
  2080   0035D0                     
  2081                           ;dc_motor_v1.c: 245:     mL->direction = 1;
  2082   0035D0  EE20 F001          	lfsr	2,1
  2083   0035D4  5014               	movf	turnRIGHT@mL^0,w,c
  2084   0035D6  26D9               	addwf	fsr2l,f,c
  2085   0035D8  5015               	movf	(turnRIGHT@mL+1)^0,w,c
  2086   0035DA  22DA               	addwfc	fsr2h,f,c
  2087   0035DC  0E01               	movlw	1
  2088   0035DE  6EDF               	movwf	indf2,c
  2089                           
  2090                           ;dc_motor_v1.c: 246:     mR->direction = 0;
  2091   0035E0  EE20 F001          	lfsr	2,1
  2092   0035E4  5016               	movf	turnRIGHT@mR^0,w,c
  2093   0035E6  26D9               	addwf	fsr2l,f,c
  2094   0035E8  5017               	movf	(turnRIGHT@mR+1)^0,w,c
  2095   0035EA  22DA               	addwfc	fsr2h,f,c
  2096   0035EC  6ADF               	clrf	indf2,c
  2097   0035EE                     
  2098                           ;dc_motor_v1.c: 248:    int max_power = 20;
  2099   0035EE  0E00               	movlw	0
  2100   0035F0  6E21               	movwf	(turnRIGHT@max_power+1)^0,c
  2101   0035F2  0E14               	movlw	20
  2102   0035F4  6E20               	movwf	turnRIGHT@max_power^0,c
  2103   0035F6                     
  2104                           ;dc_motor_v1.c: 250:     int delay_time = acceleration_time/max_power;
  2105   0035F6  0E00               	movlw	0
  2106   0035F8  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2107   0035FA  0E64               	movlw	100
  2108   0035FC  6E01               	movwf	___awdiv@dividend^0,c
  2109   0035FE  0E00               	movlw	0
  2110   003600  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2111   003602  0E14               	movlw	20
  2112   003604  6E03               	movwf	___awdiv@divisor^0,c
  2113   003606  EC1D  F021         	call	___awdiv	;wreg free
  2114   00360A  C001  F022         	movff	?___awdiv,turnRIGHT@delay_time
  2115   00360E  C002  F023         	movff	?___awdiv+1,turnRIGHT@delay_time+1
  2116   003612                     
  2117                           ;dc_motor_v1.c: 253:     for(int i=0; i< max_power; i++){
  2118   003612  0E00               	movlw	0
  2119   003614  6E1D               	movwf	(turnRIGHT@i+1)^0,c
  2120   003616  0E00               	movlw	0
  2121   003618  6E1C               	movwf	turnRIGHT@i^0,c
  2122   00361A  EF3B  F01B         	goto	l4863
  2123   00361E                     l4853:
  2124                           
  2125                           ;dc_motor_v1.c: 254:         mL->power = mL->power + 1;
  2126   00361E  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2127   003622  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2128   003626  50DF               	movf	indf2,w,c
  2129   003628  6E18               	movwf	??_turnRIGHT^0,c
  2130   00362A  2818               	incf	??_turnRIGHT^0,w,c
  2131   00362C  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2132   003630  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2133   003634  6EDF               	movwf	indf2,c
  2134                           
  2135                           ;dc_motor_v1.c: 255:         mR->power = mR->power + 1 ;
  2136   003636  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2137   00363A  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2138   00363E  50DF               	movf	indf2,w,c
  2139   003640  6E18               	movwf	??_turnRIGHT^0,c
  2140   003642  2818               	incf	??_turnRIGHT^0,w,c
  2141   003644  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2142   003648  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2143   00364C  6EDF               	movwf	indf2,c
  2144   00364E                     
  2145                           ;dc_motor_v1.c: 256:         setMotorPWM(mR);
  2146   00364E  C016  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
  2147   003652  C017  F00F         	movff	turnRIGHT@mR+1,setMotorPWM@m+1
  2148   003656  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2149   00365A                     
  2150                           ;dc_motor_v1.c: 257:         setMotorPWM(mL);
  2151   00365A  C014  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
  2152   00365E  C015  F00F         	movff	turnRIGHT@mL+1,setMotorPWM@m+1
  2153   003662  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2154   003666                     
  2155                           ;dc_motor_v1.c: 258:         delay_ms_function(delay_time);
  2156   003666  C022  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
  2157   00366A  C023  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
  2158   00366E  ECB5  F024         	call	_delay_ms_function	;wreg free
  2159   003672                     
  2160                           ;dc_motor_v1.c: 259:     }
  2161   003672  4A1C               	infsnz	turnRIGHT@i^0,f,c
  2162   003674  2A1D               	incf	(turnRIGHT@i+1)^0,f,c
  2163   003676                     l4863:
  2164   003676  5020               	movf	turnRIGHT@max_power^0,w,c
  2165   003678  5C1C               	subwf	turnRIGHT@i^0,w,c
  2166   00367A  501D               	movf	(turnRIGHT@i+1)^0,w,c
  2167   00367C  0A80               	xorlw	128
  2168   00367E  6E18               	movwf	??_turnRIGHT^0,c
  2169   003680  5021               	movf	(turnRIGHT@max_power+1)^0,w,c
  2170   003682  0A80               	xorlw	128
  2171   003684  5818               	subwfb	??_turnRIGHT^0,w,c
  2172   003686  A0D8               	btfss	status,0,c
  2173   003688  EF48  F01B         	goto	u5371
  2174   00368C  EF4A  F01B         	goto	u5370
  2175   003690                     u5371:
  2176   003690  EF0F  F01B         	goto	l4853
  2177   003694                     u5370:
  2178   003694                     
  2179                           ;dc_motor_v1.c: 262:     for(int j=0; j<rotation_calibration; j++){
  2180   003694  0E00               	movlw	0
  2181   003696  6E1F               	movwf	(turnRIGHT@j+1)^0,c
  2182   003698  0E00               	movlw	0
  2183   00369A  6E1E               	movwf	turnRIGHT@j^0,c
  2184   00369C  EF59  F01B         	goto	l272
  2185   0036A0                     l4867:
  2186                           
  2187                           ;dc_motor_v1.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2188   0036A0  0ED0               	movlw	208
  2189   0036A2  6E18               	movwf	??_turnRIGHT^0,c
  2190   0036A4  0ECA               	movlw	202
  2191   0036A6                     u5687:
  2192   0036A6  2EE8               	decfsz	wreg,f,c
  2193   0036A8  D7FE               	bra	u5687
  2194   0036AA  2E18               	decfsz	??_turnRIGHT^0,f,c
  2195   0036AC  D7FC               	bra	u5687
  2196   0036AE                     
  2197                           ;dc_motor_v1.c: 264:     }
  2198   0036AE  4A1E               	infsnz	turnRIGHT@j^0,f,c
  2199   0036B0  2A1F               	incf	(turnRIGHT@j+1)^0,f,c
  2200   0036B2                     l272:
  2201   0036B2  501B               	movf	turnRIGHT@rotation_calibration^0,w,c
  2202   0036B4  6E18               	movwf	??_turnRIGHT^0,c
  2203   0036B6  6A19               	clrf	(??_turnRIGHT+1)^0,c
  2204   0036B8  5018               	movf	??_turnRIGHT^0,w,c
  2205   0036BA  5C1E               	subwf	turnRIGHT@j^0,w,c
  2206   0036BC  501F               	movf	(turnRIGHT@j+1)^0,w,c
  2207   0036BE  0A80               	xorlw	128
  2208   0036C0  6E1A               	movwf	(??_turnRIGHT+2)^0,c
  2209   0036C2  5019               	movf	(??_turnRIGHT+1)^0,w,c
  2210   0036C4  0A80               	xorlw	128
  2211   0036C6  581A               	subwfb	(??_turnRIGHT+2)^0,w,c
  2212   0036C8  A0D8               	btfss	status,0,c
  2213   0036CA  EF69  F01B         	goto	u5381
  2214   0036CE  EF6B  F01B         	goto	u5380
  2215   0036D2                     u5381:
  2216   0036D2  EF50  F01B         	goto	l4867
  2217   0036D6                     u5380:
  2218   0036D6  EFA1  F01B         	goto	l4885
  2219   0036DA                     l4871:
  2220                           
  2221                           ;dc_motor_v1.c: 268:         if(mR->power> 0 ){
  2222   0036DA  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2223   0036DE  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2224   0036E2  50DF               	movf	indf2,w,c
  2225   0036E4  B4D8               	btfsc	status,2,c
  2226   0036E6  EF77  F01B         	goto	u5391
  2227   0036EA  EF79  F01B         	goto	u5390
  2228   0036EE                     u5391:
  2229   0036EE  EF7E  F01B         	goto	l4875
  2230   0036F2                     u5390:
  2231   0036F2                     
  2232                           ;dc_motor_v1.c: 269:             mR->power--;
  2233   0036F2  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2234   0036F6  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2235   0036FA  06DF               	decf	indf2,f,c
  2236   0036FC                     l4875:
  2237                           
  2238                           ;dc_motor_v1.c: 271:         if(mL->power> 0 ){
  2239   0036FC  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2240   003700  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2241   003704  50DF               	movf	indf2,w,c
  2242   003706  B4D8               	btfsc	status,2,c
  2243   003708  EF88  F01B         	goto	u5401
  2244   00370C  EF8A  F01B         	goto	u5400
  2245   003710                     u5401:
  2246   003710  EF8F  F01B         	goto	l4879
  2247   003714                     u5400:
  2248   003714                     
  2249                           ;dc_motor_v1.c: 272:             mL->power--;
  2250   003714  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2251   003718  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2252   00371C  06DF               	decf	indf2,f,c
  2253   00371E                     l4879:
  2254                           
  2255                           ;dc_motor_v1.c: 274:         setMotorPWM(mR);
  2256   00371E  C016  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
  2257   003722  C017  F00F         	movff	turnRIGHT@mR+1,setMotorPWM@m+1
  2258   003726  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2259   00372A                     
  2260                           ;dc_motor_v1.c: 275:         setMotorPWM(mL);
  2261   00372A  C014  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
  2262   00372E  C015  F00F         	movff	turnRIGHT@mL+1,setMotorPWM@m+1
  2263   003732  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2264   003736                     
  2265                           ;dc_motor_v1.c: 276:         delay_ms_function(delay_time);
  2266   003736  C022  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
  2267   00373A  C023  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
  2268   00373E  ECB5  F024         	call	_delay_ms_function	;wreg free
  2269   003742                     l4885:
  2270                           
  2271                           ;dc_motor_v1.c: 267:     while(mL->power || mR->power > 0){
  2272   003742  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  2273   003746  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  2274   00374A  50DF               	movf	indf2,w,c
  2275   00374C  A4D8               	btfss	status,2,c
  2276   00374E  EFAB  F01B         	goto	u5411
  2277   003752  EFAD  F01B         	goto	u5410
  2278   003756                     u5411:
  2279   003756  EF6D  F01B         	goto	l4871
  2280   00375A                     u5410:
  2281   00375A  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  2282   00375E  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  2283   003762  50DF               	movf	indf2,w,c
  2284   003764  A4D8               	btfss	status,2,c
  2285   003766  EFB7  F01B         	goto	u5421
  2286   00376A  EFB9  F01B         	goto	u5420
  2287   00376E                     u5421:
  2288   00376E  EF6D  F01B         	goto	l4871
  2289   003772                     u5420:
  2290   003772  0012               	return		;funcret
  2291   003774                     __end_of_turnRIGHT:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function _turnLEFT *****************
  2295 ;; Defined at:
  2296 ;;		line 206 in file "dc_motor_v1.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  rotation_cal    1    wreg     unsigned char 
  2299 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  2300 ;;		 -> motorL(9), 
  2301 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  2302 ;;		 -> motorR(9), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  rotation_cal    1   26[COMRAM] unsigned char 
  2305 ;;  j               2   29[COMRAM] int 
  2306 ;;  i               2   27[COMRAM] int 
  2307 ;;  delay_time      2   33[COMRAM] int 
  2308 ;;  max_power       2   31[COMRAM] int 
  2309 ;;  acceleration    2    0        int 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2320 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2321 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2322 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2323 ;;Total ram usage:       16 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 2
  2326 ;; This function calls:
  2327 ;;		___awdiv
  2328 ;;		_delay_ms_function
  2329 ;;		_setMotorPWM
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text2
  2336   003774                     __ptext2:
  2337                           	callstack 0
  2338   003774                     _turnLEFT:
  2339                           	callstack 28
  2340                           
  2341                           ;incstack = 0
  2342                           ;turnLEFT@rotation_calibration stored from wreg
  2343   003774  6E1B               	movwf	turnLEFT@rotation_calibration^0,c
  2344   003776                     
  2345                           ;dc_motor_v1.c: 207:     mL->direction = 0;
  2346   003776  EE20 F001          	lfsr	2,1
  2347   00377A  5014               	movf	turnLEFT@mL^0,w,c
  2348   00377C  26D9               	addwf	fsr2l,f,c
  2349   00377E  5015               	movf	(turnLEFT@mL+1)^0,w,c
  2350   003780  22DA               	addwfc	fsr2h,f,c
  2351   003782  6ADF               	clrf	indf2,c
  2352                           
  2353                           ;dc_motor_v1.c: 208:     mR->direction = 1;
  2354   003784  EE20 F001          	lfsr	2,1
  2355   003788  5016               	movf	turnLEFT@mR^0,w,c
  2356   00378A  26D9               	addwf	fsr2l,f,c
  2357   00378C  5017               	movf	(turnLEFT@mR+1)^0,w,c
  2358   00378E  22DA               	addwfc	fsr2h,f,c
  2359   003790  0E01               	movlw	1
  2360   003792  6EDF               	movwf	indf2,c
  2361   003794                     
  2362                           ;dc_motor_v1.c: 210:     int max_power = 20;
  2363   003794  0E00               	movlw	0
  2364   003796  6E21               	movwf	(turnLEFT@max_power+1)^0,c
  2365   003798  0E14               	movlw	20
  2366   00379A  6E20               	movwf	turnLEFT@max_power^0,c
  2367   00379C                     
  2368                           ;dc_motor_v1.c: 212:     int delay_time = acceleration_time/max_power;
  2369   00379C  0E00               	movlw	0
  2370   00379E  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2371   0037A0  0E64               	movlw	100
  2372   0037A2  6E01               	movwf	___awdiv@dividend^0,c
  2373   0037A4  0E00               	movlw	0
  2374   0037A6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2375   0037A8  0E14               	movlw	20
  2376   0037AA  6E03               	movwf	___awdiv@divisor^0,c
  2377   0037AC  EC1D  F021         	call	___awdiv	;wreg free
  2378   0037B0  C001  F022         	movff	?___awdiv,turnLEFT@delay_time
  2379   0037B4  C002  F023         	movff	?___awdiv+1,turnLEFT@delay_time+1
  2380   0037B8                     
  2381                           ;dc_motor_v1.c: 215:     for(int i=0; i< max_power; i++){
  2382   0037B8  0E00               	movlw	0
  2383   0037BA  6E1D               	movwf	(turnLEFT@i+1)^0,c
  2384   0037BC  0E00               	movlw	0
  2385   0037BE  6E1C               	movwf	turnLEFT@i^0,c
  2386   0037C0  EF0E  F01C         	goto	l4817
  2387   0037C4                     l4807:
  2388                           
  2389                           ;dc_motor_v1.c: 216:         mL->power = mL->power + 1;
  2390   0037C4  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2391   0037C8  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2392   0037CC  50DF               	movf	indf2,w,c
  2393   0037CE  6E18               	movwf	??_turnLEFT^0,c
  2394   0037D0  2818               	incf	??_turnLEFT^0,w,c
  2395   0037D2  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2396   0037D6  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2397   0037DA  6EDF               	movwf	indf2,c
  2398                           
  2399                           ;dc_motor_v1.c: 217:         mR->power = mR->power + 1 ;
  2400   0037DC  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2401   0037E0  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2402   0037E4  50DF               	movf	indf2,w,c
  2403   0037E6  6E18               	movwf	??_turnLEFT^0,c
  2404   0037E8  2818               	incf	??_turnLEFT^0,w,c
  2405   0037EA  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2406   0037EE  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2407   0037F2  6EDF               	movwf	indf2,c
  2408   0037F4                     
  2409                           ;dc_motor_v1.c: 218:         setMotorPWM(mR);
  2410   0037F4  C016  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  2411   0037F8  C017  F00F         	movff	turnLEFT@mR+1,setMotorPWM@m+1
  2412   0037FC  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2413   003800                     
  2414                           ;dc_motor_v1.c: 219:         setMotorPWM(mL);
  2415   003800  C014  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  2416   003804  C015  F00F         	movff	turnLEFT@mL+1,setMotorPWM@m+1
  2417   003808  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2418   00380C                     
  2419                           ;dc_motor_v1.c: 220:         delay_ms_function(delay_time);
  2420   00380C  C022  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  2421   003810  C023  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  2422   003814  ECB5  F024         	call	_delay_ms_function	;wreg free
  2423   003818                     
  2424                           ;dc_motor_v1.c: 221:     }
  2425   003818  4A1C               	infsnz	turnLEFT@i^0,f,c
  2426   00381A  2A1D               	incf	(turnLEFT@i+1)^0,f,c
  2427   00381C                     l4817:
  2428   00381C  5020               	movf	turnLEFT@max_power^0,w,c
  2429   00381E  5C1C               	subwf	turnLEFT@i^0,w,c
  2430   003820  501D               	movf	(turnLEFT@i+1)^0,w,c
  2431   003822  0A80               	xorlw	128
  2432   003824  6E18               	movwf	??_turnLEFT^0,c
  2433   003826  5021               	movf	(turnLEFT@max_power+1)^0,w,c
  2434   003828  0A80               	xorlw	128
  2435   00382A  5818               	subwfb	??_turnLEFT^0,w,c
  2436   00382C  A0D8               	btfss	status,0,c
  2437   00382E  EF1B  F01C         	goto	u5311
  2438   003832  EF1D  F01C         	goto	u5310
  2439   003836                     u5311:
  2440   003836  EFE2  F01B         	goto	l4807
  2441   00383A                     u5310:
  2442   00383A                     
  2443                           ;dc_motor_v1.c: 224:     for(int j=0; j<rotation_calibration; j++){
  2444   00383A  0E00               	movlw	0
  2445   00383C  6E1F               	movwf	(turnLEFT@j+1)^0,c
  2446   00383E  0E00               	movlw	0
  2447   003840  6E1E               	movwf	turnLEFT@j^0,c
  2448   003842  EF2C  F01C         	goto	l258
  2449   003846                     l4821:
  2450                           
  2451                           ;dc_motor_v1.c: 225:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2452   003846  0ED0               	movlw	208
  2453   003848  6E18               	movwf	??_turnLEFT^0,c
  2454   00384A  0ECA               	movlw	202
  2455   00384C                     u5697:
  2456   00384C  2EE8               	decfsz	wreg,f,c
  2457   00384E  D7FE               	bra	u5697
  2458   003850  2E18               	decfsz	??_turnLEFT^0,f,c
  2459   003852  D7FC               	bra	u5697
  2460   003854                     
  2461                           ;dc_motor_v1.c: 226:     }
  2462   003854  4A1E               	infsnz	turnLEFT@j^0,f,c
  2463   003856  2A1F               	incf	(turnLEFT@j+1)^0,f,c
  2464   003858                     l258:
  2465   003858  501B               	movf	turnLEFT@rotation_calibration^0,w,c
  2466   00385A  6E18               	movwf	??_turnLEFT^0,c
  2467   00385C  6A19               	clrf	(??_turnLEFT+1)^0,c
  2468   00385E  5018               	movf	??_turnLEFT^0,w,c
  2469   003860  5C1E               	subwf	turnLEFT@j^0,w,c
  2470   003862  501F               	movf	(turnLEFT@j+1)^0,w,c
  2471   003864  0A80               	xorlw	128
  2472   003866  6E1A               	movwf	(??_turnLEFT+2)^0,c
  2473   003868  5019               	movf	(??_turnLEFT+1)^0,w,c
  2474   00386A  0A80               	xorlw	128
  2475   00386C  581A               	subwfb	(??_turnLEFT+2)^0,w,c
  2476   00386E  A0D8               	btfss	status,0,c
  2477   003870  EF3C  F01C         	goto	u5321
  2478   003874  EF3E  F01C         	goto	u5320
  2479   003878                     u5321:
  2480   003878  EF23  F01C         	goto	l4821
  2481   00387C                     u5320:
  2482   00387C  EF74  F01C         	goto	l4839
  2483   003880                     l4825:
  2484                           
  2485                           ;dc_motor_v1.c: 230:         if(mR->power> 0 ){
  2486   003880  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2487   003884  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2488   003888  50DF               	movf	indf2,w,c
  2489   00388A  B4D8               	btfsc	status,2,c
  2490   00388C  EF4A  F01C         	goto	u5331
  2491   003890  EF4C  F01C         	goto	u5330
  2492   003894                     u5331:
  2493   003894  EF51  F01C         	goto	l4829
  2494   003898                     u5330:
  2495   003898                     
  2496                           ;dc_motor_v1.c: 231:             mR->power--;
  2497   003898  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2498   00389C  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2499   0038A0  06DF               	decf	indf2,f,c
  2500   0038A2                     l4829:
  2501                           
  2502                           ;dc_motor_v1.c: 233:         if(mL->power> 0 ){
  2503   0038A2  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2504   0038A6  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2505   0038AA  50DF               	movf	indf2,w,c
  2506   0038AC  B4D8               	btfsc	status,2,c
  2507   0038AE  EF5B  F01C         	goto	u5341
  2508   0038B2  EF5D  F01C         	goto	u5340
  2509   0038B6                     u5341:
  2510   0038B6  EF62  F01C         	goto	l4833
  2511   0038BA                     u5340:
  2512   0038BA                     
  2513                           ;dc_motor_v1.c: 234:             mL->power--;
  2514   0038BA  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2515   0038BE  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2516   0038C2  06DF               	decf	indf2,f,c
  2517   0038C4                     l4833:
  2518                           
  2519                           ;dc_motor_v1.c: 236:         setMotorPWM(mR);
  2520   0038C4  C016  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  2521   0038C8  C017  F00F         	movff	turnLEFT@mR+1,setMotorPWM@m+1
  2522   0038CC  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2523   0038D0                     
  2524                           ;dc_motor_v1.c: 237:         setMotorPWM(mL);
  2525   0038D0  C014  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  2526   0038D4  C015  F00F         	movff	turnLEFT@mL+1,setMotorPWM@m+1
  2527   0038D8  EC2B  F01E         	call	_setMotorPWM	;wreg free
  2528   0038DC                     
  2529                           ;dc_motor_v1.c: 238:         delay_ms_function(delay_time);
  2530   0038DC  C022  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  2531   0038E0  C023  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  2532   0038E4  ECB5  F024         	call	_delay_ms_function	;wreg free
  2533   0038E8                     l4839:
  2534                           
  2535                           ;dc_motor_v1.c: 229:     while(mL->power || mR->power > 0){
  2536   0038E8  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2537   0038EC  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2538   0038F0  50DF               	movf	indf2,w,c
  2539   0038F2  A4D8               	btfss	status,2,c
  2540   0038F4  EF7E  F01C         	goto	u5351
  2541   0038F8  EF80  F01C         	goto	u5350
  2542   0038FC                     u5351:
  2543   0038FC  EF40  F01C         	goto	l4825
  2544   003900                     u5350:
  2545   003900  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2546   003904  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2547   003908  50DF               	movf	indf2,w,c
  2548   00390A  A4D8               	btfss	status,2,c
  2549   00390C  EF8A  F01C         	goto	u5361
  2550   003910  EF8C  F01C         	goto	u5360
  2551   003914                     u5361:
  2552   003914  EF40  F01C         	goto	l4825
  2553   003918                     u5360:
  2554   003918  0012               	return		;funcret
  2555   00391A                     __end_of_turnLEFT:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _switch_calibration *****************
  2559 ;; Defined at:
  2560 ;;		line 44 in file "calibration.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  calibration_    2    0[COMRAM] PTR int 
  2563 ;;		 -> calibration(10), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;Total ram usage:        4 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text3
  2589   0043B8                     __ptext3:
  2590                           	callstack 0
  2591   0043B8                     _switch_calibration:
  2592                           	callstack 30
  2593   0043B8                     l137:
  2594                           
  2595                           ;calibration.c: 46:         if(!PORTFbits.RF2){
  2596   0043B8  B48E               	btfsc	142,2,c	;volatile
  2597   0043BA  EFE1  F021         	goto	u5171
  2598   0043BE  EFE3  F021         	goto	u5170
  2599   0043C2                     u5171:
  2600   0043C2  EF13  F022         	goto	l138
  2601   0043C6                     u5170:
  2602   0043C6                     
  2603                           ;calibration.c: 47:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2604   0043C6  0E11               	movlw	17
  2605   0043C8  6E04               	movwf	(??_switch_calibration+1)^0,c
  2606   0043CA  0E3C               	movlw	60
  2607   0043CC  6E03               	movwf	??_switch_calibration^0,c
  2608   0043CE  0ECB               	movlw	203
  2609   0043D0                     u5707:
  2610   0043D0  2EE8               	decfsz	wreg,f,c
  2611   0043D2  D7FE               	bra	u5707
  2612   0043D4  2E03               	decfsz	??_switch_calibration^0,f,c
  2613   0043D6  D7FC               	bra	u5707
  2614   0043D8  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2615   0043DA  D7FA               	bra	u5707
  2616   0043DC  0000               	nop	
  2617   0043DE                     
  2618                           ;calibration.c: 48:             *calibration_index = *calibration_index + 1;
  2619   0043DE  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  2620   0043E2  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  2621   0043E6  CFDE F003          	movff	postinc2,??_switch_calibration
  2622   0043EA  CFDD F004          	movff	postdec2,??_switch_calibration+1
  2623   0043EE  0E01               	movlw	1
  2624   0043F0  2603               	addwf	??_switch_calibration^0,f,c
  2625   0043F2  0E00               	movlw	0
  2626   0043F4  2204               	addwfc	(??_switch_calibration+1)^0,f,c
  2627   0043F6  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  2628   0043FA  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  2629   0043FE  C003  FFDE         	movff	??_switch_calibration,postinc2
  2630   004402  C004  FFDD         	movff	??_switch_calibration+1,postdec2
  2631   004406                     
  2632                           ;calibration.c: 49:             LATDbits.LATD7 = 1;
  2633   004406  8E7C               	bsf	124,7,c	;volatile
  2634   004408                     
  2635                           ;calibration.c: 50:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2636   004408  0E11               	movlw	17
  2637   00440A  6E04               	movwf	(??_switch_calibration+1)^0,c
  2638   00440C  0E3C               	movlw	60
  2639   00440E  6E03               	movwf	??_switch_calibration^0,c
  2640   004410  0ECB               	movlw	203
  2641   004412                     u5717:
  2642   004412  2EE8               	decfsz	wreg,f,c
  2643   004414  D7FE               	bra	u5717
  2644   004416  2E03               	decfsz	??_switch_calibration^0,f,c
  2645   004418  D7FC               	bra	u5717
  2646   00441A  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2647   00441C  D7FA               	bra	u5717
  2648   00441E  0000               	nop	
  2649   004420                     
  2650                           ;calibration.c: 51:             LATDbits.LATD7 = 0;
  2651   004420  9E7C               	bcf	124,7,c	;volatile
  2652                           
  2653                           ;calibration.c: 52:             break;
  2654   004422  EF34  F022         	goto	l142
  2655   004426                     l138:
  2656                           
  2657                           ;calibration.c: 55:         if(!PORTFbits.RF3){
  2658   004426  B68E               	btfsc	142,3,c	;volatile
  2659   004428  EF18  F022         	goto	u5181
  2660   00442C  EF1A  F022         	goto	u5180
  2661   004430                     u5181:
  2662   004430  EFDC  F021         	goto	l137
  2663   004434                     u5180:
  2664   004434                     
  2665                           ;calibration.c: 56:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2666   004434  0E11               	movlw	17
  2667   004436  6E04               	movwf	(??_switch_calibration+1)^0,c
  2668   004438  0E3C               	movlw	60
  2669   00443A  6E03               	movwf	??_switch_calibration^0,c
  2670   00443C  0ECB               	movlw	203
  2671   00443E                     u5727:
  2672   00443E  2EE8               	decfsz	wreg,f,c
  2673   004440  D7FE               	bra	u5727
  2674   004442  2E03               	decfsz	??_switch_calibration^0,f,c
  2675   004444  D7FC               	bra	u5727
  2676   004446  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2677   004448  D7FA               	bra	u5727
  2678   00444A  0000               	nop	
  2679   00444C                     
  2680                           ;calibration.c: 57:             LATHbits.LATH3 = 1;
  2681   00444C  8680               	bsf	128,3,c	;volatile
  2682                           
  2683                           ;calibration.c: 58:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2684   00444E  0E11               	movlw	17
  2685   004450  6E04               	movwf	(??_switch_calibration+1)^0,c
  2686   004452  0E3C               	movlw	60
  2687   004454  6E03               	movwf	??_switch_calibration^0,c
  2688   004456  0ECB               	movlw	203
  2689   004458                     u5737:
  2690   004458  2EE8               	decfsz	wreg,f,c
  2691   00445A  D7FE               	bra	u5737
  2692   00445C  2E03               	decfsz	??_switch_calibration^0,f,c
  2693   00445E  D7FC               	bra	u5737
  2694   004460  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2695   004462  D7FA               	bra	u5737
  2696   004464  0000               	nop	
  2697   004466                     
  2698                           ;calibration.c: 59:             LATHbits.LATH3 = 0;
  2699   004466  9680               	bcf	128,3,c	;volatile
  2700   004468                     l142:
  2701   004468  0012               	return		;funcret
  2702   00446A                     __end_of_switch_calibration:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _sprintf *****************
  2706 ;; Defined at:
  2707 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  s               2   28[COMRAM] PTR unsigned char 
  2710 ;;		 -> main@senddata(20), 
  2711 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  2712 ;;		 -> STR_1(5), 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  f              12   34[COMRAM] struct _IO_FILE
  2715 ;;  ret             2    0        int 
  2716 ;;  ap              1   33[COMRAM] PTR void [1]
  2717 ;;		 -> ?_sprintf(2), 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2   28[COMRAM] int 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2727 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2730 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;Total ram usage:       18 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 4
  2734 ;; This function calls:
  2735 ;;		_vfprintf
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text4
  2742   0048CA                     __ptext4:
  2743                           	callstack 0
  2744   0048CA                     _sprintf:
  2745                           	callstack 26
  2746   0048CA  0E20               	movlw	low (?_sprintf+3)
  2747   0048CC  6E22               	movwf	sprintf@ap^0,c
  2748   0048CE  C01D  F023         	movff	sprintf@s,sprintf@f
  2749   0048D2  C01E  F024         	movff	sprintf@s+1,sprintf@f+1
  2750   0048D6  0E00               	movlw	0
  2751   0048D8  6E27               	movwf	(sprintf@f+4)^0,c
  2752   0048DA  0E00               	movlw	0
  2753   0048DC  6E26               	movwf	(sprintf@f+3)^0,c
  2754   0048DE  0E00               	movlw	0
  2755   0048E0  6E2E               	movwf	(sprintf@f+11)^0,c
  2756   0048E2  0E00               	movlw	0
  2757   0048E4  6E2D               	movwf	(sprintf@f+10)^0,c
  2758   0048E6  0E23               	movlw	low sprintf@f
  2759   0048E8  6E19               	movwf	vfprintf@fp^0,c
  2760   0048EA  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  2761   0048EE  0E22               	movlw	low sprintf@ap
  2762   0048F0  6E1B               	movwf	vfprintf@ap^0,c
  2763   0048F2  EC03  F024         	call	_vfprintf	;wreg free
  2764   0048F6  5026               	movf	(sprintf@f+3)^0,w,c
  2765   0048F8  241D               	addwf	sprintf@s^0,w,c
  2766   0048FA  6ED9               	movwf	fsr2l,c
  2767   0048FC  5027               	movf	(sprintf@f+4)^0,w,c
  2768   0048FE  201E               	addwfc	(sprintf@s+1)^0,w,c
  2769   004900  6EDA               	movwf	fsr2h,c
  2770   004902  6ADF               	clrf	indf2,c
  2771   004904  0012               	return		;funcret
  2772   004906                     __end_of_sprintf:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _vfprintf *****************
  2776 ;; Defined at:
  2777 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  2780 ;;		 -> sprintf@f(12), 
  2781 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  2782 ;;		 -> STR_1(5), 
  2783 ;;  ap              1   26[COMRAM] PTR PTR void 
  2784 ;;		 -> sprintf@ap(1), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  2787 ;;		 -> STR_1(5), 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  2   24[COMRAM] int 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2797 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;Total ram usage:        4 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; Hardware stack levels required when called: 3
  2804 ;; This function calls:
  2805 ;;		_vfpfcnvrt
  2806 ;; This function is called by:
  2807 ;;		_sprintf
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text5
  2812   004806                     __ptext5:
  2813                           	callstack 0
  2814   004806                     _vfprintf:
  2815                           	callstack 26
  2816   004806                     
  2817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2818   004806  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2821   00480A  EF0F  F024         	goto	l3887
  2822   00480E                     l3885:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2825   00480E  C019  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2826   004812  0E1C               	movlw	low vfprintf@cfmt
  2827   004814  6E0F               	movwf	vfpfcnvrt@fmt^0,c
  2828   004816  C01B  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  2829   00481A  EC5F  F01D         	call	_vfpfcnvrt	;wreg free
  2830   00481E                     l3887:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2833   00481E  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2834   004822                     	if	1	;There is more than 1 active tblptr byte
  2835   004822  0E0E               	movlw	high __smallconst
  2836   004824  6EF7               	movwf	tblptrh,c
  2837   004826                     	endif
  2838   004826                     	if	0	;tblptru may be non-zero
  2839   004826                     	endif
  2840   004826                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2841   004826  0E00               	movlw	low (__smallconst shr (0+16))
  2842   004828  6EF8               	movwf	tblptru,c
  2843   00482A                     	endif
  2844   00482A  0008               	tblrd		*
  2845   00482C  50F5               	movf	tablat,w,c
  2846   00482E  0900               	iorlw	0
  2847   004830  A4D8               	btfss	status,2,c
  2848   004832  EF1D  F024         	goto	u4051
  2849   004836  EF1F  F024         	goto	u4050
  2850   00483A                     u4051:
  2851   00483A  EF07  F024         	goto	l3885
  2852   00483E                     u4050:
  2853   00483E                     
  2854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2855   00483E  0E00               	movlw	0
  2856   004840  6E1A               	movwf	(?_vfprintf+1)^0,c
  2857   004842  0E00               	movlw	0
  2858   004844  6E19               	movwf	?_vfprintf^0,c
  2859   004846  0012               	return		;funcret
  2860   004848                     __end_of_vfprintf:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _vfpfcnvrt *****************
  2864 ;; Defined at:
  2865 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2868 ;;		 -> sprintf@f(12), 
  2869 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
  2870 ;;		 -> vfprintf@cfmt(1), 
  2871 ;;  ap              1   15[COMRAM] PTR PTR void 
  2872 ;;		 -> sprintf@ap(1), 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  convarg         4   18[COMRAM] struct .
  2875 ;;  c               1   23[COMRAM] unsigned char 
  2876 ;;  cp              1   22[COMRAM] PTR unsigned char 
  2877 ;;		 -> STR_1(5), 
  2878 ;;  done            1    0        _Bool 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2888 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;Total ram usage:       11 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 2
  2895 ;; This function calls:
  2896 ;;		___lwdiv
  2897 ;;		___lwmod
  2898 ;;		_fputc
  2899 ;; This function is called by:
  2900 ;;		_vfprintf
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text6
  2905   003ABE                     __ptext6:
  2906                           	callstack 0
  2907   003ABE                     _vfpfcnvrt:
  2908                           	callstack 26
  2909   003ABE                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2911   003ABE  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2912   003AC0  6ED9               	movwf	fsr2l,c
  2913   003AC2  6ADA               	clrf	fsr2h,c
  2914   003AC4  CFDF FFF6          	movff	indf2,tblptrl
  2915   003AC8                     	if	1	;There is more than 1 active tblptr byte
  2916   003AC8  0E0E               	movlw	high __smallconst
  2917   003ACA  6EF7               	movwf	tblptrh,c
  2918   003ACC                     	endif
  2919   003ACC                     	if	0	;tblptru may be non-zero
  2920   003ACC                     	endif
  2921   003ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2922   003ACC  0E00               	movlw	low (__smallconst shr (0+16))
  2923   003ACE  6EF8               	movwf	tblptru,c
  2924   003AD0                     	endif
  2925   003AD0  0008               	tblrd		*
  2926   003AD2  50F5               	movf	tablat,w,c
  2927   003AD4  0A25               	xorlw	37
  2928   003AD6  A4D8               	btfss	status,2,c
  2929   003AD8  EF70  F01D         	goto	u3781
  2930   003ADC  EF72  F01D         	goto	u3780
  2931   003AE0                     u3781:
  2932   003AE0  EF17  F01E         	goto	l3703
  2933   003AE4                     u3780:
  2934   003AE4                     
  2935                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2936   003AE4  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2937   003AE6  6ED9               	movwf	fsr2l,c
  2938   003AE8  6ADA               	clrf	fsr2h,c
  2939   003AEA  2ADF               	incf	indf2,f,c
  2940   003AEC                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2942   003AEC  0E00               	movlw	0
  2943   003AEE  0100               	movlb	0	; () banked
  2944   003AF0  6FF7               	movwf	(_width+1)& (0+255),b
  2945   003AF2  0E00               	movlw	0
  2946   003AF4  6FF6               	movwf	_width& (0+255),b
  2947   003AF6  C0F6  F0FA         	movff	_width,_flags
  2948   003AFA                     
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2951   003AFA  69F8               	setf	_prec& (0+255),b
  2952   003AFC  69F9               	setf	(_prec+1)& (0+255),b
  2953   003AFE                     
  2954                           ; BSR set to: 0
  2955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2956   003AFE  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2957   003B00  6ED9               	movwf	fsr2l,c
  2958   003B02  6ADA               	clrf	fsr2h,c
  2959   003B04  50DF               	movf	indf2,w,c
  2960   003B06  6E17               	movwf	vfpfcnvrt@cp^0,c
  2961   003B08                     
  2962                           ; BSR set to: 0
  2963   003B08  C017  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2964   003B0C                     	if	1	;There is more than 1 active tblptr byte
  2965   003B0C  0E0E               	movlw	high __smallconst
  2966   003B0E  6EF7               	movwf	tblptrh,c
  2967   003B10                     	endif
  2968   003B10                     	if	0	;tblptru may be non-zero
  2969   003B10                     	endif
  2970   003B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2971   003B10  0E00               	movlw	low (__smallconst shr (0+16))
  2972   003B12  6EF8               	movwf	tblptru,c
  2973   003B14                     	endif
  2974   003B14  0008               	tblrd		*
  2975   003B16  50F5               	movf	tablat,w,c
  2976   003B18  0A75               	xorlw	117
  2977   003B1A  A4D8               	btfss	status,2,c
  2978   003B1C  EF92  F01D         	goto	u3791
  2979   003B20  EF94  F01D         	goto	u3790
  2980   003B24                     u3791:
  2981   003B24  EF11  F01E         	goto	l3699
  2982   003B28                     u3790:
  2983   003B28                     
  2984                           ; BSR set to: 0
  2985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2986   003B28  5010               	movf	vfpfcnvrt@ap^0,w,c
  2987   003B2A  6ED9               	movwf	fsr2l,c
  2988   003B2C  6ADA               	clrf	fsr2h,c
  2989   003B2E  0E02               	movlw	2
  2990   003B30  26DF               	addwf	indf2,f,c
  2991   003B32  5CDF               	subwf	indf2,w,c
  2992   003B34  6ED9               	movwf	fsr2l,c
  2993   003B36  6ADA               	clrf	fsr2h,c
  2994   003B38  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  2995   003B3C  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  2996   003B40                     
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2999   003B40  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3000   003B42  6ED9               	movwf	fsr2l,c
  3001   003B44  6ADA               	clrf	fsr2h,c
  3002   003B46  2817               	incf	vfpfcnvrt@cp^0,w,c
  3003   003B48  6EDF               	movwf	indf2,c
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  3006   003B4A  EFF9  F01D         	goto	l3697
  3007   003B4E                     l3679:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  3011   003B4E  0E20               	movlw	32
  3012   003B50  6E18               	movwf	vfpfcnvrt@c^0,c
  3013   003B52                     l3681:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  3016   003B52  0618               	decf	vfpfcnvrt@c^0,f,c
  3017   003B54  0E3C               	movlw	low _dbuf
  3018   003B56  2418               	addwf	vfpfcnvrt@c^0,w,c
  3019   003B58  6ED9               	movwf	fsr2l,c
  3020   003B5A  6ADA               	clrf	fsr2h,c
  3021   003B5C  0E01               	movlw	high _dbuf
  3022   003B5E  22DA               	addwfc	fsr2h,f,c
  3023   003B60  C013  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  3024   003B64  C014  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  3025   003B68  0E00               	movlw	0
  3026   003B6A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3027   003B6C  0E0A               	movlw	10
  3028   003B6E  6E03               	movwf	___lwmod@divisor^0,c
  3029   003B70  EC0E  F023         	call	___lwmod	;wreg free
  3030   003B74  5001               	movf	?___lwmod^0,w,c
  3031   003B76  0F30               	addlw	48
  3032   003B78  6EDF               	movwf	indf2,c
  3033   003B7A                     
  3034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  3035   003B7A  C013  F007         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  3036   003B7E  C014  F008         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  3037   003B82  0E00               	movlw	0
  3038   003B84  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3039   003B86  0E0A               	movlw	10
  3040   003B88  6E09               	movwf	___lwdiv@divisor^0,c
  3041   003B8A  ECD4  F022         	call	___lwdiv	;wreg free
  3042   003B8E  C007  F013         	movff	?___lwdiv,vfpfcnvrt@convarg
  3043   003B92  C008  F014         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  3044   003B96                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  3046   003B96  5013               	movf	vfpfcnvrt@convarg^0,w,c
  3047   003B98  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3048   003B9A  B4D8               	btfsc	status,2,c
  3049   003B9C  EFD2  F01D         	goto	u3801
  3050   003BA0  EFD4  F01D         	goto	u3800
  3051   003BA4                     u3801:
  3052   003BA4  EFEE  F01D         	goto	l3693
  3053   003BA8                     u3800:
  3054   003BA8  5018               	movf	vfpfcnvrt@c^0,w,c
  3055   003BAA  A4D8               	btfss	status,2,c
  3056   003BAC  EFDA  F01D         	goto	u3811
  3057   003BB0  EFDC  F01D         	goto	u3810
  3058   003BB4                     u3811:
  3059   003BB4  EFA9  F01D         	goto	l3681
  3060   003BB8                     u3810:
  3061   003BB8  EFEE  F01D         	goto	l3693
  3062   003BBC                     l3689:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  3065   003BBC  0E3C               	movlw	low _dbuf
  3066   003BBE  2418               	addwf	vfpfcnvrt@c^0,w,c
  3067   003BC0  6ED9               	movwf	fsr2l,c
  3068   003BC2  6ADA               	clrf	fsr2h,c
  3069   003BC4  0E01               	movlw	high _dbuf
  3070   003BC6  22DA               	addwfc	fsr2h,f,c
  3071   003BC8  50DF               	movf	indf2,w,c
  3072   003BCA  6E11               	movwf	??_vfpfcnvrt^0,c
  3073   003BCC  5011               	movf	??_vfpfcnvrt^0,w,c
  3074   003BCE  6E01               	movwf	fputc@c^0,c
  3075   003BD0  6A02               	clrf	(fputc@c+1)^0,c
  3076   003BD2  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3077   003BD6  EC7F  F021         	call	_fputc	;wreg free
  3078   003BDA  2A18               	incf	vfpfcnvrt@c^0,f,c
  3079   003BDC                     l3693:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  3082   003BDC  0E20               	movlw	32
  3083   003BDE  1818               	xorwf	vfpfcnvrt@c^0,w,c
  3084   003BE0  A4D8               	btfss	status,2,c
  3085   003BE2  EFF5  F01D         	goto	u3821
  3086   003BE6  EFF7  F01D         	goto	u3820
  3087   003BEA                     u3821:
  3088   003BEA  EFDE  F01D         	goto	l3689
  3089   003BEE                     u3820:
  3090   003BEE  EF2A  F01E         	goto	l1237
  3091   003BF2                     l3697:
  3092                           
  3093                           ; BSR set to: 0
  3094   003BF2  C017  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3095   003BF6                     	if	1	;There is more than 1 active tblptr byte
  3096   003BF6  0E0E               	movlw	high __smallconst
  3097   003BF8  6EF7               	movwf	tblptrh,c
  3098   003BFA                     	endif
  3099   003BFA                     	if	0	;tblptru may be non-zero
  3100   003BFA                     	endif
  3101   003BFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3102   003BFA  0E00               	movlw	low (__smallconst shr (0+16))
  3103   003BFC  6EF8               	movwf	tblptru,c
  3104   003BFE                     	endif
  3105   003BFE  0008               	tblrd		*
  3106   003C00  50F5               	movf	tablat,w,c
  3107   003C02  6E11               	movwf	??_vfpfcnvrt^0,c
  3108   003C04  6A12               	clrf	(??_vfpfcnvrt+1)^0,c
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117   003C06  5012               	movf	(??_vfpfcnvrt+1)^0,w,c
  3118   003C08  0A00               	xorlw	0	; case 0
  3119   003C0A  B4D8               	btfsc	status,2,c
  3120   003C0C  EF0A  F01E         	goto	l5155
  3121   003C10  EF11  F01E         	goto	l3699
  3122   003C14                     l5155:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ; Switch size 1, requested type "simple"
  3126                           ; Number of cases is 1, Range of values is 117 to 117
  3127                           ; switch strategies available:
  3128                           ; Name         Instructions Cycles
  3129                           ; simple_byte            4     3 (average)
  3130                           ;	Chosen strategy is simple_byte
  3131   003C14  5011               	movf	??_vfpfcnvrt^0,w,c
  3132   003C16  0A75               	xorlw	117	; case 117
  3133   003C18  B4D8               	btfsc	status,2,c
  3134   003C1A  EFA7  F01D         	goto	l3679
  3135   003C1E  EF11  F01E         	goto	l3699
  3136   003C22                     l3699:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3139   003C22  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3140   003C24  6ED9               	movwf	fsr2l,c
  3141   003C26  6ADA               	clrf	fsr2h,c
  3142   003C28  2ADF               	incf	indf2,f,c
  3143   003C2A  EF2A  F01E         	goto	l1237
  3144   003C2E                     l3703:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3147   003C2E  500F               	movf	vfpfcnvrt@fmt^0,w,c
  3148   003C30  6ED9               	movwf	fsr2l,c
  3149   003C32  6ADA               	clrf	fsr2h,c
  3150   003C34  CFDF FFF6          	movff	indf2,tblptrl
  3151   003C38                     	if	1	;There is more than 1 active tblptr byte
  3152   003C38  0E0E               	movlw	high __smallconst
  3153   003C3A  6EF7               	movwf	tblptrh,c
  3154   003C3C                     	endif
  3155   003C3C                     	if	0	;tblptru may be non-zero
  3156   003C3C                     	endif
  3157   003C3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3158   003C3C  0E00               	movlw	low (__smallconst shr (0+16))
  3159   003C3E  6EF8               	movwf	tblptru,c
  3160   003C40                     	endif
  3161   003C40  0008               	tblrd		*
  3162   003C42  50F5               	movf	tablat,w,c
  3163   003C44  6E01               	movwf	fputc@c^0,c
  3164   003C46  6A02               	clrf	(fputc@c+1)^0,c
  3165   003C48  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3166   003C4C  EC7F  F021         	call	_fputc	;wreg free
  3167   003C50  EF11  F01E         	goto	l3699
  3168   003C54                     l1237:
  3169   003C54  0012               	return		;funcret
  3170   003C56                     __end_of_vfpfcnvrt:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _fputc *****************
  3174 ;; Defined at:
  3175 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  c               2    0[COMRAM] int 
  3178 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3179 ;;		 -> sprintf@f(12), 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2    0[COMRAM] int 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3195 ;;Total ram usage:        8 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 1
  3198 ;; This function calls:
  3199 ;;		_putch
  3200 ;; This function is called by:
  3201 ;;		_vfpfcnvrt
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text7
  3206   0042FE                     __ptext7:
  3207                           	callstack 0
  3208   0042FE                     _fputc:
  3209                           	callstack 26
  3210   0042FE  5003               	movf	fputc@fp^0,w,c
  3211   004300  B4D8               	btfsc	status,2,c
  3212   004302  EF85  F021         	goto	u3661
  3213   004306  EF87  F021         	goto	u3660
  3214   00430A                     u3661:
  3215   00430A  EF8F  F021         	goto	l3581
  3216   00430E                     u3660:
  3217   00430E  5003               	movf	fputc@fp^0,w,c
  3218   004310  A4D8               	btfss	status,2,c
  3219   004312  EF8D  F021         	goto	u3671
  3220   004316  EF8F  F021         	goto	u3670
  3221   00431A                     u3671:
  3222   00431A  EF94  F021         	goto	l3583
  3223   00431E                     u3670:
  3224   00431E                     l3581:
  3225   00431E  5001               	movf	fputc@c^0,w,c
  3226   004320  EC48  F025         	call	_putch
  3227   004324  EFDB  F021         	goto	l1256
  3228   004328                     l3583:
  3229   004328  5003               	movf	fputc@fp^0,w,c
  3230   00432A  6ED9               	movwf	fsr2l,c
  3231   00432C  6ADA               	clrf	fsr2h,c
  3232   00432E  0E0A               	movlw	10
  3233   004330  26D9               	addwf	fsr2l,f,c
  3234   004332  50DE               	movf	postinc2,w,c
  3235   004334  10DE               	iorwf	postinc2,w,c
  3236   004336  B4D8               	btfsc	status,2,c
  3237   004338  EFA0  F021         	goto	u3681
  3238   00433C  EFA2  F021         	goto	u3680
  3239   004340                     u3681:
  3240   004340  EFBB  F021         	goto	l3587
  3241   004344                     u3680:
  3242   004344  5003               	movf	fputc@fp^0,w,c
  3243   004346  6ED9               	movwf	fsr2l,c
  3244   004348  6ADA               	clrf	fsr2h,c
  3245   00434A  0E0A               	movlw	10
  3246   00434C  26D9               	addwf	fsr2l,f,c
  3247   00434E  5003               	movf	fputc@fp^0,w,c
  3248   004350  6EE1               	movwf	fsr1l,c
  3249   004352  6AE2               	clrf	fsr1h,c
  3250   004354  0E03               	movlw	3
  3251   004356  26E1               	addwf	fsr1l,f,c
  3252   004358  50DE               	movf	postinc2,w,c
  3253   00435A  5CE6               	subwf	postinc1,w,c
  3254   00435C  50E6               	movf	postinc1,w,c
  3255   00435E  0A80               	xorlw	128
  3256   004360  6E08               	movwf	(??_fputc+4)^0,c
  3257   004362  50DE               	movf	postinc2,w,c
  3258   004364  0A80               	xorlw	128
  3259   004366  5808               	subwfb	(??_fputc+4)^0,w,c
  3260   004368  B0D8               	btfsc	status,0,c
  3261   00436A  EFB9  F021         	goto	u3691
  3262   00436E  EFBB  F021         	goto	u3690
  3263   004372                     u3691:
  3264   004372  EFDB  F021         	goto	l1256
  3265   004376                     u3690:
  3266   004376                     l3587:
  3267   004376  5003               	movf	fputc@fp^0,w,c
  3268   004378  6ED9               	movwf	fsr2l,c
  3269   00437A  6ADA               	clrf	fsr2h,c
  3270   00437C  0E03               	movlw	3
  3271   00437E  26D9               	addwf	fsr2l,f,c
  3272   004380  CFDE F004          	movff	postinc2,??_fputc
  3273   004384  CFDD F005          	movff	postdec2,??_fputc+1
  3274   004388  5003               	movf	fputc@fp^0,w,c
  3275   00438A  6ED9               	movwf	fsr2l,c
  3276   00438C  6ADA               	clrf	fsr2h,c
  3277   00438E  CFDE F006          	movff	postinc2,??_fputc+2
  3278   004392  CFDD F007          	movff	postdec2,??_fputc+3
  3279   004396  5004               	movf	??_fputc^0,w,c
  3280   004398  2406               	addwf	(??_fputc+2)^0,w,c
  3281   00439A  6ED9               	movwf	fsr2l,c
  3282   00439C  5005               	movf	(??_fputc+1)^0,w,c
  3283   00439E  2007               	addwfc	(??_fputc+3)^0,w,c
  3284   0043A0  6EDA               	movwf	fsr2h,c
  3285   0043A2  C001  FFDF         	movff	fputc@c,indf2
  3286   0043A6  5003               	movf	fputc@fp^0,w,c
  3287   0043A8  6ED9               	movwf	fsr2l,c
  3288   0043AA  6ADA               	clrf	fsr2h,c
  3289   0043AC  0E03               	movlw	3
  3290   0043AE  26D9               	addwf	fsr2l,f,c
  3291   0043B0  2ADE               	incf	postinc2,f,c
  3292   0043B2  0E00               	movlw	0
  3293   0043B4  22DD               	addwfc	postdec2,f,c
  3294   0043B6                     l1256:
  3295   0043B6  0012               	return		;funcret
  3296   0043B8                     __end_of_fputc:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _putch *****************
  3300 ;; Defined at:
  3301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  c               1    wreg     unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  c               1    0[COMRAM] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_fputc
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text8
  3329   004A90                     __ptext8:
  3330                           	callstack 0
  3331   004A90                     _putch:
  3332                           	callstack 26
  3333   004A90  0012               	return		;funcret
  3334   004A92                     __end_of_putch:
  3335                           	callstack 0
  3336                           
  3337 ;; *************** function ___lwmod *****************
  3338 ;; Defined at:
  3339 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  dividend        2    0[COMRAM] unsigned int 
  3342 ;;  divisor         2    2[COMRAM] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  counter         1    4[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    0[COMRAM] unsigned int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;Total ram usage:        5 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_vfpfcnvrt
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text9
  3368   00461C                     __ptext9:
  3369                           	callstack 0
  3370   00461C                     ___lwmod:
  3371                           	callstack 27
  3372   00461C  5003               	movf	___lwmod@divisor^0,w,c
  3373   00461E  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3374   004620  B4D8               	btfsc	status,2,c
  3375   004622  EF15  F023         	goto	u3531
  3376   004626  EF17  F023         	goto	u3530
  3377   00462A                     u3531:
  3378   00462A  EF3B  F023         	goto	l1023
  3379   00462E                     u3530:
  3380   00462E  0E01               	movlw	1
  3381   004630  6E05               	movwf	___lwmod@counter^0,c
  3382   004632  EF1F  F023         	goto	l3521
  3383   004636                     l3519:
  3384   004636  90D8               	bcf	status,0,c
  3385   004638  3603               	rlcf	___lwmod@divisor^0,f,c
  3386   00463A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3387   00463C  2A05               	incf	___lwmod@counter^0,f,c
  3388   00463E                     l3521:
  3389   00463E  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3390   004640  EF24  F023         	goto	u3541
  3391   004644  EF26  F023         	goto	u3540
  3392   004648                     u3541:
  3393   004648  EF1B  F023         	goto	l3519
  3394   00464C                     u3540:
  3395   00464C                     l3523:
  3396   00464C  5003               	movf	___lwmod@divisor^0,w,c
  3397   00464E  5C01               	subwf	___lwmod@dividend^0,w,c
  3398   004650  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3399   004652  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3400   004654  A0D8               	btfss	status,0,c
  3401   004656  EF2F  F023         	goto	u3551
  3402   00465A  EF31  F023         	goto	u3550
  3403   00465E                     u3551:
  3404   00465E  EF35  F023         	goto	l3527
  3405   004662                     u3550:
  3406   004662  5003               	movf	___lwmod@divisor^0,w,c
  3407   004664  5E01               	subwf	___lwmod@dividend^0,f,c
  3408   004666  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3409   004668  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3410   00466A                     l3527:
  3411   00466A  90D8               	bcf	status,0,c
  3412   00466C  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3413   00466E  3203               	rrcf	___lwmod@divisor^0,f,c
  3414   004670  2E05               	decfsz	___lwmod@counter^0,f,c
  3415   004672  EF26  F023         	goto	l3523
  3416   004676                     l1023:
  3417   004676  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3418   00467A  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3419   00467E  0012               	return		;funcret
  3420   004680                     __end_of___lwmod:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _sendStringSerial4 *****************
  3424 ;; Defined at:
  3425 ;;		line 94 in file "serial.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  string          2    1[COMRAM] PTR unsigned char 
  3428 ;;		 -> main@senddata(20), 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;Total ram usage:        2 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 1
  3447 ;; This function calls:
  3448 ;;		_sendCharSerial4
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text10
  3455   00493A                     __ptext10:
  3456                           	callstack 0
  3457   00493A                     _sendStringSerial4:
  3458                           	callstack 29
  3459   00493A                     
  3460                           ;serial.c: 96:     while(*string != 0){
  3461   00493A  EFA8  F024         	goto	l4329
  3462   00493E                     l4325:
  3463                           
  3464                           ;serial.c: 97:   sendCharSerial4(*string++);
  3465   00493E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3466   004942  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3467   004946  50DF               	movf	indf2,w,c
  3468   004948  EC27  F025         	call	_sendCharSerial4
  3469   00494C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3470   00494E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3471   004950                     l4329:
  3472                           
  3473                           ;serial.c: 96:     while(*string != 0){
  3474   004950  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3475   004954  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3476   004958  50DF               	movf	indf2,w,c
  3477   00495A  A4D8               	btfss	status,2,c
  3478   00495C  EFB2  F024         	goto	u4831
  3479   004960  EFB4  F024         	goto	u4830
  3480   004964                     u4831:
  3481   004964  EF9F  F024         	goto	l4325
  3482   004968                     u4830:
  3483   004968  0012               	return		;funcret
  3484   00496A                     __end_of_sendStringSerial4:
  3485                           	callstack 0
  3486                           
  3487 ;; *************** function _sendCharSerial4 *****************
  3488 ;; Defined at:
  3489 ;;		line 87 in file "serial.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  charToSend      1    wreg     unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  charToSend      1    0[COMRAM] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;Total ram usage:        1 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_sendStringSerial4
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text11
  3517   004A4E                     __ptext11:
  3518                           	callstack 0
  3519   004A4E                     _sendCharSerial4:
  3520                           	callstack 29
  3521                           
  3522                           ;incstack = 0
  3523                           ;sendCharSerial4@charToSend stored from wreg
  3524   004A4E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3525   004A50                     l481:
  3526   004A50  010E               	movlb	14	; () banked
  3527   004A52  A537               	btfss	55,2,b	;volatile
  3528   004A54  EF2E  F025         	goto	u3981
  3529   004A58  EF30  F025         	goto	u3980
  3530   004A5C                     u3981:
  3531   004A5C  EF28  F025         	goto	l481
  3532   004A60                     u3980:
  3533   004A60                     
  3534                           ; BSR set to: 14
  3535                           ;serial.c: 89:     TX4REG = charToSend;
  3536   004A60  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3537   004A64                     
  3538                           ; BSR set to: 14
  3539   004A64  0012               	return		;funcret
  3540   004A66                     __end_of_sendCharSerial4:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function _initUSART4 *****************
  3544 ;; Defined at:
  3545 ;;		line 57 in file "serial.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;Total ram usage:        0 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text12
  3573   004A30                     __ptext12:
  3574                           	callstack 0
  3575   004A30                     _initUSART4:
  3576                           	callstack 30
  3577   004A30                     
  3578                           ;serial.c: 58:     RC0PPS = 0x12;
  3579   004A30  0E12               	movlw	18
  3580   004A32  010E               	movlb	14	; () banked
  3581   004A34  6F62               	movwf	98,b	;volatile
  3582                           
  3583                           ;serial.c: 59:     RX4PPS = 0x11;
  3584   004A36  0E11               	movlw	17
  3585   004A38  6F15               	movwf	21,b	;volatile
  3586   004A3A                     
  3587                           ; BSR set to: 14
  3588                           ;serial.c: 61:     BAUD4CONbits.BRG16 = 0;
  3589   004A3A  97E9               	bcf	233,3,b	;volatile
  3590   004A3C                     
  3591                           ; BSR set to: 14
  3592                           ;serial.c: 62:     TX4STAbits.BRGH = 0;
  3593   004A3C  95E8               	bcf	232,2,b	;volatile
  3594                           
  3595                           ;serial.c: 64:     SP4BRGL = 51;
  3596   004A3E  0E33               	movlw	51
  3597   004A40  6FE5               	movwf	229,b	;volatile
  3598                           
  3599                           ;serial.c: 65:     SP4BRGH = 0;
  3600   004A42  0E00               	movlw	0
  3601   004A44  6FE6               	movwf	230,b	;volatile
  3602   004A46                     
  3603                           ; BSR set to: 14
  3604                           ;serial.c: 73:     RC4STAbits.CREN = 1;
  3605   004A46  89E7               	bsf	231,4,b	;volatile
  3606   004A48                     
  3607                           ; BSR set to: 14
  3608                           ;serial.c: 74:     TX4STAbits.TXEN = 1;
  3609   004A48  8BE8               	bsf	232,5,b	;volatile
  3610   004A4A                     
  3611                           ; BSR set to: 14
  3612                           ;serial.c: 75:     RC4STAbits.SPEN = 1;
  3613   004A4A  8FE7               	bsf	231,7,b	;volatile
  3614   004A4C                     
  3615                           ; BSR set to: 14
  3616   004A4C  0012               	return		;funcret
  3617   004A4E                     __end_of_initUSART4:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _initDCmotorsPWM *****************
  3621 ;; Defined at:
  3622 ;;		line 5 in file "dc_motor_v1.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;Total ram usage:        2 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text13
  3650   004514                     __ptext13:
  3651                           	callstack 0
  3652   004514                     _initDCmotorsPWM:
  3653                           	callstack 30
  3654   004514                     
  3655                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  3656   004514  9485               	bcf	133,2,c	;volatile
  3657                           
  3658                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  3659   004516  9885               	bcf	133,4,c	;volatile
  3660                           
  3661                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  3662   004518  9E83               	bcf	131,7,c	;volatile
  3663                           
  3664                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  3665   00451A  9C87               	bcf	135,6,c	;volatile
  3666                           
  3667                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  3668   00451C  947D               	bcf	125,2,c	;volatile
  3669                           
  3670                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  3671   00451E  987D               	bcf	125,4,c	;volatile
  3672                           
  3673                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  3674   004520  9E7B               	bcf	123,7,c	;volatile
  3675                           
  3676                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  3677   004522  9C7F               	bcf	127,6,c	;volatile
  3678   004524                     
  3679                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  3680   004524  0E05               	movlw	5
  3681   004526  010E               	movlb	14	; () banked
  3682   004528  6F74               	movwf	116,b	;volatile
  3683                           
  3684                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  3685   00452A  0E06               	movlw	6
  3686   00452C  6F76               	movwf	118,b	;volatile
  3687                           
  3688                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  3689   00452E  0E07               	movlw	7
  3690   004530  6F69               	movwf	105,b	;volatile
  3691                           
  3692                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  3693   004532  0E08               	movlw	8
  3694   004534  6F88               	movwf	136,b	;volatile
  3695                           
  3696                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  3697   004536  50BD               	movf	189,w,c	;volatile
  3698   004538  0B8F               	andlw	-113
  3699   00453A  0940               	iorlw	64
  3700   00453C  6EBD               	movwf	189,c	;volatile
  3701                           
  3702                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  3703   00453E  0EE0               	movlw	-32
  3704   004540  16BE               	andwf	190,f,c	;volatile
  3705                           
  3706                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  3707   004542  50BF               	movf	191,w,c	;volatile
  3708   004544  0BF0               	andlw	-16
  3709   004546  0901               	iorlw	1
  3710   004548  6EBF               	movwf	191,c	;volatile
  3711   00454A                     
  3712                           ; BSR set to: 14
  3713                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  3714   00454A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3715   00454E                     
  3716                           ; BSR set to: 14
  3717                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  3718   00454E  8EBD               	bsf	189,7,c	;volatile
  3719                           
  3720                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  3721   004550  0E00               	movlw	0
  3722   004552  6EAA               	movwf	170,c	;volatile
  3723                           
  3724                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  3725   004554  0E00               	movlw	0
  3726   004556  6EA6               	movwf	166,c	;volatile
  3727                           
  3728                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  3729   004558  0E00               	movlw	0
  3730   00455A  010F               	movlb	15	; () banked
  3731   00455C  6F25               	movwf	37,b	;volatile
  3732                           
  3733                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  3734   00455E  0E00               	movlw	0
  3735   004560  6F21               	movwf	33,b	;volatile
  3736                           
  3737                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  3738   004562  0EFC               	movlw	-4
  3739   004564  16AD               	andwf	173,f,c	;volatile
  3740                           
  3741                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  3742   004566  0EF3               	movlw	-13
  3743   004568  16AD               	andwf	173,f,c	;volatile
  3744                           
  3745                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  3746   00456A  0ECF               	movlw	-49
  3747   00456C  16AD               	andwf	173,f,c	;volatile
  3748                           
  3749                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  3750   00456E  0E3F               	movlw	-193
  3751   004570  16AD               	andwf	173,f,c	;volatile
  3752   004572                     
  3753                           ; BSR set to: 15
  3754                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  3755   004572  88AB               	bsf	171,4,c	;volatile
  3756                           
  3757                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  3758   004574  50AB               	movf	171,w,c	;volatile
  3759   004576  0BF0               	andlw	-16
  3760   004578  090C               	iorlw	12
  3761   00457A  6EAB               	movwf	171,c	;volatile
  3762   00457C                     
  3763                           ; BSR set to: 15
  3764                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  3765   00457C  8EAB               	bsf	171,7,c	;volatile
  3766   00457E                     
  3767                           ; BSR set to: 15
  3768                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  3769   00457E  88A7               	bsf	167,4,c	;volatile
  3770                           
  3771                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  3772   004580  50A7               	movf	167,w,c	;volatile
  3773   004582  0BF0               	andlw	-16
  3774   004584  090C               	iorlw	12
  3775   004586  6EA7               	movwf	167,c	;volatile
  3776   004588                     
  3777                           ; BSR set to: 15
  3778                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  3779   004588  8EA7               	bsf	167,7,c	;volatile
  3780   00458A                     
  3781                           ; BSR set to: 15
  3782                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  3783   00458A  8926               	bsf	38,4,b	;volatile
  3784                           
  3785                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  3786   00458C  5126               	movf	38,w,b	;volatile
  3787   00458E  0BF0               	andlw	-16
  3788   004590  090C               	iorlw	12
  3789   004592  6F26               	movwf	38,b	;volatile
  3790   004594                     
  3791                           ; BSR set to: 15
  3792                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  3793   004594  8F26               	bsf	38,7,b	;volatile
  3794   004596                     
  3795                           ; BSR set to: 15
  3796                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  3797   004596  8922               	bsf	34,4,b	;volatile
  3798                           
  3799                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  3800   004598  5122               	movf	34,w,b	;volatile
  3801   00459A  0BF0               	andlw	-16
  3802   00459C  090C               	iorlw	12
  3803   00459E  6F22               	movwf	34,b	;volatile
  3804   0045A0                     
  3805                           ; BSR set to: 15
  3806                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  3807   0045A0  8F22               	bsf	34,7,b	;volatile
  3808   0045A2                     
  3809                           ; BSR set to: 15
  3810                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  3811   0045A2  9688               	bcf	136,3,c	;volatile
  3812   0045A4                     
  3813                           ; BSR set to: 15
  3814                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  3815   0045A4  9680               	bcf	128,3,c	;volatile
  3816   0045A6                     
  3817                           ; BSR set to: 15
  3818   0045A6  0012               	return		;funcret
  3819   0045A8                     __end_of_initDCmotorsPWM:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _forward *****************
  3823 ;; Defined at:
  3824 ;;		line 122 in file "dc_motor_v1.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  Distance_Cal    1    wreg     unsigned char 
  3827 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  3828 ;;		 -> motorL(9), 
  3829 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  3830 ;;		 -> motorR(9), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  Distance_Cal    1   26[COMRAM] unsigned char 
  3833 ;;  j               2   29[COMRAM] int 
  3834 ;;  i               2   27[COMRAM] int 
  3835 ;;  delay_time      2   33[COMRAM] int 
  3836 ;;  max_power       2   31[COMRAM] int 
  3837 ;;  acceleration    2    0        int 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;Total ram usage:       16 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 2
  3854 ;; This function calls:
  3855 ;;		___awdiv
  3856 ;;		_delay_ms_function
  3857 ;;		_setMotorPWM
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text14
  3864   003426                     __ptext14:
  3865                           	callstack 0
  3866   003426                     _forward:
  3867                           	callstack 28
  3868                           
  3869                           ; BSR set to: 15
  3870                           ;incstack = 0
  3871                           ;forward@Distance_Calibration stored from wreg
  3872   003426  6E1B               	movwf	forward@Distance_Calibration^0,c
  3873   003428                     
  3874                           ;dc_motor_v1.c: 123:     mL->direction = 1;
  3875   003428  EE20 F001          	lfsr	2,1
  3876   00342C  5014               	movf	forward@mL^0,w,c
  3877   00342E  26D9               	addwf	fsr2l,f,c
  3878   003430  5015               	movf	(forward@mL+1)^0,w,c
  3879   003432  22DA               	addwfc	fsr2h,f,c
  3880   003434  0E01               	movlw	1
  3881   003436  6EDF               	movwf	indf2,c
  3882                           
  3883                           ;dc_motor_v1.c: 124:     mR->direction = 1;
  3884   003438  EE20 F001          	lfsr	2,1
  3885   00343C  5016               	movf	forward@mR^0,w,c
  3886   00343E  26D9               	addwf	fsr2l,f,c
  3887   003440  5017               	movf	(forward@mR+1)^0,w,c
  3888   003442  22DA               	addwfc	fsr2h,f,c
  3889   003444  0E01               	movlw	1
  3890   003446  6EDF               	movwf	indf2,c
  3891   003448                     
  3892                           ;dc_motor_v1.c: 131:     int max_power = 20;
  3893   003448  0E00               	movlw	0
  3894   00344A  6E21               	movwf	(forward@max_power+1)^0,c
  3895   00344C  0E14               	movlw	20
  3896   00344E  6E20               	movwf	forward@max_power^0,c
  3897   003450                     
  3898                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  3899   003450  0E00               	movlw	0
  3900   003452  6E02               	movwf	(___awdiv@dividend+1)^0,c
  3901   003454  0E64               	movlw	100
  3902   003456  6E01               	movwf	___awdiv@dividend^0,c
  3903   003458  0E00               	movlw	0
  3904   00345A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3905   00345C  0E14               	movlw	20
  3906   00345E  6E03               	movwf	___awdiv@divisor^0,c
  3907   003460  EC1D  F021         	call	___awdiv	;wreg free
  3908   003464  C001  F022         	movff	?___awdiv,forward@delay_time
  3909   003468  C002  F023         	movff	?___awdiv+1,forward@delay_time+1
  3910   00346C                     
  3911                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  3912   00346C  0E00               	movlw	0
  3913   00346E  6E1D               	movwf	(forward@i+1)^0,c
  3914   003470  0E00               	movlw	0
  3915   003472  6E1C               	movwf	forward@i^0,c
  3916   003474  EF68  F01A         	goto	l4725
  3917   003478                     l4715:
  3918                           
  3919                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  3920   003478  C014  FFD9         	movff	forward@mL,fsr2l
  3921   00347C  C015  FFDA         	movff	forward@mL+1,fsr2h
  3922   003480  50DF               	movf	indf2,w,c
  3923   003482  6E18               	movwf	??_forward^0,c
  3924   003484  2818               	incf	??_forward^0,w,c
  3925   003486  C014  FFD9         	movff	forward@mL,fsr2l
  3926   00348A  C015  FFDA         	movff	forward@mL+1,fsr2h
  3927   00348E  6EDF               	movwf	indf2,c
  3928                           
  3929                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  3930   003490  C016  FFD9         	movff	forward@mR,fsr2l
  3931   003494  C017  FFDA         	movff	forward@mR+1,fsr2h
  3932   003498  50DF               	movf	indf2,w,c
  3933   00349A  6E18               	movwf	??_forward^0,c
  3934   00349C  2818               	incf	??_forward^0,w,c
  3935   00349E  C016  FFD9         	movff	forward@mR,fsr2l
  3936   0034A2  C017  FFDA         	movff	forward@mR+1,fsr2h
  3937   0034A6  6EDF               	movwf	indf2,c
  3938   0034A8                     
  3939                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  3940   0034A8  C016  F00E         	movff	forward@mR,setMotorPWM@m
  3941   0034AC  C017  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  3942   0034B0  EC2B  F01E         	call	_setMotorPWM	;wreg free
  3943   0034B4                     
  3944                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  3945   0034B4  C014  F00E         	movff	forward@mL,setMotorPWM@m
  3946   0034B8  C015  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  3947   0034BC  EC2B  F01E         	call	_setMotorPWM	;wreg free
  3948   0034C0                     
  3949                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  3950   0034C0  C022  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  3951   0034C4  C023  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  3952   0034C8  ECB5  F024         	call	_delay_ms_function	;wreg free
  3953   0034CC                     
  3954                           ;dc_motor_v1.c: 142:     }
  3955   0034CC  4A1C               	infsnz	forward@i^0,f,c
  3956   0034CE  2A1D               	incf	(forward@i+1)^0,f,c
  3957   0034D0                     l4725:
  3958   0034D0  5020               	movf	forward@max_power^0,w,c
  3959   0034D2  5C1C               	subwf	forward@i^0,w,c
  3960   0034D4  501D               	movf	(forward@i+1)^0,w,c
  3961   0034D6  0A80               	xorlw	128
  3962   0034D8  6E18               	movwf	??_forward^0,c
  3963   0034DA  5021               	movf	(forward@max_power+1)^0,w,c
  3964   0034DC  0A80               	xorlw	128
  3965   0034DE  5818               	subwfb	??_forward^0,w,c
  3966   0034E0  A0D8               	btfss	status,0,c
  3967   0034E2  EF75  F01A         	goto	u5191
  3968   0034E6  EF77  F01A         	goto	u5190
  3969   0034EA                     u5191:
  3970   0034EA  EF3C  F01A         	goto	l4715
  3971   0034EE                     u5190:
  3972   0034EE                     
  3973                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  3974   0034EE  0E00               	movlw	0
  3975   0034F0  6E1F               	movwf	(forward@j+1)^0,c
  3976   0034F2  0E00               	movlw	0
  3977   0034F4  6E1E               	movwf	forward@j^0,c
  3978   0034F6  EF86  F01A         	goto	l230
  3979   0034FA                     l4729:
  3980                           
  3981                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3982   0034FA  0ED0               	movlw	208
  3983   0034FC  6E18               	movwf	??_forward^0,c
  3984   0034FE  0ECA               	movlw	202
  3985   003500                     u5747:
  3986   003500  2EE8               	decfsz	wreg,f,c
  3987   003502  D7FE               	bra	u5747
  3988   003504  2E18               	decfsz	??_forward^0,f,c
  3989   003506  D7FC               	bra	u5747
  3990   003508                     
  3991                           ;dc_motor_v1.c: 149:     }
  3992   003508  4A1E               	infsnz	forward@j^0,f,c
  3993   00350A  2A1F               	incf	(forward@j+1)^0,f,c
  3994   00350C                     l230:
  3995   00350C  501B               	movf	forward@Distance_Calibration^0,w,c
  3996   00350E  6E18               	movwf	??_forward^0,c
  3997   003510  6A19               	clrf	(??_forward+1)^0,c
  3998   003512  5018               	movf	??_forward^0,w,c
  3999   003514  5C1E               	subwf	forward@j^0,w,c
  4000   003516  501F               	movf	(forward@j+1)^0,w,c
  4001   003518  0A80               	xorlw	128
  4002   00351A  6E1A               	movwf	(??_forward+2)^0,c
  4003   00351C  5019               	movf	(??_forward+1)^0,w,c
  4004   00351E  0A80               	xorlw	128
  4005   003520  581A               	subwfb	(??_forward+2)^0,w,c
  4006   003522  A0D8               	btfss	status,0,c
  4007   003524  EF96  F01A         	goto	u5201
  4008   003528  EF98  F01A         	goto	u5200
  4009   00352C                     u5201:
  4010   00352C  EF7D  F01A         	goto	l4729
  4011   003530                     u5200:
  4012   003530  EFCE  F01A         	goto	l4747
  4013   003534                     l4733:
  4014                           
  4015                           ;dc_motor_v1.c: 153:         if(mR->power> 0 ){
  4016   003534  C016  FFD9         	movff	forward@mR,fsr2l
  4017   003538  C017  FFDA         	movff	forward@mR+1,fsr2h
  4018   00353C  50DF               	movf	indf2,w,c
  4019   00353E  B4D8               	btfsc	status,2,c
  4020   003540  EFA4  F01A         	goto	u5211
  4021   003544  EFA6  F01A         	goto	u5210
  4022   003548                     u5211:
  4023   003548  EFAB  F01A         	goto	l4737
  4024   00354C                     u5210:
  4025   00354C                     
  4026                           ;dc_motor_v1.c: 154:             mR->power--;
  4027   00354C  C016  FFD9         	movff	forward@mR,fsr2l
  4028   003550  C017  FFDA         	movff	forward@mR+1,fsr2h
  4029   003554  06DF               	decf	indf2,f,c
  4030   003556                     l4737:
  4031                           
  4032                           ;dc_motor_v1.c: 156:         if(mL->power> 0 ){
  4033   003556  C014  FFD9         	movff	forward@mL,fsr2l
  4034   00355A  C015  FFDA         	movff	forward@mL+1,fsr2h
  4035   00355E  50DF               	movf	indf2,w,c
  4036   003560  B4D8               	btfsc	status,2,c
  4037   003562  EFB5  F01A         	goto	u5221
  4038   003566  EFB7  F01A         	goto	u5220
  4039   00356A                     u5221:
  4040   00356A  EFBC  F01A         	goto	l4741
  4041   00356E                     u5220:
  4042   00356E                     
  4043                           ;dc_motor_v1.c: 157:             mL->power--;
  4044   00356E  C014  FFD9         	movff	forward@mL,fsr2l
  4045   003572  C015  FFDA         	movff	forward@mL+1,fsr2h
  4046   003576  06DF               	decf	indf2,f,c
  4047   003578                     l4741:
  4048                           
  4049                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  4050   003578  C016  F00E         	movff	forward@mR,setMotorPWM@m
  4051   00357C  C017  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  4052   003580  EC2B  F01E         	call	_setMotorPWM	;wreg free
  4053   003584                     
  4054                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  4055   003584  C014  F00E         	movff	forward@mL,setMotorPWM@m
  4056   003588  C015  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  4057   00358C  EC2B  F01E         	call	_setMotorPWM	;wreg free
  4058   003590                     
  4059                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  4060   003590  C022  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  4061   003594  C023  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  4062   003598  ECB5  F024         	call	_delay_ms_function	;wreg free
  4063   00359C                     l4747:
  4064                           
  4065                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  4066   00359C  C014  FFD9         	movff	forward@mL,fsr2l
  4067   0035A0  C015  FFDA         	movff	forward@mL+1,fsr2h
  4068   0035A4  50DF               	movf	indf2,w,c
  4069   0035A6  A4D8               	btfss	status,2,c
  4070   0035A8  EFD8  F01A         	goto	u5231
  4071   0035AC  EFDA  F01A         	goto	u5230
  4072   0035B0                     u5231:
  4073   0035B0  EF9A  F01A         	goto	l4733
  4074   0035B4                     u5230:
  4075   0035B4  C016  FFD9         	movff	forward@mR,fsr2l
  4076   0035B8  C017  FFDA         	movff	forward@mR+1,fsr2h
  4077   0035BC  50DF               	movf	indf2,w,c
  4078   0035BE  A4D8               	btfss	status,2,c
  4079   0035C0  EFE4  F01A         	goto	u5241
  4080   0035C4  EFE6  F01A         	goto	u5240
  4081   0035C8                     u5241:
  4082   0035C8  EF9A  F01A         	goto	l4733
  4083   0035CC                     u5240:
  4084   0035CC  0012               	return		;funcret
  4085   0035CE                     __end_of_forward:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function _color_click_init *****************
  4089 ;; Defined at:
  4090 ;;		line 7 in file "color.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;Total ram usage:        1 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 3
  4111 ;; This function calls:
  4112 ;;		_I2C_2_Master_Init
  4113 ;;		_color_writetoaddr
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text15
  4120   00488A                     __ptext15:
  4121                           	callstack 0
  4122   00488A                     _color_click_init:
  4123                           	callstack 27
  4124   00488A                     
  4125                           ;color.c: 10:     I2C_2_Master_Init();
  4126   00488A  ECCC  F024         	call	_I2C_2_Master_Init	;wreg free
  4127   00488E                     
  4128                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  4129   00488E  0E01               	movlw	1
  4130   004890  6E03               	movwf	color_writetoaddr@value^0,c
  4131   004892  0E00               	movlw	0
  4132   004894  EC08  F025         	call	_color_writetoaddr
  4133   004898                     
  4134                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4135   004898  0E3F               	movlw	63
  4136   00489A  6E05               	movwf	??_color_click_init^0,c
  4137   00489C  0E55               	movlw	85
  4138   00489E                     u5757:
  4139   00489E  2EE8               	decfsz	wreg,f,c
  4140   0048A0  D7FE               	bra	u5757
  4141   0048A2  2E05               	decfsz	??_color_click_init^0,f,c
  4142   0048A4  D7FC               	bra	u5757
  4143   0048A6  0000               	nop	
  4144   0048A8                     
  4145                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  4146   0048A8  0E03               	movlw	3
  4147   0048AA  6E03               	movwf	color_writetoaddr@value^0,c
  4148   0048AC  0E00               	movlw	0
  4149   0048AE  EC08  F025         	call	_color_writetoaddr
  4150   0048B2                     
  4151                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  4152   0048B2  0ED5               	movlw	213
  4153   0048B4  6E03               	movwf	color_writetoaddr@value^0,c
  4154   0048B6  0E01               	movlw	1
  4155   0048B8  EC08  F025         	call	_color_writetoaddr
  4156   0048BC                     
  4157                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  4158   0048BC  9287               	bcf	135,1,c	;volatile
  4159   0048BE                     
  4160                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  4161   0048BE  9881               	bcf	129,4,c	;volatile
  4162   0048C0                     
  4163                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  4164   0048C0  9E86               	bcf	134,7,c	;volatile
  4165   0048C2                     
  4166                           ;color.c: 30:     LATGbits.LATG1 = 1;
  4167   0048C2  827F               	bsf	127,1,c	;volatile
  4168   0048C4                     
  4169                           ;color.c: 31:     LATAbits.LATA4 = 1;
  4170   0048C4  8879               	bsf	121,4,c	;volatile
  4171   0048C6                     
  4172                           ;color.c: 32:     LATFbits.LATF7 = 1;
  4173   0048C6  8E7E               	bsf	126,7,c	;volatile
  4174   0048C8  0012               	return		;funcret
  4175   0048CA                     __end_of_color_click_init:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _color_writetoaddr *****************
  4179 ;; Defined at:
  4180 ;;		line 37 in file "color.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  address         1    wreg     unsigned char 
  4183 ;;  value           1    2[COMRAM] unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  address         1    3[COMRAM] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  1    wreg      void 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4195 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;Total ram usage:        2 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 2
  4202 ;; This function calls:
  4203 ;;		_I2C_2_Master_Start
  4204 ;;		_I2C_2_Master_Stop
  4205 ;;		_I2C_2_Master_Write
  4206 ;; This function is called by:
  4207 ;;		_color_click_init
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text16
  4212   004A10                     __ptext16:
  4213                           	callstack 0
  4214   004A10                     _color_writetoaddr:
  4215                           	callstack 27
  4216                           
  4217                           ;incstack = 0
  4218                           ;color_writetoaddr@address stored from wreg
  4219   004A10  6E04               	movwf	color_writetoaddr@address^0,c
  4220   004A12                     
  4221                           ;color.c: 38:     I2C_2_Master_Start();
  4222   004A12  EC3E  F025         	call	_I2C_2_Master_Start	;wreg free
  4223                           
  4224                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  4225   004A16  0E52               	movlw	82
  4226   004A18  EC33  F025         	call	_I2C_2_Master_Write
  4227                           
  4228                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  4229   004A1C  5004               	movf	color_writetoaddr@address^0,w,c
  4230   004A1E  0980               	iorlw	128
  4231   004A20  EC33  F025         	call	_I2C_2_Master_Write
  4232                           
  4233                           ;color.c: 41:     I2C_2_Master_Write(value);
  4234   004A24  5003               	movf	color_writetoaddr@value^0,w,c
  4235   004A26  EC33  F025         	call	_I2C_2_Master_Write
  4236                           
  4237                           ;color.c: 42:     I2C_2_Master_Stop();
  4238   004A2A  EC39  F025         	call	_I2C_2_Master_Stop	;wreg free
  4239   004A2E  0012               	return		;funcret
  4240   004A30                     __end_of_color_writetoaddr:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _I2C_2_Master_Init *****************
  4244 ;; Defined at:
  4245 ;;		line 4 in file "i2c.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:        0 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_color_click_init
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text17
  4273   004998                     __ptext17:
  4274                           	callstack 0
  4275   004998                     _I2C_2_Master_Init:
  4276                           	callstack 29
  4277   004998                     
  4278                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4279   004998  010E               	movlb	14	; () banked
  4280   00499A  51D9               	movf	217,w,b	;volatile
  4281   00499C  0BF0               	andlw	-16
  4282   00499E  0908               	iorlw	8
  4283   0049A0  6FD9               	movwf	217,b	;volatile
  4284   0049A2                     
  4285                           ; BSR set to: 14
  4286                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4287   0049A2  8BD9               	bsf	217,5,b	;volatile
  4288                           
  4289                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4290   0049A4  0E9F               	movlw	159
  4291   0049A6  6FD6               	movwf	214,b	;volatile
  4292   0049A8                     
  4293                           ; BSR set to: 14
  4294                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4295   0049A8  8A84               	bsf	132,5,c	;volatile
  4296   0049AA                     
  4297                           ; BSR set to: 14
  4298                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4299   0049AA  8C84               	bsf	132,6,c	;volatile
  4300   0049AC                     
  4301                           ; BSR set to: 14
  4302                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4303   0049AC  9BA7               	bcf	167,5,b	;volatile
  4304   0049AE                     
  4305                           ; BSR set to: 14
  4306                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4307   0049AE  9DA7               	bcf	167,6,b	;volatile
  4308                           
  4309                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4310   0049B0  0E1D               	movlw	29
  4311   0049B2  6F1D               	movwf	29,b	;volatile
  4312                           
  4313                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4314   0049B4  0E1E               	movlw	30
  4315   0049B6  6F1C               	movwf	28,b	;volatile
  4316                           
  4317                           ;i2c.c: 18:   RD5PPS=0x1C;
  4318   0049B8  0E1C               	movlw	28
  4319   0049BA  6F6F               	movwf	111,b	;volatile
  4320                           
  4321                           ;i2c.c: 19:   RD6PPS=0x1B;
  4322   0049BC  0E1B               	movlw	27
  4323   0049BE  6F70               	movwf	112,b	;volatile
  4324   0049C0                     
  4325                           ; BSR set to: 14
  4326   0049C0  0012               	return		;funcret
  4327   0049C2                     __end_of_I2C_2_Master_Init:
  4328                           	callstack 0
  4329                           
  4330 ;; *************** function _color_cardCheck *****************
  4331 ;; Defined at:
  4332 ;;		line 171 in file "color.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  V               4  123[BANK0 ] float 
  4337 ;;  S               4  119[BANK0 ] float 
  4338 ;;  H               4  115[BANK0 ] float 
  4339 ;;  c               4  109[BANK0 ] float 
  4340 ;;  b               4  105[BANK0 ] float 
  4341 ;;  g               4  101[BANK0 ] float 
  4342 ;;  r               4   97[BANK0 ] float 
  4343 ;;  card_color      2  113[BANK0 ] unsigned int 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2   91[COMRAM] unsigned int 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;Total ram usage:       32 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 4
  4360 ;; This function calls:
  4361 ;;		_RGB_to_HSV
  4362 ;;		___flge
  4363 ;;		___xxtofl
  4364 ;;		_color_read_Blue
  4365 ;;		_color_read_Clear
  4366 ;;		_color_read_Green
  4367 ;;		_color_read_Red
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text18
  4374   000E08                     __ptext18:
  4375                           	callstack 0
  4376   000E08                     _color_cardCheck:
  4377                           	callstack 26
  4378   000E08                     
  4379                           ;color.c: 174:     float r = color_read_Red();
  4380   000E08  EC40  F023         	call	_color_read_Red	;wreg free
  4381   000E0C  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  4382   000E10  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  4383   000E14  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4384   000E16  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4385   000E18  0E00               	movlw	0
  4386   000E1A  EC39  F019         	call	___xxtofl
  4387   000E1E  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  4388   000E22  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  4389   000E26  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  4390   000E2A  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  4391                           
  4392                           ;color.c: 175:     float g = color_read_Green();
  4393   000E2E  EC68  F023         	call	_color_read_Green	;wreg free
  4394   000E32  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  4395   000E36  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  4396   000E3A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4397   000E3C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4398   000E3E  0E00               	movlw	0
  4399   000E40  EC39  F019         	call	___xxtofl
  4400   000E44  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  4401   000E48  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  4402   000E4C  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  4403   000E50  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  4404                           
  4405                           ;color.c: 176:     float b = color_read_Blue();
  4406   000E54  ECB8  F023         	call	_color_read_Blue	;wreg free
  4407   000E58  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  4408   000E5C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  4409   000E60  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4410   000E62  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4411   000E64  0E00               	movlw	0
  4412   000E66  EC39  F019         	call	___xxtofl
  4413   000E6A  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  4414   000E6E  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  4415   000E72  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  4416   000E76  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  4417                           
  4418                           ;color.c: 179:     float c = color_read_Clear();
  4419   000E7A  EC90  F023         	call	_color_read_Clear	;wreg free
  4420   000E7E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  4421   000E82  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  4422   000E86  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4423   000E88  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4424   000E8A  0E00               	movlw	0
  4425   000E8C  EC39  F019         	call	___xxtofl
  4426   000E90  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  4427   000E94  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  4428   000E98  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  4429   000E9C  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  4430   000EA0                     
  4431                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  4432   000EA0  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  4433   000EA4  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  4434   000EA8  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  4435   000EAC  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  4436   000EB0  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  4437   000EB4  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  4438   000EB8  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  4439   000EBC  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  4440   000EC0  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  4441   000EC4  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  4442   000EC8  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  4443   000ECC  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  4444   000ED0  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  4445   000ED4  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  4446   000ED8  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  4447   000EDC  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  4448   000EE0  0ED3               	movlw	low color_cardCheck@H
  4449   000EE2  0100               	movlb	0	; () banked
  4450   000EE4  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  4451   000EE6  0ED7               	movlw	low color_cardCheck@S
  4452   000EE8  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  4453   000EEA  0EDB               	movlw	low color_cardCheck@V
  4454   000EEC  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  4455   000EEE  EC20  F00C         	call	_RGB_to_HSV	;wreg free
  4456   000EF2                     
  4457                           ;color.c: 195:     unsigned int card_color = 0;
  4458   000EF2  0E00               	movlw	0
  4459   000EF4  0100               	movlb	0	; () banked
  4460   000EF6  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4461   000EF8  0E00               	movlw	0
  4462   000EFA  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4463   000EFC                     
  4464                           ; BSR set to: 0
  4465                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  4466   000EFC  0E00               	movlw	0
  4467   000EFE  6E01               	movwf	___flge@ff1^0,c
  4468   000F00  0E80               	movlw	128
  4469   000F02  6E02               	movwf	(___flge@ff1+1)^0,c
  4470   000F04  0EB1               	movlw	177
  4471   000F06  6E03               	movwf	(___flge@ff1+2)^0,c
  4472   000F08  0E43               	movlw	67
  4473   000F0A  6E04               	movwf	(___flge@ff1+3)^0,c
  4474   000F0C  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4475   000F10  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4476   000F14  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4477   000F18  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4478   000F1C  EC9B  F020         	call	___flge	;wreg free
  4479   000F20  B0D8               	btfsc	status,0,c
  4480   000F22  EF95  F007         	goto	u4061
  4481   000F26  EF97  F007         	goto	u4060
  4482   000F2A                     u4061:
  4483   000F2A  EF1B  F008         	goto	l3935
  4484   000F2E                     u4060:
  4485   000F2E  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4486   000F32  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4487   000F36  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4488   000F3A  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4489   000F3E  0E00               	movlw	0
  4490   000F40  6E05               	movwf	___flge@ff2^0,c
  4491   000F42  0E00               	movlw	0
  4492   000F44  6E06               	movwf	(___flge@ff2+1)^0,c
  4493   000F46  0EB4               	movlw	180
  4494   000F48  6E07               	movwf	(___flge@ff2+2)^0,c
  4495   000F4A  0E43               	movlw	67
  4496   000F4C  6E08               	movwf	(___flge@ff2+3)^0,c
  4497   000F4E  EC9B  F020         	call	___flge	;wreg free
  4498   000F52  B0D8               	btfsc	status,0,c
  4499   000F54  EFAE  F007         	goto	u4071
  4500   000F58  EFB0  F007         	goto	u4070
  4501   000F5C                     u4071:
  4502   000F5C  EF1B  F008         	goto	l3935
  4503   000F60                     u4070:
  4504   000F60  0E00               	movlw	0
  4505   000F62  6E01               	movwf	___flge@ff1^0,c
  4506   000F64  0E00               	movlw	0
  4507   000F66  6E02               	movwf	(___flge@ff1+1)^0,c
  4508   000F68  0EAA               	movlw	170
  4509   000F6A  6E03               	movwf	(___flge@ff1+2)^0,c
  4510   000F6C  0E42               	movlw	66
  4511   000F6E  6E04               	movwf	(___flge@ff1+3)^0,c
  4512   000F70  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4513   000F74  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4514   000F78  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4515   000F7C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4516   000F80  EC9B  F020         	call	___flge	;wreg free
  4517   000F84  B0D8               	btfsc	status,0,c
  4518   000F86  EFC7  F007         	goto	u4081
  4519   000F8A  EFC9  F007         	goto	u4080
  4520   000F8E                     u4081:
  4521   000F8E  EF1B  F008         	goto	l3935
  4522   000F92                     u4080:
  4523   000F92  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4524   000F96  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4525   000F9A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4526   000F9E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4527   000FA2  0E00               	movlw	0
  4528   000FA4  6E05               	movwf	___flge@ff2^0,c
  4529   000FA6  0E00               	movlw	0
  4530   000FA8  6E06               	movwf	(___flge@ff2+1)^0,c
  4531   000FAA  0EB4               	movlw	180
  4532   000FAC  6E07               	movwf	(___flge@ff2+2)^0,c
  4533   000FAE  0E42               	movlw	66
  4534   000FB0  6E08               	movwf	(___flge@ff2+3)^0,c
  4535   000FB2  EC9B  F020         	call	___flge	;wreg free
  4536   000FB6  B0D8               	btfsc	status,0,c
  4537   000FB8  EFE0  F007         	goto	u4091
  4538   000FBC  EFE2  F007         	goto	u4090
  4539   000FC0                     u4091:
  4540   000FC0  EF1B  F008         	goto	l3935
  4541   000FC4                     u4090:
  4542   000FC4  0E00               	movlw	0
  4543   000FC6  6E01               	movwf	___flge@ff1^0,c
  4544   000FC8  0E00               	movlw	0
  4545   000FCA  6E02               	movwf	(___flge@ff1+1)^0,c
  4546   000FCC  0EA0               	movlw	160
  4547   000FCE  6E03               	movwf	(___flge@ff1+2)^0,c
  4548   000FD0  0E42               	movlw	66
  4549   000FD2  6E04               	movwf	(___flge@ff1+3)^0,c
  4550   000FD4  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4551   000FD8  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4552   000FDC  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4553   000FE0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4554   000FE4  EC9B  F020         	call	___flge	;wreg free
  4555   000FE8  B0D8               	btfsc	status,0,c
  4556   000FEA  EFF9  F007         	goto	u4101
  4557   000FEE  EFFB  F007         	goto	u4100
  4558   000FF2                     u4101:
  4559   000FF2  EF1B  F008         	goto	l3935
  4560   000FF6                     u4100:
  4561   000FF6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4562   000FFA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4563   000FFE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4564   001002  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4565   001006  0E00               	movlw	0
  4566   001008  6E05               	movwf	___flge@ff2^0,c
  4567   00100A  0E00               	movlw	0
  4568   00100C  6E06               	movwf	(___flge@ff2+1)^0,c
  4569   00100E  0EAA               	movlw	170
  4570   001010  6E07               	movwf	(___flge@ff2+2)^0,c
  4571   001012  0E42               	movlw	66
  4572   001014  6E08               	movwf	(___flge@ff2+3)^0,c
  4573   001016  EC9B  F020         	call	___flge	;wreg free
  4574   00101A  B0D8               	btfsc	status,0,c
  4575   00101C  EF12  F008         	goto	u4111
  4576   001020  EF14  F008         	goto	u4110
  4577   001024                     u4111:
  4578   001024  EF1B  F008         	goto	l3935
  4579   001028                     u4110:
  4580   001028  0E00               	movlw	0
  4581   00102A  0100               	movlb	0	; () banked
  4582   00102C  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4583   00102E  0E01               	movlw	1
  4584   001030  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4585   001032  EF1B  F00C         	goto	l4027
  4586   001036                     l3935:
  4587   001036  0E00               	movlw	0
  4588   001038  6E01               	movwf	___flge@ff1^0,c
  4589   00103A  0E00               	movlw	0
  4590   00103C  6E02               	movwf	(___flge@ff1+1)^0,c
  4591   00103E  0E86               	movlw	134
  4592   001040  6E03               	movwf	(___flge@ff1+2)^0,c
  4593   001042  0E42               	movlw	66
  4594   001044  6E04               	movwf	(___flge@ff1+3)^0,c
  4595   001046  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4596   00104A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4597   00104E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4598   001052  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4599   001056  EC9B  F020         	call	___flge	;wreg free
  4600   00105A  B0D8               	btfsc	status,0,c
  4601   00105C  EF32  F008         	goto	u4121
  4602   001060  EF34  F008         	goto	u4120
  4603   001064                     u4121:
  4604   001064  EFB8  F008         	goto	l3949
  4605   001068                     u4120:
  4606   001068  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4607   00106C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4608   001070  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4609   001074  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4610   001078  0E00               	movlw	0
  4611   00107A  6E05               	movwf	___flge@ff2^0,c
  4612   00107C  0E00               	movlw	0
  4613   00107E  6E06               	movwf	(___flge@ff2+1)^0,c
  4614   001080  0E9E               	movlw	158
  4615   001082  6E07               	movwf	(___flge@ff2+2)^0,c
  4616   001084  0E42               	movlw	66
  4617   001086  6E08               	movwf	(___flge@ff2+3)^0,c
  4618   001088  EC9B  F020         	call	___flge	;wreg free
  4619   00108C  B0D8               	btfsc	status,0,c
  4620   00108E  EF4B  F008         	goto	u4131
  4621   001092  EF4D  F008         	goto	u4130
  4622   001096                     u4131:
  4623   001096  EFB8  F008         	goto	l3949
  4624   00109A                     u4130:
  4625   00109A  0E00               	movlw	0
  4626   00109C  6E01               	movwf	___flge@ff1^0,c
  4627   00109E  0E00               	movlw	0
  4628   0010A0  6E02               	movwf	(___flge@ff1+1)^0,c
  4629   0010A2  0E48               	movlw	72
  4630   0010A4  6E03               	movwf	(___flge@ff1+2)^0,c
  4631   0010A6  0E42               	movlw	66
  4632   0010A8  6E04               	movwf	(___flge@ff1+3)^0,c
  4633   0010AA  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4634   0010AE  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4635   0010B2  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4636   0010B6  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4637   0010BA  EC9B  F020         	call	___flge	;wreg free
  4638   0010BE  B0D8               	btfsc	status,0,c
  4639   0010C0  EF64  F008         	goto	u4141
  4640   0010C4  EF66  F008         	goto	u4140
  4641   0010C8                     u4141:
  4642   0010C8  EFB8  F008         	goto	l3949
  4643   0010CC                     u4140:
  4644   0010CC  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4645   0010D0  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4646   0010D4  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4647   0010D8  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4648   0010DC  0E00               	movlw	0
  4649   0010DE  6E05               	movwf	___flge@ff2^0,c
  4650   0010E0  0E00               	movlw	0
  4651   0010E2  6E06               	movwf	(___flge@ff2+1)^0,c
  4652   0010E4  0E64               	movlw	100
  4653   0010E6  6E07               	movwf	(___flge@ff2+2)^0,c
  4654   0010E8  0E42               	movlw	66
  4655   0010EA  6E08               	movwf	(___flge@ff2+3)^0,c
  4656   0010EC  EC9B  F020         	call	___flge	;wreg free
  4657   0010F0  B0D8               	btfsc	status,0,c
  4658   0010F2  EF7D  F008         	goto	u4151
  4659   0010F6  EF7F  F008         	goto	u4150
  4660   0010FA                     u4151:
  4661   0010FA  EFB8  F008         	goto	l3949
  4662   0010FE                     u4150:
  4663   0010FE  0E00               	movlw	0
  4664   001100  6E01               	movwf	___flge@ff1^0,c
  4665   001102  0E00               	movlw	0
  4666   001104  6E02               	movwf	(___flge@ff1+1)^0,c
  4667   001106  0E20               	movlw	32
  4668   001108  6E03               	movwf	(___flge@ff1+2)^0,c
  4669   00110A  0E42               	movlw	66
  4670   00110C  6E04               	movwf	(___flge@ff1+3)^0,c
  4671   00110E  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4672   001112  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4673   001116  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4674   00111A  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4675   00111E  EC9B  F020         	call	___flge	;wreg free
  4676   001122  B0D8               	btfsc	status,0,c
  4677   001124  EF96  F008         	goto	u4161
  4678   001128  EF98  F008         	goto	u4160
  4679   00112C                     u4161:
  4680   00112C  EFB8  F008         	goto	l3949
  4681   001130                     u4160:
  4682   001130  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4683   001134  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4684   001138  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4685   00113C  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4686   001140  0E00               	movlw	0
  4687   001142  6E05               	movwf	___flge@ff2^0,c
  4688   001144  0E00               	movlw	0
  4689   001146  6E06               	movwf	(___flge@ff2+1)^0,c
  4690   001148  0E38               	movlw	56
  4691   00114A  6E07               	movwf	(___flge@ff2+2)^0,c
  4692   00114C  0E42               	movlw	66
  4693   00114E  6E08               	movwf	(___flge@ff2+3)^0,c
  4694   001150  EC9B  F020         	call	___flge	;wreg free
  4695   001154  B0D8               	btfsc	status,0,c
  4696   001156  EFAF  F008         	goto	u4171
  4697   00115A  EFB1  F008         	goto	u4170
  4698   00115E                     u4171:
  4699   00115E  EFB8  F008         	goto	l3949
  4700   001162                     u4170:
  4701   001162  0E00               	movlw	0
  4702   001164  0100               	movlb	0	; () banked
  4703   001166  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4704   001168  0E02               	movlw	2
  4705   00116A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4706   00116C  EF1B  F00C         	goto	l4027
  4707   001170                     l3949:
  4708   001170  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4709   001174  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4710   001178  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4711   00117C  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4712   001180  0E00               	movlw	0
  4713   001182  6E05               	movwf	___flge@ff2^0,c
  4714   001184  0E00               	movlw	0
  4715   001186  6E06               	movwf	(___flge@ff2+1)^0,c
  4716   001188  0E20               	movlw	32
  4717   00118A  6E07               	movwf	(___flge@ff2+2)^0,c
  4718   00118C  0E41               	movlw	65
  4719   00118E  6E08               	movwf	(___flge@ff2+3)^0,c
  4720   001190  EC9B  F020         	call	___flge	;wreg free
  4721   001194  B0D8               	btfsc	status,0,c
  4722   001196  EFCF  F008         	goto	u4181
  4723   00119A  EFD1  F008         	goto	u4180
  4724   00119E                     u4181:
  4725   00119E  EF0A  F009         	goto	l3957
  4726   0011A2                     u4180:
  4727   0011A2  0E00               	movlw	0
  4728   0011A4  6E01               	movwf	___flge@ff1^0,c
  4729   0011A6  0E00               	movlw	0
  4730   0011A8  6E02               	movwf	(___flge@ff1+1)^0,c
  4731   0011AA  0EF0               	movlw	240
  4732   0011AC  6E03               	movwf	(___flge@ff1+2)^0,c
  4733   0011AE  0E41               	movlw	65
  4734   0011B0  6E04               	movwf	(___flge@ff1+3)^0,c
  4735   0011B2  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4736   0011B6  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4737   0011BA  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4738   0011BE  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4739   0011C2  EC9B  F020         	call	___flge	;wreg free
  4740   0011C6  B0D8               	btfsc	status,0,c
  4741   0011C8  EFE8  F008         	goto	u4191
  4742   0011CC  EFEA  F008         	goto	u4190
  4743   0011D0                     u4191:
  4744   0011D0  EF0A  F009         	goto	l3957
  4745   0011D4                     u4190:
  4746   0011D4  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4747   0011D8  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4748   0011DC  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4749   0011E0  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4750   0011E4  0E00               	movlw	0
  4751   0011E6  6E05               	movwf	___flge@ff2^0,c
  4752   0011E8  0E00               	movlw	0
  4753   0011EA  6E06               	movwf	(___flge@ff2+1)^0,c
  4754   0011EC  0E0C               	movlw	12
  4755   0011EE  6E07               	movwf	(___flge@ff2+2)^0,c
  4756   0011F0  0E42               	movlw	66
  4757   0011F2  6E08               	movwf	(___flge@ff2+3)^0,c
  4758   0011F4  EC9B  F020         	call	___flge	;wreg free
  4759   0011F8  B0D8               	btfsc	status,0,c
  4760   0011FA  EF01  F009         	goto	u4201
  4761   0011FE  EF03  F009         	goto	u4200
  4762   001202                     u4201:
  4763   001202  EF0A  F009         	goto	l3957
  4764   001206                     u4200:
  4765   001206  0E00               	movlw	0
  4766   001208  0100               	movlb	0	; () banked
  4767   00120A  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4768   00120C  0E03               	movlw	3
  4769   00120E  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4770   001210  EF1B  F00C         	goto	l4027
  4771   001214                     l3957:
  4772   001214  0E00               	movlw	0
  4773   001216  6E01               	movwf	___flge@ff1^0,c
  4774   001218  0E00               	movlw	0
  4775   00121A  6E02               	movwf	(___flge@ff1+1)^0,c
  4776   00121C  0EA0               	movlw	160
  4777   00121E  6E03               	movwf	(___flge@ff1+2)^0,c
  4778   001220  0E41               	movlw	65
  4779   001222  6E04               	movwf	(___flge@ff1+3)^0,c
  4780   001224  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4781   001228  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4782   00122C  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4783   001230  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4784   001234  EC9B  F020         	call	___flge	;wreg free
  4785   001238  B0D8               	btfsc	status,0,c
  4786   00123A  EF21  F009         	goto	u4211
  4787   00123E  EF23  F009         	goto	u4210
  4788   001242                     u4211:
  4789   001242  EFA7  F009         	goto	l3971
  4790   001246                     u4210:
  4791   001246  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4792   00124A  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4793   00124E  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4794   001252  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4795   001256  0E00               	movlw	0
  4796   001258  6E05               	movwf	___flge@ff2^0,c
  4797   00125A  0E00               	movlw	0
  4798   00125C  6E06               	movwf	(___flge@ff2+1)^0,c
  4799   00125E  0EC8               	movlw	200
  4800   001260  6E07               	movwf	(___flge@ff2+2)^0,c
  4801   001262  0E41               	movlw	65
  4802   001264  6E08               	movwf	(___flge@ff2+3)^0,c
  4803   001266  EC9B  F020         	call	___flge	;wreg free
  4804   00126A  B0D8               	btfsc	status,0,c
  4805   00126C  EF3A  F009         	goto	u4221
  4806   001270  EF3C  F009         	goto	u4220
  4807   001274                     u4221:
  4808   001274  EFA7  F009         	goto	l3971
  4809   001278                     u4220:
  4810   001278  0E00               	movlw	0
  4811   00127A  6E01               	movwf	___flge@ff1^0,c
  4812   00127C  0E00               	movlw	0
  4813   00127E  6E02               	movwf	(___flge@ff1+1)^0,c
  4814   001280  0E82               	movlw	130
  4815   001282  6E03               	movwf	(___flge@ff1+2)^0,c
  4816   001284  0E42               	movlw	66
  4817   001286  6E04               	movwf	(___flge@ff1+3)^0,c
  4818   001288  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4819   00128C  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4820   001290  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4821   001294  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4822   001298  EC9B  F020         	call	___flge	;wreg free
  4823   00129C  B0D8               	btfsc	status,0,c
  4824   00129E  EF53  F009         	goto	u4231
  4825   0012A2  EF55  F009         	goto	u4230
  4826   0012A6                     u4231:
  4827   0012A6  EFA7  F009         	goto	l3971
  4828   0012AA                     u4230:
  4829   0012AA  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4830   0012AE  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4831   0012B2  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4832   0012B6  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4833   0012BA  0E00               	movlw	0
  4834   0012BC  6E05               	movwf	___flge@ff2^0,c
  4835   0012BE  0E00               	movlw	0
  4836   0012C0  6E06               	movwf	(___flge@ff2+1)^0,c
  4837   0012C2  0E8C               	movlw	140
  4838   0012C4  6E07               	movwf	(___flge@ff2+2)^0,c
  4839   0012C6  0E42               	movlw	66
  4840   0012C8  6E08               	movwf	(___flge@ff2+3)^0,c
  4841   0012CA  EC9B  F020         	call	___flge	;wreg free
  4842   0012CE  B0D8               	btfsc	status,0,c
  4843   0012D0  EF6C  F009         	goto	u4241
  4844   0012D4  EF6E  F009         	goto	u4240
  4845   0012D8                     u4241:
  4846   0012D8  EFA7  F009         	goto	l3971
  4847   0012DC                     u4240:
  4848   0012DC  0E00               	movlw	0
  4849   0012DE  6E01               	movwf	___flge@ff1^0,c
  4850   0012E0  0E00               	movlw	0
  4851   0012E2  6E02               	movwf	(___flge@ff1+1)^0,c
  4852   0012E4  0E58               	movlw	88
  4853   0012E6  6E03               	movwf	(___flge@ff1+2)^0,c
  4854   0012E8  0E42               	movlw	66
  4855   0012EA  6E04               	movwf	(___flge@ff1+3)^0,c
  4856   0012EC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4857   0012F0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4858   0012F4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4859   0012F8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4860   0012FC  EC9B  F020         	call	___flge	;wreg free
  4861   001300  B0D8               	btfsc	status,0,c
  4862   001302  EF85  F009         	goto	u4251
  4863   001306  EF87  F009         	goto	u4250
  4864   00130A                     u4251:
  4865   00130A  EFA7  F009         	goto	l3971
  4866   00130E                     u4250:
  4867   00130E  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4868   001312  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4869   001316  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4870   00131A  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4871   00131E  0E00               	movlw	0
  4872   001320  6E05               	movwf	___flge@ff2^0,c
  4873   001322  0E00               	movlw	0
  4874   001324  6E06               	movwf	(___flge@ff2+1)^0,c
  4875   001326  0E64               	movlw	100
  4876   001328  6E07               	movwf	(___flge@ff2+2)^0,c
  4877   00132A  0E42               	movlw	66
  4878   00132C  6E08               	movwf	(___flge@ff2+3)^0,c
  4879   00132E  EC9B  F020         	call	___flge	;wreg free
  4880   001332  B0D8               	btfsc	status,0,c
  4881   001334  EF9E  F009         	goto	u4261
  4882   001338  EFA0  F009         	goto	u4260
  4883   00133C                     u4261:
  4884   00133C  EFA7  F009         	goto	l3971
  4885   001340                     u4260:
  4886   001340  0E00               	movlw	0
  4887   001342  0100               	movlb	0	; () banked
  4888   001344  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4889   001346  0E04               	movlw	4
  4890   001348  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4891   00134A  EF1B  F00C         	goto	l4027
  4892   00134E                     l3971:
  4893   00134E  0E00               	movlw	0
  4894   001350  6E01               	movwf	___flge@ff1^0,c
  4895   001352  0E00               	movlw	0
  4896   001354  6E02               	movwf	(___flge@ff1+1)^0,c
  4897   001356  0E50               	movlw	80
  4898   001358  6E03               	movwf	(___flge@ff1+2)^0,c
  4899   00135A  0E41               	movlw	65
  4900   00135C  6E04               	movwf	(___flge@ff1+3)^0,c
  4901   00135E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4902   001362  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4903   001366  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4904   00136A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4905   00136E  EC9B  F020         	call	___flge	;wreg free
  4906   001372  B0D8               	btfsc	status,0,c
  4907   001374  EFBE  F009         	goto	u4271
  4908   001378  EFC0  F009         	goto	u4270
  4909   00137C                     u4271:
  4910   00137C  EF44  F00A         	goto	l3985
  4911   001380                     u4270:
  4912   001380  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4913   001384  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4914   001388  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4915   00138C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4916   001390  0E00               	movlw	0
  4917   001392  6E05               	movwf	___flge@ff2^0,c
  4918   001394  0E00               	movlw	0
  4919   001396  6E06               	movwf	(___flge@ff2+1)^0,c
  4920   001398  0E90               	movlw	144
  4921   00139A  6E07               	movwf	(___flge@ff2+2)^0,c
  4922   00139C  0E41               	movlw	65
  4923   00139E  6E08               	movwf	(___flge@ff2+3)^0,c
  4924   0013A0  EC9B  F020         	call	___flge	;wreg free
  4925   0013A4  B0D8               	btfsc	status,0,c
  4926   0013A6  EFD7  F009         	goto	u4281
  4927   0013AA  EFD9  F009         	goto	u4280
  4928   0013AE                     u4281:
  4929   0013AE  EF44  F00A         	goto	l3985
  4930   0013B2                     u4280:
  4931   0013B2  0E00               	movlw	0
  4932   0013B4  6E01               	movwf	___flge@ff1^0,c
  4933   0013B6  0E00               	movlw	0
  4934   0013B8  6E02               	movwf	(___flge@ff1+1)^0,c
  4935   0013BA  0E5C               	movlw	92
  4936   0013BC  6E03               	movwf	(___flge@ff1+2)^0,c
  4937   0013BE  0E42               	movlw	66
  4938   0013C0  6E04               	movwf	(___flge@ff1+3)^0,c
  4939   0013C2  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4940   0013C6  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4941   0013CA  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4942   0013CE  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4943   0013D2  EC9B  F020         	call	___flge	;wreg free
  4944   0013D6  B0D8               	btfsc	status,0,c
  4945   0013D8  EFF0  F009         	goto	u4291
  4946   0013DC  EFF2  F009         	goto	u4290
  4947   0013E0                     u4291:
  4948   0013E0  EF44  F00A         	goto	l3985
  4949   0013E4                     u4290:
  4950   0013E4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4951   0013E8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4952   0013EC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4953   0013F0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4954   0013F4  0E00               	movlw	0
  4955   0013F6  6E05               	movwf	___flge@ff2^0,c
  4956   0013F8  0E00               	movlw	0
  4957   0013FA  6E06               	movwf	(___flge@ff2+1)^0,c
  4958   0013FC  0E70               	movlw	112
  4959   0013FE  6E07               	movwf	(___flge@ff2+2)^0,c
  4960   001400  0E42               	movlw	66
  4961   001402  6E08               	movwf	(___flge@ff2+3)^0,c
  4962   001404  EC9B  F020         	call	___flge	;wreg free
  4963   001408  B0D8               	btfsc	status,0,c
  4964   00140A  EF09  F00A         	goto	u4301
  4965   00140E  EF0B  F00A         	goto	u4300
  4966   001412                     u4301:
  4967   001412  EF44  F00A         	goto	l3985
  4968   001416                     u4300:
  4969   001416  0E00               	movlw	0
  4970   001418  6E01               	movwf	___flge@ff1^0,c
  4971   00141A  0E00               	movlw	0
  4972   00141C  6E02               	movwf	(___flge@ff1+1)^0,c
  4973   00141E  0E48               	movlw	72
  4974   001420  6E03               	movwf	(___flge@ff1+2)^0,c
  4975   001422  0E42               	movlw	66
  4976   001424  6E04               	movwf	(___flge@ff1+3)^0,c
  4977   001426  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4978   00142A  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4979   00142E  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4980   001432  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4981   001436  EC9B  F020         	call	___flge	;wreg free
  4982   00143A  B0D8               	btfsc	status,0,c
  4983   00143C  EF22  F00A         	goto	u4311
  4984   001440  EF24  F00A         	goto	u4310
  4985   001444                     u4311:
  4986   001444  EF44  F00A         	goto	l3985
  4987   001448                     u4310:
  4988   001448  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4989   00144C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4990   001450  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4991   001454  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4992   001458  0E00               	movlw	0
  4993   00145A  6E05               	movwf	___flge@ff2^0,c
  4994   00145C  0E00               	movlw	0
  4995   00145E  6E06               	movwf	(___flge@ff2+1)^0,c
  4996   001460  0E58               	movlw	88
  4997   001462  6E07               	movwf	(___flge@ff2+2)^0,c
  4998   001464  0E42               	movlw	66
  4999   001466  6E08               	movwf	(___flge@ff2+3)^0,c
  5000   001468  EC9B  F020         	call	___flge	;wreg free
  5001   00146C  B0D8               	btfsc	status,0,c
  5002   00146E  EF3B  F00A         	goto	u4321
  5003   001472  EF3D  F00A         	goto	u4320
  5004   001476                     u4321:
  5005   001476  EF44  F00A         	goto	l3985
  5006   00147A                     u4320:
  5007   00147A  0E00               	movlw	0
  5008   00147C  0100               	movlb	0	; () banked
  5009   00147E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5010   001480  0E05               	movlw	5
  5011   001482  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5012   001484  EF1B  F00C         	goto	l4027
  5013   001488                     l3985:
  5014   001488  0E00               	movlw	0
  5015   00148A  6E01               	movwf	___flge@ff1^0,c
  5016   00148C  0E00               	movlw	0
  5017   00148E  6E02               	movwf	(___flge@ff1+1)^0,c
  5018   001490  0EA0               	movlw	160
  5019   001492  6E03               	movwf	(___flge@ff1+2)^0,c
  5020   001494  0E40               	movlw	64
  5021   001496  6E04               	movwf	(___flge@ff1+3)^0,c
  5022   001498  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5023   00149C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5024   0014A0  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5025   0014A4  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5026   0014A8  EC9B  F020         	call	___flge	;wreg free
  5027   0014AC  B0D8               	btfsc	status,0,c
  5028   0014AE  EF5B  F00A         	goto	u4331
  5029   0014B2  EF5D  F00A         	goto	u4330
  5030   0014B6                     u4331:
  5031   0014B6  EFE1  F00A         	goto	l3999
  5032   0014BA                     u4330:
  5033   0014BA  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5034   0014BE  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5035   0014C2  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5036   0014C6  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5037   0014CA  0E00               	movlw	0
  5038   0014CC  6E05               	movwf	___flge@ff2^0,c
  5039   0014CE  0E00               	movlw	0
  5040   0014D0  6E06               	movwf	(___flge@ff2+1)^0,c
  5041   0014D2  0E20               	movlw	32
  5042   0014D4  6E07               	movwf	(___flge@ff2+2)^0,c
  5043   0014D6  0E41               	movlw	65
  5044   0014D8  6E08               	movwf	(___flge@ff2+3)^0,c
  5045   0014DA  EC9B  F020         	call	___flge	;wreg free
  5046   0014DE  B0D8               	btfsc	status,0,c
  5047   0014E0  EF74  F00A         	goto	u4341
  5048   0014E4  EF76  F00A         	goto	u4340
  5049   0014E8                     u4341:
  5050   0014E8  EFE1  F00A         	goto	l3999
  5051   0014EC                     u4340:
  5052   0014EC  0E00               	movlw	0
  5053   0014EE  6E01               	movwf	___flge@ff1^0,c
  5054   0014F0  0E00               	movlw	0
  5055   0014F2  6E02               	movwf	(___flge@ff1+1)^0,c
  5056   0014F4  0E8C               	movlw	140
  5057   0014F6  6E03               	movwf	(___flge@ff1+2)^0,c
  5058   0014F8  0E42               	movlw	66
  5059   0014FA  6E04               	movwf	(___flge@ff1+3)^0,c
  5060   0014FC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5061   001500  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5062   001504  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5063   001508  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5064   00150C  EC9B  F020         	call	___flge	;wreg free
  5065   001510  B0D8               	btfsc	status,0,c
  5066   001512  EF8D  F00A         	goto	u4351
  5067   001516  EF8F  F00A         	goto	u4350
  5068   00151A                     u4351:
  5069   00151A  EFE1  F00A         	goto	l3999
  5070   00151E                     u4350:
  5071   00151E  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5072   001522  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5073   001526  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5074   00152A  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5075   00152E  0E00               	movlw	0
  5076   001530  6E05               	movwf	___flge@ff2^0,c
  5077   001532  0E00               	movlw	0
  5078   001534  6E06               	movwf	(___flge@ff2+1)^0,c
  5079   001536  0E96               	movlw	150
  5080   001538  6E07               	movwf	(___flge@ff2+2)^0,c
  5081   00153A  0E42               	movlw	66
  5082   00153C  6E08               	movwf	(___flge@ff2+3)^0,c
  5083   00153E  EC9B  F020         	call	___flge	;wreg free
  5084   001542  B0D8               	btfsc	status,0,c
  5085   001544  EFA6  F00A         	goto	u4361
  5086   001548  EFA8  F00A         	goto	u4360
  5087   00154C                     u4361:
  5088   00154C  EFE1  F00A         	goto	l3999
  5089   001550                     u4360:
  5090   001550  0E00               	movlw	0
  5091   001552  6E01               	movwf	___flge@ff1^0,c
  5092   001554  0E00               	movlw	0
  5093   001556  6E02               	movwf	(___flge@ff1+1)^0,c
  5094   001558  0E78               	movlw	120
  5095   00155A  6E03               	movwf	(___flge@ff1+2)^0,c
  5096   00155C  0E42               	movlw	66
  5097   00155E  6E04               	movwf	(___flge@ff1+3)^0,c
  5098   001560  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5099   001564  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5100   001568  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5101   00156C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5102   001570  EC9B  F020         	call	___flge	;wreg free
  5103   001574  B0D8               	btfsc	status,0,c
  5104   001576  EFBF  F00A         	goto	u4371
  5105   00157A  EFC1  F00A         	goto	u4370
  5106   00157E                     u4371:
  5107   00157E  EFE1  F00A         	goto	l3999
  5108   001582                     u4370:
  5109   001582  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5110   001586  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5111   00158A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5112   00158E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5113   001592  0E00               	movlw	0
  5114   001594  6E05               	movwf	___flge@ff2^0,c
  5115   001596  0E00               	movlw	0
  5116   001598  6E06               	movwf	(___flge@ff2+1)^0,c
  5117   00159A  0E86               	movlw	134
  5118   00159C  6E07               	movwf	(___flge@ff2+2)^0,c
  5119   00159E  0E42               	movlw	66
  5120   0015A0  6E08               	movwf	(___flge@ff2+3)^0,c
  5121   0015A2  EC9B  F020         	call	___flge	;wreg free
  5122   0015A6  B0D8               	btfsc	status,0,c
  5123   0015A8  EFD8  F00A         	goto	u4381
  5124   0015AC  EFDA  F00A         	goto	u4380
  5125   0015B0                     u4381:
  5126   0015B0  EFE1  F00A         	goto	l3999
  5127   0015B4                     u4380:
  5128   0015B4  0E00               	movlw	0
  5129   0015B6  0100               	movlb	0	; () banked
  5130   0015B8  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5131   0015BA  0E06               	movlw	6
  5132   0015BC  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5133   0015BE  EF1B  F00C         	goto	l4027
  5134   0015C2                     l3999:
  5135   0015C2  0E00               	movlw	0
  5136   0015C4  6E01               	movwf	___flge@ff1^0,c
  5137   0015C6  0E00               	movlw	0
  5138   0015C8  6E02               	movwf	(___flge@ff1+1)^0,c
  5139   0015CA  0E94               	movlw	148
  5140   0015CC  6E03               	movwf	(___flge@ff1+2)^0,c
  5141   0015CE  0E42               	movlw	66
  5142   0015D0  6E04               	movwf	(___flge@ff1+3)^0,c
  5143   0015D2  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5144   0015D6  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5145   0015DA  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5146   0015DE  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5147   0015E2  EC9B  F020         	call	___flge	;wreg free
  5148   0015E6  B0D8               	btfsc	status,0,c
  5149   0015E8  EFF8  F00A         	goto	u4391
  5150   0015EC  EFFA  F00A         	goto	u4390
  5151   0015F0                     u4391:
  5152   0015F0  EF7E  F00B         	goto	l4013
  5153   0015F4                     u4390:
  5154   0015F4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5155   0015F8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5156   0015FC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5157   001600  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5158   001604  0E00               	movlw	0
  5159   001606  6E05               	movwf	___flge@ff2^0,c
  5160   001608  0E00               	movlw	0
  5161   00160A  6E06               	movwf	(___flge@ff2+1)^0,c
  5162   00160C  0EAA               	movlw	170
  5163   00160E  6E07               	movwf	(___flge@ff2+2)^0,c
  5164   001610  0E42               	movlw	66
  5165   001612  6E08               	movwf	(___flge@ff2+3)^0,c
  5166   001614  EC9B  F020         	call	___flge	;wreg free
  5167   001618  B0D8               	btfsc	status,0,c
  5168   00161A  EF11  F00B         	goto	u4401
  5169   00161E  EF13  F00B         	goto	u4400
  5170   001622                     u4401:
  5171   001622  EF7E  F00B         	goto	l4013
  5172   001626                     u4400:
  5173   001626  0E00               	movlw	0
  5174   001628  6E01               	movwf	___flge@ff1^0,c
  5175   00162A  0E00               	movlw	0
  5176   00162C  6E02               	movwf	(___flge@ff1+1)^0,c
  5177   00162E  0EE0               	movlw	224
  5178   001630  6E03               	movwf	(___flge@ff1+2)^0,c
  5179   001632  0E41               	movlw	65
  5180   001634  6E04               	movwf	(___flge@ff1+3)^0,c
  5181   001636  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5182   00163A  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5183   00163E  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5184   001642  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5185   001646  EC9B  F020         	call	___flge	;wreg free
  5186   00164A  B0D8               	btfsc	status,0,c
  5187   00164C  EF2A  F00B         	goto	u4411
  5188   001650  EF2C  F00B         	goto	u4410
  5189   001654                     u4411:
  5190   001654  EF7E  F00B         	goto	l4013
  5191   001658                     u4410:
  5192   001658  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5193   00165C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5194   001660  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5195   001664  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5196   001668  0E00               	movlw	0
  5197   00166A  6E05               	movwf	___flge@ff2^0,c
  5198   00166C  0E00               	movlw	0
  5199   00166E  6E06               	movwf	(___flge@ff2+1)^0,c
  5200   001670  0E04               	movlw	4
  5201   001672  6E07               	movwf	(___flge@ff2+2)^0,c
  5202   001674  0E42               	movlw	66
  5203   001676  6E08               	movwf	(___flge@ff2+3)^0,c
  5204   001678  EC9B  F020         	call	___flge	;wreg free
  5205   00167C  B0D8               	btfsc	status,0,c
  5206   00167E  EF43  F00B         	goto	u4421
  5207   001682  EF45  F00B         	goto	u4420
  5208   001686                     u4421:
  5209   001686  EF7E  F00B         	goto	l4013
  5210   00168A                     u4420:
  5211   00168A  0E00               	movlw	0
  5212   00168C  6E01               	movwf	___flge@ff1^0,c
  5213   00168E  0E00               	movlw	0
  5214   001690  6E02               	movwf	(___flge@ff1+1)^0,c
  5215   001692  0E14               	movlw	20
  5216   001694  6E03               	movwf	(___flge@ff1+2)^0,c
  5217   001696  0E42               	movlw	66
  5218   001698  6E04               	movwf	(___flge@ff1+3)^0,c
  5219   00169A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5220   00169E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5221   0016A2  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5222   0016A6  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5223   0016AA  EC9B  F020         	call	___flge	;wreg free
  5224   0016AE  B0D8               	btfsc	status,0,c
  5225   0016B0  EF5C  F00B         	goto	u4431
  5226   0016B4  EF5E  F00B         	goto	u4430
  5227   0016B8                     u4431:
  5228   0016B8  EF7E  F00B         	goto	l4013
  5229   0016BC                     u4430:
  5230   0016BC  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5231   0016C0  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5232   0016C4  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5233   0016C8  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5234   0016CC  0E00               	movlw	0
  5235   0016CE  6E05               	movwf	___flge@ff2^0,c
  5236   0016D0  0E00               	movlw	0
  5237   0016D2  6E06               	movwf	(___flge@ff2+1)^0,c
  5238   0016D4  0E28               	movlw	40
  5239   0016D6  6E07               	movwf	(___flge@ff2+2)^0,c
  5240   0016D8  0E42               	movlw	66
  5241   0016DA  6E08               	movwf	(___flge@ff2+3)^0,c
  5242   0016DC  EC9B  F020         	call	___flge	;wreg free
  5243   0016E0  B0D8               	btfsc	status,0,c
  5244   0016E2  EF75  F00B         	goto	u4441
  5245   0016E6  EF77  F00B         	goto	u4440
  5246   0016EA                     u4441:
  5247   0016EA  EF7E  F00B         	goto	l4013
  5248   0016EE                     u4440:
  5249   0016EE  0E00               	movlw	0
  5250   0016F0  0100               	movlb	0	; () banked
  5251   0016F2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5252   0016F4  0E07               	movlw	7
  5253   0016F6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5254   0016F8  EF1B  F00C         	goto	l4027
  5255   0016FC                     l4013:
  5256   0016FC  0E00               	movlw	0
  5257   0016FE  6E01               	movwf	___flge@ff1^0,c
  5258   001700  0E00               	movlw	0
  5259   001702  6E02               	movwf	(___flge@ff1+1)^0,c
  5260   001704  0EB0               	movlw	176
  5261   001706  6E03               	movwf	(___flge@ff1+2)^0,c
  5262   001708  0E41               	movlw	65
  5263   00170A  6E04               	movwf	(___flge@ff1+3)^0,c
  5264   00170C  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5265   001710  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5266   001714  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5267   001718  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5268   00171C  EC9B  F020         	call	___flge	;wreg free
  5269   001720  B0D8               	btfsc	status,0,c
  5270   001722  EF95  F00B         	goto	u4451
  5271   001726  EF97  F00B         	goto	u4450
  5272   00172A                     u4451:
  5273   00172A  EF1B  F00C         	goto	l99
  5274   00172E                     u4450:
  5275   00172E  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5276   001732  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5277   001736  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5278   00173A  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5279   00173E  0E00               	movlw	0
  5280   001740  6E05               	movwf	___flge@ff2^0,c
  5281   001742  0E00               	movlw	0
  5282   001744  6E06               	movwf	(___flge@ff2+1)^0,c
  5283   001746  0ED8               	movlw	216
  5284   001748  6E07               	movwf	(___flge@ff2+2)^0,c
  5285   00174A  0E41               	movlw	65
  5286   00174C  6E08               	movwf	(___flge@ff2+3)^0,c
  5287   00174E  EC9B  F020         	call	___flge	;wreg free
  5288   001752  B0D8               	btfsc	status,0,c
  5289   001754  EFAE  F00B         	goto	u4461
  5290   001758  EFB0  F00B         	goto	u4460
  5291   00175C                     u4461:
  5292   00175C  EF1B  F00C         	goto	l99
  5293   001760                     u4460:
  5294   001760  0E00               	movlw	0
  5295   001762  6E01               	movwf	___flge@ff1^0,c
  5296   001764  0E00               	movlw	0
  5297   001766  6E02               	movwf	(___flge@ff1+1)^0,c
  5298   001768  0E40               	movlw	64
  5299   00176A  6E03               	movwf	(___flge@ff1+2)^0,c
  5300   00176C  0E42               	movlw	66
  5301   00176E  6E04               	movwf	(___flge@ff1+3)^0,c
  5302   001770  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5303   001774  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5304   001778  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5305   00177C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5306   001780  EC9B  F020         	call	___flge	;wreg free
  5307   001784  B0D8               	btfsc	status,0,c
  5308   001786  EFC7  F00B         	goto	u4471
  5309   00178A  EFC9  F00B         	goto	u4470
  5310   00178E                     u4471:
  5311   00178E  EF1B  F00C         	goto	l99
  5312   001792                     u4470:
  5313   001792  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5314   001796  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5315   00179A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5316   00179E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5317   0017A2  0E00               	movlw	0
  5318   0017A4  6E05               	movwf	___flge@ff2^0,c
  5319   0017A6  0E00               	movlw	0
  5320   0017A8  6E06               	movwf	(___flge@ff2+1)^0,c
  5321   0017AA  0E54               	movlw	84
  5322   0017AC  6E07               	movwf	(___flge@ff2+2)^0,c
  5323   0017AE  0E42               	movlw	66
  5324   0017B0  6E08               	movwf	(___flge@ff2+3)^0,c
  5325   0017B2  EC9B  F020         	call	___flge	;wreg free
  5326   0017B6  B0D8               	btfsc	status,0,c
  5327   0017B8  EFE0  F00B         	goto	u4481
  5328   0017BC  EFE2  F00B         	goto	u4480
  5329   0017C0                     u4481:
  5330   0017C0  EF1B  F00C         	goto	l99
  5331   0017C4                     u4480:
  5332   0017C4  0E00               	movlw	0
  5333   0017C6  6E01               	movwf	___flge@ff1^0,c
  5334   0017C8  0E00               	movlw	0
  5335   0017CA  6E02               	movwf	(___flge@ff1+1)^0,c
  5336   0017CC  0E34               	movlw	52
  5337   0017CE  6E03               	movwf	(___flge@ff1+2)^0,c
  5338   0017D0  0E42               	movlw	66
  5339   0017D2  6E04               	movwf	(___flge@ff1+3)^0,c
  5340   0017D4  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5341   0017D8  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5342   0017DC  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5343   0017E0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5344   0017E4  EC9B  F020         	call	___flge	;wreg free
  5345   0017E8  B0D8               	btfsc	status,0,c
  5346   0017EA  EFF9  F00B         	goto	u4491
  5347   0017EE  EFFB  F00B         	goto	u4490
  5348   0017F2                     u4491:
  5349   0017F2  EF1B  F00C         	goto	l99
  5350   0017F6                     u4490:
  5351   0017F6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5352   0017FA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5353   0017FE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5354   001802  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5355   001806  0E00               	movlw	0
  5356   001808  6E05               	movwf	___flge@ff2^0,c
  5357   00180A  0E00               	movlw	0
  5358   00180C  6E06               	movwf	(___flge@ff2+1)^0,c
  5359   00180E  0E48               	movlw	72
  5360   001810  6E07               	movwf	(___flge@ff2+2)^0,c
  5361   001812  0E42               	movlw	66
  5362   001814  6E08               	movwf	(___flge@ff2+3)^0,c
  5363   001816  EC9B  F020         	call	___flge	;wreg free
  5364   00181A  B0D8               	btfsc	status,0,c
  5365   00181C  EF12  F00C         	goto	u4501
  5366   001820  EF14  F00C         	goto	u4500
  5367   001824                     u4501:
  5368   001824  EF1B  F00C         	goto	l99
  5369   001828                     u4500:
  5370   001828  0E00               	movlw	0
  5371   00182A  0100               	movlb	0	; () banked
  5372   00182C  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5373   00182E  0E08               	movlw	8
  5374   001830  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5375   001832  EF1B  F00C         	goto	l4027
  5376   001836                     l99:
  5377   001836                     l4027:
  5378                           
  5379                           ;color.c: 222:     return card_color;
  5380   001836  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  5381   00183A  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  5382   00183E  0012               	return		;funcret
  5383   001840                     __end_of_color_cardCheck:
  5384                           	callstack 0
  5385                           
  5386 ;; *************** function _color_read_Red *****************
  5387 ;; Defined at:
  5388 ;;		line 46 in file "color.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  tmp             2    9[COMRAM] unsigned int 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2    4[COMRAM] unsigned int 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;Total ram usage:        7 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; Hardware stack levels required when called: 2
  5409 ;; This function calls:
  5410 ;;		_I2C_2_Master_Read
  5411 ;;		_I2C_2_Master_RepStart
  5412 ;;		_I2C_2_Master_Start
  5413 ;;		_I2C_2_Master_Stop
  5414 ;;		_I2C_2_Master_Write
  5415 ;; This function is called by:
  5416 ;;		_color_cardCheck
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text19
  5421   004680                     __ptext19:
  5422                           	callstack 0
  5423   004680                     _color_read_Red:
  5424                           	callstack 27
  5425   004680                     
  5426                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  5427   004680  EC3E  F025         	call	_I2C_2_Master_Start	;wreg free
  5428                           
  5429                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  5430   004684  0E52               	movlw	82
  5431   004686  EC33  F025         	call	_I2C_2_Master_Write
  5432                           
  5433                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  5434   00468A  0EB6               	movlw	182
  5435   00468C  EC33  F025         	call	_I2C_2_Master_Write
  5436                           
  5437                           ;color.c: 52:  I2C_2_Master_RepStart();
  5438   004690  EC43  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5439                           
  5440                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  5441   004694  0E53               	movlw	83
  5442   004696  EC33  F025         	call	_I2C_2_Master_Write
  5443                           
  5444                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  5445   00469A  0E01               	movlw	1
  5446   00469C  EC24  F024         	call	_I2C_2_Master_Read
  5447   0046A0  6E07               	movwf	??_color_read_Red^0,c
  5448   0046A2  5007               	movf	??_color_read_Red^0,w,c
  5449   0046A4  6E0A               	movwf	color_read_Red@tmp^0,c
  5450   0046A6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5451                           
  5452                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5453   0046A8  0E00               	movlw	0
  5454   0046AA  EC24  F024         	call	_I2C_2_Master_Read
  5455   0046AE  6E07               	movwf	??_color_read_Red^0,c
  5456   0046B0  5007               	movf	??_color_read_Red^0,w,c
  5457   0046B2  6E09               	movwf	(??_color_read_Red+2)^0,c
  5458   0046B4  6A08               	clrf	(??_color_read_Red+1)^0,c
  5459   0046B6  500A               	movf	color_read_Red@tmp^0,w,c
  5460   0046B8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5461   0046BA  6E0A               	movwf	color_read_Red@tmp^0,c
  5462   0046BC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5463   0046BE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5464   0046C0  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5465                           
  5466                           ;color.c: 56:  I2C_2_Master_Stop();
  5467   0046C2  EC39  F025         	call	_I2C_2_Master_Stop	;wreg free
  5468   0046C6                     
  5469                           ;color.c: 57:  return tmp;
  5470   0046C6  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5471   0046CA  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5472   0046CE  0012               	return		;funcret
  5473   0046D0                     __end_of_color_read_Red:
  5474                           	callstack 0
  5475                           
  5476 ;; *************** function _color_read_Green *****************
  5477 ;; Defined at:
  5478 ;;		line 60 in file "color.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  tmp             2    9[COMRAM] unsigned int 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  2    4[COMRAM] unsigned int 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5494 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;Total ram usage:        7 bytes
  5497 ;; Hardware stack levels used: 1
  5498 ;; Hardware stack levels required when called: 2
  5499 ;; This function calls:
  5500 ;;		_I2C_2_Master_Read
  5501 ;;		_I2C_2_Master_RepStart
  5502 ;;		_I2C_2_Master_Start
  5503 ;;		_I2C_2_Master_Stop
  5504 ;;		_I2C_2_Master_Write
  5505 ;; This function is called by:
  5506 ;;		_color_cardCheck
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text20
  5511   0046D0                     __ptext20:
  5512                           	callstack 0
  5513   0046D0                     _color_read_Green:
  5514                           	callstack 27
  5515   0046D0                     
  5516                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  5517   0046D0  EC3E  F025         	call	_I2C_2_Master_Start	;wreg free
  5518                           
  5519                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  5520   0046D4  0E52               	movlw	82
  5521   0046D6  EC33  F025         	call	_I2C_2_Master_Write
  5522                           
  5523                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  5524   0046DA  0EB8               	movlw	184
  5525   0046DC  EC33  F025         	call	_I2C_2_Master_Write
  5526                           
  5527                           ;color.c: 66:  I2C_2_Master_RepStart();
  5528   0046E0  EC43  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5529                           
  5530                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  5531   0046E4  0E53               	movlw	83
  5532   0046E6  EC33  F025         	call	_I2C_2_Master_Write
  5533                           
  5534                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  5535   0046EA  0E01               	movlw	1
  5536   0046EC  EC24  F024         	call	_I2C_2_Master_Read
  5537   0046F0  6E07               	movwf	??_color_read_Green^0,c
  5538   0046F2  5007               	movf	??_color_read_Green^0,w,c
  5539   0046F4  6E0A               	movwf	color_read_Green@tmp^0,c
  5540   0046F6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5541                           
  5542                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5543   0046F8  0E00               	movlw	0
  5544   0046FA  EC24  F024         	call	_I2C_2_Master_Read
  5545   0046FE  6E07               	movwf	??_color_read_Green^0,c
  5546   004700  5007               	movf	??_color_read_Green^0,w,c
  5547   004702  6E09               	movwf	(??_color_read_Green+2)^0,c
  5548   004704  6A08               	clrf	(??_color_read_Green+1)^0,c
  5549   004706  500A               	movf	color_read_Green@tmp^0,w,c
  5550   004708  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5551   00470A  6E0A               	movwf	color_read_Green@tmp^0,c
  5552   00470C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5553   00470E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5554   004710  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5555                           
  5556                           ;color.c: 70:  I2C_2_Master_Stop();
  5557   004712  EC39  F025         	call	_I2C_2_Master_Stop	;wreg free
  5558   004716                     
  5559                           ;color.c: 71:  return tmp;
  5560   004716  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5561   00471A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5562   00471E  0012               	return		;funcret
  5563   004720                     __end_of_color_read_Green:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _color_read_Clear *****************
  5567 ;; Defined at:
  5568 ;;		line 88 in file "color.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  tmp             2    9[COMRAM] unsigned int 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  2    4[COMRAM] unsigned int 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;Total ram usage:        7 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; Hardware stack levels required when called: 2
  5589 ;; This function calls:
  5590 ;;		_I2C_2_Master_Read
  5591 ;;		_I2C_2_Master_RepStart
  5592 ;;		_I2C_2_Master_Start
  5593 ;;		_I2C_2_Master_Stop
  5594 ;;		_I2C_2_Master_Write
  5595 ;; This function is called by:
  5596 ;;		_color_cardCheck
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text21
  5601   004720                     __ptext21:
  5602                           	callstack 0
  5603   004720                     _color_read_Clear:
  5604                           	callstack 27
  5605   004720                     
  5606                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  5607   004720  EC3E  F025         	call	_I2C_2_Master_Start	;wreg free
  5608                           
  5609                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  5610   004724  0E52               	movlw	82
  5611   004726  EC33  F025         	call	_I2C_2_Master_Write
  5612                           
  5613                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  5614   00472A  0EB4               	movlw	180
  5615   00472C  EC33  F025         	call	_I2C_2_Master_Write
  5616                           
  5617                           ;color.c: 96:  I2C_2_Master_RepStart();
  5618   004730  EC43  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5619                           
  5620                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  5621   004734  0E53               	movlw	83
  5622   004736  EC33  F025         	call	_I2C_2_Master_Write
  5623                           
  5624                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  5625   00473A  0E01               	movlw	1
  5626   00473C  EC24  F024         	call	_I2C_2_Master_Read
  5627   004740  6E07               	movwf	??_color_read_Clear^0,c
  5628   004742  5007               	movf	??_color_read_Clear^0,w,c
  5629   004744  6E0A               	movwf	color_read_Clear@tmp^0,c
  5630   004746  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  5631                           
  5632                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5633   004748  0E00               	movlw	0
  5634   00474A  EC24  F024         	call	_I2C_2_Master_Read
  5635   00474E  6E07               	movwf	??_color_read_Clear^0,c
  5636   004750  5007               	movf	??_color_read_Clear^0,w,c
  5637   004752  6E09               	movwf	(??_color_read_Clear+2)^0,c
  5638   004754  6A08               	clrf	(??_color_read_Clear+1)^0,c
  5639   004756  500A               	movf	color_read_Clear@tmp^0,w,c
  5640   004758  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  5641   00475A  6E0A               	movwf	color_read_Clear@tmp^0,c
  5642   00475C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  5643   00475E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  5644   004760  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  5645                           
  5646                           ;color.c: 100:  I2C_2_Master_Stop();
  5647   004762  EC39  F025         	call	_I2C_2_Master_Stop	;wreg free
  5648   004766                     
  5649                           ;color.c: 101:  return tmp;
  5650   004766  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  5651   00476A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5652   00476E  0012               	return		;funcret
  5653   004770                     __end_of_color_read_Clear:
  5654                           	callstack 0
  5655                           
  5656 ;; *************** function _color_read_Blue *****************
  5657 ;; Defined at:
  5658 ;;		line 74 in file "color.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  tmp             2    9[COMRAM] unsigned int 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  2    4[COMRAM] unsigned int 
  5665 ;; Registers used:
  5666 ;;		wreg, status,2, status,0, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5674 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5675 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5676 ;;Total ram usage:        7 bytes
  5677 ;; Hardware stack levels used: 1
  5678 ;; Hardware stack levels required when called: 2
  5679 ;; This function calls:
  5680 ;;		_I2C_2_Master_Read
  5681 ;;		_I2C_2_Master_RepStart
  5682 ;;		_I2C_2_Master_Start
  5683 ;;		_I2C_2_Master_Stop
  5684 ;;		_I2C_2_Master_Write
  5685 ;; This function is called by:
  5686 ;;		_color_cardCheck
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text22
  5691   004770                     __ptext22:
  5692                           	callstack 0
  5693   004770                     _color_read_Blue:
  5694                           	callstack 27
  5695   004770                     
  5696                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  5697   004770  EC3E  F025         	call	_I2C_2_Master_Start	;wreg free
  5698                           
  5699                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  5700   004774  0E52               	movlw	82
  5701   004776  EC33  F025         	call	_I2C_2_Master_Write
  5702                           
  5703                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  5704   00477A  0EBA               	movlw	186
  5705   00477C  EC33  F025         	call	_I2C_2_Master_Write
  5706                           
  5707                           ;color.c: 80:  I2C_2_Master_RepStart();
  5708   004780  EC43  F025         	call	_I2C_2_Master_RepStart	;wreg free
  5709                           
  5710                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  5711   004784  0E53               	movlw	83
  5712   004786  EC33  F025         	call	_I2C_2_Master_Write
  5713                           
  5714                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  5715   00478A  0E01               	movlw	1
  5716   00478C  EC24  F024         	call	_I2C_2_Master_Read
  5717   004790  6E07               	movwf	??_color_read_Blue^0,c
  5718   004792  5007               	movf	??_color_read_Blue^0,w,c
  5719   004794  6E0A               	movwf	color_read_Blue@tmp^0,c
  5720   004796  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5721                           
  5722                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5723   004798  0E00               	movlw	0
  5724   00479A  EC24  F024         	call	_I2C_2_Master_Read
  5725   00479E  6E07               	movwf	??_color_read_Blue^0,c
  5726   0047A0  5007               	movf	??_color_read_Blue^0,w,c
  5727   0047A2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5728   0047A4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5729   0047A6  500A               	movf	color_read_Blue@tmp^0,w,c
  5730   0047A8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5731   0047AA  6E0A               	movwf	color_read_Blue@tmp^0,c
  5732   0047AC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5733   0047AE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5734   0047B0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5735                           
  5736                           ;color.c: 84:  I2C_2_Master_Stop();
  5737   0047B2  EC39  F025         	call	_I2C_2_Master_Stop	;wreg free
  5738   0047B6                     
  5739                           ;color.c: 85:  return tmp;
  5740   0047B6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5741   0047BA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5742   0047BE  0012               	return		;funcret
  5743   0047C0                     __end_of_color_read_Blue:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _I2C_2_Master_Write *****************
  5747 ;; Defined at:
  5748 ;;		line 45 in file "i2c.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  data_byte       1    wreg     unsigned char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  data_byte       1    1[COMRAM] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;Total ram usage:        1 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 1
  5769 ;; This function calls:
  5770 ;;		_I2C_2_Master_Idle
  5771 ;; This function is called by:
  5772 ;;		_color_writetoaddr
  5773 ;;		_color_read_Red
  5774 ;;		_color_read_Green
  5775 ;;		_color_read_Blue
  5776 ;;		_color_read_Clear
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text23
  5781   004A66                     __ptext23:
  5782                           	callstack 0
  5783   004A66                     _I2C_2_Master_Write:
  5784                           	callstack 27
  5785                           
  5786                           ;incstack = 0
  5787                           ;I2C_2_Master_Write@data_byte stored from wreg
  5788   004A66  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5789   004A68                     
  5790                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5791   004A68  ECE1  F024         	call	_I2C_2_Master_Idle	;wreg free
  5792   004A6C                     
  5793                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5794   004A6C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5795   004A70  0012               	return		;funcret
  5796   004A72                     __end_of_I2C_2_Master_Write:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _I2C_2_Master_Stop *****************
  5800 ;; Defined at:
  5801 ;;		line 39 in file "i2c.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 1
  5822 ;; This function calls:
  5823 ;;		_I2C_2_Master_Idle
  5824 ;; This function is called by:
  5825 ;;		_color_writetoaddr
  5826 ;;		_color_read_Red
  5827 ;;		_color_read_Green
  5828 ;;		_color_read_Blue
  5829 ;;		_color_read_Clear
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text24
  5834   004A72                     __ptext24:
  5835                           	callstack 0
  5836   004A72                     _I2C_2_Master_Stop:
  5837                           	callstack 27
  5838   004A72                     
  5839                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5840   004A72  ECE1  F024         	call	_I2C_2_Master_Idle	;wreg free
  5841   004A76                     
  5842                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5843   004A76  010E               	movlb	14	; () banked
  5844   004A78  85DA               	bsf	218,2,b	;volatile
  5845   004A7A                     
  5846                           ; BSR set to: 14
  5847   004A7A  0012               	return		;funcret
  5848   004A7C                     __end_of_I2C_2_Master_Stop:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _I2C_2_Master_Start *****************
  5852 ;; Defined at:
  5853 ;;		line 27 in file "i2c.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;		None
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;		None
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;Total ram usage:        0 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; Hardware stack levels required when called: 1
  5874 ;; This function calls:
  5875 ;;		_I2C_2_Master_Idle
  5876 ;; This function is called by:
  5877 ;;		_color_writetoaddr
  5878 ;;		_color_read_Red
  5879 ;;		_color_read_Green
  5880 ;;		_color_read_Blue
  5881 ;;		_color_read_Clear
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text25
  5886   004A7C                     __ptext25:
  5887                           	callstack 0
  5888   004A7C                     _I2C_2_Master_Start:
  5889                           	callstack 27
  5890   004A7C                     
  5891                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5892   004A7C  ECE1  F024         	call	_I2C_2_Master_Idle	;wreg free
  5893   004A80                     
  5894                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5895   004A80  010E               	movlb	14	; () banked
  5896   004A82  81DA               	bsf	218,0,b	;volatile
  5897   004A84                     
  5898                           ; BSR set to: 14
  5899   004A84  0012               	return		;funcret
  5900   004A86                     __end_of_I2C_2_Master_Start:
  5901                           	callstack 0
  5902                           
  5903 ;; *************** function _I2C_2_Master_RepStart *****************
  5904 ;; Defined at:
  5905 ;;		line 33 in file "i2c.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used: 1
  5925 ;; Hardware stack levels required when called: 1
  5926 ;; This function calls:
  5927 ;;		_I2C_2_Master_Idle
  5928 ;; This function is called by:
  5929 ;;		_color_read_Red
  5930 ;;		_color_read_Green
  5931 ;;		_color_read_Blue
  5932 ;;		_color_read_Clear
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text26
  5937   004A86                     __ptext26:
  5938                           	callstack 0
  5939   004A86                     _I2C_2_Master_RepStart:
  5940                           	callstack 27
  5941   004A86                     
  5942                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5943   004A86  ECE1  F024         	call	_I2C_2_Master_Idle	;wreg free
  5944   004A8A                     
  5945                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5946   004A8A  010E               	movlb	14	; () banked
  5947   004A8C  83DA               	bsf	218,1,b	;volatile
  5948   004A8E                     
  5949                           ; BSR set to: 14
  5950   004A8E  0012               	return		;funcret
  5951   004A90                     __end_of_I2C_2_Master_RepStart:
  5952                           	callstack 0
  5953                           
  5954 ;; *************** function _I2C_2_Master_Read *****************
  5955 ;; Defined at:
  5956 ;;		line 51 in file "i2c.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  ack             1    wreg     unsigned char 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  ack             1    2[COMRAM] unsigned char 
  5961 ;;  tmp             1    3[COMRAM] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      unsigned char 
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;Total ram usage:        3 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; Hardware stack levels required when called: 1
  5978 ;; This function calls:
  5979 ;;		_I2C_2_Master_Idle
  5980 ;; This function is called by:
  5981 ;;		_color_read_Red
  5982 ;;		_color_read_Green
  5983 ;;		_color_read_Blue
  5984 ;;		_color_read_Clear
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text27
  5989   004848                     __ptext27:
  5990                           	callstack 0
  5991   004848                     _I2C_2_Master_Read:
  5992                           	callstack 27
  5993                           
  5994                           ; BSR set to: 14
  5995                           ;incstack = 0
  5996                           ;I2C_2_Master_Read@ack stored from wreg
  5997   004848  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5998   00484A                     
  5999                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6000   00484A  ECE1  F024         	call	_I2C_2_Master_Idle	;wreg free
  6001   00484E                     
  6002                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6003   00484E  010E               	movlb	14	; () banked
  6004   004850  87DA               	bsf	218,3,b	;volatile
  6005                           
  6006                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6007   004852  ECE1  F024         	call	_I2C_2_Master_Idle	;wreg free
  6008   004856                     
  6009                           ;i2c.c: 57:   tmp = SSP2BUF;
  6010   004856  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6011                           
  6012                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6013   00485A  ECE1  F024         	call	_I2C_2_Master_Idle	;wreg free
  6014   00485E                     
  6015                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6016   00485E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6017   004860  B4D8               	btfsc	status,2,c
  6018   004862  EF35  F024         	goto	u3701
  6019   004866  EF39  F024         	goto	u3700
  6020   00486A                     u3701:
  6021   00486A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6022   00486C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6023   00486E  EF3A  F024         	goto	u3718
  6024   004872                     u3700:
  6025   004872  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6026   004874                     u3718:
  6027   004874  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6028   004876  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6029   004878  010E               	movlb	14	; () banked
  6030   00487A  51DA               	movf	218,w,b	;volatile
  6031   00487C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6032   00487E  0BDF               	andlw	-33
  6033   004880  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6034   004882  6FDA               	movwf	218,b	;volatile
  6035   004884                     
  6036                           ; BSR set to: 14
  6037                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6038   004884  89DA               	bsf	218,4,b	;volatile
  6039   004886                     
  6040                           ; BSR set to: 14
  6041                           ;i2c.c: 61:   return tmp;
  6042   004886  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6043   004888                     
  6044                           ; BSR set to: 14
  6045   004888  0012               	return		;funcret
  6046   00488A                     __end_of_I2C_2_Master_Read:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function _I2C_2_Master_Idle *****************
  6050 ;; Defined at:
  6051 ;;		line 22 in file "i2c.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6069 ;;Total ram usage:        1 bytes
  6070 ;; Hardware stack levels used: 1
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_I2C_2_Master_Start
  6075 ;;		_I2C_2_Master_RepStart
  6076 ;;		_I2C_2_Master_Stop
  6077 ;;		_I2C_2_Master_Write
  6078 ;;		_I2C_2_Master_Read
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text28
  6083   0049C2                     __ptext28:
  6084                           	callstack 0
  6085   0049C2                     _I2C_2_Master_Idle:
  6086                           	callstack 27
  6087   0049C2                     l417:
  6088   0049C2  010E               	movlb	14	; () banked
  6089   0049C4  B5D8               	btfsc	216,2,b	;volatile
  6090   0049C6  EFE7  F024         	goto	u2961
  6091   0049CA  EFE9  F024         	goto	u2960
  6092   0049CE                     u2961:
  6093   0049CE  EFE1  F024         	goto	l417
  6094   0049D2                     u2960:
  6095   0049D2                     
  6096                           ; BSR set to: 14
  6097   0049D2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6098   0049D6  0E1F               	movlw	31
  6099   0049D8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6100   0049DA  A4D8               	btfss	status,2,c
  6101   0049DC  EFF2  F024         	goto	u2971
  6102   0049E0  EFF4  F024         	goto	u2970
  6103   0049E4                     u2971:
  6104   0049E4  EFE1  F024         	goto	l417
  6105   0049E8                     u2970:
  6106   0049E8                     
  6107                           ; BSR set to: 14
  6108   0049E8  0012               	return		;funcret
  6109   0049EA                     __end_of_I2C_2_Master_Idle:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function _RGB_to_HSV *****************
  6113 ;; Defined at:
  6114 ;;		line 125 in file "color.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  R               4   10[BANK0 ] float 
  6117 ;;  G               4   14[BANK0 ] float 
  6118 ;;  B               4   18[BANK0 ] float 
  6119 ;;  C               4   22[BANK0 ] float 
  6120 ;;  H               1   26[BANK0 ] PTR float 
  6121 ;;		 -> color_cardCheck@H(4), 
  6122 ;;  S               1   27[BANK0 ] PTR float 
  6123 ;;		 -> color_cardCheck@S(4), 
  6124 ;;  V               1   28[BANK0 ] PTR float 
  6125 ;;		 -> color_cardCheck@V(4), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  b               4   93[BANK0 ] float 
  6128 ;;  g               4   89[BANK0 ] float 
  6129 ;;  r               4   85[BANK0 ] float 
  6130 ;;  maxRGB          4   81[BANK0 ] float 
  6131 ;;  deltaRGB        4   77[BANK0 ] float 
  6132 ;;  H_temp          4   73[BANK0 ] float 
  6133 ;;  minRGB          4   57[BANK0 ] float 
  6134 ;;  c_norm          4   29[BANK0 ] float 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6144 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;Total ram usage:       87 bytes
  6149 ;; Hardware stack levels used: 1
  6150 ;; Hardware stack levels required when called: 3
  6151 ;; This function calls:
  6152 ;;		___fladd
  6153 ;;		___fldiv
  6154 ;;		___fleq
  6155 ;;		___flge
  6156 ;;		___flmul
  6157 ;;		___flsub
  6158 ;;		_custom_floatmodulo
  6159 ;; This function is called by:
  6160 ;;		_color_cardCheck
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text29
  6165   001840                     __ptext29:
  6166                           	callstack 0
  6167   001840                     _RGB_to_HSV:
  6168                           	callstack 26
  6169   001840                     
  6170                           ;color.c: 128:     float r = R/65535.0;
  6171   001840  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  6172   001844  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  6173   001848  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  6174   00184C  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  6175   001850  0E00               	movlw	0
  6176   001852  6E26               	movwf	___fldiv@a^0,c
  6177   001854  0EFF               	movlw	255
  6178   001856  6E27               	movwf	(___fldiv@a+1)^0,c
  6179   001858  0E7F               	movlw	127
  6180   00185A  6E28               	movwf	(___fldiv@a+2)^0,c
  6181   00185C  0E47               	movlw	71
  6182   00185E  6E29               	movwf	(___fldiv@a+3)^0,c
  6183   001860  EC6C  F017         	call	___fldiv	;wreg free
  6184   001864  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  6185   001868  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  6186   00186C  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  6187   001870  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  6188                           
  6189                           ;color.c: 129:     float g = G/65535.0;
  6190   001874  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  6191   001878  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  6192   00187C  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  6193   001880  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  6194   001884  0E00               	movlw	0
  6195   001886  6E26               	movwf	___fldiv@a^0,c
  6196   001888  0EFF               	movlw	255
  6197   00188A  6E27               	movwf	(___fldiv@a+1)^0,c
  6198   00188C  0E7F               	movlw	127
  6199   00188E  6E28               	movwf	(___fldiv@a+2)^0,c
  6200   001890  0E47               	movlw	71
  6201   001892  6E29               	movwf	(___fldiv@a+3)^0,c
  6202   001894  EC6C  F017         	call	___fldiv	;wreg free
  6203   001898  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  6204   00189C  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  6205   0018A0  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  6206   0018A4  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  6207                           
  6208                           ;color.c: 130:     float b = B/65535.0;
  6209   0018A8  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  6210   0018AC  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  6211   0018B0  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  6212   0018B4  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  6213   0018B8  0E00               	movlw	0
  6214   0018BA  6E26               	movwf	___fldiv@a^0,c
  6215   0018BC  0EFF               	movlw	255
  6216   0018BE  6E27               	movwf	(___fldiv@a+1)^0,c
  6217   0018C0  0E7F               	movlw	127
  6218   0018C2  6E28               	movwf	(___fldiv@a+2)^0,c
  6219   0018C4  0E47               	movlw	71
  6220   0018C6  6E29               	movwf	(___fldiv@a+3)^0,c
  6221   0018C8  EC6C  F017         	call	___fldiv	;wreg free
  6222   0018CC  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  6223   0018D0  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  6224   0018D4  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  6225   0018D8  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  6226                           
  6227                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  6228   0018DC  0E00               	movlw	0
  6229   0018DE  6E26               	movwf	___fldiv@a^0,c
  6230   0018E0  0EFF               	movlw	255
  6231   0018E2  6E27               	movwf	(___fldiv@a+1)^0,c
  6232   0018E4  0E7F               	movlw	127
  6233   0018E6  6E28               	movwf	(___fldiv@a+2)^0,c
  6234   0018E8  0E47               	movlw	71
  6235   0018EA  6E29               	movwf	(___fldiv@a+3)^0,c
  6236   0018EC  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  6237   0018F0  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  6238   0018F4  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  6239   0018F8  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  6240   0018FC  EC6C  F017         	call	___fldiv	;wreg free
  6241   001900  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2708
  6242   001904  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2708+1
  6243   001908  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2708+2
  6244   00190C  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2708+3
  6245                           
  6246                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  6247   001910  0E00               	movlw	0
  6248   001912  6E22               	movwf	___fldiv@b^0,c
  6249   001914  0E00               	movlw	0
  6250   001916  6E23               	movwf	(___fldiv@b+1)^0,c
  6251   001918  0E80               	movlw	128
  6252   00191A  6E24               	movwf	(___fldiv@b+2)^0,c
  6253   00191C  0E3F               	movlw	63
  6254   00191E  6E25               	movwf	(___fldiv@b+3)^0,c
  6255   001920  C081  F026         	movff	_RGB_to_HSV$2708,___fldiv@a
  6256   001924  C082  F027         	movff	_RGB_to_HSV$2708+1,___fldiv@a+1
  6257   001928  C083  F028         	movff	_RGB_to_HSV$2708+2,___fldiv@a+2
  6258   00192C  C084  F029         	movff	_RGB_to_HSV$2708+3,___fldiv@a+3
  6259   001930  EC6C  F017         	call	___fldiv	;wreg free
  6260   001934  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  6261   001938  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  6262   00193C  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  6263   001940  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  6264                           
  6265                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  6266   001944  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  6267   001948  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6268   00194C  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6269   001950  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6270   001954  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  6271   001958  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6272   00195C  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6273   001960  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6274   001964  EC9B  F020         	call	___flge	;wreg free
  6275   001968  A0D8               	btfss	status,0,c
  6276   00196A  EFB9  F00C         	goto	u3831
  6277   00196E  EFBB  F00C         	goto	u3830
  6278   001972                     u3831:
  6279   001972  EFF0  F00C         	goto	l3759
  6280   001976                     u3830:
  6281   001976  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  6282   00197A  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6283   00197E  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6284   001982  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6285   001986  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  6286   00198A  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6287   00198E  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6288   001992  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6289   001996  EC9B  F020         	call	___flge	;wreg free
  6290   00199A  A0D8               	btfss	status,0,c
  6291   00199C  EFD2  F00C         	goto	u3841
  6292   0019A0  EFD4  F00C         	goto	u3840
  6293   0019A4                     u3841:
  6294   0019A4  EFDE  F00C         	goto	l58
  6295   0019A8                     u3840:
  6296   0019A8  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  6297   0019AC  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  6298   0019B0  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  6299   0019B4  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  6300   0019B8  EFE6  F00C         	goto	l60
  6301   0019BC                     l58:
  6302   0019BC  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  6303   0019C0  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  6304   0019C4  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  6305   0019C8  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  6306   0019CC                     l60:
  6307   0019CC  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  6308   0019D0  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  6309   0019D4  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  6310   0019D8  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  6311   0019DC  EF23  F00D         	goto	l3763
  6312   0019E0                     l3759:
  6313   0019E0  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  6314   0019E4  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6315   0019E8  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6316   0019EC  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6317   0019F0  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  6318   0019F4  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6319   0019F8  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6320   0019FC  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6321   001A00  EC9B  F020         	call	___flge	;wreg free
  6322   001A04  A0D8               	btfss	status,0,c
  6323   001A06  EF07  F00D         	goto	u3851
  6324   001A0A  EF09  F00D         	goto	u3850
  6325   001A0E                     u3851:
  6326   001A0E  EF13  F00D         	goto	l62
  6327   001A12                     u3850:
  6328   001A12  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  6329   001A16  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  6330   001A1A  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  6331   001A1E  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  6332   001A22  EF1B  F00D         	goto	l64
  6333   001A26                     l62:
  6334   001A26  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  6335   001A2A  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  6336   001A2E  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  6337   001A32  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  6338   001A36                     l64:
  6339   001A36  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  6340   001A3A  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  6341   001A3E  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  6342   001A42  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  6343   001A46                     l3763:
  6344                           
  6345                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  6346   001A46  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  6347   001A4A  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6348   001A4E  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6349   001A52  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6350   001A56  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  6351   001A5A  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6352   001A5E  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6353   001A62  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6354   001A66  EC9B  F020         	call	___flge	;wreg free
  6355   001A6A  A0D8               	btfss	status,0,c
  6356   001A6C  EF3A  F00D         	goto	u3861
  6357   001A70  EF3C  F00D         	goto	u3860
  6358   001A74                     u3861:
  6359   001A74  EF71  F00D         	goto	l3769
  6360   001A78                     u3860:
  6361   001A78  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  6362   001A7C  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6363   001A80  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6364   001A84  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6365   001A88  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  6366   001A8C  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6367   001A90  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6368   001A94  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6369   001A98  EC9B  F020         	call	___flge	;wreg free
  6370   001A9C  A0D8               	btfss	status,0,c
  6371   001A9E  EF53  F00D         	goto	u3871
  6372   001AA2  EF55  F00D         	goto	u3870
  6373   001AA6                     u3871:
  6374   001AA6  EF5F  F00D         	goto	l70
  6375   001AAA                     u3870:
  6376   001AAA  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  6377   001AAE  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  6378   001AB2  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  6379   001AB6  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  6380   001ABA  EF67  F00D         	goto	l72
  6381   001ABE                     l70:
  6382   001ABE  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  6383   001AC2  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  6384   001AC6  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  6385   001ACA  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  6386   001ACE                     l72:
  6387   001ACE  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  6388   001AD2  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  6389   001AD6  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  6390   001ADA  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  6391   001ADE  EFA4  F00D         	goto	l3773
  6392   001AE2                     l3769:
  6393   001AE2  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  6394   001AE6  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6395   001AEA  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6396   001AEE  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6397   001AF2  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  6398   001AF6  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6399   001AFA  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6400   001AFE  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6401   001B02  EC9B  F020         	call	___flge	;wreg free
  6402   001B06  A0D8               	btfss	status,0,c
  6403   001B08  EF88  F00D         	goto	u3881
  6404   001B0C  EF8A  F00D         	goto	u3880
  6405   001B10                     u3881:
  6406   001B10  EF94  F00D         	goto	l74
  6407   001B14                     u3880:
  6408   001B14  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  6409   001B18  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  6410   001B1C  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  6411   001B20  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  6412   001B24  EF9C  F00D         	goto	l76
  6413   001B28                     l74:
  6414   001B28  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  6415   001B2C  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  6416   001B30  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  6417   001B34  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  6418   001B38                     l76:
  6419   001B38  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  6420   001B3C  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  6421   001B40  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  6422   001B44  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  6423   001B48                     l3773:
  6424                           
  6425                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  6426   001B48  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  6427   001B4C  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  6428   001B50  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  6429   001B54  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  6430   001B58  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  6431   001B5C  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  6432   001B60  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  6433   001B64  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  6434   001B68  ECE0  F023         	call	___flsub	;wreg free
  6435   001B6C  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  6436   001B70  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  6437   001B74  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  6438   001B78  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  6439                           
  6440                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  6441   001B7C  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  6442   001B80  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  6443   001B84  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  6444   001B88  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  6445   001B8C  0E00               	movlw	0
  6446   001B8E  6E05               	movwf	___fleq@ff2^0,c
  6447   001B90  0E00               	movlw	0
  6448   001B92  6E06               	movwf	(___fleq@ff2+1)^0,c
  6449   001B94  0E00               	movlw	0
  6450   001B96  6E07               	movwf	(___fleq@ff2+2)^0,c
  6451   001B98  0E00               	movlw	0
  6452   001B9A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6453   001B9C  EC35  F022         	call	___fleq	;wreg free
  6454   001BA0  A0D8               	btfss	status,0,c
  6455   001BA2  EFD5  F00D         	goto	u3891
  6456   001BA6  EFD7  F00D         	goto	u3890
  6457   001BAA                     u3891:
  6458   001BAA  EFE2  F00D         	goto	l3777
  6459   001BAE                     u3890:
  6460   001BAE  0E00               	movlw	0
  6461   001BB0  0100               	movlb	0	; () banked
  6462   001BB2  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  6463   001BB4  0E00               	movlw	0
  6464   001BB6  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  6465   001BB8  0E00               	movlw	0
  6466   001BBA  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  6467   001BBC  0E00               	movlw	0
  6468   001BBE  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  6469   001BC0  EF43  F00F         	goto	l3797
  6470   001BC4                     l3777:
  6471   001BC4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6472   001BC8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6473   001BCC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6474   001BD0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6475   001BD4  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  6476   001BD8  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  6477   001BDC  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  6478   001BE0  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  6479   001BE4  EC35  F022         	call	___fleq	;wreg free
  6480   001BE8  A0D8               	btfss	status,0,c
  6481   001BEA  EFF9  F00D         	goto	u3901
  6482   001BEE  EFFB  F00D         	goto	u3900
  6483   001BF2                     u3901:
  6484   001BF2  EF5D  F00E         	goto	l3785
  6485   001BF6                     u3900:
  6486   001BF6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6487   001BFA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6488   001BFE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6489   001C02  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6490   001C06  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  6491   001C0A  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  6492   001C0E  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  6493   001C12  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  6494   001C16  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  6495   001C1A  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  6496   001C1E  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  6497   001C22  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  6498   001C26  ECE0  F023         	call	___flsub	;wreg free
  6499   001C2A  C01A  F022         	movff	?___flsub,___fldiv@b
  6500   001C2E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6501   001C32  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6502   001C36  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6503   001C3A  EC6C  F017         	call	___fldiv	;wreg free
  6504   001C3E  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2709
  6505   001C42  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2709+1
  6506   001C46  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2709+2
  6507   001C4A  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2709+3
  6508   001C4E  0E00               	movlw	0
  6509   001C50  6E58               	movwf	custom_floatmodulo@y^0,c
  6510   001C52  0E00               	movlw	0
  6511   001C54  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  6512   001C56  0EC0               	movlw	192
  6513   001C58  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  6514   001C5A  0E40               	movlw	64
  6515   001C5C  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  6516   001C5E  C085  F054         	movff	_RGB_to_HSV$2709,custom_floatmodulo@x
  6517   001C62  C086  F055         	movff	_RGB_to_HSV$2709+1,custom_floatmodulo@x+1
  6518   001C66  C087  F056         	movff	_RGB_to_HSV$2709+2,custom_floatmodulo@x+2
  6519   001C6A  C088  F057         	movff	_RGB_to_HSV$2709+3,custom_floatmodulo@x+3
  6520   001C6E  EC8C  F01F         	call	_custom_floatmodulo	;wreg free
  6521   001C72  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2710
  6522   001C76  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2710+1
  6523   001C7A  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2710+2
  6524   001C7E  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2710+3
  6525   001C82  C089  F03B         	movff	_RGB_to_HSV$2710,___flmul@b
  6526   001C86  C08A  F03C         	movff	_RGB_to_HSV$2710+1,___flmul@b+1
  6527   001C8A  C08B  F03D         	movff	_RGB_to_HSV$2710+2,___flmul@b+2
  6528   001C8E  C08C  F03E         	movff	_RGB_to_HSV$2710+3,___flmul@b+3
  6529   001C92  0E00               	movlw	0
  6530   001C94  6E3F               	movwf	___flmul@a^0,c
  6531   001C96  0E00               	movlw	0
  6532   001C98  6E40               	movwf	(___flmul@a+1)^0,c
  6533   001C9A  0E70               	movlw	112
  6534   001C9C  6E41               	movwf	(___flmul@a+2)^0,c
  6535   001C9E  0E42               	movlw	66
  6536   001CA0  6E42               	movwf	(___flmul@a+3)^0,c
  6537   001CA2  EC57  F015         	call	___flmul	;wreg free
  6538   001CA6  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6539   001CAA  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6540   001CAE  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6541   001CB2  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6542   001CB6  EF43  F00F         	goto	l3797
  6543   001CBA                     l3785:
  6544   001CBA  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6545   001CBE  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6546   001CC2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6547   001CC6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6548   001CCA  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  6549   001CCE  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  6550   001CD2  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  6551   001CD6  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  6552   001CDA  EC35  F022         	call	___fleq	;wreg free
  6553   001CDE  A0D8               	btfss	status,0,c
  6554   001CE0  EF74  F00E         	goto	u3911
  6555   001CE4  EF76  F00E         	goto	u3910
  6556   001CE8                     u3911:
  6557   001CE8  EFD0  F00E         	goto	l3791
  6558   001CEC                     u3910:
  6559   001CEC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6560   001CF0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6561   001CF4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6562   001CF8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6563   001CFC  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  6564   001D00  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  6565   001D04  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  6566   001D08  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  6567   001D0C  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  6568   001D10  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  6569   001D14  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  6570   001D18  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  6571   001D1C  ECE0  F023         	call	___flsub	;wreg free
  6572   001D20  C01A  F022         	movff	?___flsub,___fldiv@b
  6573   001D24  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6574   001D28  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6575   001D2C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6576   001D30  EC6C  F017         	call	___fldiv	;wreg free
  6577   001D34  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2711
  6578   001D38  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2711+1
  6579   001D3C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2711+2
  6580   001D40  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2711+3
  6581   001D44  0E00               	movlw	0
  6582   001D46  6E05               	movwf	___fladd@a^0,c
  6583   001D48  0E00               	movlw	0
  6584   001D4A  6E06               	movwf	(___fladd@a+1)^0,c
  6585   001D4C  0E00               	movlw	0
  6586   001D4E  6E07               	movwf	(___fladd@a+2)^0,c
  6587   001D50  0E40               	movlw	64
  6588   001D52  6E08               	movwf	(___fladd@a+3)^0,c
  6589   001D54  C0A5  F001         	movff	_RGB_to_HSV$2711,___fladd@b
  6590   001D58  C0A6  F002         	movff	_RGB_to_HSV$2711+1,___fladd@b+1
  6591   001D5C  C0A7  F003         	movff	_RGB_to_HSV$2711+2,___fladd@b+2
  6592   001D60  C0A8  F004         	movff	_RGB_to_HSV$2711+3,___fladd@b+3
  6593   001D64  ECF7  F012         	call	___fladd	;wreg free
  6594   001D68  C001  F03B         	movff	?___fladd,___flmul@b
  6595   001D6C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  6596   001D70  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  6597   001D74  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  6598   001D78  0E00               	movlw	0
  6599   001D7A  6E3F               	movwf	___flmul@a^0,c
  6600   001D7C  0E00               	movlw	0
  6601   001D7E  6E40               	movwf	(___flmul@a+1)^0,c
  6602   001D80  0E70               	movlw	112
  6603   001D82  6E41               	movwf	(___flmul@a+2)^0,c
  6604   001D84  0E42               	movlw	66
  6605   001D86  6E42               	movwf	(___flmul@a+3)^0,c
  6606   001D88  EC57  F015         	call	___flmul	;wreg free
  6607   001D8C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6608   001D90  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6609   001D94  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6610   001D98  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6611   001D9C  EF43  F00F         	goto	l3797
  6612   001DA0                     l3791:
  6613   001DA0  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6614   001DA4  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6615   001DA8  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6616   001DAC  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6617   001DB0  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  6618   001DB4  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  6619   001DB8  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  6620   001DBC  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  6621   001DC0  EC35  F022         	call	___fleq	;wreg free
  6622   001DC4  A0D8               	btfss	status,0,c
  6623   001DC6  EFE7  F00E         	goto	u3921
  6624   001DCA  EFE9  F00E         	goto	u3920
  6625   001DCE                     u3921:
  6626   001DCE  EF43  F00F         	goto	l80
  6627   001DD2                     u3920:
  6628   001DD2  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6629   001DD6  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6630   001DDA  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6631   001DDE  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6632   001DE2  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  6633   001DE6  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  6634   001DEA  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  6635   001DEE  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  6636   001DF2  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  6637   001DF6  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  6638   001DFA  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  6639   001DFE  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  6640   001E02  ECE0  F023         	call	___flsub	;wreg free
  6641   001E06  C01A  F022         	movff	?___flsub,___fldiv@b
  6642   001E0A  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6643   001E0E  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6644   001E12  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6645   001E16  EC6C  F017         	call	___fldiv	;wreg free
  6646   001E1A  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2711
  6647   001E1E  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2711+1
  6648   001E22  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2711+2
  6649   001E26  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2711+3
  6650   001E2A  0E00               	movlw	0
  6651   001E2C  6E05               	movwf	___fladd@a^0,c
  6652   001E2E  0E00               	movlw	0
  6653   001E30  6E06               	movwf	(___fladd@a+1)^0,c
  6654   001E32  0E80               	movlw	128
  6655   001E34  6E07               	movwf	(___fladd@a+2)^0,c
  6656   001E36  0E40               	movlw	64
  6657   001E38  6E08               	movwf	(___fladd@a+3)^0,c
  6658   001E3A  C0A5  F001         	movff	_RGB_to_HSV$2711,___fladd@b
  6659   001E3E  C0A6  F002         	movff	_RGB_to_HSV$2711+1,___fladd@b+1
  6660   001E42  C0A7  F003         	movff	_RGB_to_HSV$2711+2,___fladd@b+2
  6661   001E46  C0A8  F004         	movff	_RGB_to_HSV$2711+3,___fladd@b+3
  6662   001E4A  ECF7  F012         	call	___fladd	;wreg free
  6663   001E4E  C001  F03B         	movff	?___fladd,___flmul@b
  6664   001E52  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  6665   001E56  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  6666   001E5A  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  6667   001E5E  0E00               	movlw	0
  6668   001E60  6E3F               	movwf	___flmul@a^0,c
  6669   001E62  0E00               	movlw	0
  6670   001E64  6E40               	movwf	(___flmul@a+1)^0,c
  6671   001E66  0E70               	movlw	112
  6672   001E68  6E41               	movwf	(___flmul@a+2)^0,c
  6673   001E6A  0E42               	movlw	66
  6674   001E6C  6E42               	movwf	(___flmul@a+3)^0,c
  6675   001E6E  EC57  F015         	call	___flmul	;wreg free
  6676   001E72  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6677   001E76  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6678   001E7A  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6679   001E7E  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6680   001E82  EF43  F00F         	goto	l3797
  6681   001E86                     l80:
  6682   001E86                     l3797:
  6683                           
  6684                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  6685   001E86  0100               	movlb	0	; () banked
  6686   001E88  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  6687   001E8A  EF4B  F00F         	goto	u3930
  6688   001E8E  EF49  F00F         	goto	u3931
  6689   001E92                     u3931:
  6690   001E92  EF65  F00F         	goto	l3801
  6691   001E96                     u3930:
  6692   001E96                     
  6693                           ; BSR set to: 0
  6694   001E96  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  6695   001E9A  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  6696   001E9E  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  6697   001EA2  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  6698   001EA6  0E00               	movlw	0
  6699   001EA8  6E05               	movwf	___fladd@a^0,c
  6700   001EAA  0E00               	movlw	0
  6701   001EAC  6E06               	movwf	(___fladd@a+1)^0,c
  6702   001EAE  0EB4               	movlw	180
  6703   001EB0  6E07               	movwf	(___fladd@a+2)^0,c
  6704   001EB2  0E43               	movlw	67
  6705   001EB4  6E08               	movwf	(___fladd@a+3)^0,c
  6706   001EB6  ECF7  F012         	call	___fladd	;wreg free
  6707   001EBA  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  6708   001EBE  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  6709   001EC2  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  6710   001EC6  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  6711   001ECA                     l3801:
  6712                           
  6713                           ;color.c: 158:     *H = H_temp;
  6714   001ECA  0100               	movlb	0	; () banked
  6715   001ECC  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  6716   001ECE  6ED9               	movwf	fsr2l,c
  6717   001ED0  6ADA               	clrf	fsr2h,c
  6718   001ED2  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  6719   001ED6  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  6720   001EDA  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  6721   001EDE  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  6722   001EE2                     
  6723                           ; BSR set to: 0
  6724                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  6725   001EE2  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6726   001EE6  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6727   001EEA  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6728   001EEE  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6729   001EF2  0E00               	movlw	0
  6730   001EF4  6E05               	movwf	___fleq@ff2^0,c
  6731   001EF6  0E00               	movlw	0
  6732   001EF8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6733   001EFA  0E00               	movlw	0
  6734   001EFC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6735   001EFE  0E00               	movlw	0
  6736   001F00  6E08               	movwf	(___fleq@ff2+3)^0,c
  6737   001F02  EC35  F022         	call	___fleq	;wreg free
  6738   001F06  A0D8               	btfss	status,0,c
  6739   001F08  EF88  F00F         	goto	u3941
  6740   001F0C  EF8A  F00F         	goto	u3940
  6741   001F10                     u3941:
  6742   001F10  EF98  F00F         	goto	l3807
  6743   001F14                     u3940:
  6744   001F14  0100               	movlb	0	; () banked
  6745   001F16  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6746   001F18  6ED9               	movwf	fsr2l,c
  6747   001F1A  6ADA               	clrf	fsr2h,c
  6748   001F1C  0E00               	movlw	0
  6749   001F1E  6EDE               	movwf	postinc2,c
  6750   001F20  0E00               	movlw	0
  6751   001F22  6EDE               	movwf	postinc2,c
  6752   001F24  0E00               	movlw	0
  6753   001F26  6EDE               	movwf	postinc2,c
  6754   001F28  0E00               	movlw	0
  6755   001F2A  6EDD               	movwf	postdec2,c
  6756   001F2C  EFC8  F00F         	goto	l3809
  6757   001F30                     l3807:
  6758                           
  6759                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  6760   001F30  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  6761   001F34  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  6762   001F38  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  6763   001F3C  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  6764   001F40  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  6765   001F44  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  6766   001F48  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  6767   001F4C  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  6768   001F50  EC6C  F017         	call	___fldiv	;wreg free
  6769   001F54  C022  F03B         	movff	?___fldiv,___flmul@b
  6770   001F58  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  6771   001F5C  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  6772   001F60  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  6773   001F64  0E00               	movlw	0
  6774   001F66  6E3F               	movwf	___flmul@a^0,c
  6775   001F68  0E00               	movlw	0
  6776   001F6A  6E40               	movwf	(___flmul@a+1)^0,c
  6777   001F6C  0EC8               	movlw	200
  6778   001F6E  6E41               	movwf	(___flmul@a+2)^0,c
  6779   001F70  0E42               	movlw	66
  6780   001F72  6E42               	movwf	(___flmul@a+3)^0,c
  6781   001F74  EC57  F015         	call	___flmul	;wreg free
  6782   001F78  0100               	movlb	0	; () banked
  6783   001F7A  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6784   001F7C  6ED9               	movwf	fsr2l,c
  6785   001F7E  6ADA               	clrf	fsr2h,c
  6786   001F80  C03B  FFDE         	movff	?___flmul,postinc2
  6787   001F84  C03C  FFDE         	movff	?___flmul+1,postinc2
  6788   001F88  C03D  FFDE         	movff	?___flmul+2,postinc2
  6789   001F8C  C03E  FFDE         	movff	?___flmul+3,postinc2
  6790   001F90                     l3809:
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  6794   001F90  0E00               	movlw	0
  6795   001F92  6E3F               	movwf	___flmul@a^0,c
  6796   001F94  0E00               	movlw	0
  6797   001F96  6E40               	movwf	(___flmul@a+1)^0,c
  6798   001F98  0EC8               	movlw	200
  6799   001F9A  6E41               	movwf	(___flmul@a+2)^0,c
  6800   001F9C  0E42               	movlw	66
  6801   001F9E  6E42               	movwf	(___flmul@a+3)^0,c
  6802   001FA0  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  6803   001FA4  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  6804   001FA8  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  6805   001FAC  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  6806   001FB0  EC57  F015         	call	___flmul	;wreg free
  6807   001FB4  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2712
  6808   001FB8  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2712+1
  6809   001FBC  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2712+2
  6810   001FC0  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2712+3
  6811   001FC4                     
  6812                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  6813   001FC4  C08D  F03B         	movff	_RGB_to_HSV$2712,___flmul@b
  6814   001FC8  C08E  F03C         	movff	_RGB_to_HSV$2712+1,___flmul@b+1
  6815   001FCC  C08F  F03D         	movff	_RGB_to_HSV$2712+2,___flmul@b+2
  6816   001FD0  C090  F03E         	movff	_RGB_to_HSV$2712+3,___flmul@b+3
  6817   001FD4  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  6818   001FD8  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  6819   001FDC  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  6820   001FE0  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  6821   001FE4  EC57  F015         	call	___flmul	;wreg free
  6822   001FE8  0100               	movlb	0	; () banked
  6823   001FEA  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  6824   001FEC  6ED9               	movwf	fsr2l,c
  6825   001FEE  6ADA               	clrf	fsr2h,c
  6826   001FF0  C03B  FFDE         	movff	?___flmul,postinc2
  6827   001FF4  C03C  FFDE         	movff	?___flmul+1,postinc2
  6828   001FF8  C03D  FFDE         	movff	?___flmul+2,postinc2
  6829   001FFC  C03E  FFDE         	movff	?___flmul+3,postinc2
  6830   002000                     
  6831                           ; BSR set to: 0
  6832   002000  0012               	return		;funcret
  6833   002002                     __end_of_RGB_to_HSV:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function _custom_floatmodulo *****************
  6837 ;; Defined at:
  6838 ;;		line 106 in file "color.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  x               4   83[COMRAM] float 
  6841 ;;  y               4   87[COMRAM] float 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  remainder       4    4[BANK0 ] float 
  6844 ;;  quotient        4    0[BANK0 ] float 
  6845 ;;  intPart         2    8[BANK0 ] int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  4   83[COMRAM] float 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6855 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;Total ram usage:       18 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 2
  6862 ;; This function calls:
  6863 ;;		___fldiv
  6864 ;;		___fleq
  6865 ;;		___flmul
  6866 ;;		___flsub
  6867 ;;		___fltol
  6868 ;;		___xxtofl
  6869 ;; This function is called by:
  6870 ;;		_RGB_to_HSV
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text30
  6875   003F18                     __ptext30:
  6876                           	callstack 0
  6877   003F18                     _custom_floatmodulo:
  6878                           	callstack 26
  6879   003F18                     
  6880                           ;color.c: 108:     if (y == 0.0) {
  6881   003F18  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  6882   003F1C  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  6883   003F20  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  6884   003F24  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  6885   003F28  0E00               	movlw	0
  6886   003F2A  6E05               	movwf	___fleq@ff2^0,c
  6887   003F2C  0E00               	movlw	0
  6888   003F2E  6E06               	movwf	(___fleq@ff2+1)^0,c
  6889   003F30  0E00               	movlw	0
  6890   003F32  6E07               	movwf	(___fleq@ff2+2)^0,c
  6891   003F34  0E00               	movlw	0
  6892   003F36  6E08               	movwf	(___fleq@ff2+3)^0,c
  6893   003F38  EC35  F022         	call	___fleq	;wreg free
  6894   003F3C  A0D8               	btfss	status,0,c
  6895   003F3E  EFA3  F01F         	goto	u3721
  6896   003F42  EFA5  F01F         	goto	u3720
  6897   003F46                     u3721:
  6898   003F46  EFAF  F01F         	goto	l3627
  6899   003F4A                     u3720:
  6900   003F4A                     
  6901                           ;color.c: 109:         return 0.0;
  6902   003F4A  0E00               	movlw	0
  6903   003F4C  6E54               	movwf	?_custom_floatmodulo^0,c
  6904   003F4E  0E00               	movlw	0
  6905   003F50  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  6906   003F52  0E00               	movlw	0
  6907   003F54  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  6908   003F56  0E00               	movlw	0
  6909   003F58  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  6910   003F5A  EF17  F020         	goto	l50
  6911   003F5E                     l3627:
  6912                           
  6913                           ;color.c: 113:     float quotient = x / y;
  6914   003F5E  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  6915   003F62  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  6916   003F66  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  6917   003F6A  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  6918   003F6E  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  6919   003F72  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  6920   003F76  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  6921   003F7A  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  6922   003F7E  EC6C  F017         	call	___fldiv	;wreg free
  6923   003F82  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  6924   003F86  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  6925   003F8A  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  6926   003F8E  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  6927                           
  6928                           ;color.c: 116:     int intPart = (int)quotient;
  6929   003F92  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  6930   003F96  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  6931   003F9A  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  6932   003F9E  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  6933   003FA2  EC18  F020         	call	___fltol	;wreg free
  6934   003FA6  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  6935   003FAA  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  6936   003FAE                     
  6937                           ;color.c: 119:     float remainder = x - intPart * y;
  6938   003FAE  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  6939   003FB2  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  6940   003FB6  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  6941   003FBA  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  6942   003FBE  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  6943   003FC2  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  6944   003FC6  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  6945   003FCA  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  6946   003FCE  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  6947   003FD2  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  6948   003FD6  0E00               	movlw	0
  6949   003FD8  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6950   003FDA  0EFF               	movlw	-1
  6951   003FDC  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6952   003FDE  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6953   003FE0  0E01               	movlw	1
  6954   003FE2  EC39  F019         	call	___xxtofl
  6955   003FE6  C00C  F03B         	movff	?___xxtofl,___flmul@b
  6956   003FEA  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  6957   003FEE  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  6958   003FF2  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  6959   003FF6  EC57  F015         	call	___flmul	;wreg free
  6960   003FFA  C03B  F01E         	movff	?___flmul,___flsub@a
  6961   003FFE  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  6962   004002  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  6963   004006  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  6964   00400A  ECE0  F023         	call	___flsub	;wreg free
  6965   00400E  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  6966   004012  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  6967   004016  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  6968   00401A  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  6969   00401E                     
  6970                           ;color.c: 121:     return remainder;
  6971   00401E  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  6972   004022  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  6973   004026  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  6974   00402A  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  6975   00402E                     l50:
  6976   00402E  0012               	return		;funcret
  6977   004030                     __end_of_custom_floatmodulo:
  6978                           	callstack 0
  6979                           
  6980 ;; *************** function ___xxtofl *****************
  6981 ;; Defined at:
  6982 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  sign            1    wreg     unsigned char 
  6985 ;;  val             4   11[COMRAM] long 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;  sign            1   19[COMRAM] unsigned char 
  6988 ;;  arg             4   21[COMRAM] unsigned long 
  6989 ;;  exp             1   20[COMRAM] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  4   11[COMRAM] unsigned char 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;Total ram usage:       14 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_custom_floatmodulo
  7009 ;;		_color_cardCheck
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           	psect	text31
  7014   003272                     __ptext31:
  7015                           	callstack 0
  7016   003272                     ___xxtofl:
  7017                           	callstack 29
  7018                           
  7019                           ;incstack = 0
  7020                           ;___xxtofl@sign stored from wreg
  7021   003272  6E14               	movwf	___xxtofl@sign^0,c
  7022   003274  5014               	movf	___xxtofl@sign^0,w,c
  7023   003276  B4D8               	btfsc	status,2,c
  7024   003278  EF40  F019         	goto	u3561
  7025   00327C  EF42  F019         	goto	u3560
  7026   003280                     u3561:
  7027   003280  EF64  F019         	goto	l1177
  7028   003284                     u3560:
  7029   003284  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7030   003286  EF49  F019         	goto	u3570
  7031   00328A  EF47  F019         	goto	u3571
  7032   00328E                     u3571:
  7033   00328E  EF64  F019         	goto	l1177
  7034   003292                     u3570:
  7035   003292  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  7036   003296  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  7037   00329A  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  7038   00329E  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  7039   0032A2  1E10               	comf	??___xxtofl^0,f,c
  7040   0032A4  1E11               	comf	(??___xxtofl+1)^0,f,c
  7041   0032A6  1E12               	comf	(??___xxtofl+2)^0,f,c
  7042   0032A8  1E13               	comf	(??___xxtofl+3)^0,f,c
  7043   0032AA  2A10               	incf	??___xxtofl^0,f,c
  7044   0032AC  0E00               	movlw	0
  7045   0032AE  2211               	addwfc	(??___xxtofl+1)^0,f,c
  7046   0032B0  2212               	addwfc	(??___xxtofl+2)^0,f,c
  7047   0032B2  2213               	addwfc	(??___xxtofl+3)^0,f,c
  7048   0032B4  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  7049   0032B8  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  7050   0032BC  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  7051   0032C0  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  7052   0032C4  EF6C  F019         	goto	l3537
  7053   0032C8                     l1177:
  7054   0032C8  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  7055   0032CC  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7056   0032D0  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7057   0032D4  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7058   0032D8                     l3537:
  7059   0032D8  500C               	movf	___xxtofl@val^0,w,c
  7060   0032DA  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  7061   0032DC  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  7062   0032DE  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  7063   0032E0  A4D8               	btfss	status,2,c
  7064   0032E2  EF75  F019         	goto	u3581
  7065   0032E6  EF77  F019         	goto	u3580
  7066   0032EA                     u3581:
  7067   0032EA  EF81  F019         	goto	l3543
  7068   0032EE                     u3580:
  7069   0032EE  0E00               	movlw	0
  7070   0032F0  6E0C               	movwf	?___xxtofl^0,c
  7071   0032F2  0E00               	movlw	0
  7072   0032F4  6E0D               	movwf	(?___xxtofl+1)^0,c
  7073   0032F6  0E00               	movlw	0
  7074   0032F8  6E0E               	movwf	(?___xxtofl+2)^0,c
  7075   0032FA  0E00               	movlw	0
  7076   0032FC  6E0F               	movwf	(?___xxtofl+3)^0,c
  7077   0032FE  EF12  F01A         	goto	l1180
  7078   003302                     l3543:
  7079   003302  0E96               	movlw	150
  7080   003304  6E15               	movwf	___xxtofl@exp^0,c
  7081   003306  EF8B  F019         	goto	l3547
  7082   00330A                     l3545:
  7083   00330A  2A15               	incf	___xxtofl@exp^0,f,c
  7084   00330C  90D8               	bcf	status,0,c
  7085   00330E  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7086   003310  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7087   003312  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7088   003314  3216               	rrcf	___xxtofl@arg^0,f,c
  7089   003316                     l3547:
  7090   003316  0E00               	movlw	0
  7091   003318  1416               	andwf	___xxtofl@arg^0,w,c
  7092   00331A  6E10               	movwf	??___xxtofl^0,c
  7093   00331C  0E00               	movlw	0
  7094   00331E  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7095   003320  6E11               	movwf	(??___xxtofl+1)^0,c
  7096   003322  0E00               	movlw	0
  7097   003324  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7098   003326  6E12               	movwf	(??___xxtofl+2)^0,c
  7099   003328  0EFE               	movlw	254
  7100   00332A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7101   00332C  6E13               	movwf	(??___xxtofl+3)^0,c
  7102   00332E  5010               	movf	??___xxtofl^0,w,c
  7103   003330  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7104   003332  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7105   003334  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7106   003336  A4D8               	btfss	status,2,c
  7107   003338  EFA0  F019         	goto	u3591
  7108   00333C  EFA2  F019         	goto	u3590
  7109   003340                     u3591:
  7110   003340  EF85  F019         	goto	l3545
  7111   003344                     u3590:
  7112   003344  EFB0  F019         	goto	l1184
  7113   003348                     l3549:
  7114   003348  2A15               	incf	___xxtofl@exp^0,f,c
  7115   00334A  0E01               	movlw	1
  7116   00334C  2616               	addwf	___xxtofl@arg^0,f,c
  7117   00334E  0E00               	movlw	0
  7118   003350  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  7119   003352  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  7120   003354  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  7121   003356  90D8               	bcf	status,0,c
  7122   003358  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7123   00335A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7124   00335C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7125   00335E  3216               	rrcf	___xxtofl@arg^0,f,c
  7126   003360                     l1184:
  7127   003360  0E00               	movlw	0
  7128   003362  1416               	andwf	___xxtofl@arg^0,w,c
  7129   003364  6E10               	movwf	??___xxtofl^0,c
  7130   003366  0E00               	movlw	0
  7131   003368  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7132   00336A  6E11               	movwf	(??___xxtofl+1)^0,c
  7133   00336C  0E00               	movlw	0
  7134   00336E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7135   003370  6E12               	movwf	(??___xxtofl+2)^0,c
  7136   003372  0EFF               	movlw	255
  7137   003374  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7138   003376  6E13               	movwf	(??___xxtofl+3)^0,c
  7139   003378  5010               	movf	??___xxtofl^0,w,c
  7140   00337A  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7141   00337C  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7142   00337E  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7143   003380  A4D8               	btfss	status,2,c
  7144   003382  EFC5  F019         	goto	u3601
  7145   003386  EFC7  F019         	goto	u3600
  7146   00338A                     u3601:
  7147   00338A  EFA4  F019         	goto	l3549
  7148   00338E                     u3600:
  7149   00338E  EFCF  F019         	goto	l3557
  7150   003392                     l3555:
  7151   003392  0615               	decf	___xxtofl@exp^0,f,c
  7152   003394  90D8               	bcf	status,0,c
  7153   003396  3616               	rlcf	___xxtofl@arg^0,f,c
  7154   003398  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  7155   00339A  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  7156   00339C  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  7157   00339E                     l3557:
  7158   00339E  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  7159   0033A0  EFD4  F019         	goto	u3611
  7160   0033A4  EFD6  F019         	goto	u3610
  7161   0033A8                     u3611:
  7162   0033A8  EFDE  F019         	goto	l1191
  7163   0033AC                     u3610:
  7164   0033AC  0E02               	movlw	2
  7165   0033AE  6015               	cpfslt	___xxtofl@exp^0,c
  7166   0033B0  EFDC  F019         	goto	u3621
  7167   0033B4  EFDE  F019         	goto	u3620
  7168   0033B8                     u3621:
  7169   0033B8  EFC9  F019         	goto	l3555
  7170   0033BC                     u3620:
  7171   0033BC                     l1191:
  7172   0033BC  B015               	btfsc	___xxtofl@exp^0,0,c
  7173   0033BE  EFE3  F019         	goto	u3631
  7174   0033C2  EFE5  F019         	goto	u3630
  7175   0033C6                     u3631:
  7176   0033C6  EFE6  F019         	goto	l3563
  7177   0033CA                     u3630:
  7178   0033CA  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  7179   0033CC                     l3563:
  7180   0033CC  90D8               	bcf	status,0,c
  7181   0033CE  3215               	rrcf	___xxtofl@exp^0,f,c
  7182   0033D0  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  7183   0033D4  6A11               	clrf	(??___xxtofl+1)^0,c
  7184   0033D6  6A12               	clrf	(??___xxtofl+2)^0,c
  7185   0033D8  6A13               	clrf	(??___xxtofl+3)^0,c
  7186   0033DA  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  7187   0033DE  6A12               	clrf	(??___xxtofl+2)^0,c
  7188   0033E0  6A11               	clrf	(??___xxtofl+1)^0,c
  7189   0033E2  6A10               	clrf	??___xxtofl^0,c
  7190   0033E4  5010               	movf	??___xxtofl^0,w,c
  7191   0033E6  1216               	iorwf	___xxtofl@arg^0,f,c
  7192   0033E8  5011               	movf	(??___xxtofl+1)^0,w,c
  7193   0033EA  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  7194   0033EC  5012               	movf	(??___xxtofl+2)^0,w,c
  7195   0033EE  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  7196   0033F0  5013               	movf	(??___xxtofl+3)^0,w,c
  7197   0033F2  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  7198   0033F4  5014               	movf	___xxtofl@sign^0,w,c
  7199   0033F6  B4D8               	btfsc	status,2,c
  7200   0033F8  EF00  F01A         	goto	u3641
  7201   0033FC  EF02  F01A         	goto	u3640
  7202   003400                     u3641:
  7203   003400  EF0A  F01A         	goto	l3573
  7204   003404                     u3640:
  7205   003404  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7206   003406  EF09  F01A         	goto	u3650
  7207   00340A  EF07  F01A         	goto	u3651
  7208   00340E                     u3651:
  7209   00340E  EF0A  F01A         	goto	l3573
  7210   003412                     u3650:
  7211   003412  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  7212   003414                     l3573:
  7213   003414  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  7214   003418  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7215   00341C  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7216   003420  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7217   003424                     l1180:
  7218   003424  0012               	return		;funcret
  7219   003426                     __end_of___xxtofl:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function ___fltol *****************
  7223 ;; Defined at:
  7224 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  f1              4    0[COMRAM] unsigned char 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  exp1            1    9[COMRAM] unsigned char 
  7229 ;;  sign1           1    8[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  4    0[COMRAM] long 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7243 ;;Total ram usage:       10 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_custom_floatmodulo
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text32
  7253   004030                     __ptext32:
  7254                           	callstack 0
  7255   004030                     ___fltol:
  7256                           	callstack 27
  7257   004030  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7258   004032  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7259   004034  6E0A               	movwf	___fltol@exp1^0,c
  7260   004036  500A               	movf	___fltol@exp1^0,w,c
  7261   004038  A4D8               	btfss	status,2,c
  7262   00403A  EF21  F020         	goto	u3431
  7263   00403E  EF23  F020         	goto	u3430
  7264   004042                     u3431:
  7265   004042  EF2D  F020         	goto	l3455
  7266   004046                     u3430:
  7267   004046                     l3451:
  7268   004046  0E00               	movlw	0
  7269   004048  6E01               	movwf	?___fltol^0,c
  7270   00404A  0E00               	movlw	0
  7271   00404C  6E02               	movwf	(?___fltol+1)^0,c
  7272   00404E  0E00               	movlw	0
  7273   004050  6E03               	movwf	(?___fltol+2)^0,c
  7274   004052  0E00               	movlw	0
  7275   004054  6E04               	movwf	(?___fltol+3)^0,c
  7276   004056  EF9A  F020         	goto	l819
  7277   00405A                     l3455:
  7278   00405A  C001  F005         	movff	___fltol@f1,??___fltol
  7279   00405E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7280   004062  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7281   004066  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7282   00406A  0E20               	movlw	32
  7283   00406C  EF3D  F020         	goto	u3440
  7284   004070                     u3445:
  7285   004070  90D8               	bcf	status,0,c
  7286   004072  3208               	rrcf	(??___fltol+3)^0,f,c
  7287   004074  3207               	rrcf	(??___fltol+2)^0,f,c
  7288   004076  3206               	rrcf	(??___fltol+1)^0,f,c
  7289   004078  3205               	rrcf	??___fltol^0,f,c
  7290   00407A                     u3440:
  7291   00407A  2EE8               	decfsz	wreg,f,c
  7292   00407C  EF38  F020         	goto	u3445
  7293   004080  5005               	movf	??___fltol^0,w,c
  7294   004082  6E09               	movwf	___fltol@sign1^0,c
  7295   004084  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7296   004086  0EFF               	movlw	255
  7297   004088  1601               	andwf	___fltol@f1^0,f,c
  7298   00408A  0EFF               	movlw	255
  7299   00408C  1602               	andwf	(___fltol@f1+1)^0,f,c
  7300   00408E  0EFF               	movlw	255
  7301   004090  1603               	andwf	(___fltol@f1+2)^0,f,c
  7302   004092  0E00               	movlw	0
  7303   004094  1604               	andwf	(___fltol@f1+3)^0,f,c
  7304   004096  0E96               	movlw	150
  7305   004098  5E0A               	subwf	___fltol@exp1^0,f,c
  7306   00409A  BE0A               	btfsc	___fltol@exp1^0,7,c
  7307   00409C  EF54  F020         	goto	u3450
  7308   0040A0  EF52  F020         	goto	u3451
  7309   0040A4                     u3451:
  7310   0040A4  EF6A  F020         	goto	l3475
  7311   0040A8                     u3450:
  7312   0040A8  500A               	movf	___fltol@exp1^0,w,c
  7313   0040AA  0A80               	xorlw	128
  7314   0040AC  0F97               	addlw	151
  7315   0040AE  B0D8               	btfsc	status,0,c
  7316   0040B0  EF5C  F020         	goto	u3461
  7317   0040B4  EF5E  F020         	goto	u3460
  7318   0040B8                     u3461:
  7319   0040B8  EF60  F020         	goto	l3471
  7320   0040BC                     u3460:
  7321   0040BC  EF23  F020         	goto	l3451
  7322   0040C0                     l3471:
  7323   0040C0  90D8               	bcf	status,0,c
  7324   0040C2  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7325   0040C4  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7326   0040C6  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7327   0040C8  3201               	rrcf	___fltol@f1^0,f,c
  7328   0040CA  3E0A               	incfsz	___fltol@exp1^0,f,c
  7329   0040CC  EF60  F020         	goto	l3471
  7330   0040D0  EF82  F020         	goto	l3485
  7331   0040D4                     l3475:
  7332   0040D4  0E1F               	movlw	31
  7333   0040D6  640A               	cpfsgt	___fltol@exp1^0,c
  7334   0040D8  EF70  F020         	goto	u3471
  7335   0040DC  EF72  F020         	goto	u3470
  7336   0040E0                     u3471:
  7337   0040E0  EF7A  F020         	goto	l3483
  7338   0040E4                     u3470:
  7339   0040E4  EF23  F020         	goto	l3451
  7340   0040E8                     l3481:
  7341   0040E8  90D8               	bcf	status,0,c
  7342   0040EA  3601               	rlcf	___fltol@f1^0,f,c
  7343   0040EC  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7344   0040EE  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7345   0040F0  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7346   0040F2  060A               	decf	___fltol@exp1^0,f,c
  7347   0040F4                     l3483:
  7348   0040F4  500A               	movf	___fltol@exp1^0,w,c
  7349   0040F6  A4D8               	btfss	status,2,c
  7350   0040F8  EF80  F020         	goto	u3481
  7351   0040FC  EF82  F020         	goto	u3480
  7352   004100                     u3481:
  7353   004100  EF74  F020         	goto	l3481
  7354   004104                     u3480:
  7355   004104                     l3485:
  7356   004104  5009               	movf	___fltol@sign1^0,w,c
  7357   004106  B4D8               	btfsc	status,2,c
  7358   004108  EF88  F020         	goto	u3491
  7359   00410C  EF8A  F020         	goto	u3490
  7360   004110                     u3491:
  7361   004110  EF92  F020         	goto	l3489
  7362   004114                     u3490:
  7363   004114  1E04               	comf	(___fltol@f1+3)^0,f,c
  7364   004116  1E03               	comf	(___fltol@f1+2)^0,f,c
  7365   004118  1E02               	comf	(___fltol@f1+1)^0,f,c
  7366   00411A  6C01               	negf	___fltol@f1^0,c
  7367   00411C  0E00               	movlw	0
  7368   00411E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7369   004120  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7370   004122  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7371   004124                     l3489:
  7372   004124  C001  F001         	movff	___fltol@f1,?___fltol
  7373   004128  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7374   00412C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7375   004130  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7376   004134                     l819:
  7377   004134  0012               	return		;funcret
  7378   004136                     __end_of___fltol:
  7379                           	callstack 0
  7380                           
  7381 ;; *************** function ___flsub *****************
  7382 ;; Defined at:
  7383 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  b               4   25[COMRAM] long 
  7386 ;;  a               4   29[COMRAM] long 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  4   25[COMRAM] long 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7398 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;Total ram usage:        8 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 1
  7405 ;; This function calls:
  7406 ;;		___fladd
  7407 ;; This function is called by:
  7408 ;;		_custom_floatmodulo
  7409 ;;		_RGB_to_HSV
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text33
  7414   0047C0                     __ptext33:
  7415                           	callstack 0
  7416   0047C0                     ___flsub:
  7417                           	callstack 26
  7418   0047C0  0E00               	movlw	0
  7419   0047C2  1A1E               	xorwf	___flsub@a^0,f,c
  7420   0047C4  0E00               	movlw	0
  7421   0047C6  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7422   0047C8  0E00               	movlw	0
  7423   0047CA  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7424   0047CC  0E80               	movlw	128
  7425   0047CE  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7426   0047D0  C01A  F001         	movff	___flsub@b,___fladd@b
  7427   0047D4  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7428   0047D8  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7429   0047DC  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7430   0047E0  C01E  F005         	movff	___flsub@a,___fladd@a
  7431   0047E4  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7432   0047E8  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7433   0047EC  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7434   0047F0  ECF7  F012         	call	___fladd	;wreg free
  7435   0047F4  C001  F01A         	movff	?___fladd,?___flsub
  7436   0047F8  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7437   0047FC  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7438   004800  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7439   004804  0012               	return		;funcret
  7440   004806                     __end_of___flsub:
  7441                           	callstack 0
  7442                           
  7443 ;; *************** function ___fladd *****************
  7444 ;; Defined at:
  7445 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  b               4    0[COMRAM] long 
  7448 ;;  a               4    4[COMRAM] long 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  grs             1   15[COMRAM] unsigned char 
  7451 ;;  bexp            1   14[COMRAM] unsigned char 
  7452 ;;  aexp            1   13[COMRAM] unsigned char 
  7453 ;;  signs           1   12[COMRAM] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  4    0[COMRAM] unsigned char 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7463 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7467 ;;Total ram usage:       16 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_RGB_to_HSV
  7473 ;;		___flsub
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text34
  7478   0025EE                     __ptext34:
  7479                           	callstack 0
  7480   0025EE                     ___fladd:
  7481                           	callstack 26
  7482   0025EE  5004               	movf	(___fladd@b+3)^0,w,c
  7483   0025F0  0B80               	andlw	128
  7484   0025F2  6E0D               	movwf	___fladd@signs^0,c
  7485   0025F4  5004               	movf	(___fladd@b+3)^0,w,c
  7486   0025F6  2404               	addwf	(___fladd@b+3)^0,w,c
  7487   0025F8  6E0F               	movwf	___fladd@bexp^0,c
  7488   0025FA  AE03               	btfss	(___fladd@b+2)^0,7,c
  7489   0025FC  EF02  F013         	goto	u2571
  7490   002600  EF04  F013         	goto	u2570
  7491   002604                     u2571:
  7492   002604  EF05  F013         	goto	l2959
  7493   002608                     u2570:
  7494   002608  800F               	bsf	___fladd@bexp^0,0,c
  7495   00260A                     l2959:
  7496   00260A  500F               	movf	___fladd@bexp^0,w,c
  7497   00260C  B4D8               	btfsc	status,2,c
  7498   00260E  EF0B  F013         	goto	u2581
  7499   002612  EF0D  F013         	goto	u2580
  7500   002616                     u2581:
  7501   002616  EF22  F013         	goto	l2969
  7502   00261A                     u2580:
  7503   00261A  280F               	incf	___fladd@bexp^0,w,c
  7504   00261C  A4D8               	btfss	status,2,c
  7505   00261E  EF13  F013         	goto	u2591
  7506   002622  EF15  F013         	goto	u2590
  7507   002626                     u2591:
  7508   002626  EF1D  F013         	goto	l2965
  7509   00262A                     u2590:
  7510   00262A  0E00               	movlw	0
  7511   00262C  6E01               	movwf	___fladd@b^0,c
  7512   00262E  0E00               	movlw	0
  7513   002630  6E02               	movwf	(___fladd@b+1)^0,c
  7514   002632  0E00               	movlw	0
  7515   002634  6E03               	movwf	(___fladd@b+2)^0,c
  7516   002636  0E00               	movlw	0
  7517   002638  6E04               	movwf	(___fladd@b+3)^0,c
  7518   00263A                     l2965:
  7519   00263A  8E03               	bsf	(___fladd@b+2)^0,7,c
  7520   00263C  0E00               	movlw	0
  7521   00263E  6E04               	movwf	(___fladd@b+3)^0,c
  7522   002640  EF2A  F013         	goto	l2971
  7523   002644                     l2969:
  7524   002644  0E00               	movlw	0
  7525   002646  6E01               	movwf	___fladd@b^0,c
  7526   002648  0E00               	movlw	0
  7527   00264A  6E02               	movwf	(___fladd@b+1)^0,c
  7528   00264C  0E00               	movlw	0
  7529   00264E  6E03               	movwf	(___fladd@b+2)^0,c
  7530   002650  0E00               	movlw	0
  7531   002652  6E04               	movwf	(___fladd@b+3)^0,c
  7532   002654                     l2971:
  7533   002654  5008               	movf	(___fladd@a+3)^0,w,c
  7534   002656  0B80               	andlw	128
  7535   002658  6E0E               	movwf	___fladd@aexp^0,c
  7536   00265A  500D               	movf	___fladd@signs^0,w,c
  7537   00265C  180E               	xorwf	___fladd@aexp^0,w,c
  7538   00265E  B4D8               	btfsc	status,2,c
  7539   002660  EF34  F013         	goto	u2601
  7540   002664  EF36  F013         	goto	u2600
  7541   002668                     u2601:
  7542   002668  EF37  F013         	goto	l2977
  7543   00266C                     u2600:
  7544   00266C  8C0D               	bsf	___fladd@signs^0,6,c
  7545   00266E                     l2977:
  7546   00266E  5008               	movf	(___fladd@a+3)^0,w,c
  7547   002670  2408               	addwf	(___fladd@a+3)^0,w,c
  7548   002672  6E0E               	movwf	___fladd@aexp^0,c
  7549   002674  AE07               	btfss	(___fladd@a+2)^0,7,c
  7550   002676  EF3F  F013         	goto	u2611
  7551   00267A  EF41  F013         	goto	u2610
  7552   00267E                     u2611:
  7553   00267E  EF42  F013         	goto	l2983
  7554   002682                     u2610:
  7555   002682  800E               	bsf	___fladd@aexp^0,0,c
  7556   002684                     l2983:
  7557   002684  500E               	movf	___fladd@aexp^0,w,c
  7558   002686  B4D8               	btfsc	status,2,c
  7559   002688  EF48  F013         	goto	u2621
  7560   00268C  EF4A  F013         	goto	u2620
  7561   002690                     u2621:
  7562   002690  EF5F  F013         	goto	l2993
  7563   002694                     u2620:
  7564   002694  280E               	incf	___fladd@aexp^0,w,c
  7565   002696  A4D8               	btfss	status,2,c
  7566   002698  EF50  F013         	goto	u2631
  7567   00269C  EF52  F013         	goto	u2630
  7568   0026A0                     u2631:
  7569   0026A0  EF5A  F013         	goto	l2989
  7570   0026A4                     u2630:
  7571   0026A4  0E00               	movlw	0
  7572   0026A6  6E05               	movwf	___fladd@a^0,c
  7573   0026A8  0E00               	movlw	0
  7574   0026AA  6E06               	movwf	(___fladd@a+1)^0,c
  7575   0026AC  0E00               	movlw	0
  7576   0026AE  6E07               	movwf	(___fladd@a+2)^0,c
  7577   0026B0  0E00               	movlw	0
  7578   0026B2  6E08               	movwf	(___fladd@a+3)^0,c
  7579   0026B4                     l2989:
  7580   0026B4  8E07               	bsf	(___fladd@a+2)^0,7,c
  7581   0026B6  0E00               	movlw	0
  7582   0026B8  6E08               	movwf	(___fladd@a+3)^0,c
  7583   0026BA  EF67  F013         	goto	l2995
  7584   0026BE                     l2993:
  7585   0026BE  0E00               	movlw	0
  7586   0026C0  6E05               	movwf	___fladd@a^0,c
  7587   0026C2  0E00               	movlw	0
  7588   0026C4  6E06               	movwf	(___fladd@a+1)^0,c
  7589   0026C6  0E00               	movlw	0
  7590   0026C8  6E07               	movwf	(___fladd@a+2)^0,c
  7591   0026CA  0E00               	movlw	0
  7592   0026CC  6E08               	movwf	(___fladd@a+3)^0,c
  7593   0026CE                     l2995:
  7594   0026CE  500F               	movf	___fladd@bexp^0,w,c
  7595   0026D0  5C0E               	subwf	___fladd@aexp^0,w,c
  7596   0026D2  B0D8               	btfsc	status,0,c
  7597   0026D4  EF6E  F013         	goto	u2641
  7598   0026D8  EF70  F013         	goto	u2640
  7599   0026DC                     u2641:
  7600   0026DC  EF97  F013         	goto	l3031
  7601   0026E0                     u2640:
  7602   0026E0  AC0D               	btfss	___fladd@signs^0,6,c
  7603   0026E2  EF75  F013         	goto	u2651
  7604   0026E6  EF77  F013         	goto	u2650
  7605   0026EA                     u2651:
  7606   0026EA  EF79  F013         	goto	l3001
  7607   0026EE                     u2650:
  7608   0026EE  0E80               	movlw	128
  7609   0026F0  1A0D               	xorwf	___fladd@signs^0,f,c
  7610   0026F2                     l3001:
  7611   0026F2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7612   0026F6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7613   0026FA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7614   0026FE  C001  F010         	movff	___fladd@b,___fladd@grs
  7615   002702  C005  F001         	movff	___fladd@a,___fladd@b
  7616   002706  C010  F005         	movff	___fladd@grs,___fladd@a
  7617   00270A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7618   00270E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7619   002712  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7620   002716  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7621   00271A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7622   00271E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7623   002722  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7624   002726  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7625   00272A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7626   00272E                     l3031:
  7627   00272E  0E00               	movlw	0
  7628   002730  6E10               	movwf	___fladd@grs^0,c
  7629   002732  500F               	movf	___fladd@bexp^0,w,c
  7630   002734  C00E  F009         	movff	___fladd@aexp,??___fladd
  7631   002738  6A0A               	clrf	(??___fladd+1)^0,c
  7632   00273A  5E09               	subwf	??___fladd^0,f,c
  7633   00273C  0E00               	movlw	0
  7634   00273E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7635   002740  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7636   002742  EFAC  F013         	goto	u2661
  7637   002746  500A               	movf	(??___fladd+1)^0,w,c
  7638   002748  E109               	bnz	u2660
  7639   00274A  0E1A               	movlw	26
  7640   00274C  5C09               	subwf	??___fladd^0,w,c
  7641   00274E  A0D8               	btfss	status,0,c
  7642   002750  EFAC  F013         	goto	u2661
  7643   002754  EFAE  F013         	goto	u2660
  7644   002758                     u2661:
  7645   002758  EFE5  F013         	goto	l1051
  7646   00275C                     u2660:
  7647   00275C  5001               	movf	___fladd@b^0,w,c
  7648   00275E  1002               	iorwf	(___fladd@b+1)^0,w,c
  7649   002760  1003               	iorwf	(___fladd@b+2)^0,w,c
  7650   002762  1004               	iorwf	(___fladd@b+3)^0,w,c
  7651   002764  A4D8               	btfss	status,2,c
  7652   002766  EFB7  F013         	goto	u2671
  7653   00276A  EFBA  F013         	goto	u2670
  7654   00276E                     u2671:
  7655   00276E  0E01               	movlw	1
  7656   002770  EFBB  F013         	goto	u2680
  7657   002774                     u2670:
  7658   002774  0E00               	movlw	0
  7659   002776                     u2680:
  7660   002776  6E10               	movwf	___fladd@grs^0,c
  7661   002778  0E00               	movlw	0
  7662   00277A  6E01               	movwf	___fladd@b^0,c
  7663   00277C  0E00               	movlw	0
  7664   00277E  6E02               	movwf	(___fladd@b+1)^0,c
  7665   002780  0E00               	movlw	0
  7666   002782  6E03               	movwf	(___fladd@b+2)^0,c
  7667   002784  0E00               	movlw	0
  7668   002786  6E04               	movwf	(___fladd@b+3)^0,c
  7669   002788  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7670   00278C  EFEE  F013         	goto	l1050
  7671   002790                     l1052:
  7672   002790  A010               	btfss	___fladd@grs^0,0,c
  7673   002792  EFCD  F013         	goto	u2691
  7674   002796  EFCF  F013         	goto	u2690
  7675   00279A                     u2691:
  7676   00279A  EFD5  F013         	goto	l3043
  7677   00279E                     u2690:
  7678   00279E  90D8               	bcf	status,0,c
  7679   0027A0  3010               	rrcf	___fladd@grs^0,w,c
  7680   0027A2  0901               	iorlw	1
  7681   0027A4  6E10               	movwf	___fladd@grs^0,c
  7682   0027A6  EFD7  F013         	goto	l3045
  7683   0027AA                     l3043:
  7684   0027AA  90D8               	bcf	status,0,c
  7685   0027AC  3210               	rrcf	___fladd@grs^0,f,c
  7686   0027AE                     l3045:
  7687   0027AE  A001               	btfss	___fladd@b^0,0,c
  7688   0027B0  EFDC  F013         	goto	u2701
  7689   0027B4  EFDE  F013         	goto	u2700
  7690   0027B8                     u2701:
  7691   0027B8  EFDF  F013         	goto	l3049
  7692   0027BC                     u2700:
  7693   0027BC  8E10               	bsf	___fladd@grs^0,7,c
  7694   0027BE                     l3049:
  7695   0027BE  3404               	rlcf	(___fladd@b+3)^0,w,c
  7696   0027C0  3204               	rrcf	(___fladd@b+3)^0,f,c
  7697   0027C2  3203               	rrcf	(___fladd@b+2)^0,f,c
  7698   0027C4  3202               	rrcf	(___fladd@b+1)^0,f,c
  7699   0027C6  3201               	rrcf	___fladd@b^0,f,c
  7700   0027C8  2A0F               	incf	___fladd@bexp^0,f,c
  7701   0027CA                     l1051:
  7702   0027CA  500E               	movf	___fladd@aexp^0,w,c
  7703   0027CC  5C0F               	subwf	___fladd@bexp^0,w,c
  7704   0027CE  A0D8               	btfss	status,0,c
  7705   0027D0  EFEC  F013         	goto	u2711
  7706   0027D4  EFEE  F013         	goto	u2710
  7707   0027D8                     u2711:
  7708   0027D8  EFC8  F013         	goto	l1052
  7709   0027DC                     u2710:
  7710   0027DC                     l1050:
  7711   0027DC  BC0D               	btfsc	___fladd@signs^0,6,c
  7712   0027DE  EFF3  F013         	goto	u2721
  7713   0027E2  EFF5  F013         	goto	u2720
  7714   0027E6                     u2721:
  7715   0027E6  EF35  F014         	goto	l3077
  7716   0027EA                     u2720:
  7717   0027EA  500F               	movf	___fladd@bexp^0,w,c
  7718   0027EC  A4D8               	btfss	status,2,c
  7719   0027EE  EFFB  F013         	goto	u2731
  7720   0027F2  EFFD  F013         	goto	u2730
  7721   0027F6                     u2731:
  7722   0027F6  EF07  F014         	goto	l3059
  7723   0027FA                     u2730:
  7724   0027FA  0E00               	movlw	0
  7725   0027FC  6E01               	movwf	?___fladd^0,c
  7726   0027FE  0E00               	movlw	0
  7727   002800  6E02               	movwf	(?___fladd+1)^0,c
  7728   002802  0E00               	movlw	0
  7729   002804  6E03               	movwf	(?___fladd+2)^0,c
  7730   002806  0E00               	movlw	0
  7731   002808  6E04               	movwf	(?___fladd+3)^0,c
  7732   00280A  EF56  F015         	goto	l1059
  7733   00280E                     l3059:
  7734   00280E  5005               	movf	___fladd@a^0,w,c
  7735   002810  2601               	addwf	___fladd@b^0,f,c
  7736   002812  5006               	movf	(___fladd@a+1)^0,w,c
  7737   002814  2202               	addwfc	(___fladd@b+1)^0,f,c
  7738   002816  5007               	movf	(___fladd@a+2)^0,w,c
  7739   002818  2203               	addwfc	(___fladd@b+2)^0,f,c
  7740   00281A  5008               	movf	(___fladd@a+3)^0,w,c
  7741   00281C  2204               	addwfc	(___fladd@b+3)^0,f,c
  7742   00281E  A004               	btfss	(___fladd@b+3)^0,0,c
  7743   002820  EF14  F014         	goto	u2741
  7744   002824  EF16  F014         	goto	u2740
  7745   002828                     u2741:
  7746   002828  EFC2  F014         	goto	l3113
  7747   00282C                     u2740:
  7748   00282C  A010               	btfss	___fladd@grs^0,0,c
  7749   00282E  EF1B  F014         	goto	u2751
  7750   002832  EF1D  F014         	goto	u2750
  7751   002836                     u2751:
  7752   002836  EF23  F014         	goto	l3067
  7753   00283A                     u2750:
  7754   00283A  90D8               	bcf	status,0,c
  7755   00283C  3010               	rrcf	___fladd@grs^0,w,c
  7756   00283E  0901               	iorlw	1
  7757   002840  6E10               	movwf	___fladd@grs^0,c
  7758   002842  EF25  F014         	goto	l3069
  7759   002846                     l3067:
  7760   002846  90D8               	bcf	status,0,c
  7761   002848  3210               	rrcf	___fladd@grs^0,f,c
  7762   00284A                     l3069:
  7763   00284A  A001               	btfss	___fladd@b^0,0,c
  7764   00284C  EF2A  F014         	goto	u2761
  7765   002850  EF2C  F014         	goto	u2760
  7766   002854                     u2761:
  7767   002854  EF2D  F014         	goto	l3073
  7768   002858                     u2760:
  7769   002858  8E10               	bsf	___fladd@grs^0,7,c
  7770   00285A                     l3073:
  7771   00285A  3404               	rlcf	(___fladd@b+3)^0,w,c
  7772   00285C  3204               	rrcf	(___fladd@b+3)^0,f,c
  7773   00285E  3203               	rrcf	(___fladd@b+2)^0,f,c
  7774   002860  3202               	rrcf	(___fladd@b+1)^0,f,c
  7775   002862  3201               	rrcf	___fladd@b^0,f,c
  7776   002864  2A0F               	incf	___fladd@bexp^0,f,c
  7777   002866  EFC2  F014         	goto	l3113
  7778   00286A                     l3077:
  7779   00286A  5005               	movf	___fladd@a^0,w,c
  7780   00286C  5C01               	subwf	___fladd@b^0,w,c
  7781   00286E  5006               	movf	(___fladd@a+1)^0,w,c
  7782   002870  5802               	subwfb	(___fladd@b+1)^0,w,c
  7783   002872  5007               	movf	(___fladd@a+2)^0,w,c
  7784   002874  5803               	subwfb	(___fladd@b+2)^0,w,c
  7785   002876  5004               	movf	(___fladd@b+3)^0,w,c
  7786   002878  0A80               	xorlw	128
  7787   00287A  6E09               	movwf	??___fladd^0,c
  7788   00287C  5008               	movf	(___fladd@a+3)^0,w,c
  7789   00287E  0A80               	xorlw	128
  7790   002880  5809               	subwfb	??___fladd^0,w,c
  7791   002882  B0D8               	btfsc	status,0,c
  7792   002884  EF46  F014         	goto	u2771
  7793   002888  EF48  F014         	goto	u2770
  7794   00288C                     u2771:
  7795   00288C  EF73  F014         	goto	l3087
  7796   002890                     u2770:
  7797   002890  5001               	movf	___fladd@b^0,w,c
  7798   002892  5C05               	subwf	___fladd@a^0,w,c
  7799   002894  6E09               	movwf	??___fladd^0,c
  7800   002896  5002               	movf	(___fladd@b+1)^0,w,c
  7801   002898  5806               	subwfb	(___fladd@a+1)^0,w,c
  7802   00289A  6E0A               	movwf	(??___fladd+1)^0,c
  7803   00289C  5003               	movf	(___fladd@b+2)^0,w,c
  7804   00289E  5807               	subwfb	(___fladd@a+2)^0,w,c
  7805   0028A0  6E0B               	movwf	(??___fladd+2)^0,c
  7806   0028A2  5004               	movf	(___fladd@b+3)^0,w,c
  7807   0028A4  5808               	subwfb	(___fladd@a+3)^0,w,c
  7808   0028A6  6E0C               	movwf	(??___fladd+3)^0,c
  7809   0028A8  0EFF               	movlw	255
  7810   0028AA  2409               	addwf	??___fladd^0,w,c
  7811   0028AC  6E01               	movwf	___fladd@b^0,c
  7812   0028AE  0EFF               	movlw	255
  7813   0028B0  200A               	addwfc	(??___fladd+1)^0,w,c
  7814   0028B2  6E02               	movwf	(___fladd@b+1)^0,c
  7815   0028B4  0EFF               	movlw	255
  7816   0028B6  200B               	addwfc	(??___fladd+2)^0,w,c
  7817   0028B8  6E03               	movwf	(___fladd@b+2)^0,c
  7818   0028BA  0EFF               	movlw	255
  7819   0028BC  200C               	addwfc	(??___fladd+3)^0,w,c
  7820   0028BE  6E04               	movwf	(___fladd@b+3)^0,c
  7821   0028C0  0E80               	movlw	128
  7822   0028C2  1A0D               	xorwf	___fladd@signs^0,f,c
  7823   0028C4  6C10               	negf	___fladd@grs^0,c
  7824   0028C6  5010               	movf	___fladd@grs^0,w,c
  7825   0028C8  A4D8               	btfss	status,2,c
  7826   0028CA  EF69  F014         	goto	u2781
  7827   0028CE  EF6B  F014         	goto	u2780
  7828   0028D2                     u2781:
  7829   0028D2  EF7B  F014         	goto	l1067
  7830   0028D6                     u2780:
  7831   0028D6  0E01               	movlw	1
  7832   0028D8  2601               	addwf	___fladd@b^0,f,c
  7833   0028DA  0E00               	movlw	0
  7834   0028DC  2202               	addwfc	(___fladd@b+1)^0,f,c
  7835   0028DE  2203               	addwfc	(___fladd@b+2)^0,f,c
  7836   0028E0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7837   0028E2  EF7B  F014         	goto	l1067
  7838   0028E6                     l3087:
  7839   0028E6  5005               	movf	___fladd@a^0,w,c
  7840   0028E8  5E01               	subwf	___fladd@b^0,f,c
  7841   0028EA  5006               	movf	(___fladd@a+1)^0,w,c
  7842   0028EC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7843   0028EE  5007               	movf	(___fladd@a+2)^0,w,c
  7844   0028F0  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7845   0028F2  5008               	movf	(___fladd@a+3)^0,w,c
  7846   0028F4  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7847   0028F6                     l1067:
  7848   0028F6  5001               	movf	___fladd@b^0,w,c
  7849   0028F8  1002               	iorwf	(___fladd@b+1)^0,w,c
  7850   0028FA  1003               	iorwf	(___fladd@b+2)^0,w,c
  7851   0028FC  1004               	iorwf	(___fladd@b+3)^0,w,c
  7852   0028FE  A4D8               	btfss	status,2,c
  7853   002900  EF84  F014         	goto	u2791
  7854   002904  EF86  F014         	goto	u2790
  7855   002908                     u2791:
  7856   002908  EFBB  F014         	goto	l3111
  7857   00290C                     u2790:
  7858   00290C  5010               	movf	___fladd@grs^0,w,c
  7859   00290E  A4D8               	btfss	status,2,c
  7860   002910  EF8C  F014         	goto	u2801
  7861   002914  EF8E  F014         	goto	u2800
  7862   002918                     u2801:
  7863   002918  EFBB  F014         	goto	l3111
  7864   00291C                     u2800:
  7865   00291C  0E00               	movlw	0
  7866   00291E  6E01               	movwf	?___fladd^0,c
  7867   002920  0E00               	movlw	0
  7868   002922  6E02               	movwf	(?___fladd+1)^0,c
  7869   002924  0E00               	movlw	0
  7870   002926  6E03               	movwf	(?___fladd+2)^0,c
  7871   002928  0E00               	movlw	0
  7872   00292A  6E04               	movwf	(?___fladd+3)^0,c
  7873   00292C  EF56  F015         	goto	l1059
  7874   002930                     l3095:
  7875   002930  90D8               	bcf	status,0,c
  7876   002932  3601               	rlcf	___fladd@b^0,f,c
  7877   002934  3602               	rlcf	(___fladd@b+1)^0,f,c
  7878   002936  3603               	rlcf	(___fladd@b+2)^0,f,c
  7879   002938  3604               	rlcf	(___fladd@b+3)^0,f,c
  7880   00293A  AE10               	btfss	___fladd@grs^0,7,c
  7881   00293C  EFA2  F014         	goto	u2811
  7882   002940  EFA4  F014         	goto	u2810
  7883   002944                     u2811:
  7884   002944  EFA5  F014         	goto	l3101
  7885   002948                     u2810:
  7886   002948  8001               	bsf	___fladd@b^0,0,c
  7887   00294A                     l3101:
  7888   00294A  A010               	btfss	___fladd@grs^0,0,c
  7889   00294C  EFAA  F014         	goto	u2821
  7890   002950  EFAC  F014         	goto	u2820
  7891   002954                     u2821:
  7892   002954  EFB0  F014         	goto	l3105
  7893   002958                     u2820:
  7894   002958  80D8               	bsf	status,0,c
  7895   00295A  3610               	rlcf	___fladd@grs^0,f,c
  7896   00295C  EFB2  F014         	goto	l3107
  7897   002960                     l3105:
  7898   002960  90D8               	bcf	status,0,c
  7899   002962  3610               	rlcf	___fladd@grs^0,f,c
  7900   002964                     l3107:
  7901   002964  500F               	movf	___fladd@bexp^0,w,c
  7902   002966  B4D8               	btfsc	status,2,c
  7903   002968  EFB8  F014         	goto	u2831
  7904   00296C  EFBA  F014         	goto	u2830
  7905   002970                     u2831:
  7906   002970  EFBB  F014         	goto	l3111
  7907   002974                     u2830:
  7908   002974  060F               	decf	___fladd@bexp^0,f,c
  7909   002976                     l3111:
  7910   002976  AE03               	btfss	(___fladd@b+2)^0,7,c
  7911   002978  EFC0  F014         	goto	u2841
  7912   00297C  EFC2  F014         	goto	u2840
  7913   002980                     u2841:
  7914   002980  EF98  F014         	goto	l3095
  7915   002984                     u2840:
  7916   002984                     l3113:
  7917   002984  0E00               	movlw	0
  7918   002986  6E0E               	movwf	___fladd@aexp^0,c
  7919   002988  AE10               	btfss	___fladd@grs^0,7,c
  7920   00298A  EFC9  F014         	goto	u2851
  7921   00298E  EFCB  F014         	goto	u2850
  7922   002992                     u2851:
  7923   002992  EFE3  F014         	goto	l1076
  7924   002996                     u2850:
  7925   002996  C010  F009         	movff	___fladd@grs,??___fladd
  7926   00299A  0E7F               	movlw	127
  7927   00299C  1609               	andwf	??___fladd^0,f,c
  7928   00299E  B4D8               	btfsc	status,2,c
  7929   0029A0  EFD4  F014         	goto	u2861
  7930   0029A4  EFD6  F014         	goto	u2860
  7931   0029A8                     u2861:
  7932   0029A8  EFDA  F014         	goto	l1077
  7933   0029AC                     u2860:
  7934   0029AC                     l3119:
  7935   0029AC  0E01               	movlw	1
  7936   0029AE  6E0E               	movwf	___fladd@aexp^0,c
  7937   0029B0  EFE3  F014         	goto	l1076
  7938   0029B4                     l1077:
  7939   0029B4  A001               	btfss	___fladd@b^0,0,c
  7940   0029B6  EFDF  F014         	goto	u2871
  7941   0029BA  EFE1  F014         	goto	u2870
  7942   0029BE                     u2871:
  7943   0029BE  EFE3  F014         	goto	l1076
  7944   0029C2                     u2870:
  7945   0029C2  EFD6  F014         	goto	l3119
  7946   0029C6                     l1076:
  7947   0029C6  500E               	movf	___fladd@aexp^0,w,c
  7948   0029C8  B4D8               	btfsc	status,2,c
  7949   0029CA  EFE9  F014         	goto	u2881
  7950   0029CE  EFEB  F014         	goto	u2880
  7951   0029D2                     u2881:
  7952   0029D2  EF16  F015         	goto	l3131
  7953   0029D6                     u2880:
  7954   0029D6  0E01               	movlw	1
  7955   0029D8  2601               	addwf	___fladd@b^0,f,c
  7956   0029DA  0E00               	movlw	0
  7957   0029DC  2202               	addwfc	(___fladd@b+1)^0,f,c
  7958   0029DE  2203               	addwfc	(___fladd@b+2)^0,f,c
  7959   0029E0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7960   0029E2  A004               	btfss	(___fladd@b+3)^0,0,c
  7961   0029E4  EFF6  F014         	goto	u2891
  7962   0029E8  EFF8  F014         	goto	u2890
  7963   0029EC                     u2891:
  7964   0029EC  EF16  F015         	goto	l3131
  7965   0029F0                     u2890:
  7966   0029F0  C001  F009         	movff	___fladd@b,??___fladd
  7967   0029F4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7968   0029F8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7969   0029FC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7970   002A00  340C               	rlcf	(??___fladd+3)^0,w,c
  7971   002A02  320C               	rrcf	(??___fladd+3)^0,f,c
  7972   002A04  320B               	rrcf	(??___fladd+2)^0,f,c
  7973   002A06  320A               	rrcf	(??___fladd+1)^0,f,c
  7974   002A08  3209               	rrcf	??___fladd^0,f,c
  7975   002A0A  C009  F001         	movff	??___fladd,___fladd@b
  7976   002A0E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7977   002A12  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7978   002A16  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7979   002A1A  280F               	incf	___fladd@bexp^0,w,c
  7980   002A1C  B4D8               	btfsc	status,2,c
  7981   002A1E  EF13  F015         	goto	u2901
  7982   002A22  EF15  F015         	goto	u2900
  7983   002A26                     u2901:
  7984   002A26  EF16  F015         	goto	l3131
  7985   002A2A                     u2900:
  7986   002A2A  2A0F               	incf	___fladd@bexp^0,f,c
  7987   002A2C                     l3131:
  7988   002A2C  280F               	incf	___fladd@bexp^0,w,c
  7989   002A2E  B4D8               	btfsc	status,2,c
  7990   002A30  EF1C  F015         	goto	u2911
  7991   002A34  EF1E  F015         	goto	u2910
  7992   002A38                     u2911:
  7993   002A38  EF26  F015         	goto	l3135
  7994   002A3C                     u2910:
  7995   002A3C  500F               	movf	___fladd@bexp^0,w,c
  7996   002A3E  A4D8               	btfss	status,2,c
  7997   002A40  EF24  F015         	goto	u2921
  7998   002A44  EF26  F015         	goto	u2920
  7999   002A48                     u2921:
  8000   002A48  EF38  F015         	goto	l3139
  8001   002A4C                     u2920:
  8002   002A4C                     l3135:
  8003   002A4C  0E00               	movlw	0
  8004   002A4E  6E01               	movwf	___fladd@b^0,c
  8005   002A50  0E00               	movlw	0
  8006   002A52  6E02               	movwf	(___fladd@b+1)^0,c
  8007   002A54  0E00               	movlw	0
  8008   002A56  6E03               	movwf	(___fladd@b+2)^0,c
  8009   002A58  0E00               	movlw	0
  8010   002A5A  6E04               	movwf	(___fladd@b+3)^0,c
  8011   002A5C  500F               	movf	___fladd@bexp^0,w,c
  8012   002A5E  A4D8               	btfss	status,2,c
  8013   002A60  EF34  F015         	goto	u2931
  8014   002A64  EF36  F015         	goto	u2930
  8015   002A68                     u2931:
  8016   002A68  EF38  F015         	goto	l3139
  8017   002A6C                     u2930:
  8018   002A6C  0E00               	movlw	0
  8019   002A6E  6E0D               	movwf	___fladd@signs^0,c
  8020   002A70                     l3139:
  8021   002A70  A00F               	btfss	___fladd@bexp^0,0,c
  8022   002A72  EF3D  F015         	goto	u2941
  8023   002A76  EF3F  F015         	goto	u2940
  8024   002A7A                     u2941:
  8025   002A7A  EF42  F015         	goto	l3143
  8026   002A7E                     u2940:
  8027   002A7E  8E03               	bsf	(___fladd@b+2)^0,7,c
  8028   002A80  EF43  F015         	goto	l3145
  8029   002A84                     l3143:
  8030   002A84  9E03               	bcf	(___fladd@b+2)^0,7,c
  8031   002A86                     l3145:
  8032   002A86  90D8               	bcf	status,0,c
  8033   002A88  300F               	rrcf	___fladd@bexp^0,w,c
  8034   002A8A  6E04               	movwf	(___fladd@b+3)^0,c
  8035   002A8C  AE0D               	btfss	___fladd@signs^0,7,c
  8036   002A8E  EF4B  F015         	goto	u2951
  8037   002A92  EF4D  F015         	goto	u2950
  8038   002A96                     u2951:
  8039   002A96  EF4E  F015         	goto	l3151
  8040   002A9A                     u2950:
  8041   002A9A  8E04               	bsf	(___fladd@b+3)^0,7,c
  8042   002A9C                     l3151:
  8043   002A9C  C001  F001         	movff	___fladd@b,?___fladd
  8044   002AA0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8045   002AA4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8046   002AA8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8047   002AAC                     l1059:
  8048   002AAC  0012               	return		;funcret
  8049   002AAE                     __end_of___fladd:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function ___flmul *****************
  8053 ;; Defined at:
  8054 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  b               4   58[COMRAM] unsigned char 
  8057 ;;  a               4   62[COMRAM] unsigned char 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  prod            4   77[COMRAM] struct .
  8060 ;;  grs             4   71[COMRAM] unsigned long 
  8061 ;;  temp            2   81[COMRAM] struct .
  8062 ;;  bexp            1   76[COMRAM] unsigned char 
  8063 ;;  aexp            1   75[COMRAM] unsigned char 
  8064 ;;  sign            1   70[COMRAM] unsigned char 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  4   58[COMRAM] unsigned char 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0, prodl, prodh
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8074 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;Total ram usage:       25 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_custom_floatmodulo
  8084 ;;		_RGB_to_HSV
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text35
  8089   002AAE                     __ptext35:
  8090                           	callstack 0
  8091   002AAE                     ___flmul:
  8092                           	callstack 27
  8093   002AAE  503E               	movf	(___flmul@b+3)^0,w,c
  8094   002AB0  0B80               	andlw	128
  8095   002AB2  6E47               	movwf	___flmul@sign^0,c
  8096   002AB4  503E               	movf	(___flmul@b+3)^0,w,c
  8097   002AB6  243E               	addwf	(___flmul@b+3)^0,w,c
  8098   002AB8  6E4D               	movwf	___flmul@bexp^0,c
  8099   002ABA  AE3D               	btfss	(___flmul@b+2)^0,7,c
  8100   002ABC  EF62  F015         	goto	u3211
  8101   002AC0  EF64  F015         	goto	u3210
  8102   002AC4                     u3211:
  8103   002AC4  EF65  F015         	goto	l3303
  8104   002AC8                     u3210:
  8105   002AC8  804D               	bsf	___flmul@bexp^0,0,c
  8106   002ACA                     l3303:
  8107   002ACA  504D               	movf	___flmul@bexp^0,w,c
  8108   002ACC  B4D8               	btfsc	status,2,c
  8109   002ACE  EF6B  F015         	goto	u3221
  8110   002AD2  EF6D  F015         	goto	u3220
  8111   002AD6                     u3221:
  8112   002AD6  EF80  F015         	goto	l3311
  8113   002ADA                     u3220:
  8114   002ADA  284D               	incf	___flmul@bexp^0,w,c
  8115   002ADC  A4D8               	btfss	status,2,c
  8116   002ADE  EF73  F015         	goto	u3231
  8117   002AE2  EF75  F015         	goto	u3230
  8118   002AE6                     u3231:
  8119   002AE6  EF7D  F015         	goto	l3309
  8120   002AEA                     u3230:
  8121   002AEA  0E00               	movlw	0
  8122   002AEC  6E3B               	movwf	___flmul@b^0,c
  8123   002AEE  0E00               	movlw	0
  8124   002AF0  6E3C               	movwf	(___flmul@b+1)^0,c
  8125   002AF2  0E00               	movlw	0
  8126   002AF4  6E3D               	movwf	(___flmul@b+2)^0,c
  8127   002AF6  0E00               	movlw	0
  8128   002AF8  6E3E               	movwf	(___flmul@b+3)^0,c
  8129   002AFA                     l3309:
  8130   002AFA  8E3D               	bsf	(___flmul@b+2)^0,7,c
  8131   002AFC  EF88  F015         	goto	l3313
  8132   002B00                     l3311:
  8133   002B00  0E00               	movlw	0
  8134   002B02  6E3B               	movwf	___flmul@b^0,c
  8135   002B04  0E00               	movlw	0
  8136   002B06  6E3C               	movwf	(___flmul@b+1)^0,c
  8137   002B08  0E00               	movlw	0
  8138   002B0A  6E3D               	movwf	(___flmul@b+2)^0,c
  8139   002B0C  0E00               	movlw	0
  8140   002B0E  6E3E               	movwf	(___flmul@b+3)^0,c
  8141   002B10                     l3313:
  8142   002B10  5042               	movf	(___flmul@a+3)^0,w,c
  8143   002B12  0B80               	andlw	128
  8144   002B14  1A47               	xorwf	___flmul@sign^0,f,c
  8145   002B16  5042               	movf	(___flmul@a+3)^0,w,c
  8146   002B18  2442               	addwf	(___flmul@a+3)^0,w,c
  8147   002B1A  6E4C               	movwf	___flmul@aexp^0,c
  8148   002B1C  AE41               	btfss	(___flmul@a+2)^0,7,c
  8149   002B1E  EF93  F015         	goto	u3241
  8150   002B22  EF95  F015         	goto	u3240
  8151   002B26                     u3241:
  8152   002B26  EF96  F015         	goto	l3321
  8153   002B2A                     u3240:
  8154   002B2A  804C               	bsf	___flmul@aexp^0,0,c
  8155   002B2C                     l3321:
  8156   002B2C  504C               	movf	___flmul@aexp^0,w,c
  8157   002B2E  B4D8               	btfsc	status,2,c
  8158   002B30  EF9C  F015         	goto	u3251
  8159   002B34  EF9E  F015         	goto	u3250
  8160   002B38                     u3251:
  8161   002B38  EFB1  F015         	goto	l3329
  8162   002B3C                     u3250:
  8163   002B3C  284C               	incf	___flmul@aexp^0,w,c
  8164   002B3E  A4D8               	btfss	status,2,c
  8165   002B40  EFA4  F015         	goto	u3261
  8166   002B44  EFA6  F015         	goto	u3260
  8167   002B48                     u3261:
  8168   002B48  EFAE  F015         	goto	l3327
  8169   002B4C                     u3260:
  8170   002B4C  0E00               	movlw	0
  8171   002B4E  6E3F               	movwf	___flmul@a^0,c
  8172   002B50  0E00               	movlw	0
  8173   002B52  6E40               	movwf	(___flmul@a+1)^0,c
  8174   002B54  0E00               	movlw	0
  8175   002B56  6E41               	movwf	(___flmul@a+2)^0,c
  8176   002B58  0E00               	movlw	0
  8177   002B5A  6E42               	movwf	(___flmul@a+3)^0,c
  8178   002B5C                     l3327:
  8179   002B5C  8E41               	bsf	(___flmul@a+2)^0,7,c
  8180   002B5E  EFB9  F015         	goto	l1136
  8181   002B62                     l3329:
  8182   002B62  0E00               	movlw	0
  8183   002B64  6E3F               	movwf	___flmul@a^0,c
  8184   002B66  0E00               	movlw	0
  8185   002B68  6E40               	movwf	(___flmul@a+1)^0,c
  8186   002B6A  0E00               	movlw	0
  8187   002B6C  6E41               	movwf	(___flmul@a+2)^0,c
  8188   002B6E  0E00               	movlw	0
  8189   002B70  6E42               	movwf	(___flmul@a+3)^0,c
  8190   002B72                     l1136:
  8191   002B72  504C               	movf	___flmul@aexp^0,w,c
  8192   002B74  B4D8               	btfsc	status,2,c
  8193   002B76  EFBF  F015         	goto	u3271
  8194   002B7A  EFC1  F015         	goto	u3270
  8195   002B7E                     u3271:
  8196   002B7E  EFC9  F015         	goto	l3333
  8197   002B82                     u3270:
  8198   002B82  504D               	movf	___flmul@bexp^0,w,c
  8199   002B84  A4D8               	btfss	status,2,c
  8200   002B86  EFC7  F015         	goto	u3281
  8201   002B8A  EFC9  F015         	goto	u3280
  8202   002B8E                     u3281:
  8203   002B8E  EFD3  F015         	goto	l3337
  8204   002B92                     u3280:
  8205   002B92                     l3333:
  8206   002B92  0E00               	movlw	0
  8207   002B94  6E3B               	movwf	?___flmul^0,c
  8208   002B96  0E00               	movlw	0
  8209   002B98  6E3C               	movwf	(?___flmul+1)^0,c
  8210   002B9A  0E00               	movlw	0
  8211   002B9C  6E3D               	movwf	(?___flmul+2)^0,c
  8212   002B9E  0E00               	movlw	0
  8213   002BA0  6E3E               	movwf	(?___flmul+3)^0,c
  8214   002BA2  EF6B  F017         	goto	l1140
  8215   002BA6                     l3337:
  8216   002BA6  5041               	movf	(___flmul@a+2)^0,w,c
  8217   002BA8  023B               	mulwf	___flmul@b^0,c
  8218   002BAA  CFF3 F052          	movff	prodl,___flmul@temp
  8219   002BAE  CFF4 F053          	movff	prodh,___flmul@temp+1
  8220   002BB2  5052               	movf	___flmul@temp^0,w,c
  8221   002BB4  6E48               	movwf	___flmul@grs^0,c
  8222   002BB6  6A49               	clrf	(___flmul@grs+1)^0,c
  8223   002BB8  6A4A               	clrf	(___flmul@grs+2)^0,c
  8224   002BBA  6A4B               	clrf	(___flmul@grs+3)^0,c
  8225   002BBC  5053               	movf	(___flmul@temp+1)^0,w,c
  8226   002BBE  6E4E               	movwf	___flmul@prod^0,c
  8227   002BC0  6A4F               	clrf	(___flmul@prod+1)^0,c
  8228   002BC2  6A50               	clrf	(___flmul@prod+2)^0,c
  8229   002BC4  6A51               	clrf	(___flmul@prod+3)^0,c
  8230   002BC6  5040               	movf	(___flmul@a+1)^0,w,c
  8231   002BC8  023C               	mulwf	(___flmul@b+1)^0,c
  8232   002BCA  CFF3 F052          	movff	prodl,___flmul@temp
  8233   002BCE  CFF4 F053          	movff	prodh,___flmul@temp+1
  8234   002BD2  5052               	movf	___flmul@temp^0,w,c
  8235   002BD4  2648               	addwf	___flmul@grs^0,f,c
  8236   002BD6  0E00               	movlw	0
  8237   002BD8  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8238   002BDA  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8239   002BDC  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8240   002BDE  5053               	movf	(___flmul@temp+1)^0,w,c
  8241   002BE0  264E               	addwf	___flmul@prod^0,f,c
  8242   002BE2  0E00               	movlw	0
  8243   002BE4  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8244   002BE6  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8245   002BE8  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8246   002BEA  503F               	movf	___flmul@a^0,w,c
  8247   002BEC  023D               	mulwf	(___flmul@b+2)^0,c
  8248   002BEE  CFF3 F052          	movff	prodl,___flmul@temp
  8249   002BF2  CFF4 F053          	movff	prodh,___flmul@temp+1
  8250   002BF6  5052               	movf	___flmul@temp^0,w,c
  8251   002BF8  2648               	addwf	___flmul@grs^0,f,c
  8252   002BFA  0E00               	movlw	0
  8253   002BFC  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8254   002BFE  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8255   002C00  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8256   002C02  5053               	movf	(___flmul@temp+1)^0,w,c
  8257   002C04  264E               	addwf	___flmul@prod^0,f,c
  8258   002C06  0E00               	movlw	0
  8259   002C08  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8260   002C0A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8261   002C0C  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8262   002C0E  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8263   002C12  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8264   002C16  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8265   002C1A  6A48               	clrf	___flmul@grs^0,c
  8266   002C1C  503F               	movf	___flmul@a^0,w,c
  8267   002C1E  023C               	mulwf	(___flmul@b+1)^0,c
  8268   002C20  CFF3 F052          	movff	prodl,___flmul@temp
  8269   002C24  CFF4 F053          	movff	prodh,___flmul@temp+1
  8270   002C28  5052               	movf	___flmul@temp^0,w,c
  8271   002C2A  2648               	addwf	___flmul@grs^0,f,c
  8272   002C2C  5053               	movf	(___flmul@temp+1)^0,w,c
  8273   002C2E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8274   002C30  0E00               	movlw	0
  8275   002C32  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8276   002C34  0E00               	movlw	0
  8277   002C36  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8278   002C38  5040               	movf	(___flmul@a+1)^0,w,c
  8279   002C3A  023B               	mulwf	___flmul@b^0,c
  8280   002C3C  CFF3 F052          	movff	prodl,___flmul@temp
  8281   002C40  CFF4 F053          	movff	prodh,___flmul@temp+1
  8282   002C44  5052               	movf	___flmul@temp^0,w,c
  8283   002C46  2648               	addwf	___flmul@grs^0,f,c
  8284   002C48  5053               	movf	(___flmul@temp+1)^0,w,c
  8285   002C4A  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8286   002C4C  0E00               	movlw	0
  8287   002C4E  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8288   002C50  0E00               	movlw	0
  8289   002C52  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8290   002C54  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8291   002C58  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8292   002C5C  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8293   002C60  6A48               	clrf	___flmul@grs^0,c
  8294   002C62  503F               	movf	___flmul@a^0,w,c
  8295   002C64  023B               	mulwf	___flmul@b^0,c
  8296   002C66  CFF3 F052          	movff	prodl,___flmul@temp
  8297   002C6A  CFF4 F053          	movff	prodh,___flmul@temp+1
  8298   002C6E  5052               	movf	___flmul@temp^0,w,c
  8299   002C70  2648               	addwf	___flmul@grs^0,f,c
  8300   002C72  5053               	movf	(___flmul@temp+1)^0,w,c
  8301   002C74  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8302   002C76  0E00               	movlw	0
  8303   002C78  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8304   002C7A  0E00               	movlw	0
  8305   002C7C  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8306   002C7E  5041               	movf	(___flmul@a+2)^0,w,c
  8307   002C80  023C               	mulwf	(___flmul@b+1)^0,c
  8308   002C82  CFF3 F052          	movff	prodl,___flmul@temp
  8309   002C86  CFF4 F053          	movff	prodh,___flmul@temp+1
  8310   002C8A  5052               	movf	___flmul@temp^0,w,c
  8311   002C8C  264E               	addwf	___flmul@prod^0,f,c
  8312   002C8E  5053               	movf	(___flmul@temp+1)^0,w,c
  8313   002C90  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8314   002C92  0E00               	movlw	0
  8315   002C94  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8316   002C96  0E00               	movlw	0
  8317   002C98  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8318   002C9A  5040               	movf	(___flmul@a+1)^0,w,c
  8319   002C9C  023D               	mulwf	(___flmul@b+2)^0,c
  8320   002C9E  CFF3 F052          	movff	prodl,___flmul@temp
  8321   002CA2  CFF4 F053          	movff	prodh,___flmul@temp+1
  8322   002CA6  5052               	movf	___flmul@temp^0,w,c
  8323   002CA8  264E               	addwf	___flmul@prod^0,f,c
  8324   002CAA  5053               	movf	(___flmul@temp+1)^0,w,c
  8325   002CAC  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8326   002CAE  0E00               	movlw	0
  8327   002CB0  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8328   002CB2  0E00               	movlw	0
  8329   002CB4  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8330   002CB6  5041               	movf	(___flmul@a+2)^0,w,c
  8331   002CB8  023D               	mulwf	(___flmul@b+2)^0,c
  8332   002CBA  CFF3 F052          	movff	prodl,___flmul@temp
  8333   002CBE  CFF4 F053          	movff	prodh,___flmul@temp+1
  8334   002CC2  5052               	movf	___flmul@temp^0,w,c
  8335   002CC4  6E43               	movwf	??___flmul^0,c
  8336   002CC6  5053               	movf	(___flmul@temp+1)^0,w,c
  8337   002CC8  6E44               	movwf	(??___flmul+1)^0,c
  8338   002CCA  6A45               	clrf	(??___flmul+2)^0,c
  8339   002CCC  6A46               	clrf	(??___flmul+3)^0,c
  8340   002CCE  C045  F046         	movff	??___flmul+2,??___flmul+3
  8341   002CD2  C044  F045         	movff	??___flmul+1,??___flmul+2
  8342   002CD6  C043  F044         	movff	??___flmul,??___flmul+1
  8343   002CDA  6A43               	clrf	??___flmul^0,c
  8344   002CDC  5043               	movf	??___flmul^0,w,c
  8345   002CDE  264E               	addwf	___flmul@prod^0,f,c
  8346   002CE0  5044               	movf	(??___flmul+1)^0,w,c
  8347   002CE2  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8348   002CE4  5045               	movf	(??___flmul+2)^0,w,c
  8349   002CE6  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8350   002CE8  5046               	movf	(??___flmul+3)^0,w,c
  8351   002CEA  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8352   002CEC  C048  F043         	movff	___flmul@grs,??___flmul
  8353   002CF0  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  8354   002CF4  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  8355   002CF8  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  8356   002CFC  0E19               	movlw	25
  8357   002CFE  EF86  F016         	goto	u3290
  8358   002D02                     u3295:
  8359   002D02  90D8               	bcf	status,0,c
  8360   002D04  3246               	rrcf	(??___flmul+3)^0,f,c
  8361   002D06  3245               	rrcf	(??___flmul+2)^0,f,c
  8362   002D08  3244               	rrcf	(??___flmul+1)^0,f,c
  8363   002D0A  3243               	rrcf	??___flmul^0,f,c
  8364   002D0C                     u3290:
  8365   002D0C  2EE8               	decfsz	wreg,f,c
  8366   002D0E  EF81  F016         	goto	u3295
  8367   002D12  5043               	movf	??___flmul^0,w,c
  8368   002D14  264E               	addwf	___flmul@prod^0,f,c
  8369   002D16  5044               	movf	(??___flmul+1)^0,w,c
  8370   002D18  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8371   002D1A  5045               	movf	(??___flmul+2)^0,w,c
  8372   002D1C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8373   002D1E  5046               	movf	(??___flmul+3)^0,w,c
  8374   002D20  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8375   002D22  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8376   002D26  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8377   002D2A  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8378   002D2E  6A48               	clrf	___flmul@grs^0,c
  8379   002D30  504C               	movf	___flmul@aexp^0,w,c
  8380   002D32  C04D  F043         	movff	___flmul@bexp,??___flmul
  8381   002D36  6A44               	clrf	(??___flmul+1)^0,c
  8382   002D38  2643               	addwf	??___flmul^0,f,c
  8383   002D3A  0E00               	movlw	0
  8384   002D3C  2244               	addwfc	(??___flmul+1)^0,f,c
  8385   002D3E  0E82               	movlw	130
  8386   002D40  2443               	addwf	??___flmul^0,w,c
  8387   002D42  6E52               	movwf	___flmul@temp^0,c
  8388   002D44  0EFF               	movlw	255
  8389   002D46  2044               	addwfc	(??___flmul+1)^0,w,c
  8390   002D48  6E53               	movwf	(___flmul@temp+1)^0,c
  8391   002D4A  EFBC  F016         	goto	l3385
  8392   002D4E                     l3379:
  8393   002D4E  90D8               	bcf	status,0,c
  8394   002D50  364E               	rlcf	___flmul@prod^0,f,c
  8395   002D52  364F               	rlcf	(___flmul@prod+1)^0,f,c
  8396   002D54  3650               	rlcf	(___flmul@prod+2)^0,f,c
  8397   002D56  3651               	rlcf	(___flmul@prod+3)^0,f,c
  8398   002D58  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8399   002D5A  EFB1  F016         	goto	u3301
  8400   002D5E  EFB3  F016         	goto	u3300
  8401   002D62                     u3301:
  8402   002D62  EFB4  F016         	goto	l1143
  8403   002D66                     u3300:
  8404   002D66  804E               	bsf	___flmul@prod^0,0,c
  8405   002D68                     l1143:
  8406   002D68  90D8               	bcf	status,0,c
  8407   002D6A  3648               	rlcf	___flmul@grs^0,f,c
  8408   002D6C  3649               	rlcf	(___flmul@grs+1)^0,f,c
  8409   002D6E  364A               	rlcf	(___flmul@grs+2)^0,f,c
  8410   002D70  364B               	rlcf	(___flmul@grs+3)^0,f,c
  8411   002D72  0652               	decf	___flmul@temp^0,f,c
  8412   002D74  A0D8               	btfss	status,0,c
  8413   002D76  0653               	decf	(___flmul@temp+1)^0,f,c
  8414   002D78                     l3385:
  8415   002D78  AE50               	btfss	(___flmul@prod+2)^0,7,c
  8416   002D7A  EFC1  F016         	goto	u3311
  8417   002D7E  EFC3  F016         	goto	u3310
  8418   002D82                     u3311:
  8419   002D82  EFA7  F016         	goto	l3379
  8420   002D86                     u3310:
  8421   002D86  0E00               	movlw	0
  8422   002D88  6E4C               	movwf	___flmul@aexp^0,c
  8423   002D8A  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8424   002D8C  EFCA  F016         	goto	u3321
  8425   002D90  EFCC  F016         	goto	u3320
  8426   002D94                     u3321:
  8427   002D94  EFF0  F016         	goto	l1145
  8428   002D98                     u3320:
  8429   002D98  0EFF               	movlw	255
  8430   002D9A  1448               	andwf	___flmul@grs^0,w,c
  8431   002D9C  6E43               	movwf	??___flmul^0,c
  8432   002D9E  0EFF               	movlw	255
  8433   002DA0  1449               	andwf	(___flmul@grs+1)^0,w,c
  8434   002DA2  6E44               	movwf	(??___flmul+1)^0,c
  8435   002DA4  0EFF               	movlw	255
  8436   002DA6  144A               	andwf	(___flmul@grs+2)^0,w,c
  8437   002DA8  6E45               	movwf	(??___flmul+2)^0,c
  8438   002DAA  0E7F               	movlw	127
  8439   002DAC  144B               	andwf	(___flmul@grs+3)^0,w,c
  8440   002DAE  6E46               	movwf	(??___flmul+3)^0,c
  8441   002DB0  5043               	movf	??___flmul^0,w,c
  8442   002DB2  1044               	iorwf	(??___flmul+1)^0,w,c
  8443   002DB4  1045               	iorwf	(??___flmul+2)^0,w,c
  8444   002DB6  1046               	iorwf	(??___flmul+3)^0,w,c
  8445   002DB8  B4D8               	btfsc	status,2,c
  8446   002DBA  EFE1  F016         	goto	u3331
  8447   002DBE  EFE3  F016         	goto	u3330
  8448   002DC2                     u3331:
  8449   002DC2  EFE7  F016         	goto	l1146
  8450   002DC6                     u3330:
  8451   002DC6                     l3393:
  8452   002DC6  0E01               	movlw	1
  8453   002DC8  6E4C               	movwf	___flmul@aexp^0,c
  8454   002DCA  EFF0  F016         	goto	l1145
  8455   002DCE                     l1146:
  8456   002DCE  A04E               	btfss	___flmul@prod^0,0,c
  8457   002DD0  EFEC  F016         	goto	u3341
  8458   002DD4  EFEE  F016         	goto	u3340
  8459   002DD8                     u3341:
  8460   002DD8  EFF0  F016         	goto	l1145
  8461   002DDC                     u3340:
  8462   002DDC  EFE3  F016         	goto	l3393
  8463   002DE0                     l1145:
  8464   002DE0  504C               	movf	___flmul@aexp^0,w,c
  8465   002DE2  B4D8               	btfsc	status,2,c
  8466   002DE4  EFF6  F016         	goto	u3351
  8467   002DE8  EFF8  F016         	goto	u3350
  8468   002DEC                     u3351:
  8469   002DEC  EF1C  F017         	goto	l3405
  8470   002DF0                     u3350:
  8471   002DF0  0E01               	movlw	1
  8472   002DF2  264E               	addwf	___flmul@prod^0,f,c
  8473   002DF4  0E00               	movlw	0
  8474   002DF6  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8475   002DF8  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8476   002DFA  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8477   002DFC  A051               	btfss	(___flmul@prod+3)^0,0,c
  8478   002DFE  EF03  F017         	goto	u3361
  8479   002E02  EF05  F017         	goto	u3360
  8480   002E06                     u3361:
  8481   002E06  EF1C  F017         	goto	l3405
  8482   002E0A                     u3360:
  8483   002E0A  C04E  F043         	movff	___flmul@prod,??___flmul
  8484   002E0E  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  8485   002E12  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  8486   002E16  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  8487   002E1A  3446               	rlcf	(??___flmul+3)^0,w,c
  8488   002E1C  3246               	rrcf	(??___flmul+3)^0,f,c
  8489   002E1E  3245               	rrcf	(??___flmul+2)^0,f,c
  8490   002E20  3244               	rrcf	(??___flmul+1)^0,f,c
  8491   002E22  3243               	rrcf	??___flmul^0,f,c
  8492   002E24  C043  F04E         	movff	??___flmul,___flmul@prod
  8493   002E28  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  8494   002E2C  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  8495   002E30  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  8496   002E34  4A52               	infsnz	___flmul@temp^0,f,c
  8497   002E36  2A53               	incf	(___flmul@temp+1)^0,f,c
  8498   002E38                     l3405:
  8499   002E38  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  8500   002E3A  EF27  F017         	goto	u3371
  8501   002E3E  5053               	movf	(___flmul@temp+1)^0,w,c
  8502   002E40  E108               	bnz	u3370
  8503   002E42  2852               	incf	___flmul@temp^0,w,c
  8504   002E44  A0D8               	btfss	status,0,c
  8505   002E46  EF27  F017         	goto	u3371
  8506   002E4A  EF29  F017         	goto	u3370
  8507   002E4E                     u3371:
  8508   002E4E  EF33  F017         	goto	l3409
  8509   002E52                     u3370:
  8510   002E52  0E00               	movlw	0
  8511   002E54  6E4E               	movwf	___flmul@prod^0,c
  8512   002E56  0E00               	movlw	0
  8513   002E58  6E4F               	movwf	(___flmul@prod+1)^0,c
  8514   002E5A  0E80               	movlw	128
  8515   002E5C  6E50               	movwf	(___flmul@prod+2)^0,c
  8516   002E5E  0E7F               	movlw	127
  8517   002E60  6E51               	movwf	(___flmul@prod+3)^0,c
  8518   002E62  EF61  F017         	goto	l3421
  8519   002E66                     l3409:
  8520   002E66  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  8521   002E68  EF40  F017         	goto	u3380
  8522   002E6C  5053               	movf	(___flmul@temp+1)^0,w,c
  8523   002E6E  E106               	bnz	u3381
  8524   002E70  0452               	decf	___flmul@temp^0,w,c
  8525   002E72  B0D8               	btfsc	status,0,c
  8526   002E74  EF3E  F017         	goto	u3381
  8527   002E78  EF40  F017         	goto	u3380
  8528   002E7C                     u3381:
  8529   002E7C  EF4C  F017         	goto	l1153
  8530   002E80                     u3380:
  8531   002E80  0E00               	movlw	0
  8532   002E82  6E4E               	movwf	___flmul@prod^0,c
  8533   002E84  0E00               	movlw	0
  8534   002E86  6E4F               	movwf	(___flmul@prod+1)^0,c
  8535   002E88  0E00               	movlw	0
  8536   002E8A  6E50               	movwf	(___flmul@prod+2)^0,c
  8537   002E8C  0E00               	movlw	0
  8538   002E8E  6E51               	movwf	(___flmul@prod+3)^0,c
  8539   002E90  0E00               	movlw	0
  8540   002E92  6E47               	movwf	___flmul@sign^0,c
  8541   002E94  EF61  F017         	goto	l3421
  8542   002E98                     l1153:
  8543   002E98  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  8544   002E9C  0EFF               	movlw	255
  8545   002E9E  164E               	andwf	___flmul@prod^0,f,c
  8546   002EA0  0EFF               	movlw	255
  8547   002EA2  164F               	andwf	(___flmul@prod+1)^0,f,c
  8548   002EA4  0E7F               	movlw	127
  8549   002EA6  1650               	andwf	(___flmul@prod+2)^0,f,c
  8550   002EA8  0E00               	movlw	0
  8551   002EAA  1651               	andwf	(___flmul@prod+3)^0,f,c
  8552   002EAC  A04D               	btfss	___flmul@bexp^0,0,c
  8553   002EAE  EF5B  F017         	goto	u3391
  8554   002EB2  EF5D  F017         	goto	u3390
  8555   002EB6                     u3391:
  8556   002EB6  EF5E  F017         	goto	l3419
  8557   002EBA                     u3390:
  8558   002EBA  8E50               	bsf	(___flmul@prod+2)^0,7,c
  8559   002EBC                     l3419:
  8560   002EBC  90D8               	bcf	status,0,c
  8561   002EBE  304D               	rrcf	___flmul@bexp^0,w,c
  8562   002EC0  6E51               	movwf	(___flmul@prod+3)^0,c
  8563   002EC2                     l3421:
  8564   002EC2  5047               	movf	___flmul@sign^0,w,c
  8565   002EC4  1251               	iorwf	(___flmul@prod+3)^0,f,c
  8566   002EC6  C04E  F03B         	movff	___flmul@prod,?___flmul
  8567   002ECA  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  8568   002ECE  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  8569   002ED2  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  8570   002ED6                     l1140:
  8571   002ED6  0012               	return		;funcret
  8572   002ED8                     __end_of___flmul:
  8573                           	callstack 0
  8574                           
  8575 ;; *************** function ___fleq *****************
  8576 ;; Defined at:
  8577 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  ff1             4    0[COMRAM] unsigned char 
  8580 ;;  ff2             4    4[COMRAM] unsigned char 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;		None               void
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8592 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;Total ram usage:       12 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_custom_floatmodulo
  8602 ;;		_RGB_to_HSV
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text36
  8607   00446A                     __ptext36:
  8608                           	callstack 0
  8609   00446A                     ___fleq:
  8610                           	callstack 27
  8611   00446A  0E00               	movlw	0
  8612   00446C  1401               	andwf	___fleq@ff1^0,w,c
  8613   00446E  6E09               	movwf	??___fleq^0,c
  8614   004470  0E00               	movlw	0
  8615   004472  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8616   004474  6E0A               	movwf	(??___fleq+1)^0,c
  8617   004476  0E80               	movlw	128
  8618   004478  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8619   00447A  6E0B               	movwf	(??___fleq+2)^0,c
  8620   00447C  0E7F               	movlw	127
  8621   00447E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8622   004480  6E0C               	movwf	(??___fleq+3)^0,c
  8623   004482  5009               	movf	??___fleq^0,w,c
  8624   004484  100A               	iorwf	(??___fleq+1)^0,w,c
  8625   004486  100B               	iorwf	(??___fleq+2)^0,w,c
  8626   004488  100C               	iorwf	(??___fleq+3)^0,w,c
  8627   00448A  A4D8               	btfss	status,2,c
  8628   00448C  EF4A  F022         	goto	u3401
  8629   004490  EF4C  F022         	goto	u3400
  8630   004494                     u3401:
  8631   004494  EF54  F022         	goto	l3437
  8632   004498                     u3400:
  8633   004498  0E00               	movlw	0
  8634   00449A  6E01               	movwf	___fleq@ff1^0,c
  8635   00449C  0E00               	movlw	0
  8636   00449E  6E02               	movwf	(___fleq@ff1+1)^0,c
  8637   0044A0  0E00               	movlw	0
  8638   0044A2  6E03               	movwf	(___fleq@ff1+2)^0,c
  8639   0044A4  0E00               	movlw	0
  8640   0044A6  6E04               	movwf	(___fleq@ff1+3)^0,c
  8641   0044A8                     l3437:
  8642   0044A8  0E00               	movlw	0
  8643   0044AA  1405               	andwf	___fleq@ff2^0,w,c
  8644   0044AC  6E09               	movwf	??___fleq^0,c
  8645   0044AE  0E00               	movlw	0
  8646   0044B0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8647   0044B2  6E0A               	movwf	(??___fleq+1)^0,c
  8648   0044B4  0E80               	movlw	128
  8649   0044B6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8650   0044B8  6E0B               	movwf	(??___fleq+2)^0,c
  8651   0044BA  0E7F               	movlw	127
  8652   0044BC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8653   0044BE  6E0C               	movwf	(??___fleq+3)^0,c
  8654   0044C0  5009               	movf	??___fleq^0,w,c
  8655   0044C2  100A               	iorwf	(??___fleq+1)^0,w,c
  8656   0044C4  100B               	iorwf	(??___fleq+2)^0,w,c
  8657   0044C6  100C               	iorwf	(??___fleq+3)^0,w,c
  8658   0044C8  A4D8               	btfss	status,2,c
  8659   0044CA  EF69  F022         	goto	u3411
  8660   0044CE  EF6B  F022         	goto	u3410
  8661   0044D2                     u3411:
  8662   0044D2  EF73  F022         	goto	l3441
  8663   0044D6                     u3410:
  8664   0044D6  0E00               	movlw	0
  8665   0044D8  6E05               	movwf	___fleq@ff2^0,c
  8666   0044DA  0E00               	movlw	0
  8667   0044DC  6E06               	movwf	(___fleq@ff2+1)^0,c
  8668   0044DE  0E00               	movlw	0
  8669   0044E0  6E07               	movwf	(___fleq@ff2+2)^0,c
  8670   0044E2  0E00               	movlw	0
  8671   0044E4  6E08               	movwf	(___fleq@ff2+3)^0,c
  8672   0044E6                     l3441:
  8673   0044E6  5005               	movf	___fleq@ff2^0,w,c
  8674   0044E8  1801               	xorwf	___fleq@ff1^0,w,c
  8675   0044EA  E10F               	bnz	u3420
  8676   0044EC  5006               	movf	(___fleq@ff2+1)^0,w,c
  8677   0044EE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8678   0044F0  E10C               	bnz	u3420
  8679   0044F2  5007               	movf	(___fleq@ff2+2)^0,w,c
  8680   0044F4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8681   0044F6  E109               	bnz	u3420
  8682   0044F8  5008               	movf	(___fleq@ff2+3)^0,w,c
  8683   0044FA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8684   0044FC  B4D8               	btfsc	status,2,c
  8685   0044FE  EF83  F022         	goto	u3421
  8686   004502  EF85  F022         	goto	u3420
  8687   004506                     u3421:
  8688   004506  EF88  F022         	goto	l3445
  8689   00450A                     u3420:
  8690   00450A  90D8               	bcf	status,0,c
  8691   00450C  EF89  F022         	goto	l781
  8692   004510                     l3445:
  8693   004510  80D8               	bsf	status,0,c
  8694   004512                     l781:
  8695   004512  0012               	return		;funcret
  8696   004514                     __end_of___fleq:
  8697                           	callstack 0
  8698                           
  8699 ;; *************** function ___fldiv *****************
  8700 ;; Defined at:
  8701 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  b               4   33[COMRAM] unsigned char 
  8704 ;;  a               4   37[COMRAM] unsigned char 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  grs             4   52[COMRAM] unsigned long 
  8707 ;;  rem             4   45[COMRAM] unsigned long 
  8708 ;;  new_exp         2   50[COMRAM] short 
  8709 ;;  aexp            1   57[COMRAM] unsigned char 
  8710 ;;  bexp            1   56[COMRAM] unsigned char 
  8711 ;;  sign            1   49[COMRAM] unsigned char 
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  4   33[COMRAM] unsigned char 
  8714 ;; Registers used:
  8715 ;;		wreg, status,2, status,0
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8721 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;Total ram usage:       25 bytes
  8726 ;; Hardware stack levels used: 1
  8727 ;; This function calls:
  8728 ;;		Nothing
  8729 ;; This function is called by:
  8730 ;;		_custom_floatmodulo
  8731 ;;		_RGB_to_HSV
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text37
  8736   002ED8                     __ptext37:
  8737                           	callstack 0
  8738   002ED8                     ___fldiv:
  8739                           	callstack 27
  8740   002ED8  5025               	movf	(___fldiv@b+3)^0,w,c
  8741   002EDA  0B80               	andlw	128
  8742   002EDC  6E32               	movwf	___fldiv@sign^0,c
  8743   002EDE  5025               	movf	(___fldiv@b+3)^0,w,c
  8744   002EE0  2425               	addwf	(___fldiv@b+3)^0,w,c
  8745   002EE2  6E39               	movwf	___fldiv@bexp^0,c
  8746   002EE4  AE24               	btfss	(___fldiv@b+2)^0,7,c
  8747   002EE6  EF77  F017         	goto	u2981
  8748   002EEA  EF79  F017         	goto	u2980
  8749   002EEE                     u2981:
  8750   002EEE  EF7A  F017         	goto	l3165
  8751   002EF2                     u2980:
  8752   002EF2  8039               	bsf	___fldiv@bexp^0,0,c
  8753   002EF4                     l3165:
  8754   002EF4  5039               	movf	___fldiv@bexp^0,w,c
  8755   002EF6  B4D8               	btfsc	status,2,c
  8756   002EF8  EF80  F017         	goto	u2991
  8757   002EFC  EF82  F017         	goto	u2990
  8758   002F00                     u2991:
  8759   002F00  EF97  F017         	goto	l3175
  8760   002F04                     u2990:
  8761   002F04  2839               	incf	___fldiv@bexp^0,w,c
  8762   002F06  A4D8               	btfss	status,2,c
  8763   002F08  EF88  F017         	goto	u3001
  8764   002F0C  EF8A  F017         	goto	u3000
  8765   002F10                     u3001:
  8766   002F10  EF92  F017         	goto	l3171
  8767   002F14                     u3000:
  8768   002F14  0E00               	movlw	0
  8769   002F16  6E22               	movwf	___fldiv@b^0,c
  8770   002F18  0E00               	movlw	0
  8771   002F1A  6E23               	movwf	(___fldiv@b+1)^0,c
  8772   002F1C  0E00               	movlw	0
  8773   002F1E  6E24               	movwf	(___fldiv@b+2)^0,c
  8774   002F20  0E00               	movlw	0
  8775   002F22  6E25               	movwf	(___fldiv@b+3)^0,c
  8776   002F24                     l3171:
  8777   002F24  8E24               	bsf	(___fldiv@b+2)^0,7,c
  8778   002F26  0E00               	movlw	0
  8779   002F28  6E25               	movwf	(___fldiv@b+3)^0,c
  8780   002F2A  EF9F  F017         	goto	l3177
  8781   002F2E                     l3175:
  8782   002F2E  0E00               	movlw	0
  8783   002F30  6E22               	movwf	___fldiv@b^0,c
  8784   002F32  0E00               	movlw	0
  8785   002F34  6E23               	movwf	(___fldiv@b+1)^0,c
  8786   002F36  0E00               	movlw	0
  8787   002F38  6E24               	movwf	(___fldiv@b+2)^0,c
  8788   002F3A  0E00               	movlw	0
  8789   002F3C  6E25               	movwf	(___fldiv@b+3)^0,c
  8790   002F3E                     l3177:
  8791   002F3E  5029               	movf	(___fldiv@a+3)^0,w,c
  8792   002F40  0B80               	andlw	128
  8793   002F42  1A32               	xorwf	___fldiv@sign^0,f,c
  8794   002F44  5029               	movf	(___fldiv@a+3)^0,w,c
  8795   002F46  2429               	addwf	(___fldiv@a+3)^0,w,c
  8796   002F48  6E3A               	movwf	___fldiv@aexp^0,c
  8797   002F4A  AE28               	btfss	(___fldiv@a+2)^0,7,c
  8798   002F4C  EFAA  F017         	goto	u3011
  8799   002F50  EFAC  F017         	goto	u3010
  8800   002F54                     u3011:
  8801   002F54  EFAD  F017         	goto	l3185
  8802   002F58                     u3010:
  8803   002F58  803A               	bsf	___fldiv@aexp^0,0,c
  8804   002F5A                     l3185:
  8805   002F5A  503A               	movf	___fldiv@aexp^0,w,c
  8806   002F5C  B4D8               	btfsc	status,2,c
  8807   002F5E  EFB3  F017         	goto	u3021
  8808   002F62  EFB5  F017         	goto	u3020
  8809   002F66                     u3021:
  8810   002F66  EFCA  F017         	goto	l3195
  8811   002F6A                     u3020:
  8812   002F6A  283A               	incf	___fldiv@aexp^0,w,c
  8813   002F6C  A4D8               	btfss	status,2,c
  8814   002F6E  EFBB  F017         	goto	u3031
  8815   002F72  EFBD  F017         	goto	u3030
  8816   002F76                     u3031:
  8817   002F76  EFC5  F017         	goto	l3191
  8818   002F7A                     u3030:
  8819   002F7A  0E00               	movlw	0
  8820   002F7C  6E26               	movwf	___fldiv@a^0,c
  8821   002F7E  0E00               	movlw	0
  8822   002F80  6E27               	movwf	(___fldiv@a+1)^0,c
  8823   002F82  0E00               	movlw	0
  8824   002F84  6E28               	movwf	(___fldiv@a+2)^0,c
  8825   002F86  0E00               	movlw	0
  8826   002F88  6E29               	movwf	(___fldiv@a+3)^0,c
  8827   002F8A                     l3191:
  8828   002F8A  8E28               	bsf	(___fldiv@a+2)^0,7,c
  8829   002F8C  0E00               	movlw	0
  8830   002F8E  6E29               	movwf	(___fldiv@a+3)^0,c
  8831   002F90  EFD2  F017         	goto	l3197
  8832   002F94                     l3195:
  8833   002F94  0E00               	movlw	0
  8834   002F96  6E26               	movwf	___fldiv@a^0,c
  8835   002F98  0E00               	movlw	0
  8836   002F9A  6E27               	movwf	(___fldiv@a+1)^0,c
  8837   002F9C  0E00               	movlw	0
  8838   002F9E  6E28               	movwf	(___fldiv@a+2)^0,c
  8839   002FA0  0E00               	movlw	0
  8840   002FA2  6E29               	movwf	(___fldiv@a+3)^0,c
  8841   002FA4                     l3197:
  8842   002FA4  5026               	movf	___fldiv@a^0,w,c
  8843   002FA6  1027               	iorwf	(___fldiv@a+1)^0,w,c
  8844   002FA8  1028               	iorwf	(___fldiv@a+2)^0,w,c
  8845   002FAA  1029               	iorwf	(___fldiv@a+3)^0,w,c
  8846   002FAC  A4D8               	btfss	status,2,c
  8847   002FAE  EFDB  F017         	goto	u3041
  8848   002FB2  EFDD  F017         	goto	u3040
  8849   002FB6                     u3041:
  8850   002FB6  EFF5  F017         	goto	l3209
  8851   002FBA                     u3040:
  8852   002FBA  0E00               	movlw	0
  8853   002FBC  6E22               	movwf	___fldiv@b^0,c
  8854   002FBE  0E00               	movlw	0
  8855   002FC0  6E23               	movwf	(___fldiv@b+1)^0,c
  8856   002FC2  0E00               	movlw	0
  8857   002FC4  6E24               	movwf	(___fldiv@b+2)^0,c
  8858   002FC6  0E00               	movlw	0
  8859   002FC8  6E25               	movwf	(___fldiv@b+3)^0,c
  8860   002FCA  0E80               	movlw	128
  8861   002FCC  1224               	iorwf	(___fldiv@b+2)^0,f,c
  8862   002FCE  0E7F               	movlw	127
  8863   002FD0  1225               	iorwf	(___fldiv@b+3)^0,f,c
  8864   002FD2                     l3203:
  8865   002FD2  5032               	movf	___fldiv@sign^0,w,c
  8866   002FD4  1225               	iorwf	(___fldiv@b+3)^0,f,c
  8867   002FD6  C022  F022         	movff	___fldiv@b,?___fldiv
  8868   002FDA  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  8869   002FDE  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  8870   002FE2  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  8871   002FE6  EF38  F019         	goto	l1104
  8872   002FEA                     l3209:
  8873   002FEA  5039               	movf	___fldiv@bexp^0,w,c
  8874   002FEC  A4D8               	btfss	status,2,c
  8875   002FEE  EFFB  F017         	goto	u3051
  8876   002FF2  EFFD  F017         	goto	u3050
  8877   002FF6                     u3051:
  8878   002FF6  EF07  F018         	goto	l3217
  8879   002FFA                     u3050:
  8880   002FFA  0E00               	movlw	0
  8881   002FFC  6E22               	movwf	?___fldiv^0,c
  8882   002FFE  0E00               	movlw	0
  8883   003000  6E23               	movwf	(?___fldiv+1)^0,c
  8884   003002  0E00               	movlw	0
  8885   003004  6E24               	movwf	(?___fldiv+2)^0,c
  8886   003006  0E00               	movlw	0
  8887   003008  6E25               	movwf	(?___fldiv+3)^0,c
  8888   00300A  EF38  F019         	goto	l1104
  8889   00300E                     l3217:
  8890   00300E  503A               	movf	___fldiv@aexp^0,w,c
  8891   003010  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  8892   003014  6A2B               	clrf	(??___fldiv+1)^0,c
  8893   003016  5E2A               	subwf	??___fldiv^0,f,c
  8894   003018  0E00               	movlw	0
  8895   00301A  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  8896   00301C  0E7F               	movlw	127
  8897   00301E  242A               	addwf	??___fldiv^0,w,c
  8898   003020  6E33               	movwf	___fldiv@new_exp^0,c
  8899   003022  0E00               	movlw	0
  8900   003024  202B               	addwfc	(??___fldiv+1)^0,w,c
  8901   003026  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  8902   003028  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  8903   00302C  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  8904   003030  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  8905   003034  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  8906   003038  0E00               	movlw	0
  8907   00303A  6E22               	movwf	___fldiv@b^0,c
  8908   00303C  0E00               	movlw	0
  8909   00303E  6E23               	movwf	(___fldiv@b+1)^0,c
  8910   003040  0E00               	movlw	0
  8911   003042  6E24               	movwf	(___fldiv@b+2)^0,c
  8912   003044  0E00               	movlw	0
  8913   003046  6E25               	movwf	(___fldiv@b+3)^0,c
  8914   003048  0E00               	movlw	0
  8915   00304A  6E35               	movwf	___fldiv@grs^0,c
  8916   00304C  0E00               	movlw	0
  8917   00304E  6E36               	movwf	(___fldiv@grs+1)^0,c
  8918   003050  0E00               	movlw	0
  8919   003052  6E37               	movwf	(___fldiv@grs+2)^0,c
  8920   003054  0E00               	movlw	0
  8921   003056  6E38               	movwf	(___fldiv@grs+3)^0,c
  8922   003058  0E00               	movlw	0
  8923   00305A  6E3A               	movwf	___fldiv@aexp^0,c
  8924   00305C  EF68  F018         	goto	l1106
  8925   003060                     l3227:
  8926   003060  503A               	movf	___fldiv@aexp^0,w,c
  8927   003062  B4D8               	btfsc	status,2,c
  8928   003064  EF36  F018         	goto	u3061
  8929   003068  EF38  F018         	goto	u3060
  8930   00306C                     u3061:
  8931   00306C  EF4F  F018         	goto	l3235
  8932   003070                     u3060:
  8933   003070  90D8               	bcf	status,0,c
  8934   003072  362E               	rlcf	___fldiv@rem^0,f,c
  8935   003074  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  8936   003076  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  8937   003078  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  8938   00307A  90D8               	bcf	status,0,c
  8939   00307C  3622               	rlcf	___fldiv@b^0,f,c
  8940   00307E  3623               	rlcf	(___fldiv@b+1)^0,f,c
  8941   003080  3624               	rlcf	(___fldiv@b+2)^0,f,c
  8942   003082  3625               	rlcf	(___fldiv@b+3)^0,f,c
  8943   003084  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  8944   003086  EF47  F018         	goto	u3071
  8945   00308A  EF49  F018         	goto	u3070
  8946   00308E                     u3071:
  8947   00308E  EF4A  F018         	goto	l1109
  8948   003092                     u3070:
  8949   003092  8022               	bsf	___fldiv@b^0,0,c
  8950   003094                     l1109:
  8951   003094  90D8               	bcf	status,0,c
  8952   003096  3635               	rlcf	___fldiv@grs^0,f,c
  8953   003098  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  8954   00309A  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  8955   00309C  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  8956   00309E                     l3235:
  8957   00309E  5026               	movf	___fldiv@a^0,w,c
  8958   0030A0  5C2E               	subwf	___fldiv@rem^0,w,c
  8959   0030A2  5027               	movf	(___fldiv@a+1)^0,w,c
  8960   0030A4  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  8961   0030A6  5028               	movf	(___fldiv@a+2)^0,w,c
  8962   0030A8  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  8963   0030AA  5029               	movf	(___fldiv@a+3)^0,w,c
  8964   0030AC  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  8965   0030AE  A0D8               	btfss	status,0,c
  8966   0030B0  EF5C  F018         	goto	u3081
  8967   0030B4  EF5E  F018         	goto	u3080
  8968   0030B8                     u3081:
  8969   0030B8  EF67  F018         	goto	l3241
  8970   0030BC                     u3080:
  8971   0030BC  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  8972   0030BE  5026               	movf	___fldiv@a^0,w,c
  8973   0030C0  5E2E               	subwf	___fldiv@rem^0,f,c
  8974   0030C2  5027               	movf	(___fldiv@a+1)^0,w,c
  8975   0030C4  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  8976   0030C6  5028               	movf	(___fldiv@a+2)^0,w,c
  8977   0030C8  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  8978   0030CA  5029               	movf	(___fldiv@a+3)^0,w,c
  8979   0030CC  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  8980   0030CE                     l3241:
  8981   0030CE  2A3A               	incf	___fldiv@aexp^0,f,c
  8982   0030D0                     l1106:
  8983   0030D0  0E19               	movlw	25
  8984   0030D2  643A               	cpfsgt	___fldiv@aexp^0,c
  8985   0030D4  EF6E  F018         	goto	u3091
  8986   0030D8  EF70  F018         	goto	u3090
  8987   0030DC                     u3091:
  8988   0030DC  EF30  F018         	goto	l3227
  8989   0030E0                     u3090:
  8990   0030E0  502E               	movf	___fldiv@rem^0,w,c
  8991   0030E2  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  8992   0030E4  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  8993   0030E6  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  8994   0030E8  B4D8               	btfsc	status,2,c
  8995   0030EA  EF79  F018         	goto	u3101
  8996   0030EE  EF7B  F018         	goto	u3100
  8997   0030F2                     u3101:
  8998   0030F2  EF93  F018         	goto	l3253
  8999   0030F6                     u3100:
  9000   0030F6  8035               	bsf	___fldiv@grs^0,0,c
  9001   0030F8  EF93  F018         	goto	l3253
  9002   0030FC                     l3247:
  9003   0030FC  90D8               	bcf	status,0,c
  9004   0030FE  3622               	rlcf	___fldiv@b^0,f,c
  9005   003100  3623               	rlcf	(___fldiv@b+1)^0,f,c
  9006   003102  3624               	rlcf	(___fldiv@b+2)^0,f,c
  9007   003104  3625               	rlcf	(___fldiv@b+3)^0,f,c
  9008   003106  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9009   003108  EF88  F018         	goto	u3111
  9010   00310C  EF8A  F018         	goto	u3110
  9011   003110                     u3111:
  9012   003110  EF8B  F018         	goto	l1115
  9013   003114                     u3110:
  9014   003114  8022               	bsf	___fldiv@b^0,0,c
  9015   003116                     l1115:
  9016   003116  90D8               	bcf	status,0,c
  9017   003118  3635               	rlcf	___fldiv@grs^0,f,c
  9018   00311A  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  9019   00311C  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  9020   00311E  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  9021   003120  0633               	decf	___fldiv@new_exp^0,f,c
  9022   003122  A0D8               	btfss	status,0,c
  9023   003124  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  9024   003126                     l3253:
  9025   003126  AE24               	btfss	(___fldiv@b+2)^0,7,c
  9026   003128  EF98  F018         	goto	u3121
  9027   00312C  EF9A  F018         	goto	u3120
  9028   003130                     u3121:
  9029   003130  EF7E  F018         	goto	l3247
  9030   003134                     u3120:
  9031   003134  0E00               	movlw	0
  9032   003136  6E3A               	movwf	___fldiv@aexp^0,c
  9033   003138  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9034   00313A  EFA1  F018         	goto	u3131
  9035   00313E  EFA3  F018         	goto	u3130
  9036   003142                     u3131:
  9037   003142  EFC7  F018         	goto	l1117
  9038   003146                     u3130:
  9039   003146  0EFF               	movlw	255
  9040   003148  1435               	andwf	___fldiv@grs^0,w,c
  9041   00314A  6E2A               	movwf	??___fldiv^0,c
  9042   00314C  0EFF               	movlw	255
  9043   00314E  1436               	andwf	(___fldiv@grs+1)^0,w,c
  9044   003150  6E2B               	movwf	(??___fldiv+1)^0,c
  9045   003152  0EFF               	movlw	255
  9046   003154  1437               	andwf	(___fldiv@grs+2)^0,w,c
  9047   003156  6E2C               	movwf	(??___fldiv+2)^0,c
  9048   003158  0E7F               	movlw	127
  9049   00315A  1438               	andwf	(___fldiv@grs+3)^0,w,c
  9050   00315C  6E2D               	movwf	(??___fldiv+3)^0,c
  9051   00315E  502A               	movf	??___fldiv^0,w,c
  9052   003160  102B               	iorwf	(??___fldiv+1)^0,w,c
  9053   003162  102C               	iorwf	(??___fldiv+2)^0,w,c
  9054   003164  102D               	iorwf	(??___fldiv+3)^0,w,c
  9055   003166  B4D8               	btfsc	status,2,c
  9056   003168  EFB8  F018         	goto	u3141
  9057   00316C  EFBA  F018         	goto	u3140
  9058   003170                     u3141:
  9059   003170  EFBE  F018         	goto	l1118
  9060   003174                     u3140:
  9061   003174                     l3261:
  9062   003174  0E01               	movlw	1
  9063   003176  6E3A               	movwf	___fldiv@aexp^0,c
  9064   003178  EFC7  F018         	goto	l1117
  9065   00317C                     l1118:
  9066   00317C  A022               	btfss	___fldiv@b^0,0,c
  9067   00317E  EFC3  F018         	goto	u3151
  9068   003182  EFC5  F018         	goto	u3150
  9069   003186                     u3151:
  9070   003186  EFC7  F018         	goto	l1117
  9071   00318A                     u3150:
  9072   00318A  EFBA  F018         	goto	l3261
  9073   00318E                     l1117:
  9074   00318E  503A               	movf	___fldiv@aexp^0,w,c
  9075   003190  B4D8               	btfsc	status,2,c
  9076   003192  EFCD  F018         	goto	u3161
  9077   003196  EFCF  F018         	goto	u3160
  9078   00319A                     u3161:
  9079   00319A  EFF3  F018         	goto	l3273
  9080   00319E                     u3160:
  9081   00319E  0E01               	movlw	1
  9082   0031A0  2622               	addwf	___fldiv@b^0,f,c
  9083   0031A2  0E00               	movlw	0
  9084   0031A4  2223               	addwfc	(___fldiv@b+1)^0,f,c
  9085   0031A6  2224               	addwfc	(___fldiv@b+2)^0,f,c
  9086   0031A8  2225               	addwfc	(___fldiv@b+3)^0,f,c
  9087   0031AA  A025               	btfss	(___fldiv@b+3)^0,0,c
  9088   0031AC  EFDA  F018         	goto	u3171
  9089   0031B0  EFDC  F018         	goto	u3170
  9090   0031B4                     u3171:
  9091   0031B4  EFF3  F018         	goto	l3273
  9092   0031B8                     u3170:
  9093   0031B8  C022  F02A         	movff	___fldiv@b,??___fldiv
  9094   0031BC  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  9095   0031C0  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  9096   0031C4  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  9097   0031C8  342D               	rlcf	(??___fldiv+3)^0,w,c
  9098   0031CA  322D               	rrcf	(??___fldiv+3)^0,f,c
  9099   0031CC  322C               	rrcf	(??___fldiv+2)^0,f,c
  9100   0031CE  322B               	rrcf	(??___fldiv+1)^0,f,c
  9101   0031D0  322A               	rrcf	??___fldiv^0,f,c
  9102   0031D2  C02A  F022         	movff	??___fldiv,___fldiv@b
  9103   0031D6  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  9104   0031DA  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  9105   0031DE  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  9106   0031E2  4A33               	infsnz	___fldiv@new_exp^0,f,c
  9107   0031E4  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  9108   0031E6                     l3273:
  9109   0031E6  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9110   0031E8  EFFE  F018         	goto	u3181
  9111   0031EC  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9112   0031EE  E108               	bnz	u3180
  9113   0031F0  2833               	incf	___fldiv@new_exp^0,w,c
  9114   0031F2  A0D8               	btfss	status,0,c
  9115   0031F4  EFFE  F018         	goto	u3181
  9116   0031F8  EF00  F019         	goto	u3180
  9117   0031FC                     u3181:
  9118   0031FC  EF0B  F019         	goto	l3277
  9119   003200                     u3180:
  9120   003200  0E00               	movlw	0
  9121   003202  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9122   003204  6833               	setf	___fldiv@new_exp^0,c
  9123   003206  0E00               	movlw	0
  9124   003208  6E22               	movwf	___fldiv@b^0,c
  9125   00320A  0E00               	movlw	0
  9126   00320C  6E23               	movwf	(___fldiv@b+1)^0,c
  9127   00320E  0E00               	movlw	0
  9128   003210  6E24               	movwf	(___fldiv@b+2)^0,c
  9129   003212  0E00               	movlw	0
  9130   003214  6E25               	movwf	(___fldiv@b+3)^0,c
  9131   003216                     l3277:
  9132   003216  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9133   003218  EF18  F019         	goto	u3190
  9134   00321C  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9135   00321E  E106               	bnz	u3191
  9136   003220  0433               	decf	___fldiv@new_exp^0,w,c
  9137   003222  B0D8               	btfsc	status,0,c
  9138   003224  EF16  F019         	goto	u3191
  9139   003228  EF18  F019         	goto	u3190
  9140   00322C                     u3191:
  9141   00322C  EF26  F019         	goto	l3281
  9142   003230                     u3190:
  9143   003230  0E00               	movlw	0
  9144   003232  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9145   003234  0E00               	movlw	0
  9146   003236  6E33               	movwf	___fldiv@new_exp^0,c
  9147   003238  0E00               	movlw	0
  9148   00323A  6E22               	movwf	___fldiv@b^0,c
  9149   00323C  0E00               	movlw	0
  9150   00323E  6E23               	movwf	(___fldiv@b+1)^0,c
  9151   003240  0E00               	movlw	0
  9152   003242  6E24               	movwf	(___fldiv@b+2)^0,c
  9153   003244  0E00               	movlw	0
  9154   003246  6E25               	movwf	(___fldiv@b+3)^0,c
  9155   003248  0E00               	movlw	0
  9156   00324A  6E32               	movwf	___fldiv@sign^0,c
  9157   00324C                     l3281:
  9158   00324C  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  9159   003250  A039               	btfss	___fldiv@bexp^0,0,c
  9160   003252  EF2D  F019         	goto	u3201
  9161   003256  EF2F  F019         	goto	u3200
  9162   00325A                     u3201:
  9163   00325A  EF32  F019         	goto	l3287
  9164   00325E                     u3200:
  9165   00325E  8E24               	bsf	(___fldiv@b+2)^0,7,c
  9166   003260  EF33  F019         	goto	l3289
  9167   003264                     l3287:
  9168   003264  9E24               	bcf	(___fldiv@b+2)^0,7,c
  9169   003266                     l3289:
  9170   003266  90D8               	bcf	status,0,c
  9171   003268  3039               	rrcf	___fldiv@bexp^0,w,c
  9172   00326A  6E25               	movwf	(___fldiv@b+3)^0,c
  9173   00326C  EFE9  F017         	goto	l3203
  9174   003270                     l1104:
  9175   003270  0012               	return		;funcret
  9176   003272                     __end_of___fldiv:
  9177                           	callstack 0
  9178                           
  9179 ;; *************** function ___flge *****************
  9180 ;; Defined at:
  9181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  ff1             4    0[COMRAM] unsigned char 
  9184 ;;  ff2             4    4[COMRAM] unsigned char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;		None               void
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9196 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;Total ram usage:       12 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_RGB_to_HSV
  9206 ;;		_color_cardCheck
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text38
  9211   004136                     __ptext38:
  9212                           	callstack 0
  9213   004136                     ___flge:
  9214                           	callstack 29
  9215   004136  0E00               	movlw	0
  9216   004138  1401               	andwf	___flge@ff1^0,w,c
  9217   00413A  6E09               	movwf	??___flge^0,c
  9218   00413C  0E00               	movlw	0
  9219   00413E  1402               	andwf	(___flge@ff1+1)^0,w,c
  9220   004140  6E0A               	movwf	(??___flge+1)^0,c
  9221   004142  0E80               	movlw	128
  9222   004144  1403               	andwf	(___flge@ff1+2)^0,w,c
  9223   004146  6E0B               	movwf	(??___flge+2)^0,c
  9224   004148  0E7F               	movlw	127
  9225   00414A  1404               	andwf	(___flge@ff1+3)^0,w,c
  9226   00414C  6E0C               	movwf	(??___flge+3)^0,c
  9227   00414E  5009               	movf	??___flge^0,w,c
  9228   004150  100A               	iorwf	(??___flge+1)^0,w,c
  9229   004152  100B               	iorwf	(??___flge+2)^0,w,c
  9230   004154  100C               	iorwf	(??___flge+3)^0,w,c
  9231   004156  A4D8               	btfss	status,2,c
  9232   004158  EFB0  F020         	goto	u3731
  9233   00415C  EFB2  F020         	goto	u3730
  9234   004160                     u3731:
  9235   004160  EFBA  F020         	goto	l3645
  9236   004164                     u3730:
  9237   004164  0E00               	movlw	0
  9238   004166  6E01               	movwf	___flge@ff1^0,c
  9239   004168  0E00               	movlw	0
  9240   00416A  6E02               	movwf	(___flge@ff1+1)^0,c
  9241   00416C  0E00               	movlw	0
  9242   00416E  6E03               	movwf	(___flge@ff1+2)^0,c
  9243   004170  0E00               	movlw	0
  9244   004172  6E04               	movwf	(___flge@ff1+3)^0,c
  9245   004174                     l3645:
  9246   004174  0E00               	movlw	0
  9247   004176  1405               	andwf	___flge@ff2^0,w,c
  9248   004178  6E09               	movwf	??___flge^0,c
  9249   00417A  0E00               	movlw	0
  9250   00417C  1406               	andwf	(___flge@ff2+1)^0,w,c
  9251   00417E  6E0A               	movwf	(??___flge+1)^0,c
  9252   004180  0E80               	movlw	128
  9253   004182  1407               	andwf	(___flge@ff2+2)^0,w,c
  9254   004184  6E0B               	movwf	(??___flge+2)^0,c
  9255   004186  0E7F               	movlw	127
  9256   004188  1408               	andwf	(___flge@ff2+3)^0,w,c
  9257   00418A  6E0C               	movwf	(??___flge+3)^0,c
  9258   00418C  5009               	movf	??___flge^0,w,c
  9259   00418E  100A               	iorwf	(??___flge+1)^0,w,c
  9260   004190  100B               	iorwf	(??___flge+2)^0,w,c
  9261   004192  100C               	iorwf	(??___flge+3)^0,w,c
  9262   004194  A4D8               	btfss	status,2,c
  9263   004196  EFCF  F020         	goto	u3741
  9264   00419A  EFD1  F020         	goto	u3740
  9265   00419E                     u3741:
  9266   00419E  EFD9  F020         	goto	l3649
  9267   0041A2                     u3740:
  9268   0041A2  0E00               	movlw	0
  9269   0041A4  6E05               	movwf	___flge@ff2^0,c
  9270   0041A6  0E00               	movlw	0
  9271   0041A8  6E06               	movwf	(___flge@ff2+1)^0,c
  9272   0041AA  0E00               	movlw	0
  9273   0041AC  6E07               	movwf	(___flge@ff2+2)^0,c
  9274   0041AE  0E00               	movlw	0
  9275   0041B0  6E08               	movwf	(___flge@ff2+3)^0,c
  9276   0041B2                     l3649:
  9277   0041B2  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9278   0041B4  EFDE  F020         	goto	u3751
  9279   0041B8  EFE0  F020         	goto	u3750
  9280   0041BC                     u3751:
  9281   0041BC  EFE9  F020         	goto	l3653
  9282   0041C0                     u3750:
  9283   0041C0  6C01               	negf	___flge@ff1^0,c
  9284   0041C2  1E02               	comf	(___flge@ff1+1)^0,f,c
  9285   0041C4  B0D8               	btfsc	status,0,c
  9286   0041C6  2A02               	incf	(___flge@ff1+1)^0,f,c
  9287   0041C8  1E03               	comf	(___flge@ff1+2)^0,f,c
  9288   0041CA  B0D8               	btfsc	status,0,c
  9289   0041CC  2A03               	incf	(___flge@ff1+2)^0,f,c
  9290   0041CE  0E80               	movlw	128
  9291   0041D0  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9292   0041D2                     l3653:
  9293   0041D2  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9294   0041D4  EFEE  F020         	goto	u3761
  9295   0041D8  EFF0  F020         	goto	u3760
  9296   0041DC                     u3761:
  9297   0041DC  EFF9  F020         	goto	l787
  9298   0041E0                     u3760:
  9299   0041E0  6C05               	negf	___flge@ff2^0,c
  9300   0041E2  1E06               	comf	(___flge@ff2+1)^0,f,c
  9301   0041E4  B0D8               	btfsc	status,0,c
  9302   0041E6  2A06               	incf	(___flge@ff2+1)^0,f,c
  9303   0041E8  1E07               	comf	(___flge@ff2+2)^0,f,c
  9304   0041EA  B0D8               	btfsc	status,0,c
  9305   0041EC  2A07               	incf	(___flge@ff2+2)^0,f,c
  9306   0041EE  0E80               	movlw	128
  9307   0041F0  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9308   0041F2                     l787:
  9309   0041F2  0E00               	movlw	0
  9310   0041F4  1A01               	xorwf	___flge@ff1^0,f,c
  9311   0041F6  0E00               	movlw	0
  9312   0041F8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9313   0041FA  0E00               	movlw	0
  9314   0041FC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9315   0041FE  0E80               	movlw	128
  9316   004200  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  9317   004202  0E00               	movlw	0
  9318   004204  1A05               	xorwf	___flge@ff2^0,f,c
  9319   004206  0E00               	movlw	0
  9320   004208  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  9321   00420A  0E00               	movlw	0
  9322   00420C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  9323   00420E  0E80               	movlw	128
  9324   004210  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  9325   004212  5005               	movf	___flge@ff2^0,w,c
  9326   004214  5C01               	subwf	___flge@ff1^0,w,c
  9327   004216  5006               	movf	(___flge@ff2+1)^0,w,c
  9328   004218  5802               	subwfb	(___flge@ff1+1)^0,w,c
  9329   00421A  5007               	movf	(___flge@ff2+2)^0,w,c
  9330   00421C  5803               	subwfb	(___flge@ff1+2)^0,w,c
  9331   00421E  5008               	movf	(___flge@ff2+3)^0,w,c
  9332   004220  5804               	subwfb	(___flge@ff1+3)^0,w,c
  9333   004222  B0D8               	btfsc	status,0,c
  9334   004224  EF16  F021         	goto	u3771
  9335   004228  EF18  F021         	goto	u3770
  9336   00422C                     u3771:
  9337   00422C  EF1B  F021         	goto	l3659
  9338   004230                     u3770:
  9339   004230  90D8               	bcf	status,0,c
  9340   004232  EF1C  F021         	goto	l792
  9341   004236                     l3659:
  9342   004236  80D8               	bsf	status,0,c
  9343   004238                     l792:
  9344   004238  0012               	return		;funcret
  9345   00423A                     __end_of___flge:
  9346                           	callstack 0
  9347                           
  9348 ;; *************** function _backward *****************
  9349 ;; Defined at:
  9350 ;;		line 166 in file "dc_motor_v1.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;  Distance_Cal    1    wreg     unsigned char 
  9353 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9354 ;;		 -> motorL(9), 
  9355 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9356 ;;		 -> motorR(9), 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  Distance_Cal    1   26[COMRAM] unsigned char 
  9359 ;;  j               2   29[COMRAM] int 
  9360 ;;  i               2   27[COMRAM] int 
  9361 ;;  delay_time      2   33[COMRAM] int 
  9362 ;;  max_power       2   31[COMRAM] int 
  9363 ;;  acceleration    2    0        int 
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  1    wreg      void 
  9366 ;; Registers used:
  9367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;Total ram usage:       16 bytes
  9378 ;; Hardware stack levels used: 1
  9379 ;; Hardware stack levels required when called: 2
  9380 ;; This function calls:
  9381 ;;		___awdiv
  9382 ;;		_delay_ms_function
  9383 ;;		_setMotorPWM
  9384 ;; This function is called by:
  9385 ;;		_main
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text39
  9390   00391A                     __ptext39:
  9391                           	callstack 0
  9392   00391A                     _backward:
  9393                           	callstack 28
  9394                           
  9395                           ;incstack = 0
  9396                           ;backward@Distance_Calibration stored from wreg
  9397   00391A  6E1B               	movwf	backward@Distance_Calibration^0,c
  9398   00391C                     
  9399                           ;dc_motor_v1.c: 167:     mL->direction = 0;
  9400   00391C  EE20 F001          	lfsr	2,1
  9401   003920  5014               	movf	backward@mL^0,w,c
  9402   003922  26D9               	addwf	fsr2l,f,c
  9403   003924  5015               	movf	(backward@mL+1)^0,w,c
  9404   003926  22DA               	addwfc	fsr2h,f,c
  9405   003928  6ADF               	clrf	indf2,c
  9406                           
  9407                           ;dc_motor_v1.c: 168:     mR->direction = 0;
  9408   00392A  EE20 F001          	lfsr	2,1
  9409   00392E  5016               	movf	backward@mR^0,w,c
  9410   003930  26D9               	addwf	fsr2l,f,c
  9411   003932  5017               	movf	(backward@mR+1)^0,w,c
  9412   003934  22DA               	addwfc	fsr2h,f,c
  9413   003936  6ADF               	clrf	indf2,c
  9414   003938                     
  9415                           ;dc_motor_v1.c: 171:     int max_power = 20;
  9416   003938  0E00               	movlw	0
  9417   00393A  6E21               	movwf	(backward@max_power+1)^0,c
  9418   00393C  0E14               	movlw	20
  9419   00393E  6E20               	movwf	backward@max_power^0,c
  9420   003940                     
  9421                           ;dc_motor_v1.c: 173:     int delay_time = acceleration_time/max_power;
  9422   003940  0E00               	movlw	0
  9423   003942  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9424   003944  0E64               	movlw	100
  9425   003946  6E01               	movwf	___awdiv@dividend^0,c
  9426   003948  0E00               	movlw	0
  9427   00394A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9428   00394C  0E14               	movlw	20
  9429   00394E  6E03               	movwf	___awdiv@divisor^0,c
  9430   003950  EC1D  F021         	call	___awdiv	;wreg free
  9431   003954  C001  F022         	movff	?___awdiv,backward@delay_time
  9432   003958  C002  F023         	movff	?___awdiv+1,backward@delay_time+1
  9433   00395C                     
  9434                           ;dc_motor_v1.c: 176:     for(int i=0; i< max_power; i++){
  9435   00395C  0E00               	movlw	0
  9436   00395E  6E1D               	movwf	(backward@i+1)^0,c
  9437   003960  0E00               	movlw	0
  9438   003962  6E1C               	movwf	backward@i^0,c
  9439   003964  EFE0  F01C         	goto	l4771
  9440   003968                     l4761:
  9441                           
  9442                           ;dc_motor_v1.c: 177:         mL->power = mL->power + 1;
  9443   003968  C014  FFD9         	movff	backward@mL,fsr2l
  9444   00396C  C015  FFDA         	movff	backward@mL+1,fsr2h
  9445   003970  50DF               	movf	indf2,w,c
  9446   003972  6E18               	movwf	??_backward^0,c
  9447   003974  2818               	incf	??_backward^0,w,c
  9448   003976  C014  FFD9         	movff	backward@mL,fsr2l
  9449   00397A  C015  FFDA         	movff	backward@mL+1,fsr2h
  9450   00397E  6EDF               	movwf	indf2,c
  9451                           
  9452                           ;dc_motor_v1.c: 178:         mR->power = mR->power + 1 ;
  9453   003980  C016  FFD9         	movff	backward@mR,fsr2l
  9454   003984  C017  FFDA         	movff	backward@mR+1,fsr2h
  9455   003988  50DF               	movf	indf2,w,c
  9456   00398A  6E18               	movwf	??_backward^0,c
  9457   00398C  2818               	incf	??_backward^0,w,c
  9458   00398E  C016  FFD9         	movff	backward@mR,fsr2l
  9459   003992  C017  FFDA         	movff	backward@mR+1,fsr2h
  9460   003996  6EDF               	movwf	indf2,c
  9461   003998                     
  9462                           ;dc_motor_v1.c: 179:         setMotorPWM(mR);
  9463   003998  C016  F00E         	movff	backward@mR,setMotorPWM@m
  9464   00399C  C017  F00F         	movff	backward@mR+1,setMotorPWM@m+1
  9465   0039A0  EC2B  F01E         	call	_setMotorPWM	;wreg free
  9466   0039A4                     
  9467                           ;dc_motor_v1.c: 180:         setMotorPWM(mL);
  9468   0039A4  C014  F00E         	movff	backward@mL,setMotorPWM@m
  9469   0039A8  C015  F00F         	movff	backward@mL+1,setMotorPWM@m+1
  9470   0039AC  EC2B  F01E         	call	_setMotorPWM	;wreg free
  9471   0039B0                     
  9472                           ;dc_motor_v1.c: 181:         delay_ms_function(delay_time);
  9473   0039B0  C022  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9474   0039B4  C023  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9475   0039B8  ECB5  F024         	call	_delay_ms_function	;wreg free
  9476   0039BC                     
  9477                           ;dc_motor_v1.c: 182:     }
  9478   0039BC  4A1C               	infsnz	backward@i^0,f,c
  9479   0039BE  2A1D               	incf	(backward@i+1)^0,f,c
  9480   0039C0                     l4771:
  9481   0039C0  5020               	movf	backward@max_power^0,w,c
  9482   0039C2  5C1C               	subwf	backward@i^0,w,c
  9483   0039C4  501D               	movf	(backward@i+1)^0,w,c
  9484   0039C6  0A80               	xorlw	128
  9485   0039C8  6E18               	movwf	??_backward^0,c
  9486   0039CA  5021               	movf	(backward@max_power+1)^0,w,c
  9487   0039CC  0A80               	xorlw	128
  9488   0039CE  5818               	subwfb	??_backward^0,w,c
  9489   0039D0  A0D8               	btfss	status,0,c
  9490   0039D2  EFED  F01C         	goto	u5251
  9491   0039D6  EFEF  F01C         	goto	u5250
  9492   0039DA                     u5251:
  9493   0039DA  EFB4  F01C         	goto	l4761
  9494   0039DE                     u5250:
  9495   0039DE                     
  9496                           ;dc_motor_v1.c: 185:     for(int j=0; j<Distance_Calibration; j++){
  9497   0039DE  0E00               	movlw	0
  9498   0039E0  6E1F               	movwf	(backward@j+1)^0,c
  9499   0039E2  0E00               	movlw	0
  9500   0039E4  6E1E               	movwf	backward@j^0,c
  9501   0039E6  EFFE  F01C         	goto	l244
  9502   0039EA                     l4775:
  9503                           
  9504                           ;dc_motor_v1.c: 186:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9505   0039EA  0ED0               	movlw	208
  9506   0039EC  6E18               	movwf	??_backward^0,c
  9507   0039EE  0ECA               	movlw	202
  9508   0039F0                     u5767:
  9509   0039F0  2EE8               	decfsz	wreg,f,c
  9510   0039F2  D7FE               	bra	u5767
  9511   0039F4  2E18               	decfsz	??_backward^0,f,c
  9512   0039F6  D7FC               	bra	u5767
  9513   0039F8                     
  9514                           ;dc_motor_v1.c: 187:     }
  9515   0039F8  4A1E               	infsnz	backward@j^0,f,c
  9516   0039FA  2A1F               	incf	(backward@j+1)^0,f,c
  9517   0039FC                     l244:
  9518   0039FC  501B               	movf	backward@Distance_Calibration^0,w,c
  9519   0039FE  6E18               	movwf	??_backward^0,c
  9520   003A00  6A19               	clrf	(??_backward+1)^0,c
  9521   003A02  5018               	movf	??_backward^0,w,c
  9522   003A04  5C1E               	subwf	backward@j^0,w,c
  9523   003A06  501F               	movf	(backward@j+1)^0,w,c
  9524   003A08  0A80               	xorlw	128
  9525   003A0A  6E1A               	movwf	(??_backward+2)^0,c
  9526   003A0C  5019               	movf	(??_backward+1)^0,w,c
  9527   003A0E  0A80               	xorlw	128
  9528   003A10  581A               	subwfb	(??_backward+2)^0,w,c
  9529   003A12  A0D8               	btfss	status,0,c
  9530   003A14  EF0E  F01D         	goto	u5261
  9531   003A18  EF10  F01D         	goto	u5260
  9532   003A1C                     u5261:
  9533   003A1C  EFF5  F01C         	goto	l4775
  9534   003A20                     u5260:
  9535   003A20  EF46  F01D         	goto	l4793
  9536   003A24                     l4779:
  9537                           
  9538                           ;dc_motor_v1.c: 191:         if(mR->power> 0 ){
  9539   003A24  C016  FFD9         	movff	backward@mR,fsr2l
  9540   003A28  C017  FFDA         	movff	backward@mR+1,fsr2h
  9541   003A2C  50DF               	movf	indf2,w,c
  9542   003A2E  B4D8               	btfsc	status,2,c
  9543   003A30  EF1C  F01D         	goto	u5271
  9544   003A34  EF1E  F01D         	goto	u5270
  9545   003A38                     u5271:
  9546   003A38  EF23  F01D         	goto	l4783
  9547   003A3C                     u5270:
  9548   003A3C                     
  9549                           ;dc_motor_v1.c: 192:             mR->power--;
  9550   003A3C  C016  FFD9         	movff	backward@mR,fsr2l
  9551   003A40  C017  FFDA         	movff	backward@mR+1,fsr2h
  9552   003A44  06DF               	decf	indf2,f,c
  9553   003A46                     l4783:
  9554                           
  9555                           ;dc_motor_v1.c: 194:         if(mL->power> 0 ){
  9556   003A46  C014  FFD9         	movff	backward@mL,fsr2l
  9557   003A4A  C015  FFDA         	movff	backward@mL+1,fsr2h
  9558   003A4E  50DF               	movf	indf2,w,c
  9559   003A50  B4D8               	btfsc	status,2,c
  9560   003A52  EF2D  F01D         	goto	u5281
  9561   003A56  EF2F  F01D         	goto	u5280
  9562   003A5A                     u5281:
  9563   003A5A  EF34  F01D         	goto	l4787
  9564   003A5E                     u5280:
  9565   003A5E                     
  9566                           ;dc_motor_v1.c: 195:             mL->power--;
  9567   003A5E  C014  FFD9         	movff	backward@mL,fsr2l
  9568   003A62  C015  FFDA         	movff	backward@mL+1,fsr2h
  9569   003A66  06DF               	decf	indf2,f,c
  9570   003A68                     l4787:
  9571                           
  9572                           ;dc_motor_v1.c: 197:         setMotorPWM(mR);
  9573   003A68  C016  F00E         	movff	backward@mR,setMotorPWM@m
  9574   003A6C  C017  F00F         	movff	backward@mR+1,setMotorPWM@m+1
  9575   003A70  EC2B  F01E         	call	_setMotorPWM	;wreg free
  9576   003A74                     
  9577                           ;dc_motor_v1.c: 198:         setMotorPWM(mL);
  9578   003A74  C014  F00E         	movff	backward@mL,setMotorPWM@m
  9579   003A78  C015  F00F         	movff	backward@mL+1,setMotorPWM@m+1
  9580   003A7C  EC2B  F01E         	call	_setMotorPWM	;wreg free
  9581   003A80                     
  9582                           ;dc_motor_v1.c: 199:         delay_ms_function(delay_time);
  9583   003A80  C022  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9584   003A84  C023  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9585   003A88  ECB5  F024         	call	_delay_ms_function	;wreg free
  9586   003A8C                     l4793:
  9587                           
  9588                           ;dc_motor_v1.c: 190:     while(mL->power || mR->power > 0){
  9589   003A8C  C014  FFD9         	movff	backward@mL,fsr2l
  9590   003A90  C015  FFDA         	movff	backward@mL+1,fsr2h
  9591   003A94  50DF               	movf	indf2,w,c
  9592   003A96  A4D8               	btfss	status,2,c
  9593   003A98  EF50  F01D         	goto	u5291
  9594   003A9C  EF52  F01D         	goto	u5290
  9595   003AA0                     u5291:
  9596   003AA0  EF12  F01D         	goto	l4779
  9597   003AA4                     u5290:
  9598   003AA4  C016  FFD9         	movff	backward@mR,fsr2l
  9599   003AA8  C017  FFDA         	movff	backward@mR+1,fsr2h
  9600   003AAC  50DF               	movf	indf2,w,c
  9601   003AAE  A4D8               	btfss	status,2,c
  9602   003AB0  EF5C  F01D         	goto	u5301
  9603   003AB4  EF5E  F01D         	goto	u5300
  9604   003AB8                     u5301:
  9605   003AB8  EF12  F01D         	goto	l4779
  9606   003ABC                     u5300:
  9607   003ABC  0012               	return		;funcret
  9608   003ABE                     __end_of_backward:
  9609                           	callstack 0
  9610                           
  9611 ;; *************** function _setMotorPWM *****************
  9612 ;; Defined at:
  9613 ;;		line 75 in file "dc_motor_v1.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9616 ;;		 -> motorR(9), motorL(9), 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  negDuty         1   18[COMRAM] unsigned char 
  9619 ;;  posDuty         1   17[COMRAM] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;Total ram usage:        6 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 1
  9636 ;; This function calls:
  9637 ;;		___lwdiv
  9638 ;;		___wmul
  9639 ;; This function is called by:
  9640 ;;		_forward
  9641 ;;		_backward
  9642 ;;		_turnLEFT
  9643 ;;		_turnRIGHT
  9644 ;;		_stop
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text40
  9649   003C56                     __ptext40:
  9650                           	callstack 0
  9651   003C56                     _setMotorPWM:
  9652                           	callstack 28
  9653   003C56                     
  9654                           ;dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 76: {;dc_motor_v1.c: 77
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 79:     if(m->brakemode) {
  9655   003C56  EE20 F002          	lfsr	2,2
  9656   003C5A  500E               	movf	setMotorPWM@m^0,w,c
  9657   003C5C  26D9               	addwf	fsr2l,f,c
  9658   003C5E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9659   003C60  22DA               	addwfc	fsr2h,f,c
  9660   003C62  50DF               	movf	indf2,w,c
  9661   003C64  B4D8               	btfsc	status,2,c
  9662   003C66  EF37  F01E         	goto	u5091
  9663   003C6A  EF39  F01E         	goto	u5090
  9664   003C6E                     u5091:
  9665   003C6E  EF6D  F01E         	goto	l4639
  9666   003C72                     u5090:
  9667   003C72                     
  9668                           ;dc_motor_v1.c: 80:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9669   003C72  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9670   003C76  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9671   003C7A  50DF               	movf	indf2,w,c
  9672   003C7C  6E10               	movwf	??_setMotorPWM^0,c
  9673   003C7E  5010               	movf	??_setMotorPWM^0,w,c
  9674   003C80  6E01               	movwf	___wmul@multiplier^0,c
  9675   003C82  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9676   003C84  EE20 F003          	lfsr	2,3
  9677   003C88  500E               	movf	setMotorPWM@m^0,w,c
  9678   003C8A  26D9               	addwf	fsr2l,f,c
  9679   003C8C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9680   003C8E  22DA               	addwfc	fsr2h,f,c
  9681   003C90  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9682   003C94  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9683   003C98  ECF5  F024         	call	___wmul	;wreg free
  9684   003C9C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9685   003CA0  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9686   003CA4  0E00               	movlw	0
  9687   003CA6  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9688   003CA8  0E64               	movlw	100
  9689   003CAA  6E09               	movwf	___lwdiv@divisor^0,c
  9690   003CAC  ECD4  F022         	call	___lwdiv	;wreg free
  9691   003CB0  EE20 F003          	lfsr	2,3
  9692   003CB4  500E               	movf	setMotorPWM@m^0,w,c
  9693   003CB6  26D9               	addwf	fsr2l,f,c
  9694   003CB8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9695   003CBA  22DA               	addwfc	fsr2h,f,c
  9696   003CBC  50DF               	movf	indf2,w,c
  9697   003CBE  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9698   003CC0  5007               	movf	?___lwdiv^0,w,c
  9699   003CC2  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9700   003CC4  6E12               	movwf	setMotorPWM@posDuty^0,c
  9701   003CC6                     
  9702                           ;dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  9703   003CC6  EE20 F003          	lfsr	2,3
  9704   003CCA  500E               	movf	setMotorPWM@m^0,w,c
  9705   003CCC  26D9               	addwf	fsr2l,f,c
  9706   003CCE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9707   003CD0  22DA               	addwfc	fsr2h,f,c
  9708   003CD2  50DF               	movf	indf2,w,c
  9709   003CD4  6E13               	movwf	setMotorPWM@negDuty^0,c
  9710                           
  9711                           ;dc_motor_v1.c: 82:     }
  9712   003CD6  EF90  F01E         	goto	l4643
  9713   003CDA                     l4639:
  9714                           
  9715                           ;dc_motor_v1.c: 84:         posDuty=0;
  9716   003CDA  0E00               	movlw	0
  9717   003CDC  6E12               	movwf	setMotorPWM@posDuty^0,c
  9718   003CDE                     
  9719                           ;dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9720   003CDE  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9721   003CE2  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9722   003CE6  50DF               	movf	indf2,w,c
  9723   003CE8  6E10               	movwf	??_setMotorPWM^0,c
  9724   003CEA  5010               	movf	??_setMotorPWM^0,w,c
  9725   003CEC  6E01               	movwf	___wmul@multiplier^0,c
  9726   003CEE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9727   003CF0  EE20 F003          	lfsr	2,3
  9728   003CF4  500E               	movf	setMotorPWM@m^0,w,c
  9729   003CF6  26D9               	addwf	fsr2l,f,c
  9730   003CF8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9731   003CFA  22DA               	addwfc	fsr2h,f,c
  9732   003CFC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9733   003D00  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9734   003D04  ECF5  F024         	call	___wmul	;wreg free
  9735   003D08  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9736   003D0C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9737   003D10  0E00               	movlw	0
  9738   003D12  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9739   003D14  0E64               	movlw	100
  9740   003D16  6E09               	movwf	___lwdiv@divisor^0,c
  9741   003D18  ECD4  F022         	call	___lwdiv	;wreg free
  9742   003D1C  5007               	movf	?___lwdiv^0,w,c
  9743   003D1E  6E13               	movwf	setMotorPWM@negDuty^0,c
  9744   003D20                     l4643:
  9745                           
  9746                           ;dc_motor_v1.c: 88:     if (m->direction) {
  9747   003D20  EE20 F001          	lfsr	2,1
  9748   003D24  500E               	movf	setMotorPWM@m^0,w,c
  9749   003D26  26D9               	addwf	fsr2l,f,c
  9750   003D28  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9751   003D2A  22DA               	addwfc	fsr2h,f,c
  9752   003D2C  50DF               	movf	indf2,w,c
  9753   003D2E  B4D8               	btfsc	status,2,c
  9754   003D30  EF9C  F01E         	goto	u5101
  9755   003D34  EF9E  F01E         	goto	u5100
  9756   003D38                     u5101:
  9757   003D38  EFC0  F01E         	goto	l4647
  9758   003D3C                     u5100:
  9759   003D3C                     
  9760                           ;dc_motor_v1.c: 89:         *(m->posDutyHighByte)=posDuty;
  9761   003D3C  EE20 F005          	lfsr	2,5
  9762   003D40  500E               	movf	setMotorPWM@m^0,w,c
  9763   003D42  26D9               	addwf	fsr2l,f,c
  9764   003D44  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9765   003D46  22DA               	addwfc	fsr2h,f,c
  9766   003D48  CFDE F010          	movff	postinc2,??_setMotorPWM
  9767   003D4C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9768   003D50  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9769   003D54  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9770   003D58  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9771                           
  9772                           ;dc_motor_v1.c: 90:         *(m->negDutyHighByte)=negDuty;
  9773   003D5C  EE20 F007          	lfsr	2,7
  9774   003D60  500E               	movf	setMotorPWM@m^0,w,c
  9775   003D62  26D9               	addwf	fsr2l,f,c
  9776   003D64  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9777   003D66  22DA               	addwfc	fsr2h,f,c
  9778   003D68  CFDE F010          	movff	postinc2,??_setMotorPWM
  9779   003D6C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9780   003D70  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9781   003D74  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9782   003D78  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9783                           
  9784                           ;dc_motor_v1.c: 91:     } else {
  9785   003D7C  EFE0  F01E         	goto	l216
  9786   003D80                     l4647:
  9787                           
  9788                           ;dc_motor_v1.c: 92:         *(m->posDutyHighByte)=negDuty;
  9789   003D80  EE20 F005          	lfsr	2,5
  9790   003D84  500E               	movf	setMotorPWM@m^0,w,c
  9791   003D86  26D9               	addwf	fsr2l,f,c
  9792   003D88  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9793   003D8A  22DA               	addwfc	fsr2h,f,c
  9794   003D8C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9795   003D90  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9796   003D94  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9797   003D98  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9798   003D9C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9799                           
  9800                           ;dc_motor_v1.c: 93:         *(m->negDutyHighByte)=posDuty;
  9801   003DA0  EE20 F007          	lfsr	2,7
  9802   003DA4  500E               	movf	setMotorPWM@m^0,w,c
  9803   003DA6  26D9               	addwf	fsr2l,f,c
  9804   003DA8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9805   003DAA  22DA               	addwfc	fsr2h,f,c
  9806   003DAC  CFDE F010          	movff	postinc2,??_setMotorPWM
  9807   003DB0  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9808   003DB4  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9809   003DB8  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9810   003DBC  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9811   003DC0                     l216:
  9812   003DC0  0012               	return		;funcret
  9813   003DC2                     __end_of_setMotorPWM:
  9814                           	callstack 0
  9815                           
  9816 ;; *************** function ___wmul *****************
  9817 ;; Defined at:
  9818 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  multiplier      2    0[COMRAM] unsigned int 
  9821 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  product         2    4[COMRAM] unsigned int 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  2    0[COMRAM] unsigned int 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2, status,0, prodl, prodh
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;Total ram usage:        6 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_setMotorPWM
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text41
  9847   0049EA                     __ptext41:
  9848                           	callstack 0
  9849   0049EA                     ___wmul:
  9850                           	callstack 28
  9851   0049EA  5001               	movf	___wmul@multiplier^0,w,c
  9852   0049EC  0203               	mulwf	___wmul@multiplicand^0,c
  9853   0049EE  CFF3 F005          	movff	prodl,___wmul@product
  9854   0049F2  CFF4 F006          	movff	prodh,___wmul@product+1
  9855   0049F6  5001               	movf	___wmul@multiplier^0,w,c
  9856   0049F8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9857   0049FA  50F3               	movf	243,w,c
  9858   0049FC  2606               	addwf	(___wmul@product+1)^0,f,c
  9859   0049FE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9860   004A00  0203               	mulwf	___wmul@multiplicand^0,c
  9861   004A02  50F3               	movf	243,w,c
  9862   004A04  2606               	addwf	(___wmul@product+1)^0,f,c
  9863   004A06  C005  F001         	movff	___wmul@product,?___wmul
  9864   004A0A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9865   004A0E  0012               	return		;funcret
  9866   004A10                     __end_of___wmul:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function ___lwdiv *****************
  9870 ;; Defined at:
  9871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  dividend        2    6[COMRAM] unsigned int 
  9874 ;;  divisor         2    8[COMRAM] unsigned int 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  quotient        2   10[COMRAM] unsigned int 
  9877 ;;  counter         1   12[COMRAM] unsigned char 
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  2    6[COMRAM] unsigned int 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;Total ram usage:        7 bytes
  9892 ;; Hardware stack levels used: 1
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_setMotorPWM
  9897 ;;		_vfpfcnvrt
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text42
  9902   0045A8                     __ptext42:
  9903                           	callstack 0
  9904   0045A8                     ___lwdiv:
  9905                           	callstack 28
  9906   0045A8  0E00               	movlw	0
  9907   0045AA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9908   0045AC  0E00               	movlw	0
  9909   0045AE  6E0B               	movwf	___lwdiv@quotient^0,c
  9910   0045B0  5009               	movf	___lwdiv@divisor^0,w,c
  9911   0045B2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9912   0045B4  B4D8               	btfsc	status,2,c
  9913   0045B6  EFDF  F022         	goto	u3501
  9914   0045BA  EFE1  F022         	goto	u3500
  9915   0045BE                     u3501:
  9916   0045BE  EF09  F023         	goto	l1013
  9917   0045C2                     u3500:
  9918   0045C2  0E01               	movlw	1
  9919   0045C4  6E0D               	movwf	___lwdiv@counter^0,c
  9920   0045C6  EFE9  F022         	goto	l3501
  9921   0045CA                     l3499:
  9922   0045CA  90D8               	bcf	status,0,c
  9923   0045CC  3609               	rlcf	___lwdiv@divisor^0,f,c
  9924   0045CE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9925   0045D0  2A0D               	incf	___lwdiv@counter^0,f,c
  9926   0045D2                     l3501:
  9927   0045D2  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9928   0045D4  EFEE  F022         	goto	u3511
  9929   0045D8  EFF0  F022         	goto	u3510
  9930   0045DC                     u3511:
  9931   0045DC  EFE5  F022         	goto	l3499
  9932   0045E0                     u3510:
  9933   0045E0                     l3503:
  9934   0045E0  90D8               	bcf	status,0,c
  9935   0045E2  360B               	rlcf	___lwdiv@quotient^0,f,c
  9936   0045E4  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9937   0045E6  5009               	movf	___lwdiv@divisor^0,w,c
  9938   0045E8  5C07               	subwf	___lwdiv@dividend^0,w,c
  9939   0045EA  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9940   0045EC  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9941   0045EE  A0D8               	btfss	status,0,c
  9942   0045F0  EFFC  F022         	goto	u3521
  9943   0045F4  EFFE  F022         	goto	u3520
  9944   0045F8                     u3521:
  9945   0045F8  EF03  F023         	goto	l3511
  9946   0045FC                     u3520:
  9947   0045FC  5009               	movf	___lwdiv@divisor^0,w,c
  9948   0045FE  5E07               	subwf	___lwdiv@dividend^0,f,c
  9949   004600  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9950   004602  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9951   004604  800B               	bsf	___lwdiv@quotient^0,0,c
  9952   004606                     l3511:
  9953   004606  90D8               	bcf	status,0,c
  9954   004608  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9955   00460A  3209               	rrcf	___lwdiv@divisor^0,f,c
  9956   00460C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9957   00460E  EFF0  F022         	goto	l3503
  9958   004612                     l1013:
  9959   004612  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9960   004616  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9961   00461A  0012               	return		;funcret
  9962   00461C                     __end_of___lwdiv:
  9963                           	callstack 0
  9964                           
  9965 ;; *************** function _delay_ms_function *****************
  9966 ;; Defined at:
  9967 ;;		line 67 in file "dc_motor_v1.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;		None
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      void 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;Total ram usage:        3 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_forward
  9991 ;;		_backward
  9992 ;;		_turnLEFT
  9993 ;;		_turnRIGHT
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text43
  9998   00496A                     __ptext43:
  9999                           	callstack 0
 10000   00496A                     _delay_ms_function:
 10001                           	callstack 29
 10002   00496A                     
 10003                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
 10004   00496A  EFC2  F024         	goto	l206
 10005   00496E                     l3815:
 10006                           
 10007                           ;dc_motor_v1.c: 69:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10008   00496E  0E15               	movlw	21
 10009   004970  6E03               	movwf	??_delay_ms_function^0,c
 10010   004972  0EC6               	movlw	198
 10011   004974                     u5777:
 10012   004974  2EE8               	decfsz	wreg,f,c
 10013   004976  D7FE               	bra	u5777
 10014   004978  2E03               	decfsz	??_delay_ms_function^0,f,c
 10015   00497A  D7FC               	bra	u5777
 10016   00497C  D000               	nop2	
 10017   00497E                     
 10018                           ;dc_motor_v1.c: 70:         milliseconds--;
 10019   00497E  0601               	decf	delay_ms_function@milliseconds^0,f,c
 10020   004980  A0D8               	btfss	status,0,c
 10021   004982  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
 10022   004984                     l206:
 10023                           
 10024                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
 10025   004984  5001               	movf	delay_ms_function@milliseconds^0,w,c
 10026   004986  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
 10027   004988  A4D8               	btfss	status,2,c
 10028   00498A  EFC9  F024         	goto	u3951
 10029   00498E  EFCB  F024         	goto	u3950
 10030   004992                     u3951:
 10031   004992  EFB7  F024         	goto	l3815
 10032   004996                     u3950:
 10033   004996  0012               	return		;funcret
 10034   004998                     __end_of_delay_ms_function:
 10035                           	callstack 0
 10036                           
 10037 ;; *************** function ___awdiv *****************
 10038 ;; Defined at:
 10039 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 10040 ;; Parameters:    Size  Location     Type
 10041 ;;  dividend        2    0[COMRAM] int 
 10042 ;;  divisor         2    2[COMRAM] int 
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;  quotient        2    6[COMRAM] int 
 10045 ;;  sign            1    5[COMRAM] unsigned char 
 10046 ;;  counter         1    4[COMRAM] unsigned char 
 10047 ;; Return value:  Size  Location     Type
 10048 ;;                  2    0[COMRAM] int 
 10049 ;; Registers used:
 10050 ;;		wreg, status,2, status,0
 10051 ;; Tracked objects:
 10052 ;;		On entry : 0/0
 10053 ;;		On exit  : 0/0
 10054 ;;		Unchanged: 0/0
 10055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;Total ram usage:        8 bytes
 10061 ;; Hardware stack levels used: 1
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_forward
 10066 ;;		_backward
 10067 ;;		_turnLEFT
 10068 ;;		_turnRIGHT
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text44
 10073   00423A                     __ptext44:
 10074                           	callstack 0
 10075   00423A                     ___awdiv:
 10076                           	callstack 29
 10077   00423A  0E00               	movlw	0
 10078   00423C  6E06               	movwf	___awdiv@sign^0,c
 10079   00423E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10080   004240  EF26  F021         	goto	u3990
 10081   004244  EF24  F021         	goto	u3991
 10082   004248                     u3991:
 10083   004248  EF2C  F021         	goto	l3847
 10084   00424C                     u3990:
 10085   00424C  6C03               	negf	___awdiv@divisor^0,c
 10086   00424E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10087   004250  B0D8               	btfsc	status,0,c
 10088   004252  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10089   004254  0E01               	movlw	1
 10090   004256  6E06               	movwf	___awdiv@sign^0,c
 10091   004258                     l3847:
 10092   004258  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10093   00425A  EF33  F021         	goto	u4000
 10094   00425E  EF31  F021         	goto	u4001
 10095   004262                     u4001:
 10096   004262  EF39  F021         	goto	l3853
 10097   004266                     u4000:
 10098   004266  6C01               	negf	___awdiv@dividend^0,c
 10099   004268  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10100   00426A  B0D8               	btfsc	status,0,c
 10101   00426C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10102   00426E  0E01               	movlw	1
 10103   004270  1A06               	xorwf	___awdiv@sign^0,f,c
 10104   004272                     l3853:
 10105   004272  0E00               	movlw	0
 10106   004274  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10107   004276  0E00               	movlw	0
 10108   004278  6E07               	movwf	___awdiv@quotient^0,c
 10109   00427A  5003               	movf	___awdiv@divisor^0,w,c
 10110   00427C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10111   00427E  B4D8               	btfsc	status,2,c
 10112   004280  EF44  F021         	goto	u4011
 10113   004284  EF46  F021         	goto	u4010
 10114   004288                     u4011:
 10115   004288  EF6E  F021         	goto	l3875
 10116   00428C                     u4010:
 10117   00428C  0E01               	movlw	1
 10118   00428E  6E05               	movwf	___awdiv@counter^0,c
 10119   004290  EF4E  F021         	goto	l3861
 10120   004294                     l3859:
 10121   004294  90D8               	bcf	status,0,c
 10122   004296  3603               	rlcf	___awdiv@divisor^0,f,c
 10123   004298  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10124   00429A  2A05               	incf	___awdiv@counter^0,f,c
 10125   00429C                     l3861:
 10126   00429C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10127   00429E  EF53  F021         	goto	u4021
 10128   0042A2  EF55  F021         	goto	u4020
 10129   0042A6                     u4021:
 10130   0042A6  EF4A  F021         	goto	l3859
 10131   0042AA                     u4020:
 10132   0042AA                     l3863:
 10133   0042AA  90D8               	bcf	status,0,c
 10134   0042AC  3607               	rlcf	___awdiv@quotient^0,f,c
 10135   0042AE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10136   0042B0  5003               	movf	___awdiv@divisor^0,w,c
 10137   0042B2  5C01               	subwf	___awdiv@dividend^0,w,c
 10138   0042B4  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10139   0042B6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10140   0042B8  A0D8               	btfss	status,0,c
 10141   0042BA  EF61  F021         	goto	u4031
 10142   0042BE  EF63  F021         	goto	u4030
 10143   0042C2                     u4031:
 10144   0042C2  EF68  F021         	goto	l3871
 10145   0042C6                     u4030:
 10146   0042C6  5003               	movf	___awdiv@divisor^0,w,c
 10147   0042C8  5E01               	subwf	___awdiv@dividend^0,f,c
 10148   0042CA  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10149   0042CC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10150   0042CE  8007               	bsf	___awdiv@quotient^0,0,c
 10151   0042D0                     l3871:
 10152   0042D0  90D8               	bcf	status,0,c
 10153   0042D2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10154   0042D4  3203               	rrcf	___awdiv@divisor^0,f,c
 10155   0042D6  2E05               	decfsz	___awdiv@counter^0,f,c
 10156   0042D8  EF55  F021         	goto	l3863
 10157   0042DC                     l3875:
 10158   0042DC  5006               	movf	___awdiv@sign^0,w,c
 10159   0042DE  B4D8               	btfsc	status,2,c
 10160   0042E0  EF74  F021         	goto	u4041
 10161   0042E4  EF76  F021         	goto	u4040
 10162   0042E8                     u4041:
 10163   0042E8  EF7A  F021         	goto	l3879
 10164   0042EC                     u4040:
 10165   0042EC  6C07               	negf	___awdiv@quotient^0,c
 10166   0042EE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10167   0042F0  B0D8               	btfsc	status,0,c
 10168   0042F2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10169   0042F4                     l3879:
 10170   0042F4  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10171   0042F8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10172   0042FC  0012               	return		;funcret
 10173   0042FE                     __end_of___awdiv:
 10174                           	callstack 0
 10175                           
 10176 ;; *************** function _adjust_calibration *****************
 10177 ;; Defined at:
 10178 ;;		line 6 in file "calibration.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  calibration_    2    0[COMRAM] PTR int 
 10181 ;;		 -> calibration(10), 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;		None
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  1    wreg      void 
 10186 ;; Registers used:
 10187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;Total ram usage:        6 bytes
 10198 ;; Hardware stack levels used: 1
 10199 ;; This function calls:
 10200 ;;		Nothing
 10201 ;; This function is called by:
 10202 ;;		_main
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text45
 10207   003DC2                     __ptext45:
 10208                           	callstack 0
 10209   003DC2                     _adjust_calibration:
 10210                           	callstack 30
 10211   003DC2                     l124:
 10212                           
 10213                           ;calibration.c: 11:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10214   003DC2  A68E               	btfss	142,3,c	;volatile
 10215   003DC4  EFE6  F01E         	goto	u5111
 10216   003DC8  EFE8  F01E         	goto	u5110
 10217   003DCC                     u5111:
 10218   003DCC  EFEF  F01E         	goto	l4651
 10219   003DD0                     u5110:
 10220   003DD0  B48E               	btfsc	142,2,c	;volatile
 10221   003DD2  EFED  F01E         	goto	u5121
 10222   003DD6  EFEF  F01E         	goto	u5120
 10223   003DDA                     u5121:
 10224   003DDA  EFE1  F01E         	goto	l124
 10225   003DDE                     u5120:
 10226   003DDE                     l4651:
 10227                           
 10228                           ;calibration.c: 12:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10229   003DDE  0E09               	movlw	9
 10230   003DE0  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10231   003DE2  0E1E               	movlw	30
 10232   003DE4  6E03               	movwf	??_adjust_calibration^0,c
 10233   003DE6  0EE4               	movlw	228
 10234   003DE8                     u5787:
 10235   003DE8  2EE8               	decfsz	wreg,f,c
 10236   003DEA  D7FE               	bra	u5787
 10237   003DEC  2E03               	decfsz	??_adjust_calibration^0,f,c
 10238   003DEE  D7FC               	bra	u5787
 10239   003DF0  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10240   003DF2  D7FA               	bra	u5787
 10241   003DF4  D000               	nop2	
 10242   003DF6                     
 10243                           ;calibration.c: 14:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10244   003DF6  B68E               	btfsc	142,3,c	;volatile
 10245   003DF8  EF00  F01F         	goto	u5131
 10246   003DFC  EF02  F01F         	goto	u5130
 10247   003E00                     u5131:
 10248   003E00  EF1B  F01F         	goto	l128
 10249   003E04                     u5130:
 10250   003E04  B48E               	btfsc	142,2,c	;volatile
 10251   003E06  EF07  F01F         	goto	u5141
 10252   003E0A  EF09  F01F         	goto	u5140
 10253   003E0E                     u5141:
 10254   003E0E  EF1B  F01F         	goto	l128
 10255   003E12                     u5140:
 10256   003E12                     
 10257                           ;calibration.c: 16:                 LATHbits.LATH3 = 1;
 10258   003E12  8680               	bsf	128,3,c	;volatile
 10259                           
 10260                           ;calibration.c: 17:                 LATDbits.LATD7 = 1;
 10261   003E14  8E7C               	bsf	124,7,c	;volatile
 10262   003E16                     
 10263                           ;calibration.c: 18:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10264   003E16  0E52               	movlw	82
 10265   003E18  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10266   003E1A  0E2B               	movlw	43
 10267   003E1C  6E03               	movwf	??_adjust_calibration^0,c
 10268   003E1E  0E00               	movlw	0
 10269   003E20                     u5797:
 10270   003E20  2EE8               	decfsz	wreg,f,c
 10271   003E22  D7FE               	bra	u5797
 10272   003E24  2E03               	decfsz	??_adjust_calibration^0,f,c
 10273   003E26  D7FC               	bra	u5797
 10274   003E28  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10275   003E2A  D7FA               	bra	u5797
 10276   003E2C  D000               	nop2	
 10277   003E2E                     
 10278                           ;calibration.c: 19:                 LATHbits.LATH3 = 0;
 10279   003E2E  9680               	bcf	128,3,c	;volatile
 10280   003E30                     
 10281                           ;calibration.c: 20:                 LATDbits.LATD7 = 0;
 10282   003E30  9E7C               	bcf	124,7,c	;volatile
 10283                           
 10284                           ;calibration.c: 21:                 break;
 10285   003E32  EF8B  F01F         	goto	l134
 10286   003E36                     l128:
 10287                           
 10288                           ;calibration.c: 24:                 if(!PORTFbits.RF2){
 10289   003E36  B48E               	btfsc	142,2,c	;volatile
 10290   003E38  EF20  F01F         	goto	u5151
 10291   003E3C  EF22  F01F         	goto	u5150
 10292   003E40                     u5151:
 10293   003E40  EF50  F01F         	goto	l4677
 10294   003E44                     u5150:
 10295   003E44                     
 10296                           ;calibration.c: 25:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10297   003E44  0E11               	movlw	17
 10298   003E46  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10299   003E48  0E3C               	movlw	60
 10300   003E4A  6E03               	movwf	??_adjust_calibration^0,c
 10301   003E4C  0ECB               	movlw	203
 10302   003E4E                     u5807:
 10303   003E4E  2EE8               	decfsz	wreg,f,c
 10304   003E50  D7FE               	bra	u5807
 10305   003E52  2E03               	decfsz	??_adjust_calibration^0,f,c
 10306   003E54  D7FC               	bra	u5807
 10307   003E56  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10308   003E58  D7FA               	bra	u5807
 10309   003E5A  0000               	nop	
 10310   003E5C                     
 10311                           ;calibration.c: 26:                     *calibration_label = *calibration_label + 5;
 10312   003E5C  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10313   003E60  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10314   003E64  CFDE F003          	movff	postinc2,??_adjust_calibration
 10315   003E68  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10316   003E6C  0E05               	movlw	5
 10317   003E6E  2603               	addwf	??_adjust_calibration^0,f,c
 10318   003E70  0E00               	movlw	0
 10319   003E72  2204               	addwfc	(??_adjust_calibration+1)^0,f,c
 10320   003E74  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10321   003E78  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10322   003E7C  C003  FFDE         	movff	??_adjust_calibration,postinc2
 10323   003E80  C004  FFDD         	movff	??_adjust_calibration+1,postdec2
 10324   003E84                     
 10325                           ;calibration.c: 27:                     LATDbits.LATD7 = 1;
 10326   003E84  8E7C               	bsf	124,7,c	;volatile
 10327   003E86                     
 10328                           ;calibration.c: 28:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10329   003E86  0E11               	movlw	17
 10330   003E88  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10331   003E8A  0E3C               	movlw	60
 10332   003E8C  6E03               	movwf	??_adjust_calibration^0,c
 10333   003E8E  0ECB               	movlw	203
 10334   003E90                     u5817:
 10335   003E90  2EE8               	decfsz	wreg,f,c
 10336   003E92  D7FE               	bra	u5817
 10337   003E94  2E03               	decfsz	??_adjust_calibration^0,f,c
 10338   003E96  D7FC               	bra	u5817
 10339   003E98  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10340   003E9A  D7FA               	bra	u5817
 10341   003E9C  0000               	nop	
 10342   003E9E                     
 10343                           ;calibration.c: 29:                     LATDbits.LATD7 = 0;
 10344   003E9E  9E7C               	bcf	124,7,c	;volatile
 10345   003EA0                     l4677:
 10346                           
 10347                           ;calibration.c: 32:                 if(!PORTFbits.RF3){
 10348   003EA0  B68E               	btfsc	142,3,c	;volatile
 10349   003EA2  EF55  F01F         	goto	u5161
 10350   003EA6  EF57  F01F         	goto	u5160
 10351   003EAA                     u5161:
 10352   003EAA  EF89  F01F         	goto	l125
 10353   003EAE                     u5160:
 10354   003EAE                     
 10355                           ;calibration.c: 33:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10356   003EAE  0E11               	movlw	17
 10357   003EB0  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10358   003EB2  0E3C               	movlw	60
 10359   003EB4  6E03               	movwf	??_adjust_calibration^0,c
 10360   003EB6  0ECB               	movlw	203
 10361   003EB8                     u5827:
 10362   003EB8  2EE8               	decfsz	wreg,f,c
 10363   003EBA  D7FE               	bra	u5827
 10364   003EBC  2E03               	decfsz	??_adjust_calibration^0,f,c
 10365   003EBE  D7FC               	bra	u5827
 10366   003EC0  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10367   003EC2  D7FA               	bra	u5827
 10368   003EC4  0000               	nop	
 10369   003EC6                     
 10370                           ;calibration.c: 34:                     *calibration_label = *calibration_label - 5;
 10371   003EC6  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10372   003ECA  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10373   003ECE  CFDE F003          	movff	postinc2,??_adjust_calibration
 10374   003ED2  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10375   003ED6  0EFB               	movlw	251
 10376   003ED8  2403               	addwf	??_adjust_calibration^0,w,c
 10377   003EDA  6E05               	movwf	(??_adjust_calibration+2)^0,c
 10378   003EDC  0EFF               	movlw	255
 10379   003EDE  2004               	addwfc	(??_adjust_calibration+1)^0,w,c
 10380   003EE0  6E06               	movwf	(??_adjust_calibration+3)^0,c
 10381   003EE2  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10382   003EE6  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10383   003EEA  C005  FFDE         	movff	??_adjust_calibration+2,postinc2
 10384   003EEE  C006  FFDD         	movff	??_adjust_calibration+3,postdec2
 10385   003EF2                     
 10386                           ;calibration.c: 35:                     LATHbits.LATH3 = 1;
 10387   003EF2  8680               	bsf	128,3,c	;volatile
 10388   003EF4                     
 10389                           ;calibration.c: 36:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10390   003EF4  0E11               	movlw	17
 10391   003EF6  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10392   003EF8  0E3C               	movlw	60
 10393   003EFA  6E03               	movwf	??_adjust_calibration^0,c
 10394   003EFC  0ECB               	movlw	203
 10395   003EFE                     u5837:
 10396   003EFE  2EE8               	decfsz	wreg,f,c
 10397   003F00  D7FE               	bra	u5837
 10398   003F02  2E03               	decfsz	??_adjust_calibration^0,f,c
 10399   003F04  D7FC               	bra	u5837
 10400   003F06  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10401   003F08  D7FA               	bra	u5837
 10402   003F0A  0000               	nop	
 10403   003F0C                     
 10404                           ;calibration.c: 37:                     LATHbits.LATH3 = 0;
 10405   003F0C  9680               	bcf	128,3,c	;volatile
 10406   003F0E  EFE1  F01E         	goto	l124
 10407   003F12                     l125:
 10408   003F12  EFE1  F01E         	goto	l124
 10409   003F16                     l134:
 10410   003F16  0012               	return		;funcret
 10411   003F18                     __end_of_adjust_calibration:
 10412                           	callstack 0
 10413                           
 10414                           	psect	rparam
 10415   000000                     
 10416                           	psect	config
 10417                           
 10418                           ;Config register CONFIG1L @ 0x300000
 10419                           ;	External Oscillator mode Selection bits
 10420                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10421                           ;	Power-up default value for COSC bits
 10422                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10423   300000                     	org	3145728
 10424   300000  AA                 	db	170
 10425                           
 10426                           ;Config register CONFIG1H @ 0x300001
 10427                           ;	unspecified, using default values
 10428                           ;	Clock Out Enable bit
 10429                           ;	CLKOUTEN = 0x1, unprogrammed default
 10430                           ;	Clock Switch Enable bit
 10431                           ;	CSWEN = 0x1, unprogrammed default
 10432                           ;	Fail-Safe Clock Monitor Enable bit
 10433                           ;	FCMEN = 0x1, unprogrammed default
 10434   300001                     	org	3145729
 10435   300001  FF                 	db	255
 10436                           
 10437                           ;Config register CONFIG3L @ 0x300004
 10438                           ;	WDT Period Select bits
 10439                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10440                           ;	WDT operating mode
 10441                           ;	WDTE = OFF, WDT Disabled
 10442   300004                     	org	3145732
 10443   300004  9F                 	db	159
 10444                           
 10445                           ;Config register CONFIG3H @ 0x300005
 10446                           ;	unspecified, using default values
 10447                           ;	WDT Window Select bits
 10448                           ;	WDTCWS = 0x7, unprogrammed default
 10449                           ;	WDT input clock selector
 10450                           ;	WDTCCS = 0x7, unprogrammed default
 10451   300005                     	org	3145733
 10452   300005  FF                 	db	255
 10453                           tosu	equ	0xFFF
 10454                           tosh	equ	0xFFE
 10455                           tosl	equ	0xFFD
 10456                           stkptr	equ	0xFFC
 10457                           pclatu	equ	0xFFB
 10458                           pclath	equ	0xFFA
 10459                           pcl	equ	0xFF9
 10460                           tblptru	equ	0xFF8
 10461                           tblptrh	equ	0xFF7
 10462                           tblptrl	equ	0xFF6
 10463                           tablat	equ	0xFF5
 10464                           prodh	equ	0xFF4
 10465                           prodl	equ	0xFF3
 10466                           indf0	equ	0xFEF
 10467                           postinc0	equ	0xFEE
 10468                           postdec0	equ	0xFED
 10469                           preinc0	equ	0xFEC
 10470                           plusw0	equ	0xFEB
 10471                           fsr0h	equ	0xFEA
 10472                           fsr0l	equ	0xFE9
 10473                           wreg	equ	0xFE8
 10474                           indf1	equ	0xFE7
 10475                           postinc1	equ	0xFE6
 10476                           postdec1	equ	0xFE5
 10477                           preinc1	equ	0xFE4
 10478                           plusw1	equ	0xFE3
 10479                           fsr1h	equ	0xFE2
 10480                           fsr1l	equ	0xFE1
 10481                           bsr	equ	0xFE0
 10482                           indf2	equ	0xFDF
 10483                           postinc2	equ	0xFDE
 10484                           postdec2	equ	0xFDD
 10485                           preinc2	equ	0xFDC
 10486                           plusw2	equ	0xFDB
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        1
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160    130     158
    BANK1           256     52     192
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(2) Largest target is 10
		 -> calibration(BANK1[10]), 

    backward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    backward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    S2342$buffer	PTR unsigned char  size(2) Largest target is 0

    S2342$source	PTR const unsigned char  size(2) Largest target is 0

    S351DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    S351DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@senddata(BANK1[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), motorR(BANK1[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@senddata(BANK1[20]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    switch_calibration@calibration_index	PTR int  size(2) Largest target is 10
		 -> calibration(BANK1[10]), 

    turnLEFT@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_color_cardCheck
    _turnRIGHT->_setMotorPWM
    _turnLEFT->_setMotorPWM
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lwdiv
    _sendStringSerial4->_sendCharSerial4
    _forward->_setMotorPWM
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   75724
                                            127 BANK0      3     3      0
                                              0 BANK1     52    52      0
                 _adjust_calibration
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
                 _switch_calibration
                           _turnLEFT
                          _turnRIGHT
 ---------------------------------------------------------------------------------
 (1) _turnRIGHT                                           18    14      4    5837
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLEFT                                            18    14      4    6917
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _switch_calibration                                   4     2      2     332
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    2977
                                             28 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2626
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    2276
                                             13 COMRAM    11     8      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                             18    14      4    5837
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_cardCheck                                     32    30      2   44885
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RGB_to_HSV                                          87    68     19   34610
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (3) _custom_floatmodulo                                  18    10      8   11664
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2656
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2767
                                             33 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _backward                                            18    14      4    6557
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2993
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     510
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms_function                                    3     1      2     631
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _adjust_calibration                                   6     4      2     394
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adjust_calibration
   _backward
     ___awdiv
     _delay_ms_function
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _color_cardCheck
     _RGB_to_HSV
       ___fladd
       ___fldiv
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
       ___fleq
       ___flge
       ___flmul
         ___fladd (ARG)
         ___fldiv (ARG)
         ___flsub (ARG)
         ___xxtofl (ARG)
       ___flsub
       _custom_floatmodulo
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
     ___flge
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     ___awdiv
     _delay_ms_function
     _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _switch_calibration
   _turnLEFT
     ___awdiv
     _delay_ms_function
     _setMotorPWM
   _turnRIGHT
     ___awdiv
     _delay_ms_function
     _setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     34      C0       7       75.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BD      58        0.0%
DATA                 0      0     1BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 23:46:59 2024

                     _color_read_Red 4680                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4770                                   l31 48C8  
                                 l40 471E                                   l50 402E  
                                 l34 4A2E                                   l43 47BE  
                                 l60 19CC                                   l37 46CE  
                                 l70 1ABE                                   l62 1A26  
                                 l46 476E                                   l80 1E86  
                                 l72 1ACE                                   l64 1A36  
                                 l74 1B28                                   l58 19BC  
                                 l76 1B38                                   l87 2000  
                                 l99 1836                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                     _color_read_Clear 4720  
                   _color_read_Green 46D0                                  l105 183E  
                                l203 45A6                                  l124 3DC2  
                                l125 3F12                                  l134 3F16  
                                l206 4984                                  l230 350C  
                                l142 4468                                  l128 3E36  
                                l216 3DC0                                  l209 4996  
                                l137 43B8                                  l138 4426  
                                l252 3ABC                                  l244 39FC  
                                l420 49E8                                  l414 49C0  
                                l238 35CC                                  l423 4A84  
                                l432 4A70                                  l280 3772  
                                l272 36B2                                  l417 49C2  
                                l522 4A0E                                  l426 4A8E  
                                l266 3918                                  l258 3858  
                                l435 4888                                  l429 4A7A  
                                l374 255E                                  l472 4A4C  
                                l481 4A50                                  l490 4968  
                                l484 4A64                                  l753 42FC  
                                l819 4134                                  l781 4512  
                                l792 4238                                  l787 41F2  
                                wreg 0FE8                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
         __end_of_adjust_calibration 3F18                         ___fltol@exp1 000A  
                               l1020 461A                                 l1013 4612  
                               l1030 467E                                 l1023 4676  
                               l1104 3270                                 l1200 4904  
                               l1106 30D0                                 l1050 27DC  
                               l1115 3116                                 l1051 27CA  
                               l1140 2ED6                                 l1052 2790  
                               l1117 318E                                 l1109 3094  
                               l1118 317C                                 l1143 2D68  
                               l1136 2B72                                 l1153 2E98  
                               l1145 2DE0                                 l3001 26F2  
                               l1146 2DCE                                 l1067 28F6  
                               l1059 2AAC                                 l3011 2706  
                               l3003 26F6                                 l1076 29C6  
                               l1092 4804                                 l1180 3424  
                               l1244 4846                                 l1077 29B4  
                               l3101 294A                                 l3021 271A  
                               l3013 270A                                 l3005 26FA  
                               l1237 3C54                                 l3103 2958  
                               l3111 2976                                 l3023 271E  
                               l3015 270E                                 l3007 26FE  
                               l3031 272E                                 l1191 33BC  
                               l1184 3360                                 l1256 43B6  
                               l3201 2FCA                                 l3105 2960  
                               l3113 2984                                 l3041 279E  
                               l3033 2732                                 l3025 2722  
                               l3017 2712                                 l3009 2702  
                               l1177 32C8                                 l4001 15F4  
                               l3211 2FFA                                 l3203 2FD2  
                               l3123 29D6                                 l3131 2A2C  
                               l3115 2988                                 l3107 2964  
                               l3051 27C8                                 l3043 27AA  
                               l3035 275C                                 l3027 2726  
                               l3019 2716                                 l4011 16EE  
                               l4003 1626                                 l1267 4A90  
                               l3221 3038                                 l3213 2FFA  
                               l3205 2FD6                                 l3301 2AC8  
                               l3141 2A7E                                 l3133 2A3C  
                               l3125 29E2                                 l3117 2996  
                               l3109 2974                                 l3061 281E  
                               l3053 27EA                                 l3045 27AE  
                               l3037 2778                                 l3029 272A  
                               l4021 17C4                                 l4005 1658  
                               l4013 16FC                                 l4101 4588  
                               l3231 3084                                 l3223 3048  
                               l3311 2B00                                 l3303 2ACA  
                               l3151 2A9C                                 l3143 2A84  
                               l3135 2A4C                                 l3127 29F0  
                               l3119 29AC                                 l3071 2858  
                               l3063 282C                                 l3055 27FA  
                               l3047 27BC                                 l3039 2788  
                               l4023 17F6                                 l4015 172E  
                               l4007 168A                                 l4111 45A2  
                               l4103 458A                                 l3241 30CE  
                               l3233 3092                                 l3225 3058  
                               l3217 300E                                 l3209 2FEA  
                               l3161 2EE4                                 l3401 2E0A  
                               l3321 2B2C                                 l3313 2B10  
                               l3305 2ADA                                 l3145 2A86  
                               l3137 2A6C                                 l3129 2A2A  
                               l3081 28C4                                 l3073 285A  
                               l3065 283A                                 l3049 27BE  
                               l4025 1828                                 l4017 1760  
                               l4009 16BC                                 l4113 45A4  
                               l4105 4594                                 l5001 2170  
                               l3251 3114                                 l3243 30E0  
                               l3235 309E                                 l3227 3060  
                               l3219 3028                                 l3171 2F24  
                               l3163 2EF2                                 l3411 2E80  
                               l3403 2E34                                 l3331 2B82  
                               l3323 2B3C                                 l3315 2B16  
                               l3307 2AEA                                 l3147 2A8C  
                               l3139 2A70                                 l3091 291C  
                               l3083 28C6                                 l3075 2864  
                               l3067 2846                                 l3059 280E  
                               l3155 49C2                                 l4019 1792  
                               l4027 1836                                 l4107 4596  
                               l5011 21AA                                 l5003 217C  
                               l3501 45D2                                 l3261 3174  
                               l3245 30F6                                 l3253 3126  
                               l3237 30BC                                 l3229 3070  
                               l3181 2F4A                                 l3173 2F26  
                               l3165 2EF4                                 l3413 2E9C  
                               l3421 2EC2                                 l3405 2E38  
                               l3341 2BBC                                 l3333 2B92  
                               l3325 2B4C                                 l3317 2B1C  
                               l3309 2AFA                                 l3149 2A9A  
                               l3085 28D6                                 l3069 284A  
                               l3077 286A                                 l3157 49D2  
                               l4109 45A0                                 l4301 4A3A  
                               l5101 2530                                 l5021 21E4  
                               l5013 21AC                                 l5005 2188  
                               l3511 4606                                 l3503 45E0  
                               l3271 31E2                                 l3255 3134  
                               l3247 30FC                                 l3239 30BE  
                               l3191 2F8A                                 l3183 2F58  
                               l3167 2F04                                 l3175 2F2E  
                               l3159 2ED8                                 l3423 2EC6  
                               l3415 2EAC                                 l3407 2E52  
                               l3351 2C0E                                 l3343 2BD2  
                               l3327 2B5C                                 l3319 2B2A  
                               l3095 2930                                 l3079 2890  
                               l3087 28E6                                 l4303 4A3C  
                               l4311 48CA                                 l5111 2574  
                               l5031 2222                                 l5023 21F0  
                               l5015 21AE                                 l5007 218C  
                               l3513 460C                                 l3505 45E6  
                               l3281 324C                                 l3265 319E  
                               l3273 31E6                                 l3257 3138  
                               l3249 3106                                 l3193 2F8C  
                               l3185 2F5A                                 l3177 2F3E  
                               l3169 2F14                                 l3441 44E6  
                               l3433 446A                                 l3417 2EBA  
                               l3409 2E66                                 l3361 2C54  
                               l3353 2C1C                                 l3345 2BDE  
                               l3337 2BA6                                 l3329 2B62  
                               l3097 293A                                 l3089 290C  
                               l3601 4A76                                 l4305 4A46  
                               l3521 463E                                 l4313 48D6  
                               l5121 25E0                                 l5105 255E  
                               l5041 225C                                 l5033 2234  
                               l5025 21F2                                 l5017 21C6  
                               l5009 2190                                 l3507 45FC  
                               l3283 3250                                 l3275 3200  
                               l3267 31AA                                 l3259 3146  
                               l3187 2F6A                                 l3195 2F94  
                               l3179 2F44                                 l3443 450A  
                               l3435 4498                                 l3419 2EBC  
                               l3371 2CC2                                 l3363 2C6E  
                               l3355 2C28                                 l3347 2BF6  
                               l3339 2BB2                                 l3099 2948  
                               l3427 47C0                                 l3451 4046  
                               l3531 3274                                 l3611 4856  
                               l3603 4A86                                 l4091 454A  
                               l4307 4A48                                 l4323 493A  
                               l3523 464C                                 l3515 461C  
                               l4315 48DE                                 l5115 2594  
                               l5051 22B4                                 l5043 225E  
                               l5035 2238                                 l5027 21F4  
                               l5019 21E0                                 l3509 4604  
                               l3285 325E                                 l3277 3216  
                               l3269 31B8                                 l3197 2FA4  
                               l3189 2F7A                                 l3445 4510  
                               l3437 44A8                                 l3381 2D58  
                               l3373 2CEC                                 l3365 2C7E  
                               l3357 2C38                                 l3349 2C02  
                               l3429 47D0                                 l3461 4096  
                               l3533 3284                                 l3621 3F18  
                               l3613 485E                                 l3605 4A8A  
                               l4093 454E                                 l4309 4A4A  
                               l4325 493E                                 l3525 4662  
                               l3517 462E                                 l4317 48E6  
                               l5117 25BC                                 l5061 230C  
                               l5053 22B6                                 l5045 2274  
                               l5037 223A                                 l5109 256A  
                               l5029 220E                                 l3287 3264  
                               l3279 3230                                 l3199 2FBA  
                               l3439 44D6                                 l3391 2D98  
                               l3383 2D66                                 l3375 2D22  
                               l3367 2C9A                                 l3359 2C44  
                               l3471 40C0                                 l3463 409A  
                               l3455 405A                                 l3551 334A  
                               l3543 3302                                 l3535 3292  
                               l3631 401E                                 l3623 3F4A  
                               l3615 4884                                 l3607 484A  
                               l4095 4572                                 l4087 4514  
                               l4327 494C                                 l3527 466A  
                               l3519 4636                                 l3703 3C2E  
                               l4319 48F6                                 l5119 25C8  
                               l5071 236C                                 l5063 230E  
                               l5055 22CC                                 l5039 224C  
                               l5047 2290                                 l3641 4136  
                               l3289 3266                                 l3393 2DC6  
                               l3385 2D78                                 l3377 2D30  
                               l3369 2CA6                                 l3297 2AAE  
                               l3481 40E8                                 l3473 40CA  
                               l3465 40A8                                 l3457 4084  
                               l3449 4030                                 l3561 33CA  
                               l3553 3356                                 l3545 330A  
                               l3537 32D8                                 l3801 1ECA  
                               l3617 4886                                 l3609 484E  
                               l3721 49AA                                 l4097 457C  
                               l4089 4524                                 l4329 4950  
                               l3529 4670                                 l5081 2406  
                               l5073 23CA                                 l5065 2324  
                               l5049 22A4                                 l5057 22E8  
                               l3635 49EA                                 l3651 41C0  
                               l3643 4164                                 l3387 2D86  
                               l3379 2D4E                                 l3299 2ABA  
                               l3483 40F4                                 l3475 40D4  
                               l3459 4086                                 l3571 3412  
                               l3563 33CC                                 l3555 3392  
                               l3547 3316                                 l3539 32EE  
                               l3627 3F5E                                 l3811 1FC4  
                               l3803 1EE2                                 l3731 46C6  
                               l3723 49AC                                 l3715 4998  
                               l4099 457E                                 l5155 3C14  
                               l5091 24D8                                 l5083 2438  
                               l5075 23D8                                 l5067 233C  
                               l5059 22FC                                 l3813 496A  
                               l3493 45A8                                 l3637 4A06  
                               l3653 41D2                                 l3645 4174  
                               l3397 2DF0                                 l3389 2D8A  
                               l3485 4104                                 l3573 3414  
                               l3565 33D0                                 l3557 339E  
                               l3549 3348                                 l3629 3FAE  
                               l3805 1F14                                 l3741 4770  
                               l3725 49AE                                 l3717 49A2  
                               l3901 48B2                                 l3581 431E  
                               l4701 444C                                 l5093 24F4  
                               l5085 2456                                 l5069 2358  
                               l3815 496E                                 l3495 45B0  
                               l3655 41E0                                 l3647 41A2  
                               l3399 2DFC                                 l3487 4114  
                               l3567 33F4                                 l3559 33AC  
                               l3807 1F30                                 l3591 4A7C  
                               l3743 47B6                                 l3735 46D0  
                               l3719 49A8                                 l3727 4A12  
                               l3911 48C4                                 l3903 48BC  
                               l4711 3450                                 l3583 4328  
                               l3671 3AFE                                 l3663 3ABE  
                               l4703 4466                                 l5095 2506  
                               l5087 2488                                 l5079 23EA  
                               l3841 423E                                 l3817 497E  
                               l3497 45C2                                 l4641 3CDE  
                               l4633 3C56                                 l3657 4230  
                               l3649 41B2                                 l2961 261A  
                               l2953 25EE                                 l3489 4124  
                               l3569 3404                                 l3809 1F90  
                               l3761 1A12                                 l3753 1840  
                               l3593 4A80                                 l3737 4716  
                               l3729 4680                                 l3921 0EFC  
                               l3913 48C6                                 l3905 48BE  
                               l4721 34C0                                 l4713 346C  
                               l4705 3428                                 l3585 4344  
                               l3577 42FE                                 l3681 3B52  
                               l3673 3B08                                 l3665 3AE4  
                               l4801 379C                                 l5097 2512  
                               l5089 24A6                                 l4651 3DDE  
                               l3851 426E                                 l3843 424C  
                               l3499 45CA                                 l4643 3D20  
                               l4635 3C72                                 l3659 4236  
                               l2971 2654                                 l2963 262A  
                               l2955 25FA                                 l3771 1B14  
                               l3763 1A46                                 l3755 1976  
                               l3595 4A68                                 l3747 4720  
                               l3931 0FF6                                 l3923 0F2E  
                               l3915 0E08                                 l3907 48C0  
                               l4731 3508                                 l4723 34CC  
                               l4715 3478                                 l4707 3448  
                               l4299 4A30                                 l3835 4A50  
                               l3587 4376                                 l3579 430E  
                               l3691 3BDA                                 l3683 3B7A  
                               l3675 3B28                                 l3667 3AEC  
                               l4811 3800                                 l4803 379C  
                               l5099 252A                                 l4661 3E2E  
                               l4653 3DF6                                 l3861 429C  
                               l3853 4272                                 l3845 4254  
                               l4645 3D3C                                 l4637 3CC6  
                               l2981 2682                                 l2973 265A  
                               l2965 263A                                 l2957 2608  
                               l3781 1C4E                                 l3773 1B48  
                               l3765 1A78                                 l3757 19A8  
                               l3597 4A6C                                 l3749 4766  
                               l3941 10CC                                 l3933 1028  
                               l3925 0F60                                 l3917 0EA0  
                               l3909 48C2                                 l4741 3578  
                               l4733 3534                                 l4717 34A8  
                               l4725 34D0                                 l4709 3450  
                               l3837 4A60                                 l3693 3BDC  
                               l3685 3B96                                 l3677 3B40  
                               l3669 3AFA                                 l4821 3846  
                               l4813 380C                                 l4805 37B8  
                               l4671 3E84                                 l4663 3E30  
                               l4655 3E04                                 l3871 42D0  
                               l3863 42AA                                 l3855 427A  
                               l3847 4258                                 l3839 423A  
                               l4647 3D80                                 l4639 3CDA  
                               l4751 391C                                 l2991 26B6  
                               l2983 2684                                 l2975 266C  
                               l2967 263C                                 l2959 260A  
                               l3791 1DA0                                 l3783 1C82  
                               l3775 1BAE                                 l3767 1AAA  
                               l3759 19E0                                 l3599 4A72  
                               l3951 11A2                                 l3943 10FE  
                               l3927 0F92                                 l3935 1036  
                               l3919 0EF2                                 l4743 3584  
                               l4735 354C                                 l4727 34EE  
                               l4719 34B4                                 l3687 3BA8  
                               l3679 3B4E                                 l4831 38BA  
                               l4823 3854                                 l4815 3818  
                               l4807 37C4                                 l4911 2002  
                               l4681 3EC6                                 l4673 3E86  
                               l4657 3E12                                 l4649 3DD0  
                               l3873 42D6                                 l3865 42B0  
                               l3857 428C                                 l3849 4266  
                               l4761 3968                                 l4753 3938  
                               l2985 2694                                 l2993 26BE  
                               l2977 266E                                 l2969 2644  
                               l3793 1DD2                                 l3785 1CBA  
                               l3777 1BC4                                 l3769 1AE2  
                               l3961 1278                                 l3953 11D4  
                               l3945 1130                                 l3937 1068  
                               l3929 0FC4                                 l4745 3590  
                               l4737 3556                                 l4729 34FA  
                               l3689 3BBC                                 l3697 3BF2  
                               l4841 3900                                 l4833 38C4  
                               l4825 3880                                 l4809 37F4  
                               l4817 381C                                 l4921 2024  
                               l4913 200E                                 l4683 3EF2  
                               l4675 3E9E                                 l4667 3E44  
                               l4659 3E16                                 l3867 42C6  
                               l3859 4294                                 l3875 42DC  
                               l4763 3998                                 l4771 39C0  
                               l4755 3940                                 l2995 26CE  
                               l2987 26A4                                 l2979 2674  
                               l3795 1E2A                                 l3787 1CEC  
                               l3779 1BF6                                 l3963 12AA  
                               l3971 134E                                 l3955 1206  
                               l3947 1162                                 l3939 109A  
                               l4739 356E                                 l4747 359C  
                               l3699 3C22                                 l3883 4806  
                               l4691 43DE                                 l4835 38D0  
                               l4827 3898                                 l4819 383A  
                               l4851 3612                                 l4843 35D0  
                               l4931 2040                                 l4923 202C  
                               l4915 2014                                 l4685 3EF4  
                               l4669 3E5C                                 l4677 3EA0  
                               l3877 42EC                                 l3869 42CE  
                               l4781 3A3C                                 l4773 39DE  
                               l4765 39A4                                 l4757 3940  
                               l2997 26E0                                 l2989 26B4  
                               l3789 1D44                                 l3797 1E86  
                               l3981 1448                                 l3973 1380  
                               l3965 12DC                                 l3957 1214  
                               l3949 1170                                 l3893 488A  
                               l4749 35B4                                 l3885 480E  
                               l4693 4406                                 l4837 38DC  
                               l4829 38A2                                 l4861 3672  
                               l4853 361E                                 l4845 35EE  
                               l4941 205C                                 l4933 2048  
                               l4925 2034                                 l4917 2018  
                               l4909 2002                                 l4687 3F0C  
                               l4679 3EAE                                 l3879 42F4  
                               l4791 3A80                                 l4783 3A46  
                               l4775 39EA                                 l4767 39B0  
                               l4759 395C                                 l2999 26EE  
                               l3799 1E96                                 l3991 151E  
                               l3983 147A                                 l3975 13B2  
                               l3967 130E                                 l3959 1246  
                               l3895 488E                                 l3887 481E  
                               l4695 4408                                 l4839 38E8  
                               l4871 36DA                                 l4855 364E  
                               l4863 3676                                 l4847 35F6  
                               l4951 2068                                 l4943 205E  
                               l4935 2050                                 l4927 2038  
                               l4919 201C                                 l4785 3A5E  
                               l4793 3A8C                                 l4777 39F8  
                               l4769 39BC                                 l3993 1550  
                               l3977 13E4                                 l3985 1488  
                               l3969 1340                                 l3897 4898  
                               l3889 483E                                 l4697 4420  
                               l4689 43C6                                 l4881 372A  
                               l4873 36F2                                 l4865 3694  
                               l4857 365A                                 l4849 35F6  
                               l4961 207C                                 l4953 206A  
                               l4945 2060                                 l4937 2058  
                               l4929 203C                                 l4795 3AA4  
                               l4787 3A68                                 l4779 3A24  
                               l3995 1582                                 l3987 14BA  
                               l3979 1416                                 l3899 48A8  
                               l4699 4434                                 l4883 3736  
                               l4875 36FC                                 l4867 36A0  
                               l4859 3666                                 l4971 2090  
                               l4963 2080                                 l4955 2070  
                               l4947 2062                                 l4939 205A  
                               l4789 3A74                                 l3997 15B4  
                               l3989 14EC                                 l4797 3776  
                               l4877 3714                                 l4885 3742  
                               l4869 36AE                                 l4981 20D4  
                               l4973 2094                                 l4965 2084  
                               l4957 2074                                 l4949 2066  
                               l3999 15C2                                 l4799 3794  
                               l4887 375A                                 l4879 371E  
                               l4991 212C                                 l4983 20E8  
                               l4975 20A4                                 l4967 2088  
                               l4959 2078                                 l4993 2138  
                               l4985 20F4                                 l4977 20B0  
                               l4969 208C                                 l4995 2150  
                               l4987 210C                                 l4979 20C8  
                               l4997 215C                                 l4989 2118  
                               STR_1 0E01                                 u3000 2F14  
                               u3001 2F10                                 u3010 2F58  
                               u3011 2F54                                 u3100 30F6  
                               u3020 2F6A                                 u3101 30F2  
                               u3021 2F66                                 u3110 3114  
                               u3030 2F7A                                 u3111 3110  
                               u3031 2F76                                 u4000 4266  
                               u3200 325E                                 u3120 3134  
                               u3040 2FBA                         _BAUD4CONbits 0EE9  
                               u4001 4262                                 u3201 325A  
                               u3121 3130                                 u3041 2FB6  
                               u4010 428C                                 u3130 3146  
                               u3050 2FFA                                 u3210 2AC8  
                               u4011 4288                                 u3131 3142  
                               u3051 2FF6                                 u3211 2AC4  
                               u4020 42AA                                 u3140 3174  
                               u3060 3070                                 u3300 2D66  
                               u3220 2ADA                                 u4100 0FF6  
                               u4021 42A6                                 u3141 3170  
                               u3061 306C                                 u3301 2D62  
                               u3221 2AD6                                 u4101 0FF2  
                               u4030 42C6                                 u3150 318A  
                               u3070 3092                                 u3310 2D86  
                               u3230 2AEA                                 u4110 1028  
                               u4031 42C2                                 u3151 3186  
                               u3071 308E                                 u3311 2D82  
                               u3231 2AE6                                 u4111 1024  
                               u4040 42EC                                 u3160 319E  
                               u3080 30BC                                 u3400 4498  
                               u3320 2D98                                 u3240 2B2A  
                               u2600 266C                                 u4200 1206  
                               u4120 1068                                 u4041 42E8  
                               u3161 319A                                 u3081 30B8  
                               u3401 4494                                 u3321 2D94  
                               u3241 2B26                                 u2601 2668  
                               u4201 1202                                 u4121 1064  
                               u3170 31B8                                 u3090 30E0  
                               u3410 44D6                                 u3330 2DC6  
                               u3250 2B3C                                 u2610 2682  
                               u4210 1246                                 u4130 109A  
                               u4050 483E                                 _T2PR 0FBC  
                               u3171 31B4                                 u3091 30DC  
                               u3411 44D2                                 u3331 2DC2  
                               u3251 2B38                                 u2611 267E  
                               u4211 1242                                 u4131 1096  
                               u4051 483A                                 u3500 45C2  
                               u5100 3D3C                                 u3180 3200  
                               u3420 450A                                 u3340 2DDC  
                               u3260 2B4C                                 u2700 27BC  
                               u2620 2694                                 u4300 1416  
                               u4220 1278                                 u4140 10CC  
                               u4060 0F2E                                 u3501 45BE  
                               u5101 3D38                                 u3181 31FC  
                               u3421 4506                                 u3341 2DD8  
                               u3261 2B48                                 u2701 27B8  
                               u2621 2690                                 u4301 1412  
                               u4221 1274                                 u4141 10C8  
                               u4061 0F2A                                 u5110 3DD0  
                               u3510 45E0                                 u3190 3230  
                               u3350 2DF0                                 u3270 2B82  
                               u2710 27DC                                 u2630 26A4  
                               u3430 4046                                 u4310 1448  
                               u4230 12AA                                 u4150 10FE  
                               u4070 0F60                                 u5111 3DCC  
                               u3511 45DC                                 u3191 322C  
                               u3351 2DEC                                 u3271 2B7E  
                               u2711 27D8                                 u2631 26A0  
                               u3431 4042                                 u4311 1444  
                               u4231 12A6                                 u4151 10FA  
                               u4071 0F5C                                 u5120 3DDE  
                               u3520 45FC                                 u3360 2E0A  
                               u3280 2B92                                 u2800 291C  
                               u2720 27EA                                 u2640 26E0  
                               u3440 407A                                 u3600 338E  
                               u4400 1626                                 u4320 147A  
                               u4240 12DC                                 u4160 1130  
                               u4080 0F92                                 u5200 3530  
                               u5121 3DDA                                 u3521 45F8  
                               u3361 2E06                                 u3281 2B8E  
                               u2801 2918                                 u2721 27E6  
                               u2641 26DC                                 u3601 338A  
                               u4401 1622                                 u4321 1476  
                               u4241 12D8                                 u4161 112C  
                               u4081 0F8E                                 u5201 352C  
                               u5130 3E04                                 u3370 2E52  
                               u3290 2D0C                                 u2810 2948  
                               u2730 27FA                                 u2650 26EE  
                               u2570 2608                                 u3450 40A8  
                               u3610 33AC                                 u4410 1658  
                               u4330 14BA                                 u4250 130E  
                               u4170 1162                                 u4090 0FC4  
                               u5210 354C                                 u3530 462E  
                               u5131 3E00                                 u3371 2E4E  
                               u2811 2944                                 u2731 27F6  
                               u2651 26EA                                 u2571 2604  
                               u3451 40A4                                 u3611 33A8  
                               u4411 1654                                 u4331 14B6  
                               u4251 130A                                 u4171 115E  
                               u4091 0FC0                                 u5211 3548  
                               u3531 462A                                 u5140 3E12  
                               u5300 3ABC                                 u3380 2E80  
                               u2900 2A2A                                 u2820 2958  
                               u2740 282C                                 u2660 275C  
                               u2580 261A                                 u3460 40BC  
                               u3620 33BC                                 u3700 4872  
                               u4500 1828                                 u4420 168A  
                               u4340 14EC                                 u4260 1340  
                               u4180 11A2                                 u5220 356E  
                               u3540 464C                                 u5141 3E0E  
                               u5301 3AB8                                 u3381 2E7C  
                               u2901 2A26                                 u2821 2954  
                               u2741 2828                                 u2661 2758  
                               u2581 2616                                 u3461 40B8  
                               u3445 4070                                 u3621 33B8  
                               u3701 486A                                 u4501 1824  
                               u4421 1686                                 u4341 14E8  
                               u4261 133C                                 u4181 119E  
                               u5221 356A                                 u3541 4648  
                               u5150 3E44                                 u3390 2EBA  
                               u2910 2A3C                                 u2830 2974  
                               u2750 283A                                 u2670 2774  
                               u2590 262A                                 u3470 40E4  
                               u3630 33CA                                 u4430 16BC  
                               u4350 151E                                 u4270 1380  
                               u4190 11D4                                 u5230 35B4  
                               u3550 4662                                 u5310 383A  
                               u5151 3E40                                 u3391 2EB6  
                               u3295 2D02                                 u2911 2A38  
                               u2831 2970                                 u2751 2836  
                               u2671 276E                                 u2591 2626  
                               u3471 40E0                                 u3631 33C6  
                               u4431 16B8                                 u4351 151A  
                               u4271 137C                                 u4191 11D0  
                               u5231 35B0                                 u3551 465E  
                               u5311 3836                                 u5160 3EAE  
                               u2920 2A4C                                 u2840 2984  
                               u2760 2858                                 u2680 2776  
                               u3480 4104                                 u3640 3404  
                               u3560 3284                                 u3720 3F4A  
                               u4440 16EE                                 u4360 1550  
                               u4280 13B2                                 u5240 35CC  
                               u3800 3BA8                                 u5320 387C  
                               u5400 3714                                 u5161 3EAA  
                               u2921 2A48                                 u2841 2980  
                               u2761 2854                                 u3481 4100  
                               u3641 3400                                 u3561 3280  
                               u3721 3F46                                 u4441 16EA  
                               u4361 154C                                 u4281 13AE  
                               u5241 35C8                                 u3801 3BA4  
                               u5321 3878                                 u5401 3710  
                               u5090 3C72                                 u5250 39DE  
                               u3730 4164                                 u2930 2A6C  
                               u2850 2996                                 u2770 2890  
                               u2690 279E                                 u3490 4114  
                               u3650 3412                                 u3570 3292  
                               u4450 172E                                 u4370 1582  
                               u4290 13E4                                 u3810 3BB8  
                               u5170 43C6                                 u5330 3898  
                               u5410 375A                                 u5091 3C6E  
                               u5251 39DA                                 u3731 4160  
                               u2931 2A68                                 u2851 2992  
                               u2771 288C                                 u2691 279A  
                               u3491 4110                                 u3651 340E  
                               u3571 328E                                 u4451 172A  
                               u4371 157E                                 u4291 13E0  
                               u3811 3BB4                                 u5171 43C2  
                               u5331 3894                                 u5411 3756  
                               u5260 3A20                                 u3740 41A2  
                               u2940 2A7E                                 u2860 29AC  
                               u2780 28D6                                 u3580 32EE  
                               u3900 1BF6                                 u4460 1760  
                               u4380 15B4                                 u3660 430E  
                               u3820 3BEE                                 u5180 4434  
                               u5340 38BA                                 u5420 3772  
                               u5500 2170                                 u5261 3A1C  
                               u3741 419E                                 u2941 2A7A  
                               u2861 29A8                                 u2781 28D2  
                               u3581 32EA                                 u3901 1BF2  
                               u4461 175C                                 u4381 15B0  
                               u3661 430A                                 u3821 3BEA  
                               u5181 4430                                 u5341 38B6  
                               u5421 376E                                 u5501 216C  
                               u5270 3A3C                                 u3750 41C0  
                               u2950 2A9A                                 u2870 29C2  
                               u2790 290C                                 u3590 3344  
                               u3910 1CEC                                 u3830 1976  
                               u3718 4874                                 u4470 1792  
                               u4390 15F4                                 u5190 34EE  
                               u3670 431E                                 u5350 3900  
                               u5271 3A38                                 u3751 41BC  
                               u2951 2A96                                 u2871 29BE  
                               u2791 2908                                 u3591 3340  
                               u3911 1CE8                                 u3831 1972  
                               u4471 178E                                 u4391 15F0  
                               u5191 34EA                                 u3671 431A  
                               u5351 38FC                                 u5511 2182  
                               u5280 3A5E                                 u3760 41E0  
                               u2880 29D6                                 u3920 1DD2  
                               u3840 19A8                                 u2960 49D2  
                               u4480 17C4                                 u3680 4344  
                               u5360 3918                                 u5600 24A6  
                               u5520 2222                                 u5281 3A5A  
                               u3761 41DC                                 u2881 29D2  
                               u3921 1DCE                                 u3841 19A4  
                               u2961 49CE                                 u4481 17C0  
                               u3681 4340                                 u5361 3914  
                               u5601 24A2                                 u5521 221E  
                               u5290 3AA4                                 u3770 4230  
                               u2890 29F0                                 u3930 1E96  
                               u3850 1A12                                 u2970 49E8  
                               u4490 17F6                                 u3690 4376  
                               u5370 3694                                 u5610 24F4  
                               u5530 224C                                 u5291 3AA0  
                               u3771 422C                                 u2891 29EC  
                               u3931 1E92                                 u3851 1A0E  
                               u2971 49E4                                 u4491 17F2  
                               u3691 4372                                 u5371 3690  
                               u5611 24F0                                 u5531 2248  
                               u2980 2EF2                                 u3940 1F14  
                               u3860 1A78                                 u3780 3AE4  
                               u5380 36D6                                 u5620 255A  
                               u5540 22A4                                 u2981 2EEE  
                               u3941 1F10                                 u3861 1A74  
                               u3781 3AE0                                 u5381 36D2  
                               u5621 2556                                 u5541 22A0  
                               u3950 4996                                 u2990 2F04  
                               u3870 1AAA                                 u4830 4968  
                               u3790 3B28                                 u5390 36F2  
                               u5630 2590                                 u5550 22FC  
                               u5470 20A4                                 u3951 4992  
                               u2991 2F00                                 u3871 1AA6  
                               u4831 4964                                 u3791 3B24  
                               u5391 36EE                                 u5631 258C  
                               u5551 22F8                                 u5471 20A0  
                               u3880 1B14                                 u5560 236C  
                               u5480 20E8                                 u3881 1B10  
                               u5561 2368                                 u5481 20E4  
                               u3890 1BAE                                 u5570 23E6  
                               u5490 212C                                 u3891 1BAA  
                               u5707 43D0                                 u5571 23E2  
                               u5491 2128                                 u3980 4A60  
                               u5580 2406                                 u3981 4A5C  
                               u5717 4412                                 u5581 2402  
                               u3990 424C                                 u5590 2456  
                               u5807 3E4E                                 u3991 4248  
                               u5727 443E                                 u5591 2452  
                               u5647 219C                                 u5817 3E90  
                               u5737 4458                                 u5657 21D2  
                               u5827 3EB8                                 u5747 3500  
                               u5667 2200                                 u5837 3EFE  
                               u5757 489E                                 u5677 25D4  
                               u5767 39F0                                 u5687 36A6  
                               u5777 4974                                 u5697 384C  
                               u5787 3DE8                                 u5797 3E20  
                               _dbuf 013C                                 _main 2002  
                               _prec 00F8                                 _temp 00FD  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                    ___fldiv@new_exp 0033               __end_of_color_read_Red 46D0  
                       ___param_bank 0000              __end_of_color_cardCheck 1840  
                      ___fltol@sign1 0009                      __end_of___fladd 2AAE  
                              ?_main 0001                      __end_of___fldiv 3272  
                    __end_of___awdiv 42FE                      __end_of___flmul 2ED8  
                    __end_of___flsub 4806                      __end_of___fltol 4136  
                    ___awdiv@divisor 0003                          ?_RGB_to_HSV 006A  
                    __end_of___lwdiv 461C                      __end_of___lwmod 4680  
                    ___awdiv@counter 0005                         vfpfcnvrt@fmt 000F  
            __end_of_sendCharSerial4 4A66           __end_of_I2C_2_Master_Start 4A86  
         __end_of_I2C_2_Master_Write 4A72                                _flags 00FA  
                       main@senddata 018C                                _fputc 42FE  
                    __end_of_forward 35CE                                _width 00F6  
                              _putch 4A90                                main@i 01BE  
                              main@j 01B6                                tablat 0FF5  
                              status 0FD8                      __end_of_sprintf 4906  
            __end_of_color_read_Blue 47C0                _I2C_2_Master_RepStart 4A86  
                 _switch_calibration 43B8                      ?_color_read_Red 0005  
                    __initialization 4906                      main@Color_Value 01BC  
                       __end_of_main 25EE                  ?_switch_calibration 0001  
                             ??_main 00DF                        __activetblptr 0003  
                main@Operation_Count 01BB                         ?_setMotorPWM 000E  
                             ?_fputc 0001                               _CCPR1H 0FAA  
                             _CCPR2H 0FA6                               _CCPR3H 0F25  
                             _CCPR4H 0F21                     ___awdiv@dividend 0001  
               ??_switch_calibration 0003                               ?_putch 0001  
                             _RC0PPS 0E62                               _RC4REG 0EE3  
                             _RE2PPS 0E74                               _RD5PPS 0E6F  
                             _RC7PPS 0E69                               _RD6PPS 0E70  
                             _RE4PPS 0E76                               _RG6PPS 0E88  
                   __end_of_backward 3ABE             __end_of_color_click_init 48CA  
                             _RX4PPS 0E15                     forward@max_power 0020  
                             _TX4REG 0EE4                     __end_of___xxtofl 3426  
                       _CCPTMRS0bits 0FAD                         vfprintf@cfmt 001C  
                             ___flge 4136                               ___fleq 446A  
                   ?_color_cardCheck 005C                            ??___fladd 0009  
                             ___wmul 49EA                            ??___fldiv 002A  
                          ??___awdiv 0005                            ??___flmul 0043  
                          ??___flsub 0022                            ??___fltol 0005  
                          ??___lwdiv 000B                            ??___lwmod 0005  
      delay_ms_function@milliseconds 0001                               clear_0 491E  
                             clear_1 492A                     ___awdiv@quotient 0007  
                             _motorL 0183                               _motorR 017A  
                             isa$std 0001                               fputc@c 0001  
                          ??_forward 0018                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                     ?_sendCharSerial4 0001  
                             putch@c 0001                     __end_of_vfprintf 4848  
                  ??_initDCmotorsPWM 0003                            ??_sprintf 0022  
                   __end_of_turnLEFT 391A                           ___flge@ff1 0001  
                         ___flge@ff2 0005                         ___xxtofl@arg 0016  
                       ___xxtofl@exp 0015                         ___xxtofl@val 000C  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 4934  
           __end_of_color_read_Clear 4770             __end_of_color_read_Green 4720  
             ?_I2C_2_Master_RepStart 0001                        ___rparam_used 0001  
                         ___fltol@f1 0001                     ?_color_read_Blue 0005  
                     __pcstackCOMRAM 0001                         __pidataBANK0 4A92  
                      __end_of_fputc 43B8                        __end_of_putch 4A92  
                  forward@delay_time 0022                       _RGB_to_HSV$321 009D  
                     _RGB_to_HSV$322 00A1                       _RGB_to_HSV$318 0091  
                     _RGB_to_HSV$319 0095                   RGB_to_HSV@deltaRGB 00AD  
                            ??_fputc 0004                              ??_putch 0001  
                         __pbssBANK0 00E2                           __pbssBANK1 0100  
                  _color_writetoaddr 4A10                         _T2CLKCONbits 0FBF  
                 _adjust_calibration 3DC2                              ?___flge 0001  
                            ?___fleq 0001                   ?_color_writetoaddr 0003  
                            ?___wmul 0001                   backward@delay_time 0022  
                ?_adjust_calibration 0001                  ??_color_writetoaddr 0004  
                          ?_backward 0014                         ??_RGB_to_HSV 005C  
                  _delay_ms_function 496A                           backward@mL 0014  
                         backward@mR 0016                            ?___xxtofl 000C  
                 ?_delay_ms_function 0001                              _SP4BRGH 0EE6  
                            _SP4BRGL 0EE5                              _SSP2ADD 0ED6  
                            _SSP2BUF 0ED5                  ??_delay_ms_function 0003  
               ??_adjust_calibration 0003               color_writetoaddr@value 0003  
       turnLEFT@rotation_calibration 001B                     ??_color_read_Red 0007  
          __end_of_color_writetoaddr 4A30                          RGB_to_HSV@B 0072  
                        RGB_to_HSV@C 0076                          RGB_to_HSV@G 006E  
                        RGB_to_HSV@H 007A                          RGB_to_HSV@R 006A  
                        RGB_to_HSV@S 007B                          RGB_to_HSV@V 007C  
                        RGB_to_HSV@b 00BD                          RGB_to_HSV@g 00B9  
                 _I2C_2_Master_Start 4A7C                          RGB_to_HSV@r 00B5  
                         _initUSART4 4A30                   _I2C_2_Master_Write 4A66  
                            __Hparam 0000                   __end_of_RGB_to_HSV 2002  
                            __Lparam 0000                    color_read_Red@tmp 000A  
            sendStringSerial4@string 0002                              ___fladd 25EE  
                            ___fldiv 2ED8                              ___awdiv 423A  
                            ___flmul 2AAE                              ___flsub 47C0  
                            ___fltol 4030                  ?_I2C_2_Master_Start 0001  
                            ___lwdiv 45A8                  ?_I2C_2_Master_Write 0001  
                            ___lwmod 461C                            ?_vfprintf 0019  
                       __psmallconst 0E00                            ?_turnLEFT 0014  
          __end_of_delay_ms_function 4998                              __pcinit 4906  
                            __ramtop 0E00                              __ptext0 2002  
                            __ptext1 35CE                              __ptext2 3774  
                            __ptext3 43B8                              __ptext4 48CA  
                            __ptext5 4806                              __ptext6 3ABE  
                            __ptext7 42FE                              __ptext8 4A90  
                            __ptext9 461C                           ??_backward 0018  
                          _T2CONbits 0FBD                              _forward 3426  
                         ??___xxtofl 0010                            _T2HLTbits 0FBE  
                      _RxBufWriteCnt 00FC                              _sprintf 48CA  
               ??_I2C_2_Master_Start 0002                 ??_I2C_2_Master_Write 0002  
               end_of_initialization 4934                              fputc@fp 0003  
                  ?_color_click_init 0001                   ??_color_click_init 0005  
                  __end_of_vfpfcnvrt 3C56                              postdec2 0FDD  
                            postinc0 0FEE                              postinc1 0FE6  
                            postinc2 0FDE                     vfpfcnvrt@convarg 0013  
                         main@F14556 015C                           ??_vfprintf 001C  
                         ??_turnLEFT 0018                    __end_of_turnRIGHT 3774  
                    _initDCmotorsPWM 4514                   turnRIGHT@max_power 0020  
                          _PORTFbits 0F8E                   setMotorPWM@negDuty 0013  
                        ___fladd@grs 0010                        ___xxtofl@sign 0014  
                          _TRISAbits 0F81                   setMotorPWM@posDuty 0012  
                          _TRISCbits 0F83                            _TRISDbits 0F84  
                          _TRISEbits 0F85                            _TRISFbits 0F86  
                          _TRISGbits 0F87                            _TRISHbits 0F88  
adjust_calibration@calibration_label 0001  switch_calibration@calibration_index 0001  
                        ___fldiv@grs 0035                          ___fldiv@rem 002E  
                         main@i_1544 01B9             color_writetoaddr@address 0004  
            ??_I2C_2_Master_RepStart 0002                          ___flmul@grs 0048  
                        _CCP1CONbits 0FAB                    ?_color_read_Clear 0005  
                       _EUSART4RXbuf 00E2                         _EUSART4TXbuf 0100  
                        _CCP2CONbits 0FA7                           main@length 01B4  
                  ?_color_read_Green 0005                          _CCP3CONbits 0F26  
                        ?_initUSART4 0001          forward@Distance_Calibration 001B  
                        _CCP4CONbits 0F22            sendCharSerial4@charToSend 0001  
                 ??_color_read_Clear 0007                   ??_color_read_Green 0007  
         __end_of_custom_floatmodulo 4030                       __end_of___flge 423A  
                     __end_of___fleq 4514                          vfpfcnvrt@ap 0010  
                        vfpfcnvrt@cp 0017                          vfpfcnvrt@fp 000E  
                     __end_of___wmul 4A10            color_cardCheck@card_color 00D1  
                   RGB_to_HSV@H_temp 00A9                  color_read_Clear@tmp 000A  
                start_initialization 4906                        _TxBufWriteCnt 005F  
                   RGB_to_HSV@c_norm 007D                     RGB_to_HSV@maxRGB 00B1  
                   RGB_to_HSV@minRGB 0099                      _RGB_to_HSV$2710 0089  
                    _RGB_to_HSV$2711 00A5                      _RGB_to_HSV$2712 008D  
                    _RGB_to_HSV$2708 0081                      _RGB_to_HSV$2709 0085  
                color_read_Green@tmp 000A                   turnLEFT@delay_time 0022  
            __end_of_initDCmotorsPWM 45A8                          vfprintf@fmt 001A  
                           ??___flge 0009                             ??___fleq 0009  
                           ??___wmul 0005                  custom_floatmodulo@x 0054  
                custom_floatmodulo@y 0058                          __pdataBANK0 00FD  
                        _calibration 0170                            ___fladd@a 0005  
                          ___fladd@b 0001         backward@Distance_Calibration 001B  
                          ___fldiv@a 0026                            ___fldiv@b 0022  
                          ___flmul@a 003F                            ___flmul@b 003B  
                        __pbssCOMRAM 005E                            ___flsub@a 001E  
                          ___flsub@b 001A                        __pcstackBANK0 0060  
                      __pcstackBANK1 018C                main@Operation_History 01A0  
          custom_floatmodulo@intPart 0068                     ___lwdiv@dividend 0007  
                        turnRIGHT@mL 0014                          turnRIGHT@mR 0016  
                           ?___fladd 0001                             ?___fldiv 0022  
                           ?___awdiv 0001                             ?___flmul 003B  
                           ?___flsub 001A                             ?___fltol 0001  
                           ?___lwdiv 0007                             ?___lwmod 0001  
                          backward@i 001C                            backward@j 001E  
               I2C_2_Master_Read@ack 0003                 I2C_2_Master_Read@tmp 0004  
                        __smallconst 0E00                             ?_forward 0014  
                  _I2C_2_Master_Idle 49C2                    _I2C_2_Master_Init 4998  
                  _I2C_2_Master_Read 4848                    _I2C_2_Master_Stop 4A72  
                       _RxBufReadCnt 00FB                   ?_I2C_2_Master_Idle 0001  
                 ?_I2C_2_Master_Init 0001                    main@distance_back 01B5  
                 ?_I2C_2_Master_Read 0001                        ??_setMotorPWM 0010  
                 ?_I2C_2_Master_Stop 0001                     ___lwdiv@quotient 000B  
           initDCmotorsPWM@PWMperiod 0001                             ?_sprintf 001D  
                  ??_color_cardCheck 005E                    backward@max_power 0020  
                  _sendStringSerial4 493A                  ??_I2C_2_Master_Idle 0001  
                ??_I2C_2_Master_Init 0001                  ??_I2C_2_Master_Read 0002  
                     ___wmul@product 0005                             _LATAbits 0F79  
                ??_I2C_2_Master_Stop 0002                             _LATCbits 0F7B  
                           _LATDbits 0F7C                             _LATEbits 0F7D  
                           _LATFbits 0F7E                             _LATGbits 0F7F  
                           _LATHbits 0F80                   ?_sendStringSerial4 0002  
                           _PIE4bits 0E2D                             _PIR4bits 0E37  
                   ?_initDCmotorsPWM 0001                    ??_sendCharSerial4 0001  
                           _SSP2CON2 0EDA                  ??_sendStringSerial4 0004  
                           _SSP2STAT 0ED8                            _vfpfcnvrt 3ABE  
          __end_of_I2C_2_Master_Idle 49EA            __end_of_I2C_2_Master_Init 49C2  
          __end_of_I2C_2_Master_Read 488A                    ___wmul@multiplier 0001  
          __end_of_I2C_2_Master_Stop 4A7C                         setMotorPWM@m 000E  
        I2C_2_Master_Write@data_byte 0002        turnRIGHT@rotation_calibration 001B  
                          _turnRIGHT 35CE                    ??_color_read_Blue 0007  
                       _TxBufReadCnt 005E                           vfpfcnvrt@c 0018  
          __end_of_sendStringSerial4 496A        __end_of_I2C_2_Master_RepStart 4A90  
                 color_read_Blue@tmp 000A                  __end_of_setMotorPWM 3DC2  
                       ??_initUSART4 0001                             __Hrparam 0000  
                         vfprintf@ap 001B                             __Lrparam 0000  
                         vfprintf@fp 0019                            forward@mL 0014  
                          forward@mR 0016                           ?_vfpfcnvrt 000E  
                           _backward 391A                           _ANSELDbits 0EA7  
                         _ANSELFbits 0EB4                           sprintf@fmt 001F  
                         turnLEFT@mL 0014                           turnLEFT@mR 0016  
                           ___xxtofl 3272                           ?_turnRIGHT 0014  
                 _custom_floatmodulo 3F18                      ___lwdiv@divisor 0009  
                         turnRIGHT@i 001C                           turnRIGHT@j 001E  
         __end_of_switch_calibration 446A                   __end_of_initUSART4 4A4E  
                    ___lwdiv@counter 000D                             __ptext10 493A  
                           __ptext11 4A4E                             __ptext20 46D0  
                           __ptext12 4A30                             __ptext21 4720  
                           __ptext13 4514                             __ptext30 3F18  
                           __ptext22 4770                             __ptext14 3426  
                           __ptext31 3272                             __ptext23 4A66  
                           __ptext15 488A                             __ptext40 3C56  
                           __ptext32 4030                             __ptext24 4A72  
                           __ptext16 4A10                             __ptext41 49EA  
                           __ptext33 47C0                             __ptext25 4A7C  
                           __ptext17 4998                             __ptext42 45A8  
                           __ptext34 25EE                             __ptext26 4A86  
                           __ptext18 0E08                             __ptext43 496A  
                           __ptext35 2AAE                             __ptext27 4848  
                           __ptext19 4680                             __ptext44 423A  
                           __ptext36 446A                             __ptext28 49C2  
                           __ptext45 3DC2                             __ptext37 2ED8  
                           __ptext29 1840                             __ptext38 4136  
                           __ptext39 391A          custom_floatmodulo@remainder 0064  
                  turnLEFT@max_power 0020                         _SSP2CON1bits 0ED9  
                       _SSP2CON2bits 0EDA                  ?_custom_floatmodulo 0054  
                           isa$xinst 0000                           _RC4STAbits 0EE7  
                           _vfprintf 4806                 ??_custom_floatmodulo 005C  
                           _turnLEFT 3774                  turnRIGHT@delay_time 0022  
                  main@Forward_Count 01B8                             forward@i 001C  
                           forward@j 001E                          _setMotorPWM 3C56  
                          sprintf@ap 0022                            turnLEFT@i 001C  
                          turnLEFT@j 001E                     ___lwmod@dividend 0001  
         custom_floatmodulo@quotient 0060                          ??_vfpfcnvrt 0011  
                   _color_click_init 488A                      _color_cardCheck 0E08  
                           sprintf@f 0023                           _RGB_to_HSV 1840  
                           sprintf@s 001D                           _SSP2DATPPS 0E1D  
                         _SSP2CLKPPS 0E1C                      ___lwmod@divisor 0003  
                        ??_turnRIGHT 0018                      ___lwmod@counter 0005  
                   color_cardCheck@H 00D3                     color_cardCheck@S 00D7  
                   color_cardCheck@V 00DB                     color_cardCheck@b 00C9  
                   color_cardCheck@c 00CD                     color_cardCheck@g 00C5  
                   color_cardCheck@r 00C1                        ___fladd@signs 000D  
                         _TX4STAbits 0EE8                      _sendCharSerial4 4A4E  
                       ___fladd@aexp 000E                         ___fladd@bexp 000F  
