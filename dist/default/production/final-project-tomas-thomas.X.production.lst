

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 05:32:20 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 21/07/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F67K40 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100                           	psect	idataBANK0
   101   004AC4                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _temp
   105   004AC4  07                 	db	7
   106   000000                     _TX4REG	set	3812
   107   000000                     _RC4STAbits	set	3815
   108   000000                     _SP4BRGH	set	3814
   109   000000                     _TRISDbits	set	3972
   110   000000                     _LATEbits	set	3965
   111   000000                     _LATFbits	set	3966
   112   000000                     _LATGbits	set	3967
   113   000000                     _SSP2CON2bits	set	3802
   114   000000                     _RX4PPS	set	3605
   115   000000                     _SSP2CLKPPS	set	3612
   116   000000                     _SSP2DATPPS	set	3613
   117   000000                     _RC7PPS	set	3689
   118   000000                     _RE2PPS	set	3700
   119   000000                     _LATAbits	set	3961
   120   000000                     _LATDbits	set	3964
   121   000000                     _LATHbits	set	3968
   122   000000                     _PORTFbits	set	3982
   123   000000                     _CCPR2H	set	4006
   124   000000                     _CCPR1H	set	4010
   125   000000                     _T2PR	set	4028
   126   000000                     _T2CONbits	set	4029
   127   000000                     _TRISCbits	set	3971
   128   000000                     _TRISEbits	set	3973
   129   000000                     _TRISFbits	set	3974
   130   000000                     _TRISAbits	set	3969
   131   000000                     _TRISGbits	set	3975
   132   000000                     _TRISHbits	set	3976
   133   000000                     _LATCbits	set	3963
   134   000000                     _RE4PPS	set	3702
   135   000000                     _RG6PPS	set	3720
   136   000000                     _RD5PPS	set	3695
   137   000000                     _ANSELDbits	set	3751
   138   000000                     _SSP2ADD	set	3798
   139   000000                     _SSP2CON1bits	set	3801
   140   000000                     _CCPR4H	set	3873
   141   000000                     _CCPR3H	set	3877
   142   000000                     _T2CLKCONbits	set	4031
   143   000000                     _T2HLTbits	set	4030
   144   000000                     _CCP1CONbits	set	4011
   145   000000                     _CCPTMRS0bits	set	4013
   146   000000                     _CCP2CONbits	set	4007
   147   000000                     _CCP3CONbits	set	3878
   148   000000                     _CCP4CONbits	set	3874
   149   000000                     _RC4REG	set	3811
   150   000000                     _SP4BRGL	set	3813
   151   000000                     _TX4STAbits	set	3816
   152   000000                     _BAUD4CONbits	set	3817
   153   000000                     _SSP2CON2	set	3802
   154   000000                     _SSP2STAT	set	3800
   155   000000                     _SSP2BUF	set	3797
   156   000000                     _PIE4bits	set	3629
   157   000000                     _PIR4bits	set	3639
   158   000000                     _RC0PPS	set	3682
   159   000000                     _RD6PPS	set	3696
   160                           
   161                           	psect	smallconst
   162   000E00                     __psmallconst:
   163                           	callstack 0
   164   000E00  00                 	db	0
   165   000E01                     STR_1:
   166   000E01  48                 	db	72	;'H'
   167   000E02  3A                 	db	58	;':'
   168   000E03  25                 	db	37
   169   000E04  2E                 	db	46
   170   000E05  32                 	db	50	;'2'
   171   000E06  66                 	db	102	;'f'
   172   000E07  20                 	db	32
   173   000E08  53                 	db	83	;'S'
   174   000E09  3A                 	db	58	;':'
   175   000E0A  20                 	db	32
   176   000E0B  25                 	db	37
   177   000E0C  2E                 	db	46
   178   000E0D  32                 	db	50	;'2'
   179   000E0E  66                 	db	102	;'f'
   180   000E0F  20                 	db	32
   181   000E10  56                 	db	86	;'V'
   182   000E11  3A                 	db	58	;':'
   183   000E12  20                 	db	32
   184   000E13  25                 	db	37
   185   000E14  2E                 	db	46
   186   000E15  32                 	db	50	;'2'
   187   000E16  66                 	db	102	;'f'
   188   000E17  20                 	db	32
   189   000E18  43                 	db	67	;'C'
   190   000E19  3A                 	db	58	;':'
   191   000E1A  25                 	db	37
   192   000E1B  75                 	db	117	;'u'
   193   000E1C  00                 	db	0
   194   000E1D                     STR_2:
   195   000E1D  69                 	db	105	;'i'
   196   000E1E  6E                 	db	110	;'n'
   197   000E1F  66                 	db	102	;'f'
   198   000E20  00                 	db	0
   199   000E21                     STR_5:
   200   000E21  6E                 	db	110	;'n'
   201   000E22  61                 	db	97	;'a'
   202   000E23  6E                 	db	110	;'n'
   203   000E24  00                 	db	0
   204   000E25  00                 	db	0	; dummy byte at the end
   205   000000                     
   206                           ; #config settings
   207                           
   208                           	psect	cinit
   209   00493C                     __pcinit:
   210                           	callstack 0
   211   00493C                     start_initialization:
   212                           	callstack 0
   213   00493C                     __initialization:
   214                           	callstack 0
   215                           
   216                           ; Initialize objects allocated to BANK0 (1 bytes)
   217                           ; load TBLPTR registers with __pidataBANK0
   218   00493C  0EC4               	movlw	low __pidataBANK0
   219   00493E  6EF6               	movwf	tblptrl,c
   220   004940  0E4A               	movlw	high __pidataBANK0
   221   004942  6EF7               	movwf	tblptrh,c
   222   004944  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   223   004946  6EF8               	movwf	tblptru,c
   224   004948  0009               	tblrd		*+	;fetch initializer
   225   00494A  CFF5 F0FB          	movff	tablat,__pdataBANK0
   226                           
   227                           ; Clear objects allocated to BANK1 (160 bytes)
   228   00494E  EE01  F000         	lfsr	0,__pbssBANK1
   229   004952  0EA0               	movlw	160
   230   004954                     clear_0:
   231   004954  6AEE               	clrf	postinc0,c
   232   004956  06E8               	decf	wreg,f,c
   233   004958  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to BANK0 (44 bytes)
   236   00495A  EE00  F0CF         	lfsr	0,__pbssBANK0
   237   00495E  0E2C               	movlw	44
   238   004960                     clear_1:
   239   004960  6AEE               	clrf	postinc0,c
   240   004962  06E8               	decf	wreg,f,c
   241   004964  E1FD               	bnz	clear_1
   242   004966                     end_of_initialization:
   243                           	callstack 0
   244   004966                     __end_of__initialization:
   245                           	callstack 0
   246   004966  0100               	movlb	0
   247   004968  EFCE  F024         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250   0000CF                     __pbssBANK0:
   251                           	callstack 0
   252   0000CF                     _motorR:
   253                           	callstack 0
   254   0000CF                     	ds	9
   255   0000D8                     _motorL:
   256                           	callstack 0
   257   0000D8                     	ds	9
   258   0000E1                     _calibration:
   259                           	callstack 0
   260   0000E1                     	ds	9
   261   0000EA                     floorf@F521:
   262                           	callstack 0
   263   0000EA                     	ds	4
   264   0000EE                     ___fpclassifyf@F465:
   265                           	callstack 0
   266   0000EE                     	ds	4
   267   0000F2                     _width:
   268                           	callstack 0
   269   0000F2                     	ds	2
   270   0000F4                     _prec:
   271                           	callstack 0
   272   0000F4                     	ds	2
   273   0000F6                     _flags:
   274                           	callstack 0
   275   0000F6                     	ds	1
   276   0000F7                     _TxBufReadCnt:
   277                           	callstack 0
   278   0000F7                     	ds	1
   279   0000F8                     _TxBufWriteCnt:
   280                           	callstack 0
   281   0000F8                     	ds	1
   282   0000F9                     _RxBufReadCnt:
   283                           	callstack 0
   284   0000F9                     	ds	1
   285   0000FA                     _RxBufWriteCnt:
   286                           	callstack 0
   287   0000FA                     	ds	1
   288                           
   289                           	psect	dataBANK0
   290   0000FB                     __pdataBANK0:
   291                           	callstack 0
   292   0000FB                     _temp:
   293                           	callstack 0
   294   0000FB                     	ds	1
   295                           
   296                           	psect	bssBANK1
   297   000100                     __pbssBANK1:
   298                           	callstack 0
   299   000100                     _EUSART4TXbuf:
   300                           	callstack 0
   301   000100                     	ds	60
   302   00013C                     _EUSART4RXbuf:
   303                           	callstack 0
   304   00013C                     	ds	20
   305   000150                     _dbuf:
   306                           	callstack 0
   307   000150                     	ds	80
   308                           
   309                           	psect	cstackBANK1
   310   0001A0                     __pcstackBANK1:
   311                           	callstack 0
   312   0001A0                     color_cardCheck@senddata:
   313                           	callstack 0
   314                           
   315                           ; 25 bytes @ 0x0
   316   0001A0                     	ds	25
   317   0001B9                     color_cardCheck@r:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0x19
   321   0001B9                     	ds	4
   322   0001BD                     color_cardCheck@g:
   323                           	callstack 0
   324                           
   325                           ; 4 bytes @ 0x1D
   326   0001BD                     	ds	4
   327   0001C1                     color_cardCheck@b:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x21
   331   0001C1                     	ds	4
   332   0001C5                     color_cardCheck@c:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x25
   336   0001C5                     	ds	4
   337   0001C9                     color_cardCheck@card_color:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x29
   341   0001C9                     	ds	2
   342   0001CB                     color_cardCheck@H:
   343                           	callstack 0
   344                           
   345                           ; 4 bytes @ 0x2B
   346   0001CB                     	ds	4
   347   0001CF                     color_cardCheck@S:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x2F
   351   0001CF                     	ds	4
   352   0001D3                     color_cardCheck@V:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0x33
   356   0001D3                     	ds	4
   357                           
   358                           	psect	cstackBANK0
   359   000060                     __pcstackBANK0:
   360                           	callstack 0
   361   000060                     custom_floatmodulo@quotient:
   362                           	callstack 0
   363   000060                     floorf@m:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x0
   367   000060                     	ds	4
   368   000064                     floorf@e:
   369                           	callstack 0
   370   000064                     custom_floatmodulo@remainder:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0x4
   374   000064                     	ds	2
   375   000066                     floorf@u:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x6
   379   000066                     	ds	2
   380   000068                     custom_floatmodulo@intPart:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x8
   384   000068                     	ds	2
   385   00006A                     efgtoa@fp:
   386                           	callstack 0
   387   00006A                     RGB_to_HSV@R:
   388                           	callstack 0
   389                           
   390                           ; 4 bytes @ 0xA
   391   00006A                     	ds	1
   392   00006B                     efgtoa@f:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0xB
   396   00006B                     	ds	3
   397   00006E                     RGB_to_HSV@G:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0xE
   401   00006E                     	ds	1
   402   00006F                     efgtoa@c:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0xF
   406   00006F                     	ds	1
   407   000070                     efgtoa@ne:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x10
   411   000070                     	ds	2
   412   000072                     efgtoa@p:
   413                           	callstack 0
   414   000072                     RGB_to_HSV@B:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x12
   418   000072                     	ds	2
   419   000074                     efgtoa@t:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x14
   423   000074                     	ds	2
   424   000076                     _efgtoa$2309:
   425                           	callstack 0
   426   000076                     RGB_to_HSV@C:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x16
   430   000076                     	ds	2
   431   000078                     efgtoa@pp:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x18
   435   000078                     	ds	1
   436   000079                     efgtoa@mode:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x19
   440   000079                     	ds	1
   441   00007A                     efgtoa@nmode:
   442                           	callstack 0
   443   00007A                     RGB_to_HSV@H:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x1A
   447   00007A                     	ds	1
   448   00007B                     efgtoa@d:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x1B
   452   00007B                     	ds	1
   453   00007C                     RGB_to_HSV@S:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x1C
   457   00007C                     	ds	1
   458   00007D                     efgtoa@m:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x1D
   462   00007D                     	ds	1
   463   00007E                     RGB_to_HSV@V:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x1E
   467   00007E                     	ds	1
   468   00007F                     efgtoa@e:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x1F
   472   00007F                     	ds	1
   473   000080                     _RGB_to_HSV$2682:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x20
   477   000080                     	ds	1
   478   000081                     efgtoa@w:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x21
   482   000081                     	ds	2
   483   000083                     efgtoa@ou:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x23
   487   000083                     	ds	1
   488   000084                     _RGB_to_HSV$2683:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x24
   492   000084                     	ds	3
   493   000087                     efgtoa@i:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x27
   497   000087                     	ds	1
   498   000088                     _RGB_to_HSV$524:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x28
   502   000088                     	ds	1
   503   000089                     efgtoa@h:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x29
   507   000089                     	ds	3
   508   00008C                     _RGB_to_HSV$525:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x2C
   512   00008C                     	ds	1
   513   00008D                     efgtoa@l:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x2D
   517   00008D                     	ds	3
   518   000090                     RGB_to_HSV@minRGB:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x30
   522   000090                     	ds	1
   523   000091                     efgtoa@sign:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x31
   527   000091                     	ds	1
   528   000092                     efgtoa@g:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x32
   532   000092                     	ds	2
   533   000094                     _RGB_to_HSV$527:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x34
   537   000094                     	ds	2
   538   000096                     efgtoa@n:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x36
   542   000096                     	ds	2
   543   000098                     _RGB_to_HSV$528:
   544                           	callstack 0
   545   000098                     efgtoa@u:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x38
   549   000098                     	ds	4
   550   00009C                     vfpfcnvrt@fp:
   551                           	callstack 0
   552   00009C                     _RGB_to_HSV$2684:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x3C
   556   00009C                     	ds	1
   557   00009D                     vfpfcnvrt@fmt:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x3D
   561   00009D                     	ds	1
   562   00009E                     vfpfcnvrt@ap:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x3E
   566   00009E                     	ds	1
   567   00009F                     ??_vfpfcnvrt:
   568                           
   569                           ; 1 bytes @ 0x3F
   570   00009F                     	ds	1
   571   0000A0                     RGB_to_HSV@H_temp:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x40
   575   0000A0                     	ds	1
   576   0000A1                     vfpfcnvrt@convarg:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x41
   580   0000A1                     	ds	3
   581   0000A4                     RGB_to_HSV@deltaRGB:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x44
   585   0000A4                     	ds	1
   586   0000A5                     vfpfcnvrt@c:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x45
   590   0000A5                     	ds	1
   591   0000A6                     vfpfcnvrt@cp:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x46
   595   0000A6                     	ds	1
   596   0000A7                     ?_vfprintf:
   597                           	callstack 0
   598   0000A7                     vfprintf@fp:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x47
   602   0000A7                     	ds	1
   603   0000A8                     vfprintf@fmt:
   604                           	callstack 0
   605   0000A8                     RGB_to_HSV@maxRGB:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x48
   609   0000A8                     	ds	1
   610   0000A9                     vfprintf@ap:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x49
   614   0000A9                     	ds	1
   615   0000AA                     vfprintf@cfmt:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x4A
   619   0000AA                     	ds	1
   620   0000AB                     ?_sprintf:
   621                           	callstack 0
   622   0000AB                     sprintf@s:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x4B
   626   0000AB                     	ds	1
   627   0000AC                     RGB_to_HSV@r:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x4C
   631   0000AC                     	ds	1
   632   0000AD                     sprintf@fmt:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x4D
   636   0000AD                     	ds	3
   637   0000B0                     RGB_to_HSV@g:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x50
   641   0000B0                     	ds	4
   642   0000B4                     RGB_to_HSV@b:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x54
   646   0000B4                     	ds	8
   647   0000BC                     sprintf@ap:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x5C
   651   0000BC                     	ds	1
   652   0000BD                     sprintf@f:
   653                           	callstack 0
   654                           
   655                           ; 12 bytes @ 0x5D
   656   0000BD                     	ds	12
   657   0000C9                     ?_color_cardCheck:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x69
   661   0000C9                     	ds	2
   662   0000CB                     ??_color_cardCheck:
   663                           
   664                           ; 1 bytes @ 0x6B
   665   0000CB                     	ds	2
   666   0000CD                     ??_main:
   667                           
   668                           ; 1 bytes @ 0x6D
   669   0000CD                     	ds	2
   670                           
   671                           	psect	cstackCOMRAM
   672   000001                     __pcstackCOMRAM:
   673                           	callstack 0
   674   000001                     ??_I2C_2_Master_Idle:
   675   000001                     ?___fpclassifyf:
   676                           	callstack 0
   677   000001                     ?___wmul:
   678                           	callstack 0
   679   000001                     ?___lwdiv:
   680                           	callstack 0
   681   000001                     ?___lwmod:
   682                           	callstack 0
   683   000001                     ?___fladd:
   684                           	callstack 0
   685   000001                     ?_labs:
   686                           	callstack 0
   687   000001                     ?___flneg:
   688                           	callstack 0
   689   000001                     ?___fltol:
   690                           	callstack 0
   691   000001                     sendCharSerial4@charToSend:
   692                           	callstack 0
   693   000001                     ___wmul@multiplier:
   694                           	callstack 0
   695   000001                     ___lwdiv@dividend:
   696                           	callstack 0
   697   000001                     ___lwmod@dividend:
   698                           	callstack 0
   699   000001                     memcpy@d1:
   700                           	callstack 0
   701   000001                     fputc@c:
   702                           	callstack 0
   703   000001                     strcpy@dest:
   704                           	callstack 0
   705   000001                     ___fleq@ff1:
   706                           	callstack 0
   707   000001                     ___flneg@f1:
   708                           	callstack 0
   709   000001                     ___fltol@f1:
   710                           	callstack 0
   711   000001                     ___fladd@b:
   712                           	callstack 0
   713   000001                     ___fpclassifyf@x:
   714                           	callstack 0
   715   000001                     labs@a:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x0
   719   000001                     	ds	1
   720   000002                     ??_I2C_2_Master_Read:
   721   000002                     I2C_2_Master_Write@data_byte:
   722                           	callstack 0
   723   000002                     sendStringSerial4@string:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x1
   727   000002                     	ds	1
   728   000003                     color_writetoaddr@value:
   729                           	callstack 0
   730   000003                     I2C_2_Master_Read@ack:
   731                           	callstack 0
   732   000003                     fputc@fp:
   733                           	callstack 0
   734   000003                     strcpy@src:
   735                           	callstack 0
   736   000003                     ___wmul@multiplicand:
   737                           	callstack 0
   738   000003                     ___lwdiv@divisor:
   739                           	callstack 0
   740   000003                     ___lwmod@divisor:
   741                           	callstack 0
   742   000003                     memcpy@s1:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2
   746   000003                     	ds	1
   747   000004                     ??_fputc:
   748   000004                     ??_strcpy:
   749   000004                     color_writetoaddr@address:
   750                           	callstack 0
   751   000004                     I2C_2_Master_Read@tmp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x3
   755   000004                     	ds	1
   756   000005                     ??___fpclassifyf:
   757   000005                     ??_labs:
   758   000005                     ??_color_click_init:
   759   000005                     ??___fltol:
   760   000005                     ?_color_read_Red:
   761                           	callstack 0
   762   000005                     ?_color_read_Green:
   763                           	callstack 0
   764   000005                     ?_color_read_Blue:
   765                           	callstack 0
   766   000005                     ?_color_read_Clear:
   767                           	callstack 0
   768   000005                     ___lwdiv@counter:
   769                           	callstack 0
   770   000005                     ___lwmod@counter:
   771                           	callstack 0
   772   000005                     ___wmul@product:
   773                           	callstack 0
   774   000005                     memcpy@n:
   775                           	callstack 0
   776   000005                     strcpy@d:
   777                           	callstack 0
   778   000005                     ___fleq@ff2:
   779                           	callstack 0
   780   000005                     ___fladd@a:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x4
   784   000005                     	ds	1
   785   000006                     ___lwdiv@quotient:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x5
   789   000006                     	ds	1
   790   000007                     ??_color_read_Red:
   791   000007                     ??_color_read_Green:
   792   000007                     ??_color_read_Blue:
   793   000007                     ??_color_read_Clear:
   794   000007                     ?_read_prec_or_width:
   795                           	callstack 0
   796   000007                     read_prec_or_width@fmt:
   797                           	callstack 0
   798   000007                     memcpy@tmp:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x6
   802   000007                     	ds	1
   803   000008                     read_prec_or_width@ap:
   804                           	callstack 0
   805   000008                     memcpy@d:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x7
   809   000008                     	ds	1
   810   000009                     ??___fladd:
   811   000009                     ??___fleq:
   812   000009                     ___fltol@sign1:
   813                           	callstack 0
   814   000009                     read_prec_or_width@c:
   815                           	callstack 0
   816   000009                     ___fpclassifyf@e:
   817                           	callstack 0
   818   000009                     fputs@s:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x8
   822   000009                     	ds	1
   823   00000A                     ___fltol@exp1:
   824                           	callstack 0
   825   00000A                     color_read_Red@tmp:
   826                           	callstack 0
   827   00000A                     color_read_Green@tmp:
   828                           	callstack 0
   829   00000A                     color_read_Blue@tmp:
   830                           	callstack 0
   831   00000A                     color_read_Clear@tmp:
   832                           	callstack 0
   833   00000A                     read_prec_or_width@n:
   834                           	callstack 0
   835   00000A                     memcpy@s:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x9
   839   00000A                     	ds	1
   840   00000B                     fputs@fp:
   841                           	callstack 0
   842   00000B                     ___fpclassifyf@u:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0xA
   846   00000B                     	ds	1
   847   00000C                     ?___xxtofl:
   848                           	callstack 0
   849   00000C                     fputs@c:
   850                           	callstack 0
   851   00000C                     ___xxtofl@val:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0xB
   855   00000C                     	ds	1
   856   00000D                     ___fladd@signs:
   857                           	callstack 0
   858   00000D                     fputs@i:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0xC
   862   00000D                     	ds	1
   863   00000E                     ___fladd@aexp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0xD
   867   00000E                     	ds	1
   868   00000F                     ___fladd@bexp:
   869                           	callstack 0
   870   00000F                     pad@fp:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0xE
   874   00000F                     	ds	1
   875   000010                     ??___xxtofl:
   876   000010                     ___fladd@grs:
   877                           	callstack 0
   878   000010                     pad@buf:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0xF
   882   000010                     	ds	2
   883   000012                     pad@p:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x11
   887   000012                     	ds	2
   888   000014                     ??_pad:
   889   000014                     ___xxtofl@sign:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x13
   893   000014                     	ds	1
   894   000015                     ___xxtofl@exp:
   895                           	callstack 0
   896   000015                     pad@i:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x14
   900   000015                     	ds	1
   901   000016                     ___xxtofl@arg:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x15
   905   000016                     	ds	1
   906   000017                     utoa@fp:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x16
   910   000017                     	ds	1
   911   000018                     utoa@d:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x17
   915   000018                     	ds	2
   916   00001A                     ?___flmul:
   917                           	callstack 0
   918   00001A                     utoa@w:
   919                           	callstack 0
   920   00001A                     ___flmul@b:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x19
   924   00001A                     	ds	2
   925   00001C                     utoa@p:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x1B
   929   00001C                     	ds	2
   930   00001E                     utoa@i:
   931                           	callstack 0
   932   00001E                     ___flmul@a:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x1D
   936   00001E                     	ds	4
   937   000022                     ??___flmul:
   938                           
   939                           ; 1 bytes @ 0x21
   940   000022                     	ds	4
   941   000026                     ___flmul@sign:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x25
   945   000026                     	ds	1
   946   000027                     ___flmul@aexp:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x26
   950   000027                     	ds	1
   951   000028                     ___flmul@grs:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x27
   955   000028                     	ds	4
   956   00002C                     ___flmul@bexp:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x2B
   960   00002C                     	ds	1
   961   00002D                     ___flmul@prod:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x2C
   965   00002D                     	ds	4
   966   000031                     ___flmul@temp:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x30
   970   000031                     	ds	2
   971   000033                     ?___flsub:
   972                           	callstack 0
   973   000033                     ___flge@ff1:
   974                           	callstack 0
   975   000033                     ___flsub@b:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x32
   979   000033                     	ds	4
   980   000037                     ___flge@ff2:
   981                           	callstack 0
   982   000037                     ___flsub@a:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x36
   986   000037                     	ds	4
   987   00003B                     ??___flge:
   988   00003B                     ?___fldiv:
   989                           	callstack 0
   990   00003B                     ___fldiv@b:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x3A
   994   00003B                     	ds	4
   995   00003F                     ___fldiv@a:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x3E
   999   00003F                     	ds	4
  1000   000043                     ??___fldiv:
  1001                           
  1002                           ; 1 bytes @ 0x42
  1003   000043                     	ds	4
  1004   000047                     ___fldiv@rem:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x46
  1008   000047                     	ds	4
  1009   00004B                     ___fldiv@sign:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x4A
  1013   00004B                     	ds	1
  1014   00004C                     ___fldiv@new_exp:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x4B
  1018   00004C                     	ds	2
  1019   00004E                     ___fldiv@grs:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x4D
  1023   00004E                     	ds	4
  1024   000052                     ___fldiv@bexp:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x51
  1028   000052                     	ds	1
  1029   000053                     ___fldiv@aexp:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x52
  1033   000053                     	ds	1
  1034   000054                     ?_floorf:
  1035                           	callstack 0
  1036   000054                     ?_custom_floatmodulo:
  1037                           	callstack 0
  1038   000054                     custom_floatmodulo@x:
  1039                           	callstack 0
  1040   000054                     floorf@x:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x53
  1044   000054                     	ds	4
  1045   000058                     ??_floorf:
  1046   000058                     custom_floatmodulo@y:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x57
  1050   000058                     	ds	4
  1051   00005C                     
  1052                           ; 1 bytes @ 0x5B
  1053   00005C                     	ds	2
  1054   00005E                     ??_efgtoa:
  1055                           
  1056                           ; 1 bytes @ 0x5D
  1057   00005E                     	ds	2
  1058   000060                     
  1059                           ; 1 bytes @ 0x5F
  1060 ;;
  1061 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1062 ;;
  1063 ;; *************** function _main *****************
  1064 ;; Defined at:
  1065 ;;		line 18 in file "main.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  a               2    0        unsigned int 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1083 ;;Total ram usage:        2 bytes
  1084 ;; Hardware stack levels required when called: 9
  1085 ;; This function calls:
  1086 ;;		_color_cardCheck
  1087 ;;		_color_click_init
  1088 ;;		_initUSART4
  1089 ;; This function is called by:
  1090 ;;		Startup code after reset
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text0
  1095   00499C                     __ptext0:
  1096                           	callstack 0
  1097   00499C                     _main:
  1098                           	callstack 22
  1099   00499C                     
  1100                           ;main.c: 23:     color_click_init();
  1101   00499C  EC03  F024         	call	_color_click_init	;wreg free
  1102   0049A0                     
  1103                           ;main.c: 24:     initUSART4();
  1104   0049A0  EC31  F025         	call	_initUSART4	;wreg free
  1105   0049A4                     l6395:
  1106                           
  1107                           ;main.c: 25:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1108   0049A4  0E52               	movlw	82
  1109   0049A6  0100               	movlb	0	; () banked
  1110   0049A8  6FCE               	movwf	(??_main+1)& (0+255),b
  1111   0049AA  0E2B               	movlw	43
  1112   0049AC  6FCD               	movwf	??_main& (0+255),b
  1113   0049AE  0E00               	movlw	0
  1114   0049B0                     u8237:
  1115   0049B0  2EE8               	decfsz	wreg,f,c
  1116   0049B2  D7FE               	bra	u8237
  1117   0049B4  2FCD               	decfsz	??_main& (0+255),f,b
  1118   0049B6  D7FC               	bra	u8237
  1119   0049B8  2FCE               	decfsz	(??_main+1)& (0+255),f,b
  1120   0049BA  D7FA               	bra	u8237
  1121   0049BC  0000               	nop	
  1122   0049BE  EC13  F007         	call	_color_cardCheck	;wreg free
  1123   0049C2  EFD2  F024         	goto	l6395
  1124   0049C6  EF00  F000         	goto	start
  1125   0049CA                     __end_of_main:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _initUSART4 *****************
  1129 ;; Defined at:
  1130 ;;		line 57 in file "serial.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text1
  1158   004A62                     __ptext1:
  1159                           	callstack 0
  1160   004A62                     _initUSART4:
  1161                           	callstack 30
  1162   004A62                     
  1163                           ;serial.c: 58:     RC0PPS = 0x12;
  1164   004A62  0E12               	movlw	18
  1165   004A64  010E               	movlb	14	; () banked
  1166   004A66  6F62               	movwf	98,b	;volatile
  1167                           
  1168                           ;serial.c: 59:     RX4PPS = 0x11;
  1169   004A68  0E11               	movlw	17
  1170   004A6A  6F15               	movwf	21,b	;volatile
  1171   004A6C                     
  1172                           ; BSR set to: 14
  1173                           ;serial.c: 61:     BAUD4CONbits.BRG16 = 0;
  1174   004A6C  97E9               	bcf	233,3,b	;volatile
  1175   004A6E                     
  1176                           ; BSR set to: 14
  1177                           ;serial.c: 62:     TX4STAbits.BRGH = 0;
  1178   004A6E  95E8               	bcf	232,2,b	;volatile
  1179                           
  1180                           ;serial.c: 64:     SP4BRGL = 51;
  1181   004A70  0E33               	movlw	51
  1182   004A72  6FE5               	movwf	229,b	;volatile
  1183                           
  1184                           ;serial.c: 65:     SP4BRGH = 0;
  1185   004A74  0E00               	movlw	0
  1186   004A76  6FE6               	movwf	230,b	;volatile
  1187   004A78                     
  1188                           ; BSR set to: 14
  1189                           ;serial.c: 73:     RC4STAbits.CREN = 1;
  1190   004A78  89E7               	bsf	231,4,b	;volatile
  1191   004A7A                     
  1192                           ; BSR set to: 14
  1193                           ;serial.c: 74:     TX4STAbits.TXEN = 1;
  1194   004A7A  8BE8               	bsf	232,5,b	;volatile
  1195   004A7C                     
  1196                           ; BSR set to: 14
  1197                           ;serial.c: 75:     RC4STAbits.SPEN = 1;
  1198   004A7C  8FE7               	bsf	231,7,b	;volatile
  1199   004A7E                     
  1200                           ; BSR set to: 14
  1201   004A7E  0012               	return		;funcret
  1202   004A80                     __end_of_initUSART4:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _color_click_init *****************
  1206 ;; Defined at:
  1207 ;;		line 7 in file "color.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1225 ;;Total ram usage:        1 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 3
  1228 ;; This function calls:
  1229 ;;		_I2C_2_Master_Init
  1230 ;;		_color_writetoaddr
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text2
  1237   004806                     __ptext2:
  1238                           	callstack 0
  1239   004806                     _color_click_init:
  1240                           	callstack 27
  1241   004806                     
  1242                           ;color.c: 10:     I2C_2_Master_Init();
  1243   004806  ECE5  F024         	call	_I2C_2_Master_Init	;wreg free
  1244   00480A                     
  1245                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1246   00480A  0E01               	movlw	1
  1247   00480C  6E03               	movwf	color_writetoaddr@value^0,c
  1248   00480E  0E00               	movlw	0
  1249   004810  EC21  F025         	call	_color_writetoaddr
  1250   004814                     
  1251                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1252   004814  0E3F               	movlw	63
  1253   004816  6E05               	movwf	??_color_click_init^0,c
  1254   004818  0E55               	movlw	85
  1255   00481A                     u8247:
  1256   00481A  2EE8               	decfsz	wreg,f,c
  1257   00481C  D7FE               	bra	u8247
  1258   00481E  2E05               	decfsz	??_color_click_init^0,f,c
  1259   004820  D7FC               	bra	u8247
  1260   004822  0000               	nop	
  1261   004824                     
  1262                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1263   004824  0E03               	movlw	3
  1264   004826  6E03               	movwf	color_writetoaddr@value^0,c
  1265   004828  0E00               	movlw	0
  1266   00482A  EC21  F025         	call	_color_writetoaddr
  1267   00482E                     
  1268                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1269   00482E  0ED5               	movlw	213
  1270   004830  6E03               	movwf	color_writetoaddr@value^0,c
  1271   004832  0E01               	movlw	1
  1272   004834  EC21  F025         	call	_color_writetoaddr
  1273   004838                     
  1274                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  1275   004838  9287               	bcf	135,1,c	;volatile
  1276   00483A                     
  1277                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  1278   00483A  9881               	bcf	129,4,c	;volatile
  1279   00483C                     
  1280                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  1281   00483C  9E86               	bcf	134,7,c	;volatile
  1282   00483E                     
  1283                           ;color.c: 30:     LATGbits.LATG1 = 1;
  1284   00483E  827F               	bsf	127,1,c	;volatile
  1285   004840                     
  1286                           ;color.c: 31:     LATAbits.LATA4 = 1;
  1287   004840  8879               	bsf	121,4,c	;volatile
  1288   004842                     
  1289                           ;color.c: 32:     LATFbits.LATF7 = 1;
  1290   004842  8E7E               	bsf	126,7,c	;volatile
  1291   004844  0012               	return		;funcret
  1292   004846                     __end_of_color_click_init:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _color_writetoaddr *****************
  1296 ;; Defined at:
  1297 ;;		line 45 in file "color.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  address         1    wreg     unsigned char 
  1300 ;;  value           1    2[COMRAM] unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  address         1    3[COMRAM] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1312 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 2
  1319 ;; This function calls:
  1320 ;;		_I2C_2_Master_Start
  1321 ;;		_I2C_2_Master_Stop
  1322 ;;		_I2C_2_Master_Write
  1323 ;; This function is called by:
  1324 ;;		_color_click_init
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text3
  1329   004A42                     __ptext3:
  1330                           	callstack 0
  1331   004A42                     _color_writetoaddr:
  1332                           	callstack 27
  1333                           
  1334                           ;incstack = 0
  1335                           ;color_writetoaddr@address stored from wreg
  1336   004A42  6E04               	movwf	color_writetoaddr@address^0,c
  1337   004A44                     
  1338                           ;color.c: 46:     I2C_2_Master_Start();
  1339   004A44  EC57  F025         	call	_I2C_2_Master_Start	;wreg free
  1340                           
  1341                           ;color.c: 47:     I2C_2_Master_Write(0x52 | 0x00);
  1342   004A48  0E52               	movlw	82
  1343   004A4A  EC4C  F025         	call	_I2C_2_Master_Write
  1344                           
  1345                           ;color.c: 48:     I2C_2_Master_Write(0x80 | address);
  1346   004A4E  5004               	movf	color_writetoaddr@address^0,w,c
  1347   004A50  0980               	iorlw	128
  1348   004A52  EC4C  F025         	call	_I2C_2_Master_Write
  1349                           
  1350                           ;color.c: 49:     I2C_2_Master_Write(value);
  1351   004A56  5003               	movf	color_writetoaddr@value^0,w,c
  1352   004A58  EC4C  F025         	call	_I2C_2_Master_Write
  1353                           
  1354                           ;color.c: 50:     I2C_2_Master_Stop();
  1355   004A5C  EC52  F025         	call	_I2C_2_Master_Stop	;wreg free
  1356   004A60  0012               	return		;funcret
  1357   004A62                     __end_of_color_writetoaddr:
  1358                           	callstack 0
  1359                           
  1360 ;; *************** function _I2C_2_Master_Init *****************
  1361 ;; Defined at:
  1362 ;;		line 4 in file "i2c.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used: 1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_color_click_init
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text4
  1390   0049CA                     __ptext4:
  1391                           	callstack 0
  1392   0049CA                     _I2C_2_Master_Init:
  1393                           	callstack 29
  1394   0049CA                     
  1395                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1396   0049CA  010E               	movlb	14	; () banked
  1397   0049CC  51D9               	movf	217,w,b	;volatile
  1398   0049CE  0BF0               	andlw	-16
  1399   0049D0  0908               	iorlw	8
  1400   0049D2  6FD9               	movwf	217,b	;volatile
  1401   0049D4                     
  1402                           ; BSR set to: 14
  1403                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1404   0049D4  8BD9               	bsf	217,5,b	;volatile
  1405                           
  1406                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1407   0049D6  0E9F               	movlw	159
  1408   0049D8  6FD6               	movwf	214,b	;volatile
  1409   0049DA                     
  1410                           ; BSR set to: 14
  1411                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1412   0049DA  8A84               	bsf	132,5,c	;volatile
  1413   0049DC                     
  1414                           ; BSR set to: 14
  1415                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1416   0049DC  8C84               	bsf	132,6,c	;volatile
  1417   0049DE                     
  1418                           ; BSR set to: 14
  1419                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1420   0049DE  9BA7               	bcf	167,5,b	;volatile
  1421   0049E0                     
  1422                           ; BSR set to: 14
  1423                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1424   0049E0  9DA7               	bcf	167,6,b	;volatile
  1425                           
  1426                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1427   0049E2  0E1D               	movlw	29
  1428   0049E4  6F1D               	movwf	29,b	;volatile
  1429                           
  1430                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1431   0049E6  0E1E               	movlw	30
  1432   0049E8  6F1C               	movwf	28,b	;volatile
  1433                           
  1434                           ;i2c.c: 18:   RD5PPS=0x1C;
  1435   0049EA  0E1C               	movlw	28
  1436   0049EC  6F6F               	movwf	111,b	;volatile
  1437                           
  1438                           ;i2c.c: 19:   RD6PPS=0x1B;
  1439   0049EE  0E1B               	movlw	27
  1440   0049F0  6F70               	movwf	112,b	;volatile
  1441   0049F2                     
  1442                           ; BSR set to: 14
  1443   0049F2  0012               	return		;funcret
  1444   0049F4                     __end_of_I2C_2_Master_Init:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _color_cardCheck *****************
  1448 ;; Defined at:
  1449 ;;		line 174 in file "color.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  senddata       25    0[BANK1 ] unsigned char [25]
  1454 ;;  V               4   51[BANK1 ] float 
  1455 ;;  S               4   47[BANK1 ] float 
  1456 ;;  H               4   43[BANK1 ] float 
  1457 ;;  c               4   37[BANK1 ] float 
  1458 ;;  b               4   33[BANK1 ] float 
  1459 ;;  g               4   29[BANK1 ] float 
  1460 ;;  r               4   25[BANK1 ] float 
  1461 ;;  card_color      2   41[BANK1 ] unsigned int 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  2  105[BANK0 ] unsigned int 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1472 ;;      Locals:         0       0      55       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1474 ;;      Totals:         0       4      55       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1475 ;;Total ram usage:       59 bytes
  1476 ;; Hardware stack levels used: 1
  1477 ;; Hardware stack levels required when called: 8
  1478 ;; This function calls:
  1479 ;;		_RGB_to_HSV
  1480 ;;		___flge
  1481 ;;		___xxtofl
  1482 ;;		_color_read_Blue
  1483 ;;		_color_read_Clear
  1484 ;;		_color_read_Green
  1485 ;;		_color_read_Red
  1486 ;;		_sendStringSerial4
  1487 ;;		_sprintf
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text5
  1494   000E26                     __ptext5:
  1495                           	callstack 0
  1496   000E26                     _color_cardCheck:
  1497                           	callstack 22
  1498   000E26                     
  1499                           ;color.c: 177:     float r = color_read_Red();
  1500   000E26  ECFC  F022         	call	_color_read_Red	;wreg free
  1501   000E2A  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1502   000E2E  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1503   000E32  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1504   000E34  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1505   000E36  0E00               	movlw	0
  1506   000E38  ECA0  F01D         	call	___xxtofl
  1507   000E3C  C00C  F1B9         	movff	?___xxtofl,color_cardCheck@r
  1508   000E40  C00D  F1BA         	movff	?___xxtofl+1,color_cardCheck@r+1
  1509   000E44  C00E  F1BB         	movff	?___xxtofl+2,color_cardCheck@r+2
  1510   000E48  C00F  F1BC         	movff	?___xxtofl+3,color_cardCheck@r+3
  1511                           
  1512                           ;color.c: 178:     float g = color_read_Green();
  1513   000E4C  EC24  F023         	call	_color_read_Green	;wreg free
  1514   000E50  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1515   000E54  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1516   000E58  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1517   000E5A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1518   000E5C  0E00               	movlw	0
  1519   000E5E  ECA0  F01D         	call	___xxtofl
  1520   000E62  C00C  F1BD         	movff	?___xxtofl,color_cardCheck@g
  1521   000E66  C00D  F1BE         	movff	?___xxtofl+1,color_cardCheck@g+1
  1522   000E6A  C00E  F1BF         	movff	?___xxtofl+2,color_cardCheck@g+2
  1523   000E6E  C00F  F1C0         	movff	?___xxtofl+3,color_cardCheck@g+3
  1524                           
  1525                           ;color.c: 179:     float b = color_read_Blue();
  1526   000E72  EC74  F023         	call	_color_read_Blue	;wreg free
  1527   000E76  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1528   000E7A  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1529   000E7E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1530   000E80  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1531   000E82  0E00               	movlw	0
  1532   000E84  ECA0  F01D         	call	___xxtofl
  1533   000E88  C00C  F1C1         	movff	?___xxtofl,color_cardCheck@b
  1534   000E8C  C00D  F1C2         	movff	?___xxtofl+1,color_cardCheck@b+1
  1535   000E90  C00E  F1C3         	movff	?___xxtofl+2,color_cardCheck@b+2
  1536   000E94  C00F  F1C4         	movff	?___xxtofl+3,color_cardCheck@b+3
  1537                           
  1538                           ;color.c: 182:     float c = color_read_Clear();
  1539   000E98  EC4C  F023         	call	_color_read_Clear	;wreg free
  1540   000E9C  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1541   000EA0  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1542   000EA4  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1543   000EA6  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1544   000EA8  0E00               	movlw	0
  1545   000EAA  ECA0  F01D         	call	___xxtofl
  1546   000EAE  C00C  F1C5         	movff	?___xxtofl,color_cardCheck@c
  1547   000EB2  C00D  F1C6         	movff	?___xxtofl+1,color_cardCheck@c+1
  1548   000EB6  C00E  F1C7         	movff	?___xxtofl+2,color_cardCheck@c+2
  1549   000EBA  C00F  F1C8         	movff	?___xxtofl+3,color_cardCheck@c+3
  1550   000EBE                     
  1551                           ;color.c: 185:     float H;;color.c: 186:     float S;;color.c: 187:     float V;;color.
      +                          c: 189:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  1552   000EBE  C1B9  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  1553   000EC2  C1BA  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  1554   000EC6  C1BB  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  1555   000ECA  C1BC  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  1556   000ECE  C1BD  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  1557   000ED2  C1BE  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  1558   000ED6  C1BF  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  1559   000EDA  C1C0  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  1560   000EDE  C1C1  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  1561   000EE2  C1C2  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  1562   000EE6  C1C3  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  1563   000EEA  C1C4  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  1564   000EEE  C1C5  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  1565   000EF2  C1C6  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  1566   000EF6  C1C7  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  1567   000EFA  C1C8  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  1568   000EFE  0ECB               	movlw	low color_cardCheck@H
  1569   000F00  0100               	movlb	0	; () banked
  1570   000F02  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  1571   000F04  0E01               	movlw	high color_cardCheck@H
  1572   000F06  6F7B               	movwf	(RGB_to_HSV@H+1)& (0+255),b
  1573   000F08  0ECF               	movlw	low color_cardCheck@S
  1574   000F0A  6F7C               	movwf	RGB_to_HSV@S& (0+255),b
  1575   000F0C  0E01               	movlw	high color_cardCheck@S
  1576   000F0E  6F7D               	movwf	(RGB_to_HSV@S+1)& (0+255),b
  1577   000F10  0ED3               	movlw	low color_cardCheck@V
  1578   000F12  6F7E               	movwf	RGB_to_HSV@V& (0+255),b
  1579   000F14  0E01               	movlw	high color_cardCheck@V
  1580   000F16  6F7F               	movwf	(RGB_to_HSV@V+1)& (0+255),b
  1581   000F18  EC60  F011         	call	_RGB_to_HSV	;wreg free
  1582   000F1C                     
  1583                           ;color.c: 198:     unsigned int card_color = 0;
  1584   000F1C  0E00               	movlw	0
  1585   000F1E  0101               	movlb	1	; () banked
  1586   000F20  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1587   000F22  0E00               	movlw	0
  1588   000F24  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  1589   000F26                     
  1590                           ; BSR set to: 1
  1591                           ;color.c: 201:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  1592   000F26  0E00               	movlw	0
  1593   000F28  6E33               	movwf	___flge@ff1^0,c
  1594   000F2A  0E80               	movlw	128
  1595   000F2C  6E34               	movwf	(___flge@ff1+1)^0,c
  1596   000F2E  0EB1               	movlw	177
  1597   000F30  6E35               	movwf	(___flge@ff1+2)^0,c
  1598   000F32  0E43               	movlw	67
  1599   000F34  6E36               	movwf	(___flge@ff1+3)^0,c
  1600   000F36  C1CB  F037         	movff	color_cardCheck@H,___flge@ff2
  1601   000F3A  C1CC  F038         	movff	color_cardCheck@H+1,___flge@ff2+1
  1602   000F3E  C1CD  F039         	movff	color_cardCheck@H+2,___flge@ff2+2
  1603   000F42  C1CE  F03A         	movff	color_cardCheck@H+3,___flge@ff2+3
  1604   000F46  EC89  F01F         	call	___flge	;wreg free
  1605   000F4A  B0D8               	btfsc	status,0,c
  1606   000F4C  EFAA  F007         	goto	u7541
  1607   000F50  EFAC  F007         	goto	u7540
  1608   000F54                     u7541:
  1609   000F54  EF30  F008         	goto	l6115
  1610   000F58                     u7540:
  1611   000F58  C1CB  F033         	movff	color_cardCheck@H,___flge@ff1
  1612   000F5C  C1CC  F034         	movff	color_cardCheck@H+1,___flge@ff1+1
  1613   000F60  C1CD  F035         	movff	color_cardCheck@H+2,___flge@ff1+2
  1614   000F64  C1CE  F036         	movff	color_cardCheck@H+3,___flge@ff1+3
  1615   000F68  0E00               	movlw	0
  1616   000F6A  6E37               	movwf	___flge@ff2^0,c
  1617   000F6C  0E00               	movlw	0
  1618   000F6E  6E38               	movwf	(___flge@ff2+1)^0,c
  1619   000F70  0EB4               	movlw	180
  1620   000F72  6E39               	movwf	(___flge@ff2+2)^0,c
  1621   000F74  0E43               	movlw	67
  1622   000F76  6E3A               	movwf	(___flge@ff2+3)^0,c
  1623   000F78  EC89  F01F         	call	___flge	;wreg free
  1624   000F7C  B0D8               	btfsc	status,0,c
  1625   000F7E  EFC3  F007         	goto	u7551
  1626   000F82  EFC5  F007         	goto	u7550
  1627   000F86                     u7551:
  1628   000F86  EF30  F008         	goto	l6115
  1629   000F8A                     u7550:
  1630   000F8A  0E00               	movlw	0
  1631   000F8C  6E33               	movwf	___flge@ff1^0,c
  1632   000F8E  0E00               	movlw	0
  1633   000F90  6E34               	movwf	(___flge@ff1+1)^0,c
  1634   000F92  0EAA               	movlw	170
  1635   000F94  6E35               	movwf	(___flge@ff1+2)^0,c
  1636   000F96  0E42               	movlw	66
  1637   000F98  6E36               	movwf	(___flge@ff1+3)^0,c
  1638   000F9A  C1CF  F037         	movff	color_cardCheck@S,___flge@ff2
  1639   000F9E  C1D0  F038         	movff	color_cardCheck@S+1,___flge@ff2+1
  1640   000FA2  C1D1  F039         	movff	color_cardCheck@S+2,___flge@ff2+2
  1641   000FA6  C1D2  F03A         	movff	color_cardCheck@S+3,___flge@ff2+3
  1642   000FAA  EC89  F01F         	call	___flge	;wreg free
  1643   000FAE  B0D8               	btfsc	status,0,c
  1644   000FB0  EFDC  F007         	goto	u7561
  1645   000FB4  EFDE  F007         	goto	u7560
  1646   000FB8                     u7561:
  1647   000FB8  EF30  F008         	goto	l6115
  1648   000FBC                     u7560:
  1649   000FBC  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  1650   000FC0  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  1651   000FC4  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  1652   000FC8  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  1653   000FCC  0E00               	movlw	0
  1654   000FCE  6E37               	movwf	___flge@ff2^0,c
  1655   000FD0  0E00               	movlw	0
  1656   000FD2  6E38               	movwf	(___flge@ff2+1)^0,c
  1657   000FD4  0EB4               	movlw	180
  1658   000FD6  6E39               	movwf	(___flge@ff2+2)^0,c
  1659   000FD8  0E42               	movlw	66
  1660   000FDA  6E3A               	movwf	(___flge@ff2+3)^0,c
  1661   000FDC  EC89  F01F         	call	___flge	;wreg free
  1662   000FE0  B0D8               	btfsc	status,0,c
  1663   000FE2  EFF5  F007         	goto	u7571
  1664   000FE6  EFF7  F007         	goto	u7570
  1665   000FEA                     u7571:
  1666   000FEA  EF30  F008         	goto	l6115
  1667   000FEE                     u7570:
  1668   000FEE  0E00               	movlw	0
  1669   000FF0  6E33               	movwf	___flge@ff1^0,c
  1670   000FF2  0E00               	movlw	0
  1671   000FF4  6E34               	movwf	(___flge@ff1+1)^0,c
  1672   000FF6  0EA0               	movlw	160
  1673   000FF8  6E35               	movwf	(___flge@ff1+2)^0,c
  1674   000FFA  0E42               	movlw	66
  1675   000FFC  6E36               	movwf	(___flge@ff1+3)^0,c
  1676   000FFE  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  1677   001002  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  1678   001006  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  1679   00100A  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  1680   00100E  EC89  F01F         	call	___flge	;wreg free
  1681   001012  B0D8               	btfsc	status,0,c
  1682   001014  EF0E  F008         	goto	u7581
  1683   001018  EF10  F008         	goto	u7580
  1684   00101C                     u7581:
  1685   00101C  EF30  F008         	goto	l6115
  1686   001020                     u7580:
  1687   001020  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  1688   001024  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  1689   001028  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  1690   00102C  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  1691   001030  0E00               	movlw	0
  1692   001032  6E37               	movwf	___flge@ff2^0,c
  1693   001034  0E00               	movlw	0
  1694   001036  6E38               	movwf	(___flge@ff2+1)^0,c
  1695   001038  0EAA               	movlw	170
  1696   00103A  6E39               	movwf	(___flge@ff2+2)^0,c
  1697   00103C  0E42               	movlw	66
  1698   00103E  6E3A               	movwf	(___flge@ff2+3)^0,c
  1699   001040  EC89  F01F         	call	___flge	;wreg free
  1700   001044  B0D8               	btfsc	status,0,c
  1701   001046  EF27  F008         	goto	u7591
  1702   00104A  EF29  F008         	goto	u7590
  1703   00104E                     u7591:
  1704   00104E  EF30  F008         	goto	l6115
  1705   001052                     u7590:
  1706   001052  0E00               	movlw	0
  1707   001054  0101               	movlb	1	; () banked
  1708   001056  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1709   001058  0E01               	movlw	1
  1710   00105A  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  1711   00105C  EF30  F00C         	goto	l6207
  1712   001060                     l6115:
  1713   001060  0E00               	movlw	0
  1714   001062  6E33               	movwf	___flge@ff1^0,c
  1715   001064  0E00               	movlw	0
  1716   001066  6E34               	movwf	(___flge@ff1+1)^0,c
  1717   001068  0E86               	movlw	134
  1718   00106A  6E35               	movwf	(___flge@ff1+2)^0,c
  1719   00106C  0E42               	movlw	66
  1720   00106E  6E36               	movwf	(___flge@ff1+3)^0,c
  1721   001070  C1CB  F037         	movff	color_cardCheck@H,___flge@ff2
  1722   001074  C1CC  F038         	movff	color_cardCheck@H+1,___flge@ff2+1
  1723   001078  C1CD  F039         	movff	color_cardCheck@H+2,___flge@ff2+2
  1724   00107C  C1CE  F03A         	movff	color_cardCheck@H+3,___flge@ff2+3
  1725   001080  EC89  F01F         	call	___flge	;wreg free
  1726   001084  B0D8               	btfsc	status,0,c
  1727   001086  EF47  F008         	goto	u7601
  1728   00108A  EF49  F008         	goto	u7600
  1729   00108E                     u7601:
  1730   00108E  EFCD  F008         	goto	l6129
  1731   001092                     u7600:
  1732   001092  C1CB  F033         	movff	color_cardCheck@H,___flge@ff1
  1733   001096  C1CC  F034         	movff	color_cardCheck@H+1,___flge@ff1+1
  1734   00109A  C1CD  F035         	movff	color_cardCheck@H+2,___flge@ff1+2
  1735   00109E  C1CE  F036         	movff	color_cardCheck@H+3,___flge@ff1+3
  1736   0010A2  0E00               	movlw	0
  1737   0010A4  6E37               	movwf	___flge@ff2^0,c
  1738   0010A6  0E00               	movlw	0
  1739   0010A8  6E38               	movwf	(___flge@ff2+1)^0,c
  1740   0010AA  0E9E               	movlw	158
  1741   0010AC  6E39               	movwf	(___flge@ff2+2)^0,c
  1742   0010AE  0E42               	movlw	66
  1743   0010B0  6E3A               	movwf	(___flge@ff2+3)^0,c
  1744   0010B2  EC89  F01F         	call	___flge	;wreg free
  1745   0010B6  B0D8               	btfsc	status,0,c
  1746   0010B8  EF60  F008         	goto	u7611
  1747   0010BC  EF62  F008         	goto	u7610
  1748   0010C0                     u7611:
  1749   0010C0  EFCD  F008         	goto	l6129
  1750   0010C4                     u7610:
  1751   0010C4  0E00               	movlw	0
  1752   0010C6  6E33               	movwf	___flge@ff1^0,c
  1753   0010C8  0E00               	movlw	0
  1754   0010CA  6E34               	movwf	(___flge@ff1+1)^0,c
  1755   0010CC  0E48               	movlw	72
  1756   0010CE  6E35               	movwf	(___flge@ff1+2)^0,c
  1757   0010D0  0E42               	movlw	66
  1758   0010D2  6E36               	movwf	(___flge@ff1+3)^0,c
  1759   0010D4  C1CF  F037         	movff	color_cardCheck@S,___flge@ff2
  1760   0010D8  C1D0  F038         	movff	color_cardCheck@S+1,___flge@ff2+1
  1761   0010DC  C1D1  F039         	movff	color_cardCheck@S+2,___flge@ff2+2
  1762   0010E0  C1D2  F03A         	movff	color_cardCheck@S+3,___flge@ff2+3
  1763   0010E4  EC89  F01F         	call	___flge	;wreg free
  1764   0010E8  B0D8               	btfsc	status,0,c
  1765   0010EA  EF79  F008         	goto	u7621
  1766   0010EE  EF7B  F008         	goto	u7620
  1767   0010F2                     u7621:
  1768   0010F2  EFCD  F008         	goto	l6129
  1769   0010F6                     u7620:
  1770   0010F6  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  1771   0010FA  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  1772   0010FE  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  1773   001102  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  1774   001106  0E00               	movlw	0
  1775   001108  6E37               	movwf	___flge@ff2^0,c
  1776   00110A  0E00               	movlw	0
  1777   00110C  6E38               	movwf	(___flge@ff2+1)^0,c
  1778   00110E  0E64               	movlw	100
  1779   001110  6E39               	movwf	(___flge@ff2+2)^0,c
  1780   001112  0E42               	movlw	66
  1781   001114  6E3A               	movwf	(___flge@ff2+3)^0,c
  1782   001116  EC89  F01F         	call	___flge	;wreg free
  1783   00111A  B0D8               	btfsc	status,0,c
  1784   00111C  EF92  F008         	goto	u7631
  1785   001120  EF94  F008         	goto	u7630
  1786   001124                     u7631:
  1787   001124  EFCD  F008         	goto	l6129
  1788   001128                     u7630:
  1789   001128  0E00               	movlw	0
  1790   00112A  6E33               	movwf	___flge@ff1^0,c
  1791   00112C  0E00               	movlw	0
  1792   00112E  6E34               	movwf	(___flge@ff1+1)^0,c
  1793   001130  0E20               	movlw	32
  1794   001132  6E35               	movwf	(___flge@ff1+2)^0,c
  1795   001134  0E42               	movlw	66
  1796   001136  6E36               	movwf	(___flge@ff1+3)^0,c
  1797   001138  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  1798   00113C  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  1799   001140  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  1800   001144  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  1801   001148  EC89  F01F         	call	___flge	;wreg free
  1802   00114C  B0D8               	btfsc	status,0,c
  1803   00114E  EFAB  F008         	goto	u7641
  1804   001152  EFAD  F008         	goto	u7640
  1805   001156                     u7641:
  1806   001156  EFCD  F008         	goto	l6129
  1807   00115A                     u7640:
  1808   00115A  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  1809   00115E  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  1810   001162  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  1811   001166  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  1812   00116A  0E00               	movlw	0
  1813   00116C  6E37               	movwf	___flge@ff2^0,c
  1814   00116E  0E00               	movlw	0
  1815   001170  6E38               	movwf	(___flge@ff2+1)^0,c
  1816   001172  0E38               	movlw	56
  1817   001174  6E39               	movwf	(___flge@ff2+2)^0,c
  1818   001176  0E42               	movlw	66
  1819   001178  6E3A               	movwf	(___flge@ff2+3)^0,c
  1820   00117A  EC89  F01F         	call	___flge	;wreg free
  1821   00117E  B0D8               	btfsc	status,0,c
  1822   001180  EFC4  F008         	goto	u7651
  1823   001184  EFC6  F008         	goto	u7650
  1824   001188                     u7651:
  1825   001188  EFCD  F008         	goto	l6129
  1826   00118C                     u7650:
  1827   00118C  0E00               	movlw	0
  1828   00118E  0101               	movlb	1	; () banked
  1829   001190  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1830   001192  0E02               	movlw	2
  1831   001194  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  1832   001196  EF30  F00C         	goto	l6207
  1833   00119A                     l6129:
  1834   00119A  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  1835   00119E  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  1836   0011A2  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  1837   0011A6  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  1838   0011AA  0E00               	movlw	0
  1839   0011AC  6E37               	movwf	___flge@ff2^0,c
  1840   0011AE  0E00               	movlw	0
  1841   0011B0  6E38               	movwf	(___flge@ff2+1)^0,c
  1842   0011B2  0E20               	movlw	32
  1843   0011B4  6E39               	movwf	(___flge@ff2+2)^0,c
  1844   0011B6  0E41               	movlw	65
  1845   0011B8  6E3A               	movwf	(___flge@ff2+3)^0,c
  1846   0011BA  EC89  F01F         	call	___flge	;wreg free
  1847   0011BE  B0D8               	btfsc	status,0,c
  1848   0011C0  EFE4  F008         	goto	u7661
  1849   0011C4  EFE6  F008         	goto	u7660
  1850   0011C8                     u7661:
  1851   0011C8  EF1F  F009         	goto	l6137
  1852   0011CC                     u7660:
  1853   0011CC  0E00               	movlw	0
  1854   0011CE  6E33               	movwf	___flge@ff1^0,c
  1855   0011D0  0E00               	movlw	0
  1856   0011D2  6E34               	movwf	(___flge@ff1+1)^0,c
  1857   0011D4  0EF0               	movlw	240
  1858   0011D6  6E35               	movwf	(___flge@ff1+2)^0,c
  1859   0011D8  0E41               	movlw	65
  1860   0011DA  6E36               	movwf	(___flge@ff1+3)^0,c
  1861   0011DC  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  1862   0011E0  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  1863   0011E4  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  1864   0011E8  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  1865   0011EC  EC89  F01F         	call	___flge	;wreg free
  1866   0011F0  B0D8               	btfsc	status,0,c
  1867   0011F2  EFFD  F008         	goto	u7671
  1868   0011F6  EFFF  F008         	goto	u7670
  1869   0011FA                     u7671:
  1870   0011FA  EF1F  F009         	goto	l6137
  1871   0011FE                     u7670:
  1872   0011FE  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  1873   001202  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  1874   001206  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  1875   00120A  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  1876   00120E  0E00               	movlw	0
  1877   001210  6E37               	movwf	___flge@ff2^0,c
  1878   001212  0E00               	movlw	0
  1879   001214  6E38               	movwf	(___flge@ff2+1)^0,c
  1880   001216  0E20               	movlw	32
  1881   001218  6E39               	movwf	(___flge@ff2+2)^0,c
  1882   00121A  0E42               	movlw	66
  1883   00121C  6E3A               	movwf	(___flge@ff2+3)^0,c
  1884   00121E  EC89  F01F         	call	___flge	;wreg free
  1885   001222  B0D8               	btfsc	status,0,c
  1886   001224  EF16  F009         	goto	u7681
  1887   001228  EF18  F009         	goto	u7680
  1888   00122C                     u7681:
  1889   00122C  EF1F  F009         	goto	l6137
  1890   001230                     u7680:
  1891   001230  0E00               	movlw	0
  1892   001232  0101               	movlb	1	; () banked
  1893   001234  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1894   001236  0E03               	movlw	3
  1895   001238  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  1896   00123A  EF30  F00C         	goto	l6207
  1897   00123E                     l6137:
  1898   00123E  0E00               	movlw	0
  1899   001240  6E33               	movwf	___flge@ff1^0,c
  1900   001242  0E00               	movlw	0
  1901   001244  6E34               	movwf	(___flge@ff1+1)^0,c
  1902   001246  0EA0               	movlw	160
  1903   001248  6E35               	movwf	(___flge@ff1+2)^0,c
  1904   00124A  0E41               	movlw	65
  1905   00124C  6E36               	movwf	(___flge@ff1+3)^0,c
  1906   00124E  C1CB  F037         	movff	color_cardCheck@H,___flge@ff2
  1907   001252  C1CC  F038         	movff	color_cardCheck@H+1,___flge@ff2+1
  1908   001256  C1CD  F039         	movff	color_cardCheck@H+2,___flge@ff2+2
  1909   00125A  C1CE  F03A         	movff	color_cardCheck@H+3,___flge@ff2+3
  1910   00125E  EC89  F01F         	call	___flge	;wreg free
  1911   001262  B0D8               	btfsc	status,0,c
  1912   001264  EF36  F009         	goto	u7691
  1913   001268  EF38  F009         	goto	u7690
  1914   00126C                     u7691:
  1915   00126C  EFBC  F009         	goto	l6151
  1916   001270                     u7690:
  1917   001270  C1CB  F033         	movff	color_cardCheck@H,___flge@ff1
  1918   001274  C1CC  F034         	movff	color_cardCheck@H+1,___flge@ff1+1
  1919   001278  C1CD  F035         	movff	color_cardCheck@H+2,___flge@ff1+2
  1920   00127C  C1CE  F036         	movff	color_cardCheck@H+3,___flge@ff1+3
  1921   001280  0E00               	movlw	0
  1922   001282  6E37               	movwf	___flge@ff2^0,c
  1923   001284  0E00               	movlw	0
  1924   001286  6E38               	movwf	(___flge@ff2+1)^0,c
  1925   001288  0EC8               	movlw	200
  1926   00128A  6E39               	movwf	(___flge@ff2+2)^0,c
  1927   00128C  0E41               	movlw	65
  1928   00128E  6E3A               	movwf	(___flge@ff2+3)^0,c
  1929   001290  EC89  F01F         	call	___flge	;wreg free
  1930   001294  B0D8               	btfsc	status,0,c
  1931   001296  EF4F  F009         	goto	u7701
  1932   00129A  EF51  F009         	goto	u7700
  1933   00129E                     u7701:
  1934   00129E  EFBC  F009         	goto	l6151
  1935   0012A2                     u7700:
  1936   0012A2  0E00               	movlw	0
  1937   0012A4  6E33               	movwf	___flge@ff1^0,c
  1938   0012A6  0E00               	movlw	0
  1939   0012A8  6E34               	movwf	(___flge@ff1+1)^0,c
  1940   0012AA  0E82               	movlw	130
  1941   0012AC  6E35               	movwf	(___flge@ff1+2)^0,c
  1942   0012AE  0E42               	movlw	66
  1943   0012B0  6E36               	movwf	(___flge@ff1+3)^0,c
  1944   0012B2  C1CF  F037         	movff	color_cardCheck@S,___flge@ff2
  1945   0012B6  C1D0  F038         	movff	color_cardCheck@S+1,___flge@ff2+1
  1946   0012BA  C1D1  F039         	movff	color_cardCheck@S+2,___flge@ff2+2
  1947   0012BE  C1D2  F03A         	movff	color_cardCheck@S+3,___flge@ff2+3
  1948   0012C2  EC89  F01F         	call	___flge	;wreg free
  1949   0012C6  B0D8               	btfsc	status,0,c
  1950   0012C8  EF68  F009         	goto	u7711
  1951   0012CC  EF6A  F009         	goto	u7710
  1952   0012D0                     u7711:
  1953   0012D0  EFBC  F009         	goto	l6151
  1954   0012D4                     u7710:
  1955   0012D4  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  1956   0012D8  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  1957   0012DC  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  1958   0012E0  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  1959   0012E4  0E00               	movlw	0
  1960   0012E6  6E37               	movwf	___flge@ff2^0,c
  1961   0012E8  0E00               	movlw	0
  1962   0012EA  6E38               	movwf	(___flge@ff2+1)^0,c
  1963   0012EC  0E8C               	movlw	140
  1964   0012EE  6E39               	movwf	(___flge@ff2+2)^0,c
  1965   0012F0  0E42               	movlw	66
  1966   0012F2  6E3A               	movwf	(___flge@ff2+3)^0,c
  1967   0012F4  EC89  F01F         	call	___flge	;wreg free
  1968   0012F8  B0D8               	btfsc	status,0,c
  1969   0012FA  EF81  F009         	goto	u7721
  1970   0012FE  EF83  F009         	goto	u7720
  1971   001302                     u7721:
  1972   001302  EFBC  F009         	goto	l6151
  1973   001306                     u7720:
  1974   001306  0E00               	movlw	0
  1975   001308  6E33               	movwf	___flge@ff1^0,c
  1976   00130A  0E00               	movlw	0
  1977   00130C  6E34               	movwf	(___flge@ff1+1)^0,c
  1978   00130E  0E58               	movlw	88
  1979   001310  6E35               	movwf	(___flge@ff1+2)^0,c
  1980   001312  0E42               	movlw	66
  1981   001314  6E36               	movwf	(___flge@ff1+3)^0,c
  1982   001316  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  1983   00131A  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  1984   00131E  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  1985   001322  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  1986   001326  EC89  F01F         	call	___flge	;wreg free
  1987   00132A  B0D8               	btfsc	status,0,c
  1988   00132C  EF9A  F009         	goto	u7731
  1989   001330  EF9C  F009         	goto	u7730
  1990   001334                     u7731:
  1991   001334  EFBC  F009         	goto	l6151
  1992   001338                     u7730:
  1993   001338  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  1994   00133C  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  1995   001340  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  1996   001344  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  1997   001348  0E00               	movlw	0
  1998   00134A  6E37               	movwf	___flge@ff2^0,c
  1999   00134C  0E00               	movlw	0
  2000   00134E  6E38               	movwf	(___flge@ff2+1)^0,c
  2001   001350  0E64               	movlw	100
  2002   001352  6E39               	movwf	(___flge@ff2+2)^0,c
  2003   001354  0E42               	movlw	66
  2004   001356  6E3A               	movwf	(___flge@ff2+3)^0,c
  2005   001358  EC89  F01F         	call	___flge	;wreg free
  2006   00135C  B0D8               	btfsc	status,0,c
  2007   00135E  EFB3  F009         	goto	u7741
  2008   001362  EFB5  F009         	goto	u7740
  2009   001366                     u7741:
  2010   001366  EFBC  F009         	goto	l6151
  2011   00136A                     u7740:
  2012   00136A  0E00               	movlw	0
  2013   00136C  0101               	movlb	1	; () banked
  2014   00136E  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2015   001370  0E04               	movlw	4
  2016   001372  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  2017   001374  EF30  F00C         	goto	l6207
  2018   001378                     l6151:
  2019   001378  0E00               	movlw	0
  2020   00137A  6E33               	movwf	___flge@ff1^0,c
  2021   00137C  0E00               	movlw	0
  2022   00137E  6E34               	movwf	(___flge@ff1+1)^0,c
  2023   001380  0E50               	movlw	80
  2024   001382  6E35               	movwf	(___flge@ff1+2)^0,c
  2025   001384  0E41               	movlw	65
  2026   001386  6E36               	movwf	(___flge@ff1+3)^0,c
  2027   001388  C1CB  F037         	movff	color_cardCheck@H,___flge@ff2
  2028   00138C  C1CC  F038         	movff	color_cardCheck@H+1,___flge@ff2+1
  2029   001390  C1CD  F039         	movff	color_cardCheck@H+2,___flge@ff2+2
  2030   001394  C1CE  F03A         	movff	color_cardCheck@H+3,___flge@ff2+3
  2031   001398  EC89  F01F         	call	___flge	;wreg free
  2032   00139C  B0D8               	btfsc	status,0,c
  2033   00139E  EFD3  F009         	goto	u7751
  2034   0013A2  EFD5  F009         	goto	u7750
  2035   0013A6                     u7751:
  2036   0013A6  EF59  F00A         	goto	l6165
  2037   0013AA                     u7750:
  2038   0013AA  C1CB  F033         	movff	color_cardCheck@H,___flge@ff1
  2039   0013AE  C1CC  F034         	movff	color_cardCheck@H+1,___flge@ff1+1
  2040   0013B2  C1CD  F035         	movff	color_cardCheck@H+2,___flge@ff1+2
  2041   0013B6  C1CE  F036         	movff	color_cardCheck@H+3,___flge@ff1+3
  2042   0013BA  0E00               	movlw	0
  2043   0013BC  6E37               	movwf	___flge@ff2^0,c
  2044   0013BE  0E00               	movlw	0
  2045   0013C0  6E38               	movwf	(___flge@ff2+1)^0,c
  2046   0013C2  0E90               	movlw	144
  2047   0013C4  6E39               	movwf	(___flge@ff2+2)^0,c
  2048   0013C6  0E41               	movlw	65
  2049   0013C8  6E3A               	movwf	(___flge@ff2+3)^0,c
  2050   0013CA  EC89  F01F         	call	___flge	;wreg free
  2051   0013CE  B0D8               	btfsc	status,0,c
  2052   0013D0  EFEC  F009         	goto	u7761
  2053   0013D4  EFEE  F009         	goto	u7760
  2054   0013D8                     u7761:
  2055   0013D8  EF59  F00A         	goto	l6165
  2056   0013DC                     u7760:
  2057   0013DC  0E00               	movlw	0
  2058   0013DE  6E33               	movwf	___flge@ff1^0,c
  2059   0013E0  0E00               	movlw	0
  2060   0013E2  6E34               	movwf	(___flge@ff1+1)^0,c
  2061   0013E4  0E5C               	movlw	92
  2062   0013E6  6E35               	movwf	(___flge@ff1+2)^0,c
  2063   0013E8  0E42               	movlw	66
  2064   0013EA  6E36               	movwf	(___flge@ff1+3)^0,c
  2065   0013EC  C1CF  F037         	movff	color_cardCheck@S,___flge@ff2
  2066   0013F0  C1D0  F038         	movff	color_cardCheck@S+1,___flge@ff2+1
  2067   0013F4  C1D1  F039         	movff	color_cardCheck@S+2,___flge@ff2+2
  2068   0013F8  C1D2  F03A         	movff	color_cardCheck@S+3,___flge@ff2+3
  2069   0013FC  EC89  F01F         	call	___flge	;wreg free
  2070   001400  B0D8               	btfsc	status,0,c
  2071   001402  EF05  F00A         	goto	u7771
  2072   001406  EF07  F00A         	goto	u7770
  2073   00140A                     u7771:
  2074   00140A  EF59  F00A         	goto	l6165
  2075   00140E                     u7770:
  2076   00140E  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  2077   001412  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  2078   001416  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  2079   00141A  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  2080   00141E  0E00               	movlw	0
  2081   001420  6E37               	movwf	___flge@ff2^0,c
  2082   001422  0E00               	movlw	0
  2083   001424  6E38               	movwf	(___flge@ff2+1)^0,c
  2084   001426  0E70               	movlw	112
  2085   001428  6E39               	movwf	(___flge@ff2+2)^0,c
  2086   00142A  0E42               	movlw	66
  2087   00142C  6E3A               	movwf	(___flge@ff2+3)^0,c
  2088   00142E  EC89  F01F         	call	___flge	;wreg free
  2089   001432  B0D8               	btfsc	status,0,c
  2090   001434  EF1E  F00A         	goto	u7781
  2091   001438  EF20  F00A         	goto	u7780
  2092   00143C                     u7781:
  2093   00143C  EF59  F00A         	goto	l6165
  2094   001440                     u7780:
  2095   001440  0E00               	movlw	0
  2096   001442  6E33               	movwf	___flge@ff1^0,c
  2097   001444  0E00               	movlw	0
  2098   001446  6E34               	movwf	(___flge@ff1+1)^0,c
  2099   001448  0E48               	movlw	72
  2100   00144A  6E35               	movwf	(___flge@ff1+2)^0,c
  2101   00144C  0E42               	movlw	66
  2102   00144E  6E36               	movwf	(___flge@ff1+3)^0,c
  2103   001450  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  2104   001454  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  2105   001458  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  2106   00145C  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  2107   001460  EC89  F01F         	call	___flge	;wreg free
  2108   001464  B0D8               	btfsc	status,0,c
  2109   001466  EF37  F00A         	goto	u7791
  2110   00146A  EF39  F00A         	goto	u7790
  2111   00146E                     u7791:
  2112   00146E  EF59  F00A         	goto	l6165
  2113   001472                     u7790:
  2114   001472  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  2115   001476  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  2116   00147A  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  2117   00147E  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  2118   001482  0E00               	movlw	0
  2119   001484  6E37               	movwf	___flge@ff2^0,c
  2120   001486  0E00               	movlw	0
  2121   001488  6E38               	movwf	(___flge@ff2+1)^0,c
  2122   00148A  0E58               	movlw	88
  2123   00148C  6E39               	movwf	(___flge@ff2+2)^0,c
  2124   00148E  0E42               	movlw	66
  2125   001490  6E3A               	movwf	(___flge@ff2+3)^0,c
  2126   001492  EC89  F01F         	call	___flge	;wreg free
  2127   001496  B0D8               	btfsc	status,0,c
  2128   001498  EF50  F00A         	goto	u7801
  2129   00149C  EF52  F00A         	goto	u7800
  2130   0014A0                     u7801:
  2131   0014A0  EF59  F00A         	goto	l6165
  2132   0014A4                     u7800:
  2133   0014A4  0E00               	movlw	0
  2134   0014A6  0101               	movlb	1	; () banked
  2135   0014A8  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2136   0014AA  0E05               	movlw	5
  2137   0014AC  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  2138   0014AE  EF30  F00C         	goto	l6207
  2139   0014B2                     l6165:
  2140   0014B2  0E00               	movlw	0
  2141   0014B4  6E33               	movwf	___flge@ff1^0,c
  2142   0014B6  0E00               	movlw	0
  2143   0014B8  6E34               	movwf	(___flge@ff1+1)^0,c
  2144   0014BA  0EA0               	movlw	160
  2145   0014BC  6E35               	movwf	(___flge@ff1+2)^0,c
  2146   0014BE  0E40               	movlw	64
  2147   0014C0  6E36               	movwf	(___flge@ff1+3)^0,c
  2148   0014C2  C1CB  F037         	movff	color_cardCheck@H,___flge@ff2
  2149   0014C6  C1CC  F038         	movff	color_cardCheck@H+1,___flge@ff2+1
  2150   0014CA  C1CD  F039         	movff	color_cardCheck@H+2,___flge@ff2+2
  2151   0014CE  C1CE  F03A         	movff	color_cardCheck@H+3,___flge@ff2+3
  2152   0014D2  EC89  F01F         	call	___flge	;wreg free
  2153   0014D6  B0D8               	btfsc	status,0,c
  2154   0014D8  EF70  F00A         	goto	u7811
  2155   0014DC  EF72  F00A         	goto	u7810
  2156   0014E0                     u7811:
  2157   0014E0  EFF6  F00A         	goto	l6179
  2158   0014E4                     u7810:
  2159   0014E4  C1CB  F033         	movff	color_cardCheck@H,___flge@ff1
  2160   0014E8  C1CC  F034         	movff	color_cardCheck@H+1,___flge@ff1+1
  2161   0014EC  C1CD  F035         	movff	color_cardCheck@H+2,___flge@ff1+2
  2162   0014F0  C1CE  F036         	movff	color_cardCheck@H+3,___flge@ff1+3
  2163   0014F4  0E00               	movlw	0
  2164   0014F6  6E37               	movwf	___flge@ff2^0,c
  2165   0014F8  0E00               	movlw	0
  2166   0014FA  6E38               	movwf	(___flge@ff2+1)^0,c
  2167   0014FC  0E20               	movlw	32
  2168   0014FE  6E39               	movwf	(___flge@ff2+2)^0,c
  2169   001500  0E41               	movlw	65
  2170   001502  6E3A               	movwf	(___flge@ff2+3)^0,c
  2171   001504  EC89  F01F         	call	___flge	;wreg free
  2172   001508  B0D8               	btfsc	status,0,c
  2173   00150A  EF89  F00A         	goto	u7821
  2174   00150E  EF8B  F00A         	goto	u7820
  2175   001512                     u7821:
  2176   001512  EFF6  F00A         	goto	l6179
  2177   001516                     u7820:
  2178   001516  0E00               	movlw	0
  2179   001518  6E33               	movwf	___flge@ff1^0,c
  2180   00151A  0E00               	movlw	0
  2181   00151C  6E34               	movwf	(___flge@ff1+1)^0,c
  2182   00151E  0E8C               	movlw	140
  2183   001520  6E35               	movwf	(___flge@ff1+2)^0,c
  2184   001522  0E42               	movlw	66
  2185   001524  6E36               	movwf	(___flge@ff1+3)^0,c
  2186   001526  C1CF  F037         	movff	color_cardCheck@S,___flge@ff2
  2187   00152A  C1D0  F038         	movff	color_cardCheck@S+1,___flge@ff2+1
  2188   00152E  C1D1  F039         	movff	color_cardCheck@S+2,___flge@ff2+2
  2189   001532  C1D2  F03A         	movff	color_cardCheck@S+3,___flge@ff2+3
  2190   001536  EC89  F01F         	call	___flge	;wreg free
  2191   00153A  B0D8               	btfsc	status,0,c
  2192   00153C  EFA2  F00A         	goto	u7831
  2193   001540  EFA4  F00A         	goto	u7830
  2194   001544                     u7831:
  2195   001544  EFF6  F00A         	goto	l6179
  2196   001548                     u7830:
  2197   001548  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  2198   00154C  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  2199   001550  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  2200   001554  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  2201   001558  0E00               	movlw	0
  2202   00155A  6E37               	movwf	___flge@ff2^0,c
  2203   00155C  0E00               	movlw	0
  2204   00155E  6E38               	movwf	(___flge@ff2+1)^0,c
  2205   001560  0E96               	movlw	150
  2206   001562  6E39               	movwf	(___flge@ff2+2)^0,c
  2207   001564  0E42               	movlw	66
  2208   001566  6E3A               	movwf	(___flge@ff2+3)^0,c
  2209   001568  EC89  F01F         	call	___flge	;wreg free
  2210   00156C  B0D8               	btfsc	status,0,c
  2211   00156E  EFBB  F00A         	goto	u7841
  2212   001572  EFBD  F00A         	goto	u7840
  2213   001576                     u7841:
  2214   001576  EFF6  F00A         	goto	l6179
  2215   00157A                     u7840:
  2216   00157A  0E00               	movlw	0
  2217   00157C  6E33               	movwf	___flge@ff1^0,c
  2218   00157E  0E00               	movlw	0
  2219   001580  6E34               	movwf	(___flge@ff1+1)^0,c
  2220   001582  0E78               	movlw	120
  2221   001584  6E35               	movwf	(___flge@ff1+2)^0,c
  2222   001586  0E42               	movlw	66
  2223   001588  6E36               	movwf	(___flge@ff1+3)^0,c
  2224   00158A  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  2225   00158E  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  2226   001592  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  2227   001596  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  2228   00159A  EC89  F01F         	call	___flge	;wreg free
  2229   00159E  B0D8               	btfsc	status,0,c
  2230   0015A0  EFD4  F00A         	goto	u7851
  2231   0015A4  EFD6  F00A         	goto	u7850
  2232   0015A8                     u7851:
  2233   0015A8  EFF6  F00A         	goto	l6179
  2234   0015AC                     u7850:
  2235   0015AC  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  2236   0015B0  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  2237   0015B4  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  2238   0015B8  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  2239   0015BC  0E00               	movlw	0
  2240   0015BE  6E37               	movwf	___flge@ff2^0,c
  2241   0015C0  0E00               	movlw	0
  2242   0015C2  6E38               	movwf	(___flge@ff2+1)^0,c
  2243   0015C4  0E86               	movlw	134
  2244   0015C6  6E39               	movwf	(___flge@ff2+2)^0,c
  2245   0015C8  0E42               	movlw	66
  2246   0015CA  6E3A               	movwf	(___flge@ff2+3)^0,c
  2247   0015CC  EC89  F01F         	call	___flge	;wreg free
  2248   0015D0  B0D8               	btfsc	status,0,c
  2249   0015D2  EFED  F00A         	goto	u7861
  2250   0015D6  EFEF  F00A         	goto	u7860
  2251   0015DA                     u7861:
  2252   0015DA  EFF6  F00A         	goto	l6179
  2253   0015DE                     u7860:
  2254   0015DE  0E00               	movlw	0
  2255   0015E0  0101               	movlb	1	; () banked
  2256   0015E2  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2257   0015E4  0E06               	movlw	6
  2258   0015E6  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  2259   0015E8  EF30  F00C         	goto	l6207
  2260   0015EC                     l6179:
  2261   0015EC  0E00               	movlw	0
  2262   0015EE  6E33               	movwf	___flge@ff1^0,c
  2263   0015F0  0E00               	movlw	0
  2264   0015F2  6E34               	movwf	(___flge@ff1+1)^0,c
  2265   0015F4  0E94               	movlw	148
  2266   0015F6  6E35               	movwf	(___flge@ff1+2)^0,c
  2267   0015F8  0E42               	movlw	66
  2268   0015FA  6E36               	movwf	(___flge@ff1+3)^0,c
  2269   0015FC  C1CB  F037         	movff	color_cardCheck@H,___flge@ff2
  2270   001600  C1CC  F038         	movff	color_cardCheck@H+1,___flge@ff2+1
  2271   001604  C1CD  F039         	movff	color_cardCheck@H+2,___flge@ff2+2
  2272   001608  C1CE  F03A         	movff	color_cardCheck@H+3,___flge@ff2+3
  2273   00160C  EC89  F01F         	call	___flge	;wreg free
  2274   001610  B0D8               	btfsc	status,0,c
  2275   001612  EF0D  F00B         	goto	u7871
  2276   001616  EF0F  F00B         	goto	u7870
  2277   00161A                     u7871:
  2278   00161A  EF93  F00B         	goto	l6193
  2279   00161E                     u7870:
  2280   00161E  C1CB  F033         	movff	color_cardCheck@H,___flge@ff1
  2281   001622  C1CC  F034         	movff	color_cardCheck@H+1,___flge@ff1+1
  2282   001626  C1CD  F035         	movff	color_cardCheck@H+2,___flge@ff1+2
  2283   00162A  C1CE  F036         	movff	color_cardCheck@H+3,___flge@ff1+3
  2284   00162E  0E00               	movlw	0
  2285   001630  6E37               	movwf	___flge@ff2^0,c
  2286   001632  0E00               	movlw	0
  2287   001634  6E38               	movwf	(___flge@ff2+1)^0,c
  2288   001636  0EAA               	movlw	170
  2289   001638  6E39               	movwf	(___flge@ff2+2)^0,c
  2290   00163A  0E42               	movlw	66
  2291   00163C  6E3A               	movwf	(___flge@ff2+3)^0,c
  2292   00163E  EC89  F01F         	call	___flge	;wreg free
  2293   001642  B0D8               	btfsc	status,0,c
  2294   001644  EF26  F00B         	goto	u7881
  2295   001648  EF28  F00B         	goto	u7880
  2296   00164C                     u7881:
  2297   00164C  EF93  F00B         	goto	l6193
  2298   001650                     u7880:
  2299   001650  0E00               	movlw	0
  2300   001652  6E33               	movwf	___flge@ff1^0,c
  2301   001654  0E00               	movlw	0
  2302   001656  6E34               	movwf	(___flge@ff1+1)^0,c
  2303   001658  0EE0               	movlw	224
  2304   00165A  6E35               	movwf	(___flge@ff1+2)^0,c
  2305   00165C  0E41               	movlw	65
  2306   00165E  6E36               	movwf	(___flge@ff1+3)^0,c
  2307   001660  C1CF  F037         	movff	color_cardCheck@S,___flge@ff2
  2308   001664  C1D0  F038         	movff	color_cardCheck@S+1,___flge@ff2+1
  2309   001668  C1D1  F039         	movff	color_cardCheck@S+2,___flge@ff2+2
  2310   00166C  C1D2  F03A         	movff	color_cardCheck@S+3,___flge@ff2+3
  2311   001670  EC89  F01F         	call	___flge	;wreg free
  2312   001674  B0D8               	btfsc	status,0,c
  2313   001676  EF3F  F00B         	goto	u7891
  2314   00167A  EF41  F00B         	goto	u7890
  2315   00167E                     u7891:
  2316   00167E  EF93  F00B         	goto	l6193
  2317   001682                     u7890:
  2318   001682  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  2319   001686  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  2320   00168A  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  2321   00168E  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  2322   001692  0E00               	movlw	0
  2323   001694  6E37               	movwf	___flge@ff2^0,c
  2324   001696  0E00               	movlw	0
  2325   001698  6E38               	movwf	(___flge@ff2+1)^0,c
  2326   00169A  0E04               	movlw	4
  2327   00169C  6E39               	movwf	(___flge@ff2+2)^0,c
  2328   00169E  0E42               	movlw	66
  2329   0016A0  6E3A               	movwf	(___flge@ff2+3)^0,c
  2330   0016A2  EC89  F01F         	call	___flge	;wreg free
  2331   0016A6  B0D8               	btfsc	status,0,c
  2332   0016A8  EF58  F00B         	goto	u7901
  2333   0016AC  EF5A  F00B         	goto	u7900
  2334   0016B0                     u7901:
  2335   0016B0  EF93  F00B         	goto	l6193
  2336   0016B4                     u7900:
  2337   0016B4  0E00               	movlw	0
  2338   0016B6  6E33               	movwf	___flge@ff1^0,c
  2339   0016B8  0E00               	movlw	0
  2340   0016BA  6E34               	movwf	(___flge@ff1+1)^0,c
  2341   0016BC  0E14               	movlw	20
  2342   0016BE  6E35               	movwf	(___flge@ff1+2)^0,c
  2343   0016C0  0E42               	movlw	66
  2344   0016C2  6E36               	movwf	(___flge@ff1+3)^0,c
  2345   0016C4  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  2346   0016C8  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  2347   0016CC  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  2348   0016D0  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  2349   0016D4  EC89  F01F         	call	___flge	;wreg free
  2350   0016D8  B0D8               	btfsc	status,0,c
  2351   0016DA  EF71  F00B         	goto	u7911
  2352   0016DE  EF73  F00B         	goto	u7910
  2353   0016E2                     u7911:
  2354   0016E2  EF93  F00B         	goto	l6193
  2355   0016E6                     u7910:
  2356   0016E6  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  2357   0016EA  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  2358   0016EE  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  2359   0016F2  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  2360   0016F6  0E00               	movlw	0
  2361   0016F8  6E37               	movwf	___flge@ff2^0,c
  2362   0016FA  0E00               	movlw	0
  2363   0016FC  6E38               	movwf	(___flge@ff2+1)^0,c
  2364   0016FE  0E28               	movlw	40
  2365   001700  6E39               	movwf	(___flge@ff2+2)^0,c
  2366   001702  0E42               	movlw	66
  2367   001704  6E3A               	movwf	(___flge@ff2+3)^0,c
  2368   001706  EC89  F01F         	call	___flge	;wreg free
  2369   00170A  B0D8               	btfsc	status,0,c
  2370   00170C  EF8A  F00B         	goto	u7921
  2371   001710  EF8C  F00B         	goto	u7920
  2372   001714                     u7921:
  2373   001714  EF93  F00B         	goto	l6193
  2374   001718                     u7920:
  2375   001718  0E00               	movlw	0
  2376   00171A  0101               	movlb	1	; () banked
  2377   00171C  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2378   00171E  0E07               	movlw	7
  2379   001720  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  2380   001722  EF30  F00C         	goto	l6207
  2381   001726                     l6193:
  2382   001726  0E00               	movlw	0
  2383   001728  6E33               	movwf	___flge@ff1^0,c
  2384   00172A  0E00               	movlw	0
  2385   00172C  6E34               	movwf	(___flge@ff1+1)^0,c
  2386   00172E  0EB0               	movlw	176
  2387   001730  6E35               	movwf	(___flge@ff1+2)^0,c
  2388   001732  0E41               	movlw	65
  2389   001734  6E36               	movwf	(___flge@ff1+3)^0,c
  2390   001736  C1CB  F037         	movff	color_cardCheck@H,___flge@ff2
  2391   00173A  C1CC  F038         	movff	color_cardCheck@H+1,___flge@ff2+1
  2392   00173E  C1CD  F039         	movff	color_cardCheck@H+2,___flge@ff2+2
  2393   001742  C1CE  F03A         	movff	color_cardCheck@H+3,___flge@ff2+3
  2394   001746  EC89  F01F         	call	___flge	;wreg free
  2395   00174A  B0D8               	btfsc	status,0,c
  2396   00174C  EFAA  F00B         	goto	u7931
  2397   001750  EFAC  F00B         	goto	u7930
  2398   001754                     u7931:
  2399   001754  EF30  F00C         	goto	l152
  2400   001758                     u7930:
  2401   001758  C1CB  F033         	movff	color_cardCheck@H,___flge@ff1
  2402   00175C  C1CC  F034         	movff	color_cardCheck@H+1,___flge@ff1+1
  2403   001760  C1CD  F035         	movff	color_cardCheck@H+2,___flge@ff1+2
  2404   001764  C1CE  F036         	movff	color_cardCheck@H+3,___flge@ff1+3
  2405   001768  0E00               	movlw	0
  2406   00176A  6E37               	movwf	___flge@ff2^0,c
  2407   00176C  0E00               	movlw	0
  2408   00176E  6E38               	movwf	(___flge@ff2+1)^0,c
  2409   001770  0ED8               	movlw	216
  2410   001772  6E39               	movwf	(___flge@ff2+2)^0,c
  2411   001774  0E41               	movlw	65
  2412   001776  6E3A               	movwf	(___flge@ff2+3)^0,c
  2413   001778  EC89  F01F         	call	___flge	;wreg free
  2414   00177C  B0D8               	btfsc	status,0,c
  2415   00177E  EFC3  F00B         	goto	u7941
  2416   001782  EFC5  F00B         	goto	u7940
  2417   001786                     u7941:
  2418   001786  EF30  F00C         	goto	l152
  2419   00178A                     u7940:
  2420   00178A  0E00               	movlw	0
  2421   00178C  6E33               	movwf	___flge@ff1^0,c
  2422   00178E  0E00               	movlw	0
  2423   001790  6E34               	movwf	(___flge@ff1+1)^0,c
  2424   001792  0E40               	movlw	64
  2425   001794  6E35               	movwf	(___flge@ff1+2)^0,c
  2426   001796  0E42               	movlw	66
  2427   001798  6E36               	movwf	(___flge@ff1+3)^0,c
  2428   00179A  C1CF  F037         	movff	color_cardCheck@S,___flge@ff2
  2429   00179E  C1D0  F038         	movff	color_cardCheck@S+1,___flge@ff2+1
  2430   0017A2  C1D1  F039         	movff	color_cardCheck@S+2,___flge@ff2+2
  2431   0017A6  C1D2  F03A         	movff	color_cardCheck@S+3,___flge@ff2+3
  2432   0017AA  EC89  F01F         	call	___flge	;wreg free
  2433   0017AE  B0D8               	btfsc	status,0,c
  2434   0017B0  EFDC  F00B         	goto	u7951
  2435   0017B4  EFDE  F00B         	goto	u7950
  2436   0017B8                     u7951:
  2437   0017B8  EF30  F00C         	goto	l152
  2438   0017BC                     u7950:
  2439   0017BC  C1CF  F033         	movff	color_cardCheck@S,___flge@ff1
  2440   0017C0  C1D0  F034         	movff	color_cardCheck@S+1,___flge@ff1+1
  2441   0017C4  C1D1  F035         	movff	color_cardCheck@S+2,___flge@ff1+2
  2442   0017C8  C1D2  F036         	movff	color_cardCheck@S+3,___flge@ff1+3
  2443   0017CC  0E00               	movlw	0
  2444   0017CE  6E37               	movwf	___flge@ff2^0,c
  2445   0017D0  0E00               	movlw	0
  2446   0017D2  6E38               	movwf	(___flge@ff2+1)^0,c
  2447   0017D4  0E54               	movlw	84
  2448   0017D6  6E39               	movwf	(___flge@ff2+2)^0,c
  2449   0017D8  0E42               	movlw	66
  2450   0017DA  6E3A               	movwf	(___flge@ff2+3)^0,c
  2451   0017DC  EC89  F01F         	call	___flge	;wreg free
  2452   0017E0  B0D8               	btfsc	status,0,c
  2453   0017E2  EFF5  F00B         	goto	u7961
  2454   0017E6  EFF7  F00B         	goto	u7960
  2455   0017EA                     u7961:
  2456   0017EA  EF30  F00C         	goto	l152
  2457   0017EE                     u7960:
  2458   0017EE  0E00               	movlw	0
  2459   0017F0  6E33               	movwf	___flge@ff1^0,c
  2460   0017F2  0E00               	movlw	0
  2461   0017F4  6E34               	movwf	(___flge@ff1+1)^0,c
  2462   0017F6  0E34               	movlw	52
  2463   0017F8  6E35               	movwf	(___flge@ff1+2)^0,c
  2464   0017FA  0E42               	movlw	66
  2465   0017FC  6E36               	movwf	(___flge@ff1+3)^0,c
  2466   0017FE  C1D3  F037         	movff	color_cardCheck@V,___flge@ff2
  2467   001802  C1D4  F038         	movff	color_cardCheck@V+1,___flge@ff2+1
  2468   001806  C1D5  F039         	movff	color_cardCheck@V+2,___flge@ff2+2
  2469   00180A  C1D6  F03A         	movff	color_cardCheck@V+3,___flge@ff2+3
  2470   00180E  EC89  F01F         	call	___flge	;wreg free
  2471   001812  B0D8               	btfsc	status,0,c
  2472   001814  EF0E  F00C         	goto	u7971
  2473   001818  EF10  F00C         	goto	u7970
  2474   00181C                     u7971:
  2475   00181C  EF30  F00C         	goto	l152
  2476   001820                     u7970:
  2477   001820  C1D3  F033         	movff	color_cardCheck@V,___flge@ff1
  2478   001824  C1D4  F034         	movff	color_cardCheck@V+1,___flge@ff1+1
  2479   001828  C1D5  F035         	movff	color_cardCheck@V+2,___flge@ff1+2
  2480   00182C  C1D6  F036         	movff	color_cardCheck@V+3,___flge@ff1+3
  2481   001830  0E00               	movlw	0
  2482   001832  6E37               	movwf	___flge@ff2^0,c
  2483   001834  0E00               	movlw	0
  2484   001836  6E38               	movwf	(___flge@ff2+1)^0,c
  2485   001838  0E48               	movlw	72
  2486   00183A  6E39               	movwf	(___flge@ff2+2)^0,c
  2487   00183C  0E42               	movlw	66
  2488   00183E  6E3A               	movwf	(___flge@ff2+3)^0,c
  2489   001840  EC89  F01F         	call	___flge	;wreg free
  2490   001844  B0D8               	btfsc	status,0,c
  2491   001846  EF27  F00C         	goto	u7981
  2492   00184A  EF29  F00C         	goto	u7980
  2493   00184E                     u7981:
  2494   00184E  EF30  F00C         	goto	l152
  2495   001852                     u7980:
  2496   001852  0E00               	movlw	0
  2497   001854  0101               	movlb	1	; () banked
  2498   001856  6FCA               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2499   001858  0E08               	movlw	8
  2500   00185A  6FC9               	movwf	color_cardCheck@card_color& (0+255),b
  2501   00185C  EF30  F00C         	goto	l6207
  2502   001860                     l152:
  2503   001860                     l6207:
  2504                           
  2505                           ;color.c: 219:     char senddata[25];;color.c: 220:     sprintf(senddata,"H:%.2f S: %.2f
      +                           V: %.2f C:%u",H,S,V,card_color);
  2506   001860  0EA0               	movlw	low color_cardCheck@senddata
  2507   001862  0100               	movlb	0	; () banked
  2508   001864  6FAB               	movwf	sprintf@s& (0+255),b
  2509   001866  0E01               	movlw	high color_cardCheck@senddata
  2510   001868  6FAC               	movwf	(sprintf@s+1)& (0+255),b
  2511   00186A  0E01               	movlw	low STR_1
  2512   00186C  6FAD               	movwf	sprintf@fmt& (0+255),b
  2513   00186E  C1CB  F0AE         	movff	color_cardCheck@H,?_sprintf+3
  2514   001872  C1CC  F0AF         	movff	color_cardCheck@H+1,?_sprintf+4
  2515   001876  C1CD  F0B0         	movff	color_cardCheck@H+2,?_sprintf+5
  2516   00187A  C1CE  F0B1         	movff	color_cardCheck@H+3,?_sprintf+6
  2517   00187E  C1CF  F0B2         	movff	color_cardCheck@S,?_sprintf+7
  2518   001882  C1D0  F0B3         	movff	color_cardCheck@S+1,?_sprintf+8
  2519   001886  C1D1  F0B4         	movff	color_cardCheck@S+2,?_sprintf+9
  2520   00188A  C1D2  F0B5         	movff	color_cardCheck@S+3,?_sprintf+10
  2521   00188E  C1D3  F0B6         	movff	color_cardCheck@V,?_sprintf+11
  2522   001892  C1D4  F0B7         	movff	color_cardCheck@V+1,?_sprintf+12
  2523   001896  C1D5  F0B8         	movff	color_cardCheck@V+2,?_sprintf+13
  2524   00189A  C1D6  F0B9         	movff	color_cardCheck@V+3,?_sprintf+14
  2525   00189E  C1C9  F0BA         	movff	color_cardCheck@card_color,?_sprintf+15
  2526   0018A2  C1CA  F0BB         	movff	color_cardCheck@card_color+1,?_sprintf+16
  2527   0018A6  EC23  F024         	call	_sprintf	;wreg free
  2528   0018AA                     
  2529                           ;color.c: 221:     sendStringSerial4(senddata);
  2530   0018AA  0EA0               	movlw	low color_cardCheck@senddata
  2531   0018AC  6E02               	movwf	sendStringSerial4@string^0,c
  2532   0018AE  0E01               	movlw	high color_cardCheck@senddata
  2533   0018B0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2534   0018B2  ECB6  F024         	call	_sendStringSerial4	;wreg free
  2535   0018B6                     
  2536                           ;color.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2537   0018B6  0E05               	movlw	5
  2538   0018B8  0100               	movlb	0	; () banked
  2539   0018BA  6FCC               	movwf	(??_color_cardCheck+1)& (0+255),b
  2540   0018BC  0E0F               	movlw	15
  2541   0018BE  6FCB               	movwf	??_color_cardCheck& (0+255),b
  2542   0018C0  0EF1               	movlw	241
  2543   0018C2                     u8257:
  2544   0018C2  2EE8               	decfsz	wreg,f,c
  2545   0018C4  D7FE               	bra	u8257
  2546   0018C6  2FCB               	decfsz	??_color_cardCheck& (0+255),f,b
  2547   0018C8  D7FC               	bra	u8257
  2548   0018CA  2FCC               	decfsz	(??_color_cardCheck+1)& (0+255),f,b
  2549   0018CC  D7FA               	bra	u8257
  2550   0018CE                     
  2551                           ;color.c: 225:     return card_color;
  2552   0018CE  C1C9  F0C9         	movff	color_cardCheck@card_color,?_color_cardCheck
  2553   0018D2  C1CA  F0CA         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  2554   0018D6  0012               	return		;funcret
  2555   0018D8                     __end_of_color_cardCheck:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _sprintf *****************
  2559 ;; Defined at:
  2560 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  s               2   75[BANK0 ] PTR unsigned char 
  2563 ;;		 -> color_cardCheck@senddata(25), 
  2564 ;;  fmt             1   77[BANK0 ] PTR const unsigned char 
  2565 ;;		 -> STR_1(28), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  f              12   93[BANK0 ] struct _IO_FILE
  2568 ;;  ret             2    0        int 
  2569 ;;  ap              1   92[BANK0 ] PTR void [1]
  2570 ;;		 -> ?_sprintf(2), 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  2   75[BANK0 ] int 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2580 ;;      Params:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;Total ram usage:       30 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 7
  2587 ;; This function calls:
  2588 ;;		_vfprintf
  2589 ;; This function is called by:
  2590 ;;		_color_cardCheck
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text6
  2595   004846                     __ptext6:
  2596                           	callstack 0
  2597   004846                     _sprintf:
  2598                           	callstack 22
  2599   004846  0EAE               	movlw	low (?_sprintf+3)
  2600   004848  0100               	movlb	0	; () banked
  2601   00484A  6FBC               	movwf	sprintf@ap& (0+255),b
  2602   00484C  C0AB  F0BD         	movff	sprintf@s,sprintf@f
  2603   004850  C0AC  F0BE         	movff	sprintf@s+1,sprintf@f+1
  2604   004854                     
  2605                           ; BSR set to: 0
  2606   004854  0E00               	movlw	0
  2607   004856  6FC1               	movwf	(sprintf@f+4)& (0+255),b
  2608   004858  0E00               	movlw	0
  2609   00485A  6FC0               	movwf	(sprintf@f+3)& (0+255),b
  2610   00485C                     
  2611                           ; BSR set to: 0
  2612   00485C  0E00               	movlw	0
  2613   00485E  6FC8               	movwf	(sprintf@f+11)& (0+255),b
  2614   004860  0E00               	movlw	0
  2615   004862  6FC7               	movwf	(sprintf@f+10)& (0+255),b
  2616   004864                     
  2617                           ; BSR set to: 0
  2618   004864  0EBD               	movlw	low sprintf@f
  2619   004866  6FA7               	movwf	vfprintf@fp& (0+255),b
  2620   004868  C0AD  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  2621   00486C  0EBC               	movlw	low sprintf@ap
  2622   00486E  6FA9               	movwf	vfprintf@ap& (0+255),b
  2623   004870  EC9C  F023         	call	_vfprintf	;wreg free
  2624   004874  0100               	movlb	0	; () banked
  2625   004876  51C0               	movf	(sprintf@f+3)& (0+255),w,b
  2626   004878  25AB               	addwf	sprintf@s& (0+255),w,b
  2627   00487A  6ED9               	movwf	fsr2l,c
  2628   00487C  51C1               	movf	(sprintf@f+4)& (0+255),w,b
  2629   00487E  21AC               	addwfc	(sprintf@s+1)& (0+255),w,b
  2630   004880  6EDA               	movwf	fsr2h,c
  2631   004882  6ADF               	clrf	indf2,c
  2632   004884                     
  2633                           ; BSR set to: 0
  2634   004884  0012               	return		;funcret
  2635   004886                     __end_of_sprintf:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _vfprintf *****************
  2639 ;; Defined at:
  2640 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  2643 ;;		 -> sprintf@f(12), 
  2644 ;;  fmt             1   72[BANK0 ] PTR const unsigned char 
  2645 ;;		 -> STR_1(28), 
  2646 ;;  ap              1   73[BANK0 ] PTR PTR void 
  2647 ;;		 -> sprintf@ap(1), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  cfmt            1   74[BANK0 ] PTR unsigned char 
  2650 ;;		 -> STR_1(28), 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2   71[BANK0 ] int 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2660 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;Total ram usage:        4 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 6
  2667 ;; This function calls:
  2668 ;;		_vfpfcnvrt
  2669 ;; This function is called by:
  2670 ;;		_sprintf
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text7
  2675   004738                     __ptext7:
  2676                           	callstack 0
  2677   004738                     _vfprintf:
  2678                           	callstack 22
  2679   004738                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2681   004738  C0A8  F0AA         	movff	vfprintf@fmt,vfprintf@cfmt
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2684   00473C  EFA9  F023         	goto	l6013
  2685   004740                     l6011:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2688   004740  C0A7  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2689   004744  0EAA               	movlw	low vfprintf@cfmt
  2690   004746  0100               	movlb	0	; () banked
  2691   004748  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2692   00474A  C0A9  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2693   00474E  EC35  F01B         	call	_vfpfcnvrt	;wreg free
  2694   004752                     l6013:
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2697   004752  C0AA  FFF6         	movff	vfprintf@cfmt,tblptrl
  2698   004756                     	if	1	;There is more than 1 active tblptr byte
  2699   004756  0E0E               	movlw	high __smallconst
  2700   004758  6EF7               	movwf	tblptrh,c
  2701   00475A                     	endif
  2702   00475A                     	if	0	;tblptru may be non-zero
  2703   00475A                     	endif
  2704   00475A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2705   00475A  0E00               	movlw	low (__smallconst shr (0+16))
  2706   00475C  6EF8               	movwf	tblptru,c
  2707   00475E                     	endif
  2708   00475E  0008               	tblrd		*
  2709   004760  50F5               	movf	tablat,w,c
  2710   004762  0900               	iorlw	0
  2711   004764  A4D8               	btfss	status,2,c
  2712   004766  EFB7  F023         	goto	u7401
  2713   00476A  EFB9  F023         	goto	u7400
  2714   00476E                     u7401:
  2715   00476E  EFA0  F023         	goto	l6011
  2716   004772                     u7400:
  2717   004772                     
  2718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2719   004772  0E00               	movlw	0
  2720   004774  0100               	movlb	0	; () banked
  2721   004776  6FA8               	movwf	(?_vfprintf+1)& (0+255),b
  2722   004778  0E00               	movlw	0
  2723   00477A  6FA7               	movwf	?_vfprintf& (0+255),b
  2724   00477C                     
  2725                           ; BSR set to: 0
  2726   00477C  0012               	return		;funcret
  2727   00477E                     __end_of_vfprintf:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function _vfpfcnvrt *****************
  2731 ;; Defined at:
  2732 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  2735 ;;		 -> sprintf@f(12), 
  2736 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  2737 ;;		 -> vfprintf@cfmt(1), 
  2738 ;;  ap              1   62[BANK0 ] PTR PTR void 
  2739 ;;		 -> sprintf@ap(1), 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  convarg         4   65[BANK0 ] struct .
  2742 ;;  cp              1   70[BANK0 ] PTR unsigned char 
  2743 ;;		 -> STR_1(28), 
  2744 ;;  c               1   69[BANK0 ] unsigned char 
  2745 ;;  done            1    0        _Bool 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2755 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2757 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2758 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2759 ;;Total ram usage:       11 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 5
  2762 ;; This function calls:
  2763 ;;		_efgtoa
  2764 ;;		_fputc
  2765 ;;		_read_prec_or_width
  2766 ;;		_utoa
  2767 ;; This function is called by:
  2768 ;;		_vfprintf
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text8
  2773   00366A                     __ptext8:
  2774                           	callstack 0
  2775   00366A                     _vfpfcnvrt:
  2776                           	callstack 22
  2777   00366A                     
  2778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2779   00366A  0100               	movlb	0	; () banked
  2780   00366C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2781   00366E  6ED9               	movwf	fsr2l,c
  2782   003670  6ADA               	clrf	fsr2h,c
  2783   003672  CFDF FFF6          	movff	indf2,tblptrl
  2784   003676                     	if	1	;There is more than 1 active tblptr byte
  2785   003676  0E0E               	movlw	high __smallconst
  2786   003678  6EF7               	movwf	tblptrh,c
  2787   00367A                     	endif
  2788   00367A                     	if	0	;tblptru may be non-zero
  2789   00367A                     	endif
  2790   00367A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2791   00367A  0E00               	movlw	low (__smallconst shr (0+16))
  2792   00367C  6EF8               	movwf	tblptru,c
  2793   00367E                     	endif
  2794   00367E  0008               	tblrd		*
  2795   003680  50F5               	movf	tablat,w,c
  2796   003682  0A25               	xorlw	37
  2797   003684  A4D8               	btfss	status,2,c
  2798   003686  EF47  F01B         	goto	u7351
  2799   00368A  EF49  F01B         	goto	u7350
  2800   00368E                     u7351:
  2801   00368E  EF81  F01C         	goto	l5973
  2802   003692                     u7350:
  2803   003692                     
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2806   003692  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2807   003694  6ED9               	movwf	fsr2l,c
  2808   003696  6ADA               	clrf	fsr2h,c
  2809   003698  2ADF               	incf	indf2,f,c
  2810   00369A                     
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2813   00369A  0E00               	movlw	0
  2814   00369C  6FF3               	movwf	(_width+1)& (0+255),b
  2815   00369E  0E00               	movlw	0
  2816   0036A0  6FF2               	movwf	_width& (0+255),b
  2817   0036A2  C0F2  F0F6         	movff	_width,_flags
  2818   0036A6                     
  2819                           ; BSR set to: 0
  2820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2821   0036A6  69F4               	setf	_prec& (0+255),b
  2822   0036A8  69F5               	setf	(_prec+1)& (0+255),b
  2823   0036AA                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2826   0036AA  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2827   0036AC  6ED9               	movwf	fsr2l,c
  2828   0036AE  6ADA               	clrf	fsr2h,c
  2829   0036B0  CFDF FFF6          	movff	indf2,tblptrl
  2830   0036B4                     	if	1	;There is more than 1 active tblptr byte
  2831   0036B4  0E0E               	movlw	high __smallconst
  2832   0036B6  6EF7               	movwf	tblptrh,c
  2833   0036B8                     	endif
  2834   0036B8                     	if	0	;tblptru may be non-zero
  2835   0036B8                     	endif
  2836   0036B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2837   0036B8  0E00               	movlw	low (__smallconst shr (0+16))
  2838   0036BA  6EF8               	movwf	tblptru,c
  2839   0036BC                     	endif
  2840   0036BC  0008               	tblrd		*
  2841   0036BE  50F5               	movf	tablat,w,c
  2842   0036C0  0A2E               	xorlw	46
  2843   0036C2  A4D8               	btfss	status,2,c
  2844   0036C4  EF66  F01B         	goto	u7361
  2845   0036C8  EF68  F01B         	goto	u7360
  2846   0036CC                     u7361:
  2847   0036CC  EF76  F01B         	goto	l5919
  2848   0036D0                     u7360:
  2849   0036D0                     
  2850                           ; BSR set to: 0
  2851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2852   0036D0  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2853   0036D2  6ED9               	movwf	fsr2l,c
  2854   0036D4  6ADA               	clrf	fsr2h,c
  2855   0036D6  2ADF               	incf	indf2,f,c
  2856   0036D8                     
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2859   0036D8  C09D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2860   0036DC  C09E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2861   0036E0  EC5E  F021         	call	_read_prec_or_width	;wreg free
  2862   0036E4  C007  F0F4         	movff	?_read_prec_or_width,_prec
  2863   0036E8  C008  F0F5         	movff	?_read_prec_or_width+1,_prec+1
  2864   0036EC                     l5919:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2867   0036EC  0100               	movlb	0	; () banked
  2868   0036EE  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2869   0036F0  6ED9               	movwf	fsr2l,c
  2870   0036F2  6ADA               	clrf	fsr2h,c
  2871   0036F4  50DF               	movf	indf2,w,c
  2872   0036F6  6FA6               	movwf	vfpfcnvrt@cp& (0+255),b
  2873   0036F8                     
  2874                           ; BSR set to: 0
  2875   0036F8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2876   0036FC                     	if	1	;There is more than 1 active tblptr byte
  2877   0036FC  0E0E               	movlw	high __smallconst
  2878   0036FE  6EF7               	movwf	tblptrh,c
  2879   003700                     	endif
  2880   003700                     	if	0	;tblptru may be non-zero
  2881   003700                     	endif
  2882   003700                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2883   003700  0E00               	movlw	low (__smallconst shr (0+16))
  2884   003702  6EF8               	movwf	tblptru,c
  2885   003704                     	endif
  2886   003704  0008               	tblrd		*
  2887   003706  50F5               	movf	tablat,w,c
  2888   003708  0A75               	xorlw	117
  2889   00370A  A4D8               	btfss	status,2,c
  2890   00370C  EF8A  F01B         	goto	u7371
  2891   003710  EF8C  F01B         	goto	u7370
  2892   003714                     u7371:
  2893   003714  EFC1  F01B         	goto	l5935
  2894   003718                     u7370:
  2895   003718                     
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2898   003718  519E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2899   00371A  6ED9               	movwf	fsr2l,c
  2900   00371C  6ADA               	clrf	fsr2h,c
  2901   00371E  0E02               	movlw	2
  2902   003720  26DF               	addwf	indf2,f,c
  2903   003722  5CDF               	subwf	indf2,w,c
  2904   003724  6ED9               	movwf	fsr2l,c
  2905   003726  6ADA               	clrf	fsr2h,c
  2906   003728  CFDE F0A1          	movff	postinc2,vfpfcnvrt@convarg
  2907   00372C  CFDE F0A2          	movff	postinc2,vfpfcnvrt@convarg+1
  2908   003730                     
  2909                           ; BSR set to: 0
  2910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2911   003730  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2912   003732  6ED9               	movwf	fsr2l,c
  2913   003734  6ADA               	clrf	fsr2h,c
  2914   003736  29A6               	incf	vfpfcnvrt@cp& (0+255),w,b
  2915   003738  6EDF               	movwf	indf2,c
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2918   00373A  EFA9  F01B         	goto	l5933
  2919   00373E                     l5927:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2923   00373E  C09C  F017         	movff	vfpfcnvrt@fp,utoa@fp
  2924   003742  C0A1  F018         	movff	vfpfcnvrt@convarg,utoa@d
  2925   003746  C0A2  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2926   00374A  EC8A  F020         	call	_utoa	;wreg free
  2927   00374E  EF94  F01C         	goto	l1244
  2928   003752                     l5933:
  2929                           
  2930                           ; BSR set to: 0
  2931   003752  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2932   003756                     	if	1	;There is more than 1 active tblptr byte
  2933   003756  0E0E               	movlw	high __smallconst
  2934   003758  6EF7               	movwf	tblptrh,c
  2935   00375A                     	endif
  2936   00375A                     	if	0	;tblptru may be non-zero
  2937   00375A                     	endif
  2938   00375A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2939   00375A  0E00               	movlw	low (__smallconst shr (0+16))
  2940   00375C  6EF8               	movwf	tblptru,c
  2941   00375E                     	endif
  2942   00375E  0008               	tblrd		*
  2943   003760  50F5               	movf	tablat,w,c
  2944   003762  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  2945   003764  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2946                           
  2947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2948                           ; Switch size 1, requested type "simple"
  2949                           ; Number of cases is 1, Range of values is 0 to 0
  2950                           ; switch strategies available:
  2951                           ; Name         Instructions Cycles
  2952                           ; simple_byte            4     3 (average)
  2953                           ;	Chosen strategy is simple_byte
  2954   003766  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2955   003768  0A00               	xorlw	0	; case 0
  2956   00376A  B4D8               	btfsc	status,2,c
  2957   00376C  EFBA  F01B         	goto	l6481
  2958   003770  EFC1  F01B         	goto	l5935
  2959   003774                     l6481:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ; Switch size 1, requested type "simple"
  2963                           ; Number of cases is 1, Range of values is 117 to 117
  2964                           ; switch strategies available:
  2965                           ; Name         Instructions Cycles
  2966                           ; simple_byte            4     3 (average)
  2967                           ;	Chosen strategy is simple_byte
  2968   003774  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2969   003776  0A75               	xorlw	117	; case 117
  2970   003778  B4D8               	btfsc	status,2,c
  2971   00377A  EF9F  F01B         	goto	l5927
  2972   00377E  EFC1  F01B         	goto	l5935
  2973   003782                     l5935:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2977   003782  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2978   003784  6ED9               	movwf	fsr2l,c
  2979   003786  6ADA               	clrf	fsr2h,c
  2980   003788  50DF               	movf	indf2,w,c
  2981   00378A  6FA6               	movwf	vfpfcnvrt@cp& (0+255),b
  2982   00378C                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2985   00378C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2986   003790                     	if	1	;There is more than 1 active tblptr byte
  2987   003790  0E0E               	movlw	high __smallconst
  2988   003792  6EF7               	movwf	tblptrh,c
  2989   003794                     	endif
  2990   003794                     	if	0	;tblptru may be non-zero
  2991   003794                     	endif
  2992   003794                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2993   003794  0E00               	movlw	low (__smallconst shr (0+16))
  2994   003796  6EF8               	movwf	tblptru,c
  2995   003798                     	endif
  2996   003798  0008               	tblrd		*
  2997   00379A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3000   00379E  EFDC  F01B         	goto	l5947
  3001   0037A2                     l5939:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3005   0037A2  2BA6               	incf	vfpfcnvrt@cp& (0+255),f,b
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  3008   0037A4  EFF5  F01B         	goto	l5949
  3009   0037A8                     l5941:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3013   0037A8  0E6C               	movlw	108
  3014   0037AA  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  3017   0037AC  EFF5  F01B         	goto	l5949
  3018   0037B0                     l5943:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3022   0037B0  0E00               	movlw	0
  3023   0037B2  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  3026   0037B4  EFF5  F01B         	goto	l5949
  3027   0037B8                     l5947:
  3028                           
  3029                           ; BSR set to: 0
  3030   0037B8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3031   0037BA  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  3032   0037BC  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3033                           
  3034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3035                           ; Switch size 1, requested type "simple"
  3036                           ; Number of cases is 1, Range of values is 0 to 0
  3037                           ; switch strategies available:
  3038                           ; Name         Instructions Cycles
  3039                           ; simple_byte            4     3 (average)
  3040                           ;	Chosen strategy is simple_byte
  3041   0037BE  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3042   0037C0  0A00               	xorlw	0	; case 0
  3043   0037C2  B4D8               	btfsc	status,2,c
  3044   0037C4  EFE6  F01B         	goto	l6483
  3045   0037C8  EFD8  F01B         	goto	l5943
  3046   0037CC                     l6483:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ; Switch size 1, requested type "simple"
  3050                           ; Number of cases is 3, Range of values is 76 to 108
  3051                           ; switch strategies available:
  3052                           ; Name         Instructions Cycles
  3053                           ; simple_byte           10     6 (average)
  3054                           ;	Chosen strategy is simple_byte
  3055   0037CC  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  3056   0037CE  0A4C               	xorlw	76	; case 76
  3057   0037D0  B4D8               	btfsc	status,2,c
  3058   0037D2  EFD1  F01B         	goto	l5939
  3059   0037D6  0A2A               	xorlw	42	; case 102
  3060   0037D8  B4D8               	btfsc	status,2,c
  3061   0037DA  EFD4  F01B         	goto	l5941
  3062   0037DE  0A0A               	xorlw	10	; case 108
  3063   0037E0  B4D8               	btfsc	status,2,c
  3064   0037E2  EFD1  F01B         	goto	l5939
  3065   0037E6  EFD8  F01B         	goto	l5943
  3066   0037EA                     l5949:
  3067                           
  3068                           ; BSR set to: 0
  3069   0037EA  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3070   0037EE                     	if	1	;There is more than 1 active tblptr byte
  3071   0037EE  0E0E               	movlw	high __smallconst
  3072   0037F0  6EF7               	movwf	tblptrh,c
  3073   0037F2                     	endif
  3074   0037F2                     	if	0	;tblptru may be non-zero
  3075   0037F2                     	endif
  3076   0037F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3077   0037F2  0E00               	movlw	low (__smallconst shr (0+16))
  3078   0037F4  6EF8               	movwf	tblptru,c
  3079   0037F6                     	endif
  3080   0037F6  0008               	tblrd		*
  3081   0037F8  50F5               	movf	tablat,w,c
  3082   0037FA  0A66               	xorlw	102
  3083   0037FC  A4D8               	btfss	status,2,c
  3084   0037FE  EF03  F01C         	goto	u7381
  3085   003802  EF05  F01C         	goto	u7380
  3086   003806                     u7381:
  3087   003806  EF7A  F01C         	goto	l5969
  3088   00380A                     u7380:
  3089   00380A  EF2F  F01C         	goto	l5957
  3090   00380E                     l5951:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3094   00380E  519E               	movf	vfpfcnvrt@ap& (0+255),w,b
  3095   003810  6ED9               	movwf	fsr2l,c
  3096   003812  6ADA               	clrf	fsr2h,c
  3097   003814  CFDF F09F          	movff	indf2,??_vfpfcnvrt
  3098   003818  0E04               	movlw	4
  3099   00381A  26DF               	addwf	indf2,f,c
  3100   00381C  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  3101   00381E  6ED9               	movwf	fsr2l,c
  3102   003820  6ADA               	clrf	fsr2h,c
  3103   003822  CFDE F0A1          	movff	postinc2,vfpfcnvrt@convarg
  3104   003826  CFDE F0A2          	movff	postinc2,vfpfcnvrt@convarg+1
  3105   00382A  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg+2
  3106   00382E  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+3
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  3109   003832  EF44  F01C         	goto	l5959
  3110   003836                     l5953:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3114   003836  519E               	movf	vfpfcnvrt@ap& (0+255),w,b
  3115   003838  6ED9               	movwf	fsr2l,c
  3116   00383A  6ADA               	clrf	fsr2h,c
  3117   00383C  CFDF F09F          	movff	indf2,??_vfpfcnvrt
  3118   003840  0E04               	movlw	4
  3119   003842  26DF               	addwf	indf2,f,c
  3120   003844  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  3121   003846  6ED9               	movwf	fsr2l,c
  3122   003848  6ADA               	clrf	fsr2h,c
  3123   00384A  CFDE F0A1          	movff	postinc2,vfpfcnvrt@convarg
  3124   00384E  CFDE F0A2          	movff	postinc2,vfpfcnvrt@convarg+1
  3125   003852  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg+2
  3126   003856  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+3
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  3129   00385A  EF44  F01C         	goto	l5959
  3130   00385E                     l5957:
  3131                           
  3132                           ; BSR set to: 0
  3133   00385E  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3134   003860  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  3135   003862  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3136                           
  3137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3138                           ; Switch size 1, requested type "simple"
  3139                           ; Number of cases is 1, Range of values is 0 to 0
  3140                           ; switch strategies available:
  3141                           ; Name         Instructions Cycles
  3142                           ; simple_byte            4     3 (average)
  3143                           ;	Chosen strategy is simple_byte
  3144   003864  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3145   003866  0A00               	xorlw	0	; case 0
  3146   003868  B4D8               	btfsc	status,2,c
  3147   00386A  EF39  F01C         	goto	l6485
  3148   00386E  EF44  F01C         	goto	l5959
  3149   003872                     l6485:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ; Switch size 1, requested type "simple"
  3153                           ; Number of cases is 2, Range of values is 76 to 108
  3154                           ; switch strategies available:
  3155                           ; Name         Instructions Cycles
  3156                           ; simple_byte            7     4 (average)
  3157                           ;	Chosen strategy is simple_byte
  3158   003872  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  3159   003874  0A4C               	xorlw	76	; case 76
  3160   003876  B4D8               	btfsc	status,2,c
  3161   003878  EF1B  F01C         	goto	l5953
  3162   00387C  0A20               	xorlw	32	; case 108
  3163   00387E  B4D8               	btfsc	status,2,c
  3164   003880  EF07  F01C         	goto	l5951
  3165   003884  EF44  F01C         	goto	l5959
  3166   003888                     l5959:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3170   003888  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3171   00388A  6ED9               	movwf	fsr2l,c
  3172   00388C  6ADA               	clrf	fsr2h,c
  3173   00388E  29A6               	incf	vfpfcnvrt@cp& (0+255),w,b
  3174   003890  6EDF               	movwf	indf2,c
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3177   003892  EF62  F01C         	goto	l5967
  3178   003896                     l5961:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3182   003896  C09C  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  3183   00389A  C0A1  F06B         	movff	vfpfcnvrt@convarg,efgtoa@f
  3184   00389E  C0A2  F06C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3185   0038A2  C0A3  F06D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3186   0038A6  C0A4  F06E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3187   0038AA  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3188   0038AE                     	if	1	;There is more than 1 active tblptr byte
  3189   0038AE  0E0E               	movlw	high __smallconst
  3190   0038B0  6EF7               	movwf	tblptrh,c
  3191   0038B2                     	endif
  3192   0038B2                     	if	0	;tblptru may be non-zero
  3193   0038B2                     	endif
  3194   0038B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3195   0038B2  0E00               	movlw	low (__smallconst shr (0+16))
  3196   0038B4  6EF8               	movwf	tblptru,c
  3197   0038B6                     	endif
  3198   0038B6  0008               	tblrd		*
  3199   0038B8  CFF5 F06F          	movff	tablat,efgtoa@c
  3200   0038BC  EC6C  F00C         	call	_efgtoa	;wreg free
  3201   0038C0  EF94  F01C         	goto	l1244
  3202   0038C4                     l5967:
  3203                           
  3204                           ; BSR set to: 0
  3205   0038C4  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3206   0038C8                     	if	1	;There is more than 1 active tblptr byte
  3207   0038C8  0E0E               	movlw	high __smallconst
  3208   0038CA  6EF7               	movwf	tblptrh,c
  3209   0038CC                     	endif
  3210   0038CC                     	if	0	;tblptru may be non-zero
  3211   0038CC                     	endif
  3212   0038CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3213   0038CC  0E00               	movlw	low (__smallconst shr (0+16))
  3214   0038CE  6EF8               	movwf	tblptru,c
  3215   0038D0                     	endif
  3216   0038D0  0008               	tblrd		*
  3217   0038D2  50F5               	movf	tablat,w,c
  3218   0038D4  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  3219   0038D6  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3220                           
  3221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3222                           ; Switch size 1, requested type "simple"
  3223                           ; Number of cases is 1, Range of values is 0 to 0
  3224                           ; switch strategies available:
  3225                           ; Name         Instructions Cycles
  3226                           ; simple_byte            4     3 (average)
  3227                           ;	Chosen strategy is simple_byte
  3228   0038D8  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3229   0038DA  0A00               	xorlw	0	; case 0
  3230   0038DC  B4D8               	btfsc	status,2,c
  3231   0038DE  EF73  F01C         	goto	l6487
  3232   0038E2  EF7A  F01C         	goto	l5969
  3233   0038E6                     l6487:
  3234                           
  3235                           ; BSR set to: 0
  3236                           ; Switch size 1, requested type "simple"
  3237                           ; Number of cases is 1, Range of values is 102 to 102
  3238                           ; switch strategies available:
  3239                           ; Name         Instructions Cycles
  3240                           ; simple_byte            4     3 (average)
  3241                           ;	Chosen strategy is simple_byte
  3242   0038E6  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  3243   0038E8  0A66               	xorlw	102	; case 102
  3244   0038EA  B4D8               	btfsc	status,2,c
  3245   0038EC  EF4B  F01C         	goto	l5961
  3246   0038F0  EF7A  F01C         	goto	l5969
  3247   0038F4                     l5969:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3250   0038F4  0100               	movlb	0	; () banked
  3251   0038F6  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3252   0038F8  6ED9               	movwf	fsr2l,c
  3253   0038FA  6ADA               	clrf	fsr2h,c
  3254   0038FC  2ADF               	incf	indf2,f,c
  3255   0038FE  EF94  F01C         	goto	l1244
  3256   003902                     l5973:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3260   003902  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3261   003904  6ED9               	movwf	fsr2l,c
  3262   003906  6ADA               	clrf	fsr2h,c
  3263   003908  CFDF FFF6          	movff	indf2,tblptrl
  3264   00390C                     	if	1	;There is more than 1 active tblptr byte
  3265   00390C  0E0E               	movlw	high __smallconst
  3266   00390E  6EF7               	movwf	tblptrh,c
  3267   003910                     	endif
  3268   003910                     	if	0	;tblptru may be non-zero
  3269   003910                     	endif
  3270   003910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3271   003910  0E00               	movlw	low (__smallconst shr (0+16))
  3272   003912  6EF8               	movwf	tblptru,c
  3273   003914                     	endif
  3274   003914  0008               	tblrd		*
  3275   003916  50F5               	movf	tablat,w,c
  3276   003918  6E01               	movwf	fputc@c^0,c
  3277   00391A  6A02               	clrf	(fputc@c+1)^0,c
  3278   00391C  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3279   003920  EC01  F021         	call	_fputc	;wreg free
  3280   003924  EF7A  F01C         	goto	l5969
  3281   003928                     l1244:
  3282   003928  0012               	return		;funcret
  3283   00392A                     __end_of_vfpfcnvrt:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _utoa *****************
  3287 ;; Defined at:
  3288 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3291 ;;		 -> sprintf@f(12), 
  3292 ;;  d               2   23[COMRAM] unsigned int 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  i               2   29[COMRAM] int 
  3295 ;;  p               2   27[COMRAM] int 
  3296 ;;  w               2   25[COMRAM] int 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3306 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;Total ram usage:        9 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 4
  3313 ;; This function calls:
  3314 ;;		___lwdiv
  3315 ;;		___lwmod
  3316 ;;		_pad
  3317 ;; This function is called by:
  3318 ;;		_vfpfcnvrt
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text9
  3323   004114                     __ptext9:
  3324                           	callstack 0
  3325   004114                     _utoa:
  3326                           	callstack 22
  3327   004114                     
  3328                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
  3329   004114  0100               	movlb	0	; () banked
  3330   004116  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  3331   004118  EF92  F020         	goto	u7290
  3332   00411C  EF90  F020         	goto	u7291
  3333   004120                     u7291:
  3334   004120  EF98  F020         	goto	l1218
  3335   004124                     u7290:
  3336   004124                     
  3337                           ; BSR set to: 0
  3338   004124  0E00               	movlw	0
  3339   004126  6E1D               	movwf	(utoa@p+1)^0,c
  3340   004128  0E01               	movlw	1
  3341   00412A  6E1C               	movwf	utoa@p^0,c
  3342   00412C  EF9C  F020         	goto	l1220
  3343   004130                     l1218:
  3344                           
  3345                           ; BSR set to: 0
  3346   004130  C0F4  F01C         	movff	_prec,utoa@p
  3347   004134  C0F5  F01D         	movff	_prec+1,utoa@p+1
  3348   004138                     l1220:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  3352   004138  C0F2  F01A         	movff	_width,utoa@w
  3353   00413C  C0F3  F01B         	movff	_width+1,utoa@w+1
  3354   004140                     
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  3357   004140  0E00               	movlw	0
  3358   004142  6E1F               	movwf	(utoa@i+1)^0,c
  3359   004144  0E4F               	movlw	79
  3360   004146  6E1E               	movwf	utoa@i^0,c
  3361   004148                     
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  3364   004148  0E00               	movlw	0
  3365   00414A  0101               	movlb	1	; () banked
  3366   00414C  6F9F               	movwf	(_dbuf+79)& (0+255),b
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3369   00414E  EFD3  F020         	goto	l5881
  3370   004152                     l5871:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1034:         --i;
  3373   004152  061E               	decf	utoa@i^0,f,c
  3374   004154  A0D8               	btfss	status,0,c
  3375   004156  061F               	decf	(utoa@i+1)^0,f,c
  3376   004158                     
  3377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  3378   004158  0E50               	movlw	low _dbuf
  3379   00415A  241E               	addwf	utoa@i^0,w,c
  3380   00415C  6ED9               	movwf	fsr2l,c
  3381   00415E  0E01               	movlw	high _dbuf
  3382   004160  201F               	addwfc	(utoa@i+1)^0,w,c
  3383   004162  6EDA               	movwf	fsr2h,c
  3384   004164  C018  F001         	movff	utoa@d,___lwmod@dividend
  3385   004168  C019  F002         	movff	utoa@d+1,___lwmod@dividend+1
  3386   00416C  0E00               	movlw	0
  3387   00416E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3388   004170  0E0A               	movlw	10
  3389   004172  6E03               	movwf	___lwmod@divisor^0,c
  3390   004174  EC77  F022         	call	___lwmod	;wreg free
  3391   004178  5001               	movf	?___lwmod^0,w,c
  3392   00417A  0F30               	addlw	48
  3393   00417C  6EDF               	movwf	indf2,c
  3394   00417E                     
  3395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  3396   00417E  061C               	decf	utoa@p^0,f,c
  3397   004180  A0D8               	btfss	status,0,c
  3398   004182  061D               	decf	(utoa@p+1)^0,f,c
  3399   004184                     
  3400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  3401   004184  061A               	decf	utoa@w^0,f,c
  3402   004186  A0D8               	btfss	status,0,c
  3403   004188  061B               	decf	(utoa@w+1)^0,f,c
  3404   00418A                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  3406   00418A  C018  F001         	movff	utoa@d,___lwdiv@dividend
  3407   00418E  C019  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  3408   004192  0E00               	movlw	0
  3409   004194  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3410   004196  0E0A               	movlw	10
  3411   004198  6E03               	movwf	___lwdiv@divisor^0,c
  3412   00419A  EC0A  F022         	call	___lwdiv	;wreg free
  3413   00419E  C001  F018         	movff	?___lwdiv,utoa@d
  3414   0041A2  C002  F019         	movff	?___lwdiv+1,utoa@d+1
  3415   0041A6                     l5881:
  3416                           
  3417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3418   0041A6  501E               	movf	utoa@i^0,w,c
  3419   0041A8  101F               	iorwf	(utoa@i+1)^0,w,c
  3420   0041AA  B4D8               	btfsc	status,2,c
  3421   0041AC  EFDA  F020         	goto	u7301
  3422   0041B0  EFDC  F020         	goto	u7300
  3423   0041B4                     u7301:
  3424   0041B4  EFF2  F020         	goto	l5887
  3425   0041B8                     u7300:
  3426   0041B8  5018               	movf	utoa@d^0,w,c
  3427   0041BA  1019               	iorwf	(utoa@d+1)^0,w,c
  3428   0041BC  A4D8               	btfss	status,2,c
  3429   0041BE  EFE3  F020         	goto	u7311
  3430   0041C2  EFE5  F020         	goto	u7310
  3431   0041C6                     u7311:
  3432   0041C6  EFA9  F020         	goto	l5871
  3433   0041CA                     u7310:
  3434   0041CA  BE1D               	btfsc	(utoa@p+1)^0,7,c
  3435   0041CC  EFF2  F020         	goto	u7320
  3436   0041D0  501D               	movf	(utoa@p+1)^0,w,c
  3437   0041D2  E106               	bnz	u7321
  3438   0041D4  041C               	decf	utoa@p^0,w,c
  3439   0041D6  B0D8               	btfsc	status,0,c
  3440   0041D8  EFF0  F020         	goto	u7321
  3441   0041DC  EFF2  F020         	goto	u7320
  3442   0041E0                     u7321:
  3443   0041E0  EFA9  F020         	goto	l5871
  3444   0041E4                     u7320:
  3445   0041E4                     l5887:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3448   0041E4  C017  F00F         	movff	utoa@fp,pad@fp
  3449   0041E8  0E50               	movlw	low _dbuf
  3450   0041EA  241E               	addwf	utoa@i^0,w,c
  3451   0041EC  6E10               	movwf	pad@buf^0,c
  3452   0041EE  0E01               	movlw	high _dbuf
  3453   0041F0  201F               	addwfc	(utoa@i+1)^0,w,c
  3454   0041F2  6E11               	movwf	(pad@buf+1)^0,c
  3455   0041F4  C01A  F012         	movff	utoa@w,pad@p
  3456   0041F8  C01B  F013         	movff	utoa@w+1,pad@p+1
  3457   0041FC  EC44  F022         	call	_pad	;wreg free
  3458   004200  0012               	return		;funcret
  3459   004202                     __end_of_utoa:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function ___lwmod *****************
  3463 ;; Defined at:
  3464 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  dividend        2    0[COMRAM] unsigned int 
  3467 ;;  divisor         2    2[COMRAM] unsigned int 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  counter         1    4[COMRAM] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  2    0[COMRAM] unsigned int 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;Total ram usage:        5 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_utoa
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text10
  3493   0044EE                     __ptext10:
  3494                           	callstack 0
  3495   0044EE                     ___lwmod:
  3496                           	callstack 25
  3497   0044EE  5003               	movf	___lwmod@divisor^0,w,c
  3498   0044F0  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3499   0044F2  B4D8               	btfsc	status,2,c
  3500   0044F4  EF7E  F022         	goto	u6721
  3501   0044F8  EF80  F022         	goto	u6720
  3502   0044FC                     u6721:
  3503   0044FC  EFA4  F022         	goto	l954
  3504   004500                     u6720:
  3505   004500  0E01               	movlw	1
  3506   004502  6E05               	movwf	___lwmod@counter^0,c
  3507   004504  EF88  F022         	goto	l5545
  3508   004508                     l5543:
  3509   004508  90D8               	bcf	status,0,c
  3510   00450A  3603               	rlcf	___lwmod@divisor^0,f,c
  3511   00450C  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3512   00450E  2A05               	incf	___lwmod@counter^0,f,c
  3513   004510                     l5545:
  3514   004510  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3515   004512  EF8D  F022         	goto	u6731
  3516   004516  EF8F  F022         	goto	u6730
  3517   00451A                     u6731:
  3518   00451A  EF84  F022         	goto	l5543
  3519   00451E                     u6730:
  3520   00451E                     l5547:
  3521   00451E  5003               	movf	___lwmod@divisor^0,w,c
  3522   004520  5C01               	subwf	___lwmod@dividend^0,w,c
  3523   004522  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3524   004524  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3525   004526  A0D8               	btfss	status,0,c
  3526   004528  EF98  F022         	goto	u6741
  3527   00452C  EF9A  F022         	goto	u6740
  3528   004530                     u6741:
  3529   004530  EF9E  F022         	goto	l5551
  3530   004534                     u6740:
  3531   004534  5003               	movf	___lwmod@divisor^0,w,c
  3532   004536  5E01               	subwf	___lwmod@dividend^0,f,c
  3533   004538  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3534   00453A  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3535   00453C                     l5551:
  3536   00453C  90D8               	bcf	status,0,c
  3537   00453E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3538   004540  3203               	rrcf	___lwmod@divisor^0,f,c
  3539   004542  2E05               	decfsz	___lwmod@counter^0,f,c
  3540   004544  EF8F  F022         	goto	l5547
  3541   004548                     l954:
  3542   004548  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3543   00454C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3544   004550  0012               	return		;funcret
  3545   004552                     __end_of___lwmod:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function ___lwdiv *****************
  3549 ;; Defined at:
  3550 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  dividend        2    0[COMRAM] unsigned int 
  3553 ;;  divisor         2    2[COMRAM] unsigned int 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  quotient        2    5[COMRAM] unsigned int 
  3556 ;;  counter         1    4[COMRAM] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  2    0[COMRAM] unsigned int 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3566 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3567 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3569 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;Total ram usage:        7 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_utoa
  3576 ;;		_setMotorPWM
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text11
  3581   004414                     __ptext11:
  3582                           	callstack 0
  3583   004414                     ___lwdiv:
  3584                           	callstack 25
  3585   004414  0E00               	movlw	0
  3586   004416  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  3587   004418  0E00               	movlw	0
  3588   00441A  6E06               	movwf	___lwdiv@quotient^0,c
  3589   00441C  5003               	movf	___lwdiv@divisor^0,w,c
  3590   00441E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3591   004420  B4D8               	btfsc	status,2,c
  3592   004422  EF15  F022         	goto	u6691
  3593   004426  EF17  F022         	goto	u6690
  3594   00442A                     u6691:
  3595   00442A  EF3F  F022         	goto	l944
  3596   00442E                     u6690:
  3597   00442E  0E01               	movlw	1
  3598   004430  6E05               	movwf	___lwdiv@counter^0,c
  3599   004432  EF1F  F022         	goto	l5525
  3600   004436                     l5523:
  3601   004436  90D8               	bcf	status,0,c
  3602   004438  3603               	rlcf	___lwdiv@divisor^0,f,c
  3603   00443A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3604   00443C  2A05               	incf	___lwdiv@counter^0,f,c
  3605   00443E                     l5525:
  3606   00443E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3607   004440  EF24  F022         	goto	u6701
  3608   004444  EF26  F022         	goto	u6700
  3609   004448                     u6701:
  3610   004448  EF1B  F022         	goto	l5523
  3611   00444C                     u6700:
  3612   00444C                     l5527:
  3613   00444C  90D8               	bcf	status,0,c
  3614   00444E  3606               	rlcf	___lwdiv@quotient^0,f,c
  3615   004450  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3616   004452  5003               	movf	___lwdiv@divisor^0,w,c
  3617   004454  5C01               	subwf	___lwdiv@dividend^0,w,c
  3618   004456  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3619   004458  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3620   00445A  A0D8               	btfss	status,0,c
  3621   00445C  EF32  F022         	goto	u6711
  3622   004460  EF34  F022         	goto	u6710
  3623   004464                     u6711:
  3624   004464  EF39  F022         	goto	l5535
  3625   004468                     u6710:
  3626   004468  5003               	movf	___lwdiv@divisor^0,w,c
  3627   00446A  5E01               	subwf	___lwdiv@dividend^0,f,c
  3628   00446C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3629   00446E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3630   004470  8006               	bsf	___lwdiv@quotient^0,0,c
  3631   004472                     l5535:
  3632   004472  90D8               	bcf	status,0,c
  3633   004474  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3634   004476  3203               	rrcf	___lwdiv@divisor^0,f,c
  3635   004478  2E05               	decfsz	___lwdiv@counter^0,f,c
  3636   00447A  EF26  F022         	goto	l5527
  3637   00447E                     l944:
  3638   00447E  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  3639   004482  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3640   004486  0012               	return		;funcret
  3641   004488                     __end_of___lwdiv:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _read_prec_or_width *****************
  3645 ;; Defined at:
  3646 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3649 ;;		 -> vfprintf@cfmt(1), 
  3650 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3651 ;;		 -> sprintf@ap(1), 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  c               1    8[COMRAM] unsigned char 
  3654 ;;  n               2    9[COMRAM] int 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  2    6[COMRAM] int 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3665 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;Total ram usage:        5 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; Hardware stack levels required when called: 1
  3671 ;; This function calls:
  3672 ;;		___wmul
  3673 ;; This function is called by:
  3674 ;;		_vfpfcnvrt
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text12
  3679   0042BC                     __ptext12:
  3680                           	callstack 0
  3681   0042BC                     _read_prec_or_width:
  3682                           	callstack 25
  3683   0042BC                     
  3684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3685   0042BC  0E00               	movlw	0
  3686   0042BE  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3687   0042C0  0E00               	movlw	0
  3688   0042C2  6E0A               	movwf	read_prec_or_width@n^0,c
  3689   0042C4                     
  3690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3691   0042C4  5007               	movf	read_prec_or_width@fmt^0,w,c
  3692   0042C6  6ED9               	movwf	fsr2l,c
  3693   0042C8  6ADA               	clrf	fsr2h,c
  3694   0042CA  CFDF FFF6          	movff	indf2,tblptrl
  3695   0042CE                     	if	1	;There is more than 1 active tblptr byte
  3696   0042CE  0E0E               	movlw	high __smallconst
  3697   0042D0  6EF7               	movwf	tblptrh,c
  3698   0042D2                     	endif
  3699   0042D2                     	if	0	;tblptru may be non-zero
  3700   0042D2                     	endif
  3701   0042D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3702   0042D2  0E00               	movlw	low (__smallconst shr (0+16))
  3703   0042D4  6EF8               	movwf	tblptru,c
  3704   0042D6                     	endif
  3705   0042D6  0008               	tblrd		*
  3706   0042D8  50F5               	movf	tablat,w,c
  3707   0042DA  0A2A               	xorlw	42
  3708   0042DC  A4D8               	btfss	status,2,c
  3709   0042DE  EF73  F021         	goto	u7331
  3710   0042E2  EF75  F021         	goto	u7330
  3711   0042E6                     u7331:
  3712   0042E6  EF9B  F021         	goto	l5903
  3713   0042EA                     u7330:
  3714   0042EA                     
  3715                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3716   0042EA  5007               	movf	read_prec_or_width@fmt^0,w,c
  3717   0042EC  6ED9               	movwf	fsr2l,c
  3718   0042EE  6ADA               	clrf	fsr2h,c
  3719   0042F0  2ADF               	incf	indf2,f,c
  3720   0042F2                     
  3721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3722   0042F2  5008               	movf	read_prec_or_width@ap^0,w,c
  3723   0042F4  6ED9               	movwf	fsr2l,c
  3724   0042F6  6ADA               	clrf	fsr2h,c
  3725   0042F8  0E02               	movlw	2
  3726   0042FA  26DF               	addwf	indf2,f,c
  3727   0042FC  5CDF               	subwf	indf2,w,c
  3728   0042FE  6ED9               	movwf	fsr2l,c
  3729   004300  6ADA               	clrf	fsr2h,c
  3730   004302  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3731   004306  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3732                           
  3733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3734   00430A  EFB0  F021         	goto	l1230
  3735   00430E                     l5899:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3738   00430E  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3739   004312  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3740   004316  0E00               	movlw	0
  3741   004318  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3742   00431A  0E0A               	movlw	10
  3743   00431C  6E03               	movwf	___wmul@multiplicand^0,c
  3744   00431E  EC0E  F025         	call	___wmul	;wreg free
  3745   004322  5009               	movf	read_prec_or_width@c^0,w,c
  3746   004324  2401               	addwf	?___wmul^0,w,c
  3747   004326  6E0A               	movwf	read_prec_or_width@n^0,c
  3748   004328  0E00               	movlw	0
  3749   00432A  2002               	addwfc	(?___wmul+1)^0,w,c
  3750   00432C  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3751   00432E                     
  3752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3753   00432E  5007               	movf	read_prec_or_width@fmt^0,w,c
  3754   004330  6ED9               	movwf	fsr2l,c
  3755   004332  6ADA               	clrf	fsr2h,c
  3756   004334  2ADF               	incf	indf2,f,c
  3757   004336                     l5903:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3760   004336  5007               	movf	read_prec_or_width@fmt^0,w,c
  3761   004338  6ED9               	movwf	fsr2l,c
  3762   00433A  6ADA               	clrf	fsr2h,c
  3763   00433C  CFDF FFF6          	movff	indf2,tblptrl
  3764   004340                     	if	1	;There is more than 1 active tblptr byte
  3765   004340  0E0E               	movlw	high __smallconst
  3766   004342  6EF7               	movwf	tblptrh,c
  3767   004344                     	endif
  3768   004344                     	if	0	;tblptru may be non-zero
  3769   004344                     	endif
  3770   004344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3771   004344  0E00               	movlw	low (__smallconst shr (0+16))
  3772   004346  6EF8               	movwf	tblptru,c
  3773   004348                     	endif
  3774   004348  0008               	tblrd		*
  3775   00434A  50F5               	movf	tablat,w,c
  3776   00434C  0FD0               	addlw	208
  3777   00434E  6E09               	movwf	read_prec_or_width@c^0,c
  3778   004350  0E09               	movlw	9
  3779   004352  6409               	cpfsgt	read_prec_or_width@c^0,c
  3780   004354  EFAE  F021         	goto	u7341
  3781   004358  EFB0  F021         	goto	u7340
  3782   00435C                     u7341:
  3783   00435C  EF87  F021         	goto	l5899
  3784   004360                     u7340:
  3785   004360                     l1230:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3788   004360  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3789   004364  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3790   004368  0012               	return		;funcret
  3791   00436A                     __end_of_read_prec_or_width:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function ___wmul *****************
  3795 ;; Defined at:
  3796 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  multiplier      2    0[COMRAM] unsigned int 
  3799 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  product         2    4[COMRAM] unsigned int 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2    0[COMRAM] unsigned int 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0, prodl, prodh
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;Total ram usage:        6 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_read_prec_or_width
  3821 ;;		_setMotorPWM
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text13
  3826   004A1C                     __ptext13:
  3827                           	callstack 0
  3828   004A1C                     ___wmul:
  3829                           	callstack 25
  3830   004A1C  5001               	movf	___wmul@multiplier^0,w,c
  3831   004A1E  0203               	mulwf	___wmul@multiplicand^0,c
  3832   004A20  CFF3 F005          	movff	prodl,___wmul@product
  3833   004A24  CFF4 F006          	movff	prodh,___wmul@product+1
  3834   004A28  5001               	movf	___wmul@multiplier^0,w,c
  3835   004A2A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3836   004A2C  50F3               	movf	243,w,c
  3837   004A2E  2606               	addwf	(___wmul@product+1)^0,f,c
  3838   004A30  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3839   004A32  0203               	mulwf	___wmul@multiplicand^0,c
  3840   004A34  50F3               	movf	243,w,c
  3841   004A36  2606               	addwf	(___wmul@product+1)^0,f,c
  3842   004A38  C005  F001         	movff	___wmul@product,?___wmul
  3843   004A3C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3844   004A40  0012               	return		;funcret
  3845   004A42                     __end_of___wmul:
  3846                           	callstack 0
  3847                           
  3848 ;; *************** function _efgtoa *****************
  3849 ;; Defined at:
  3850 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  3853 ;;		 -> sprintf@f(12), 
  3854 ;;  f               4   11[BANK0 ] PTR struct _IO_FILE
  3855 ;;  c               1   15[BANK0 ] unsigned char 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  u               4   56[BANK0 ] struct flui
  3858 ;;  g               4   50[BANK0 ] struct flui
  3859 ;;  l               4   45[BANK0 ] struct flui
  3860 ;;  h               4   41[BANK0 ] struct flui
  3861 ;;  ou              4   35[BANK0 ] struct flui
  3862 ;;  n               2   54[BANK0 ] int 
  3863 ;;  i               2   39[BANK0 ] int 
  3864 ;;  w               2   33[BANK0 ] int 
  3865 ;;  e               2   31[BANK0 ] int 
  3866 ;;  m               2   29[BANK0 ] int 
  3867 ;;  d               2   27[BANK0 ] int 
  3868 ;;  t               2   20[BANK0 ] int 
  3869 ;;  p               2   18[BANK0 ] int 
  3870 ;;  ne              2   16[BANK0 ] int 
  3871 ;;  sign            1   49[BANK0 ] unsigned char 
  3872 ;;  nmode           1   26[BANK0 ] unsigned char 
  3873 ;;  mode            1   25[BANK0 ] unsigned char 
  3874 ;;  pp              1   24[BANK0 ] unsigned char 
  3875 ;;  esign           1    0        unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3885 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;Total ram usage:       52 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 4
  3892 ;; This function calls:
  3893 ;;		___fladd
  3894 ;;		___fldiv
  3895 ;;		___fleq
  3896 ;;		___flge
  3897 ;;		___flmul
  3898 ;;		___flneg
  3899 ;;		___flsub
  3900 ;;		___fltol
  3901 ;;		___fpclassifyf
  3902 ;;		_floorf
  3903 ;;		_labs
  3904 ;;		_memcpy
  3905 ;;		_pad
  3906 ;;		_strcpy
  3907 ;; This function is called by:
  3908 ;;		_vfpfcnvrt
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text14
  3913   0018D8                     __ptext14:
  3914                           	callstack 0
  3915   0018D8                     _efgtoa:
  3916                           	callstack 22
  3917   0018D8                     
  3918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3919   0018D8  0E00               	movlw	0
  3920   0018DA  0100               	movlb	0	; () banked
  3921   0018DC  6F91               	movwf	efgtoa@sign& (0+255),b
  3922   0018DE                     
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3925   0018DE  C06B  F092         	movff	efgtoa@f,efgtoa@g
  3926   0018E2  C06C  F093         	movff	efgtoa@f+1,efgtoa@g+1
  3927   0018E6  C06D  F094         	movff	efgtoa@f+2,efgtoa@g+2
  3928   0018EA  C06E  F095         	movff	efgtoa@f+3,efgtoa@g+3
  3929   0018EE                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3932   0018EE  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3933   0018F0  EF7E  F00C         	goto	u6970
  3934   0018F4  EF7C  F00C         	goto	u6971
  3935   0018F8                     u6971:
  3936   0018F8  EF92  F00C         	goto	l5651
  3937   0018FC                     u6970:
  3938   0018FC                     
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3941   0018FC  0E01               	movlw	1
  3942   0018FE  6F91               	movwf	efgtoa@sign& (0+255),b
  3943   001900                     
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3946   001900  C092  F001         	movff	efgtoa@g,___flneg@f1
  3947   001904  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3948   001908  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3949   00190C  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3950   001910  EC82  F024         	call	___flneg	;wreg free
  3951   001914  C001  F092         	movff	?___flneg,efgtoa@g
  3952   001918  C002  F093         	movff	?___flneg+1,efgtoa@g+1
  3953   00191C  C003  F094         	movff	?___flneg+2,efgtoa@g+2
  3954   001920  C004  F095         	movff	?___flneg+3,efgtoa@g+3
  3955   001924                     l5651:
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3958   001924  0E00               	movlw	0
  3959   001926  0100               	movlb	0	; () banked
  3960   001928  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  3961   00192A  0E00               	movlw	0
  3962   00192C  6F96               	movwf	efgtoa@n& (0+255),b
  3963   00192E                     
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3966   00192E  C0F2  F081         	movff	_width,efgtoa@w
  3967   001932  C0F3  F082         	movff	_width+1,efgtoa@w+1
  3968   001936                     
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3971   001936  5191               	movf	efgtoa@sign& (0+255),w,b
  3972   001938  B4D8               	btfsc	status,2,c
  3973   00193A  EFA1  F00C         	goto	u6981
  3974   00193E  EFA3  F00C         	goto	u6980
  3975   001942                     u6981:
  3976   001942  EFB7  F00C         	goto	l5665
  3977   001946                     u6980:
  3978   001946                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3981   001946  5191               	movf	efgtoa@sign& (0+255),w,b
  3982   001948  A4D8               	btfss	status,2,c
  3983   00194A  EFA9  F00C         	goto	u6991
  3984   00194E  EFAB  F00C         	goto	u6990
  3985   001952                     u6991:
  3986   001952  EFB1  F00C         	goto	l5661
  3987   001956                     u6990:
  3988   001956                     
  3989                           ; BSR set to: 0
  3990   001956  0E00               	movlw	0
  3991   001958  6F77               	movwf	(_efgtoa$2309+1)& (0+255),b
  3992   00195A  0E2B               	movlw	43
  3993   00195C  6F76               	movwf	_efgtoa$2309& (0+255),b
  3994   00195E  EFB5  F00C         	goto	l5663
  3995   001962                     l5661:
  3996                           
  3997                           ; BSR set to: 0
  3998   001962  0E00               	movlw	0
  3999   001964  6F77               	movwf	(_efgtoa$2309+1)& (0+255),b
  4000   001966  0E2D               	movlw	45
  4001   001968  6F76               	movwf	_efgtoa$2309& (0+255),b
  4002   00196A                     l5663:
  4003                           
  4004                           ; BSR set to: 0
  4005   00196A  C076  F091         	movff	_efgtoa$2309,efgtoa@sign
  4006   00196E                     l5665:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4010   00196E  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  4011   001972  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4012   001976  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4013   00197A  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4014   00197E  EC0B  F020         	call	___fpclassifyf	;wreg free
  4015   001982  0401               	decf	?___fpclassifyf^0,w,c
  4016   001984  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4017   001986  A4D8               	btfss	status,2,c
  4018   001988  EFC8  F00C         	goto	u7001
  4019   00198C  EFCA  F00C         	goto	u7000
  4020   001990                     u7001:
  4021   001990  EFF9  F00C         	goto	l5683
  4022   001994                     u7000:
  4023   001994                     
  4024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4025   001994  0100               	movlb	0	; () banked
  4026   001996  5191               	movf	efgtoa@sign& (0+255),w,b
  4027   001998  B4D8               	btfsc	status,2,c
  4028   00199A  EFD1  F00C         	goto	u7011
  4029   00199E  EFD3  F00C         	goto	u7010
  4030   0019A2                     u7011:
  4031   0019A2  EFDC  F00C         	goto	l5675
  4032   0019A6                     u7010:
  4033   0019A6                     
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4036   0019A6  C091  F150         	movff	efgtoa@sign,_dbuf
  4037   0019AA                     
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  4040   0019AA  0781               	decf	efgtoa@w& (0+255),f,b
  4041   0019AC  A0D8               	btfss	status,0,c
  4042   0019AE  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  4043   0019B0                     
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4046   0019B0  0E00               	movlw	0
  4047   0019B2  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  4048   0019B4  0E01               	movlw	1
  4049   0019B6  6F96               	movwf	efgtoa@n& (0+255),b
  4050   0019B8                     l5675:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4054   0019B8  0E50               	movlw	low _dbuf
  4055   0019BA  2596               	addwf	efgtoa@n& (0+255),w,b
  4056   0019BC  6E01               	movwf	strcpy@dest^0,c
  4057   0019BE  0E01               	movlw	high _dbuf
  4058   0019C0  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4059   0019C2  6E02               	movwf	(strcpy@dest+1)^0,c
  4060   0019C4  0E1D               	movlw	low STR_2
  4061   0019C6  6E03               	movwf	strcpy@src^0,c
  4062   0019C8  EC63  F024         	call	_strcpy	;wreg free
  4063   0019CC                     l5677:
  4064                           
  4065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4066   0019CC  0100               	movlb	0	; () banked
  4067   0019CE  0EFD               	movlw	253
  4068   0019D0  2781               	addwf	efgtoa@w& (0+255),f,b
  4069   0019D2  0EFF               	movlw	255
  4070   0019D4  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4071   0019D6                     
  4072                           ; BSR set to: 0
  4073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4074   0019D6  C06A  F00F         	movff	efgtoa@fp,pad@fp
  4075   0019DA  0E50               	movlw	low _dbuf
  4076   0019DC  6E10               	movwf	pad@buf^0,c
  4077   0019DE  0E01               	movlw	high _dbuf
  4078   0019E0  6E11               	movwf	(pad@buf+1)^0,c
  4079   0019E2  C081  F012         	movff	efgtoa@w,pad@p
  4080   0019E6  C082  F013         	movff	efgtoa@w+1,pad@p+1
  4081   0019EA  EC44  F022         	call	_pad	;wreg free
  4082   0019EE  EF5F  F011         	goto	l1173
  4083   0019F2                     l5683:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4086   0019F2  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  4087   0019F6  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4088   0019FA  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4089   0019FE  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4090   001A02  EC0B  F020         	call	___fpclassifyf	;wreg free
  4091   001A06  5001               	movf	?___fpclassifyf^0,w,c
  4092   001A08  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4093   001A0A  A4D8               	btfss	status,2,c
  4094   001A0C  EF0A  F00D         	goto	u7021
  4095   001A10  EF0C  F00D         	goto	u7020
  4096   001A14                     u7021:
  4097   001A14  EF2A  F00D         	goto	l5701
  4098   001A18                     u7020:
  4099   001A18                     
  4100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  4101   001A18  0100               	movlb	0	; () banked
  4102   001A1A  5191               	movf	efgtoa@sign& (0+255),w,b
  4103   001A1C  B4D8               	btfsc	status,2,c
  4104   001A1E  EF13  F00D         	goto	u7031
  4105   001A22  EF15  F00D         	goto	u7030
  4106   001A26                     u7031:
  4107   001A26  EF1E  F00D         	goto	l5693
  4108   001A2A                     u7030:
  4109   001A2A                     
  4110                           ; BSR set to: 0
  4111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  4112   001A2A  C091  F150         	movff	efgtoa@sign,_dbuf
  4113   001A2E                     
  4114                           ; BSR set to: 0
  4115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  4116   001A2E  0781               	decf	efgtoa@w& (0+255),f,b
  4117   001A30  A0D8               	btfss	status,0,c
  4118   001A32  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  4119   001A34                     
  4120                           ; BSR set to: 0
  4121                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4122   001A34  0E00               	movlw	0
  4123   001A36  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  4124   001A38  0E01               	movlw	1
  4125   001A3A  6F96               	movwf	efgtoa@n& (0+255),b
  4126   001A3C                     l5693:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  4130   001A3C  0E50               	movlw	low _dbuf
  4131   001A3E  2596               	addwf	efgtoa@n& (0+255),w,b
  4132   001A40  6E01               	movwf	strcpy@dest^0,c
  4133   001A42  0E01               	movlw	high _dbuf
  4134   001A44  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4135   001A46  6E02               	movwf	(strcpy@dest+1)^0,c
  4136   001A48  0E21               	movlw	low STR_5
  4137   001A4A  6E03               	movwf	strcpy@src^0,c
  4138   001A4C  EC63  F024         	call	_strcpy	;wreg free
  4139   001A50  EFE6  F00C         	goto	l5677
  4140   001A54                     l5701:
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  4143   001A54  0E00               	movlw	0
  4144   001A56  0100               	movlb	0	; () banked
  4145   001A58  6F98               	movwf	efgtoa@u& (0+255),b
  4146   001A5A  0E00               	movlw	0
  4147   001A5C  6F99               	movwf	(efgtoa@u+1)& (0+255),b
  4148   001A5E  0E80               	movlw	128
  4149   001A60  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
  4150   001A62  0E3F               	movlw	63
  4151   001A64  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  4154   001A66  0E00               	movlw	0
  4155   001A68  6F80               	movwf	(efgtoa@e+1)& (0+255),b
  4156   001A6A  0E00               	movlw	0
  4157   001A6C  6F7F               	movwf	efgtoa@e& (0+255),b
  4158   001A6E                     
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  4161   001A6E  C092  F001         	movff	efgtoa@g,___fleq@ff1
  4162   001A72  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4163   001A76  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4164   001A7A  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4165   001A7E  0E00               	movlw	0
  4166   001A80  6E05               	movwf	___fleq@ff2^0,c
  4167   001A82  0E00               	movlw	0
  4168   001A84  6E06               	movwf	(___fleq@ff2+1)^0,c
  4169   001A86  0E00               	movlw	0
  4170   001A88  6E07               	movwf	(___fleq@ff2+2)^0,c
  4171   001A8A  0E00               	movlw	0
  4172   001A8C  6E08               	movwf	(___fleq@ff2+3)^0,c
  4173   001A8E  ECB5  F021         	call	___fleq	;wreg free
  4174   001A92  B0D8               	btfsc	status,0,c
  4175   001A94  EF4E  F00D         	goto	u7041
  4176   001A98  EF50  F00D         	goto	u7040
  4177   001A9C                     u7041:
  4178   001A9C  EF2F  F00E         	goto	l1176
  4179   001AA0                     u7040:
  4180   001AA0  EF5D  F00D         	goto	l5709
  4181   001AA4                     l1178:
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  4184   001AA4  C083  F098         	movff	efgtoa@ou,efgtoa@u
  4185   001AA8  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
  4186   001AAC  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
  4187   001AB0  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
  4188   001AB4                     
  4189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  4190   001AB4  0100               	movlb	0	; () banked
  4191   001AB6  4B7F               	infsnz	efgtoa@e& (0+255),f,b
  4192   001AB8  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
  4193   001ABA                     l5709:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4196   001ABA  C098  F01A         	movff	efgtoa@u,___flmul@b
  4197   001ABE  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  4198   001AC2  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  4199   001AC6  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  4200   001ACA  0E00               	movlw	0
  4201   001ACC  6E1E               	movwf	___flmul@a^0,c
  4202   001ACE  0E00               	movlw	0
  4203   001AD0  6E1F               	movwf	(___flmul@a+1)^0,c
  4204   001AD2  0E20               	movlw	32
  4205   001AD4  6E20               	movwf	(___flmul@a+2)^0,c
  4206   001AD6  0E41               	movlw	65
  4207   001AD8  6E21               	movwf	(___flmul@a+3)^0,c
  4208   001ADA  EC53  F017         	call	___flmul	;wreg free
  4209   001ADE  C01A  F083         	movff	?___flmul,efgtoa@ou
  4210   001AE2  C01B  F084         	movff	?___flmul+1,efgtoa@ou+1
  4211   001AE6  C01C  F085         	movff	?___flmul+2,efgtoa@ou+2
  4212   001AEA  C01D  F086         	movff	?___flmul+3,efgtoa@ou+3
  4213   001AEE  0100               	movlb	0	; () banked
  4214   001AF0  5183               	movf	efgtoa@ou& (0+255),w,b
  4215   001AF2  5D92               	subwf	efgtoa@g& (0+255),w,b
  4216   001AF4  6E01               	movwf	labs@a^0,c
  4217   001AF6  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
  4218   001AF8  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4219   001AFA  6E02               	movwf	(labs@a+1)^0,c
  4220   001AFC  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
  4221   001AFE  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4222   001B00  6E03               	movwf	(labs@a+2)^0,c
  4223   001B02  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
  4224   001B04  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4225   001B06  6E04               	movwf	(labs@a+3)^0,c
  4226   001B08  ECA9  F022         	call	_labs	;wreg free
  4227   001B0C  BE04               	btfsc	(?_labs+3)^0,7,c
  4228   001B0E  EF94  F00D         	goto	u7051
  4229   001B12  5004               	movf	(?_labs+3)^0,w,c
  4230   001B14  1003               	iorwf	(?_labs+2)^0,w,c
  4231   001B16  1002               	iorwf	(?_labs+1)^0,w,c
  4232   001B18  E109               	bnz	u7050
  4233   001B1A  0E02               	movlw	2
  4234   001B1C  5C01               	subwf	?_labs^0,w,c
  4235   001B1E  A0D8               	btfss	status,0,c
  4236   001B20  EF94  F00D         	goto	u7051
  4237   001B24  EF96  F00D         	goto	u7050
  4238   001B28                     u7051:
  4239   001B28  EF52  F00D         	goto	l1178
  4240   001B2C                     u7050:
  4241   001B2C  C083  F033         	movff	efgtoa@ou,___flge@ff1
  4242   001B30  C084  F034         	movff	efgtoa@ou+1,___flge@ff1+1
  4243   001B34  C085  F035         	movff	efgtoa@ou+2,___flge@ff1+2
  4244   001B38  C086  F036         	movff	efgtoa@ou+3,___flge@ff1+3
  4245   001B3C  C092  F037         	movff	efgtoa@g,___flge@ff2
  4246   001B40  C093  F038         	movff	efgtoa@g+1,___flge@ff2+1
  4247   001B44  C094  F039         	movff	efgtoa@g+2,___flge@ff2+2
  4248   001B48  C095  F03A         	movff	efgtoa@g+3,___flge@ff2+3
  4249   001B4C  EC89  F01F         	call	___flge	;wreg free
  4250   001B50  A0D8               	btfss	status,0,c
  4251   001B52  EFAD  F00D         	goto	u7061
  4252   001B56  EFAF  F00D         	goto	u7060
  4253   001B5A                     u7061:
  4254   001B5A  EF52  F00D         	goto	l1178
  4255   001B5E                     u7060:
  4256   001B5E                     
  4257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4258   001B5E  0100               	movlb	0	; () banked
  4259   001B60  5198               	movf	efgtoa@u& (0+255),w,b
  4260   001B62  5D92               	subwf	efgtoa@g& (0+255),w,b
  4261   001B64  6E01               	movwf	labs@a^0,c
  4262   001B66  5199               	movf	(efgtoa@u+1)& (0+255),w,b
  4263   001B68  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4264   001B6A  6E02               	movwf	(labs@a+1)^0,c
  4265   001B6C  519A               	movf	(efgtoa@u+2)& (0+255),w,b
  4266   001B6E  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4267   001B70  6E03               	movwf	(labs@a+2)^0,c
  4268   001B72  519B               	movf	(efgtoa@u+3)& (0+255),w,b
  4269   001B74  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4270   001B76  6E04               	movwf	(labs@a+3)^0,c
  4271   001B78  ECA9  F022         	call	_labs	;wreg free
  4272   001B7C  BE04               	btfsc	(?_labs+3)^0,7,c
  4273   001B7E  EFCE  F00D         	goto	u7070
  4274   001B82  5004               	movf	(?_labs+3)^0,w,c
  4275   001B84  1003               	iorwf	(?_labs+2)^0,w,c
  4276   001B86  1002               	iorwf	(?_labs+1)^0,w,c
  4277   001B88  E107               	bnz	u7071
  4278   001B8A  0E02               	movlw	2
  4279   001B8C  5C01               	subwf	?_labs^0,w,c
  4280   001B8E  B0D8               	btfsc	status,0,c
  4281   001B90  EFCC  F00D         	goto	u7071
  4282   001B94  EFCE  F00D         	goto	u7070
  4283   001B98                     u7071:
  4284   001B98  EF16  F00E         	goto	l5727
  4285   001B9C                     u7070:
  4286   001B9C                     l5717:
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  4289   001B9C  C098  F092         	movff	efgtoa@u,efgtoa@g
  4290   001BA0  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
  4291   001BA4  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
  4292   001BA8  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  4295   001BAC  EF2F  F00E         	goto	l1176
  4296   001BB0                     l5719:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  4299   001BB0  C098  F03B         	movff	efgtoa@u,___fldiv@b
  4300   001BB4  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  4301   001BB8  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  4302   001BBC  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  4303   001BC0  0E00               	movlw	0
  4304   001BC2  6E3F               	movwf	___fldiv@a^0,c
  4305   001BC4  0E00               	movlw	0
  4306   001BC6  6E40               	movwf	(___fldiv@a+1)^0,c
  4307   001BC8  0E20               	movlw	32
  4308   001BCA  6E41               	movwf	(___fldiv@a+2)^0,c
  4309   001BCC  0E41               	movlw	65
  4310   001BCE  6E42               	movwf	(___fldiv@a+3)^0,c
  4311   001BD0  EC68  F019         	call	___fldiv	;wreg free
  4312   001BD4  C03B  F098         	movff	?___fldiv,efgtoa@u
  4313   001BD8  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  4314   001BDC  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  4315   001BE0  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  4316   001BE4                     
  4317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  4318   001BE4  0100               	movlb	0	; () banked
  4319   001BE6  077F               	decf	efgtoa@e& (0+255),f,b
  4320   001BE8  A0D8               	btfss	status,0,c
  4321   001BEA  0780               	decf	(efgtoa@e+1)& (0+255),f,b
  4322   001BEC                     
  4323                           ; BSR set to: 0
  4324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4325   001BEC  5198               	movf	efgtoa@u& (0+255),w,b
  4326   001BEE  5D92               	subwf	efgtoa@g& (0+255),w,b
  4327   001BF0  6E01               	movwf	labs@a^0,c
  4328   001BF2  5199               	movf	(efgtoa@u+1)& (0+255),w,b
  4329   001BF4  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4330   001BF6  6E02               	movwf	(labs@a+1)^0,c
  4331   001BF8  519A               	movf	(efgtoa@u+2)& (0+255),w,b
  4332   001BFA  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4333   001BFC  6E03               	movwf	(labs@a+2)^0,c
  4334   001BFE  519B               	movf	(efgtoa@u+3)& (0+255),w,b
  4335   001C00  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4336   001C02  6E04               	movwf	(labs@a+3)^0,c
  4337   001C04  ECA9  F022         	call	_labs	;wreg free
  4338   001C08  BE04               	btfsc	(?_labs+3)^0,7,c
  4339   001C0A  EF14  F00E         	goto	u7080
  4340   001C0E  5004               	movf	(?_labs+3)^0,w,c
  4341   001C10  1003               	iorwf	(?_labs+2)^0,w,c
  4342   001C12  1002               	iorwf	(?_labs+1)^0,w,c
  4343   001C14  E107               	bnz	u7081
  4344   001C16  0E02               	movlw	2
  4345   001C18  5C01               	subwf	?_labs^0,w,c
  4346   001C1A  B0D8               	btfsc	status,0,c
  4347   001C1C  EF12  F00E         	goto	u7081
  4348   001C20  EF14  F00E         	goto	u7080
  4349   001C24                     u7081:
  4350   001C24  EF16  F00E         	goto	l5727
  4351   001C28                     u7080:
  4352   001C28  EFCE  F00D         	goto	l5717
  4353   001C2C                     l5727:
  4354                           
  4355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4356   001C2C  C092  F033         	movff	efgtoa@g,___flge@ff1
  4357   001C30  C093  F034         	movff	efgtoa@g+1,___flge@ff1+1
  4358   001C34  C094  F035         	movff	efgtoa@g+2,___flge@ff1+2
  4359   001C38  C095  F036         	movff	efgtoa@g+3,___flge@ff1+3
  4360   001C3C  C098  F037         	movff	efgtoa@u,___flge@ff2
  4361   001C40  C099  F038         	movff	efgtoa@u+1,___flge@ff2+1
  4362   001C44  C09A  F039         	movff	efgtoa@u+2,___flge@ff2+2
  4363   001C48  C09B  F03A         	movff	efgtoa@u+3,___flge@ff2+3
  4364   001C4C  EC89  F01F         	call	___flge	;wreg free
  4365   001C50  A0D8               	btfss	status,0,c
  4366   001C52  EF2D  F00E         	goto	u7091
  4367   001C56  EF2F  F00E         	goto	u7090
  4368   001C5A                     u7091:
  4369   001C5A  EFD8  F00D         	goto	l5719
  4370   001C5E                     u7090:
  4371   001C5E                     l1176:
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4374   001C5E  C06F  F079         	movff	efgtoa@c,efgtoa@mode
  4375                           
  4376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4377   001C62  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
  4378   001C66                     
  4379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4380   001C66  0100               	movlb	0	; () banked
  4381   001C68  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  4382   001C6A  EF39  F00E         	goto	u7101
  4383   001C6E  EF3B  F00E         	goto	u7100
  4384   001C72                     u7101:
  4385   001C72  EF41  F00E         	goto	l5733
  4386   001C76                     u7100:
  4387   001C76                     
  4388                           ; BSR set to: 0
  4389   001C76  C0F4  F072         	movff	_prec,efgtoa@p
  4390   001C7A  C0F5  F073         	movff	_prec+1,efgtoa@p+1
  4391   001C7E  EF45  F00E         	goto	l5735
  4392   001C82                     l5733:
  4393                           
  4394                           ; BSR set to: 0
  4395   001C82  0E00               	movlw	0
  4396   001C84  6F73               	movwf	(efgtoa@p+1)& (0+255),b
  4397   001C86  0E06               	movlw	6
  4398   001C88  6F72               	movwf	efgtoa@p& (0+255),b
  4399   001C8A                     l5735:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4403   001C8A  C072  F07D         	movff	efgtoa@p,efgtoa@m
  4404   001C8E  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
  4405   001C92                     
  4406                           ; BSR set to: 0
  4407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4408   001C92  4B7D               	infsnz	efgtoa@m& (0+255),f,b
  4409   001C94  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
  4410   001C96                     
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4413   001C96  0E66               	movlw	102
  4414   001C98  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  4415   001C9A  A4D8               	btfss	status,2,c
  4416   001C9C  EF52  F00E         	goto	u7111
  4417   001CA0  EF54  F00E         	goto	u7110
  4418   001CA4                     u7111:
  4419   001CA4  EF74  F00E         	goto	l5749
  4420   001CA8                     u7110:
  4421   001CA8                     
  4422                           ; BSR set to: 0
  4423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4424   001CA8  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4425   001CAA  EF5B  F00E         	goto	u7120
  4426   001CAE  EF59  F00E         	goto	u7121
  4427   001CB2                     u7121:
  4428   001CB2  EF67  F00E         	goto	l5745
  4429   001CB6                     u7120:
  4430   001CB6                     
  4431                           ; BSR set to: 0
  4432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4433   001CB6  0E00               	movlw	0
  4434   001CB8  6F98               	movwf	efgtoa@u& (0+255),b
  4435   001CBA  0E00               	movlw	0
  4436   001CBC  6F99               	movwf	(efgtoa@u+1)& (0+255),b
  4437   001CBE  0E80               	movlw	128
  4438   001CC0  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
  4439   001CC2  0E3F               	movlw	63
  4440   001CC4  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4443   001CC6  0E00               	movlw	0
  4444   001CC8  6F80               	movwf	(efgtoa@e+1)& (0+255),b
  4445   001CCA  0E00               	movlw	0
  4446   001CCC  6F7F               	movwf	efgtoa@e& (0+255),b
  4447   001CCE                     l5745:
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4451   001CCE  0E67               	movlw	103
  4452   001CD0  1979               	xorwf	efgtoa@mode& (0+255),w,b
  4453   001CD2  B4D8               	btfsc	status,2,c
  4454   001CD4  EF6E  F00E         	goto	u7131
  4455   001CD8  EF70  F00E         	goto	u7130
  4456   001CDC                     u7131:
  4457   001CDC  EF74  F00E         	goto	l5749
  4458   001CE0                     u7130:
  4459   001CE0                     
  4460                           ; BSR set to: 0
  4461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4462   001CE0  517F               	movf	efgtoa@e& (0+255),w,b
  4463   001CE2  277D               	addwf	efgtoa@m& (0+255),f,b
  4464   001CE4  5180               	movf	(efgtoa@e+1)& (0+255),w,b
  4465   001CE6  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4466   001CE8                     l5749:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4470   001CE8  0E00               	movlw	0
  4471   001CEA  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  4472   001CEC  0E00               	movlw	0
  4473   001CEE  6F87               	movwf	efgtoa@i& (0+255),b
  4474   001CF0                     
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4477   001CF0  C092  F089         	movff	efgtoa@g,efgtoa@h
  4478   001CF4  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
  4479   001CF8  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
  4480   001CFC  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
  4481   001D00                     
  4482                           ; BSR set to: 0
  4483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4484   001D00  C098  F083         	movff	efgtoa@u,efgtoa@ou
  4485   001D04  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
  4486   001D08  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
  4487   001D0C  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
  4488                           
  4489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4490   001D10  EF05  F00F         	goto	l5763
  4491   001D14                     l5755:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4495   001D14  C089  F03B         	movff	efgtoa@h,___fldiv@b
  4496   001D18  C08A  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  4497   001D1C  C08B  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  4498   001D20  C08C  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  4499   001D24  C098  F03F         	movff	efgtoa@u,___fldiv@a
  4500   001D28  C099  F040         	movff	efgtoa@u+1,___fldiv@a+1
  4501   001D2C  C09A  F041         	movff	efgtoa@u+2,___fldiv@a+2
  4502   001D30  C09B  F042         	movff	efgtoa@u+3,___fldiv@a+3
  4503   001D34  EC68  F019         	call	___fldiv	;wreg free
  4504   001D38  C03B  F054         	movff	?___fldiv,floorf@x
  4505   001D3C  C03C  F055         	movff	?___fldiv+1,floorf@x+1
  4506   001D40  C03D  F056         	movff	?___fldiv+2,floorf@x+2
  4507   001D44  C03E  F057         	movff	?___fldiv+3,floorf@x+3
  4508   001D48  EC95  F01C         	call	_floorf	;wreg free
  4509   001D4C  C054  F08D         	movff	?_floorf,efgtoa@l
  4510   001D50  C055  F08E         	movff	?_floorf+1,efgtoa@l+1
  4511   001D54  C056  F08F         	movff	?_floorf+2,efgtoa@l+2
  4512   001D58  C057  F090         	movff	?_floorf+3,efgtoa@l+3
  4513                           
  4514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4515   001D5C  C08D  F001         	movff	efgtoa@l,___fltol@f1
  4516   001D60  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4517   001D64  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4518   001D68  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4519   001D6C  EC06  F01F         	call	___fltol	;wreg free
  4520   001D70  C001  F07B         	movff	?___fltol,efgtoa@d
  4521   001D74  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
  4522   001D78                     
  4523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4524   001D78  C089  F033         	movff	efgtoa@h,___flsub@b
  4525   001D7C  C08A  F034         	movff	efgtoa@h+1,___flsub@b+1
  4526   001D80  C08B  F035         	movff	efgtoa@h+2,___flsub@b+2
  4527   001D84  C08C  F036         	movff	efgtoa@h+3,___flsub@b+3
  4528   001D88  C08D  F01E         	movff	efgtoa@l,___flmul@a
  4529   001D8C  C08E  F01F         	movff	efgtoa@l+1,___flmul@a+1
  4530   001D90  C08F  F020         	movff	efgtoa@l+2,___flmul@a+2
  4531   001D94  C090  F021         	movff	efgtoa@l+3,___flmul@a+3
  4532   001D98  C098  F01A         	movff	efgtoa@u,___flmul@b
  4533   001D9C  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  4534   001DA0  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  4535   001DA4  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  4536   001DA8  EC53  F017         	call	___flmul	;wreg free
  4537   001DAC  C01A  F037         	movff	?___flmul,___flsub@a
  4538   001DB0  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  4539   001DB4  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  4540   001DB8  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  4541   001DBC  ECBF  F023         	call	___flsub	;wreg free
  4542   001DC0  C033  F089         	movff	?___flsub,efgtoa@h
  4543   001DC4  C034  F08A         	movff	?___flsub+1,efgtoa@h+1
  4544   001DC8  C035  F08B         	movff	?___flsub+2,efgtoa@h+2
  4545   001DCC  C036  F08C         	movff	?___flsub+3,efgtoa@h+3
  4546   001DD0                     
  4547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4548   001DD0  C098  F03B         	movff	efgtoa@u,___fldiv@b
  4549   001DD4  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  4550   001DD8  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  4551   001DDC  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  4552   001DE0  0E00               	movlw	0
  4553   001DE2  6E3F               	movwf	___fldiv@a^0,c
  4554   001DE4  0E00               	movlw	0
  4555   001DE6  6E40               	movwf	(___fldiv@a+1)^0,c
  4556   001DE8  0E20               	movlw	32
  4557   001DEA  6E41               	movwf	(___fldiv@a+2)^0,c
  4558   001DEC  0E41               	movlw	65
  4559   001DEE  6E42               	movwf	(___fldiv@a+3)^0,c
  4560   001DF0  EC68  F019         	call	___fldiv	;wreg free
  4561   001DF4  C03B  F098         	movff	?___fldiv,efgtoa@u
  4562   001DF8  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  4563   001DFC  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  4564   001E00  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  4565   001E04                     
  4566                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4567   001E04  0100               	movlb	0	; () banked
  4568   001E06  4B87               	infsnz	efgtoa@i& (0+255),f,b
  4569   001E08  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
  4570   001E0A                     l5763:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4574   001E0A  517D               	movf	efgtoa@m& (0+255),w,b
  4575   001E0C  5D87               	subwf	efgtoa@i& (0+255),w,b
  4576   001E0E  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  4577   001E10  0A80               	xorlw	128
  4578   001E12  6E5E               	movwf	??_efgtoa^0,c
  4579   001E14  517E               	movf	(efgtoa@m+1)& (0+255),w,b
  4580   001E16  0A80               	xorlw	128
  4581   001E18  585E               	subwfb	??_efgtoa^0,w,c
  4582   001E1A  A0D8               	btfss	status,0,c
  4583   001E1C  EF12  F00F         	goto	u7141
  4584   001E20  EF14  F00F         	goto	u7140
  4585   001E24                     u7141:
  4586   001E24  EF8A  F00E         	goto	l5755
  4587   001E28                     u7140:
  4588   001E28                     
  4589                           ; BSR set to: 0
  4590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4591   001E28  C098  F01A         	movff	efgtoa@u,___flmul@b
  4592   001E2C  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  4593   001E30  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  4594   001E34  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  4595   001E38  0E00               	movlw	0
  4596   001E3A  6E1E               	movwf	___flmul@a^0,c
  4597   001E3C  0E00               	movlw	0
  4598   001E3E  6E1F               	movwf	(___flmul@a+1)^0,c
  4599   001E40  0EA0               	movlw	160
  4600   001E42  6E20               	movwf	(___flmul@a+2)^0,c
  4601   001E44  0E40               	movlw	64
  4602   001E46  6E21               	movwf	(___flmul@a+3)^0,c
  4603   001E48  EC53  F017         	call	___flmul	;wreg free
  4604   001E4C  C01A  F08D         	movff	?___flmul,efgtoa@l
  4605   001E50  C01B  F08E         	movff	?___flmul+1,efgtoa@l+1
  4606   001E54  C01C  F08F         	movff	?___flmul+2,efgtoa@l+2
  4607   001E58  C01D  F090         	movff	?___flmul+3,efgtoa@l+3
  4608   001E5C                     
  4609                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4610   001E5C  C089  F033         	movff	efgtoa@h,___flge@ff1
  4611   001E60  C08A  F034         	movff	efgtoa@h+1,___flge@ff1+1
  4612   001E64  C08B  F035         	movff	efgtoa@h+2,___flge@ff1+2
  4613   001E68  C08C  F036         	movff	efgtoa@h+3,___flge@ff1+3
  4614   001E6C  C08D  F037         	movff	efgtoa@l,___flge@ff2
  4615   001E70  C08E  F038         	movff	efgtoa@l+1,___flge@ff2+1
  4616   001E74  C08F  F039         	movff	efgtoa@l+2,___flge@ff2+2
  4617   001E78  C090  F03A         	movff	efgtoa@l+3,___flge@ff2+3
  4618   001E7C  EC89  F01F         	call	___flge	;wreg free
  4619   001E80  B0D8               	btfsc	status,0,c
  4620   001E82  EF45  F00F         	goto	u7151
  4621   001E86  EF47  F00F         	goto	u7150
  4622   001E8A                     u7151:
  4623   001E8A  EF52  F00F         	goto	l5771
  4624   001E8E                     u7150:
  4625   001E8E                     
  4626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4627   001E8E  0E00               	movlw	0
  4628   001E90  0100               	movlb	0	; () banked
  4629   001E92  6F8D               	movwf	efgtoa@l& (0+255),b
  4630   001E94  0E00               	movlw	0
  4631   001E96  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  4632   001E98  0E00               	movlw	0
  4633   001E9A  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  4634   001E9C  0E00               	movlw	0
  4635   001E9E  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  4638   001EA0  EF7B  F00F         	goto	l5777
  4639   001EA4                     l5771:
  4640                           
  4641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4642   001EA4  C089  F001         	movff	efgtoa@h,___fleq@ff1
  4643   001EA8  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4644   001EAC  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4645   001EB0  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4646   001EB4  C08D  F005         	movff	efgtoa@l,___fleq@ff2
  4647   001EB8  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4648   001EBC  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4649   001EC0  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4650   001EC4  ECB5  F021         	call	___fleq	;wreg free
  4651   001EC8  A0D8               	btfss	status,0,c
  4652   001ECA  EF69  F00F         	goto	u7161
  4653   001ECE  EF6B  F00F         	goto	u7160
  4654   001ED2                     u7161:
  4655   001ED2  EF7B  F00F         	goto	l5777
  4656   001ED6                     u7160:
  4657   001ED6  0100               	movlb	0	; () banked
  4658   001ED8  B17B               	btfsc	efgtoa@d& (0+255),0,b
  4659   001EDA  EF71  F00F         	goto	u7171
  4660   001EDE  EF73  F00F         	goto	u7170
  4661   001EE2                     u7171:
  4662   001EE2  EF7B  F00F         	goto	l5777
  4663   001EE6                     u7170:
  4664   001EE6                     
  4665                           ; BSR set to: 0
  4666                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4667   001EE6  0E00               	movlw	0
  4668   001EE8  6F8D               	movwf	efgtoa@l& (0+255),b
  4669   001EEA  0E00               	movlw	0
  4670   001EEC  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  4671   001EEE  0E00               	movlw	0
  4672   001EF0  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  4673   001EF2  0E00               	movlw	0
  4674   001EF4  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  4675   001EF6                     l5777:
  4676                           
  4677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4678   001EF6  C092  F001         	movff	efgtoa@g,___fladd@b
  4679   001EFA  C093  F002         	movff	efgtoa@g+1,___fladd@b+1
  4680   001EFE  C094  F003         	movff	efgtoa@g+2,___fladd@b+2
  4681   001F02  C095  F004         	movff	efgtoa@g+3,___fladd@b+3
  4682   001F06  C08D  F005         	movff	efgtoa@l,___fladd@a
  4683   001F0A  C08E  F006         	movff	efgtoa@l+1,___fladd@a+1
  4684   001F0E  C08F  F007         	movff	efgtoa@l+2,___fladd@a+2
  4685   001F12  C090  F008         	movff	efgtoa@l+3,___fladd@a+3
  4686   001F16  ECF3  F014         	call	___fladd	;wreg free
  4687   001F1A  C001  F089         	movff	?___fladd,efgtoa@h
  4688   001F1E  C002  F08A         	movff	?___fladd+1,efgtoa@h+1
  4689   001F22  C003  F08B         	movff	?___fladd+2,efgtoa@h+2
  4690   001F26  C004  F08C         	movff	?___fladd+3,efgtoa@h+3
  4691   001F2A                     
  4692                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4693   001F2A  C089  F033         	movff	efgtoa@h,___flge@ff1
  4694   001F2E  C08A  F034         	movff	efgtoa@h+1,___flge@ff1+1
  4695   001F32  C08B  F035         	movff	efgtoa@h+2,___flge@ff1+2
  4696   001F36  C08C  F036         	movff	efgtoa@h+3,___flge@ff1+3
  4697   001F3A  0E00               	movlw	0
  4698   001F3C  6E1E               	movwf	___flmul@a^0,c
  4699   001F3E  0E00               	movlw	0
  4700   001F40  6E1F               	movwf	(___flmul@a+1)^0,c
  4701   001F42  0E20               	movlw	32
  4702   001F44  6E20               	movwf	(___flmul@a+2)^0,c
  4703   001F46  0E41               	movlw	65
  4704   001F48  6E21               	movwf	(___flmul@a+3)^0,c
  4705   001F4A  C083  F01A         	movff	efgtoa@ou,___flmul@b
  4706   001F4E  C084  F01B         	movff	efgtoa@ou+1,___flmul@b+1
  4707   001F52  C085  F01C         	movff	efgtoa@ou+2,___flmul@b+2
  4708   001F56  C086  F01D         	movff	efgtoa@ou+3,___flmul@b+3
  4709   001F5A  EC53  F017         	call	___flmul	;wreg free
  4710   001F5E  C01A  F037         	movff	?___flmul,___flge@ff2
  4711   001F62  C01B  F038         	movff	?___flmul+1,___flge@ff2+1
  4712   001F66  C01C  F039         	movff	?___flmul+2,___flge@ff2+2
  4713   001F6A  C01D  F03A         	movff	?___flmul+3,___flge@ff2+3
  4714   001F6E  EC89  F01F         	call	___flge	;wreg free
  4715   001F72  A0D8               	btfss	status,0,c
  4716   001F74  EFBE  F00F         	goto	u7181
  4717   001F78  EFC0  F00F         	goto	u7180
  4718   001F7C                     u7181:
  4719   001F7C  EFE9  F00F         	goto	l5789
  4720   001F80                     u7180:
  4721   001F80                     
  4722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  4723   001F80  0100               	movlb	0	; () banked
  4724   001F82  4B7F               	infsnz	efgtoa@e& (0+255),f,b
  4725   001F84  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
  4726   001F86                     
  4727                           ; BSR set to: 0
  4728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4729   001F86  C083  F01A         	movff	efgtoa@ou,___flmul@b
  4730   001F8A  C084  F01B         	movff	efgtoa@ou+1,___flmul@b+1
  4731   001F8E  C085  F01C         	movff	efgtoa@ou+2,___flmul@b+2
  4732   001F92  C086  F01D         	movff	efgtoa@ou+3,___flmul@b+3
  4733   001F96  0E00               	movlw	0
  4734   001F98  6E1E               	movwf	___flmul@a^0,c
  4735   001F9A  0E00               	movlw	0
  4736   001F9C  6E1F               	movwf	(___flmul@a+1)^0,c
  4737   001F9E  0E20               	movlw	32
  4738   001FA0  6E20               	movwf	(___flmul@a+2)^0,c
  4739   001FA2  0E41               	movlw	65
  4740   001FA4  6E21               	movwf	(___flmul@a+3)^0,c
  4741   001FA6  EC53  F017         	call	___flmul	;wreg free
  4742   001FAA  C01A  F083         	movff	?___flmul,efgtoa@ou
  4743   001FAE  C01B  F084         	movff	?___flmul+1,efgtoa@ou+1
  4744   001FB2  C01C  F085         	movff	?___flmul+2,efgtoa@ou+2
  4745   001FB6  C01D  F086         	movff	?___flmul+3,efgtoa@ou+3
  4746   001FBA                     
  4747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4748   001FBA  0E66               	movlw	102
  4749   001FBC  0100               	movlb	0	; () banked
  4750   001FBE  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  4751   001FC0  A4D8               	btfss	status,2,c
  4752   001FC2  EFE5  F00F         	goto	u7191
  4753   001FC6  EFE7  F00F         	goto	u7190
  4754   001FCA                     u7191:
  4755   001FCA  EFE9  F00F         	goto	l5789
  4756   001FCE                     u7190:
  4757   001FCE                     
  4758                           ; BSR set to: 0
  4759                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  4760   001FCE  4B7D               	infsnz	efgtoa@m& (0+255),f,b
  4761   001FD0  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
  4762   001FD2                     l5789:
  4763                           
  4764                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4765   001FD2  C083  F098         	movff	efgtoa@ou,efgtoa@u
  4766   001FD6  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
  4767   001FDA  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
  4768   001FDE  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
  4769   001FE2                     
  4770                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4771   001FE2  C07F  F070         	movff	efgtoa@e,efgtoa@ne
  4772   001FE6  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  4773   001FEA                     
  4774                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4775   001FEA  0E00               	movlw	0
  4776   001FEC  0100               	movlb	0	; () banked
  4777   001FEE  6F78               	movwf	efgtoa@pp& (0+255),b
  4778   001FF0                     
  4779                           ; BSR set to: 0
  4780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4781   001FF0  0E00               	movlw	0
  4782   001FF2  6F75               	movwf	(efgtoa@t+1)& (0+255),b
  4783   001FF4  0E00               	movlw	0
  4784   001FF6  6F74               	movwf	efgtoa@t& (0+255),b
  4785   001FF8                     
  4786                           ; BSR set to: 0
  4787                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4788   001FF8  0E00               	movlw	0
  4789   001FFA  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  4790   001FFC  0E00               	movlw	0
  4791   001FFE  6F87               	movwf	efgtoa@i& (0+255),b
  4792                           
  4793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4794   002000  EFE7  F010         	goto	l5839
  4795   002004                     l5799:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4799   002004  C089  F03B         	movff	efgtoa@h,___fldiv@b
  4800   002008  C08A  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  4801   00200C  C08B  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  4802   002010  C08C  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  4803   002014  C098  F03F         	movff	efgtoa@u,___fldiv@a
  4804   002018  C099  F040         	movff	efgtoa@u+1,___fldiv@a+1
  4805   00201C  C09A  F041         	movff	efgtoa@u+2,___fldiv@a+2
  4806   002020  C09B  F042         	movff	efgtoa@u+3,___fldiv@a+3
  4807   002024  EC68  F019         	call	___fldiv	;wreg free
  4808   002028  C03B  F054         	movff	?___fldiv,floorf@x
  4809   00202C  C03C  F055         	movff	?___fldiv+1,floorf@x+1
  4810   002030  C03D  F056         	movff	?___fldiv+2,floorf@x+2
  4811   002034  C03E  F057         	movff	?___fldiv+3,floorf@x+3
  4812   002038  EC95  F01C         	call	_floorf	;wreg free
  4813   00203C  C054  F08D         	movff	?_floorf,efgtoa@l
  4814   002040  C055  F08E         	movff	?_floorf+1,efgtoa@l+1
  4815   002044  C056  F08F         	movff	?_floorf+2,efgtoa@l+2
  4816   002048  C057  F090         	movff	?_floorf+3,efgtoa@l+3
  4817                           
  4818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4819   00204C  C08D  F001         	movff	efgtoa@l,___fltol@f1
  4820   002050  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4821   002054  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4822   002058  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4823   00205C  EC06  F01F         	call	___fltol	;wreg free
  4824   002060  BE02               	btfsc	(?___fltol+1)^0,7,c
  4825   002062  EF3E  F010         	goto	u7200
  4826   002066  5002               	movf	(?___fltol+1)^0,w,c
  4827   002068  E107               	bnz	u7201
  4828   00206A  0E0A               	movlw	10
  4829   00206C  5C01               	subwf	?___fltol^0,w,c
  4830   00206E  B0D8               	btfsc	status,0,c
  4831   002070  EF3C  F010         	goto	u7201
  4832   002074  EF3E  F010         	goto	u7200
  4833   002078                     u7201:
  4834   002078  EF4E  F010         	goto	l5803
  4835   00207C                     u7200:
  4836   00207C  C08D  F001         	movff	efgtoa@l,___fltol@f1
  4837   002080  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4838   002084  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4839   002088  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4840   00208C  EC06  F01F         	call	___fltol	;wreg free
  4841   002090  C001  F07B         	movff	?___fltol,efgtoa@d
  4842   002094  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
  4843   002098  EF53  F010         	goto	l1206
  4844   00209C                     l5803:
  4845   00209C  0E00               	movlw	0
  4846   00209E  0100               	movlb	0	; () banked
  4847   0020A0  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
  4848   0020A2  0E09               	movlw	9
  4849   0020A4  6F7B               	movwf	efgtoa@d& (0+255),b
  4850   0020A6                     l1206:
  4851                           
  4852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4853   0020A6  0100               	movlb	0	; () banked
  4854   0020A8  5178               	movf	efgtoa@pp& (0+255),w,b
  4855   0020AA  A4D8               	btfss	status,2,c
  4856   0020AC  EF5A  F010         	goto	u7211
  4857   0020B0  EF5C  F010         	goto	u7210
  4858   0020B4                     u7211:
  4859   0020B4  EF84  F010         	goto	l5823
  4860   0020B8                     u7210:
  4861   0020B8                     
  4862                           ; BSR set to: 0
  4863   0020B8  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4864   0020BA  EF63  F010         	goto	u7220
  4865   0020BE  EF61  F010         	goto	u7221
  4866   0020C2                     u7221:
  4867   0020C2  EF84  F010         	goto	l5823
  4868   0020C6                     u7220:
  4869   0020C6                     
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4872   0020C6  0E50               	movlw	low _dbuf
  4873   0020C8  2596               	addwf	efgtoa@n& (0+255),w,b
  4874   0020CA  6ED9               	movwf	fsr2l,c
  4875   0020CC  0E01               	movlw	high _dbuf
  4876   0020CE  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4877   0020D0  6EDA               	movwf	fsr2h,c
  4878   0020D2  0E2E               	movlw	46
  4879   0020D4  6EDF               	movwf	indf2,c
  4880   0020D6                     
  4881                           ; BSR set to: 0
  4882   0020D6  4B96               	infsnz	efgtoa@n& (0+255),f,b
  4883   0020D8  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  4884   0020DA                     
  4885                           ; BSR set to: 0
  4886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4887   0020DA  0781               	decf	efgtoa@w& (0+255),f,b
  4888   0020DC  A0D8               	btfss	status,0,c
  4889   0020DE  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  4890   0020E0                     
  4891                           ; BSR set to: 0
  4892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4893   0020E0  0E01               	movlw	1
  4894   0020E2  6F78               	movwf	efgtoa@pp& (0+255),b
  4895   0020E4  EF84  F010         	goto	l5823
  4896   0020E8                     l5815:
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4900   0020E8  0E50               	movlw	low _dbuf
  4901   0020EA  2596               	addwf	efgtoa@n& (0+255),w,b
  4902   0020EC  6ED9               	movwf	fsr2l,c
  4903   0020EE  0E01               	movlw	high _dbuf
  4904   0020F0  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4905   0020F2  6EDA               	movwf	fsr2h,c
  4906   0020F4  0E30               	movlw	48
  4907   0020F6  6EDF               	movwf	indf2,c
  4908   0020F8                     
  4909                           ; BSR set to: 0
  4910   0020F8  4B96               	infsnz	efgtoa@n& (0+255),f,b
  4911   0020FA  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  4912   0020FC                     
  4913                           ; BSR set to: 0
  4914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4915   0020FC  0781               	decf	efgtoa@w& (0+255),f,b
  4916   0020FE  A0D8               	btfss	status,0,c
  4917   002100  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  4918   002102                     
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4921   002102  0774               	decf	efgtoa@t& (0+255),f,b
  4922   002104  A0D8               	btfss	status,0,c
  4923   002106  0775               	decf	(efgtoa@t+1)& (0+255),f,b
  4924   002108                     l5823:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4928   002108  5174               	movf	efgtoa@t& (0+255),w,b
  4929   00210A  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4930   00210C  A4D8               	btfss	status,2,c
  4931   00210E  EF8B  F010         	goto	u7231
  4932   002112  EF8D  F010         	goto	u7230
  4933   002116                     u7231:
  4934   002116  EF74  F010         	goto	l5815
  4935   00211A                     u7230:
  4936   00211A                     
  4937                           ; BSR set to: 0
  4938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4939   00211A  0E50               	movlw	low _dbuf
  4940   00211C  2596               	addwf	efgtoa@n& (0+255),w,b
  4941   00211E  6ED9               	movwf	fsr2l,c
  4942   002120  0E01               	movlw	high _dbuf
  4943   002122  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4944   002124  6EDA               	movwf	fsr2h,c
  4945   002126  517B               	movf	efgtoa@d& (0+255),w,b
  4946   002128  0F30               	addlw	48
  4947   00212A  6EDF               	movwf	indf2,c
  4948   00212C                     
  4949                           ; BSR set to: 0
  4950   00212C  4B96               	infsnz	efgtoa@n& (0+255),f,b
  4951   00212E  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  4952   002130                     
  4953                           ; BSR set to: 0
  4954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4955   002130  0781               	decf	efgtoa@w& (0+255),f,b
  4956   002132  A0D8               	btfss	status,0,c
  4957   002134  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  4958   002136                     
  4959                           ; BSR set to: 0
  4960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4961   002136  C089  F033         	movff	efgtoa@h,___flsub@b
  4962   00213A  C08A  F034         	movff	efgtoa@h+1,___flsub@b+1
  4963   00213E  C08B  F035         	movff	efgtoa@h+2,___flsub@b+2
  4964   002142  C08C  F036         	movff	efgtoa@h+3,___flsub@b+3
  4965   002146  C08D  F01E         	movff	efgtoa@l,___flmul@a
  4966   00214A  C08E  F01F         	movff	efgtoa@l+1,___flmul@a+1
  4967   00214E  C08F  F020         	movff	efgtoa@l+2,___flmul@a+2
  4968   002152  C090  F021         	movff	efgtoa@l+3,___flmul@a+3
  4969   002156  C098  F01A         	movff	efgtoa@u,___flmul@b
  4970   00215A  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  4971   00215E  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  4972   002162  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  4973   002166  EC53  F017         	call	___flmul	;wreg free
  4974   00216A  C01A  F037         	movff	?___flmul,___flsub@a
  4975   00216E  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  4976   002172  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  4977   002176  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  4978   00217A  ECBF  F023         	call	___flsub	;wreg free
  4979   00217E  C033  F089         	movff	?___flsub,efgtoa@h
  4980   002182  C034  F08A         	movff	?___flsub+1,efgtoa@h+1
  4981   002186  C035  F08B         	movff	?___flsub+2,efgtoa@h+2
  4982   00218A  C036  F08C         	movff	?___flsub+3,efgtoa@h+3
  4983   00218E                     
  4984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4985   00218E  C098  F03B         	movff	efgtoa@u,___fldiv@b
  4986   002192  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  4987   002196  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  4988   00219A  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  4989   00219E  0E00               	movlw	0
  4990   0021A0  6E3F               	movwf	___fldiv@a^0,c
  4991   0021A2  0E00               	movlw	0
  4992   0021A4  6E40               	movwf	(___fldiv@a+1)^0,c
  4993   0021A6  0E20               	movlw	32
  4994   0021A8  6E41               	movwf	(___fldiv@a+2)^0,c
  4995   0021AA  0E41               	movlw	65
  4996   0021AC  6E42               	movwf	(___fldiv@a+3)^0,c
  4997   0021AE  EC68  F019         	call	___fldiv	;wreg free
  4998   0021B2  C03B  F098         	movff	?___fldiv,efgtoa@u
  4999   0021B6  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  5000   0021BA  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  5001   0021BE  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  5002   0021C2                     
  5003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  5004   0021C2  0100               	movlb	0	; () banked
  5005   0021C4  0770               	decf	efgtoa@ne& (0+255),f,b
  5006   0021C6  A0D8               	btfss	status,0,c
  5007   0021C8  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  5008   0021CA                     
  5009                           ; BSR set to: 0
  5010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  5011   0021CA  4B87               	infsnz	efgtoa@i& (0+255),f,b
  5012   0021CC  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
  5013   0021CE                     l5839:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5017   0021CE  517D               	movf	efgtoa@m& (0+255),w,b
  5018   0021D0  5D87               	subwf	efgtoa@i& (0+255),w,b
  5019   0021D2  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  5020   0021D4  0A80               	xorlw	128
  5021   0021D6  6E5E               	movwf	??_efgtoa^0,c
  5022   0021D8  517E               	movf	(efgtoa@m+1)& (0+255),w,b
  5023   0021DA  0A80               	xorlw	128
  5024   0021DC  585E               	subwfb	??_efgtoa^0,w,c
  5025   0021DE  B0D8               	btfsc	status,0,c
  5026   0021E0  EFF4  F010         	goto	u7241
  5027   0021E4  EFF6  F010         	goto	u7240
  5028   0021E8                     u7241:
  5029   0021E8  EF04  F011         	goto	l5843
  5030   0021EC                     u7240:
  5031   0021EC                     
  5032                           ; BSR set to: 0
  5033   0021EC  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5034   0021EE  EF02  F011         	goto	u7251
  5035   0021F2  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  5036   0021F4  E109               	bnz	u7250
  5037   0021F6  0E4B               	movlw	75
  5038   0021F8  5D96               	subwf	efgtoa@n& (0+255),w,b
  5039   0021FA  A0D8               	btfss	status,0,c
  5040   0021FC  EF02  F011         	goto	u7251
  5041   002200  EF04  F011         	goto	u7250
  5042   002204                     u7251:
  5043   002204  EF02  F010         	goto	l5799
  5044   002208                     u7250:
  5045   002208                     l5843:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5049   002208  0E00               	movlw	0
  5050   00220A  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  5051   00220C  0E4F               	movlw	79
  5052   00220E  6F87               	movwf	efgtoa@i& (0+255),b
  5053   002210                     
  5054                           ; BSR set to: 0
  5055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5056   002210  0E50               	movlw	low _dbuf
  5057   002212  2587               	addwf	efgtoa@i& (0+255),w,b
  5058   002214  6ED9               	movwf	fsr2l,c
  5059   002216  0E01               	movlw	high _dbuf
  5060   002218  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5061   00221A  6EDA               	movwf	fsr2h,c
  5062   00221C  6ADF               	clrf	indf2,c
  5063   00221E                     
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5066   00221E  0E50               	movlw	low _dbuf
  5067   002220  6E5E               	movwf	??_efgtoa^0,c
  5068   002222  0E01               	movlw	high _dbuf
  5069   002224  6E5F               	movwf	(??_efgtoa+1)^0,c
  5070   002226  5196               	movf	efgtoa@n& (0+255),w,b
  5071   002228  5E5E               	subwf	??_efgtoa^0,f,c
  5072   00222A  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  5073   00222C  5A5F               	subwfb	(??_efgtoa+1)^0,f,c
  5074   00222E  5187               	movf	efgtoa@i& (0+255),w,b
  5075   002230  245E               	addwf	??_efgtoa^0,w,c
  5076   002232  6E01               	movwf	memcpy@d1^0,c
  5077   002234  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  5078   002236  205F               	addwfc	(??_efgtoa+1)^0,w,c
  5079   002238  6E02               	movwf	(memcpy@d1+1)^0,c
  5080   00223A  0E50               	movlw	low _dbuf
  5081   00223C  6E03               	movwf	memcpy@s1^0,c
  5082   00223E  0E01               	movlw	high _dbuf
  5083   002240  6E04               	movwf	(memcpy@s1+1)^0,c
  5084   002242  C096  F005         	movff	efgtoa@n,memcpy@n
  5085   002246  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
  5086   00224A  ECD4  F022         	call	_memcpy	;wreg free
  5087   00224E                     
  5088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5089   00224E  0100               	movlb	0	; () banked
  5090   002250  5196               	movf	efgtoa@n& (0+255),w,b
  5091   002252  5D87               	subwf	efgtoa@i& (0+255),w,b
  5092   002254  6F96               	movwf	efgtoa@n& (0+255),b
  5093   002256  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  5094   002258  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5095   00225A  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  5096   00225C                     
  5097                           ; BSR set to: 0
  5098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5099   00225C  5191               	movf	efgtoa@sign& (0+255),w,b
  5100   00225E  A4D8               	btfss	status,2,c
  5101   002260  EF34  F011         	goto	u7261
  5102   002264  EF37  F011         	goto	u7260
  5103   002268                     u7261:
  5104   002268  0E01               	movlw	1
  5105   00226A  EF38  F011         	goto	u7270
  5106   00226E                     u7260:
  5107   00226E  0E00               	movlw	0
  5108   002270                     u7270:
  5109   002270  6F87               	movwf	efgtoa@i& (0+255),b
  5110   002272  6B88               	clrf	(efgtoa@i+1)& (0+255),b
  5111   002274                     
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5114   002274  5191               	movf	efgtoa@sign& (0+255),w,b
  5115   002276  B4D8               	btfsc	status,2,c
  5116   002278  EF40  F011         	goto	u7281
  5117   00227C  EF42  F011         	goto	u7280
  5118   002280                     u7281:
  5119   002280  EF4D  F011         	goto	l5857
  5120   002284                     u7280:
  5121   002284                     
  5122                           ; BSR set to: 0
  5123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5124   002284  0796               	decf	efgtoa@n& (0+255),f,b
  5125   002286  A0D8               	btfss	status,0,c
  5126   002288  0797               	decf	(efgtoa@n+1)& (0+255),f,b
  5127   00228A  0E50               	movlw	low _dbuf
  5128   00228C  2596               	addwf	efgtoa@n& (0+255),w,b
  5129   00228E  6ED9               	movwf	fsr2l,c
  5130   002290  0E01               	movlw	high _dbuf
  5131   002292  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5132   002294  6EDA               	movwf	fsr2h,c
  5133   002296  C091  FFDF         	movff	efgtoa@sign,indf2
  5134   00229A                     l5857:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  5138   00229A  5187               	movf	efgtoa@i& (0+255),w,b
  5139   00229C  5F81               	subwf	efgtoa@w& (0+255),f,b
  5140   00229E  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  5141   0022A0  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5142   0022A2                     
  5143                           ; BSR set to: 0
  5144                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5145   0022A2  C06A  F00F         	movff	efgtoa@fp,pad@fp
  5146   0022A6  0E50               	movlw	low _dbuf
  5147   0022A8  2596               	addwf	efgtoa@n& (0+255),w,b
  5148   0022AA  6E10               	movwf	pad@buf^0,c
  5149   0022AC  0E01               	movlw	high _dbuf
  5150   0022AE  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5151   0022B0  6E11               	movwf	(pad@buf+1)^0,c
  5152   0022B2  C081  F012         	movff	efgtoa@w,pad@p
  5153   0022B6  C082  F013         	movff	efgtoa@w+1,pad@p+1
  5154   0022BA  EC44  F022         	call	_pad	;wreg free
  5155   0022BE                     l1173:
  5156   0022BE  0012               	return		;funcret
  5157   0022C0                     __end_of_efgtoa:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _strcpy *****************
  5161 ;; Defined at:
  5162 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5165 ;;		 -> dbuf(80), 
  5166 ;;  src             1    2[COMRAM] PTR const unsigned char 
  5167 ;;		 -> STR_5(4), STR_2(4), 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  d               2    4[COMRAM] PTR unsigned char 
  5170 ;;		 -> dbuf(80), 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2    0[COMRAM] PTR unsigned char 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5183 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5184 ;;Total ram usage:        6 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_efgtoa
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text15
  5194   0048C6                     __ptext15:
  5195                           	callstack 0
  5196   0048C6                     _strcpy:
  5197                           	callstack 25
  5198   0048C6  C001  F005         	movff	strcpy@dest,strcpy@d
  5199   0048CA  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  5200   0048CE                     l5591:
  5201   0048CE  2A03               	incf	strcpy@src^0,f,c
  5202   0048D0  0403               	decf	strcpy@src^0,w,c
  5203   0048D2  6E04               	movwf	??_strcpy^0,c
  5204   0048D4  C004  FFF6         	movff	??_strcpy,tblptrl
  5205   0048D8                     	if	1	;There is more than 1 active tblptr byte
  5206   0048D8  0E0E               	movlw	high __smallconst
  5207   0048DA  6EF7               	movwf	tblptrh,c
  5208   0048DC                     	endif
  5209   0048DC                     	if	0	;tblptru may be non-zero
  5210   0048DC                     	endif
  5211   0048DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5212   0048DC  0E00               	movlw	low (__smallconst shr (0+16))
  5213   0048DE  6EF8               	movwf	tblptru,c
  5214   0048E0                     	endif
  5215   0048E0  C005  FFD9         	movff	strcpy@d,fsr2l
  5216   0048E4  C006  FFDA         	movff	strcpy@d+1,fsr2h
  5217   0048E8  4A05               	infsnz	strcpy@d^0,f,c
  5218   0048EA  2A06               	incf	(strcpy@d+1)^0,f,c
  5219   0048EC  0008               	tblrd		*
  5220   0048EE  CFF5 FFDF          	movff	tablat,indf2
  5221   0048F2  50DF               	movf	indf2,w,c
  5222   0048F4  A4D8               	btfss	status,2,c
  5223   0048F6  EF7F  F024         	goto	u6841
  5224   0048FA  EF81  F024         	goto	u6840
  5225   0048FE                     u6841:
  5226   0048FE  EF67  F024         	goto	l5591
  5227   004902                     u6840:
  5228   004902  0012               	return		;funcret
  5229   004904                     __end_of_strcpy:
  5230                           	callstack 0
  5231                           
  5232 ;; *************** function _pad *****************
  5233 ;; Defined at:
  5234 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  5237 ;;		 -> sprintf@f(12), 
  5238 ;;  buf             2   15[COMRAM] PTR unsigned char 
  5239 ;;		 -> dbuf(80), 
  5240 ;;  p               2   17[COMRAM] int 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  i               2   20[COMRAM] int 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5252 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;Total ram usage:        8 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 3
  5259 ;; This function calls:
  5260 ;;		_fputc
  5261 ;;		_fputs
  5262 ;; This function is called by:
  5263 ;;		_efgtoa
  5264 ;;		_utoa
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text16
  5269   004488                     __ptext16:
  5270                           	callstack 0
  5271   004488                     _pad:
  5272                           	callstack 22
  5273   004488                     
  5274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  5275   004488  BE13               	btfsc	(pad@p+1)^0,7,c
  5276   00448A  EF4B  F022         	goto	u6750
  5277   00448E  EF49  F022         	goto	u6751
  5278   004492                     u6751:
  5279   004492  EF4F  F022         	goto	l1158
  5280   004496                     u6750:
  5281   004496                     
  5282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5283   004496  0E00               	movlw	0
  5284   004498  6E13               	movwf	(pad@p+1)^0,c
  5285   00449A  0E00               	movlw	0
  5286   00449C  6E12               	movwf	pad@p^0,c
  5287   00449E                     l1158:
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5290   00449E  0E00               	movlw	0
  5291   0044A0  6E16               	movwf	(pad@i+1)^0,c
  5292   0044A2  0E00               	movlw	0
  5293   0044A4  6E15               	movwf	pad@i^0,c
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5296   0044A6  EF5F  F022         	goto	l5563
  5297   0044AA                     l5559:
  5298                           
  5299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  5300   0044AA  0E00               	movlw	0
  5301   0044AC  6E02               	movwf	(fputc@c+1)^0,c
  5302   0044AE  0E20               	movlw	32
  5303   0044B0  6E01               	movwf	fputc@c^0,c
  5304   0044B2  C00F  F003         	movff	pad@fp,fputc@fp
  5305   0044B6  EC01  F021         	call	_fputc	;wreg free
  5306   0044BA                     
  5307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5308   0044BA  4A15               	infsnz	pad@i^0,f,c
  5309   0044BC  2A16               	incf	(pad@i+1)^0,f,c
  5310   0044BE                     l5563:
  5311                           
  5312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5313   0044BE  5012               	movf	pad@p^0,w,c
  5314   0044C0  5C15               	subwf	pad@i^0,w,c
  5315   0044C2  5016               	movf	(pad@i+1)^0,w,c
  5316   0044C4  0A80               	xorlw	128
  5317   0044C6  6E14               	movwf	??_pad^0,c
  5318   0044C8  5013               	movf	(pad@p+1)^0,w,c
  5319   0044CA  0A80               	xorlw	128
  5320   0044CC  5814               	subwfb	??_pad^0,w,c
  5321   0044CE  A0D8               	btfss	status,0,c
  5322   0044D0  EF6C  F022         	goto	u6761
  5323   0044D4  EF6E  F022         	goto	u6760
  5324   0044D8                     u6761:
  5325   0044D8  EF55  F022         	goto	l5559
  5326   0044DC                     u6760:
  5327   0044DC                     
  5328                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5329   0044DC  C010  F009         	movff	pad@buf,fputs@s
  5330   0044E0  C011  F00A         	movff	pad@buf+1,fputs@s+1
  5331   0044E4  C00F  F00B         	movff	pad@fp,fputs@fp
  5332   0044E8  EC43  F024         	call	_fputs	;wreg free
  5333   0044EC  0012               	return		;funcret
  5334   0044EE                     __end_of_pad:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _fputs *****************
  5338 ;; Defined at:
  5339 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5342 ;;		 -> dbuf(80), 
  5343 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  5344 ;;		 -> sprintf@f(12), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  i               2   12[COMRAM] int 
  5347 ;;  c               1   11[COMRAM] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  2    8[COMRAM] int 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5357 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;Total ram usage:        6 bytes
  5362 ;; Hardware stack levels used: 1
  5363 ;; Hardware stack levels required when called: 2
  5364 ;; This function calls:
  5365 ;;		_fputc
  5366 ;; This function is called by:
  5367 ;;		_pad
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text17
  5372   004886                     __ptext17:
  5373                           	callstack 0
  5374   004886                     _fputs:
  5375                           	callstack 22
  5376   004886  0E00               	movlw	0
  5377   004888  6E0E               	movwf	(fputs@i+1)^0,c
  5378   00488A  0E00               	movlw	0
  5379   00488C  6E0D               	movwf	fputs@i^0,c
  5380   00488E  EF52  F024         	goto	l5145
  5381   004892                     l5141:
  5382   004892  C00C  F001         	movff	fputs@c,fputc@c
  5383   004896  6A02               	clrf	(fputc@c+1)^0,c
  5384   004898  C00B  F003         	movff	fputs@fp,fputc@fp
  5385   00489C  EC01  F021         	call	_fputc	;wreg free
  5386   0048A0  4A0D               	infsnz	fputs@i^0,f,c
  5387   0048A2  2A0E               	incf	(fputs@i+1)^0,f,c
  5388   0048A4                     l5145:
  5389   0048A4  500D               	movf	fputs@i^0,w,c
  5390   0048A6  2409               	addwf	fputs@s^0,w,c
  5391   0048A8  6ED9               	movwf	fsr2l,c
  5392   0048AA  500E               	movf	(fputs@i+1)^0,w,c
  5393   0048AC  200A               	addwfc	(fputs@s+1)^0,w,c
  5394   0048AE  6EDA               	movwf	fsr2h,c
  5395   0048B0  50DF               	movf	indf2,w,c
  5396   0048B2  6E0C               	movwf	fputs@c^0,c
  5397   0048B4  500C               	movf	fputs@c^0,w,c
  5398   0048B6  A4D8               	btfss	status,2,c
  5399   0048B8  EF60  F024         	goto	u6101
  5400   0048BC  EF62  F024         	goto	u6100
  5401   0048C0                     u6101:
  5402   0048C0  EF49  F024         	goto	l5141
  5403   0048C4                     u6100:
  5404   0048C4  0012               	return		;funcret
  5405   0048C6                     __end_of_fputs:
  5406                           	callstack 0
  5407                           
  5408 ;; *************** function _fputc *****************
  5409 ;; Defined at:
  5410 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  c               2    0[COMRAM] int 
  5413 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  5414 ;;		 -> sprintf@f(12), 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  2    0[COMRAM] int 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5426 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5430 ;;Total ram usage:        8 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; Hardware stack levels required when called: 1
  5433 ;; This function calls:
  5434 ;;		_putch
  5435 ;; This function is called by:
  5436 ;;		_pad
  5437 ;;		_vfpfcnvrt
  5438 ;;		_fputs
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text18
  5443   004202                     __ptext18:
  5444                           	callstack 0
  5445   004202                     _fputc:
  5446                           	callstack 22
  5447   004202  5003               	movf	fputc@fp^0,w,c
  5448   004204  B4D8               	btfsc	status,2,c
  5449   004206  EF07  F021         	goto	u5671
  5450   00420A  EF09  F021         	goto	u5670
  5451   00420E                     u5671:
  5452   00420E  EF11  F021         	goto	l4927
  5453   004212                     u5670:
  5454   004212  5003               	movf	fputc@fp^0,w,c
  5455   004214  A4D8               	btfss	status,2,c
  5456   004216  EF0F  F021         	goto	u5681
  5457   00421A  EF11  F021         	goto	u5680
  5458   00421E                     u5681:
  5459   00421E  EF16  F021         	goto	l4929
  5460   004222                     u5680:
  5461   004222                     l4927:
  5462   004222  5001               	movf	fputc@c^0,w,c
  5463   004224  EC61  F025         	call	_putch
  5464   004228  EF5D  F021         	goto	l1316
  5465   00422C                     l4929:
  5466   00422C  5003               	movf	fputc@fp^0,w,c
  5467   00422E  6ED9               	movwf	fsr2l,c
  5468   004230  6ADA               	clrf	fsr2h,c
  5469   004232  0E0A               	movlw	10
  5470   004234  26D9               	addwf	fsr2l,f,c
  5471   004236  50DE               	movf	postinc2,w,c
  5472   004238  10DE               	iorwf	postinc2,w,c
  5473   00423A  B4D8               	btfsc	status,2,c
  5474   00423C  EF22  F021         	goto	u5691
  5475   004240  EF24  F021         	goto	u5690
  5476   004244                     u5691:
  5477   004244  EF3D  F021         	goto	l4933
  5478   004248                     u5690:
  5479   004248  5003               	movf	fputc@fp^0,w,c
  5480   00424A  6ED9               	movwf	fsr2l,c
  5481   00424C  6ADA               	clrf	fsr2h,c
  5482   00424E  0E0A               	movlw	10
  5483   004250  26D9               	addwf	fsr2l,f,c
  5484   004252  5003               	movf	fputc@fp^0,w,c
  5485   004254  6EE1               	movwf	fsr1l,c
  5486   004256  6AE2               	clrf	fsr1h,c
  5487   004258  0E03               	movlw	3
  5488   00425A  26E1               	addwf	fsr1l,f,c
  5489   00425C  50DE               	movf	postinc2,w,c
  5490   00425E  5CE6               	subwf	postinc1,w,c
  5491   004260  50E6               	movf	postinc1,w,c
  5492   004262  0A80               	xorlw	128
  5493   004264  6E08               	movwf	(??_fputc+4)^0,c
  5494   004266  50DE               	movf	postinc2,w,c
  5495   004268  0A80               	xorlw	128
  5496   00426A  5808               	subwfb	(??_fputc+4)^0,w,c
  5497   00426C  B0D8               	btfsc	status,0,c
  5498   00426E  EF3B  F021         	goto	u5701
  5499   004272  EF3D  F021         	goto	u5700
  5500   004276                     u5701:
  5501   004276  EF5D  F021         	goto	l1316
  5502   00427A                     u5700:
  5503   00427A                     l4933:
  5504   00427A  5003               	movf	fputc@fp^0,w,c
  5505   00427C  6ED9               	movwf	fsr2l,c
  5506   00427E  6ADA               	clrf	fsr2h,c
  5507   004280  0E03               	movlw	3
  5508   004282  26D9               	addwf	fsr2l,f,c
  5509   004284  CFDE F004          	movff	postinc2,??_fputc
  5510   004288  CFDD F005          	movff	postdec2,??_fputc+1
  5511   00428C  5003               	movf	fputc@fp^0,w,c
  5512   00428E  6ED9               	movwf	fsr2l,c
  5513   004290  6ADA               	clrf	fsr2h,c
  5514   004292  CFDE F006          	movff	postinc2,??_fputc+2
  5515   004296  CFDD F007          	movff	postdec2,??_fputc+3
  5516   00429A  5004               	movf	??_fputc^0,w,c
  5517   00429C  2406               	addwf	(??_fputc+2)^0,w,c
  5518   00429E  6ED9               	movwf	fsr2l,c
  5519   0042A0  5005               	movf	(??_fputc+1)^0,w,c
  5520   0042A2  2007               	addwfc	(??_fputc+3)^0,w,c
  5521   0042A4  6EDA               	movwf	fsr2h,c
  5522   0042A6  C001  FFDF         	movff	fputc@c,indf2
  5523   0042AA  5003               	movf	fputc@fp^0,w,c
  5524   0042AC  6ED9               	movwf	fsr2l,c
  5525   0042AE  6ADA               	clrf	fsr2h,c
  5526   0042B0  0E03               	movlw	3
  5527   0042B2  26D9               	addwf	fsr2l,f,c
  5528   0042B4  2ADE               	incf	postinc2,f,c
  5529   0042B6  0E00               	movlw	0
  5530   0042B8  22DD               	addwfc	postdec2,f,c
  5531   0042BA                     l1316:
  5532   0042BA  0012               	return		;funcret
  5533   0042BC                     __end_of_fputc:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _putch *****************
  5537 ;; Defined at:
  5538 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  c               1    wreg     unsigned char 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  c               1    0[COMRAM] unsigned char 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;Total ram usage:        0 bytes
  5557 ;; Hardware stack levels used: 1
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_fputc
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text19
  5566   004AC2                     __ptext19:
  5567                           	callstack 0
  5568   004AC2                     _putch:
  5569                           	callstack 22
  5570   004AC2  0012               	return		;funcret
  5571   004AC4                     __end_of_putch:
  5572                           	callstack 0
  5573                           
  5574 ;; *************** function _memcpy *****************
  5575 ;; Defined at:
  5576 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  d1              2    0[COMRAM] PTR void 
  5579 ;;		 -> dbuf(80), 
  5580 ;;  s1              2    2[COMRAM] PTR const void 
  5581 ;;		 -> dbuf(80), 
  5582 ;;  n               2    4[COMRAM] unsigned int 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5585 ;;		 -> dbuf(80), 
  5586 ;;  d               2    7[COMRAM] PTR unsigned char 
  5587 ;;		 -> dbuf(80), 
  5588 ;;  tmp             1    6[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  2    0[COMRAM] PTR void 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;Total ram usage:       11 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_efgtoa
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text20
  5612   0045A8                     __ptext20:
  5613                           	callstack 0
  5614   0045A8                     _memcpy:
  5615                           	callstack 25
  5616   0045A8  C003  F00A         	movff	memcpy@s1,memcpy@s
  5617   0045AC  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  5618   0045B0  C001  F008         	movff	memcpy@d1,memcpy@d
  5619   0045B4  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  5620   0045B8  EFEE  F022         	goto	l5639
  5621   0045BC                     l5631:
  5622   0045BC  C00A  FFD9         	movff	memcpy@s,fsr2l
  5623   0045C0  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  5624   0045C4  50DF               	movf	indf2,w,c
  5625   0045C6  6E07               	movwf	memcpy@tmp^0,c
  5626   0045C8  4A0A               	infsnz	memcpy@s^0,f,c
  5627   0045CA  2A0B               	incf	(memcpy@s+1)^0,f,c
  5628   0045CC  C008  FFD9         	movff	memcpy@d,fsr2l
  5629   0045D0  C009  FFDA         	movff	memcpy@d+1,fsr2h
  5630   0045D4  C007  FFDF         	movff	memcpy@tmp,indf2
  5631   0045D8  4A08               	infsnz	memcpy@d^0,f,c
  5632   0045DA  2A09               	incf	(memcpy@d+1)^0,f,c
  5633   0045DC                     l5639:
  5634   0045DC  0605               	decf	memcpy@n^0,f,c
  5635   0045DE  A0D8               	btfss	status,0,c
  5636   0045E0  0606               	decf	(memcpy@n+1)^0,f,c
  5637   0045E2  2805               	incf	memcpy@n^0,w,c
  5638   0045E4  E106               	bnz	u6961
  5639   0045E6  2806               	incf	(memcpy@n+1)^0,w,c
  5640   0045E8  A4D8               	btfss	status,2,c
  5641   0045EA  EFF9  F022         	goto	u6961
  5642   0045EE  EFFB  F022         	goto	u6960
  5643   0045F2                     u6961:
  5644   0045F2  EFDE  F022         	goto	l5631
  5645   0045F6                     u6960:
  5646   0045F6  0012               	return		;funcret
  5647   0045F8                     __end_of_memcpy:
  5648                           	callstack 0
  5649                           
  5650 ;; *************** function _labs *****************
  5651 ;; Defined at:
  5652 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  a               4    0[COMRAM] long 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  4    0[COMRAM] long 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5668 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5669 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5670 ;;Total ram usage:        8 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_efgtoa
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text21
  5680   004552                     __ptext21:
  5681                           	callstack 0
  5682   004552                     _labs:
  5683                           	callstack 25
  5684   004552  BE04               	btfsc	(labs@a+3)^0,7,c
  5685   004554  EFAE  F022         	goto	u6851
  5686   004558  EFB0  F022         	goto	u6850
  5687   00455C                     u6851:
  5688   00455C  EFBA  F022         	goto	l5597
  5689   004560                     u6850:
  5690   004560  C001  F001         	movff	labs@a,?_labs
  5691   004564  C002  F002         	movff	labs@a+1,?_labs+1
  5692   004568  C003  F003         	movff	labs@a+2,?_labs+2
  5693   00456C  C004  F004         	movff	labs@a+3,?_labs+3
  5694   004570  EFD3  F022         	goto	l1298
  5695   004574                     l5597:
  5696   004574  C001  F005         	movff	labs@a,??_labs
  5697   004578  C002  F006         	movff	labs@a+1,??_labs+1
  5698   00457C  C003  F007         	movff	labs@a+2,??_labs+2
  5699   004580  C004  F008         	movff	labs@a+3,??_labs+3
  5700   004584  1E05               	comf	??_labs^0,f,c
  5701   004586  1E06               	comf	(??_labs+1)^0,f,c
  5702   004588  1E07               	comf	(??_labs+2)^0,f,c
  5703   00458A  1E08               	comf	(??_labs+3)^0,f,c
  5704   00458C  2A05               	incf	??_labs^0,f,c
  5705   00458E  0E00               	movlw	0
  5706   004590  2206               	addwfc	(??_labs+1)^0,f,c
  5707   004592  2207               	addwfc	(??_labs+2)^0,f,c
  5708   004594  2208               	addwfc	(??_labs+3)^0,f,c
  5709   004596  C005  F001         	movff	??_labs,?_labs
  5710   00459A  C006  F002         	movff	??_labs+1,?_labs+1
  5711   00459E  C007  F003         	movff	??_labs+2,?_labs+2
  5712   0045A2  C008  F004         	movff	??_labs+3,?_labs+3
  5713   0045A6                     l1298:
  5714   0045A6  0012               	return		;funcret
  5715   0045A8                     __end_of_labs:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _floorf *****************
  5719 ;; Defined at:
  5720 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  x               4   83[COMRAM] float 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  u               4    6[BANK0 ] struct .
  5725 ;;  m               4    0[BANK0 ] unsigned long 
  5726 ;;  e               2    4[BANK0 ] int 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  4   83[COMRAM] float 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;Total ram usage:       20 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_efgtoa
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           	psect	text22
  5750   00392A                     __ptext22:
  5751                           	callstack 0
  5752   00392A                     _floorf:
  5753                           	callstack 25
  5754   00392A  C0EA  F066         	movff	floorf@F521,floorf@u
  5755   00392E  C0EB  F067         	movff	floorf@F521+1,floorf@u+1
  5756   003932  C0EC  F068         	movff	floorf@F521+2,floorf@u+2
  5757   003936  C0ED  F069         	movff	floorf@F521+3,floorf@u+3
  5758   00393A  C054  F066         	movff	floorf@x,floorf@u
  5759   00393E  C055  F067         	movff	floorf@x+1,floorf@u+1
  5760   003942  C056  F068         	movff	floorf@x+2,floorf@u+2
  5761   003946  C057  F069         	movff	floorf@x+3,floorf@u+3
  5762   00394A  0E81               	movlw	129
  5763   00394C  6E58               	movwf	??_floorf^0,c
  5764   00394E  0EFF               	movlw	255
  5765   003950  6E59               	movwf	(??_floorf+1)^0,c
  5766   003952  C066  F05A         	movff	floorf@u,??_floorf+2
  5767   003956  C067  F05B         	movff	floorf@u+1,??_floorf+3
  5768   00395A  C068  F05C         	movff	floorf@u+2,??_floorf+4
  5769   00395E  C069  F05D         	movff	floorf@u+3,??_floorf+5
  5770   003962  0E18               	movlw	24
  5771   003964  EFB9  F01C         	goto	u6860
  5772   003968                     u6865:
  5773   003968  90D8               	bcf	status,0,c
  5774   00396A  325D               	rrcf	(??_floorf+5)^0,f,c
  5775   00396C  325C               	rrcf	(??_floorf+4)^0,f,c
  5776   00396E  325B               	rrcf	(??_floorf+3)^0,f,c
  5777   003970  325A               	rrcf	(??_floorf+2)^0,f,c
  5778   003972                     u6860:
  5779   003972  2EE8               	decfsz	wreg,f,c
  5780   003974  EFB4  F01C         	goto	u6865
  5781   003978  505A               	movf	(??_floorf+2)^0,w,c
  5782   00397A  2458               	addwf	??_floorf^0,w,c
  5783   00397C  0100               	movlb	0	; () banked
  5784   00397E  6F64               	movwf	floorf@e& (0+255),b
  5785   003980  0E00               	movlw	0
  5786   003982  2059               	addwfc	(??_floorf+1)^0,w,c
  5787   003984  6F65               	movwf	(floorf@e+1)& (0+255),b
  5788   003986  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5789   003988  EFCF  F01C         	goto	u6871
  5790   00398C  5165               	movf	(floorf@e+1)& (0+255),w,b
  5791   00398E  E109               	bnz	u6870
  5792   003990  0E17               	movlw	23
  5793   003992  5D64               	subwf	floorf@e& (0+255),w,b
  5794   003994  A0D8               	btfss	status,0,c
  5795   003996  EFCF  F01C         	goto	u6871
  5796   00399A  EFD1  F01C         	goto	u6870
  5797   00399E                     u6871:
  5798   00399E  EFDB  F01C         	goto	l5607
  5799   0039A2                     u6870:
  5800   0039A2                     l5605:
  5801                           
  5802                           ; BSR set to: 0
  5803   0039A2  C054  F054         	movff	floorf@x,?_floorf
  5804   0039A6  C055  F055         	movff	floorf@x+1,?_floorf+1
  5805   0039AA  C056  F056         	movff	floorf@x+2,?_floorf+2
  5806   0039AE  C057  F057         	movff	floorf@x+3,?_floorf+3
  5807   0039B2  EF9F  F01D         	goto	l1284
  5808   0039B6                     l5607:
  5809                           
  5810                           ; BSR set to: 0
  5811   0039B6  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  5812   0039B8  EFE0  F01C         	goto	u6881
  5813   0039BC  EFE2  F01C         	goto	u6880
  5814   0039C0                     u6881:
  5815   0039C0  EF53  F01D         	goto	l5617
  5816   0039C4                     u6880:
  5817   0039C4                     
  5818                           ; BSR set to: 0
  5819   0039C4  C064  F058         	movff	floorf@e,??_floorf
  5820   0039C8  0EFF               	movlw	255
  5821   0039CA  6E59               	movwf	(??_floorf+1)^0,c
  5822   0039CC  0EFF               	movlw	255
  5823   0039CE  6E5A               	movwf	(??_floorf+2)^0,c
  5824   0039D0  0E7F               	movlw	127
  5825   0039D2  6E5B               	movwf	(??_floorf+3)^0,c
  5826   0039D4  0E00               	movlw	0
  5827   0039D6  6E5C               	movwf	(??_floorf+4)^0,c
  5828   0039D8                     u6895:
  5829   0039D8  6658               	tstfsz	??_floorf^0,c
  5830   0039DA  EFF1  F01C         	goto	u6896
  5831   0039DE  EFF9  F01C         	goto	u6897
  5832   0039E2                     u6896:
  5833   0039E2  345C               	rlcf	(??_floorf+4)^0,w,c
  5834   0039E4  325C               	rrcf	(??_floorf+4)^0,f,c
  5835   0039E6  325B               	rrcf	(??_floorf+3)^0,f,c
  5836   0039E8  325A               	rrcf	(??_floorf+2)^0,f,c
  5837   0039EA  3259               	rrcf	(??_floorf+1)^0,f,c
  5838   0039EC  2E58               	decfsz	??_floorf^0,f,c
  5839   0039EE  EFEC  F01C         	goto	u6895
  5840   0039F2                     u6897:
  5841   0039F2  C059  F060         	movff	??_floorf+1,floorf@m
  5842   0039F6  C05A  F061         	movff	??_floorf+2,floorf@m+1
  5843   0039FA  C05B  F062         	movff	??_floorf+3,floorf@m+2
  5844   0039FE  C05C  F063         	movff	??_floorf+4,floorf@m+3
  5845   003A02  0100               	movlb	0	; () banked
  5846   003A04  5160               	movf	floorf@m& (0+255),w,b
  5847   003A06  1566               	andwf	floorf@u& (0+255),w,b
  5848   003A08  6E58               	movwf	??_floorf^0,c
  5849   003A0A  5161               	movf	(floorf@m+1)& (0+255),w,b
  5850   003A0C  1567               	andwf	(floorf@u+1)& (0+255),w,b
  5851   003A0E  6E59               	movwf	(??_floorf+1)^0,c
  5852   003A10  5162               	movf	(floorf@m+2)& (0+255),w,b
  5853   003A12  1568               	andwf	(floorf@u+2)& (0+255),w,b
  5854   003A14  6E5A               	movwf	(??_floorf+2)^0,c
  5855   003A16  5163               	movf	(floorf@m+3)& (0+255),w,b
  5856   003A18  1569               	andwf	(floorf@u+3)& (0+255),w,b
  5857   003A1A  6E5B               	movwf	(??_floorf+3)^0,c
  5858   003A1C  5058               	movf	??_floorf^0,w,c
  5859   003A1E  1059               	iorwf	(??_floorf+1)^0,w,c
  5860   003A20  105A               	iorwf	(??_floorf+2)^0,w,c
  5861   003A22  105B               	iorwf	(??_floorf+3)^0,w,c
  5862   003A24  A4D8               	btfss	status,2,c
  5863   003A26  EF17  F01D         	goto	u6901
  5864   003A2A  EF19  F01D         	goto	u6900
  5865   003A2E                     u6901:
  5866   003A2E  EF1B  F01D         	goto	l5613
  5867   003A32                     u6900:
  5868   003A32  EFD1  F01C         	goto	l5605
  5869   003A36                     l5613:
  5870                           
  5871                           ; BSR set to: 0
  5872   003A36  C066  F058         	movff	floorf@u,??_floorf
  5873   003A3A  C067  F059         	movff	floorf@u+1,??_floorf+1
  5874   003A3E  C068  F05A         	movff	floorf@u+2,??_floorf+2
  5875   003A42  C069  F05B         	movff	floorf@u+3,??_floorf+3
  5876   003A46  0E20               	movlw	32
  5877   003A48  EF2B  F01D         	goto	u6910
  5878   003A4C                     u6915:
  5879   003A4C  90D8               	bcf	status,0,c
  5880   003A4E  325B               	rrcf	(??_floorf+3)^0,f,c
  5881   003A50  325A               	rrcf	(??_floorf+2)^0,f,c
  5882   003A52  3259               	rrcf	(??_floorf+1)^0,f,c
  5883   003A54  3258               	rrcf	??_floorf^0,f,c
  5884   003A56                     u6910:
  5885   003A56  2EE8               	decfsz	wreg,f,c
  5886   003A58  EF26  F01D         	goto	u6915
  5887   003A5C  5058               	movf	??_floorf^0,w,c
  5888   003A5E  1059               	iorwf	(??_floorf+1)^0,w,c
  5889   003A60  105A               	iorwf	(??_floorf+2)^0,w,c
  5890   003A62  105B               	iorwf	(??_floorf+3)^0,w,c
  5891   003A64  B4D8               	btfsc	status,2,c
  5892   003A66  EF37  F01D         	goto	u6921
  5893   003A6A  EF39  F01D         	goto	u6920
  5894   003A6E                     u6921:
  5895   003A6E  EF41  F01D         	goto	l1287
  5896   003A72                     u6920:
  5897   003A72                     
  5898                           ; BSR set to: 0
  5899   003A72  5160               	movf	floorf@m& (0+255),w,b
  5900   003A74  2766               	addwf	floorf@u& (0+255),f,b
  5901   003A76  5161               	movf	(floorf@m+1)& (0+255),w,b
  5902   003A78  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  5903   003A7A  5162               	movf	(floorf@m+2)& (0+255),w,b
  5904   003A7C  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  5905   003A7E  5163               	movf	(floorf@m+3)& (0+255),w,b
  5906   003A80  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  5907   003A82                     l1287:
  5908                           
  5909                           ; BSR set to: 0
  5910   003A82  1D60               	comf	floorf@m& (0+255),w,b
  5911   003A84  6E58               	movwf	??_floorf^0,c
  5912   003A86  1D61               	comf	(floorf@m+1)& (0+255),w,b
  5913   003A88  6E59               	movwf	(??_floorf+1)^0,c
  5914   003A8A  1D62               	comf	(floorf@m+2)& (0+255),w,b
  5915   003A8C  6E5A               	movwf	(??_floorf+2)^0,c
  5916   003A8E  1D63               	comf	(floorf@m+3)& (0+255),w,b
  5917   003A90  6E5B               	movwf	(??_floorf+3)^0,c
  5918   003A92  5058               	movf	??_floorf^0,w,c
  5919   003A94  1766               	andwf	floorf@u& (0+255),f,b
  5920   003A96  5059               	movf	(??_floorf+1)^0,w,c
  5921   003A98  1767               	andwf	(floorf@u+1)& (0+255),f,b
  5922   003A9A  505A               	movf	(??_floorf+2)^0,w,c
  5923   003A9C  1768               	andwf	(floorf@u+2)& (0+255),f,b
  5924   003A9E  505B               	movf	(??_floorf+3)^0,w,c
  5925   003AA0  1769               	andwf	(floorf@u+3)& (0+255),f,b
  5926   003AA2  EF97  F01D         	goto	l5625
  5927   003AA6                     l5617:
  5928                           
  5929                           ; BSR set to: 0
  5930   003AA6  C066  F058         	movff	floorf@u,??_floorf
  5931   003AAA  C067  F059         	movff	floorf@u+1,??_floorf+1
  5932   003AAE  C068  F05A         	movff	floorf@u+2,??_floorf+2
  5933   003AB2  C069  F05B         	movff	floorf@u+3,??_floorf+3
  5934   003AB6  0E20               	movlw	32
  5935   003AB8  EF63  F01D         	goto	u6930
  5936   003ABC                     u6935:
  5937   003ABC  90D8               	bcf	status,0,c
  5938   003ABE  325B               	rrcf	(??_floorf+3)^0,f,c
  5939   003AC0  325A               	rrcf	(??_floorf+2)^0,f,c
  5940   003AC2  3259               	rrcf	(??_floorf+1)^0,f,c
  5941   003AC4  3258               	rrcf	??_floorf^0,f,c
  5942   003AC6                     u6930:
  5943   003AC6  2EE8               	decfsz	wreg,f,c
  5944   003AC8  EF5E  F01D         	goto	u6935
  5945   003ACC  5058               	movf	??_floorf^0,w,c
  5946   003ACE  1059               	iorwf	(??_floorf+1)^0,w,c
  5947   003AD0  105A               	iorwf	(??_floorf+2)^0,w,c
  5948   003AD2  105B               	iorwf	(??_floorf+3)^0,w,c
  5949   003AD4  A4D8               	btfss	status,2,c
  5950   003AD6  EF6F  F01D         	goto	u6941
  5951   003ADA  EF71  F01D         	goto	u6940
  5952   003ADE                     u6941:
  5953   003ADE  EF7B  F01D         	goto	l5621
  5954   003AE2                     u6940:
  5955   003AE2                     
  5956                           ; BSR set to: 0
  5957   003AE2  0E00               	movlw	0
  5958   003AE4  6F66               	movwf	floorf@u& (0+255),b
  5959   003AE6  0E00               	movlw	0
  5960   003AE8  6F67               	movwf	(floorf@u+1)& (0+255),b
  5961   003AEA  0E00               	movlw	0
  5962   003AEC  6F68               	movwf	(floorf@u+2)& (0+255),b
  5963   003AEE  0E00               	movlw	0
  5964   003AF0  6F69               	movwf	(floorf@u+3)& (0+255),b
  5965   003AF2  EF97  F01D         	goto	l5625
  5966   003AF6                     l5621:
  5967                           
  5968                           ; BSR set to: 0
  5969   003AF6  90D8               	bcf	status,0,c
  5970   003AF8  3566               	rlcf	floorf@u& (0+255),w,b
  5971   003AFA  6E58               	movwf	??_floorf^0,c
  5972   003AFC  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  5973   003AFE  6E59               	movwf	(??_floorf+1)^0,c
  5974   003B00  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  5975   003B02  6E5A               	movwf	(??_floorf+2)^0,c
  5976   003B04  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  5977   003B06  6E5B               	movwf	(??_floorf+3)^0,c
  5978   003B08  5058               	movf	??_floorf^0,w,c
  5979   003B0A  1059               	iorwf	(??_floorf+1)^0,w,c
  5980   003B0C  105A               	iorwf	(??_floorf+2)^0,w,c
  5981   003B0E  105B               	iorwf	(??_floorf+3)^0,w,c
  5982   003B10  B4D8               	btfsc	status,2,c
  5983   003B12  EF8D  F01D         	goto	u6951
  5984   003B16  EF8F  F01D         	goto	u6950
  5985   003B1A                     u6951:
  5986   003B1A  EF97  F01D         	goto	l5625
  5987   003B1E                     u6950:
  5988   003B1E                     
  5989                           ; BSR set to: 0
  5990   003B1E  0E00               	movlw	0
  5991   003B20  6F66               	movwf	floorf@u& (0+255),b
  5992   003B22  0E00               	movlw	0
  5993   003B24  6F67               	movwf	(floorf@u+1)& (0+255),b
  5994   003B26  0E80               	movlw	128
  5995   003B28  6F68               	movwf	(floorf@u+2)& (0+255),b
  5996   003B2A  0EBF               	movlw	191
  5997   003B2C  6F69               	movwf	(floorf@u+3)& (0+255),b
  5998   003B2E                     l5625:
  5999                           
  6000                           ; BSR set to: 0
  6001   003B2E  C066  F054         	movff	floorf@u,?_floorf
  6002   003B32  C067  F055         	movff	floorf@u+1,?_floorf+1
  6003   003B36  C068  F056         	movff	floorf@u+2,?_floorf+2
  6004   003B3A  C069  F057         	movff	floorf@u+3,?_floorf+3
  6005   003B3E                     l1284:
  6006                           
  6007                           ; BSR set to: 0
  6008   003B3E  0012               	return		;funcret
  6009   003B40                     __end_of_floorf:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function ___fpclassifyf *****************
  6013 ;; Defined at:
  6014 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  x               4    0[COMRAM] float 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  u               4   10[COMRAM] struct .
  6019 ;;  e               2    8[COMRAM] int 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  2    0[COMRAM] int 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6032 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6033 ;;Total ram usage:       14 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_efgtoa
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text23
  6043   004016                     __ptext23:
  6044                           	callstack 0
  6045   004016                     ___fpclassifyf:
  6046                           	callstack 25
  6047   004016  C0EE  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6048   00401A  C0EF  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6049   00401E  C0F0  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6050   004022  C0F1  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6051   004026  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6052   00402A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6053   00402E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6054   004032  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6055   004036  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6056   00403A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6057   00403E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6058   004042  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6059   004046  0E18               	movlw	24
  6060   004048  EF2B  F020         	goto	u6770
  6061   00404C                     u6775:
  6062   00404C  90D8               	bcf	status,0,c
  6063   00404E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6064   004050  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6065   004052  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6066   004054  3205               	rrcf	??___fpclassifyf^0,f,c
  6067   004056                     u6770:
  6068   004056  2EE8               	decfsz	wreg,f,c
  6069   004058  EF26  F020         	goto	u6775
  6070   00405C  5005               	movf	??___fpclassifyf^0,w,c
  6071   00405E  6E09               	movwf	___fpclassifyf@e^0,c
  6072   004060  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6073   004062  5009               	movf	___fpclassifyf@e^0,w,c
  6074   004064  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6075   004066  A4D8               	btfss	status,2,c
  6076   004068  EF38  F020         	goto	u6781
  6077   00406C  EF3A  F020         	goto	u6780
  6078   004070                     u6781:
  6079   004070  EF5A  F020         	goto	l5579
  6080   004074                     u6780:
  6081   004074  90D8               	bcf	status,0,c
  6082   004076  340B               	rlcf	___fpclassifyf@u^0,w,c
  6083   004078  6E05               	movwf	??___fpclassifyf^0,c
  6084   00407A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6085   00407C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6086   00407E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6087   004080  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6088   004082  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6089   004084  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6090   004086  5005               	movf	??___fpclassifyf^0,w,c
  6091   004088  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6092   00408A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6093   00408C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6094   00408E  A4D8               	btfss	status,2,c
  6095   004090  EF4C  F020         	goto	u6791
  6096   004094  EF4E  F020         	goto	u6790
  6097   004098                     u6791:
  6098   004098  EF54  F020         	goto	l5575
  6099   00409C                     u6790:
  6100   00409C  0E00               	movlw	0
  6101   00409E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6102   0040A0  0E02               	movlw	2
  6103   0040A2  6E01               	movwf	?___fpclassifyf^0,c
  6104   0040A4  EF89  F020         	goto	l1277
  6105   0040A8                     l5575:
  6106   0040A8  0E00               	movlw	0
  6107   0040AA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6108   0040AC  0E03               	movlw	3
  6109   0040AE  6E01               	movwf	?___fpclassifyf^0,c
  6110   0040B0  EF89  F020         	goto	l1277
  6111   0040B4                     l5579:
  6112   0040B4  2809               	incf	___fpclassifyf@e^0,w,c
  6113   0040B6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6114   0040B8  A4D8               	btfss	status,2,c
  6115   0040BA  EF61  F020         	goto	u6801
  6116   0040BE  EF63  F020         	goto	u6800
  6117   0040C2                     u6801:
  6118   0040C2  EF85  F020         	goto	l5585
  6119   0040C6                     u6800:
  6120   0040C6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6121   0040CA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6122   0040CE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6123   0040D2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6124   0040D6  0E09               	movlw	9
  6125   0040D8                     u6815:
  6126   0040D8  90D8               	bcf	status,0,c
  6127   0040DA  3605               	rlcf	??___fpclassifyf^0,f,c
  6128   0040DC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6129   0040DE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6130   0040E0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6131   0040E2  2EE8               	decfsz	wreg,f,c
  6132   0040E4  EF6C  F020         	goto	u6815
  6133   0040E8  5005               	movf	??___fpclassifyf^0,w,c
  6134   0040EA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6135   0040EC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6136   0040EE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6137   0040F0  B4D8               	btfsc	status,2,c
  6138   0040F2  EF7D  F020         	goto	u6821
  6139   0040F6  EF80  F020         	goto	u6820
  6140   0040FA                     u6821:
  6141   0040FA  0E01               	movlw	1
  6142   0040FC  EF81  F020         	goto	u6830
  6143   004100                     u6820:
  6144   004100  0E00               	movlw	0
  6145   004102                     u6830:
  6146   004102  6E01               	movwf	?___fpclassifyf^0,c
  6147   004104  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6148   004106  EF89  F020         	goto	l1277
  6149   00410A                     l5585:
  6150   00410A  0E00               	movlw	0
  6151   00410C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6152   00410E  0E04               	movlw	4
  6153   004110  6E01               	movwf	?___fpclassifyf^0,c
  6154   004112                     l1277:
  6155   004112  0012               	return		;funcret
  6156   004114                     __end_of___fpclassifyf:
  6157                           	callstack 0
  6158                           
  6159 ;; *************** function ___flneg *****************
  6160 ;; Defined at:
  6161 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  f1              4    0[COMRAM] int 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;		None
  6166 ;; Return value:  Size  Location     Type
  6167 ;;                  4    0[COMRAM] int 
  6168 ;; Registers used:
  6169 ;;		wreg, status,2, status,0
  6170 ;; Tracked objects:
  6171 ;;		On entry : 0/0
  6172 ;;		On exit  : 0/0
  6173 ;;		Unchanged: 0/0
  6174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;Total ram usage:        4 bytes
  6180 ;; Hardware stack levels used: 1
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_efgtoa
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text24
  6189   004904                     __ptext24:
  6190                           	callstack 0
  6191   004904                     ___flneg:
  6192                           	callstack 25
  6193   004904  5001               	movf	___flneg@f1^0,w,c
  6194   004906  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6195   004908  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6196   00490A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6197   00490C  B4D8               	btfsc	status,2,c
  6198   00490E  EF8B  F024         	goto	u6611
  6199   004912  EF8D  F024         	goto	u6610
  6200   004916                     u6611:
  6201   004916  EF95  F024         	goto	l5469
  6202   00491A                     u6610:
  6203   00491A  0E00               	movlw	0
  6204   00491C  1A01               	xorwf	___flneg@f1^0,f,c
  6205   00491E  0E00               	movlw	0
  6206   004920  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6207   004922  0E00               	movlw	0
  6208   004924  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6209   004926  0E80               	movlw	128
  6210   004928  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6211   00492A                     l5469:
  6212   00492A  C001  F001         	movff	___flneg@f1,?___flneg
  6213   00492E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6214   004932  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6215   004936  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6216   00493A  0012               	return		;funcret
  6217   00493C                     __end_of___flneg:
  6218                           	callstack 0
  6219                           
  6220 ;; *************** function _sendStringSerial4 *****************
  6221 ;; Defined at:
  6222 ;;		line 94 in file "serial.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  string          2    1[COMRAM] PTR unsigned char 
  6225 ;;		 -> color_cardCheck@senddata(25), 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;Total ram usage:        2 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; Hardware stack levels required when called: 1
  6244 ;; This function calls:
  6245 ;;		_sendCharSerial4
  6246 ;; This function is called by:
  6247 ;;		_color_cardCheck
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text25
  6252   00496C                     __ptext25:
  6253                           	callstack 0
  6254   00496C                     _sendStringSerial4:
  6255                           	callstack 28
  6256   00496C                     
  6257                           ;serial.c: 96:     while(*string != 0){
  6258   00496C  EFC1  F024         	goto	l6093
  6259   004970                     l6089:
  6260                           
  6261                           ;serial.c: 97:   sendCharSerial4(*string++);
  6262   004970  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6263   004974  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6264   004978  50DF               	movf	indf2,w,c
  6265   00497A  EC40  F025         	call	_sendCharSerial4
  6266   00497E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6267   004980  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6268   004982                     l6093:
  6269                           
  6270                           ;serial.c: 96:     while(*string != 0){
  6271   004982  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6272   004986  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6273   00498A  50DF               	movf	indf2,w,c
  6274   00498C  A4D8               	btfss	status,2,c
  6275   00498E  EFCB  F024         	goto	u7531
  6276   004992  EFCD  F024         	goto	u7530
  6277   004996                     u7531:
  6278   004996  EFB8  F024         	goto	l6089
  6279   00499A                     u7530:
  6280   00499A  0012               	return		;funcret
  6281   00499C                     __end_of_sendStringSerial4:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _sendCharSerial4 *****************
  6285 ;; Defined at:
  6286 ;;		line 87 in file "serial.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  charToSend      1    wreg     unsigned char 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  charToSend      1    0[COMRAM] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      void 
  6293 ;; Registers used:
  6294 ;;		wreg
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;Total ram usage:        1 bytes
  6305 ;; Hardware stack levels used: 1
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_sendStringSerial4
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text26
  6314   004A80                     __ptext26:
  6315                           	callstack 0
  6316   004A80                     _sendCharSerial4:
  6317                           	callstack 28
  6318                           
  6319                           ;incstack = 0
  6320                           ;sendCharSerial4@charToSend stored from wreg
  6321   004A80  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6322   004A82                     l412:
  6323   004A82  010E               	movlb	14	; () banked
  6324   004A84  A537               	btfss	55,2,b	;volatile
  6325   004A86  EF47  F025         	goto	u4761
  6326   004A8A  EF49  F025         	goto	u4760
  6327   004A8E                     u4761:
  6328   004A8E  EF41  F025         	goto	l412
  6329   004A92                     u4760:
  6330   004A92                     
  6331                           ; BSR set to: 14
  6332                           ;serial.c: 89:     TX4REG = charToSend;
  6333   004A92  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6334   004A96                     
  6335                           ; BSR set to: 14
  6336   004A96  0012               	return		;funcret
  6337   004A98                     __end_of_sendCharSerial4:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _color_read_Red *****************
  6341 ;; Defined at:
  6342 ;;		line 54 in file "color.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  tmp             2    9[COMRAM] unsigned int 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  2    4[COMRAM] unsigned int 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;Total ram usage:        7 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 2
  6363 ;; This function calls:
  6364 ;;		_I2C_2_Master_Read
  6365 ;;		_I2C_2_Master_RepStart
  6366 ;;		_I2C_2_Master_Start
  6367 ;;		_I2C_2_Master_Stop
  6368 ;;		_I2C_2_Master_Write
  6369 ;; This function is called by:
  6370 ;;		_color_cardCheck
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text27
  6375   0045F8                     __ptext27:
  6376                           	callstack 0
  6377   0045F8                     _color_read_Red:
  6378                           	callstack 27
  6379   0045F8                     
  6380                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
  6381   0045F8  EC57  F025         	call	_I2C_2_Master_Start	;wreg free
  6382                           
  6383                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
  6384   0045FC  0E52               	movlw	82
  6385   0045FE  EC4C  F025         	call	_I2C_2_Master_Write
  6386                           
  6387                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x16);
  6388   004602  0EB6               	movlw	182
  6389   004604  EC4C  F025         	call	_I2C_2_Master_Write
  6390                           
  6391                           ;color.c: 60:  I2C_2_Master_RepStart();
  6392   004608  EC5C  F025         	call	_I2C_2_Master_RepStart	;wreg free
  6393                           
  6394                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
  6395   00460C  0E53               	movlw	83
  6396   00460E  EC4C  F025         	call	_I2C_2_Master_Write
  6397                           
  6398                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
  6399   004612  0E01               	movlw	1
  6400   004614  ECE2  F023         	call	_I2C_2_Master_Read
  6401   004618  6E07               	movwf	??_color_read_Red^0,c
  6402   00461A  5007               	movf	??_color_read_Red^0,w,c
  6403   00461C  6E0A               	movwf	color_read_Red@tmp^0,c
  6404   00461E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6405                           
  6406                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6407   004620  0E00               	movlw	0
  6408   004622  ECE2  F023         	call	_I2C_2_Master_Read
  6409   004626  6E07               	movwf	??_color_read_Red^0,c
  6410   004628  5007               	movf	??_color_read_Red^0,w,c
  6411   00462A  6E09               	movwf	(??_color_read_Red+2)^0,c
  6412   00462C  6A08               	clrf	(??_color_read_Red+1)^0,c
  6413   00462E  500A               	movf	color_read_Red@tmp^0,w,c
  6414   004630  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6415   004632  6E0A               	movwf	color_read_Red@tmp^0,c
  6416   004634  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6417   004636  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6418   004638  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6419                           
  6420                           ;color.c: 64:  I2C_2_Master_Stop();
  6421   00463A  EC52  F025         	call	_I2C_2_Master_Stop	;wreg free
  6422   00463E                     
  6423                           ;color.c: 65:  return tmp;
  6424   00463E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6425   004642  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6426   004646  0012               	return		;funcret
  6427   004648                     __end_of_color_read_Red:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function _color_read_Green *****************
  6431 ;; Defined at:
  6432 ;;		line 68 in file "color.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;		None
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  tmp             2    9[COMRAM] unsigned int 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  2    4[COMRAM] unsigned int 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0, cstack
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6450 ;;Total ram usage:        7 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 2
  6453 ;; This function calls:
  6454 ;;		_I2C_2_Master_Read
  6455 ;;		_I2C_2_Master_RepStart
  6456 ;;		_I2C_2_Master_Start
  6457 ;;		_I2C_2_Master_Stop
  6458 ;;		_I2C_2_Master_Write
  6459 ;; This function is called by:
  6460 ;;		_color_cardCheck
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text28
  6465   004648                     __ptext28:
  6466                           	callstack 0
  6467   004648                     _color_read_Green:
  6468                           	callstack 27
  6469   004648                     
  6470                           ;color.c: 70:  unsigned int tmp;;color.c: 71:  I2C_2_Master_Start();
  6471   004648  EC57  F025         	call	_I2C_2_Master_Start	;wreg free
  6472                           
  6473                           ;color.c: 72:  I2C_2_Master_Write(0x52 | 0x00);
  6474   00464C  0E52               	movlw	82
  6475   00464E  EC4C  F025         	call	_I2C_2_Master_Write
  6476                           
  6477                           ;color.c: 73:  I2C_2_Master_Write(0xA0 | 0x18);
  6478   004652  0EB8               	movlw	184
  6479   004654  EC4C  F025         	call	_I2C_2_Master_Write
  6480                           
  6481                           ;color.c: 74:  I2C_2_Master_RepStart();
  6482   004658  EC5C  F025         	call	_I2C_2_Master_RepStart	;wreg free
  6483                           
  6484                           ;color.c: 75:  I2C_2_Master_Write(0x52 | 0x01);
  6485   00465C  0E53               	movlw	83
  6486   00465E  EC4C  F025         	call	_I2C_2_Master_Write
  6487                           
  6488                           ;color.c: 76:  tmp=I2C_2_Master_Read(1);
  6489   004662  0E01               	movlw	1
  6490   004664  ECE2  F023         	call	_I2C_2_Master_Read
  6491   004668  6E07               	movwf	??_color_read_Green^0,c
  6492   00466A  5007               	movf	??_color_read_Green^0,w,c
  6493   00466C  6E0A               	movwf	color_read_Green@tmp^0,c
  6494   00466E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6495                           
  6496                           ;color.c: 77:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6497   004670  0E00               	movlw	0
  6498   004672  ECE2  F023         	call	_I2C_2_Master_Read
  6499   004676  6E07               	movwf	??_color_read_Green^0,c
  6500   004678  5007               	movf	??_color_read_Green^0,w,c
  6501   00467A  6E09               	movwf	(??_color_read_Green+2)^0,c
  6502   00467C  6A08               	clrf	(??_color_read_Green+1)^0,c
  6503   00467E  500A               	movf	color_read_Green@tmp^0,w,c
  6504   004680  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6505   004682  6E0A               	movwf	color_read_Green@tmp^0,c
  6506   004684  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6507   004686  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6508   004688  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6509                           
  6510                           ;color.c: 78:  I2C_2_Master_Stop();
  6511   00468A  EC52  F025         	call	_I2C_2_Master_Stop	;wreg free
  6512   00468E                     
  6513                           ;color.c: 79:  return tmp;
  6514   00468E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6515   004692  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6516   004696  0012               	return		;funcret
  6517   004698                     __end_of_color_read_Green:
  6518                           	callstack 0
  6519                           
  6520 ;; *************** function _color_read_Clear *****************
  6521 ;; Defined at:
  6522 ;;		line 96 in file "color.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  tmp             2    9[COMRAM] unsigned int 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  2    4[COMRAM] unsigned int 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6540 ;;Total ram usage:        7 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; Hardware stack levels required when called: 2
  6543 ;; This function calls:
  6544 ;;		_I2C_2_Master_Read
  6545 ;;		_I2C_2_Master_RepStart
  6546 ;;		_I2C_2_Master_Start
  6547 ;;		_I2C_2_Master_Stop
  6548 ;;		_I2C_2_Master_Write
  6549 ;; This function is called by:
  6550 ;;		_color_cardCheck
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text29
  6555   004698                     __ptext29:
  6556                           	callstack 0
  6557   004698                     _color_read_Clear:
  6558                           	callstack 27
  6559   004698                     
  6560                           ;color.c: 100:  unsigned int tmp;;color.c: 101:  I2C_2_Master_Start();
  6561   004698  EC57  F025         	call	_I2C_2_Master_Start	;wreg free
  6562                           
  6563                           ;color.c: 102:  I2C_2_Master_Write(0x52 | 0x00);
  6564   00469C  0E52               	movlw	82
  6565   00469E  EC4C  F025         	call	_I2C_2_Master_Write
  6566                           
  6567                           ;color.c: 103:  I2C_2_Master_Write(0xA0 | 0x14);
  6568   0046A2  0EB4               	movlw	180
  6569   0046A4  EC4C  F025         	call	_I2C_2_Master_Write
  6570                           
  6571                           ;color.c: 104:  I2C_2_Master_RepStart();
  6572   0046A8  EC5C  F025         	call	_I2C_2_Master_RepStart	;wreg free
  6573                           
  6574                           ;color.c: 105:  I2C_2_Master_Write(0x52 | 0x01);
  6575   0046AC  0E53               	movlw	83
  6576   0046AE  EC4C  F025         	call	_I2C_2_Master_Write
  6577                           
  6578                           ;color.c: 106:  tmp=I2C_2_Master_Read(1);
  6579   0046B2  0E01               	movlw	1
  6580   0046B4  ECE2  F023         	call	_I2C_2_Master_Read
  6581   0046B8  6E07               	movwf	??_color_read_Clear^0,c
  6582   0046BA  5007               	movf	??_color_read_Clear^0,w,c
  6583   0046BC  6E0A               	movwf	color_read_Clear@tmp^0,c
  6584   0046BE  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6585                           
  6586                           ;color.c: 107:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6587   0046C0  0E00               	movlw	0
  6588   0046C2  ECE2  F023         	call	_I2C_2_Master_Read
  6589   0046C6  6E07               	movwf	??_color_read_Clear^0,c
  6590   0046C8  5007               	movf	??_color_read_Clear^0,w,c
  6591   0046CA  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6592   0046CC  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6593   0046CE  500A               	movf	color_read_Clear@tmp^0,w,c
  6594   0046D0  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6595   0046D2  6E0A               	movwf	color_read_Clear@tmp^0,c
  6596   0046D4  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6597   0046D6  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6598   0046D8  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6599                           
  6600                           ;color.c: 108:  I2C_2_Master_Stop();
  6601   0046DA  EC52  F025         	call	_I2C_2_Master_Stop	;wreg free
  6602   0046DE                     
  6603                           ;color.c: 109:  return tmp;
  6604   0046DE  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6605   0046E2  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6606   0046E6  0012               	return		;funcret
  6607   0046E8                     __end_of_color_read_Clear:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function _color_read_Blue *****************
  6611 ;; Defined at:
  6612 ;;		line 82 in file "color.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;		None
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  tmp             2    9[COMRAM] unsigned int 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  2    4[COMRAM] unsigned int 
  6619 ;; Registers used:
  6620 ;;		wreg, status,2, status,0, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;Total ram usage:        7 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 2
  6633 ;; This function calls:
  6634 ;;		_I2C_2_Master_Read
  6635 ;;		_I2C_2_Master_RepStart
  6636 ;;		_I2C_2_Master_Start
  6637 ;;		_I2C_2_Master_Stop
  6638 ;;		_I2C_2_Master_Write
  6639 ;; This function is called by:
  6640 ;;		_color_cardCheck
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text30
  6645   0046E8                     __ptext30:
  6646                           	callstack 0
  6647   0046E8                     _color_read_Blue:
  6648                           	callstack 27
  6649   0046E8                     
  6650                           ;color.c: 84:  unsigned int tmp;;color.c: 85:  I2C_2_Master_Start();
  6651   0046E8  EC57  F025         	call	_I2C_2_Master_Start	;wreg free
  6652                           
  6653                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x00);
  6654   0046EC  0E52               	movlw	82
  6655   0046EE  EC4C  F025         	call	_I2C_2_Master_Write
  6656                           
  6657                           ;color.c: 87:  I2C_2_Master_Write(0xA0 | 0x1A);
  6658   0046F2  0EBA               	movlw	186
  6659   0046F4  EC4C  F025         	call	_I2C_2_Master_Write
  6660                           
  6661                           ;color.c: 88:  I2C_2_Master_RepStart();
  6662   0046F8  EC5C  F025         	call	_I2C_2_Master_RepStart	;wreg free
  6663                           
  6664                           ;color.c: 89:  I2C_2_Master_Write(0x52 | 0x01);
  6665   0046FC  0E53               	movlw	83
  6666   0046FE  EC4C  F025         	call	_I2C_2_Master_Write
  6667                           
  6668                           ;color.c: 90:  tmp=I2C_2_Master_Read(1);
  6669   004702  0E01               	movlw	1
  6670   004704  ECE2  F023         	call	_I2C_2_Master_Read
  6671   004708  6E07               	movwf	??_color_read_Blue^0,c
  6672   00470A  5007               	movf	??_color_read_Blue^0,w,c
  6673   00470C  6E0A               	movwf	color_read_Blue@tmp^0,c
  6674   00470E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6675                           
  6676                           ;color.c: 91:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6677   004710  0E00               	movlw	0
  6678   004712  ECE2  F023         	call	_I2C_2_Master_Read
  6679   004716  6E07               	movwf	??_color_read_Blue^0,c
  6680   004718  5007               	movf	??_color_read_Blue^0,w,c
  6681   00471A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6682   00471C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6683   00471E  500A               	movf	color_read_Blue@tmp^0,w,c
  6684   004720  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6685   004722  6E0A               	movwf	color_read_Blue@tmp^0,c
  6686   004724  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6687   004726  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6688   004728  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6689                           
  6690                           ;color.c: 92:  I2C_2_Master_Stop();
  6691   00472A  EC52  F025         	call	_I2C_2_Master_Stop	;wreg free
  6692   00472E                     
  6693                           ;color.c: 93:  return tmp;
  6694   00472E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6695   004732  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6696   004736  0012               	return		;funcret
  6697   004738                     __end_of_color_read_Blue:
  6698                           	callstack 0
  6699                           
  6700 ;; *************** function _I2C_2_Master_Write *****************
  6701 ;; Defined at:
  6702 ;;		line 45 in file "i2c.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  data_byte       1    wreg     unsigned char 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  data_byte       1    1[COMRAM] unsigned char 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      void 
  6709 ;; Registers used:
  6710 ;;		wreg, status,2, status,0, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;Total ram usage:        1 bytes
  6721 ;; Hardware stack levels used: 1
  6722 ;; Hardware stack levels required when called: 1
  6723 ;; This function calls:
  6724 ;;		_I2C_2_Master_Idle
  6725 ;; This function is called by:
  6726 ;;		_color_writetoaddr
  6727 ;;		_color_read_Red
  6728 ;;		_color_read_Green
  6729 ;;		_color_read_Blue
  6730 ;;		_color_read_Clear
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text31
  6735   004A98                     __ptext31:
  6736                           	callstack 0
  6737   004A98                     _I2C_2_Master_Write:
  6738                           	callstack 27
  6739                           
  6740                           ;incstack = 0
  6741                           ;I2C_2_Master_Write@data_byte stored from wreg
  6742   004A98  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6743   004A9A                     
  6744                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6745   004A9A  ECFA  F024         	call	_I2C_2_Master_Idle	;wreg free
  6746   004A9E                     
  6747                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6748   004A9E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6749   004AA2  0012               	return		;funcret
  6750   004AA4                     __end_of_I2C_2_Master_Write:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function _I2C_2_Master_Stop *****************
  6754 ;; Defined at:
  6755 ;;		line 39 in file "i2c.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;		None
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1    wreg      void 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6773 ;;Total ram usage:        0 bytes
  6774 ;; Hardware stack levels used: 1
  6775 ;; Hardware stack levels required when called: 1
  6776 ;; This function calls:
  6777 ;;		_I2C_2_Master_Idle
  6778 ;; This function is called by:
  6779 ;;		_color_writetoaddr
  6780 ;;		_color_read_Red
  6781 ;;		_color_read_Green
  6782 ;;		_color_read_Blue
  6783 ;;		_color_read_Clear
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text32
  6788   004AA4                     __ptext32:
  6789                           	callstack 0
  6790   004AA4                     _I2C_2_Master_Stop:
  6791                           	callstack 27
  6792   004AA4                     
  6793                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6794   004AA4  ECFA  F024         	call	_I2C_2_Master_Idle	;wreg free
  6795   004AA8                     
  6796                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6797   004AA8  010E               	movlb	14	; () banked
  6798   004AAA  85DA               	bsf	218,2,b	;volatile
  6799   004AAC                     
  6800                           ; BSR set to: 14
  6801   004AAC  0012               	return		;funcret
  6802   004AAE                     __end_of_I2C_2_Master_Stop:
  6803                           	callstack 0
  6804                           
  6805 ;; *************** function _I2C_2_Master_Start *****************
  6806 ;; Defined at:
  6807 ;;		line 27 in file "i2c.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;		None
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; Hardware stack levels required when called: 1
  6828 ;; This function calls:
  6829 ;;		_I2C_2_Master_Idle
  6830 ;; This function is called by:
  6831 ;;		_color_writetoaddr
  6832 ;;		_color_read_Red
  6833 ;;		_color_read_Green
  6834 ;;		_color_read_Blue
  6835 ;;		_color_read_Clear
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text33
  6840   004AAE                     __ptext33:
  6841                           	callstack 0
  6842   004AAE                     _I2C_2_Master_Start:
  6843                           	callstack 27
  6844   004AAE                     
  6845                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6846   004AAE  ECFA  F024         	call	_I2C_2_Master_Idle	;wreg free
  6847   004AB2                     
  6848                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6849   004AB2  010E               	movlb	14	; () banked
  6850   004AB4  81DA               	bsf	218,0,b	;volatile
  6851   004AB6                     
  6852                           ; BSR set to: 14
  6853   004AB6  0012               	return		;funcret
  6854   004AB8                     __end_of_I2C_2_Master_Start:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function _I2C_2_Master_RepStart *****************
  6858 ;; Defined at:
  6859 ;;		line 33 in file "i2c.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;Total ram usage:        0 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 1
  6880 ;; This function calls:
  6881 ;;		_I2C_2_Master_Idle
  6882 ;; This function is called by:
  6883 ;;		_color_read_Red
  6884 ;;		_color_read_Green
  6885 ;;		_color_read_Blue
  6886 ;;		_color_read_Clear
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text34
  6891   004AB8                     __ptext34:
  6892                           	callstack 0
  6893   004AB8                     _I2C_2_Master_RepStart:
  6894                           	callstack 27
  6895   004AB8                     
  6896                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6897   004AB8  ECFA  F024         	call	_I2C_2_Master_Idle	;wreg free
  6898   004ABC                     
  6899                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6900   004ABC  010E               	movlb	14	; () banked
  6901   004ABE  83DA               	bsf	218,1,b	;volatile
  6902   004AC0                     
  6903                           ; BSR set to: 14
  6904   004AC0  0012               	return		;funcret
  6905   004AC2                     __end_of_I2C_2_Master_RepStart:
  6906                           	callstack 0
  6907                           
  6908 ;; *************** function _I2C_2_Master_Read *****************
  6909 ;; Defined at:
  6910 ;;		line 51 in file "i2c.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  ack             1    wreg     unsigned char 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  ack             1    2[COMRAM] unsigned char 
  6915 ;;  tmp             1    3[COMRAM] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      unsigned char 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;Total ram usage:        3 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; Hardware stack levels required when called: 1
  6932 ;; This function calls:
  6933 ;;		_I2C_2_Master_Idle
  6934 ;; This function is called by:
  6935 ;;		_color_read_Red
  6936 ;;		_color_read_Green
  6937 ;;		_color_read_Blue
  6938 ;;		_color_read_Clear
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text35
  6943   0047C4                     __ptext35:
  6944                           	callstack 0
  6945   0047C4                     _I2C_2_Master_Read:
  6946                           	callstack 27
  6947                           
  6948                           ; BSR set to: 14
  6949                           ;incstack = 0
  6950                           ;I2C_2_Master_Read@ack stored from wreg
  6951   0047C4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6952   0047C6                     
  6953                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6954   0047C6  ECFA  F024         	call	_I2C_2_Master_Idle	;wreg free
  6955   0047CA                     
  6956                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6957   0047CA  010E               	movlb	14	; () banked
  6958   0047CC  87DA               	bsf	218,3,b	;volatile
  6959                           
  6960                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6961   0047CE  ECFA  F024         	call	_I2C_2_Master_Idle	;wreg free
  6962   0047D2                     
  6963                           ;i2c.c: 57:   tmp = SSP2BUF;
  6964   0047D2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6965                           
  6966                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6967   0047D6  ECFA  F024         	call	_I2C_2_Master_Idle	;wreg free
  6968   0047DA                     
  6969                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6970   0047DA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6971   0047DC  B4D8               	btfsc	status,2,c
  6972   0047DE  EFF3  F023         	goto	u4731
  6973   0047E2  EFF7  F023         	goto	u4730
  6974   0047E6                     u4731:
  6975   0047E6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6976   0047E8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6977   0047EA  EFF8  F023         	goto	u4748
  6978   0047EE                     u4730:
  6979   0047EE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6980   0047F0                     u4748:
  6981   0047F0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6982   0047F2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6983   0047F4  010E               	movlb	14	; () banked
  6984   0047F6  51DA               	movf	218,w,b	;volatile
  6985   0047F8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6986   0047FA  0BDF               	andlw	-33
  6987   0047FC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6988   0047FE  6FDA               	movwf	218,b	;volatile
  6989   004800                     
  6990                           ; BSR set to: 14
  6991                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6992   004800  89DA               	bsf	218,4,b	;volatile
  6993   004802                     
  6994                           ; BSR set to: 14
  6995                           ;i2c.c: 61:   return tmp;
  6996   004802  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6997   004804                     
  6998                           ; BSR set to: 14
  6999   004804  0012               	return		;funcret
  7000   004806                     __end_of_I2C_2_Master_Read:
  7001                           	callstack 0
  7002                           
  7003 ;; *************** function _I2C_2_Master_Idle *****************
  7004 ;; Defined at:
  7005 ;;		line 22 in file "i2c.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;Total ram usage:        1 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_I2C_2_Master_Start
  7029 ;;		_I2C_2_Master_RepStart
  7030 ;;		_I2C_2_Master_Stop
  7031 ;;		_I2C_2_Master_Write
  7032 ;;		_I2C_2_Master_Read
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text36
  7037   0049F4                     __ptext36:
  7038                           	callstack 0
  7039   0049F4                     _I2C_2_Master_Idle:
  7040                           	callstack 27
  7041   0049F4                     l312:
  7042   0049F4  010E               	movlb	14	; () banked
  7043   0049F6  B5D8               	btfsc	216,2,b	;volatile
  7044   0049F8  EF00  F025         	goto	u4571
  7045   0049FC  EF02  F025         	goto	u4570
  7046   004A00                     u4571:
  7047   004A00  EFFA  F024         	goto	l312
  7048   004A04                     u4570:
  7049   004A04                     
  7050                           ; BSR set to: 14
  7051   004A04  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7052   004A08  0E1F               	movlw	31
  7053   004A0A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7054   004A0C  A4D8               	btfss	status,2,c
  7055   004A0E  EF0B  F025         	goto	u4581
  7056   004A12  EF0D  F025         	goto	u4580
  7057   004A16                     u4581:
  7058   004A16  EFFA  F024         	goto	l312
  7059   004A1A                     u4580:
  7060   004A1A                     
  7061                           ; BSR set to: 14
  7062   004A1A  0012               	return		;funcret
  7063   004A1C                     __end_of_I2C_2_Master_Idle:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function _RGB_to_HSV *****************
  7067 ;; Defined at:
  7068 ;;		line 133 in file "color.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  R               4   10[BANK0 ] float 
  7071 ;;  G               4   14[BANK0 ] float 
  7072 ;;  B               4   18[BANK0 ] float 
  7073 ;;  C               4   22[BANK0 ] float 
  7074 ;;  H               2   26[BANK0 ] PTR float 
  7075 ;;		 -> color_cardCheck@H(4), 
  7076 ;;  S               2   28[BANK0 ] PTR float 
  7077 ;;		 -> color_cardCheck@S(4), 
  7078 ;;  V               2   30[BANK0 ] PTR float 
  7079 ;;		 -> color_cardCheck@V(4), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  b               4   84[BANK0 ] float 
  7082 ;;  g               4   80[BANK0 ] float 
  7083 ;;  r               4   76[BANK0 ] float 
  7084 ;;  maxRGB          4   72[BANK0 ] float 
  7085 ;;  deltaRGB        4   68[BANK0 ] float 
  7086 ;;  H_temp          4   64[BANK0 ] float 
  7087 ;;  minRGB          4   48[BANK0 ] float 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7097 ;;      Params:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7100 ;;      Totals:         0      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;Total ram usage:       78 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; Hardware stack levels required when called: 3
  7104 ;; This function calls:
  7105 ;;		___fladd
  7106 ;;		___fldiv
  7107 ;;		___fleq
  7108 ;;		___flge
  7109 ;;		___flmul
  7110 ;;		___flsub
  7111 ;;		_custom_floatmodulo
  7112 ;; This function is called by:
  7113 ;;		_color_cardCheck
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text37
  7118   0022C0                     __ptext37:
  7119                           	callstack 0
  7120   0022C0                     _RGB_to_HSV:
  7121                           	callstack 26
  7122   0022C0                     
  7123                           ;color.c: 136:     float r = R/C;
  7124   0022C0  C06A  F03B         	movff	RGB_to_HSV@R,___fldiv@b
  7125   0022C4  C06B  F03C         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  7126   0022C8  C06C  F03D         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  7127   0022CC  C06D  F03E         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  7128   0022D0  C076  F03F         	movff	RGB_to_HSV@C,___fldiv@a
  7129   0022D4  C077  F040         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  7130   0022D8  C078  F041         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  7131   0022DC  C079  F042         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  7132   0022E0  EC68  F019         	call	___fldiv	;wreg free
  7133   0022E4  C03B  F0AC         	movff	?___fldiv,RGB_to_HSV@r
  7134   0022E8  C03C  F0AD         	movff	?___fldiv+1,RGB_to_HSV@r+1
  7135   0022EC  C03D  F0AE         	movff	?___fldiv+2,RGB_to_HSV@r+2
  7136   0022F0  C03E  F0AF         	movff	?___fldiv+3,RGB_to_HSV@r+3
  7137                           
  7138                           ;color.c: 137:     float g = G/C;
  7139   0022F4  C06E  F03B         	movff	RGB_to_HSV@G,___fldiv@b
  7140   0022F8  C06F  F03C         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  7141   0022FC  C070  F03D         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  7142   002300  C071  F03E         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  7143   002304  C076  F03F         	movff	RGB_to_HSV@C,___fldiv@a
  7144   002308  C077  F040         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  7145   00230C  C078  F041         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  7146   002310  C079  F042         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  7147   002314  EC68  F019         	call	___fldiv	;wreg free
  7148   002318  C03B  F0B0         	movff	?___fldiv,RGB_to_HSV@g
  7149   00231C  C03C  F0B1         	movff	?___fldiv+1,RGB_to_HSV@g+1
  7150   002320  C03D  F0B2         	movff	?___fldiv+2,RGB_to_HSV@g+2
  7151   002324  C03E  F0B3         	movff	?___fldiv+3,RGB_to_HSV@g+3
  7152                           
  7153                           ;color.c: 138:     float b = B/C;
  7154   002328  C072  F03B         	movff	RGB_to_HSV@B,___fldiv@b
  7155   00232C  C073  F03C         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  7156   002330  C074  F03D         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  7157   002334  C075  F03E         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  7158   002338  C076  F03F         	movff	RGB_to_HSV@C,___fldiv@a
  7159   00233C  C077  F040         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  7160   002340  C078  F041         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  7161   002344  C079  F042         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  7162   002348  EC68  F019         	call	___fldiv	;wreg free
  7163   00234C  C03B  F0B4         	movff	?___fldiv,RGB_to_HSV@b
  7164   002350  C03C  F0B5         	movff	?___fldiv+1,RGB_to_HSV@b+1
  7165   002354  C03D  F0B6         	movff	?___fldiv+2,RGB_to_HSV@b+2
  7166   002358  C03E  F0B7         	movff	?___fldiv+3,RGB_to_HSV@b+3
  7167                           
  7168                           ;color.c: 141:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  7169   00235C  C0B0  F033         	movff	RGB_to_HSV@g,___flge@ff1
  7170   002360  C0B1  F034         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  7171   002364  C0B2  F035         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  7172   002368  C0B3  F036         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  7173   00236C  C0AC  F037         	movff	RGB_to_HSV@r,___flge@ff2
  7174   002370  C0AD  F038         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  7175   002374  C0AE  F039         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  7176   002378  C0AF  F03A         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  7177   00237C  EC89  F01F         	call	___flge	;wreg free
  7178   002380  A0D8               	btfss	status,0,c
  7179   002382  EFC5  F011         	goto	u7411
  7180   002386  EFC7  F011         	goto	u7410
  7181   00238A                     u7411:
  7182   00238A  EFFC  F011         	goto	l6025
  7183   00238E                     u7410:
  7184   00238E  C0B4  F033         	movff	RGB_to_HSV@b,___flge@ff1
  7185   002392  C0B5  F034         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  7186   002396  C0B6  F035         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  7187   00239A  C0B7  F036         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  7188   00239E  C0B0  F037         	movff	RGB_to_HSV@g,___flge@ff2
  7189   0023A2  C0B1  F038         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  7190   0023A6  C0B2  F039         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  7191   0023AA  C0B3  F03A         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  7192   0023AE  EC89  F01F         	call	___flge	;wreg free
  7193   0023B2  A0D8               	btfss	status,0,c
  7194   0023B4  EFDE  F011         	goto	u7421
  7195   0023B8  EFE0  F011         	goto	u7420
  7196   0023BC                     u7421:
  7197   0023BC  EFEA  F011         	goto	l111
  7198   0023C0                     u7420:
  7199   0023C0  C0B4  F088         	movff	RGB_to_HSV@b,_RGB_to_HSV$524
  7200   0023C4  C0B5  F089         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$524+1
  7201   0023C8  C0B6  F08A         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$524+2
  7202   0023CC  C0B7  F08B         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$524+3
  7203   0023D0  EFF2  F011         	goto	l113
  7204   0023D4                     l111:
  7205   0023D4  C0B0  F088         	movff	RGB_to_HSV@g,_RGB_to_HSV$524
  7206   0023D8  C0B1  F089         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$524+1
  7207   0023DC  C0B2  F08A         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$524+2
  7208   0023E0  C0B3  F08B         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$524+3
  7209   0023E4                     l113:
  7210   0023E4  C088  F0A8         	movff	_RGB_to_HSV$524,RGB_to_HSV@maxRGB
  7211   0023E8  C089  F0A9         	movff	_RGB_to_HSV$524+1,RGB_to_HSV@maxRGB+1
  7212   0023EC  C08A  F0AA         	movff	_RGB_to_HSV$524+2,RGB_to_HSV@maxRGB+2
  7213   0023F0  C08B  F0AB         	movff	_RGB_to_HSV$524+3,RGB_to_HSV@maxRGB+3
  7214   0023F4  EF2F  F012         	goto	l6029
  7215   0023F8                     l6025:
  7216   0023F8  C0B4  F033         	movff	RGB_to_HSV@b,___flge@ff1
  7217   0023FC  C0B5  F034         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  7218   002400  C0B6  F035         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  7219   002404  C0B7  F036         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  7220   002408  C0AC  F037         	movff	RGB_to_HSV@r,___flge@ff2
  7221   00240C  C0AD  F038         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  7222   002410  C0AE  F039         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  7223   002414  C0AF  F03A         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  7224   002418  EC89  F01F         	call	___flge	;wreg free
  7225   00241C  A0D8               	btfss	status,0,c
  7226   00241E  EF13  F012         	goto	u7431
  7227   002422  EF15  F012         	goto	u7430
  7228   002426                     u7431:
  7229   002426  EF1F  F012         	goto	l115
  7230   00242A                     u7430:
  7231   00242A  C0B4  F08C         	movff	RGB_to_HSV@b,_RGB_to_HSV$525
  7232   00242E  C0B5  F08D         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$525+1
  7233   002432  C0B6  F08E         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$525+2
  7234   002436  C0B7  F08F         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$525+3
  7235   00243A  EF27  F012         	goto	l117
  7236   00243E                     l115:
  7237   00243E  C0AC  F08C         	movff	RGB_to_HSV@r,_RGB_to_HSV$525
  7238   002442  C0AD  F08D         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$525+1
  7239   002446  C0AE  F08E         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$525+2
  7240   00244A  C0AF  F08F         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$525+3
  7241   00244E                     l117:
  7242   00244E  C08C  F0A8         	movff	_RGB_to_HSV$525,RGB_to_HSV@maxRGB
  7243   002452  C08D  F0A9         	movff	_RGB_to_HSV$525+1,RGB_to_HSV@maxRGB+1
  7244   002456  C08E  F0AA         	movff	_RGB_to_HSV$525+2,RGB_to_HSV@maxRGB+2
  7245   00245A  C08F  F0AB         	movff	_RGB_to_HSV$525+3,RGB_to_HSV@maxRGB+3
  7246   00245E                     l6029:
  7247                           
  7248                           ;color.c: 142:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  7249   00245E  C0AC  F033         	movff	RGB_to_HSV@r,___flge@ff1
  7250   002462  C0AD  F034         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  7251   002466  C0AE  F035         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  7252   00246A  C0AF  F036         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  7253   00246E  C0B0  F037         	movff	RGB_to_HSV@g,___flge@ff2
  7254   002472  C0B1  F038         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  7255   002476  C0B2  F039         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  7256   00247A  C0B3  F03A         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  7257   00247E  EC89  F01F         	call	___flge	;wreg free
  7258   002482  A0D8               	btfss	status,0,c
  7259   002484  EF46  F012         	goto	u7441
  7260   002488  EF48  F012         	goto	u7440
  7261   00248C                     u7441:
  7262   00248C  EF7D  F012         	goto	l6035
  7263   002490                     u7440:
  7264   002490  C0B0  F033         	movff	RGB_to_HSV@g,___flge@ff1
  7265   002494  C0B1  F034         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  7266   002498  C0B2  F035         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  7267   00249C  C0B3  F036         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  7268   0024A0  C0B4  F037         	movff	RGB_to_HSV@b,___flge@ff2
  7269   0024A4  C0B5  F038         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  7270   0024A8  C0B6  F039         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  7271   0024AC  C0B7  F03A         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  7272   0024B0  EC89  F01F         	call	___flge	;wreg free
  7273   0024B4  A0D8               	btfss	status,0,c
  7274   0024B6  EF5F  F012         	goto	u7451
  7275   0024BA  EF61  F012         	goto	u7450
  7276   0024BE                     u7451:
  7277   0024BE  EF6B  F012         	goto	l123
  7278   0024C2                     u7450:
  7279   0024C2  C0B4  F094         	movff	RGB_to_HSV@b,_RGB_to_HSV$527
  7280   0024C6  C0B5  F095         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$527+1
  7281   0024CA  C0B6  F096         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$527+2
  7282   0024CE  C0B7  F097         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$527+3
  7283   0024D2  EF73  F012         	goto	l125
  7284   0024D6                     l123:
  7285   0024D6  C0B0  F094         	movff	RGB_to_HSV@g,_RGB_to_HSV$527
  7286   0024DA  C0B1  F095         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$527+1
  7287   0024DE  C0B2  F096         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$527+2
  7288   0024E2  C0B3  F097         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$527+3
  7289   0024E6                     l125:
  7290   0024E6  C094  F090         	movff	_RGB_to_HSV$527,RGB_to_HSV@minRGB
  7291   0024EA  C095  F091         	movff	_RGB_to_HSV$527+1,RGB_to_HSV@minRGB+1
  7292   0024EE  C096  F092         	movff	_RGB_to_HSV$527+2,RGB_to_HSV@minRGB+2
  7293   0024F2  C097  F093         	movff	_RGB_to_HSV$527+3,RGB_to_HSV@minRGB+3
  7294   0024F6  EFB0  F012         	goto	l6039
  7295   0024FA                     l6035:
  7296   0024FA  C0AC  F033         	movff	RGB_to_HSV@r,___flge@ff1
  7297   0024FE  C0AD  F034         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  7298   002502  C0AE  F035         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  7299   002506  C0AF  F036         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  7300   00250A  C0B4  F037         	movff	RGB_to_HSV@b,___flge@ff2
  7301   00250E  C0B5  F038         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  7302   002512  C0B6  F039         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  7303   002516  C0B7  F03A         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  7304   00251A  EC89  F01F         	call	___flge	;wreg free
  7305   00251E  A0D8               	btfss	status,0,c
  7306   002520  EF94  F012         	goto	u7461
  7307   002524  EF96  F012         	goto	u7460
  7308   002528                     u7461:
  7309   002528  EFA0  F012         	goto	l127
  7310   00252C                     u7460:
  7311   00252C  C0B4  F098         	movff	RGB_to_HSV@b,_RGB_to_HSV$528
  7312   002530  C0B5  F099         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$528+1
  7313   002534  C0B6  F09A         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$528+2
  7314   002538  C0B7  F09B         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$528+3
  7315   00253C  EFA8  F012         	goto	l129
  7316   002540                     l127:
  7317   002540  C0AC  F098         	movff	RGB_to_HSV@r,_RGB_to_HSV$528
  7318   002544  C0AD  F099         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$528+1
  7319   002548  C0AE  F09A         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$528+2
  7320   00254C  C0AF  F09B         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$528+3
  7321   002550                     l129:
  7322   002550  C098  F090         	movff	_RGB_to_HSV$528,RGB_to_HSV@minRGB
  7323   002554  C099  F091         	movff	_RGB_to_HSV$528+1,RGB_to_HSV@minRGB+1
  7324   002558  C09A  F092         	movff	_RGB_to_HSV$528+2,RGB_to_HSV@minRGB+2
  7325   00255C  C09B  F093         	movff	_RGB_to_HSV$528+3,RGB_to_HSV@minRGB+3
  7326   002560                     l6039:
  7327                           
  7328                           ;color.c: 143:     float deltaRGB = maxRGB - minRGB;
  7329   002560  C0A8  F033         	movff	RGB_to_HSV@maxRGB,___flsub@b
  7330   002564  C0A9  F034         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  7331   002568  C0AA  F035         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  7332   00256C  C0AB  F036         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  7333   002570  C090  F037         	movff	RGB_to_HSV@minRGB,___flsub@a
  7334   002574  C091  F038         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  7335   002578  C092  F039         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  7336   00257C  C093  F03A         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  7337   002580  ECBF  F023         	call	___flsub	;wreg free
  7338   002584  C033  F0A4         	movff	?___flsub,RGB_to_HSV@deltaRGB
  7339   002588  C034  F0A5         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  7340   00258C  C035  F0A6         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  7341   002590  C036  F0A7         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  7342                           
  7343                           ;color.c: 148:     float H_temp;;color.c: 150:     if (deltaRGB == 0) {H_temp = 0;}
  7344   002594  C0A4  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  7345   002598  C0A5  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  7346   00259C  C0A6  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  7347   0025A0  C0A7  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  7348   0025A4  0E00               	movlw	0
  7349   0025A6  6E05               	movwf	___fleq@ff2^0,c
  7350   0025A8  0E00               	movlw	0
  7351   0025AA  6E06               	movwf	(___fleq@ff2+1)^0,c
  7352   0025AC  0E00               	movlw	0
  7353   0025AE  6E07               	movwf	(___fleq@ff2+2)^0,c
  7354   0025B0  0E00               	movlw	0
  7355   0025B2  6E08               	movwf	(___fleq@ff2+3)^0,c
  7356   0025B4  ECB5  F021         	call	___fleq	;wreg free
  7357   0025B8  A0D8               	btfss	status,0,c
  7358   0025BA  EFE1  F012         	goto	u7471
  7359   0025BE  EFE3  F012         	goto	u7470
  7360   0025C2                     u7471:
  7361   0025C2  EFEE  F012         	goto	l6043
  7362   0025C6                     u7470:
  7363   0025C6  0E00               	movlw	0
  7364   0025C8  0100               	movlb	0	; () banked
  7365   0025CA  6FA0               	movwf	RGB_to_HSV@H_temp& (0+255),b
  7366   0025CC  0E00               	movlw	0
  7367   0025CE  6FA1               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  7368   0025D0  0E00               	movlw	0
  7369   0025D2  6FA2               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  7370   0025D4  0E00               	movlw	0
  7371   0025D6  6FA3               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  7372   0025D8  EF4F  F014         	goto	l6063
  7373   0025DC                     l6043:
  7374   0025DC  C0A8  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  7375   0025E0  C0A9  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  7376   0025E4  C0AA  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  7377   0025E8  C0AB  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  7378   0025EC  C0AC  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  7379   0025F0  C0AD  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  7380   0025F4  C0AE  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  7381   0025F8  C0AF  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  7382   0025FC  ECB5  F021         	call	___fleq	;wreg free
  7383   002600  A0D8               	btfss	status,0,c
  7384   002602  EF05  F013         	goto	u7481
  7385   002606  EF07  F013         	goto	u7480
  7386   00260A                     u7481:
  7387   00260A  EF69  F013         	goto	l6051
  7388   00260E                     u7480:
  7389   00260E  C0A4  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  7390   002612  C0A5  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  7391   002616  C0A6  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  7392   00261A  C0A7  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  7393   00261E  C0B4  F037         	movff	RGB_to_HSV@b,___flsub@a
  7394   002622  C0B5  F038         	movff	RGB_to_HSV@b+1,___flsub@a+1
  7395   002626  C0B6  F039         	movff	RGB_to_HSV@b+2,___flsub@a+2
  7396   00262A  C0B7  F03A         	movff	RGB_to_HSV@b+3,___flsub@a+3
  7397   00262E  C0B0  F033         	movff	RGB_to_HSV@g,___flsub@b
  7398   002632  C0B1  F034         	movff	RGB_to_HSV@g+1,___flsub@b+1
  7399   002636  C0B2  F035         	movff	RGB_to_HSV@g+2,___flsub@b+2
  7400   00263A  C0B3  F036         	movff	RGB_to_HSV@g+3,___flsub@b+3
  7401   00263E  ECBF  F023         	call	___flsub	;wreg free
  7402   002642  C033  F03B         	movff	?___flsub,___fldiv@b
  7403   002646  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  7404   00264A  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  7405   00264E  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  7406   002652  EC68  F019         	call	___fldiv	;wreg free
  7407   002656  C03B  F080         	movff	?___fldiv,_RGB_to_HSV$2682
  7408   00265A  C03C  F081         	movff	?___fldiv+1,_RGB_to_HSV$2682+1
  7409   00265E  C03D  F082         	movff	?___fldiv+2,_RGB_to_HSV$2682+2
  7410   002662  C03E  F083         	movff	?___fldiv+3,_RGB_to_HSV$2682+3
  7411   002666  0E00               	movlw	0
  7412   002668  6E58               	movwf	custom_floatmodulo@y^0,c
  7413   00266A  0E00               	movlw	0
  7414   00266C  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  7415   00266E  0EC0               	movlw	192
  7416   002670  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  7417   002672  0E40               	movlw	64
  7418   002674  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  7419   002676  C080  F054         	movff	_RGB_to_HSV$2682,custom_floatmodulo@x
  7420   00267A  C081  F055         	movff	_RGB_to_HSV$2682+1,custom_floatmodulo@x+1
  7421   00267E  C082  F056         	movff	_RGB_to_HSV$2682+2,custom_floatmodulo@x+2
  7422   002682  C083  F057         	movff	_RGB_to_HSV$2682+3,custom_floatmodulo@x+3
  7423   002686  EC7A  F01E         	call	_custom_floatmodulo	;wreg free
  7424   00268A  C054  F084         	movff	?_custom_floatmodulo,_RGB_to_HSV$2683
  7425   00268E  C055  F085         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2683+1
  7426   002692  C056  F086         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2683+2
  7427   002696  C057  F087         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2683+3
  7428   00269A  C084  F01A         	movff	_RGB_to_HSV$2683,___flmul@b
  7429   00269E  C085  F01B         	movff	_RGB_to_HSV$2683+1,___flmul@b+1
  7430   0026A2  C086  F01C         	movff	_RGB_to_HSV$2683+2,___flmul@b+2
  7431   0026A6  C087  F01D         	movff	_RGB_to_HSV$2683+3,___flmul@b+3
  7432   0026AA  0E00               	movlw	0
  7433   0026AC  6E1E               	movwf	___flmul@a^0,c
  7434   0026AE  0E00               	movlw	0
  7435   0026B0  6E1F               	movwf	(___flmul@a+1)^0,c
  7436   0026B2  0E70               	movlw	112
  7437   0026B4  6E20               	movwf	(___flmul@a+2)^0,c
  7438   0026B6  0E42               	movlw	66
  7439   0026B8  6E21               	movwf	(___flmul@a+3)^0,c
  7440   0026BA  EC53  F017         	call	___flmul	;wreg free
  7441   0026BE  C01A  F0A0         	movff	?___flmul,RGB_to_HSV@H_temp
  7442   0026C2  C01B  F0A1         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  7443   0026C6  C01C  F0A2         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  7444   0026CA  C01D  F0A3         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  7445   0026CE  EF4F  F014         	goto	l6063
  7446   0026D2                     l6051:
  7447   0026D2  C0A8  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  7448   0026D6  C0A9  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  7449   0026DA  C0AA  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  7450   0026DE  C0AB  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  7451   0026E2  C0B0  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  7452   0026E6  C0B1  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  7453   0026EA  C0B2  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  7454   0026EE  C0B3  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  7455   0026F2  ECB5  F021         	call	___fleq	;wreg free
  7456   0026F6  A0D8               	btfss	status,0,c
  7457   0026F8  EF80  F013         	goto	u7491
  7458   0026FC  EF82  F013         	goto	u7490
  7459   002700                     u7491:
  7460   002700  EFDC  F013         	goto	l6057
  7461   002704                     u7490:
  7462   002704  C0A4  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  7463   002708  C0A5  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  7464   00270C  C0A6  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  7465   002710  C0A7  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  7466   002714  C0AC  F037         	movff	RGB_to_HSV@r,___flsub@a
  7467   002718  C0AD  F038         	movff	RGB_to_HSV@r+1,___flsub@a+1
  7468   00271C  C0AE  F039         	movff	RGB_to_HSV@r+2,___flsub@a+2
  7469   002720  C0AF  F03A         	movff	RGB_to_HSV@r+3,___flsub@a+3
  7470   002724  C0B4  F033         	movff	RGB_to_HSV@b,___flsub@b
  7471   002728  C0B5  F034         	movff	RGB_to_HSV@b+1,___flsub@b+1
  7472   00272C  C0B6  F035         	movff	RGB_to_HSV@b+2,___flsub@b+2
  7473   002730  C0B7  F036         	movff	RGB_to_HSV@b+3,___flsub@b+3
  7474   002734  ECBF  F023         	call	___flsub	;wreg free
  7475   002738  C033  F03B         	movff	?___flsub,___fldiv@b
  7476   00273C  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  7477   002740  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  7478   002744  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  7479   002748  EC68  F019         	call	___fldiv	;wreg free
  7480   00274C  C03B  F09C         	movff	?___fldiv,_RGB_to_HSV$2684
  7481   002750  C03C  F09D         	movff	?___fldiv+1,_RGB_to_HSV$2684+1
  7482   002754  C03D  F09E         	movff	?___fldiv+2,_RGB_to_HSV$2684+2
  7483   002758  C03E  F09F         	movff	?___fldiv+3,_RGB_to_HSV$2684+3
  7484   00275C  0E00               	movlw	0
  7485   00275E  6E05               	movwf	___fladd@a^0,c
  7486   002760  0E00               	movlw	0
  7487   002762  6E06               	movwf	(___fladd@a+1)^0,c
  7488   002764  0E00               	movlw	0
  7489   002766  6E07               	movwf	(___fladd@a+2)^0,c
  7490   002768  0E40               	movlw	64
  7491   00276A  6E08               	movwf	(___fladd@a+3)^0,c
  7492   00276C  C09C  F001         	movff	_RGB_to_HSV$2684,___fladd@b
  7493   002770  C09D  F002         	movff	_RGB_to_HSV$2684+1,___fladd@b+1
  7494   002774  C09E  F003         	movff	_RGB_to_HSV$2684+2,___fladd@b+2
  7495   002778  C09F  F004         	movff	_RGB_to_HSV$2684+3,___fladd@b+3
  7496   00277C  ECF3  F014         	call	___fladd	;wreg free
  7497   002780  C001  F01A         	movff	?___fladd,___flmul@b
  7498   002784  C002  F01B         	movff	?___fladd+1,___flmul@b+1
  7499   002788  C003  F01C         	movff	?___fladd+2,___flmul@b+2
  7500   00278C  C004  F01D         	movff	?___fladd+3,___flmul@b+3
  7501   002790  0E00               	movlw	0
  7502   002792  6E1E               	movwf	___flmul@a^0,c
  7503   002794  0E00               	movlw	0
  7504   002796  6E1F               	movwf	(___flmul@a+1)^0,c
  7505   002798  0E70               	movlw	112
  7506   00279A  6E20               	movwf	(___flmul@a+2)^0,c
  7507   00279C  0E42               	movlw	66
  7508   00279E  6E21               	movwf	(___flmul@a+3)^0,c
  7509   0027A0  EC53  F017         	call	___flmul	;wreg free
  7510   0027A4  C01A  F0A0         	movff	?___flmul,RGB_to_HSV@H_temp
  7511   0027A8  C01B  F0A1         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  7512   0027AC  C01C  F0A2         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  7513   0027B0  C01D  F0A3         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  7514   0027B4  EF4F  F014         	goto	l6063
  7515   0027B8                     l6057:
  7516   0027B8  C0A8  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  7517   0027BC  C0A9  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  7518   0027C0  C0AA  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  7519   0027C4  C0AB  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  7520   0027C8  C0B4  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  7521   0027CC  C0B5  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  7522   0027D0  C0B6  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  7523   0027D4  C0B7  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  7524   0027D8  ECB5  F021         	call	___fleq	;wreg free
  7525   0027DC  A0D8               	btfss	status,0,c
  7526   0027DE  EFF3  F013         	goto	u7501
  7527   0027E2  EFF5  F013         	goto	u7500
  7528   0027E6                     u7501:
  7529   0027E6  EF4F  F014         	goto	l133
  7530   0027EA                     u7500:
  7531   0027EA  C0A4  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  7532   0027EE  C0A5  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  7533   0027F2  C0A6  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  7534   0027F6  C0A7  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  7535   0027FA  C0B0  F037         	movff	RGB_to_HSV@g,___flsub@a
  7536   0027FE  C0B1  F038         	movff	RGB_to_HSV@g+1,___flsub@a+1
  7537   002802  C0B2  F039         	movff	RGB_to_HSV@g+2,___flsub@a+2
  7538   002806  C0B3  F03A         	movff	RGB_to_HSV@g+3,___flsub@a+3
  7539   00280A  C0AC  F033         	movff	RGB_to_HSV@r,___flsub@b
  7540   00280E  C0AD  F034         	movff	RGB_to_HSV@r+1,___flsub@b+1
  7541   002812  C0AE  F035         	movff	RGB_to_HSV@r+2,___flsub@b+2
  7542   002816  C0AF  F036         	movff	RGB_to_HSV@r+3,___flsub@b+3
  7543   00281A  ECBF  F023         	call	___flsub	;wreg free
  7544   00281E  C033  F03B         	movff	?___flsub,___fldiv@b
  7545   002822  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  7546   002826  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  7547   00282A  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  7548   00282E  EC68  F019         	call	___fldiv	;wreg free
  7549   002832  C03B  F09C         	movff	?___fldiv,_RGB_to_HSV$2684
  7550   002836  C03C  F09D         	movff	?___fldiv+1,_RGB_to_HSV$2684+1
  7551   00283A  C03D  F09E         	movff	?___fldiv+2,_RGB_to_HSV$2684+2
  7552   00283E  C03E  F09F         	movff	?___fldiv+3,_RGB_to_HSV$2684+3
  7553   002842  0E00               	movlw	0
  7554   002844  6E05               	movwf	___fladd@a^0,c
  7555   002846  0E00               	movlw	0
  7556   002848  6E06               	movwf	(___fladd@a+1)^0,c
  7557   00284A  0E80               	movlw	128
  7558   00284C  6E07               	movwf	(___fladd@a+2)^0,c
  7559   00284E  0E40               	movlw	64
  7560   002850  6E08               	movwf	(___fladd@a+3)^0,c
  7561   002852  C09C  F001         	movff	_RGB_to_HSV$2684,___fladd@b
  7562   002856  C09D  F002         	movff	_RGB_to_HSV$2684+1,___fladd@b+1
  7563   00285A  C09E  F003         	movff	_RGB_to_HSV$2684+2,___fladd@b+2
  7564   00285E  C09F  F004         	movff	_RGB_to_HSV$2684+3,___fladd@b+3
  7565   002862  ECF3  F014         	call	___fladd	;wreg free
  7566   002866  C001  F01A         	movff	?___fladd,___flmul@b
  7567   00286A  C002  F01B         	movff	?___fladd+1,___flmul@b+1
  7568   00286E  C003  F01C         	movff	?___fladd+2,___flmul@b+2
  7569   002872  C004  F01D         	movff	?___fladd+3,___flmul@b+3
  7570   002876  0E00               	movlw	0
  7571   002878  6E1E               	movwf	___flmul@a^0,c
  7572   00287A  0E00               	movlw	0
  7573   00287C  6E1F               	movwf	(___flmul@a+1)^0,c
  7574   00287E  0E70               	movlw	112
  7575   002880  6E20               	movwf	(___flmul@a+2)^0,c
  7576   002882  0E42               	movlw	66
  7577   002884  6E21               	movwf	(___flmul@a+3)^0,c
  7578   002886  EC53  F017         	call	___flmul	;wreg free
  7579   00288A  C01A  F0A0         	movff	?___flmul,RGB_to_HSV@H_temp
  7580   00288E  C01B  F0A1         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  7581   002892  C01C  F0A2         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  7582   002896  C01D  F0A3         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  7583   00289A  EF4F  F014         	goto	l6063
  7584   00289E                     l133:
  7585   00289E                     l6063:
  7586                           
  7587                           ;color.c: 158:     if (H_temp < 0) {H_temp = H_temp + 360;}
  7588   00289E  0100               	movlb	0	; () banked
  7589   0028A0  BFA3               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  7590   0028A2  EF57  F014         	goto	u7510
  7591   0028A6  EF55  F014         	goto	u7511
  7592   0028AA                     u7511:
  7593   0028AA  EF71  F014         	goto	l6067
  7594   0028AE                     u7510:
  7595   0028AE                     
  7596                           ; BSR set to: 0
  7597   0028AE  C0A0  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  7598   0028B2  C0A1  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  7599   0028B6  C0A2  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  7600   0028BA  C0A3  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  7601   0028BE  0E00               	movlw	0
  7602   0028C0  6E05               	movwf	___fladd@a^0,c
  7603   0028C2  0E00               	movlw	0
  7604   0028C4  6E06               	movwf	(___fladd@a+1)^0,c
  7605   0028C6  0EB4               	movlw	180
  7606   0028C8  6E07               	movwf	(___fladd@a+2)^0,c
  7607   0028CA  0E43               	movlw	67
  7608   0028CC  6E08               	movwf	(___fladd@a+3)^0,c
  7609   0028CE  ECF3  F014         	call	___fladd	;wreg free
  7610   0028D2  C001  F0A0         	movff	?___fladd,RGB_to_HSV@H_temp
  7611   0028D6  C002  F0A1         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  7612   0028DA  C003  F0A2         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  7613   0028DE  C004  F0A3         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  7614   0028E2                     l6067:
  7615                           
  7616                           ;color.c: 161:     *H = H_temp;
  7617   0028E2  C07A  FFD9         	movff	RGB_to_HSV@H,fsr2l
  7618   0028E6  C07B  FFDA         	movff	RGB_to_HSV@H+1,fsr2h
  7619   0028EA  C0A0  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  7620   0028EE  C0A1  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  7621   0028F2  C0A2  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  7622   0028F6  C0A3  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  7623   0028FA                     
  7624                           ;color.c: 164:     if (maxRGB == 0) {*S = 0;}
  7625   0028FA  C0A8  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  7626   0028FE  C0A9  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  7627   002902  C0AA  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  7628   002906  C0AB  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  7629   00290A  0E00               	movlw	0
  7630   00290C  6E05               	movwf	___fleq@ff2^0,c
  7631   00290E  0E00               	movlw	0
  7632   002910  6E06               	movwf	(___fleq@ff2+1)^0,c
  7633   002912  0E00               	movlw	0
  7634   002914  6E07               	movwf	(___fleq@ff2+2)^0,c
  7635   002916  0E00               	movlw	0
  7636   002918  6E08               	movwf	(___fleq@ff2+3)^0,c
  7637   00291A  ECB5  F021         	call	___fleq	;wreg free
  7638   00291E  A0D8               	btfss	status,0,c
  7639   002920  EF94  F014         	goto	u7521
  7640   002924  EF96  F014         	goto	u7520
  7641   002928                     u7521:
  7642   002928  EFA4  F014         	goto	l6073
  7643   00292C                     u7520:
  7644   00292C  C07C  FFD9         	movff	RGB_to_HSV@S,fsr2l
  7645   002930  C07D  FFDA         	movff	RGB_to_HSV@S+1,fsr2h
  7646   002934  0E00               	movlw	0
  7647   002936  6EDE               	movwf	postinc2,c
  7648   002938  0E00               	movlw	0
  7649   00293A  6EDE               	movwf	postinc2,c
  7650   00293C  0E00               	movlw	0
  7651   00293E  6EDE               	movwf	postinc2,c
  7652   002940  0E00               	movlw	0
  7653   002942  6EDD               	movwf	postdec2,c
  7654   002944  EFD4  F014         	goto	l139
  7655   002948                     l6073:
  7656                           
  7657                           ;color.c: 167:         *S = (deltaRGB/maxRGB) * 100;
  7658   002948  C0A8  F03F         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  7659   00294C  C0A9  F040         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  7660   002950  C0AA  F041         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  7661   002954  C0AB  F042         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  7662   002958  C0A4  F03B         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  7663   00295C  C0A5  F03C         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  7664   002960  C0A6  F03D         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  7665   002964  C0A7  F03E         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  7666   002968  EC68  F019         	call	___fldiv	;wreg free
  7667   00296C  C03B  F01A         	movff	?___fldiv,___flmul@b
  7668   002970  C03C  F01B         	movff	?___fldiv+1,___flmul@b+1
  7669   002974  C03D  F01C         	movff	?___fldiv+2,___flmul@b+2
  7670   002978  C03E  F01D         	movff	?___fldiv+3,___flmul@b+3
  7671   00297C  0E00               	movlw	0
  7672   00297E  6E1E               	movwf	___flmul@a^0,c
  7673   002980  0E00               	movlw	0
  7674   002982  6E1F               	movwf	(___flmul@a+1)^0,c
  7675   002984  0EC8               	movlw	200
  7676   002986  6E20               	movwf	(___flmul@a+2)^0,c
  7677   002988  0E42               	movlw	66
  7678   00298A  6E21               	movwf	(___flmul@a+3)^0,c
  7679   00298C  EC53  F017         	call	___flmul	;wreg free
  7680   002990  C07C  FFD9         	movff	RGB_to_HSV@S,fsr2l
  7681   002994  C07D  FFDA         	movff	RGB_to_HSV@S+1,fsr2h
  7682   002998  C01A  FFDE         	movff	?___flmul,postinc2
  7683   00299C  C01B  FFDE         	movff	?___flmul+1,postinc2
  7684   0029A0  C01C  FFDE         	movff	?___flmul+2,postinc2
  7685   0029A4  C01D  FFDE         	movff	?___flmul+3,postinc2
  7686   0029A8                     l139:
  7687                           
  7688                           ;color.c: 171:     *V = maxRGB * 100;
  7689   0029A8  C0A8  F01A         	movff	RGB_to_HSV@maxRGB,___flmul@b
  7690   0029AC  C0A9  F01B         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  7691   0029B0  C0AA  F01C         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  7692   0029B4  C0AB  F01D         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  7693   0029B8  0E00               	movlw	0
  7694   0029BA  6E1E               	movwf	___flmul@a^0,c
  7695   0029BC  0E00               	movlw	0
  7696   0029BE  6E1F               	movwf	(___flmul@a+1)^0,c
  7697   0029C0  0EC8               	movlw	200
  7698   0029C2  6E20               	movwf	(___flmul@a+2)^0,c
  7699   0029C4  0E42               	movlw	66
  7700   0029C6  6E21               	movwf	(___flmul@a+3)^0,c
  7701   0029C8  EC53  F017         	call	___flmul	;wreg free
  7702   0029CC  C07E  FFD9         	movff	RGB_to_HSV@V,fsr2l
  7703   0029D0  C07F  FFDA         	movff	RGB_to_HSV@V+1,fsr2h
  7704   0029D4  C01A  FFDE         	movff	?___flmul,postinc2
  7705   0029D8  C01B  FFDE         	movff	?___flmul+1,postinc2
  7706   0029DC  C01C  FFDE         	movff	?___flmul+2,postinc2
  7707   0029E0  C01D  FFDE         	movff	?___flmul+3,postinc2
  7708   0029E4  0012               	return		;funcret
  7709   0029E6                     __end_of_RGB_to_HSV:
  7710                           	callstack 0
  7711                           
  7712 ;; *************** function _custom_floatmodulo *****************
  7713 ;; Defined at:
  7714 ;;		line 114 in file "color.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  x               4   83[COMRAM] float 
  7717 ;;  y               4   87[COMRAM] float 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  remainder       4    4[BANK0 ] float 
  7720 ;;  quotient        4    0[BANK0 ] float 
  7721 ;;  intPart         2    8[BANK0 ] int 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  4   83[COMRAM] float 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7731 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7732 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;Total ram usage:       18 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 2
  7738 ;; This function calls:
  7739 ;;		___fldiv
  7740 ;;		___fleq
  7741 ;;		___flmul
  7742 ;;		___flsub
  7743 ;;		___fltol
  7744 ;;		___xxtofl
  7745 ;; This function is called by:
  7746 ;;		_RGB_to_HSV
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text38
  7751   003CF4                     __ptext38:
  7752                           	callstack 0
  7753   003CF4                     _custom_floatmodulo:
  7754                           	callstack 26
  7755   003CF4                     
  7756                           ;color.c: 116:     if (y == 0.0) {
  7757   003CF4  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  7758   003CF8  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  7759   003CFC  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  7760   003D00  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  7761   003D04  0E00               	movlw	0
  7762   003D06  6E05               	movwf	___fleq@ff2^0,c
  7763   003D08  0E00               	movlw	0
  7764   003D0A  6E06               	movwf	(___fleq@ff2+1)^0,c
  7765   003D0C  0E00               	movlw	0
  7766   003D0E  6E07               	movwf	(___fleq@ff2+2)^0,c
  7767   003D10  0E00               	movlw	0
  7768   003D12  6E08               	movwf	(___fleq@ff2+3)^0,c
  7769   003D14  ECB5  F021         	call	___fleq	;wreg free
  7770   003D18  A0D8               	btfss	status,0,c
  7771   003D1A  EF91  F01E         	goto	u7391
  7772   003D1E  EF93  F01E         	goto	u7390
  7773   003D22                     u7391:
  7774   003D22  EF9D  F01E         	goto	l6001
  7775   003D26                     u7390:
  7776   003D26                     
  7777                           ;color.c: 117:         return 0.0;
  7778   003D26  0E00               	movlw	0
  7779   003D28  6E54               	movwf	?_custom_floatmodulo^0,c
  7780   003D2A  0E00               	movlw	0
  7781   003D2C  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  7782   003D2E  0E00               	movlw	0
  7783   003D30  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  7784   003D32  0E00               	movlw	0
  7785   003D34  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  7786   003D36  EF05  F01F         	goto	l103
  7787   003D3A                     l6001:
  7788                           
  7789                           ;color.c: 121:     float quotient = x / y;
  7790   003D3A  C054  F03B         	movff	custom_floatmodulo@x,___fldiv@b
  7791   003D3E  C055  F03C         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  7792   003D42  C056  F03D         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  7793   003D46  C057  F03E         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  7794   003D4A  C058  F03F         	movff	custom_floatmodulo@y,___fldiv@a
  7795   003D4E  C059  F040         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  7796   003D52  C05A  F041         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  7797   003D56  C05B  F042         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  7798   003D5A  EC68  F019         	call	___fldiv	;wreg free
  7799   003D5E  C03B  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  7800   003D62  C03C  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  7801   003D66  C03D  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  7802   003D6A  C03E  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  7803                           
  7804                           ;color.c: 124:     int intPart = (int)quotient;
  7805   003D6E  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  7806   003D72  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  7807   003D76  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  7808   003D7A  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  7809   003D7E  EC06  F01F         	call	___fltol	;wreg free
  7810   003D82  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  7811   003D86  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  7812   003D8A                     
  7813                           ;color.c: 127:     float remainder = x - intPart * y;
  7814   003D8A  C054  F033         	movff	custom_floatmodulo@x,___flsub@b
  7815   003D8E  C055  F034         	movff	custom_floatmodulo@x+1,___flsub@b+1
  7816   003D92  C056  F035         	movff	custom_floatmodulo@x+2,___flsub@b+2
  7817   003D96  C057  F036         	movff	custom_floatmodulo@x+3,___flsub@b+3
  7818   003D9A  C058  F01E         	movff	custom_floatmodulo@y,___flmul@a
  7819   003D9E  C059  F01F         	movff	custom_floatmodulo@y+1,___flmul@a+1
  7820   003DA2  C05A  F020         	movff	custom_floatmodulo@y+2,___flmul@a+2
  7821   003DA6  C05B  F021         	movff	custom_floatmodulo@y+3,___flmul@a+3
  7822   003DAA  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  7823   003DAE  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  7824   003DB2  0E00               	movlw	0
  7825   003DB4  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  7826   003DB6  0EFF               	movlw	-1
  7827   003DB8  6E0E               	movwf	(___xxtofl@val+2)^0,c
  7828   003DBA  6E0F               	movwf	(___xxtofl@val+3)^0,c
  7829   003DBC  0E01               	movlw	1
  7830   003DBE  ECA0  F01D         	call	___xxtofl
  7831   003DC2  C00C  F01A         	movff	?___xxtofl,___flmul@b
  7832   003DC6  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  7833   003DCA  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  7834   003DCE  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  7835   003DD2  EC53  F017         	call	___flmul	;wreg free
  7836   003DD6  C01A  F037         	movff	?___flmul,___flsub@a
  7837   003DDA  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  7838   003DDE  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  7839   003DE2  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  7840   003DE6  ECBF  F023         	call	___flsub	;wreg free
  7841   003DEA  C033  F064         	movff	?___flsub,custom_floatmodulo@remainder
  7842   003DEE  C034  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  7843   003DF2  C035  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  7844   003DF6  C036  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  7845   003DFA                     
  7846                           ;color.c: 129:     return remainder;
  7847   003DFA  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  7848   003DFE  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  7849   003E02  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  7850   003E06  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  7851   003E0A                     l103:
  7852   003E0A  0012               	return		;funcret
  7853   003E0C                     __end_of_custom_floatmodulo:
  7854                           	callstack 0
  7855                           
  7856 ;; *************** function ___xxtofl *****************
  7857 ;; Defined at:
  7858 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  sign            1    wreg     unsigned char 
  7861 ;;  val             4   11[COMRAM] long 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  sign            1   19[COMRAM] unsigned char 
  7864 ;;  arg             4   21[COMRAM] unsigned long 
  7865 ;;  exp             1   20[COMRAM] unsigned char 
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  4   11[COMRAM] unsigned char 
  7868 ;; Registers used:
  7869 ;;		wreg, status,2, status,0
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;Total ram usage:       14 bytes
  7880 ;; Hardware stack levels used: 1
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_custom_floatmodulo
  7885 ;;		_color_cardCheck
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text39
  7890   003B40                     __ptext39:
  7891                           	callstack 0
  7892   003B40                     ___xxtofl:
  7893                           	callstack 29
  7894                           
  7895                           ;incstack = 0
  7896                           ;___xxtofl@sign stored from wreg
  7897   003B40  6E14               	movwf	___xxtofl@sign^0,c
  7898   003B42  5014               	movf	___xxtofl@sign^0,w,c
  7899   003B44  B4D8               	btfsc	status,2,c
  7900   003B46  EFA7  F01D         	goto	u4591
  7901   003B4A  EFA9  F01D         	goto	u4590
  7902   003B4E                     u4591:
  7903   003B4E  EFCB  F01D         	goto	l1108
  7904   003B52                     u4590:
  7905   003B52  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7906   003B54  EFB0  F01D         	goto	u4600
  7907   003B58  EFAE  F01D         	goto	u4601
  7908   003B5C                     u4601:
  7909   003B5C  EFCB  F01D         	goto	l1108
  7910   003B60                     u4600:
  7911   003B60  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  7912   003B64  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  7913   003B68  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  7914   003B6C  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  7915   003B70  1E10               	comf	??___xxtofl^0,f,c
  7916   003B72  1E11               	comf	(??___xxtofl+1)^0,f,c
  7917   003B74  1E12               	comf	(??___xxtofl+2)^0,f,c
  7918   003B76  1E13               	comf	(??___xxtofl+3)^0,f,c
  7919   003B78  2A10               	incf	??___xxtofl^0,f,c
  7920   003B7A  0E00               	movlw	0
  7921   003B7C  2211               	addwfc	(??___xxtofl+1)^0,f,c
  7922   003B7E  2212               	addwfc	(??___xxtofl+2)^0,f,c
  7923   003B80  2213               	addwfc	(??___xxtofl+3)^0,f,c
  7924   003B82  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  7925   003B86  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  7926   003B8A  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  7927   003B8E  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  7928   003B92  EFD3  F01D         	goto	l4181
  7929   003B96                     l1108:
  7930   003B96  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  7931   003B9A  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7932   003B9E  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7933   003BA2  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7934   003BA6                     l4181:
  7935   003BA6  500C               	movf	___xxtofl@val^0,w,c
  7936   003BA8  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  7937   003BAA  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  7938   003BAC  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  7939   003BAE  A4D8               	btfss	status,2,c
  7940   003BB0  EFDC  F01D         	goto	u4611
  7941   003BB4  EFDE  F01D         	goto	u4610
  7942   003BB8                     u4611:
  7943   003BB8  EFE8  F01D         	goto	l4187
  7944   003BBC                     u4610:
  7945   003BBC  0E00               	movlw	0
  7946   003BBE  6E0C               	movwf	?___xxtofl^0,c
  7947   003BC0  0E00               	movlw	0
  7948   003BC2  6E0D               	movwf	(?___xxtofl+1)^0,c
  7949   003BC4  0E00               	movlw	0
  7950   003BC6  6E0E               	movwf	(?___xxtofl+2)^0,c
  7951   003BC8  0E00               	movlw	0
  7952   003BCA  6E0F               	movwf	(?___xxtofl+3)^0,c
  7953   003BCC  EF79  F01E         	goto	l1111
  7954   003BD0                     l4187:
  7955   003BD0  0E96               	movlw	150
  7956   003BD2  6E15               	movwf	___xxtofl@exp^0,c
  7957   003BD4  EFF2  F01D         	goto	l4191
  7958   003BD8                     l4189:
  7959   003BD8  2A15               	incf	___xxtofl@exp^0,f,c
  7960   003BDA  90D8               	bcf	status,0,c
  7961   003BDC  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7962   003BDE  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7963   003BE0  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7964   003BE2  3216               	rrcf	___xxtofl@arg^0,f,c
  7965   003BE4                     l4191:
  7966   003BE4  0E00               	movlw	0
  7967   003BE6  1416               	andwf	___xxtofl@arg^0,w,c
  7968   003BE8  6E10               	movwf	??___xxtofl^0,c
  7969   003BEA  0E00               	movlw	0
  7970   003BEC  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7971   003BEE  6E11               	movwf	(??___xxtofl+1)^0,c
  7972   003BF0  0E00               	movlw	0
  7973   003BF2  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7974   003BF4  6E12               	movwf	(??___xxtofl+2)^0,c
  7975   003BF6  0EFE               	movlw	254
  7976   003BF8  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7977   003BFA  6E13               	movwf	(??___xxtofl+3)^0,c
  7978   003BFC  5010               	movf	??___xxtofl^0,w,c
  7979   003BFE  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7980   003C00  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7981   003C02  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7982   003C04  A4D8               	btfss	status,2,c
  7983   003C06  EF07  F01E         	goto	u4621
  7984   003C0A  EF09  F01E         	goto	u4620
  7985   003C0E                     u4621:
  7986   003C0E  EFEC  F01D         	goto	l4189
  7987   003C12                     u4620:
  7988   003C12  EF17  F01E         	goto	l1115
  7989   003C16                     l4193:
  7990   003C16  2A15               	incf	___xxtofl@exp^0,f,c
  7991   003C18  0E01               	movlw	1
  7992   003C1A  2616               	addwf	___xxtofl@arg^0,f,c
  7993   003C1C  0E00               	movlw	0
  7994   003C1E  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  7995   003C20  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  7996   003C22  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  7997   003C24  90D8               	bcf	status,0,c
  7998   003C26  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7999   003C28  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  8000   003C2A  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  8001   003C2C  3216               	rrcf	___xxtofl@arg^0,f,c
  8002   003C2E                     l1115:
  8003   003C2E  0E00               	movlw	0
  8004   003C30  1416               	andwf	___xxtofl@arg^0,w,c
  8005   003C32  6E10               	movwf	??___xxtofl^0,c
  8006   003C34  0E00               	movlw	0
  8007   003C36  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  8008   003C38  6E11               	movwf	(??___xxtofl+1)^0,c
  8009   003C3A  0E00               	movlw	0
  8010   003C3C  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  8011   003C3E  6E12               	movwf	(??___xxtofl+2)^0,c
  8012   003C40  0EFF               	movlw	255
  8013   003C42  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  8014   003C44  6E13               	movwf	(??___xxtofl+3)^0,c
  8015   003C46  5010               	movf	??___xxtofl^0,w,c
  8016   003C48  1011               	iorwf	(??___xxtofl+1)^0,w,c
  8017   003C4A  1012               	iorwf	(??___xxtofl+2)^0,w,c
  8018   003C4C  1013               	iorwf	(??___xxtofl+3)^0,w,c
  8019   003C4E  A4D8               	btfss	status,2,c
  8020   003C50  EF2C  F01E         	goto	u4631
  8021   003C54  EF2E  F01E         	goto	u4630
  8022   003C58                     u4631:
  8023   003C58  EF0B  F01E         	goto	l4193
  8024   003C5C                     u4630:
  8025   003C5C  EF36  F01E         	goto	l4201
  8026   003C60                     l4199:
  8027   003C60  0615               	decf	___xxtofl@exp^0,f,c
  8028   003C62  90D8               	bcf	status,0,c
  8029   003C64  3616               	rlcf	___xxtofl@arg^0,f,c
  8030   003C66  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  8031   003C68  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  8032   003C6A  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  8033   003C6C                     l4201:
  8034   003C6C  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  8035   003C6E  EF3B  F01E         	goto	u4641
  8036   003C72  EF3D  F01E         	goto	u4640
  8037   003C76                     u4641:
  8038   003C76  EF45  F01E         	goto	l1122
  8039   003C7A                     u4640:
  8040   003C7A  0E02               	movlw	2
  8041   003C7C  6015               	cpfslt	___xxtofl@exp^0,c
  8042   003C7E  EF43  F01E         	goto	u4651
  8043   003C82  EF45  F01E         	goto	u4650
  8044   003C86                     u4651:
  8045   003C86  EF30  F01E         	goto	l4199
  8046   003C8A                     u4650:
  8047   003C8A                     l1122:
  8048   003C8A  B015               	btfsc	___xxtofl@exp^0,0,c
  8049   003C8C  EF4A  F01E         	goto	u4661
  8050   003C90  EF4C  F01E         	goto	u4660
  8051   003C94                     u4661:
  8052   003C94  EF4D  F01E         	goto	l4207
  8053   003C98                     u4660:
  8054   003C98  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  8055   003C9A                     l4207:
  8056   003C9A  90D8               	bcf	status,0,c
  8057   003C9C  3215               	rrcf	___xxtofl@exp^0,f,c
  8058   003C9E  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  8059   003CA2  6A11               	clrf	(??___xxtofl+1)^0,c
  8060   003CA4  6A12               	clrf	(??___xxtofl+2)^0,c
  8061   003CA6  6A13               	clrf	(??___xxtofl+3)^0,c
  8062   003CA8  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  8063   003CAC  6A12               	clrf	(??___xxtofl+2)^0,c
  8064   003CAE  6A11               	clrf	(??___xxtofl+1)^0,c
  8065   003CB0  6A10               	clrf	??___xxtofl^0,c
  8066   003CB2  5010               	movf	??___xxtofl^0,w,c
  8067   003CB4  1216               	iorwf	___xxtofl@arg^0,f,c
  8068   003CB6  5011               	movf	(??___xxtofl+1)^0,w,c
  8069   003CB8  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  8070   003CBA  5012               	movf	(??___xxtofl+2)^0,w,c
  8071   003CBC  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  8072   003CBE  5013               	movf	(??___xxtofl+3)^0,w,c
  8073   003CC0  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  8074   003CC2  5014               	movf	___xxtofl@sign^0,w,c
  8075   003CC4  B4D8               	btfsc	status,2,c
  8076   003CC6  EF67  F01E         	goto	u4671
  8077   003CCA  EF69  F01E         	goto	u4670
  8078   003CCE                     u4671:
  8079   003CCE  EF71  F01E         	goto	l4217
  8080   003CD2                     u4670:
  8081   003CD2  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  8082   003CD4  EF70  F01E         	goto	u4680
  8083   003CD8  EF6E  F01E         	goto	u4681
  8084   003CDC                     u4681:
  8085   003CDC  EF71  F01E         	goto	l4217
  8086   003CE0                     u4680:
  8087   003CE0  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  8088   003CE2                     l4217:
  8089   003CE2  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  8090   003CE6  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  8091   003CEA  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  8092   003CEE  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  8093   003CF2                     l1111:
  8094   003CF2  0012               	return		;funcret
  8095   003CF4                     __end_of___xxtofl:
  8096                           	callstack 0
  8097                           
  8098 ;; *************** function ___fltol *****************
  8099 ;; Defined at:
  8100 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  f1              4    0[COMRAM] unsigned char 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  exp1            1    9[COMRAM] unsigned char 
  8105 ;;  sign1           1    8[COMRAM] unsigned char 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  4    0[COMRAM] long 
  8108 ;; Registers used:
  8109 ;;		wreg, status,2, status,0
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8118 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8119 ;;Total ram usage:       10 bytes
  8120 ;; Hardware stack levels used: 1
  8121 ;; This function calls:
  8122 ;;		Nothing
  8123 ;; This function is called by:
  8124 ;;		_custom_floatmodulo
  8125 ;;		_efgtoa
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text40
  8130   003E0C                     __ptext40:
  8131                           	callstack 0
  8132   003E0C                     ___fltol:
  8133                           	callstack 25
  8134   003E0C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  8135   003E0E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  8136   003E10  6E0A               	movwf	___fltol@exp1^0,c
  8137   003E12  500A               	movf	___fltol@exp1^0,w,c
  8138   003E14  A4D8               	btfss	status,2,c
  8139   003E16  EF0F  F01F         	goto	u6621
  8140   003E1A  EF11  F01F         	goto	u6620
  8141   003E1E                     u6621:
  8142   003E1E  EF1B  F01F         	goto	l5479
  8143   003E22                     u6620:
  8144   003E22                     l5475:
  8145   003E22  0E00               	movlw	0
  8146   003E24  6E01               	movwf	?___fltol^0,c
  8147   003E26  0E00               	movlw	0
  8148   003E28  6E02               	movwf	(?___fltol+1)^0,c
  8149   003E2A  0E00               	movlw	0
  8150   003E2C  6E03               	movwf	(?___fltol+2)^0,c
  8151   003E2E  0E00               	movlw	0
  8152   003E30  6E04               	movwf	(?___fltol+3)^0,c
  8153   003E32  EF88  F01F         	goto	l750
  8154   003E36                     l5479:
  8155   003E36  C001  F005         	movff	___fltol@f1,??___fltol
  8156   003E3A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  8157   003E3E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  8158   003E42  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  8159   003E46  0E20               	movlw	32
  8160   003E48  EF2B  F01F         	goto	u6630
  8161   003E4C                     u6635:
  8162   003E4C  90D8               	bcf	status,0,c
  8163   003E4E  3208               	rrcf	(??___fltol+3)^0,f,c
  8164   003E50  3207               	rrcf	(??___fltol+2)^0,f,c
  8165   003E52  3206               	rrcf	(??___fltol+1)^0,f,c
  8166   003E54  3205               	rrcf	??___fltol^0,f,c
  8167   003E56                     u6630:
  8168   003E56  2EE8               	decfsz	wreg,f,c
  8169   003E58  EF26  F01F         	goto	u6635
  8170   003E5C  5005               	movf	??___fltol^0,w,c
  8171   003E5E  6E09               	movwf	___fltol@sign1^0,c
  8172   003E60  8E03               	bsf	(___fltol@f1+2)^0,7,c
  8173   003E62  0EFF               	movlw	255
  8174   003E64  1601               	andwf	___fltol@f1^0,f,c
  8175   003E66  0EFF               	movlw	255
  8176   003E68  1602               	andwf	(___fltol@f1+1)^0,f,c
  8177   003E6A  0EFF               	movlw	255
  8178   003E6C  1603               	andwf	(___fltol@f1+2)^0,f,c
  8179   003E6E  0E00               	movlw	0
  8180   003E70  1604               	andwf	(___fltol@f1+3)^0,f,c
  8181   003E72  0E96               	movlw	150
  8182   003E74  5E0A               	subwf	___fltol@exp1^0,f,c
  8183   003E76  BE0A               	btfsc	___fltol@exp1^0,7,c
  8184   003E78  EF42  F01F         	goto	u6640
  8185   003E7C  EF40  F01F         	goto	u6641
  8186   003E80                     u6641:
  8187   003E80  EF58  F01F         	goto	l5499
  8188   003E84                     u6640:
  8189   003E84  500A               	movf	___fltol@exp1^0,w,c
  8190   003E86  0A80               	xorlw	128
  8191   003E88  0F97               	addlw	151
  8192   003E8A  B0D8               	btfsc	status,0,c
  8193   003E8C  EF4A  F01F         	goto	u6651
  8194   003E90  EF4C  F01F         	goto	u6650
  8195   003E94                     u6651:
  8196   003E94  EF4E  F01F         	goto	l5495
  8197   003E98                     u6650:
  8198   003E98  EF11  F01F         	goto	l5475
  8199   003E9C                     l5495:
  8200   003E9C  90D8               	bcf	status,0,c
  8201   003E9E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8202   003EA0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8203   003EA2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8204   003EA4  3201               	rrcf	___fltol@f1^0,f,c
  8205   003EA6  3E0A               	incfsz	___fltol@exp1^0,f,c
  8206   003EA8  EF4E  F01F         	goto	l5495
  8207   003EAC  EF70  F01F         	goto	l5509
  8208   003EB0                     l5499:
  8209   003EB0  0E1F               	movlw	31
  8210   003EB2  640A               	cpfsgt	___fltol@exp1^0,c
  8211   003EB4  EF5E  F01F         	goto	u6661
  8212   003EB8  EF60  F01F         	goto	u6660
  8213   003EBC                     u6661:
  8214   003EBC  EF68  F01F         	goto	l5507
  8215   003EC0                     u6660:
  8216   003EC0  EF11  F01F         	goto	l5475
  8217   003EC4                     l5505:
  8218   003EC4  90D8               	bcf	status,0,c
  8219   003EC6  3601               	rlcf	___fltol@f1^0,f,c
  8220   003EC8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8221   003ECA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8222   003ECC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8223   003ECE  060A               	decf	___fltol@exp1^0,f,c
  8224   003ED0                     l5507:
  8225   003ED0  500A               	movf	___fltol@exp1^0,w,c
  8226   003ED2  A4D8               	btfss	status,2,c
  8227   003ED4  EF6E  F01F         	goto	u6671
  8228   003ED8  EF70  F01F         	goto	u6670
  8229   003EDC                     u6671:
  8230   003EDC  EF62  F01F         	goto	l5505
  8231   003EE0                     u6670:
  8232   003EE0                     l5509:
  8233   003EE0  5009               	movf	___fltol@sign1^0,w,c
  8234   003EE2  B4D8               	btfsc	status,2,c
  8235   003EE4  EF76  F01F         	goto	u6681
  8236   003EE8  EF78  F01F         	goto	u6680
  8237   003EEC                     u6681:
  8238   003EEC  EF80  F01F         	goto	l5513
  8239   003EF0                     u6680:
  8240   003EF0  1E04               	comf	(___fltol@f1+3)^0,f,c
  8241   003EF2  1E03               	comf	(___fltol@f1+2)^0,f,c
  8242   003EF4  1E02               	comf	(___fltol@f1+1)^0,f,c
  8243   003EF6  6C01               	negf	___fltol@f1^0,c
  8244   003EF8  0E00               	movlw	0
  8245   003EFA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8246   003EFC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8247   003EFE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8248   003F00                     l5513:
  8249   003F00  C001  F001         	movff	___fltol@f1,?___fltol
  8250   003F04  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  8251   003F08  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  8252   003F0C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  8253   003F10                     l750:
  8254   003F10  0012               	return		;funcret
  8255   003F12                     __end_of___fltol:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function ___flsub *****************
  8259 ;; Defined at:
  8260 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  b               4   50[COMRAM] long 
  8263 ;;  a               4   54[COMRAM] long 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  4   50[COMRAM] long 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2, status,0, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;Total ram usage:        8 bytes
  8280 ;; Hardware stack levels used: 1
  8281 ;; Hardware stack levels required when called: 1
  8282 ;; This function calls:
  8283 ;;		___fladd
  8284 ;; This function is called by:
  8285 ;;		_custom_floatmodulo
  8286 ;;		_RGB_to_HSV
  8287 ;;		_efgtoa
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text41
  8292   00477E                     __ptext41:
  8293                           	callstack 0
  8294   00477E                     ___flsub:
  8295                           	callstack 24
  8296   00477E  0E00               	movlw	0
  8297   004780  1A37               	xorwf	___flsub@a^0,f,c
  8298   004782  0E00               	movlw	0
  8299   004784  1A38               	xorwf	(___flsub@a+1)^0,f,c
  8300   004786  0E00               	movlw	0
  8301   004788  1A39               	xorwf	(___flsub@a+2)^0,f,c
  8302   00478A  0E80               	movlw	128
  8303   00478C  1A3A               	xorwf	(___flsub@a+3)^0,f,c
  8304   00478E  C033  F001         	movff	___flsub@b,___fladd@b
  8305   004792  C034  F002         	movff	___flsub@b+1,___fladd@b+1
  8306   004796  C035  F003         	movff	___flsub@b+2,___fladd@b+2
  8307   00479A  C036  F004         	movff	___flsub@b+3,___fladd@b+3
  8308   00479E  C037  F005         	movff	___flsub@a,___fladd@a
  8309   0047A2  C038  F006         	movff	___flsub@a+1,___fladd@a+1
  8310   0047A6  C039  F007         	movff	___flsub@a+2,___fladd@a+2
  8311   0047AA  C03A  F008         	movff	___flsub@a+3,___fladd@a+3
  8312   0047AE  ECF3  F014         	call	___fladd	;wreg free
  8313   0047B2  C001  F033         	movff	?___fladd,?___flsub
  8314   0047B6  C002  F034         	movff	?___fladd+1,?___flsub+1
  8315   0047BA  C003  F035         	movff	?___fladd+2,?___flsub+2
  8316   0047BE  C004  F036         	movff	?___fladd+3,?___flsub+3
  8317   0047C2  0012               	return		;funcret
  8318   0047C4                     __end_of___flsub:
  8319                           	callstack 0
  8320                           
  8321 ;; *************** function ___fladd *****************
  8322 ;; Defined at:
  8323 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  b               4    0[COMRAM] long 
  8326 ;;  a               4    4[COMRAM] long 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  grs             1   15[COMRAM] unsigned char 
  8329 ;;  bexp            1   14[COMRAM] unsigned char 
  8330 ;;  aexp            1   13[COMRAM] unsigned char 
  8331 ;;  signs           1   12[COMRAM] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  4    0[COMRAM] unsigned char 
  8334 ;; Registers used:
  8335 ;;		wreg, status,2, status,0
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8341 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;Total ram usage:       16 bytes
  8346 ;; Hardware stack levels used: 1
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_RGB_to_HSV
  8351 ;;		___flsub
  8352 ;;		_efgtoa
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text42
  8357   0029E6                     __ptext42:
  8358                           	callstack 0
  8359   0029E6                     ___fladd:
  8360                           	callstack 24
  8361   0029E6  5004               	movf	(___fladd@b+3)^0,w,c
  8362   0029E8  0B80               	andlw	128
  8363   0029EA  6E0D               	movwf	___fladd@signs^0,c
  8364   0029EC  5004               	movf	(___fladd@b+3)^0,w,c
  8365   0029EE  2404               	addwf	(___fladd@b+3)^0,w,c
  8366   0029F0  6E0F               	movwf	___fladd@bexp^0,c
  8367   0029F2  AE03               	btfss	(___fladd@b+2)^0,7,c
  8368   0029F4  EFFE  F014         	goto	u5711
  8369   0029F8  EF00  F015         	goto	u5710
  8370   0029FC                     u5711:
  8371   0029FC  EF01  F015         	goto	l4943
  8372   002A00                     u5710:
  8373   002A00  800F               	bsf	___fladd@bexp^0,0,c
  8374   002A02                     l4943:
  8375   002A02  500F               	movf	___fladd@bexp^0,w,c
  8376   002A04  B4D8               	btfsc	status,2,c
  8377   002A06  EF07  F015         	goto	u5721
  8378   002A0A  EF09  F015         	goto	u5720
  8379   002A0E                     u5721:
  8380   002A0E  EF1E  F015         	goto	l4953
  8381   002A12                     u5720:
  8382   002A12  280F               	incf	___fladd@bexp^0,w,c
  8383   002A14  A4D8               	btfss	status,2,c
  8384   002A16  EF0F  F015         	goto	u5731
  8385   002A1A  EF11  F015         	goto	u5730
  8386   002A1E                     u5731:
  8387   002A1E  EF19  F015         	goto	l4949
  8388   002A22                     u5730:
  8389   002A22  0E00               	movlw	0
  8390   002A24  6E01               	movwf	___fladd@b^0,c
  8391   002A26  0E00               	movlw	0
  8392   002A28  6E02               	movwf	(___fladd@b+1)^0,c
  8393   002A2A  0E00               	movlw	0
  8394   002A2C  6E03               	movwf	(___fladd@b+2)^0,c
  8395   002A2E  0E00               	movlw	0
  8396   002A30  6E04               	movwf	(___fladd@b+3)^0,c
  8397   002A32                     l4949:
  8398   002A32  8E03               	bsf	(___fladd@b+2)^0,7,c
  8399   002A34  0E00               	movlw	0
  8400   002A36  6E04               	movwf	(___fladd@b+3)^0,c
  8401   002A38  EF26  F015         	goto	l4955
  8402   002A3C                     l4953:
  8403   002A3C  0E00               	movlw	0
  8404   002A3E  6E01               	movwf	___fladd@b^0,c
  8405   002A40  0E00               	movlw	0
  8406   002A42  6E02               	movwf	(___fladd@b+1)^0,c
  8407   002A44  0E00               	movlw	0
  8408   002A46  6E03               	movwf	(___fladd@b+2)^0,c
  8409   002A48  0E00               	movlw	0
  8410   002A4A  6E04               	movwf	(___fladd@b+3)^0,c
  8411   002A4C                     l4955:
  8412   002A4C  5008               	movf	(___fladd@a+3)^0,w,c
  8413   002A4E  0B80               	andlw	128
  8414   002A50  6E0E               	movwf	___fladd@aexp^0,c
  8415   002A52  500D               	movf	___fladd@signs^0,w,c
  8416   002A54  180E               	xorwf	___fladd@aexp^0,w,c
  8417   002A56  B4D8               	btfsc	status,2,c
  8418   002A58  EF30  F015         	goto	u5741
  8419   002A5C  EF32  F015         	goto	u5740
  8420   002A60                     u5741:
  8421   002A60  EF33  F015         	goto	l4961
  8422   002A64                     u5740:
  8423   002A64  8C0D               	bsf	___fladd@signs^0,6,c
  8424   002A66                     l4961:
  8425   002A66  5008               	movf	(___fladd@a+3)^0,w,c
  8426   002A68  2408               	addwf	(___fladd@a+3)^0,w,c
  8427   002A6A  6E0E               	movwf	___fladd@aexp^0,c
  8428   002A6C  AE07               	btfss	(___fladd@a+2)^0,7,c
  8429   002A6E  EF3B  F015         	goto	u5751
  8430   002A72  EF3D  F015         	goto	u5750
  8431   002A76                     u5751:
  8432   002A76  EF3E  F015         	goto	l4967
  8433   002A7A                     u5750:
  8434   002A7A  800E               	bsf	___fladd@aexp^0,0,c
  8435   002A7C                     l4967:
  8436   002A7C  500E               	movf	___fladd@aexp^0,w,c
  8437   002A7E  B4D8               	btfsc	status,2,c
  8438   002A80  EF44  F015         	goto	u5761
  8439   002A84  EF46  F015         	goto	u5760
  8440   002A88                     u5761:
  8441   002A88  EF5B  F015         	goto	l4977
  8442   002A8C                     u5760:
  8443   002A8C  280E               	incf	___fladd@aexp^0,w,c
  8444   002A8E  A4D8               	btfss	status,2,c
  8445   002A90  EF4C  F015         	goto	u5771
  8446   002A94  EF4E  F015         	goto	u5770
  8447   002A98                     u5771:
  8448   002A98  EF56  F015         	goto	l4973
  8449   002A9C                     u5770:
  8450   002A9C  0E00               	movlw	0
  8451   002A9E  6E05               	movwf	___fladd@a^0,c
  8452   002AA0  0E00               	movlw	0
  8453   002AA2  6E06               	movwf	(___fladd@a+1)^0,c
  8454   002AA4  0E00               	movlw	0
  8455   002AA6  6E07               	movwf	(___fladd@a+2)^0,c
  8456   002AA8  0E00               	movlw	0
  8457   002AAA  6E08               	movwf	(___fladd@a+3)^0,c
  8458   002AAC                     l4973:
  8459   002AAC  8E07               	bsf	(___fladd@a+2)^0,7,c
  8460   002AAE  0E00               	movlw	0
  8461   002AB0  6E08               	movwf	(___fladd@a+3)^0,c
  8462   002AB2  EF63  F015         	goto	l4979
  8463   002AB6                     l4977:
  8464   002AB6  0E00               	movlw	0
  8465   002AB8  6E05               	movwf	___fladd@a^0,c
  8466   002ABA  0E00               	movlw	0
  8467   002ABC  6E06               	movwf	(___fladd@a+1)^0,c
  8468   002ABE  0E00               	movlw	0
  8469   002AC0  6E07               	movwf	(___fladd@a+2)^0,c
  8470   002AC2  0E00               	movlw	0
  8471   002AC4  6E08               	movwf	(___fladd@a+3)^0,c
  8472   002AC6                     l4979:
  8473   002AC6  500F               	movf	___fladd@bexp^0,w,c
  8474   002AC8  5C0E               	subwf	___fladd@aexp^0,w,c
  8475   002ACA  B0D8               	btfsc	status,0,c
  8476   002ACC  EF6A  F015         	goto	u5781
  8477   002AD0  EF6C  F015         	goto	u5780
  8478   002AD4                     u5781:
  8479   002AD4  EF93  F015         	goto	l5015
  8480   002AD8                     u5780:
  8481   002AD8  AC0D               	btfss	___fladd@signs^0,6,c
  8482   002ADA  EF71  F015         	goto	u5791
  8483   002ADE  EF73  F015         	goto	u5790
  8484   002AE2                     u5791:
  8485   002AE2  EF75  F015         	goto	l4985
  8486   002AE6                     u5790:
  8487   002AE6  0E80               	movlw	128
  8488   002AE8  1A0D               	xorwf	___fladd@signs^0,f,c
  8489   002AEA                     l4985:
  8490   002AEA  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8491   002AEE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8492   002AF2  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8493   002AF6  C001  F010         	movff	___fladd@b,___fladd@grs
  8494   002AFA  C005  F001         	movff	___fladd@a,___fladd@b
  8495   002AFE  C010  F005         	movff	___fladd@grs,___fladd@a
  8496   002B02  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8497   002B06  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8498   002B0A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8499   002B0E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8500   002B12  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8501   002B16  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8502   002B1A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8503   002B1E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8504   002B22  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8505   002B26                     l5015:
  8506   002B26  0E00               	movlw	0
  8507   002B28  6E10               	movwf	___fladd@grs^0,c
  8508   002B2A  500F               	movf	___fladd@bexp^0,w,c
  8509   002B2C  C00E  F009         	movff	___fladd@aexp,??___fladd
  8510   002B30  6A0A               	clrf	(??___fladd+1)^0,c
  8511   002B32  5E09               	subwf	??___fladd^0,f,c
  8512   002B34  0E00               	movlw	0
  8513   002B36  5A0A               	subwfb	(??___fladd+1)^0,f,c
  8514   002B38  BE0A               	btfsc	(??___fladd+1)^0,7,c
  8515   002B3A  EFA8  F015         	goto	u5801
  8516   002B3E  500A               	movf	(??___fladd+1)^0,w,c
  8517   002B40  E109               	bnz	u5800
  8518   002B42  0E1A               	movlw	26
  8519   002B44  5C09               	subwf	??___fladd^0,w,c
  8520   002B46  A0D8               	btfss	status,0,c
  8521   002B48  EFA8  F015         	goto	u5801
  8522   002B4C  EFAA  F015         	goto	u5800
  8523   002B50                     u5801:
  8524   002B50  EFE1  F015         	goto	l982
  8525   002B54                     u5800:
  8526   002B54  5001               	movf	___fladd@b^0,w,c
  8527   002B56  1002               	iorwf	(___fladd@b+1)^0,w,c
  8528   002B58  1003               	iorwf	(___fladd@b+2)^0,w,c
  8529   002B5A  1004               	iorwf	(___fladd@b+3)^0,w,c
  8530   002B5C  A4D8               	btfss	status,2,c
  8531   002B5E  EFB3  F015         	goto	u5811
  8532   002B62  EFB6  F015         	goto	u5810
  8533   002B66                     u5811:
  8534   002B66  0E01               	movlw	1
  8535   002B68  EFB7  F015         	goto	u5820
  8536   002B6C                     u5810:
  8537   002B6C  0E00               	movlw	0
  8538   002B6E                     u5820:
  8539   002B6E  6E10               	movwf	___fladd@grs^0,c
  8540   002B70  0E00               	movlw	0
  8541   002B72  6E01               	movwf	___fladd@b^0,c
  8542   002B74  0E00               	movlw	0
  8543   002B76  6E02               	movwf	(___fladd@b+1)^0,c
  8544   002B78  0E00               	movlw	0
  8545   002B7A  6E03               	movwf	(___fladd@b+2)^0,c
  8546   002B7C  0E00               	movlw	0
  8547   002B7E  6E04               	movwf	(___fladd@b+3)^0,c
  8548   002B80  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8549   002B84  EFEA  F015         	goto	l981
  8550   002B88                     l983:
  8551   002B88  A010               	btfss	___fladd@grs^0,0,c
  8552   002B8A  EFC9  F015         	goto	u5831
  8553   002B8E  EFCB  F015         	goto	u5830
  8554   002B92                     u5831:
  8555   002B92  EFD1  F015         	goto	l5027
  8556   002B96                     u5830:
  8557   002B96  90D8               	bcf	status,0,c
  8558   002B98  3010               	rrcf	___fladd@grs^0,w,c
  8559   002B9A  0901               	iorlw	1
  8560   002B9C  6E10               	movwf	___fladd@grs^0,c
  8561   002B9E  EFD3  F015         	goto	l5029
  8562   002BA2                     l5027:
  8563   002BA2  90D8               	bcf	status,0,c
  8564   002BA4  3210               	rrcf	___fladd@grs^0,f,c
  8565   002BA6                     l5029:
  8566   002BA6  A001               	btfss	___fladd@b^0,0,c
  8567   002BA8  EFD8  F015         	goto	u5841
  8568   002BAC  EFDA  F015         	goto	u5840
  8569   002BB0                     u5841:
  8570   002BB0  EFDB  F015         	goto	l5033
  8571   002BB4                     u5840:
  8572   002BB4  8E10               	bsf	___fladd@grs^0,7,c
  8573   002BB6                     l5033:
  8574   002BB6  3404               	rlcf	(___fladd@b+3)^0,w,c
  8575   002BB8  3204               	rrcf	(___fladd@b+3)^0,f,c
  8576   002BBA  3203               	rrcf	(___fladd@b+2)^0,f,c
  8577   002BBC  3202               	rrcf	(___fladd@b+1)^0,f,c
  8578   002BBE  3201               	rrcf	___fladd@b^0,f,c
  8579   002BC0  2A0F               	incf	___fladd@bexp^0,f,c
  8580   002BC2                     l982:
  8581   002BC2  500E               	movf	___fladd@aexp^0,w,c
  8582   002BC4  5C0F               	subwf	___fladd@bexp^0,w,c
  8583   002BC6  A0D8               	btfss	status,0,c
  8584   002BC8  EFE8  F015         	goto	u5851
  8585   002BCC  EFEA  F015         	goto	u5850
  8586   002BD0                     u5851:
  8587   002BD0  EFC4  F015         	goto	l983
  8588   002BD4                     u5850:
  8589   002BD4                     l981:
  8590   002BD4  BC0D               	btfsc	___fladd@signs^0,6,c
  8591   002BD6  EFEF  F015         	goto	u5861
  8592   002BDA  EFF1  F015         	goto	u5860
  8593   002BDE                     u5861:
  8594   002BDE  EF31  F016         	goto	l5061
  8595   002BE2                     u5860:
  8596   002BE2  500F               	movf	___fladd@bexp^0,w,c
  8597   002BE4  A4D8               	btfss	status,2,c
  8598   002BE6  EFF7  F015         	goto	u5871
  8599   002BEA  EFF9  F015         	goto	u5870
  8600   002BEE                     u5871:
  8601   002BEE  EF03  F016         	goto	l5043
  8602   002BF2                     u5870:
  8603   002BF2  0E00               	movlw	0
  8604   002BF4  6E01               	movwf	?___fladd^0,c
  8605   002BF6  0E00               	movlw	0
  8606   002BF8  6E02               	movwf	(?___fladd+1)^0,c
  8607   002BFA  0E00               	movlw	0
  8608   002BFC  6E03               	movwf	(?___fladd+2)^0,c
  8609   002BFE  0E00               	movlw	0
  8610   002C00  6E04               	movwf	(?___fladd+3)^0,c
  8611   002C02  EF52  F017         	goto	l990
  8612   002C06                     l5043:
  8613   002C06  5005               	movf	___fladd@a^0,w,c
  8614   002C08  2601               	addwf	___fladd@b^0,f,c
  8615   002C0A  5006               	movf	(___fladd@a+1)^0,w,c
  8616   002C0C  2202               	addwfc	(___fladd@b+1)^0,f,c
  8617   002C0E  5007               	movf	(___fladd@a+2)^0,w,c
  8618   002C10  2203               	addwfc	(___fladd@b+2)^0,f,c
  8619   002C12  5008               	movf	(___fladd@a+3)^0,w,c
  8620   002C14  2204               	addwfc	(___fladd@b+3)^0,f,c
  8621   002C16  A004               	btfss	(___fladd@b+3)^0,0,c
  8622   002C18  EF10  F016         	goto	u5881
  8623   002C1C  EF12  F016         	goto	u5880
  8624   002C20                     u5881:
  8625   002C20  EFBE  F016         	goto	l5097
  8626   002C24                     u5880:
  8627   002C24  A010               	btfss	___fladd@grs^0,0,c
  8628   002C26  EF17  F016         	goto	u5891
  8629   002C2A  EF19  F016         	goto	u5890
  8630   002C2E                     u5891:
  8631   002C2E  EF1F  F016         	goto	l5051
  8632   002C32                     u5890:
  8633   002C32  90D8               	bcf	status,0,c
  8634   002C34  3010               	rrcf	___fladd@grs^0,w,c
  8635   002C36  0901               	iorlw	1
  8636   002C38  6E10               	movwf	___fladd@grs^0,c
  8637   002C3A  EF21  F016         	goto	l5053
  8638   002C3E                     l5051:
  8639   002C3E  90D8               	bcf	status,0,c
  8640   002C40  3210               	rrcf	___fladd@grs^0,f,c
  8641   002C42                     l5053:
  8642   002C42  A001               	btfss	___fladd@b^0,0,c
  8643   002C44  EF26  F016         	goto	u5901
  8644   002C48  EF28  F016         	goto	u5900
  8645   002C4C                     u5901:
  8646   002C4C  EF29  F016         	goto	l5057
  8647   002C50                     u5900:
  8648   002C50  8E10               	bsf	___fladd@grs^0,7,c
  8649   002C52                     l5057:
  8650   002C52  3404               	rlcf	(___fladd@b+3)^0,w,c
  8651   002C54  3204               	rrcf	(___fladd@b+3)^0,f,c
  8652   002C56  3203               	rrcf	(___fladd@b+2)^0,f,c
  8653   002C58  3202               	rrcf	(___fladd@b+1)^0,f,c
  8654   002C5A  3201               	rrcf	___fladd@b^0,f,c
  8655   002C5C  2A0F               	incf	___fladd@bexp^0,f,c
  8656   002C5E  EFBE  F016         	goto	l5097
  8657   002C62                     l5061:
  8658   002C62  5005               	movf	___fladd@a^0,w,c
  8659   002C64  5C01               	subwf	___fladd@b^0,w,c
  8660   002C66  5006               	movf	(___fladd@a+1)^0,w,c
  8661   002C68  5802               	subwfb	(___fladd@b+1)^0,w,c
  8662   002C6A  5007               	movf	(___fladd@a+2)^0,w,c
  8663   002C6C  5803               	subwfb	(___fladd@b+2)^0,w,c
  8664   002C6E  5004               	movf	(___fladd@b+3)^0,w,c
  8665   002C70  0A80               	xorlw	128
  8666   002C72  6E09               	movwf	??___fladd^0,c
  8667   002C74  5008               	movf	(___fladd@a+3)^0,w,c
  8668   002C76  0A80               	xorlw	128
  8669   002C78  5809               	subwfb	??___fladd^0,w,c
  8670   002C7A  B0D8               	btfsc	status,0,c
  8671   002C7C  EF42  F016         	goto	u5911
  8672   002C80  EF44  F016         	goto	u5910
  8673   002C84                     u5911:
  8674   002C84  EF6F  F016         	goto	l5071
  8675   002C88                     u5910:
  8676   002C88  5001               	movf	___fladd@b^0,w,c
  8677   002C8A  5C05               	subwf	___fladd@a^0,w,c
  8678   002C8C  6E09               	movwf	??___fladd^0,c
  8679   002C8E  5002               	movf	(___fladd@b+1)^0,w,c
  8680   002C90  5806               	subwfb	(___fladd@a+1)^0,w,c
  8681   002C92  6E0A               	movwf	(??___fladd+1)^0,c
  8682   002C94  5003               	movf	(___fladd@b+2)^0,w,c
  8683   002C96  5807               	subwfb	(___fladd@a+2)^0,w,c
  8684   002C98  6E0B               	movwf	(??___fladd+2)^0,c
  8685   002C9A  5004               	movf	(___fladd@b+3)^0,w,c
  8686   002C9C  5808               	subwfb	(___fladd@a+3)^0,w,c
  8687   002C9E  6E0C               	movwf	(??___fladd+3)^0,c
  8688   002CA0  0EFF               	movlw	255
  8689   002CA2  2409               	addwf	??___fladd^0,w,c
  8690   002CA4  6E01               	movwf	___fladd@b^0,c
  8691   002CA6  0EFF               	movlw	255
  8692   002CA8  200A               	addwfc	(??___fladd+1)^0,w,c
  8693   002CAA  6E02               	movwf	(___fladd@b+1)^0,c
  8694   002CAC  0EFF               	movlw	255
  8695   002CAE  200B               	addwfc	(??___fladd+2)^0,w,c
  8696   002CB0  6E03               	movwf	(___fladd@b+2)^0,c
  8697   002CB2  0EFF               	movlw	255
  8698   002CB4  200C               	addwfc	(??___fladd+3)^0,w,c
  8699   002CB6  6E04               	movwf	(___fladd@b+3)^0,c
  8700   002CB8  0E80               	movlw	128
  8701   002CBA  1A0D               	xorwf	___fladd@signs^0,f,c
  8702   002CBC  6C10               	negf	___fladd@grs^0,c
  8703   002CBE  5010               	movf	___fladd@grs^0,w,c
  8704   002CC0  A4D8               	btfss	status,2,c
  8705   002CC2  EF65  F016         	goto	u5921
  8706   002CC6  EF67  F016         	goto	u5920
  8707   002CCA                     u5921:
  8708   002CCA  EF77  F016         	goto	l998
  8709   002CCE                     u5920:
  8710   002CCE  0E01               	movlw	1
  8711   002CD0  2601               	addwf	___fladd@b^0,f,c
  8712   002CD2  0E00               	movlw	0
  8713   002CD4  2202               	addwfc	(___fladd@b+1)^0,f,c
  8714   002CD6  2203               	addwfc	(___fladd@b+2)^0,f,c
  8715   002CD8  2204               	addwfc	(___fladd@b+3)^0,f,c
  8716   002CDA  EF77  F016         	goto	l998
  8717   002CDE                     l5071:
  8718   002CDE  5005               	movf	___fladd@a^0,w,c
  8719   002CE0  5E01               	subwf	___fladd@b^0,f,c
  8720   002CE2  5006               	movf	(___fladd@a+1)^0,w,c
  8721   002CE4  5A02               	subwfb	(___fladd@b+1)^0,f,c
  8722   002CE6  5007               	movf	(___fladd@a+2)^0,w,c
  8723   002CE8  5A03               	subwfb	(___fladd@b+2)^0,f,c
  8724   002CEA  5008               	movf	(___fladd@a+3)^0,w,c
  8725   002CEC  5A04               	subwfb	(___fladd@b+3)^0,f,c
  8726   002CEE                     l998:
  8727   002CEE  5001               	movf	___fladd@b^0,w,c
  8728   002CF0  1002               	iorwf	(___fladd@b+1)^0,w,c
  8729   002CF2  1003               	iorwf	(___fladd@b+2)^0,w,c
  8730   002CF4  1004               	iorwf	(___fladd@b+3)^0,w,c
  8731   002CF6  A4D8               	btfss	status,2,c
  8732   002CF8  EF80  F016         	goto	u5931
  8733   002CFC  EF82  F016         	goto	u5930
  8734   002D00                     u5931:
  8735   002D00  EFB7  F016         	goto	l5095
  8736   002D04                     u5930:
  8737   002D04  5010               	movf	___fladd@grs^0,w,c
  8738   002D06  A4D8               	btfss	status,2,c
  8739   002D08  EF88  F016         	goto	u5941
  8740   002D0C  EF8A  F016         	goto	u5940
  8741   002D10                     u5941:
  8742   002D10  EFB7  F016         	goto	l5095
  8743   002D14                     u5940:
  8744   002D14  0E00               	movlw	0
  8745   002D16  6E01               	movwf	?___fladd^0,c
  8746   002D18  0E00               	movlw	0
  8747   002D1A  6E02               	movwf	(?___fladd+1)^0,c
  8748   002D1C  0E00               	movlw	0
  8749   002D1E  6E03               	movwf	(?___fladd+2)^0,c
  8750   002D20  0E00               	movlw	0
  8751   002D22  6E04               	movwf	(?___fladd+3)^0,c
  8752   002D24  EF52  F017         	goto	l990
  8753   002D28                     l5079:
  8754   002D28  90D8               	bcf	status,0,c
  8755   002D2A  3601               	rlcf	___fladd@b^0,f,c
  8756   002D2C  3602               	rlcf	(___fladd@b+1)^0,f,c
  8757   002D2E  3603               	rlcf	(___fladd@b+2)^0,f,c
  8758   002D30  3604               	rlcf	(___fladd@b+3)^0,f,c
  8759   002D32  AE10               	btfss	___fladd@grs^0,7,c
  8760   002D34  EF9E  F016         	goto	u5951
  8761   002D38  EFA0  F016         	goto	u5950
  8762   002D3C                     u5951:
  8763   002D3C  EFA1  F016         	goto	l5085
  8764   002D40                     u5950:
  8765   002D40  8001               	bsf	___fladd@b^0,0,c
  8766   002D42                     l5085:
  8767   002D42  A010               	btfss	___fladd@grs^0,0,c
  8768   002D44  EFA6  F016         	goto	u5961
  8769   002D48  EFA8  F016         	goto	u5960
  8770   002D4C                     u5961:
  8771   002D4C  EFAC  F016         	goto	l5089
  8772   002D50                     u5960:
  8773   002D50  80D8               	bsf	status,0,c
  8774   002D52  3610               	rlcf	___fladd@grs^0,f,c
  8775   002D54  EFAE  F016         	goto	l5091
  8776   002D58                     l5089:
  8777   002D58  90D8               	bcf	status,0,c
  8778   002D5A  3610               	rlcf	___fladd@grs^0,f,c
  8779   002D5C                     l5091:
  8780   002D5C  500F               	movf	___fladd@bexp^0,w,c
  8781   002D5E  B4D8               	btfsc	status,2,c
  8782   002D60  EFB4  F016         	goto	u5971
  8783   002D64  EFB6  F016         	goto	u5970
  8784   002D68                     u5971:
  8785   002D68  EFB7  F016         	goto	l5095
  8786   002D6C                     u5970:
  8787   002D6C  060F               	decf	___fladd@bexp^0,f,c
  8788   002D6E                     l5095:
  8789   002D6E  AE03               	btfss	(___fladd@b+2)^0,7,c
  8790   002D70  EFBC  F016         	goto	u5981
  8791   002D74  EFBE  F016         	goto	u5980
  8792   002D78                     u5981:
  8793   002D78  EF94  F016         	goto	l5079
  8794   002D7C                     u5980:
  8795   002D7C                     l5097:
  8796   002D7C  0E00               	movlw	0
  8797   002D7E  6E0E               	movwf	___fladd@aexp^0,c
  8798   002D80  AE10               	btfss	___fladd@grs^0,7,c
  8799   002D82  EFC5  F016         	goto	u5991
  8800   002D86  EFC7  F016         	goto	u5990
  8801   002D8A                     u5991:
  8802   002D8A  EFDF  F016         	goto	l1007
  8803   002D8E                     u5990:
  8804   002D8E  C010  F009         	movff	___fladd@grs,??___fladd
  8805   002D92  0E7F               	movlw	127
  8806   002D94  1609               	andwf	??___fladd^0,f,c
  8807   002D96  B4D8               	btfsc	status,2,c
  8808   002D98  EFD0  F016         	goto	u6001
  8809   002D9C  EFD2  F016         	goto	u6000
  8810   002DA0                     u6001:
  8811   002DA0  EFD6  F016         	goto	l1008
  8812   002DA4                     u6000:
  8813   002DA4                     l5103:
  8814   002DA4  0E01               	movlw	1
  8815   002DA6  6E0E               	movwf	___fladd@aexp^0,c
  8816   002DA8  EFDF  F016         	goto	l1007
  8817   002DAC                     l1008:
  8818   002DAC  A001               	btfss	___fladd@b^0,0,c
  8819   002DAE  EFDB  F016         	goto	u6011
  8820   002DB2  EFDD  F016         	goto	u6010
  8821   002DB6                     u6011:
  8822   002DB6  EFDF  F016         	goto	l1007
  8823   002DBA                     u6010:
  8824   002DBA  EFD2  F016         	goto	l5103
  8825   002DBE                     l1007:
  8826   002DBE  500E               	movf	___fladd@aexp^0,w,c
  8827   002DC0  B4D8               	btfsc	status,2,c
  8828   002DC2  EFE5  F016         	goto	u6021
  8829   002DC6  EFE7  F016         	goto	u6020
  8830   002DCA                     u6021:
  8831   002DCA  EF12  F017         	goto	l5115
  8832   002DCE                     u6020:
  8833   002DCE  0E01               	movlw	1
  8834   002DD0  2601               	addwf	___fladd@b^0,f,c
  8835   002DD2  0E00               	movlw	0
  8836   002DD4  2202               	addwfc	(___fladd@b+1)^0,f,c
  8837   002DD6  2203               	addwfc	(___fladd@b+2)^0,f,c
  8838   002DD8  2204               	addwfc	(___fladd@b+3)^0,f,c
  8839   002DDA  A004               	btfss	(___fladd@b+3)^0,0,c
  8840   002DDC  EFF2  F016         	goto	u6031
  8841   002DE0  EFF4  F016         	goto	u6030
  8842   002DE4                     u6031:
  8843   002DE4  EF12  F017         	goto	l5115
  8844   002DE8                     u6030:
  8845   002DE8  C001  F009         	movff	___fladd@b,??___fladd
  8846   002DEC  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8847   002DF0  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8848   002DF4  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8849   002DF8  340C               	rlcf	(??___fladd+3)^0,w,c
  8850   002DFA  320C               	rrcf	(??___fladd+3)^0,f,c
  8851   002DFC  320B               	rrcf	(??___fladd+2)^0,f,c
  8852   002DFE  320A               	rrcf	(??___fladd+1)^0,f,c
  8853   002E00  3209               	rrcf	??___fladd^0,f,c
  8854   002E02  C009  F001         	movff	??___fladd,___fladd@b
  8855   002E06  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8856   002E0A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8857   002E0E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8858   002E12  280F               	incf	___fladd@bexp^0,w,c
  8859   002E14  B4D8               	btfsc	status,2,c
  8860   002E16  EF0F  F017         	goto	u6041
  8861   002E1A  EF11  F017         	goto	u6040
  8862   002E1E                     u6041:
  8863   002E1E  EF12  F017         	goto	l5115
  8864   002E22                     u6040:
  8865   002E22  2A0F               	incf	___fladd@bexp^0,f,c
  8866   002E24                     l5115:
  8867   002E24  280F               	incf	___fladd@bexp^0,w,c
  8868   002E26  B4D8               	btfsc	status,2,c
  8869   002E28  EF18  F017         	goto	u6051
  8870   002E2C  EF1A  F017         	goto	u6050
  8871   002E30                     u6051:
  8872   002E30  EF22  F017         	goto	l5119
  8873   002E34                     u6050:
  8874   002E34  500F               	movf	___fladd@bexp^0,w,c
  8875   002E36  A4D8               	btfss	status,2,c
  8876   002E38  EF20  F017         	goto	u6061
  8877   002E3C  EF22  F017         	goto	u6060
  8878   002E40                     u6061:
  8879   002E40  EF34  F017         	goto	l5123
  8880   002E44                     u6060:
  8881   002E44                     l5119:
  8882   002E44  0E00               	movlw	0
  8883   002E46  6E01               	movwf	___fladd@b^0,c
  8884   002E48  0E00               	movlw	0
  8885   002E4A  6E02               	movwf	(___fladd@b+1)^0,c
  8886   002E4C  0E00               	movlw	0
  8887   002E4E  6E03               	movwf	(___fladd@b+2)^0,c
  8888   002E50  0E00               	movlw	0
  8889   002E52  6E04               	movwf	(___fladd@b+3)^0,c
  8890   002E54  500F               	movf	___fladd@bexp^0,w,c
  8891   002E56  A4D8               	btfss	status,2,c
  8892   002E58  EF30  F017         	goto	u6071
  8893   002E5C  EF32  F017         	goto	u6070
  8894   002E60                     u6071:
  8895   002E60  EF34  F017         	goto	l5123
  8896   002E64                     u6070:
  8897   002E64  0E00               	movlw	0
  8898   002E66  6E0D               	movwf	___fladd@signs^0,c
  8899   002E68                     l5123:
  8900   002E68  A00F               	btfss	___fladd@bexp^0,0,c
  8901   002E6A  EF39  F017         	goto	u6081
  8902   002E6E  EF3B  F017         	goto	u6080
  8903   002E72                     u6081:
  8904   002E72  EF3E  F017         	goto	l5127
  8905   002E76                     u6080:
  8906   002E76  8E03               	bsf	(___fladd@b+2)^0,7,c
  8907   002E78  EF3F  F017         	goto	l5129
  8908   002E7C                     l5127:
  8909   002E7C  9E03               	bcf	(___fladd@b+2)^0,7,c
  8910   002E7E                     l5129:
  8911   002E7E  90D8               	bcf	status,0,c
  8912   002E80  300F               	rrcf	___fladd@bexp^0,w,c
  8913   002E82  6E04               	movwf	(___fladd@b+3)^0,c
  8914   002E84  AE0D               	btfss	___fladd@signs^0,7,c
  8915   002E86  EF47  F017         	goto	u6091
  8916   002E8A  EF49  F017         	goto	u6090
  8917   002E8E                     u6091:
  8918   002E8E  EF4A  F017         	goto	l5135
  8919   002E92                     u6090:
  8920   002E92  8E04               	bsf	(___fladd@b+3)^0,7,c
  8921   002E94                     l5135:
  8922   002E94  C001  F001         	movff	___fladd@b,?___fladd
  8923   002E98  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8924   002E9C  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8925   002EA0  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8926   002EA4                     l990:
  8927   002EA4  0012               	return		;funcret
  8928   002EA6                     __end_of___fladd:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function ___flmul *****************
  8932 ;; Defined at:
  8933 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  b               4   25[COMRAM] unsigned char 
  8936 ;;  a               4   29[COMRAM] unsigned char 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  prod            4   44[COMRAM] struct .
  8939 ;;  grs             4   39[COMRAM] unsigned long 
  8940 ;;  temp            2   48[COMRAM] struct .
  8941 ;;  bexp            1   43[COMRAM] unsigned char 
  8942 ;;  aexp            1   38[COMRAM] unsigned char 
  8943 ;;  sign            1   37[COMRAM] unsigned char 
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  4   25[COMRAM] unsigned char 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2, status,0, prodl, prodh
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8953 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8954 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8955 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8956 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8957 ;;Total ram usage:       25 bytes
  8958 ;; Hardware stack levels used: 1
  8959 ;; This function calls:
  8960 ;;		Nothing
  8961 ;; This function is called by:
  8962 ;;		_custom_floatmodulo
  8963 ;;		_RGB_to_HSV
  8964 ;;		_efgtoa
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text43
  8969   002EA6                     __ptext43:
  8970                           	callstack 0
  8971   002EA6                     ___flmul:
  8972                           	callstack 25
  8973   002EA6  501D               	movf	(___flmul@b+3)^0,w,c
  8974   002EA8  0B80               	andlw	128
  8975   002EAA  6E26               	movwf	___flmul@sign^0,c
  8976   002EAC  501D               	movf	(___flmul@b+3)^0,w,c
  8977   002EAE  241D               	addwf	(___flmul@b+3)^0,w,c
  8978   002EB0  6E2C               	movwf	___flmul@bexp^0,c
  8979   002EB2  AE1C               	btfss	(___flmul@b+2)^0,7,c
  8980   002EB4  EF5E  F017         	goto	u6341
  8981   002EB8  EF60  F017         	goto	u6340
  8982   002EBC                     u6341:
  8983   002EBC  EF61  F017         	goto	l5297
  8984   002EC0                     u6340:
  8985   002EC0  802C               	bsf	___flmul@bexp^0,0,c
  8986   002EC2                     l5297:
  8987   002EC2  502C               	movf	___flmul@bexp^0,w,c
  8988   002EC4  B4D8               	btfsc	status,2,c
  8989   002EC6  EF67  F017         	goto	u6351
  8990   002ECA  EF69  F017         	goto	u6350
  8991   002ECE                     u6351:
  8992   002ECE  EF7C  F017         	goto	l5305
  8993   002ED2                     u6350:
  8994   002ED2  282C               	incf	___flmul@bexp^0,w,c
  8995   002ED4  A4D8               	btfss	status,2,c
  8996   002ED6  EF6F  F017         	goto	u6361
  8997   002EDA  EF71  F017         	goto	u6360
  8998   002EDE                     u6361:
  8999   002EDE  EF79  F017         	goto	l5303
  9000   002EE2                     u6360:
  9001   002EE2  0E00               	movlw	0
  9002   002EE4  6E1A               	movwf	___flmul@b^0,c
  9003   002EE6  0E00               	movlw	0
  9004   002EE8  6E1B               	movwf	(___flmul@b+1)^0,c
  9005   002EEA  0E00               	movlw	0
  9006   002EEC  6E1C               	movwf	(___flmul@b+2)^0,c
  9007   002EEE  0E00               	movlw	0
  9008   002EF0  6E1D               	movwf	(___flmul@b+3)^0,c
  9009   002EF2                     l5303:
  9010   002EF2  8E1C               	bsf	(___flmul@b+2)^0,7,c
  9011   002EF4  EF84  F017         	goto	l5307
  9012   002EF8                     l5305:
  9013   002EF8  0E00               	movlw	0
  9014   002EFA  6E1A               	movwf	___flmul@b^0,c
  9015   002EFC  0E00               	movlw	0
  9016   002EFE  6E1B               	movwf	(___flmul@b+1)^0,c
  9017   002F00  0E00               	movlw	0
  9018   002F02  6E1C               	movwf	(___flmul@b+2)^0,c
  9019   002F04  0E00               	movlw	0
  9020   002F06  6E1D               	movwf	(___flmul@b+3)^0,c
  9021   002F08                     l5307:
  9022   002F08  5021               	movf	(___flmul@a+3)^0,w,c
  9023   002F0A  0B80               	andlw	128
  9024   002F0C  1A26               	xorwf	___flmul@sign^0,f,c
  9025   002F0E  5021               	movf	(___flmul@a+3)^0,w,c
  9026   002F10  2421               	addwf	(___flmul@a+3)^0,w,c
  9027   002F12  6E27               	movwf	___flmul@aexp^0,c
  9028   002F14  AE20               	btfss	(___flmul@a+2)^0,7,c
  9029   002F16  EF8F  F017         	goto	u6371
  9030   002F1A  EF91  F017         	goto	u6370
  9031   002F1E                     u6371:
  9032   002F1E  EF92  F017         	goto	l5315
  9033   002F22                     u6370:
  9034   002F22  8027               	bsf	___flmul@aexp^0,0,c
  9035   002F24                     l5315:
  9036   002F24  5027               	movf	___flmul@aexp^0,w,c
  9037   002F26  B4D8               	btfsc	status,2,c
  9038   002F28  EF98  F017         	goto	u6381
  9039   002F2C  EF9A  F017         	goto	u6380
  9040   002F30                     u6381:
  9041   002F30  EFAD  F017         	goto	l5323
  9042   002F34                     u6380:
  9043   002F34  2827               	incf	___flmul@aexp^0,w,c
  9044   002F36  A4D8               	btfss	status,2,c
  9045   002F38  EFA0  F017         	goto	u6391
  9046   002F3C  EFA2  F017         	goto	u6390
  9047   002F40                     u6391:
  9048   002F40  EFAA  F017         	goto	l5321
  9049   002F44                     u6390:
  9050   002F44  0E00               	movlw	0
  9051   002F46  6E1E               	movwf	___flmul@a^0,c
  9052   002F48  0E00               	movlw	0
  9053   002F4A  6E1F               	movwf	(___flmul@a+1)^0,c
  9054   002F4C  0E00               	movlw	0
  9055   002F4E  6E20               	movwf	(___flmul@a+2)^0,c
  9056   002F50  0E00               	movlw	0
  9057   002F52  6E21               	movwf	(___flmul@a+3)^0,c
  9058   002F54                     l5321:
  9059   002F54  8E20               	bsf	(___flmul@a+2)^0,7,c
  9060   002F56  EFB5  F017         	goto	l1067
  9061   002F5A                     l5323:
  9062   002F5A  0E00               	movlw	0
  9063   002F5C  6E1E               	movwf	___flmul@a^0,c
  9064   002F5E  0E00               	movlw	0
  9065   002F60  6E1F               	movwf	(___flmul@a+1)^0,c
  9066   002F62  0E00               	movlw	0
  9067   002F64  6E20               	movwf	(___flmul@a+2)^0,c
  9068   002F66  0E00               	movlw	0
  9069   002F68  6E21               	movwf	(___flmul@a+3)^0,c
  9070   002F6A                     l1067:
  9071   002F6A  5027               	movf	___flmul@aexp^0,w,c
  9072   002F6C  B4D8               	btfsc	status,2,c
  9073   002F6E  EFBB  F017         	goto	u6401
  9074   002F72  EFBD  F017         	goto	u6400
  9075   002F76                     u6401:
  9076   002F76  EFC5  F017         	goto	l5327
  9077   002F7A                     u6400:
  9078   002F7A  502C               	movf	___flmul@bexp^0,w,c
  9079   002F7C  A4D8               	btfss	status,2,c
  9080   002F7E  EFC3  F017         	goto	u6411
  9081   002F82  EFC5  F017         	goto	u6410
  9082   002F86                     u6411:
  9083   002F86  EFCF  F017         	goto	l5331
  9084   002F8A                     u6410:
  9085   002F8A                     l5327:
  9086   002F8A  0E00               	movlw	0
  9087   002F8C  6E1A               	movwf	?___flmul^0,c
  9088   002F8E  0E00               	movlw	0
  9089   002F90  6E1B               	movwf	(?___flmul+1)^0,c
  9090   002F92  0E00               	movlw	0
  9091   002F94  6E1C               	movwf	(?___flmul+2)^0,c
  9092   002F96  0E00               	movlw	0
  9093   002F98  6E1D               	movwf	(?___flmul+3)^0,c
  9094   002F9A  EF67  F019         	goto	l1071
  9095   002F9E                     l5331:
  9096   002F9E  5020               	movf	(___flmul@a+2)^0,w,c
  9097   002FA0  021A               	mulwf	___flmul@b^0,c
  9098   002FA2  CFF3 F031          	movff	prodl,___flmul@temp
  9099   002FA6  CFF4 F032          	movff	prodh,___flmul@temp+1
  9100   002FAA  5031               	movf	___flmul@temp^0,w,c
  9101   002FAC  6E28               	movwf	___flmul@grs^0,c
  9102   002FAE  6A29               	clrf	(___flmul@grs+1)^0,c
  9103   002FB0  6A2A               	clrf	(___flmul@grs+2)^0,c
  9104   002FB2  6A2B               	clrf	(___flmul@grs+3)^0,c
  9105   002FB4  5032               	movf	(___flmul@temp+1)^0,w,c
  9106   002FB6  6E2D               	movwf	___flmul@prod^0,c
  9107   002FB8  6A2E               	clrf	(___flmul@prod+1)^0,c
  9108   002FBA  6A2F               	clrf	(___flmul@prod+2)^0,c
  9109   002FBC  6A30               	clrf	(___flmul@prod+3)^0,c
  9110   002FBE  501F               	movf	(___flmul@a+1)^0,w,c
  9111   002FC0  021B               	mulwf	(___flmul@b+1)^0,c
  9112   002FC2  CFF3 F031          	movff	prodl,___flmul@temp
  9113   002FC6  CFF4 F032          	movff	prodh,___flmul@temp+1
  9114   002FCA  5031               	movf	___flmul@temp^0,w,c
  9115   002FCC  2628               	addwf	___flmul@grs^0,f,c
  9116   002FCE  0E00               	movlw	0
  9117   002FD0  2229               	addwfc	(___flmul@grs+1)^0,f,c
  9118   002FD2  222A               	addwfc	(___flmul@grs+2)^0,f,c
  9119   002FD4  222B               	addwfc	(___flmul@grs+3)^0,f,c
  9120   002FD6  5032               	movf	(___flmul@temp+1)^0,w,c
  9121   002FD8  262D               	addwf	___flmul@prod^0,f,c
  9122   002FDA  0E00               	movlw	0
  9123   002FDC  222E               	addwfc	(___flmul@prod+1)^0,f,c
  9124   002FDE  222F               	addwfc	(___flmul@prod+2)^0,f,c
  9125   002FE0  2230               	addwfc	(___flmul@prod+3)^0,f,c
  9126   002FE2  501E               	movf	___flmul@a^0,w,c
  9127   002FE4  021C               	mulwf	(___flmul@b+2)^0,c
  9128   002FE6  CFF3 F031          	movff	prodl,___flmul@temp
  9129   002FEA  CFF4 F032          	movff	prodh,___flmul@temp+1
  9130   002FEE  5031               	movf	___flmul@temp^0,w,c
  9131   002FF0  2628               	addwf	___flmul@grs^0,f,c
  9132   002FF2  0E00               	movlw	0
  9133   002FF4  2229               	addwfc	(___flmul@grs+1)^0,f,c
  9134   002FF6  222A               	addwfc	(___flmul@grs+2)^0,f,c
  9135   002FF8  222B               	addwfc	(___flmul@grs+3)^0,f,c
  9136   002FFA  5032               	movf	(___flmul@temp+1)^0,w,c
  9137   002FFC  262D               	addwf	___flmul@prod^0,f,c
  9138   002FFE  0E00               	movlw	0
  9139   003000  222E               	addwfc	(___flmul@prod+1)^0,f,c
  9140   003002  222F               	addwfc	(___flmul@prod+2)^0,f,c
  9141   003004  2230               	addwfc	(___flmul@prod+3)^0,f,c
  9142   003006  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  9143   00300A  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  9144   00300E  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  9145   003012  6A28               	clrf	___flmul@grs^0,c
  9146   003014  501E               	movf	___flmul@a^0,w,c
  9147   003016  021B               	mulwf	(___flmul@b+1)^0,c
  9148   003018  CFF3 F031          	movff	prodl,___flmul@temp
  9149   00301C  CFF4 F032          	movff	prodh,___flmul@temp+1
  9150   003020  5031               	movf	___flmul@temp^0,w,c
  9151   003022  2628               	addwf	___flmul@grs^0,f,c
  9152   003024  5032               	movf	(___flmul@temp+1)^0,w,c
  9153   003026  2229               	addwfc	(___flmul@grs+1)^0,f,c
  9154   003028  0E00               	movlw	0
  9155   00302A  222A               	addwfc	(___flmul@grs+2)^0,f,c
  9156   00302C  0E00               	movlw	0
  9157   00302E  222B               	addwfc	(___flmul@grs+3)^0,f,c
  9158   003030  501F               	movf	(___flmul@a+1)^0,w,c
  9159   003032  021A               	mulwf	___flmul@b^0,c
  9160   003034  CFF3 F031          	movff	prodl,___flmul@temp
  9161   003038  CFF4 F032          	movff	prodh,___flmul@temp+1
  9162   00303C  5031               	movf	___flmul@temp^0,w,c
  9163   00303E  2628               	addwf	___flmul@grs^0,f,c
  9164   003040  5032               	movf	(___flmul@temp+1)^0,w,c
  9165   003042  2229               	addwfc	(___flmul@grs+1)^0,f,c
  9166   003044  0E00               	movlw	0
  9167   003046  222A               	addwfc	(___flmul@grs+2)^0,f,c
  9168   003048  0E00               	movlw	0
  9169   00304A  222B               	addwfc	(___flmul@grs+3)^0,f,c
  9170   00304C  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  9171   003050  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  9172   003054  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  9173   003058  6A28               	clrf	___flmul@grs^0,c
  9174   00305A  501E               	movf	___flmul@a^0,w,c
  9175   00305C  021A               	mulwf	___flmul@b^0,c
  9176   00305E  CFF3 F031          	movff	prodl,___flmul@temp
  9177   003062  CFF4 F032          	movff	prodh,___flmul@temp+1
  9178   003066  5031               	movf	___flmul@temp^0,w,c
  9179   003068  2628               	addwf	___flmul@grs^0,f,c
  9180   00306A  5032               	movf	(___flmul@temp+1)^0,w,c
  9181   00306C  2229               	addwfc	(___flmul@grs+1)^0,f,c
  9182   00306E  0E00               	movlw	0
  9183   003070  222A               	addwfc	(___flmul@grs+2)^0,f,c
  9184   003072  0E00               	movlw	0
  9185   003074  222B               	addwfc	(___flmul@grs+3)^0,f,c
  9186   003076  5020               	movf	(___flmul@a+2)^0,w,c
  9187   003078  021B               	mulwf	(___flmul@b+1)^0,c
  9188   00307A  CFF3 F031          	movff	prodl,___flmul@temp
  9189   00307E  CFF4 F032          	movff	prodh,___flmul@temp+1
  9190   003082  5031               	movf	___flmul@temp^0,w,c
  9191   003084  262D               	addwf	___flmul@prod^0,f,c
  9192   003086  5032               	movf	(___flmul@temp+1)^0,w,c
  9193   003088  222E               	addwfc	(___flmul@prod+1)^0,f,c
  9194   00308A  0E00               	movlw	0
  9195   00308C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  9196   00308E  0E00               	movlw	0
  9197   003090  2230               	addwfc	(___flmul@prod+3)^0,f,c
  9198   003092  501F               	movf	(___flmul@a+1)^0,w,c
  9199   003094  021C               	mulwf	(___flmul@b+2)^0,c
  9200   003096  CFF3 F031          	movff	prodl,___flmul@temp
  9201   00309A  CFF4 F032          	movff	prodh,___flmul@temp+1
  9202   00309E  5031               	movf	___flmul@temp^0,w,c
  9203   0030A0  262D               	addwf	___flmul@prod^0,f,c
  9204   0030A2  5032               	movf	(___flmul@temp+1)^0,w,c
  9205   0030A4  222E               	addwfc	(___flmul@prod+1)^0,f,c
  9206   0030A6  0E00               	movlw	0
  9207   0030A8  222F               	addwfc	(___flmul@prod+2)^0,f,c
  9208   0030AA  0E00               	movlw	0
  9209   0030AC  2230               	addwfc	(___flmul@prod+3)^0,f,c
  9210   0030AE  5020               	movf	(___flmul@a+2)^0,w,c
  9211   0030B0  021C               	mulwf	(___flmul@b+2)^0,c
  9212   0030B2  CFF3 F031          	movff	prodl,___flmul@temp
  9213   0030B6  CFF4 F032          	movff	prodh,___flmul@temp+1
  9214   0030BA  5031               	movf	___flmul@temp^0,w,c
  9215   0030BC  6E22               	movwf	??___flmul^0,c
  9216   0030BE  5032               	movf	(___flmul@temp+1)^0,w,c
  9217   0030C0  6E23               	movwf	(??___flmul+1)^0,c
  9218   0030C2  6A24               	clrf	(??___flmul+2)^0,c
  9219   0030C4  6A25               	clrf	(??___flmul+3)^0,c
  9220   0030C6  C024  F025         	movff	??___flmul+2,??___flmul+3
  9221   0030CA  C023  F024         	movff	??___flmul+1,??___flmul+2
  9222   0030CE  C022  F023         	movff	??___flmul,??___flmul+1
  9223   0030D2  6A22               	clrf	??___flmul^0,c
  9224   0030D4  5022               	movf	??___flmul^0,w,c
  9225   0030D6  262D               	addwf	___flmul@prod^0,f,c
  9226   0030D8  5023               	movf	(??___flmul+1)^0,w,c
  9227   0030DA  222E               	addwfc	(___flmul@prod+1)^0,f,c
  9228   0030DC  5024               	movf	(??___flmul+2)^0,w,c
  9229   0030DE  222F               	addwfc	(___flmul@prod+2)^0,f,c
  9230   0030E0  5025               	movf	(??___flmul+3)^0,w,c
  9231   0030E2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  9232   0030E4  C028  F022         	movff	___flmul@grs,??___flmul
  9233   0030E8  C029  F023         	movff	___flmul@grs+1,??___flmul+1
  9234   0030EC  C02A  F024         	movff	___flmul@grs+2,??___flmul+2
  9235   0030F0  C02B  F025         	movff	___flmul@grs+3,??___flmul+3
  9236   0030F4  0E19               	movlw	25
  9237   0030F6  EF82  F018         	goto	u6420
  9238   0030FA                     u6425:
  9239   0030FA  90D8               	bcf	status,0,c
  9240   0030FC  3225               	rrcf	(??___flmul+3)^0,f,c
  9241   0030FE  3224               	rrcf	(??___flmul+2)^0,f,c
  9242   003100  3223               	rrcf	(??___flmul+1)^0,f,c
  9243   003102  3222               	rrcf	??___flmul^0,f,c
  9244   003104                     u6420:
  9245   003104  2EE8               	decfsz	wreg,f,c
  9246   003106  EF7D  F018         	goto	u6425
  9247   00310A  5022               	movf	??___flmul^0,w,c
  9248   00310C  262D               	addwf	___flmul@prod^0,f,c
  9249   00310E  5023               	movf	(??___flmul+1)^0,w,c
  9250   003110  222E               	addwfc	(___flmul@prod+1)^0,f,c
  9251   003112  5024               	movf	(??___flmul+2)^0,w,c
  9252   003114  222F               	addwfc	(___flmul@prod+2)^0,f,c
  9253   003116  5025               	movf	(??___flmul+3)^0,w,c
  9254   003118  2230               	addwfc	(___flmul@prod+3)^0,f,c
  9255   00311A  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  9256   00311E  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  9257   003122  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  9258   003126  6A28               	clrf	___flmul@grs^0,c
  9259   003128  5027               	movf	___flmul@aexp^0,w,c
  9260   00312A  C02C  F022         	movff	___flmul@bexp,??___flmul
  9261   00312E  6A23               	clrf	(??___flmul+1)^0,c
  9262   003130  2622               	addwf	??___flmul^0,f,c
  9263   003132  0E00               	movlw	0
  9264   003134  2223               	addwfc	(??___flmul+1)^0,f,c
  9265   003136  0E82               	movlw	130
  9266   003138  2422               	addwf	??___flmul^0,w,c
  9267   00313A  6E31               	movwf	___flmul@temp^0,c
  9268   00313C  0EFF               	movlw	255
  9269   00313E  2023               	addwfc	(??___flmul+1)^0,w,c
  9270   003140  6E32               	movwf	(___flmul@temp+1)^0,c
  9271   003142  EFB8  F018         	goto	l5379
  9272   003146                     l5373:
  9273   003146  90D8               	bcf	status,0,c
  9274   003148  362D               	rlcf	___flmul@prod^0,f,c
  9275   00314A  362E               	rlcf	(___flmul@prod+1)^0,f,c
  9276   00314C  362F               	rlcf	(___flmul@prod+2)^0,f,c
  9277   00314E  3630               	rlcf	(___flmul@prod+3)^0,f,c
  9278   003150  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  9279   003152  EFAD  F018         	goto	u6431
  9280   003156  EFAF  F018         	goto	u6430
  9281   00315A                     u6431:
  9282   00315A  EFB0  F018         	goto	l1074
  9283   00315E                     u6430:
  9284   00315E  802D               	bsf	___flmul@prod^0,0,c
  9285   003160                     l1074:
  9286   003160  90D8               	bcf	status,0,c
  9287   003162  3628               	rlcf	___flmul@grs^0,f,c
  9288   003164  3629               	rlcf	(___flmul@grs+1)^0,f,c
  9289   003166  362A               	rlcf	(___flmul@grs+2)^0,f,c
  9290   003168  362B               	rlcf	(___flmul@grs+3)^0,f,c
  9291   00316A  0631               	decf	___flmul@temp^0,f,c
  9292   00316C  A0D8               	btfss	status,0,c
  9293   00316E  0632               	decf	(___flmul@temp+1)^0,f,c
  9294   003170                     l5379:
  9295   003170  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  9296   003172  EFBD  F018         	goto	u6441
  9297   003176  EFBF  F018         	goto	u6440
  9298   00317A                     u6441:
  9299   00317A  EFA3  F018         	goto	l5373
  9300   00317E                     u6440:
  9301   00317E  0E00               	movlw	0
  9302   003180  6E27               	movwf	___flmul@aexp^0,c
  9303   003182  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  9304   003184  EFC6  F018         	goto	u6451
  9305   003188  EFC8  F018         	goto	u6450
  9306   00318C                     u6451:
  9307   00318C  EFEC  F018         	goto	l1076
  9308   003190                     u6450:
  9309   003190  0EFF               	movlw	255
  9310   003192  1428               	andwf	___flmul@grs^0,w,c
  9311   003194  6E22               	movwf	??___flmul^0,c
  9312   003196  0EFF               	movlw	255
  9313   003198  1429               	andwf	(___flmul@grs+1)^0,w,c
  9314   00319A  6E23               	movwf	(??___flmul+1)^0,c
  9315   00319C  0EFF               	movlw	255
  9316   00319E  142A               	andwf	(___flmul@grs+2)^0,w,c
  9317   0031A0  6E24               	movwf	(??___flmul+2)^0,c
  9318   0031A2  0E7F               	movlw	127
  9319   0031A4  142B               	andwf	(___flmul@grs+3)^0,w,c
  9320   0031A6  6E25               	movwf	(??___flmul+3)^0,c
  9321   0031A8  5022               	movf	??___flmul^0,w,c
  9322   0031AA  1023               	iorwf	(??___flmul+1)^0,w,c
  9323   0031AC  1024               	iorwf	(??___flmul+2)^0,w,c
  9324   0031AE  1025               	iorwf	(??___flmul+3)^0,w,c
  9325   0031B0  B4D8               	btfsc	status,2,c
  9326   0031B2  EFDD  F018         	goto	u6461
  9327   0031B6  EFDF  F018         	goto	u6460
  9328   0031BA                     u6461:
  9329   0031BA  EFE3  F018         	goto	l1077
  9330   0031BE                     u6460:
  9331   0031BE                     l5387:
  9332   0031BE  0E01               	movlw	1
  9333   0031C0  6E27               	movwf	___flmul@aexp^0,c
  9334   0031C2  EFEC  F018         	goto	l1076
  9335   0031C6                     l1077:
  9336   0031C6  A02D               	btfss	___flmul@prod^0,0,c
  9337   0031C8  EFE8  F018         	goto	u6471
  9338   0031CC  EFEA  F018         	goto	u6470
  9339   0031D0                     u6471:
  9340   0031D0  EFEC  F018         	goto	l1076
  9341   0031D4                     u6470:
  9342   0031D4  EFDF  F018         	goto	l5387
  9343   0031D8                     l1076:
  9344   0031D8  5027               	movf	___flmul@aexp^0,w,c
  9345   0031DA  B4D8               	btfsc	status,2,c
  9346   0031DC  EFF2  F018         	goto	u6481
  9347   0031E0  EFF4  F018         	goto	u6480
  9348   0031E4                     u6481:
  9349   0031E4  EF18  F019         	goto	l5399
  9350   0031E8                     u6480:
  9351   0031E8  0E01               	movlw	1
  9352   0031EA  262D               	addwf	___flmul@prod^0,f,c
  9353   0031EC  0E00               	movlw	0
  9354   0031EE  222E               	addwfc	(___flmul@prod+1)^0,f,c
  9355   0031F0  222F               	addwfc	(___flmul@prod+2)^0,f,c
  9356   0031F2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  9357   0031F4  A030               	btfss	(___flmul@prod+3)^0,0,c
  9358   0031F6  EFFF  F018         	goto	u6491
  9359   0031FA  EF01  F019         	goto	u6490
  9360   0031FE                     u6491:
  9361   0031FE  EF18  F019         	goto	l5399
  9362   003202                     u6490:
  9363   003202  C02D  F022         	movff	___flmul@prod,??___flmul
  9364   003206  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  9365   00320A  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  9366   00320E  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  9367   003212  3425               	rlcf	(??___flmul+3)^0,w,c
  9368   003214  3225               	rrcf	(??___flmul+3)^0,f,c
  9369   003216  3224               	rrcf	(??___flmul+2)^0,f,c
  9370   003218  3223               	rrcf	(??___flmul+1)^0,f,c
  9371   00321A  3222               	rrcf	??___flmul^0,f,c
  9372   00321C  C022  F02D         	movff	??___flmul,___flmul@prod
  9373   003220  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  9374   003224  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  9375   003228  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  9376   00322C  4A31               	infsnz	___flmul@temp^0,f,c
  9377   00322E  2A32               	incf	(___flmul@temp+1)^0,f,c
  9378   003230                     l5399:
  9379   003230  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  9380   003232  EF23  F019         	goto	u6501
  9381   003236  5032               	movf	(___flmul@temp+1)^0,w,c
  9382   003238  E108               	bnz	u6500
  9383   00323A  2831               	incf	___flmul@temp^0,w,c
  9384   00323C  A0D8               	btfss	status,0,c
  9385   00323E  EF23  F019         	goto	u6501
  9386   003242  EF25  F019         	goto	u6500
  9387   003246                     u6501:
  9388   003246  EF2F  F019         	goto	l5403
  9389   00324A                     u6500:
  9390   00324A  0E00               	movlw	0
  9391   00324C  6E2D               	movwf	___flmul@prod^0,c
  9392   00324E  0E00               	movlw	0
  9393   003250  6E2E               	movwf	(___flmul@prod+1)^0,c
  9394   003252  0E80               	movlw	128
  9395   003254  6E2F               	movwf	(___flmul@prod+2)^0,c
  9396   003256  0E7F               	movlw	127
  9397   003258  6E30               	movwf	(___flmul@prod+3)^0,c
  9398   00325A  EF5D  F019         	goto	l5415
  9399   00325E                     l5403:
  9400   00325E  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  9401   003260  EF3C  F019         	goto	u6510
  9402   003264  5032               	movf	(___flmul@temp+1)^0,w,c
  9403   003266  E106               	bnz	u6511
  9404   003268  0431               	decf	___flmul@temp^0,w,c
  9405   00326A  B0D8               	btfsc	status,0,c
  9406   00326C  EF3A  F019         	goto	u6511
  9407   003270  EF3C  F019         	goto	u6510
  9408   003274                     u6511:
  9409   003274  EF48  F019         	goto	l1084
  9410   003278                     u6510:
  9411   003278  0E00               	movlw	0
  9412   00327A  6E2D               	movwf	___flmul@prod^0,c
  9413   00327C  0E00               	movlw	0
  9414   00327E  6E2E               	movwf	(___flmul@prod+1)^0,c
  9415   003280  0E00               	movlw	0
  9416   003282  6E2F               	movwf	(___flmul@prod+2)^0,c
  9417   003284  0E00               	movlw	0
  9418   003286  6E30               	movwf	(___flmul@prod+3)^0,c
  9419   003288  0E00               	movlw	0
  9420   00328A  6E26               	movwf	___flmul@sign^0,c
  9421   00328C  EF5D  F019         	goto	l5415
  9422   003290                     l1084:
  9423   003290  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  9424   003294  0EFF               	movlw	255
  9425   003296  162D               	andwf	___flmul@prod^0,f,c
  9426   003298  0EFF               	movlw	255
  9427   00329A  162E               	andwf	(___flmul@prod+1)^0,f,c
  9428   00329C  0E7F               	movlw	127
  9429   00329E  162F               	andwf	(___flmul@prod+2)^0,f,c
  9430   0032A0  0E00               	movlw	0
  9431   0032A2  1630               	andwf	(___flmul@prod+3)^0,f,c
  9432   0032A4  A02C               	btfss	___flmul@bexp^0,0,c
  9433   0032A6  EF57  F019         	goto	u6521
  9434   0032AA  EF59  F019         	goto	u6520
  9435   0032AE                     u6521:
  9436   0032AE  EF5A  F019         	goto	l5413
  9437   0032B2                     u6520:
  9438   0032B2  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  9439   0032B4                     l5413:
  9440   0032B4  90D8               	bcf	status,0,c
  9441   0032B6  302C               	rrcf	___flmul@bexp^0,w,c
  9442   0032B8  6E30               	movwf	(___flmul@prod+3)^0,c
  9443   0032BA                     l5415:
  9444   0032BA  5026               	movf	___flmul@sign^0,w,c
  9445   0032BC  1230               	iorwf	(___flmul@prod+3)^0,f,c
  9446   0032BE  C02D  F01A         	movff	___flmul@prod,?___flmul
  9447   0032C2  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  9448   0032C6  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  9449   0032CA  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  9450   0032CE                     l1071:
  9451   0032CE  0012               	return		;funcret
  9452   0032D0                     __end_of___flmul:
  9453                           	callstack 0
  9454                           
  9455 ;; *************** function ___fleq *****************
  9456 ;; Defined at:
  9457 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  ff1             4    0[COMRAM] unsigned char 
  9460 ;;  ff2             4    4[COMRAM] unsigned char 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;		None
  9463 ;; Return value:  Size  Location     Type
  9464 ;;		None               void
  9465 ;; Registers used:
  9466 ;;		wreg, status,2, status,0
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9472 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;Total ram usage:       12 bytes
  9477 ;; Hardware stack levels used: 1
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_custom_floatmodulo
  9482 ;;		_RGB_to_HSV
  9483 ;;		_efgtoa
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text44
  9488   00436A                     __ptext44:
  9489                           	callstack 0
  9490   00436A                     ___fleq:
  9491                           	callstack 25
  9492   00436A  0E00               	movlw	0
  9493   00436C  1401               	andwf	___fleq@ff1^0,w,c
  9494   00436E  6E09               	movwf	??___fleq^0,c
  9495   004370  0E00               	movlw	0
  9496   004372  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9497   004374  6E0A               	movwf	(??___fleq+1)^0,c
  9498   004376  0E80               	movlw	128
  9499   004378  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9500   00437A  6E0B               	movwf	(??___fleq+2)^0,c
  9501   00437C  0E7F               	movlw	127
  9502   00437E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9503   004380  6E0C               	movwf	(??___fleq+3)^0,c
  9504   004382  5009               	movf	??___fleq^0,w,c
  9505   004384  100A               	iorwf	(??___fleq+1)^0,w,c
  9506   004386  100B               	iorwf	(??___fleq+2)^0,w,c
  9507   004388  100C               	iorwf	(??___fleq+3)^0,w,c
  9508   00438A  A4D8               	btfss	status,2,c
  9509   00438C  EFCA  F021         	goto	u6531
  9510   004390  EFCC  F021         	goto	u6530
  9511   004394                     u6531:
  9512   004394  EFD4  F021         	goto	l5431
  9513   004398                     u6530:
  9514   004398  0E00               	movlw	0
  9515   00439A  6E01               	movwf	___fleq@ff1^0,c
  9516   00439C  0E00               	movlw	0
  9517   00439E  6E02               	movwf	(___fleq@ff1+1)^0,c
  9518   0043A0  0E00               	movlw	0
  9519   0043A2  6E03               	movwf	(___fleq@ff1+2)^0,c
  9520   0043A4  0E00               	movlw	0
  9521   0043A6  6E04               	movwf	(___fleq@ff1+3)^0,c
  9522   0043A8                     l5431:
  9523   0043A8  0E00               	movlw	0
  9524   0043AA  1405               	andwf	___fleq@ff2^0,w,c
  9525   0043AC  6E09               	movwf	??___fleq^0,c
  9526   0043AE  0E00               	movlw	0
  9527   0043B0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9528   0043B2  6E0A               	movwf	(??___fleq+1)^0,c
  9529   0043B4  0E80               	movlw	128
  9530   0043B6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9531   0043B8  6E0B               	movwf	(??___fleq+2)^0,c
  9532   0043BA  0E7F               	movlw	127
  9533   0043BC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9534   0043BE  6E0C               	movwf	(??___fleq+3)^0,c
  9535   0043C0  5009               	movf	??___fleq^0,w,c
  9536   0043C2  100A               	iorwf	(??___fleq+1)^0,w,c
  9537   0043C4  100B               	iorwf	(??___fleq+2)^0,w,c
  9538   0043C6  100C               	iorwf	(??___fleq+3)^0,w,c
  9539   0043C8  A4D8               	btfss	status,2,c
  9540   0043CA  EFE9  F021         	goto	u6541
  9541   0043CE  EFEB  F021         	goto	u6540
  9542   0043D2                     u6541:
  9543   0043D2  EFF3  F021         	goto	l5435
  9544   0043D6                     u6540:
  9545   0043D6  0E00               	movlw	0
  9546   0043D8  6E05               	movwf	___fleq@ff2^0,c
  9547   0043DA  0E00               	movlw	0
  9548   0043DC  6E06               	movwf	(___fleq@ff2+1)^0,c
  9549   0043DE  0E00               	movlw	0
  9550   0043E0  6E07               	movwf	(___fleq@ff2+2)^0,c
  9551   0043E2  0E00               	movlw	0
  9552   0043E4  6E08               	movwf	(___fleq@ff2+3)^0,c
  9553   0043E6                     l5435:
  9554   0043E6  5005               	movf	___fleq@ff2^0,w,c
  9555   0043E8  1801               	xorwf	___fleq@ff1^0,w,c
  9556   0043EA  E10F               	bnz	u6550
  9557   0043EC  5006               	movf	(___fleq@ff2+1)^0,w,c
  9558   0043EE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9559   0043F0  E10C               	bnz	u6550
  9560   0043F2  5007               	movf	(___fleq@ff2+2)^0,w,c
  9561   0043F4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9562   0043F6  E109               	bnz	u6550
  9563   0043F8  5008               	movf	(___fleq@ff2+3)^0,w,c
  9564   0043FA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9565   0043FC  B4D8               	btfsc	status,2,c
  9566   0043FE  EF03  F022         	goto	u6551
  9567   004402  EF05  F022         	goto	u6550
  9568   004406                     u6551:
  9569   004406  EF08  F022         	goto	l5439
  9570   00440A                     u6550:
  9571   00440A  90D8               	bcf	status,0,c
  9572   00440C  EF09  F022         	goto	l712
  9573   004410                     l5439:
  9574   004410  80D8               	bsf	status,0,c
  9575   004412                     l712:
  9576   004412  0012               	return		;funcret
  9577   004414                     __end_of___fleq:
  9578                           	callstack 0
  9579                           
  9580 ;; *************** function ___fldiv *****************
  9581 ;; Defined at:
  9582 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  b               4   58[COMRAM] unsigned char 
  9585 ;;  a               4   62[COMRAM] unsigned char 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  grs             4   77[COMRAM] unsigned long 
  9588 ;;  rem             4   70[COMRAM] unsigned long 
  9589 ;;  new_exp         2   75[COMRAM] short 
  9590 ;;  aexp            1   82[COMRAM] unsigned char 
  9591 ;;  bexp            1   81[COMRAM] unsigned char 
  9592 ;;  sign            1   74[COMRAM] unsigned char 
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  4   58[COMRAM] unsigned char 
  9595 ;; Registers used:
  9596 ;;		wreg, status,2, status,0
  9597 ;; Tracked objects:
  9598 ;;		On entry : 0/0
  9599 ;;		On exit  : 0/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9602 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;Total ram usage:       25 bytes
  9607 ;; Hardware stack levels used: 1
  9608 ;; This function calls:
  9609 ;;		Nothing
  9610 ;; This function is called by:
  9611 ;;		_custom_floatmodulo
  9612 ;;		_RGB_to_HSV
  9613 ;;		_efgtoa
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text45
  9618   0032D0                     __ptext45:
  9619                           	callstack 0
  9620   0032D0                     ___fldiv:
  9621                           	callstack 25
  9622   0032D0  503E               	movf	(___fldiv@b+3)^0,w,c
  9623   0032D2  0B80               	andlw	128
  9624   0032D4  6E4B               	movwf	___fldiv@sign^0,c
  9625   0032D6  503E               	movf	(___fldiv@b+3)^0,w,c
  9626   0032D8  243E               	addwf	(___fldiv@b+3)^0,w,c
  9627   0032DA  6E52               	movwf	___fldiv@bexp^0,c
  9628   0032DC  AE3D               	btfss	(___fldiv@b+2)^0,7,c
  9629   0032DE  EF73  F019         	goto	u6111
  9630   0032E2  EF75  F019         	goto	u6110
  9631   0032E6                     u6111:
  9632   0032E6  EF76  F019         	goto	l5159
  9633   0032EA                     u6110:
  9634   0032EA  8052               	bsf	___fldiv@bexp^0,0,c
  9635   0032EC                     l5159:
  9636   0032EC  5052               	movf	___fldiv@bexp^0,w,c
  9637   0032EE  B4D8               	btfsc	status,2,c
  9638   0032F0  EF7C  F019         	goto	u6121
  9639   0032F4  EF7E  F019         	goto	u6120
  9640   0032F8                     u6121:
  9641   0032F8  EF93  F019         	goto	l5169
  9642   0032FC                     u6120:
  9643   0032FC  2852               	incf	___fldiv@bexp^0,w,c
  9644   0032FE  A4D8               	btfss	status,2,c
  9645   003300  EF84  F019         	goto	u6131
  9646   003304  EF86  F019         	goto	u6130
  9647   003308                     u6131:
  9648   003308  EF8E  F019         	goto	l5165
  9649   00330C                     u6130:
  9650   00330C  0E00               	movlw	0
  9651   00330E  6E3B               	movwf	___fldiv@b^0,c
  9652   003310  0E00               	movlw	0
  9653   003312  6E3C               	movwf	(___fldiv@b+1)^0,c
  9654   003314  0E00               	movlw	0
  9655   003316  6E3D               	movwf	(___fldiv@b+2)^0,c
  9656   003318  0E00               	movlw	0
  9657   00331A  6E3E               	movwf	(___fldiv@b+3)^0,c
  9658   00331C                     l5165:
  9659   00331C  8E3D               	bsf	(___fldiv@b+2)^0,7,c
  9660   00331E  0E00               	movlw	0
  9661   003320  6E3E               	movwf	(___fldiv@b+3)^0,c
  9662   003322  EF9B  F019         	goto	l5171
  9663   003326                     l5169:
  9664   003326  0E00               	movlw	0
  9665   003328  6E3B               	movwf	___fldiv@b^0,c
  9666   00332A  0E00               	movlw	0
  9667   00332C  6E3C               	movwf	(___fldiv@b+1)^0,c
  9668   00332E  0E00               	movlw	0
  9669   003330  6E3D               	movwf	(___fldiv@b+2)^0,c
  9670   003332  0E00               	movlw	0
  9671   003334  6E3E               	movwf	(___fldiv@b+3)^0,c
  9672   003336                     l5171:
  9673   003336  5042               	movf	(___fldiv@a+3)^0,w,c
  9674   003338  0B80               	andlw	128
  9675   00333A  1A4B               	xorwf	___fldiv@sign^0,f,c
  9676   00333C  5042               	movf	(___fldiv@a+3)^0,w,c
  9677   00333E  2442               	addwf	(___fldiv@a+3)^0,w,c
  9678   003340  6E53               	movwf	___fldiv@aexp^0,c
  9679   003342  AE41               	btfss	(___fldiv@a+2)^0,7,c
  9680   003344  EFA6  F019         	goto	u6141
  9681   003348  EFA8  F019         	goto	u6140
  9682   00334C                     u6141:
  9683   00334C  EFA9  F019         	goto	l5179
  9684   003350                     u6140:
  9685   003350  8053               	bsf	___fldiv@aexp^0,0,c
  9686   003352                     l5179:
  9687   003352  5053               	movf	___fldiv@aexp^0,w,c
  9688   003354  B4D8               	btfsc	status,2,c
  9689   003356  EFAF  F019         	goto	u6151
  9690   00335A  EFB1  F019         	goto	u6150
  9691   00335E                     u6151:
  9692   00335E  EFC6  F019         	goto	l5189
  9693   003362                     u6150:
  9694   003362  2853               	incf	___fldiv@aexp^0,w,c
  9695   003364  A4D8               	btfss	status,2,c
  9696   003366  EFB7  F019         	goto	u6161
  9697   00336A  EFB9  F019         	goto	u6160
  9698   00336E                     u6161:
  9699   00336E  EFC1  F019         	goto	l5185
  9700   003372                     u6160:
  9701   003372  0E00               	movlw	0
  9702   003374  6E3F               	movwf	___fldiv@a^0,c
  9703   003376  0E00               	movlw	0
  9704   003378  6E40               	movwf	(___fldiv@a+1)^0,c
  9705   00337A  0E00               	movlw	0
  9706   00337C  6E41               	movwf	(___fldiv@a+2)^0,c
  9707   00337E  0E00               	movlw	0
  9708   003380  6E42               	movwf	(___fldiv@a+3)^0,c
  9709   003382                     l5185:
  9710   003382  8E41               	bsf	(___fldiv@a+2)^0,7,c
  9711   003384  0E00               	movlw	0
  9712   003386  6E42               	movwf	(___fldiv@a+3)^0,c
  9713   003388  EFCE  F019         	goto	l5191
  9714   00338C                     l5189:
  9715   00338C  0E00               	movlw	0
  9716   00338E  6E3F               	movwf	___fldiv@a^0,c
  9717   003390  0E00               	movlw	0
  9718   003392  6E40               	movwf	(___fldiv@a+1)^0,c
  9719   003394  0E00               	movlw	0
  9720   003396  6E41               	movwf	(___fldiv@a+2)^0,c
  9721   003398  0E00               	movlw	0
  9722   00339A  6E42               	movwf	(___fldiv@a+3)^0,c
  9723   00339C                     l5191:
  9724   00339C  503F               	movf	___fldiv@a^0,w,c
  9725   00339E  1040               	iorwf	(___fldiv@a+1)^0,w,c
  9726   0033A0  1041               	iorwf	(___fldiv@a+2)^0,w,c
  9727   0033A2  1042               	iorwf	(___fldiv@a+3)^0,w,c
  9728   0033A4  A4D8               	btfss	status,2,c
  9729   0033A6  EFD7  F019         	goto	u6171
  9730   0033AA  EFD9  F019         	goto	u6170
  9731   0033AE                     u6171:
  9732   0033AE  EFF1  F019         	goto	l5203
  9733   0033B2                     u6170:
  9734   0033B2  0E00               	movlw	0
  9735   0033B4  6E3B               	movwf	___fldiv@b^0,c
  9736   0033B6  0E00               	movlw	0
  9737   0033B8  6E3C               	movwf	(___fldiv@b+1)^0,c
  9738   0033BA  0E00               	movlw	0
  9739   0033BC  6E3D               	movwf	(___fldiv@b+2)^0,c
  9740   0033BE  0E00               	movlw	0
  9741   0033C0  6E3E               	movwf	(___fldiv@b+3)^0,c
  9742   0033C2  0E80               	movlw	128
  9743   0033C4  123D               	iorwf	(___fldiv@b+2)^0,f,c
  9744   0033C6  0E7F               	movlw	127
  9745   0033C8  123E               	iorwf	(___fldiv@b+3)^0,f,c
  9746   0033CA                     l5197:
  9747   0033CA  504B               	movf	___fldiv@sign^0,w,c
  9748   0033CC  123E               	iorwf	(___fldiv@b+3)^0,f,c
  9749   0033CE  C03B  F03B         	movff	___fldiv@b,?___fldiv
  9750   0033D2  C03C  F03C         	movff	___fldiv@b+1,?___fldiv+1
  9751   0033D6  C03D  F03D         	movff	___fldiv@b+2,?___fldiv+2
  9752   0033DA  C03E  F03E         	movff	___fldiv@b+3,?___fldiv+3
  9753   0033DE  EF34  F01B         	goto	l1035
  9754   0033E2                     l5203:
  9755   0033E2  5052               	movf	___fldiv@bexp^0,w,c
  9756   0033E4  A4D8               	btfss	status,2,c
  9757   0033E6  EFF7  F019         	goto	u6181
  9758   0033EA  EFF9  F019         	goto	u6180
  9759   0033EE                     u6181:
  9760   0033EE  EF03  F01A         	goto	l5211
  9761   0033F2                     u6180:
  9762   0033F2  0E00               	movlw	0
  9763   0033F4  6E3B               	movwf	?___fldiv^0,c
  9764   0033F6  0E00               	movlw	0
  9765   0033F8  6E3C               	movwf	(?___fldiv+1)^0,c
  9766   0033FA  0E00               	movlw	0
  9767   0033FC  6E3D               	movwf	(?___fldiv+2)^0,c
  9768   0033FE  0E00               	movlw	0
  9769   003400  6E3E               	movwf	(?___fldiv+3)^0,c
  9770   003402  EF34  F01B         	goto	l1035
  9771   003406                     l5211:
  9772   003406  5053               	movf	___fldiv@aexp^0,w,c
  9773   003408  C052  F043         	movff	___fldiv@bexp,??___fldiv
  9774   00340C  6A44               	clrf	(??___fldiv+1)^0,c
  9775   00340E  5E43               	subwf	??___fldiv^0,f,c
  9776   003410  0E00               	movlw	0
  9777   003412  5A44               	subwfb	(??___fldiv+1)^0,f,c
  9778   003414  0E7F               	movlw	127
  9779   003416  2443               	addwf	??___fldiv^0,w,c
  9780   003418  6E4C               	movwf	___fldiv@new_exp^0,c
  9781   00341A  0E00               	movlw	0
  9782   00341C  2044               	addwfc	(??___fldiv+1)^0,w,c
  9783   00341E  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
  9784   003420  C03B  F047         	movff	___fldiv@b,___fldiv@rem
  9785   003424  C03C  F048         	movff	___fldiv@b+1,___fldiv@rem+1
  9786   003428  C03D  F049         	movff	___fldiv@b+2,___fldiv@rem+2
  9787   00342C  C03E  F04A         	movff	___fldiv@b+3,___fldiv@rem+3
  9788   003430  0E00               	movlw	0
  9789   003432  6E3B               	movwf	___fldiv@b^0,c
  9790   003434  0E00               	movlw	0
  9791   003436  6E3C               	movwf	(___fldiv@b+1)^0,c
  9792   003438  0E00               	movlw	0
  9793   00343A  6E3D               	movwf	(___fldiv@b+2)^0,c
  9794   00343C  0E00               	movlw	0
  9795   00343E  6E3E               	movwf	(___fldiv@b+3)^0,c
  9796   003440  0E00               	movlw	0
  9797   003442  6E4E               	movwf	___fldiv@grs^0,c
  9798   003444  0E00               	movlw	0
  9799   003446  6E4F               	movwf	(___fldiv@grs+1)^0,c
  9800   003448  0E00               	movlw	0
  9801   00344A  6E50               	movwf	(___fldiv@grs+2)^0,c
  9802   00344C  0E00               	movlw	0
  9803   00344E  6E51               	movwf	(___fldiv@grs+3)^0,c
  9804   003450  0E00               	movlw	0
  9805   003452  6E53               	movwf	___fldiv@aexp^0,c
  9806   003454  EF64  F01A         	goto	l1037
  9807   003458                     l5221:
  9808   003458  5053               	movf	___fldiv@aexp^0,w,c
  9809   00345A  B4D8               	btfsc	status,2,c
  9810   00345C  EF32  F01A         	goto	u6191
  9811   003460  EF34  F01A         	goto	u6190
  9812   003464                     u6191:
  9813   003464  EF4B  F01A         	goto	l5229
  9814   003468                     u6190:
  9815   003468  90D8               	bcf	status,0,c
  9816   00346A  3647               	rlcf	___fldiv@rem^0,f,c
  9817   00346C  3648               	rlcf	(___fldiv@rem+1)^0,f,c
  9818   00346E  3649               	rlcf	(___fldiv@rem+2)^0,f,c
  9819   003470  364A               	rlcf	(___fldiv@rem+3)^0,f,c
  9820   003472  90D8               	bcf	status,0,c
  9821   003474  363B               	rlcf	___fldiv@b^0,f,c
  9822   003476  363C               	rlcf	(___fldiv@b+1)^0,f,c
  9823   003478  363D               	rlcf	(___fldiv@b+2)^0,f,c
  9824   00347A  363E               	rlcf	(___fldiv@b+3)^0,f,c
  9825   00347C  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  9826   00347E  EF43  F01A         	goto	u6201
  9827   003482  EF45  F01A         	goto	u6200
  9828   003486                     u6201:
  9829   003486  EF46  F01A         	goto	l1040
  9830   00348A                     u6200:
  9831   00348A  803B               	bsf	___fldiv@b^0,0,c
  9832   00348C                     l1040:
  9833   00348C  90D8               	bcf	status,0,c
  9834   00348E  364E               	rlcf	___fldiv@grs^0,f,c
  9835   003490  364F               	rlcf	(___fldiv@grs+1)^0,f,c
  9836   003492  3650               	rlcf	(___fldiv@grs+2)^0,f,c
  9837   003494  3651               	rlcf	(___fldiv@grs+3)^0,f,c
  9838   003496                     l5229:
  9839   003496  503F               	movf	___fldiv@a^0,w,c
  9840   003498  5C47               	subwf	___fldiv@rem^0,w,c
  9841   00349A  5040               	movf	(___fldiv@a+1)^0,w,c
  9842   00349C  5848               	subwfb	(___fldiv@rem+1)^0,w,c
  9843   00349E  5041               	movf	(___fldiv@a+2)^0,w,c
  9844   0034A0  5849               	subwfb	(___fldiv@rem+2)^0,w,c
  9845   0034A2  5042               	movf	(___fldiv@a+3)^0,w,c
  9846   0034A4  584A               	subwfb	(___fldiv@rem+3)^0,w,c
  9847   0034A6  A0D8               	btfss	status,0,c
  9848   0034A8  EF58  F01A         	goto	u6211
  9849   0034AC  EF5A  F01A         	goto	u6210
  9850   0034B0                     u6211:
  9851   0034B0  EF63  F01A         	goto	l5235
  9852   0034B4                     u6210:
  9853   0034B4  8C51               	bsf	(___fldiv@grs+3)^0,6,c
  9854   0034B6  503F               	movf	___fldiv@a^0,w,c
  9855   0034B8  5E47               	subwf	___fldiv@rem^0,f,c
  9856   0034BA  5040               	movf	(___fldiv@a+1)^0,w,c
  9857   0034BC  5A48               	subwfb	(___fldiv@rem+1)^0,f,c
  9858   0034BE  5041               	movf	(___fldiv@a+2)^0,w,c
  9859   0034C0  5A49               	subwfb	(___fldiv@rem+2)^0,f,c
  9860   0034C2  5042               	movf	(___fldiv@a+3)^0,w,c
  9861   0034C4  5A4A               	subwfb	(___fldiv@rem+3)^0,f,c
  9862   0034C6                     l5235:
  9863   0034C6  2A53               	incf	___fldiv@aexp^0,f,c
  9864   0034C8                     l1037:
  9865   0034C8  0E19               	movlw	25
  9866   0034CA  6453               	cpfsgt	___fldiv@aexp^0,c
  9867   0034CC  EF6A  F01A         	goto	u6221
  9868   0034D0  EF6C  F01A         	goto	u6220
  9869   0034D4                     u6221:
  9870   0034D4  EF2C  F01A         	goto	l5221
  9871   0034D8                     u6220:
  9872   0034D8  5047               	movf	___fldiv@rem^0,w,c
  9873   0034DA  1048               	iorwf	(___fldiv@rem+1)^0,w,c
  9874   0034DC  1049               	iorwf	(___fldiv@rem+2)^0,w,c
  9875   0034DE  104A               	iorwf	(___fldiv@rem+3)^0,w,c
  9876   0034E0  B4D8               	btfsc	status,2,c
  9877   0034E2  EF75  F01A         	goto	u6231
  9878   0034E6  EF77  F01A         	goto	u6230
  9879   0034EA                     u6231:
  9880   0034EA  EF8F  F01A         	goto	l5247
  9881   0034EE                     u6230:
  9882   0034EE  804E               	bsf	___fldiv@grs^0,0,c
  9883   0034F0  EF8F  F01A         	goto	l5247
  9884   0034F4                     l5241:
  9885   0034F4  90D8               	bcf	status,0,c
  9886   0034F6  363B               	rlcf	___fldiv@b^0,f,c
  9887   0034F8  363C               	rlcf	(___fldiv@b+1)^0,f,c
  9888   0034FA  363D               	rlcf	(___fldiv@b+2)^0,f,c
  9889   0034FC  363E               	rlcf	(___fldiv@b+3)^0,f,c
  9890   0034FE  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  9891   003500  EF84  F01A         	goto	u6241
  9892   003504  EF86  F01A         	goto	u6240
  9893   003508                     u6241:
  9894   003508  EF87  F01A         	goto	l1046
  9895   00350C                     u6240:
  9896   00350C  803B               	bsf	___fldiv@b^0,0,c
  9897   00350E                     l1046:
  9898   00350E  90D8               	bcf	status,0,c
  9899   003510  364E               	rlcf	___fldiv@grs^0,f,c
  9900   003512  364F               	rlcf	(___fldiv@grs+1)^0,f,c
  9901   003514  3650               	rlcf	(___fldiv@grs+2)^0,f,c
  9902   003516  3651               	rlcf	(___fldiv@grs+3)^0,f,c
  9903   003518  064C               	decf	___fldiv@new_exp^0,f,c
  9904   00351A  A0D8               	btfss	status,0,c
  9905   00351C  064D               	decf	(___fldiv@new_exp+1)^0,f,c
  9906   00351E                     l5247:
  9907   00351E  AE3D               	btfss	(___fldiv@b+2)^0,7,c
  9908   003520  EF94  F01A         	goto	u6251
  9909   003524  EF96  F01A         	goto	u6250
  9910   003528                     u6251:
  9911   003528  EF7A  F01A         	goto	l5241
  9912   00352C                     u6250:
  9913   00352C  0E00               	movlw	0
  9914   00352E  6E53               	movwf	___fldiv@aexp^0,c
  9915   003530  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  9916   003532  EF9D  F01A         	goto	u6261
  9917   003536  EF9F  F01A         	goto	u6260
  9918   00353A                     u6261:
  9919   00353A  EFC3  F01A         	goto	l1048
  9920   00353E                     u6260:
  9921   00353E  0EFF               	movlw	255
  9922   003540  144E               	andwf	___fldiv@grs^0,w,c
  9923   003542  6E43               	movwf	??___fldiv^0,c
  9924   003544  0EFF               	movlw	255
  9925   003546  144F               	andwf	(___fldiv@grs+1)^0,w,c
  9926   003548  6E44               	movwf	(??___fldiv+1)^0,c
  9927   00354A  0EFF               	movlw	255
  9928   00354C  1450               	andwf	(___fldiv@grs+2)^0,w,c
  9929   00354E  6E45               	movwf	(??___fldiv+2)^0,c
  9930   003550  0E7F               	movlw	127
  9931   003552  1451               	andwf	(___fldiv@grs+3)^0,w,c
  9932   003554  6E46               	movwf	(??___fldiv+3)^0,c
  9933   003556  5043               	movf	??___fldiv^0,w,c
  9934   003558  1044               	iorwf	(??___fldiv+1)^0,w,c
  9935   00355A  1045               	iorwf	(??___fldiv+2)^0,w,c
  9936   00355C  1046               	iorwf	(??___fldiv+3)^0,w,c
  9937   00355E  B4D8               	btfsc	status,2,c
  9938   003560  EFB4  F01A         	goto	u6271
  9939   003564  EFB6  F01A         	goto	u6270
  9940   003568                     u6271:
  9941   003568  EFBA  F01A         	goto	l1049
  9942   00356C                     u6270:
  9943   00356C                     l5255:
  9944   00356C  0E01               	movlw	1
  9945   00356E  6E53               	movwf	___fldiv@aexp^0,c
  9946   003570  EFC3  F01A         	goto	l1048
  9947   003574                     l1049:
  9948   003574  A03B               	btfss	___fldiv@b^0,0,c
  9949   003576  EFBF  F01A         	goto	u6281
  9950   00357A  EFC1  F01A         	goto	u6280
  9951   00357E                     u6281:
  9952   00357E  EFC3  F01A         	goto	l1048
  9953   003582                     u6280:
  9954   003582  EFB6  F01A         	goto	l5255
  9955   003586                     l1048:
  9956   003586  5053               	movf	___fldiv@aexp^0,w,c
  9957   003588  B4D8               	btfsc	status,2,c
  9958   00358A  EFC9  F01A         	goto	u6291
  9959   00358E  EFCB  F01A         	goto	u6290
  9960   003592                     u6291:
  9961   003592  EFEF  F01A         	goto	l5267
  9962   003596                     u6290:
  9963   003596  0E01               	movlw	1
  9964   003598  263B               	addwf	___fldiv@b^0,f,c
  9965   00359A  0E00               	movlw	0
  9966   00359C  223C               	addwfc	(___fldiv@b+1)^0,f,c
  9967   00359E  223D               	addwfc	(___fldiv@b+2)^0,f,c
  9968   0035A0  223E               	addwfc	(___fldiv@b+3)^0,f,c
  9969   0035A2  A03E               	btfss	(___fldiv@b+3)^0,0,c
  9970   0035A4  EFD6  F01A         	goto	u6301
  9971   0035A8  EFD8  F01A         	goto	u6300
  9972   0035AC                     u6301:
  9973   0035AC  EFEF  F01A         	goto	l5267
  9974   0035B0                     u6300:
  9975   0035B0  C03B  F043         	movff	___fldiv@b,??___fldiv
  9976   0035B4  C03C  F044         	movff	___fldiv@b+1,??___fldiv+1
  9977   0035B8  C03D  F045         	movff	___fldiv@b+2,??___fldiv+2
  9978   0035BC  C03E  F046         	movff	___fldiv@b+3,??___fldiv+3
  9979   0035C0  3446               	rlcf	(??___fldiv+3)^0,w,c
  9980   0035C2  3246               	rrcf	(??___fldiv+3)^0,f,c
  9981   0035C4  3245               	rrcf	(??___fldiv+2)^0,f,c
  9982   0035C6  3244               	rrcf	(??___fldiv+1)^0,f,c
  9983   0035C8  3243               	rrcf	??___fldiv^0,f,c
  9984   0035CA  C043  F03B         	movff	??___fldiv,___fldiv@b
  9985   0035CE  C044  F03C         	movff	??___fldiv+1,___fldiv@b+1
  9986   0035D2  C045  F03D         	movff	??___fldiv+2,___fldiv@b+2
  9987   0035D6  C046  F03E         	movff	??___fldiv+3,___fldiv@b+3
  9988   0035DA  4A4C               	infsnz	___fldiv@new_exp^0,f,c
  9989   0035DC  2A4D               	incf	(___fldiv@new_exp+1)^0,f,c
  9990   0035DE                     l5267:
  9991   0035DE  BE4D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9992   0035E0  EFFA  F01A         	goto	u6311
  9993   0035E4  504D               	movf	(___fldiv@new_exp+1)^0,w,c
  9994   0035E6  E108               	bnz	u6310
  9995   0035E8  284C               	incf	___fldiv@new_exp^0,w,c
  9996   0035EA  A0D8               	btfss	status,0,c
  9997   0035EC  EFFA  F01A         	goto	u6311
  9998   0035F0  EFFC  F01A         	goto	u6310
  9999   0035F4                     u6311:
 10000   0035F4  EF07  F01B         	goto	l5271
 10001   0035F8                     u6310:
 10002   0035F8  0E00               	movlw	0
 10003   0035FA  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
 10004   0035FC  684C               	setf	___fldiv@new_exp^0,c
 10005   0035FE  0E00               	movlw	0
 10006   003600  6E3B               	movwf	___fldiv@b^0,c
 10007   003602  0E00               	movlw	0
 10008   003604  6E3C               	movwf	(___fldiv@b+1)^0,c
 10009   003606  0E00               	movlw	0
 10010   003608  6E3D               	movwf	(___fldiv@b+2)^0,c
 10011   00360A  0E00               	movlw	0
 10012   00360C  6E3E               	movwf	(___fldiv@b+3)^0,c
 10013   00360E                     l5271:
 10014   00360E  BE4D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10015   003610  EF14  F01B         	goto	u6320
 10016   003614  504D               	movf	(___fldiv@new_exp+1)^0,w,c
 10017   003616  E106               	bnz	u6321
 10018   003618  044C               	decf	___fldiv@new_exp^0,w,c
 10019   00361A  B0D8               	btfsc	status,0,c
 10020   00361C  EF12  F01B         	goto	u6321
 10021   003620  EF14  F01B         	goto	u6320
 10022   003624                     u6321:
 10023   003624  EF22  F01B         	goto	l5275
 10024   003628                     u6320:
 10025   003628  0E00               	movlw	0
 10026   00362A  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
 10027   00362C  0E00               	movlw	0
 10028   00362E  6E4C               	movwf	___fldiv@new_exp^0,c
 10029   003630  0E00               	movlw	0
 10030   003632  6E3B               	movwf	___fldiv@b^0,c
 10031   003634  0E00               	movlw	0
 10032   003636  6E3C               	movwf	(___fldiv@b+1)^0,c
 10033   003638  0E00               	movlw	0
 10034   00363A  6E3D               	movwf	(___fldiv@b+2)^0,c
 10035   00363C  0E00               	movlw	0
 10036   00363E  6E3E               	movwf	(___fldiv@b+3)^0,c
 10037   003640  0E00               	movlw	0
 10038   003642  6E4B               	movwf	___fldiv@sign^0,c
 10039   003644                     l5275:
 10040   003644  C04C  F052         	movff	___fldiv@new_exp,___fldiv@bexp
 10041   003648  A052               	btfss	___fldiv@bexp^0,0,c
 10042   00364A  EF29  F01B         	goto	u6331
 10043   00364E  EF2B  F01B         	goto	u6330
 10044   003652                     u6331:
 10045   003652  EF2E  F01B         	goto	l5281
 10046   003656                     u6330:
 10047   003656  8E3D               	bsf	(___fldiv@b+2)^0,7,c
 10048   003658  EF2F  F01B         	goto	l5283
 10049   00365C                     l5281:
 10050   00365C  9E3D               	bcf	(___fldiv@b+2)^0,7,c
 10051   00365E                     l5283:
 10052   00365E  90D8               	bcf	status,0,c
 10053   003660  3052               	rrcf	___fldiv@bexp^0,w,c
 10054   003662  6E3E               	movwf	(___fldiv@b+3)^0,c
 10055   003664  EFE5  F019         	goto	l5197
 10056   003668                     l1035:
 10057   003668  0012               	return		;funcret
 10058   00366A                     __end_of___fldiv:
 10059                           	callstack 0
 10060                           
 10061 ;; *************** function ___flge *****************
 10062 ;; Defined at:
 10063 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  ff1             4   50[COMRAM] unsigned char 
 10066 ;;  ff2             4   54[COMRAM] unsigned char 
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;		None               void
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10078 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10081 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10082 ;;Total ram usage:       12 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_RGB_to_HSV
 10088 ;;		_color_cardCheck
 10089 ;;		_efgtoa
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           	psect	text46
 10094   003F12                     __ptext46:
 10095                           	callstack 0
 10096   003F12                     ___flge:
 10097                           	callstack 25
 10098   003F12  0E00               	movlw	0
 10099   003F14  1433               	andwf	___flge@ff1^0,w,c
 10100   003F16  6E3B               	movwf	??___flge^0,c
 10101   003F18  0E00               	movlw	0
 10102   003F1A  1434               	andwf	(___flge@ff1+1)^0,w,c
 10103   003F1C  6E3C               	movwf	(??___flge+1)^0,c
 10104   003F1E  0E80               	movlw	128
 10105   003F20  1435               	andwf	(___flge@ff1+2)^0,w,c
 10106   003F22  6E3D               	movwf	(??___flge+2)^0,c
 10107   003F24  0E7F               	movlw	127
 10108   003F26  1436               	andwf	(___flge@ff1+3)^0,w,c
 10109   003F28  6E3E               	movwf	(??___flge+3)^0,c
 10110   003F2A  503B               	movf	??___flge^0,w,c
 10111   003F2C  103C               	iorwf	(??___flge+1)^0,w,c
 10112   003F2E  103D               	iorwf	(??___flge+2)^0,w,c
 10113   003F30  103E               	iorwf	(??___flge+3)^0,w,c
 10114   003F32  A4D8               	btfss	status,2,c
 10115   003F34  EF9E  F01F         	goto	u6561
 10116   003F38  EFA0  F01F         	goto	u6560
 10117   003F3C                     u6561:
 10118   003F3C  EFA8  F01F         	goto	l5447
 10119   003F40                     u6560:
 10120   003F40  0E00               	movlw	0
 10121   003F42  6E33               	movwf	___flge@ff1^0,c
 10122   003F44  0E00               	movlw	0
 10123   003F46  6E34               	movwf	(___flge@ff1+1)^0,c
 10124   003F48  0E00               	movlw	0
 10125   003F4A  6E35               	movwf	(___flge@ff1+2)^0,c
 10126   003F4C  0E00               	movlw	0
 10127   003F4E  6E36               	movwf	(___flge@ff1+3)^0,c
 10128   003F50                     l5447:
 10129   003F50  0E00               	movlw	0
 10130   003F52  1437               	andwf	___flge@ff2^0,w,c
 10131   003F54  6E3B               	movwf	??___flge^0,c
 10132   003F56  0E00               	movlw	0
 10133   003F58  1438               	andwf	(___flge@ff2+1)^0,w,c
 10134   003F5A  6E3C               	movwf	(??___flge+1)^0,c
 10135   003F5C  0E80               	movlw	128
 10136   003F5E  1439               	andwf	(___flge@ff2+2)^0,w,c
 10137   003F60  6E3D               	movwf	(??___flge+2)^0,c
 10138   003F62  0E7F               	movlw	127
 10139   003F64  143A               	andwf	(___flge@ff2+3)^0,w,c
 10140   003F66  6E3E               	movwf	(??___flge+3)^0,c
 10141   003F68  503B               	movf	??___flge^0,w,c
 10142   003F6A  103C               	iorwf	(??___flge+1)^0,w,c
 10143   003F6C  103D               	iorwf	(??___flge+2)^0,w,c
 10144   003F6E  103E               	iorwf	(??___flge+3)^0,w,c
 10145   003F70  A4D8               	btfss	status,2,c
 10146   003F72  EFBD  F01F         	goto	u6571
 10147   003F76  EFBF  F01F         	goto	u6570
 10148   003F7A                     u6571:
 10149   003F7A  EFC7  F01F         	goto	l5451
 10150   003F7E                     u6570:
 10151   003F7E  0E00               	movlw	0
 10152   003F80  6E37               	movwf	___flge@ff2^0,c
 10153   003F82  0E00               	movlw	0
 10154   003F84  6E38               	movwf	(___flge@ff2+1)^0,c
 10155   003F86  0E00               	movlw	0
 10156   003F88  6E39               	movwf	(___flge@ff2+2)^0,c
 10157   003F8A  0E00               	movlw	0
 10158   003F8C  6E3A               	movwf	(___flge@ff2+3)^0,c
 10159   003F8E                     l5451:
 10160   003F8E  AE36               	btfss	(___flge@ff1+3)^0,7,c
 10161   003F90  EFCC  F01F         	goto	u6581
 10162   003F94  EFCE  F01F         	goto	u6580
 10163   003F98                     u6581:
 10164   003F98  EFD7  F01F         	goto	l5455
 10165   003F9C                     u6580:
 10166   003F9C  6C33               	negf	___flge@ff1^0,c
 10167   003F9E  1E34               	comf	(___flge@ff1+1)^0,f,c
 10168   003FA0  B0D8               	btfsc	status,0,c
 10169   003FA2  2A34               	incf	(___flge@ff1+1)^0,f,c
 10170   003FA4  1E35               	comf	(___flge@ff1+2)^0,f,c
 10171   003FA6  B0D8               	btfsc	status,0,c
 10172   003FA8  2A35               	incf	(___flge@ff1+2)^0,f,c
 10173   003FAA  0E80               	movlw	128
 10174   003FAC  5636               	subfwb	(___flge@ff1+3)^0,f,c
 10175   003FAE                     l5455:
 10176   003FAE  AE3A               	btfss	(___flge@ff2+3)^0,7,c
 10177   003FB0  EFDC  F01F         	goto	u6591
 10178   003FB4  EFDE  F01F         	goto	u6590
 10179   003FB8                     u6591:
 10180   003FB8  EFE7  F01F         	goto	l718
 10181   003FBC                     u6590:
 10182   003FBC  6C37               	negf	___flge@ff2^0,c
 10183   003FBE  1E38               	comf	(___flge@ff2+1)^0,f,c
 10184   003FC0  B0D8               	btfsc	status,0,c
 10185   003FC2  2A38               	incf	(___flge@ff2+1)^0,f,c
 10186   003FC4  1E39               	comf	(___flge@ff2+2)^0,f,c
 10187   003FC6  B0D8               	btfsc	status,0,c
 10188   003FC8  2A39               	incf	(___flge@ff2+2)^0,f,c
 10189   003FCA  0E80               	movlw	128
 10190   003FCC  563A               	subfwb	(___flge@ff2+3)^0,f,c
 10191   003FCE                     l718:
 10192   003FCE  0E00               	movlw	0
 10193   003FD0  1A33               	xorwf	___flge@ff1^0,f,c
 10194   003FD2  0E00               	movlw	0
 10195   003FD4  1A34               	xorwf	(___flge@ff1+1)^0,f,c
 10196   003FD6  0E00               	movlw	0
 10197   003FD8  1A35               	xorwf	(___flge@ff1+2)^0,f,c
 10198   003FDA  0E80               	movlw	128
 10199   003FDC  1A36               	xorwf	(___flge@ff1+3)^0,f,c
 10200   003FDE  0E00               	movlw	0
 10201   003FE0  1A37               	xorwf	___flge@ff2^0,f,c
 10202   003FE2  0E00               	movlw	0
 10203   003FE4  1A38               	xorwf	(___flge@ff2+1)^0,f,c
 10204   003FE6  0E00               	movlw	0
 10205   003FE8  1A39               	xorwf	(___flge@ff2+2)^0,f,c
 10206   003FEA  0E80               	movlw	128
 10207   003FEC  1A3A               	xorwf	(___flge@ff2+3)^0,f,c
 10208   003FEE  5037               	movf	___flge@ff2^0,w,c
 10209   003FF0  5C33               	subwf	___flge@ff1^0,w,c
 10210   003FF2  5038               	movf	(___flge@ff2+1)^0,w,c
 10211   003FF4  5834               	subwfb	(___flge@ff1+1)^0,w,c
 10212   003FF6  5039               	movf	(___flge@ff2+2)^0,w,c
 10213   003FF8  5835               	subwfb	(___flge@ff1+2)^0,w,c
 10214   003FFA  503A               	movf	(___flge@ff2+3)^0,w,c
 10215   003FFC  5836               	subwfb	(___flge@ff1+3)^0,w,c
 10216   003FFE  B0D8               	btfsc	status,0,c
 10217   004000  EF04  F020         	goto	u6601
 10218   004004  EF06  F020         	goto	u6600
 10219   004008                     u6601:
 10220   004008  EF09  F020         	goto	l5461
 10221   00400C                     u6600:
 10222   00400C  90D8               	bcf	status,0,c
 10223   00400E  EF0A  F020         	goto	l723
 10224   004012                     l5461:
 10225   004012  80D8               	bsf	status,0,c
 10226   004014                     l723:
 10227   004014  0012               	return		;funcret
 10228   004016                     __end_of___flge:
 10229                           	callstack 0
 10230                           
 10231                           	psect	rparam
 10232   000000                     
 10233                           	psect	config
 10234                           
 10235                           ;Config register CONFIG1L @ 0x300000
 10236                           ;	External Oscillator mode Selection bits
 10237                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10238                           ;	Power-up default value for COSC bits
 10239                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10240   300000                     	org	3145728
 10241   300000  AA                 	db	170
 10242                           
 10243                           ;Config register CONFIG1H @ 0x300001
 10244                           ;	unspecified, using default values
 10245                           ;	Clock Out Enable bit
 10246                           ;	CLKOUTEN = 0x1, unprogrammed default
 10247                           ;	Clock Switch Enable bit
 10248                           ;	CSWEN = 0x1, unprogrammed default
 10249                           ;	Fail-Safe Clock Monitor Enable bit
 10250                           ;	FCMEN = 0x1, unprogrammed default
 10251   300001                     	org	3145729
 10252   300001  FF                 	db	255
 10253                           
 10254                           ;Config register CONFIG3L @ 0x300004
 10255                           ;	WDT Period Select bits
 10256                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10257                           ;	WDT operating mode
 10258                           ;	WDTE = OFF, WDT Disabled
 10259   300004                     	org	3145732
 10260   300004  9F                 	db	159
 10261                           
 10262                           ;Config register CONFIG3H @ 0x300005
 10263                           ;	unspecified, using default values
 10264                           ;	WDT Window Select bits
 10265                           ;	WDTCWS = 0x7, unprogrammed default
 10266                           ;	WDT input clock selector
 10267                           ;	WDTCCS = 0x7, unprogrammed default
 10268   300005                     	org	3145733
 10269   300005  FF                 	db	255
 10270                           tosu	equ	0xFFF
 10271                           tosh	equ	0xFFE
 10272                           tosl	equ	0xFFD
 10273                           stkptr	equ	0xFFC
 10274                           pclatu	equ	0xFFB
 10275                           pclath	equ	0xFFA
 10276                           pcl	equ	0xFF9
 10277                           tblptru	equ	0xFF8
 10278                           tblptrh	equ	0xFF7
 10279                           tblptrl	equ	0xFF6
 10280                           tablat	equ	0xFF5
 10281                           prodh	equ	0xFF4
 10282                           prodl	equ	0xFF3
 10283                           indf0	equ	0xFEF
 10284                           postinc0	equ	0xFEE
 10285                           postdec0	equ	0xFED
 10286                           preinc0	equ	0xFEC
 10287                           plusw0	equ	0xFEB
 10288                           fsr0h	equ	0xFEA
 10289                           fsr0l	equ	0xFE9
 10290                           wreg	equ	0xFE8
 10291                           indf1	equ	0xFE7
 10292                           postinc1	equ	0xFE6
 10293                           postdec1	equ	0xFE5
 10294                           preinc1	equ	0xFE4
 10295                           plusw1	equ	0xFE3
 10296                           fsr1h	equ	0xFE2
 10297                           fsr1l	equ	0xFE1
 10298                           bsr	equ	0xFE0
 10299                           indf2	equ	0xFDF
 10300                           postinc2	equ	0xFDE
 10301                           postdec2	equ	0xFDD
 10302                           preinc2	equ	0xFDC
 10303                           plusw2	equ	0xFDB
 10304                           fsr2h	equ	0xFDA
 10305                           fsr2l	equ	0xFD9
 10306                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        1
    BSS         204
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    111     156
    BANK1           256     55     215
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    RGB_to_HSV@H	PTR float  size(2) Largest target is 4
		 -> color_cardCheck@H(BANK1[4]), 

    RGB_to_HSV@S	PTR float  size(2) Largest target is 4
		 -> color_cardCheck@S(BANK1[4]), 

    RGB_to_HSV@V	PTR float  size(2) Largest target is 4
		 -> color_cardCheck@V(BANK1[4]), 

    S2182$buffer	PTR unsigned char  size(2) Largest target is 0

    S2182$source	PTR const unsigned char  size(2) Largest target is 0

    S34DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S34DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 25
		 -> color_cardCheck@senddata(BANK1[25]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_1(CODE[28]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> color_cardCheck@senddata(BANK1[25]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 28
		 -> STR_1(CODE[28]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 28
		 -> STR_1(CODE[28]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_1(CODE[28]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flsub
    ___flge->___flmul

Critical Paths under _main in BANK0

    _main->_color_cardCheck
    _color_cardCheck->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    _main->_color_cardCheck

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  113730
                                            109 BANK0      2     2      0
                    _color_cardCheck
                   _color_click_init
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_cardCheck                                     59    57      2  113433
                                            105 BANK0      4     2      2
                                              0 BANK1     55    55      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    15     17   49478
                                             75 BANK0     30    13     17
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   48974
                                             71 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3   48477
                                             60 BANK0     11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     6      3    5016
                                             22 COMRAM     9     6      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     781
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1212
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     772
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   40134
                                             93 COMRAM     2     2      0
                                             10 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3309
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             83 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     177
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RGB_to_HSV                                          78    56     22   50548
                                             10 BANK0     78    56     22
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (3) _custom_floatmodulo                                  18    10      8   17789
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     697
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5447
                                             50 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3982
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4493
                                             25 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8    1850
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    4163
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8   10166
                                             50 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _color_cardCheck
     _RGB_to_HSV
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
           ___xxtofl (ARG)
       ___fleq
       ___flge
         ___flmul (ARG)
       ___flmul
       ___flsub
       _custom_floatmodulo
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
     ___flge
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     37      D7       7       84.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6F      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhh         40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllhh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllhh     1E      0       0      46        0.0%
BITBIGSFRhlll       17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      47        0.0%
BITBIGSFRllllll      F      0       0      54        0.0%
BITBIGSFRhlhh        E      0       0      33        0.0%
BITBIGSFRllllll      9      0       0      53        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      51        0.0%
BITBIGSFRlllllh      5      0       0      50        0.0%
BITBIGSFRlhh         5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      49        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhllh        2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhlhl        1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      39        0.0%
BITBIGSFRlhll        1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D2      57        0.0%
DATA                 0      0     1D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 05:32:20 2024

               _color_read_Red 45F8                   ___fldiv@aexp 0053                   ___fldiv@bexp 0052  
                 ___fldiv@sign 004B                _color_read_Blue 46E8                             l90 4646  
                           l84 4844                             l93 4696                             l87 4A60  
                           l96 4736                             l99 46E6            ___wmul@multiplicand 0003  
             _color_read_Clear 4698               _color_read_Green 4648                            l103 3E0A  
                          l111 23D4                            l113 23E4                            l123 24D6  
                          l115 243E                            l140 29E4                            l133 289E  
                          l125 24E6                            l117 244E                            l127 2540  
                          l312 49F4                            l152 1860                            l129 2550  
                          l321 4AC0                            l330 4804                            l139 29A8  
                          l315 4A1A                            l403 4A7E                            l324 4AAC  
                          l412 4A82                            l421 499A                            l309 49F2  
                          l318 4AB6                            l158 18D6                            l327 4AA2  
                          l415 4A96                            l453 4A40                            l712 4412  
                          l723 4014                            l718 3FCE                            l750 3F10  
                          l727 493A                            l951 4486                            l944 447E  
                          l961 4550                            l954 4548                            l981 2BD4  
                          l990 2EA4                            l982 2BC2                            l983 2B88  
                          l998 2CEE                            _pad 4488                            wreg 0FE8  
                 ___flmul@aexp 0027                   ___flmul@bexp 002C                   ___flmul@sign 0026  
                 ___flmul@temp 0031                   ___flmul@prod 002D                   ___fltol@exp1 000A  
                         l1007 2DBE                           l1023 47C2                           l1111 3CF2  
                         l1040 348C                           l1008 2DAC                           l1122 3C8A  
                         l1035 3668                           l1115 3C2E                           l1131 4884  
                         l1108 3B96                           l1220 4138                           l1037 34C8  
                         l1046 350E                           l1206 20A6                           l1230 4360  
                         l1071 32CE                           l1048 3586                           l1304 45F6  
                         l1049 3574                           l1074 3160                           l1162 44EC  
                         l1234 4368                           l1226 4200                           l1218 4130  
                         l1067 2F6A                           l1084 3290                           l1076 31D8  
                         l1316 42BA                           l1324 48C4                           l1244 3928  
                         l1077 31C6                           l1333 4902                           l1173 22BE  
                         l1158 449E                           l1327 4AC2                           l1176 1C5E  
                         l1178 1AA4                           l1267 477C                           l1284 3B3E  
                         l1277 4112                           l1287 3A82                           l5001 2B0A  
                         l4201 3C6C                           l2521 49DE                           l2513 49CA  
                         l1298 45A6                           l5011 2B1E                           l5003 2B0E  
                         l4211 3CC2                           l4203 3C7A                           l2523 49E0  
                         l2515 49D4                           l5101 2D8E                           l5021 2B70  
                         l5013 2B22                           l5005 2B12                           l4213 3CD2  
                         l4205 3C98                           l2517 49DA                           l5111 2DE8  
                         l5103 2DA4                           l5031 2BB4                           l5023 2B80  
                         l5007 2B16                           l5015 2B26                           l4215 3CE0  
                         l4207 3C9A                           l4311 4AAE                           l2519 49DC  
                         l5121 2E64                           l5113 2E22                           l5033 2BB6  
                         l5025 2B96                           l5017 2B2A                           l5009 2B1A  
                         l4217 3CE2                           l4209 3C9E                           l6001 3D3A  
                         l4313 4AB2                           l4321 4AA8                           l2801 4A7A  
                         l5211 3406                           l5203 33E2                           l5131 2E84  
                         l5123 2E68                           l5107 2DCE                           l5115 2E24  
                         l5051 2C3E                           l5043 2C06                           l5035 2BC0  
                         l5027 2BA2                           l5019 2B54                           l6003 3D8A  
                         l4171 49F4                           l4331 47D2                           l4323 4AB8  
                         l4315 4A9A                           l6011 4740                           l2803 4A7C  
                         l5221 3458                           l5213 3420                           l5205 33F2  
                         l5301 2EE2                           l5133 2E92                           l5125 2E76  
                         l5117 2E34                           l5109 2DDA                           l5053 2C42  
                         l5045 2C16                           l5037 2BE2                           l5061 2C62  
                         l5029 2BA6                           l4181 3BA6                           l6005 3DFA  
                         l6021 238E                           l4173 4A04                           l4333 47DA  
                         l4325 4ABC                           l4317 4A9E                           l5141 4892  
                         l6013 4752                           l6101 0F26                           l5231 34B4  
                         l5223 3468                           l5215 3430                           l5207 33F2  
                         l5311 2F14                           l5303 2EF2                           l5135 2E94  
                         l5127 2E7C                           l5119 2E44                           l5063 2C88  
                         l5071 2CDE                           l5055 2C50                           l5047 2C24  
                         l5039 2BF2                           l4191 3BE4                           l4183 3BBC  
                         l4175 3B42                           l6031 2490                           l6023 23C0  
                         l4335 4800                           l4327 47C6                           l4319 4AA4  
                         l5143 48A0                           l6015 4772                           l6111 1020  
                         l6103 0F58                           l5241 34F4                           l5233 34B6  
                         l5225 347C                           l5217 3440                           l5161 32FC  
                         l5153 32D0                           l5401 324A                           l5321 2F54  
                         l5313 2F22                           l5305 2EF8                           l5129 2E7E  
                         l5081 2D32                           l5073 2D04                           l5065 2CBC  
                         l5057 2C52                           l5049 2C32                           l4193 3C16  
                         l4177 3B52                           l6041 25C6                           l6033 24C2  
                         l6025 23F8                           l4337 4802                           l4329 47CA  
                         l5145 48A4                           l6009 4738                           l6201 17EE  
                         l6121 10F6                           l6113 1052                           l6105 0F8A  
                         l5251 3530                           l5243 34FE                           l5235 34C6  
                         l5227 348A                           l5219 3450                           l5171 3336  
                         l5163 330C                           l5155 32DC                           l5411 32B2  
                         l5403 325E                           l5331 2F9E                           l5323 2F5A  
                         l5315 2F24                           l5307 2F08                           l5091 2D5C  
                         l5083 2D40                           l5075 2D14                           l5067 2CBE  
                         l5059 2C5C                           l4195 3C18                           l4187 3BD0  
                         l4179 3B60                           l6051 26D2                           l6043 25DC  
                         l6035 24FA                           l6027 242A                           l6019 22C0  
                         l4371 45F8                           l4355 4A82                           l5139 4886  
                         l5147 4A1C                           l6211 18B6                           l6203 1820  
                         l6131 11CC                           l6123 1128                           l6107 0FBC  
                         l6115 1060                           l5261 35A2                           l5253 353E  
                         l5245 350C                           l5237 34D8                           l5229 3496  
                         l5181 3362                           l5173 333C                           l5165 331C  
                         l5157 32EA                           l5413 32B4                           l5405 3278  
                         l5341 2FEE                           l5333 2FAA                           l5325 2F7A  
                         l5317 2F34                           l5309 2F0E                           l5093 2D6C  
                         l5085 2D42                           l5069 2CCE                           l5421 477E  
                         l4197 3C24                           l4189 3BD8                           l6061 2842  
                         l6053 2704                           l6045 260E                           l6037 252C  
                         l6029 245E                           l4373 463E                           l4357 4A92  
                         l5149 4A38                           l6213 18CE                           l6205 1852  
                         l6141 12A2                           l6133 11FE                           l6125 115A  
                         l6117 1092                           l6109 0FEE                           ?_pad 000F  
                         l5271 360E                           l5263 35B0                           l5255 356C  
                         l5239 34EE                           l5247 351E                           l5191 339C  
                         l5183 3372                           l5175 3342                           l5167 331E  
                         l5159 32EC                           l5431 43A8                           l5407 3294  
                         l5415 32BA                           l5351 3030                           l5343 2FFA  
                         l5335 2FB4                           l5327 2F8A                           l5319 2F44  
                         l5087 2D50                           l5079 2D28                           l5095 2D6E  
                         l5423 478E                           l5511 3EF0                           l4199 3C60  
                         l6071 292C                           l6055 275C                           l6047 2666  
                         l6063 289E                           l6039 2560                           l4383 46E8  
                         l4391 46DE                           l6143 12D4                           l6151 1378  
                         l6135 1230                           l6127 118C                           l6119 10C4  
                         l6207 1860                           l4471 4806                           l5281 365C  
                         l5273 3628                           l5265 35DA                           l5249 352C  
                         l5193 33B2                           l5185 3382                           l5177 3350  
                         l5169 3326                           l5433 43D6                           l5417 32BE  
                         l5409 32A4                           l5361 3092                           l5353 303C  
                         l5345 3006                           l5337 2FCA                           l5089 2D58  
                         l5097 2D7C                           l5513 3F00                           l5505 3EC4  
                         l6073 2948                           l6065 28AE                           l6057 27B8  
                         l6049 269A                           l4385 472E                           l4377 4648  
                         l5601 392A                           l5521 442E                           l6081 4864  
                         l6209 18AA                           l6161 1472                           l6153 13AA  
                         l6145 1306                           l6137 123E                           l6129 119A  
                         l4369 4A44                           l4481 4838                           l4473 480A  
                         l2793 4A62                           l5451 3F8E                           l5443 3F12  
                         l5283 365E                           l5275 3644                           l5259 3596  
                         l5267 35DE                           l5195 33C2                           l5187 3384  
                         l5179 3352                           l5435 43E6                           l5427 436A  
                         l5371 3128                           l5363 309E                           l5355 304C  
                         l5347 3014                           l5339 2FD6                           l5291 2EA6  
                         l5099 2D80                           l5507 3ED0                           l6067 28E2  
                         l6059 27EA                           l4379 468E                           l6091 497E  
                         l5603 394A                           l5531 4468                           l5523 4436  
                         l6083 4874                           l6075 4846                           l6171 1548  
                         l6163 14A4                           l6155 13DC                           l6147 1338  
                         l6139 1270                           l4491 4842                           l4483 483A  
                         l4475 4814                           l2795 4A6C                           l5461 4012  
                         l5453 3F9C                           l5445 3F40                           l5277 3648  
                         l5269 35F8                           l5197 33CA                           l5189 338C  
                         l5437 440A                           l5429 4398                           l5381 317E  
                         l5373 3146                           l5365 30BA                           l5357 3066  
                         l5349 3020                           l5293 2EB2                           l5509 3EE0  
                         l6069 28FA                           l4389 4698                           l6093 4982  
                         l5621 3AF6                           l5613 3A36                           l5605 39A2  
                         l5701 1A54                           l5533 4470                           l5525 443E  
                         l5517 4414                           l5541 4500                           l6077 4854  
                         l6181 161E                           l6173 157A                           l6157 140E  
                         l6165 14B2                           l6149 136A                           l4485 483C  
                         l4477 4824                           l2797 4A6E                           l5455 3FAE  
                         l5447 3F50                           l5279 3656                           l5199 33CE  
                         l5439 4410                           l5391 31E8                           l5383 3182  
                         l5375 3150                           l5367 30E4                           l5359 3076  
                         l5295 2EC0                           l6087 496C                           l5623 3B1E  
                         l5615 3A72                           l5607 39B6                           l5631 45BC  
                         l5711 1AEE                           l5703 1A6E                           l5535 4472  
                         l5527 444C                           l5519 441C                           l5551 453C  
                         l5543 4508                           l6079 485C                           l6191 1718  
                         l6183 1650                           l6175 15AC                           l6167 14E4  
                         l6159 1440                           l6095 0E26                           l4487 483E  
                         l4479 482E                           l2799 4A78                           l5457 3FBC  
                         l5449 3F7E                           l5393 31F4                           l5385 3190  
                         l5377 315E                           l5369 311A                           l5297 2EC2  
                         l5481 3E60                           l5473 3E0C                           l6089 4970  
                         l5465 4904                           l5625 3B2E                           l5609 39C4  
                         l5617 3AA6                           l5633 45C8                           l5561 44BA  
                         l5801 207C                           l5721 1BE4                           l5713 1B2C  
                         l5641 18D8                           l5537 4478                           l5529 4452  
                         l5553 4542                           l5545 4510                           l6185 1682  
                         l6193 1726                           l6177 15DE                           l6169 1516  
                         l6097 0EBE                           l4489 4840                           l5459 400C  
                         l5395 3202                           l5387 31BE                           l5379 3170  
                         l5299 2ED2                           l5483 3E62                           l5475 3E22  
                         l5467 491A                           l5571 4074                           l5619 3AE2  
                         l5635 45CC                           l4931 4248                           l4923 4202  
                         l5563 44BE                           l5555 4488                           l5811 20DA  
                         l5803 209C                           l5731 1C76                           l5723 1BEC  
                         l5715 1B5E                           l5707 1AB4                           l5651 1924  
                         l5643 18DE                           l5547 451E                           l5539 44EE  
                         l6195 1758                           l6187 16B4                           l6179 15EC  
                         l6099 0F1C                           l5397 322C                           l4941 2A00  
                         l5485 3E72                           l5469 492A                           l5581 40C6  
                         l5573 409C                           l5637 45D8                           l5629 45A8  
                         l4933 427A                           l4925 4212                           l5565 44DC  
                         l5557 4496                           l5821 2102                           l5813 20E0  
                         l5805 20B8                           l5741 1CA8                           l5733 1C82  
                         l5717 1B9C                           l5709 1ABA                           l5661 1962  
                         l5653 192E                           l5645 18EE                           l5901 432E  
                         l5549 4534                           l6197 178A                           l6189 16E6  
                         l5399 3230                           l4951 2A34                           l4943 2A02  
                         l5495 3E9C                           l5487 3E76                           l5479 3E36  
                         l5575 40A8                           l5567 4016                           l5639 45DC  
                         l4927 4222                           l5559 44AA                           l5591 48CE  
                         l5831 2136                           l5815 20E8                           l5807 20C6  
                         l5823 2108                           l5751 1CF0                           l5743 1CB6  
                         l5735 1C8A                           l5719 1BB0                           l5727 1C2C  
                         l5671 19AA                           l5663 196A                           l5655 1936  
                         l5647 18FC                           l5903 4336                           l5911 36A6  
                         l6199 17BC                           l6391 499C                           l4961 2A66  
                         l4945 2A12                           l4953 2A3C                           l4937 29E6  
                         l5497 3EA6                           l5489 3E84                           l5585 410A  
                         l5569 4036                           l5593 4552                           l4929 422C  
                         l5841 21EC                           l5833 218E                           l5825 211A  
                         l5817 20F8                           l5809 20D6                           l5761 1E04  
                         l5753 1D00                           l5745 1CCE                           l5737 1C92  
                         l5729 1C66                           l5673 19B0                           l5657 1946  
                         l5665 196E                           l5649 1900                           l6481 3774  
                         l5921 36F8                           l5913 36AA                           l5905 366A  
                         l6393 49A0                           l4971 2A9C                           l4963 2A6C  
                         l4955 2A4C                           l4947 2A22                           l4939 29F2  
                         l5499 3EB0                           l5579 40B4                           l5595 4560  
                         l5851 225C                           l5843 2208                           l5835 21C2  
                         l5827 212C                           l5819 20FC                           l5771 1EA4  
                         l5755 1D14                           l5763 1E0A                           l5747 1CE0  
                         l5739 1C96                           l5691 1A34                           l5675 19B8  
                         l5667 1994                           l5683 19F2                           l5659 1956  
                         l6483 37CC                           l5923 3718                           l5915 36D0  
                         l5907 3692                           l6395 49A4                           l4981 2AD8  
                         l4973 2AAC                           l4965 2A7A                           l4957 2A52  
                         l4949 2A32                           l5597 4574                           l5589 48C6  
                         l5853 2274                           l5845 2210                           l5837 21CA  
                         l5829 2130                           l5781 1F80                           l5773 1ED6  
                         l5765 1E28                           l5757 1D78                           l5749 1CE8  
                         l5693 1A3C                           l5685 1A18                           l5677 19CC  
                         l5669 19A6                           l6485 3872                           l5941 37A8  
                         l5933 3752                           l5925 3730                           l5917 36D8  
                         l5909 369A                           l6397 49BE                           l4991 2AF6  
                         l4983 2AE6                           l4975 2AAE                           l4967 2A7C  
                         l4959 2A64                           l5855 2284                           l5847 221E  
                         l5839 21CE                           l5791 1FE2                           l5783 1F86  
                         l5775 1EE6                           l5767 1E5C                           l5759 1DD0  
                         l5687 1A2A                           l5679 19D6                           l5871 4152  
                         l5863 4114                           l6487 38E6                           l5951 380E  
                         l5943 37B0                           l5927 373E                           l5935 3782  
                         l5919 36EC                           l4993 2AFA                           l4985 2AEA  
                         l4969 2A8C                           l4977 2AB6                           l5857 229A  
                         l5849 224E                           l5793 1FEA                           l5785 1FBA  
                         l5777 1EF6                           l5769 1E8E                           l5689 1A2E  
                         l5873 4158                           l5881 41A6                           l5865 4124  
                         l5961 3896                           l5953 3836                           l5937 378C  
                         l4995 2AFE                           l4987 2AEE                           l4979 2AC6  
                         l5859 22A2                           l5795 1FF0                           l5787 1FCE  
                         l5779 1F2A                           l5891 42BC                           l5883 41B8  
                         l5875 417E                           l5867 4140                           l5939 37A2  
                         l5947 37B8                           l4997 2B02                           l4989 2AF2  
                         l5797 1FF8                           l5789 1FD2                           l5893 42C4  
                         l5885 41CA                           l5877 4184                           l5869 4148  
                         l5957 385E                           l5949 37EA                           l5973 3902  
                         l4999 2B06                           l5799 2004                           l5895 42EA  
                         l5887 41E4                           l5879 418A                           l5967 38C4  
                         l5959 3888                           l5897 42F2                           l5969 38F4  
                         l5995 3CF4                           l5899 430E                           l5997 3D26  
                         STR_1 0E01                           STR_2 0E1D                           STR_5 0E21  
                 _BAUD4CONbits 0EE9                           _T2PR 0FBC                           u6000 2DA4  
                         u6001 2DA0                           u6010 2DBA                           u6011 2DB6  
                         u6020 2DCE                           u6100 48C4                           u6021 2DCA  
                         u6101 48C0                           u6110 32EA                           u6030 2DE8  
                         u6111 32E6                           u6031 2DE4                           u6200 348A  
                         u6120 32FC                           u6040 2E22                           u4600 3B60  
                         u7000 1994                           u6201 3486                           u6121 32F8  
                         u6041 2E1E                           u4601 3B5C                           u7001 1990  
                         u6210 34B4                           u6130 330C                           u6050 2E34  
                         u4610 3BBC                           u7010 19A6                           u6211 34B0  
                         u6131 3308                           u6051 2E30                           u4611 3BB8  
                         u7011 19A2                           u6300 35B0                           u6220 34D8  
                         u6140 3350                           u6060 2E44                           u4620 3C12  
                         u7100 1C76                           u7020 1A18                           u6301 35AC  
                         u6221 34D4                           u6141 334C                           u6061 2E40  
                         u4621 3C0E                           u7101 1C72                           u7021 1A14  
                         u6310 35F8                           u6230 34EE                           u6150 3362  
                         u6070 2E64                           u4630 3C5C                           u7110 1CA8  
                         u7030 1A2A                           u6311 35F4                           u6231 34EA  
                         u6151 335E                           u6071 2E60                           u4631 3C58  
                         u7111 1CA4                           u7031 1A26                           u6320 3628  
                         u6240 350C                           u6160 3372                           u6400 2F7A  
                         u6080 2E76                           u4640 3C7A                           u7200 207C  
                         u7120 1CB6                           u7040 1AA0                           u6321 3624  
                         u6241 3508                           u6161 336E                           u6401 2F76  
                         u6081 2E72                           u4641 3C76                           u7201 2078  
                         u7121 1CB2                           u7041 1A9C                           u6330 3656  
                         u6250 352C                           u6170 33B2                           u6410 2F8A  
                         u6090 2E92                           u4650 3C8A                           u4570 4A04  
                         u4730 47EE                           u7210 20B8                           u7130 1CE0  
                         u7050 1B2C                           u6331 3652                           u6251 3528  
                         u6171 33AE                           u6411 2F86                           u6091 2E8E  
                         u4651 3C86                           u4571 4A00                           u4731 47E6  
                         u7211 20B4                           u7131 1CDC                           u7051 1B28  
                         u6260 353E                           u6180 33F2                           u6500 324A  
                         u6420 3104                           u6340 2EC0                           u4660 3C98  
                         u4580 4A1A                           u5700 427A                           u7220 20C6  
                         u7140 1E28                           u7060 1B5E                           u7300 41B8  
                         u6261 353A                           u6181 33EE                           u6501 3246  
                         u6341 2EBC                           u4661 3C94                           u4581 4A16  
                         u5701 4276                           u7221 20C2                           u7141 1E24  
                         u7061 1B5A                           u7301 41B4                           u6270 356C  
                         u6190 3468                           u6510 3278                           u6430 315E  
                         u6350 2ED2                           u5710 2A00                           u4670 3CD2  
                         u4590 3B52                           u7230 211A                           u7150 1E8E  
                         u7070 1B9C                           u7310 41CA                           u6271 3568  
                         u6191 3464                           u6511 3274                           u6431 315A  
                         u6351 2ECE                           u5711 29FC                           u4671 3CCE  
                         u4591 3B4E                           u7231 2116                           u7151 1E8A  
                         u7071 1B98                           u7311 41C6                           u6600 400C  
                         u6280 3582                           u6520 32B2                           u6440 317E  
                         u6360 2EE2                           u5800 2B54                           u5720 2A12  
                         u4680 3CE0                           u4760 4A92                           u7240 21EC  
                         u7160 1ED6                           u7080 1C28                           u7320 41E4  
                         u7400 4772                           u6601 4008                           u6281 357E  
                         u6521 32AE                           u6441 317A                           u6425 30FA  
                         u6361 2EDE                           u5801 2B50                           u5721 2A0E  
                         u4681 3CDC                           u4761 4A8E                           u7241 21E8  
                         u7161 1ED2                           u7081 1C24                           u7321 41E0  
                         u7401 476E                           u6290 3596                           u6530 4398  
                         u6450 3190                           u6370 2F22                           u5810 2B6C  
                         u5730 2A22                           u7410 238E                           u6610 491A  
                         u7250 2208                           u7170 1EE6                           u7090 1C5E  
                         u7330 42EA                           u6291 3592                           u6531 4394  
                         u6451 318C                           u6371 2F1E                           u5811 2B66  
                         u5731 2A1E                           u7411 238A                           u6611 4916  
                         u7251 2204                           u7171 1EE2                           u7091 1C5A  
                         u7331 42E6                           u6540 43D6                           u6460 31BE  
                         u6380 2F34                           u5900 2C50                           u5820 2B6E  
                         u5740 2A64                           u6620 3E22                           u7500 27EA  
                         u7420 23C0                           u4748 47F0                           u7260 226E  
                         u7180 1F80                           u7340 4360                           u6700 444C  
                         u6541 43D2                           u6461 31BA                           u6381 2F30  
                         u5901 2C4C                           u5741 2A60                           u6621 3E1E  
                         u7501 27E6                           u7421 23BC                           u7261 2268  
                         u7181 1F7C                           u7341 435C                           u6701 4448  
                         u6550 440A                           u6470 31D4                           u6390 2F44  
                         u5910 2C88                           u5830 2B96                           u5750 2A7A  
                         u6630 3E56                           u7510 28AE                           u7430 242A  
                         u5670 4212                           u7270 2270                           u7190 1FCE  
                         u6710 4468                           u7350 3692                           u6551 4406  
                         u6471 31D0                           u6391 2F40                           u5911 2C84  
                         u5831 2B92                           u5751 2A76                           u7511 28AA  
                         u7431 2426                           u5671 420E                           u7191 1FCA  
                         u6711 4464                           u7351 368E                           u6560 3F40  
                         u6480 31E8                           u5920 2CCE                           u5840 2BB4  
                         u5760 2A8C                           u6640 3E84                           u7520 292C  
                         u7440 2490                           u6800 40C6                           u5680 4222  
                         u7280 2284                           u6720 4500                           u7360 36D0  
                         u7600 1092                           u6561 3F3C                           u6481 31E4  
                         u5921 2CCA                           u5841 2BB0                           u5761 2A88  
                         u6641 3E80                           u7521 2928                           u7441 248C  
                         u6801 40C2                           u5681 421E                           u7281 2280  
                         u6721 44FC                           u7361 36CC                           u7601 108E  
                         u6570 3F7E                           u6490 3202                           u5930 2D04  
                         u5850 2BD4                           u5770 2A9C                           u6650 3E98  
                         u7450 24C2                           u7530 499A                           u5690 4248  
                         u6730 451E                           u7290 4124                           u7370 3718  
                         u7610 10C4                           u6571 3F7A                           u6491 31FE  
                         u5931 2D00                           u5851 2BD0                           u5771 2A98  
                         u6651 3E94                           u6635 3E4C                           u7451 24BE  
                         u7531 4996                           u5691 4244                           u6731 451A  
                         u7291 4120                           u7371 3714                           u7611 10C0  
                         u6580 3F9C                           u5940 2D14                           u5860 2BE2  
                         u5780 2AD8                           u6660 3EC0                           u7460 252C  
                         u6820 4100                           u6900 3A32                           u6740 4534  
                         u7380 380A                           u7700 12A2                           u7620 10F6  
                         u7540 0F58                           u6581 3F98                           u5941 2D10  
                         u5861 2BDE                           u5781 2AD4                           u6661 3EBC  
                         u7461 2528                           u6821 40FA                           u6901 3A2E  
                         u6741 4530                           u7381 3806                           u7701 129E  
                         u7621 10F2                           u7541 0F54                           u8237 49B0  
                         u6590 3FBC                           u5950 2D40                           u5870 2BF2  
                         u5790 2AE6                           u6670 3EE0                           u7390 3D26  
                         u7470 25C6                           u6830 4102                           u6910 3A56  
                         u6750 4496                           u7710 12D4                           u7630 1128  
                         u7550 0F8A                           u6591 3FB8                           u5951 2D3C  
                         u5871 2BEE                           u5791 2AE2                           u6671 3EDC  
                         u7391 3D22                           u7471 25C2                           u6815 40D8  
                         u6751 4492                           u7711 12D0                           u7631 1124  
                         u7551 0F86                           u8247 481A                           u5960 2D50  
                         u5880 2C24                           u6680 3EF0                           u7480 260E  
                         u6920 3A72                           u6760 44DC                           u6840 4902  
                         u7800 14A4                           u7720 1306                           u7640 115A  
                         u7560 0FBC                           u5961 2D4C                           u5881 2C20  
                         u6681 3EEC                           u7481 260A                           u6921 3A6E  
                         u6761 44D8                           u6841 48FE                           u8257 18C2  
                         u7801 14A0                           u7721 1302                           u7641 1156  
                         u7561 0FB8                           u5970 2D6C                           u5890 2C32  
                         u7490 2704                           u6770 4056                           u6930 3AC6  
                         u6850 4560                           u6690 442E                           u7810 14E4  
                         u7730 1338                           u7650 118C                           u7570 0FEE  
                         u5971 2D68                           u5891 2C2E                           u7491 2700  
                         u6915 3A4C                           u6851 455C                           u6691 442A  
                         u7811 14E0                           u7731 1334                           u7651 1188  
                         u7571 0FEA                           u5980 2D7C                           u6780 4074  
                         u6940 3AE2                           u6860 3972                           u7900 16B4  
                         u7820 1516                           u7740 136A                           u7660 11CC  
                         u7580 1020                           u5981 2D78                           u6781 4070  
                         u6941 3ADE                           u7901 16B0                           u7821 1512  
                         u7741 1366                           u7661 11C8                           u7581 101C  
                         u5990 2D8E                           u6790 409C                           u6950 3B1E  
                         u6870 39A2                           u7910 16E6                           u7830 1548  
                         u7750 13AA                           u7670 11FE                           u7590 1052  
                         u5991 2D8A                           u6791 4098                           u6775 404C  
                         u6951 3B1A                           u6935 3ABC                           u6871 399E  
                         u7911 16E2                           u7831 1544                           u7751 13A6  
                         u7671 11FA                           u7591 104E                           u6880 39C4  
                         u6960 45F6                           u7920 1718                           u7840 157A  
                         u7760 13DC                           u7680 1230                           u6881 39C0  
                         u6865 3968                           u6961 45F2                           u7921 1714  
                         u7841 1576                           u7761 13D8                           u7681 122C  
                         u6970 18FC                           u7930 1758                           u7850 15AC  
                         u7770 140E                           u7690 1270                           u6971 18F8  
                         u7931 1754                           u7851 15A8                           u7771 140A  
                         u7691 126C                           u6980 1946                           u7940 178A  
                         u7860 15DE                           u7780 1440                           u6981 1942  
                         u7941 1786                           u7861 15DA                           u7781 143C  
                         u6990 1956                           u7950 17BC                           u7870 161E  
                         u7790 1472                           u6895 39D8                           u6991 1952  
                         u7951 17B8                           u7871 161A                           u7791 146E  
                         u6896 39E2                           u7960 17EE                           u7880 1650  
                         u6897 39F2                           u7961 17EA                           u7881 164C  
                         u7970 1820                           u7890 1682                           u7971 181C  
                         u7891 167E                           u7980 1852                           u7981 184E  
                         _dbuf 0150                           _labs 4552                           _main 499C  
                         _prec 00F4                           _temp 00FB                           pad@i 0015  
                         pad@p 0012                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         _utoa 4114                  ___fpclassifyf 4016                           prodh 0FF4  
                         prodl 0FF3                           start 0000                ___fldiv@new_exp 004C  
       __end_of_color_read_Red 4648                   ___param_bank 0000        __end_of_color_cardCheck 18D8  
                        ??_pad 0014                  ___fltol@sign1 0009                          ?_labs 0001  
              __end_of___fladd 2EA6                          ?_main 0001                __end_of___fldiv 366A  
              __end_of___flneg 493C                __end_of___flmul 32D0                __end_of___flsub 47C4  
              __end_of___fltol 3F12                          ?_utoa 0017                    ?_RGB_to_HSV 006A  
              __end_of___lwdiv 4488                __end_of___lwmod 4552                   vfpfcnvrt@fmt 009D  
      __end_of_sendCharSerial4 4A98     __end_of_I2C_2_Master_Start 4AB8     __end_of_I2C_2_Master_Write 4AA4  
                        _flags 00F6            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 4202                          _fputs 4886                          labs@a 0001  
                        pad@fp 000F                          _width 00F2                          _putch 4AC2  
                        tablat 0FF5                          utoa@d 0018                          utoa@i 001E  
                        utoa@p 001C                          utoa@w 001A                          status 0FD8  
              __end_of_sprintf 4886                 ?___fpclassifyf 0001        __end_of_color_read_Blue 4738  
        _I2C_2_Master_RepStart 4AB8                ?_color_read_Red 0005                __initialization 493C  
                 __end_of_labs 45A8                   __end_of_main 49CA                   __end_of_utoa 4202  
                       ??_labs 0005                         ??_main 00CD                         ??_utoa 001A  
                __activetblptr 0003     __end_of_read_prec_or_width 436A                         ?_fputc 0001  
                       ?_fputs 0009                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RD6PPS 0E70  
                       _RE4PPS 0E76                         _RG6PPS 0E88       __end_of_color_click_init 4846  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 3CF4  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 00AA                         ___flge 3F12  
                       ___fleq 436A               ?_color_cardCheck 00C9                      ??___fladd 0009  
                       ___wmul 4A1C                      ??___fldiv 0043                      ??___flneg 0005  
                    ??___flmul 0022                      ??___flsub 003B                      ??___fltol 0005  
                       _efgtoa 18D8                      ??___lwdiv 0005                      ??___lwmod 0005  
                       _floorf 392A                         _memcpy 45A8           read_prec_or_width@ap 0008  
                       clear_0 4954                         clear_1 4960                         _motorL 00D8  
                       _motorR 00CF                         isa$std 0001                         pad@buf 0010  
                       _strcpy 48C6                         fputc@c 0001                         fputs@c 000C  
                       fputs@i 000D                         fputs@s 0009                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 477E  
                       utoa@fp 0017                      ??_sprintf 0060                     ___flge@ff1 0033  
                   ___flge@ff2 0037                ??___fpclassifyf 0005                   ___xxtofl@arg 0016  
                 ___xxtofl@exp 0015                   ___xxtofl@val 000C                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005                     __accesstop 0060        __end_of__initialization 4966  
     __end_of_color_read_Clear 46E8                     ___flneg@f1 0001       __end_of_color_read_Green 4698  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 4AC4  
                __end_of_fputc 42BC                  __end_of_fputs 48C6                  __end_of_putch 4AC4  
               _RGB_to_HSV$524 0088                 _RGB_to_HSV$525 008C                 _RGB_to_HSV$527 0094  
               _RGB_to_HSV$528 0098             RGB_to_HSV@deltaRGB 00A4                        ??_fputc 0004  
                      ??_fputs 000C                        ??_putch 0001                     __pbssBANK0 00CF  
                   __pbssBANK1 0100              _color_writetoaddr 4A42                   _T2CLKCONbits 0FBF  
                      ?___flge 0033                        ?___fleq 0001             ?_color_writetoaddr 0003  
                      ?___wmul 0001                        ?_efgtoa 006A                        ?_floorf 0054  
                      ?_memcpy 0001            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                 ??_RGB_to_HSV 005C                      ?___xxtofl 000C                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 4A62  
                  RGB_to_HSV@B 0072                    RGB_to_HSV@C 0076                    RGB_to_HSV@G 006E  
                  RGB_to_HSV@H 007A                    RGB_to_HSV@R 006A                    RGB_to_HSV@S 007C  
                  RGB_to_HSV@V 007E                    RGB_to_HSV@b 00B4                    RGB_to_HSV@g 00B0  
           _I2C_2_Master_Start 4AAE                    RGB_to_HSV@r 00AC                     _initUSART4 4A62  
           _I2C_2_Master_Write 4A98                        __Hparam 0000             __end_of_RGB_to_HSV 29E6  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___fladd 29E6                        ___fldiv 32D0                        ___flneg 4904  
                      ___flmul 2EA6                        ___flsub 477E                        ___fltol 3E0C  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 4414            ?_I2C_2_Master_Write 0001  
                      ___lwmod 44EE                      ?_vfprintf 00A7                   __psmallconst 0E00  
                      __pcinit 493C                        __ramtop 0E00                        __ptext0 499C  
                      __ptext1 4A62                        __ptext2 4806                        __ptext3 4A42  
                      __ptext4 49CA                        __ptext5 0E26                        __ptext6 4846  
                      __ptext7 4738                        __ptext8 366A                        __ptext9 4114  
                    _T2CONbits 0FBD          read_prec_or_width@fmt 0007                     ??___xxtofl 0010  
                    _T2HLTbits 0FBE                        efgtoa@c 006F                        efgtoa@d 007B  
                      efgtoa@e 007F                        efgtoa@f 006B                        efgtoa@g 0092  
                      efgtoa@h 0089                        efgtoa@i 0087                        efgtoa@l 008D  
                      efgtoa@m 007D                        efgtoa@n 0096                        efgtoa@p 0072  
                      efgtoa@t 0074                        efgtoa@u 0098                        efgtoa@w 0081  
                _RxBufWriteCnt 00FA                        _sprintf 4846           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 4966                        floorf@e 0064  
                      floorf@m 0060                        floorf@u 0066                        floorf@x 0054  
                      memcpy@d 0008                        memcpy@n 0005                        memcpy@s 000A  
                      fputc@fp 0003                        fputs@fp 000B              ?_color_click_init 0001  
           _read_prec_or_width 42BC             ??_color_click_init 0005              __end_of_vfpfcnvrt 392A  
                   efgtoa@mode 0079                     efgtoa@sign 0091                        postdec2 0FDD  
          ?_read_prec_or_width 0007                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 00A1                     ??_vfprintf 0060  
                      strcpy@d 0005                      _PORTFbits 0F8E                    ___fladd@grs 0010  
                ___xxtofl@sign 0014                      _TRISAbits 0F81                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88           ??_read_prec_or_width 0009  
                  ___fldiv@grs 004E                    ___fldiv@rem 0047       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 0028                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
           ??_color_read_Clear 0007             ??_color_read_Green 0007     __end_of_custom_floatmodulo 3E0C  
               __end_of___flge 4016                 __end_of___fleq 4414                    vfpfcnvrt@ap 009E  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 009C                 __end_of___wmul 4A42  
               __end_of_efgtoa 22C0                 __end_of_floorf 3B40      color_cardCheck@card_color 01C9  
               __end_of_memcpy 45F8                     floorf@F521 00EA               RGB_to_HSV@H_temp 00A0  
               __end_of_strcpy 4904            color_read_Clear@tmp 000A            start_initialization 493C  
                  __end_of_pad 44EE                  _TxBufWriteCnt 00F8               RGB_to_HSV@maxRGB 00A8  
             RGB_to_HSV@minRGB 0090                _RGB_to_HSV$2682 0080                _RGB_to_HSV$2683 0084  
              _RGB_to_HSV$2684 009C          __end_of___fpclassifyf 4114            color_read_Green@tmp 000A  
                  vfprintf@fmt 00A8                       ??___flge 003B                       ??___fleq 0009  
                     ??___wmul 0005                       ??_efgtoa 005E            custom_floatmodulo@x 0054  
          custom_floatmodulo@y 0058                    __pdataBANK0 00FB                    _calibration 00E1  
                     ??_floorf 0058                       ??_memcpy 0007                       ??_strcpy 0004  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 003F  
                    ___fldiv@b 003B                      ___flmul@a 001E                      ___flmul@b 001A  
                    ___flsub@a 0037                      ___flsub@b 0033                  __pcstackBANK0 0060  
                __pcstackBANK1 01A0      custom_floatmodulo@intPart 0068                    _efgtoa$2309 0076  
             ___lwdiv@dividend 0001                       ?___fladd 0001                       ?___fldiv 003B  
                     ?___flneg 0001                       ?___flmul 001A                       ?___flsub 0033  
                     ?___fltol 0001                       ?___lwdiv 0001                       ?___lwmod 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 49F4              _I2C_2_Master_Init 49CA              _I2C_2_Master_Read 47C4  
            _I2C_2_Master_Stop 4AA4                   _RxBufReadCnt 00F9             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 0006                       ?_sprintf 00AB              ??_color_cardCheck 00CB  
            _sendStringSerial4 496C            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80             ?_sendStringSerial4 0002                       _PIE4bits 0E2D  
                     _PIR4bits 0E37              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _vfpfcnvrt 366A  
    __end_of_I2C_2_Master_Idle 4A1C      __end_of_I2C_2_Master_Init 49F4      __end_of_I2C_2_Master_Read 4806  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4AAE    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                   _TxBufReadCnt 00F7                     vfpfcnvrt@c 00A5  
    __end_of_sendStringSerial4 499C        color_cardCheck@senddata 01A0  __end_of_I2C_2_Master_RepStart 4AC2  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                    memcpy@tmp 0007                     vfprintf@ap 00A9                       __Lrparam 0000  
                   vfprintf@fp 00A7                     ?_vfpfcnvrt 009C                     _ANSELDbits 0EA7  
           ___fpclassifyf@F465 00EE                     sprintf@fmt 00AD                       ___xxtofl 3B40  
           _custom_floatmodulo 3CF4                ___lwdiv@divisor 0003             __end_of_initUSART4 4A80  
              ___lwdiv@counter 0005                       __ptext10 44EE                       __ptext11 4414  
                     __ptext20 45A8                       __ptext12 42BC                       __ptext21 4552  
                     __ptext13 4A1C                       __ptext30 46E8                       __ptext22 392A  
                     __ptext14 18D8                       __ptext31 4A98                       __ptext23 4016  
                     __ptext15 48C6                       __ptext40 3E0C                       __ptext32 4AA4  
                     __ptext24 4904                       __ptext16 4488                       __ptext41 477E  
                     __ptext33 4AAE                       __ptext25 496C                       __ptext17 4886  
                     __ptext42 29E6                       __ptext34 4AB8                       __ptext26 4A80  
                     __ptext18 4202                       __ptext43 2EA6                       __ptext35 47C4  
                     __ptext27 45F8                       __ptext19 4AC2                       __ptext44 436A  
                     __ptext36 49F4                       __ptext28 4648                       __ptext45 32D0  
                     __ptext37 22C0                       __ptext29 4698                       __ptext46 3F12  
                     __ptext38 3CF4                       __ptext39 3B40    custom_floatmodulo@remainder 0064  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                     strcpy@dest 0001  
          ?_custom_floatmodulo 0054                       efgtoa@fp 006A                       efgtoa@ne 0070  
                     efgtoa@pp 0078                       efgtoa@ou 0083                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       _vfprintf 4738           ??_custom_floatmodulo 005C  
                     memcpy@d1 0001                       memcpy@s1 0003                      sprintf@ap 00BC  
             ___lwmod@dividend 0001                      strcpy@src 0003                    efgtoa@nmode 007A  
   custom_floatmodulo@quotient 0060                    ??_vfpfcnvrt 009F               _color_click_init 4806  
              _color_cardCheck 0E26                       sprintf@f 00BD                     _RGB_to_HSV 22C0  
                     sprintf@s 00AB                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
              ___lwmod@divisor 0003                ___lwmod@counter 0005               color_cardCheck@H 01CB  
             color_cardCheck@S 01CF               color_cardCheck@V 01D3               color_cardCheck@b 01C1  
             color_cardCheck@c 01C5               color_cardCheck@g 01BD               color_cardCheck@r 01B9  
                ___fladd@signs 000D                     _TX4STAbits 0EE8                _sendCharSerial4 4A80  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F  
