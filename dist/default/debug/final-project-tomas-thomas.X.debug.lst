

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 19:05:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58   000000                     
    59                           ; Generated 21/07/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     _TX4REG	set	3812
    94   000000                     _RC4STAbits	set	3815
    95   000000                     _SP4BRGH	set	3814
    96   000000                     _SSP2CON2bits	set	3802
    97   000000                     _RX4PPS	set	3605
    98   000000                     _RC0PPS	set	3682
    99   000000                     _LATAbits	set	3961
   100   000000                     _LATGbits	set	3967
   101   000000                     _TRISAbits	set	3969
   102   000000                     _TRISGbits	set	3975
   103   000000                     _TRISDbits	set	3972
   104   000000                     _TRISFbits	set	3974
   105   000000                     _LATFbits	set	3966
   106   000000                     _RD5PPS	set	3695
   107   000000                     _ANSELDbits	set	3751
   108   000000                     _SSP2ADD	set	3798
   109   000000                     _SSP2CON1bits	set	3801
   110   000000                     _RC4REG	set	3811
   111   000000                     _SP4BRGL	set	3813
   112   000000                     _TX4STAbits	set	3816
   113   000000                     _BAUD4CONbits	set	3817
   114   000000                     _SSP2CLKPPS	set	3612
   115   000000                     _SSP2DATPPS	set	3613
   116   000000                     _PIE4bits	set	3629
   117   000000                     _PIR4bits	set	3639
   118   000000                     _SSP2CON2	set	3802
   119   000000                     _SSP2STAT	set	3800
   120   000000                     _SSP2BUF	set	3797
   121   000000                     _RD6PPS	set	3696
   122                           
   123                           	psect	smallconst
   124   000E00                     __psmallconst:
   125                           	callstack 0
   126   000E00  00                 	db	0
   127   000E01                     STR_1:
   128   000E01  48                 	db	72	;'H'
   129   000E02  3A                 	db	58	;':'
   130   000E03  25                 	db	37
   131   000E04  2E                 	db	46
   132   000E05  32                 	db	50	;'2'
   133   000E06  66                 	db	102	;'f'
   134   000E07  20                 	db	32
   135   000E08  53                 	db	83	;'S'
   136   000E09  3A                 	db	58	;':'
   137   000E0A  20                 	db	32
   138   000E0B  25                 	db	37
   139   000E0C  2E                 	db	46
   140   000E0D  32                 	db	50	;'2'
   141   000E0E  66                 	db	102	;'f'
   142   000E0F  20                 	db	32
   143   000E10  56                 	db	86	;'V'
   144   000E11  3A                 	db	58	;':'
   145   000E12  20                 	db	32
   146   000E13  25                 	db	37
   147   000E14  2E                 	db	46
   148   000E15  32                 	db	50	;'2'
   149   000E16  66                 	db	102	;'f'
   150   000E17  20                 	db	32
   151   000E18  00                 	db	0
   152   000E19                     STR_2:
   153   000E19  69                 	db	105	;'i'
   154   000E1A  6E                 	db	110	;'n'
   155   000E1B  66                 	db	102	;'f'
   156   000E1C  00                 	db	0
   157   000E1D                     STR_5:
   158   000E1D  6E                 	db	110	;'n'
   159   000E1E  61                 	db	97	;'a'
   160   000E1F  6E                 	db	110	;'n'
   161   000E20  00                 	db	0
   162   000E21  00                 	db	0	; dummy byte at the end
   163   000000                     
   164                           ; #config settings
   165                           
   166                           	psect	cinit
   167   00446A                     __pcinit:
   168                           	callstack 0
   169   00446A                     start_initialization:
   170                           	callstack 0
   171   00446A                     __initialization:
   172                           	callstack 0
   173                           
   174                           ; Clear objects allocated to BANK1 (175 bytes)
   175   00446A  EE01  F000         	lfsr	0,__pbssBANK1
   176   00446E  0EAF               	movlw	175
   177   004470                     clear_0:
   178   004470  6AEE               	clrf	postinc0,c
   179   004472  06E8               	decf	wreg,f,c
   180   004474  E1FD               	bnz	clear_0
   181                           
   182                           ; Clear objects allocated to BANK0 (2 bytes)
   183   004476  0100               	movlb	0
   184   004478  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   185   00447A  6BFD               	clrf	__pbssBANK0& (0+255),b
   186   00447C                     end_of_initialization:
   187                           	callstack 0
   188   00447C                     __end_of__initialization:
   189                           	callstack 0
   190   00447C  0100               	movlb	0
   191   00447E  EFB8  F020         	goto	_main	;jump to C main() function
   192                           
   193                           	psect	bssBANK0
   194   0000FD                     __pbssBANK0:
   195                           	callstack 0
   196   0000FD                     _TxBufReadCnt:
   197                           	callstack 0
   198   0000FD                     	ds	1
   199   0000FE                     _TxBufWriteCnt:
   200                           	callstack 0
   201   0000FE                     	ds	1
   202                           
   203                           	psect	bssBANK1
   204   000100                     __pbssBANK1:
   205                           	callstack 0
   206   000100                     _EUSART4TXbuf:
   207                           	callstack 0
   208   000100                     	ds	60
   209   00013C                     _EUSART4RXbuf:
   210                           	callstack 0
   211   00013C                     	ds	20
   212   000150                     floorf@F521:
   213                           	callstack 0
   214   000150                     	ds	4
   215   000154                     ___fpclassifyf@F465:
   216                           	callstack 0
   217   000154                     	ds	4
   218   000158                     _width:
   219                           	callstack 0
   220   000158                     	ds	2
   221   00015A                     _prec:
   222                           	callstack 0
   223   00015A                     	ds	2
   224   00015C                     _flags:
   225                           	callstack 0
   226   00015C                     	ds	1
   227   00015D                     _RxBufReadCnt:
   228                           	callstack 0
   229   00015D                     	ds	1
   230   00015E                     _RxBufWriteCnt:
   231                           	callstack 0
   232   00015E                     	ds	1
   233   00015F                     _dbuf:
   234                           	callstack 0
   235   00015F                     	ds	80
   236                           
   237                           	psect	cstackBANK1
   238   0001AF                     __pcstackBANK1:
   239                           	callstack 0
   240   0001AF                     ??_main:
   241                           
   242                           ; 1 bytes @ 0x0
   243   0001AF                     	ds	2
   244                           
   245                           	psect	cstackBANK0
   246   000060                     __pcstackBANK0:
   247                           	callstack 0
   248   000060                     custom_floatmodulo@quotient:
   249                           	callstack 0
   250   000060                     floorf@m:
   251                           	callstack 0
   252                           
   253                           ; 4 bytes @ 0x0
   254   000060                     	ds	4
   255   000064                     floorf@e:
   256                           	callstack 0
   257   000064                     custom_floatmodulo@remainder:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x4
   261   000064                     	ds	2
   262   000066                     floorf@u:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x6
   266   000066                     	ds	2
   267   000068                     custom_floatmodulo@intPart:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x8
   271   000068                     	ds	2
   272   00006A                     efgtoa@fp:
   273                           	callstack 0
   274   00006A                     RGB_to_HSV@R:
   275                           	callstack 0
   276                           
   277                           ; 4 bytes @ 0xA
   278   00006A                     	ds	1
   279   00006B                     efgtoa@f:
   280                           	callstack 0
   281                           
   282                           ; 4 bytes @ 0xB
   283   00006B                     	ds	3
   284   00006E                     RGB_to_HSV@G:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0xE
   288   00006E                     	ds	1
   289   00006F                     efgtoa@c:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0xF
   293   00006F                     	ds	1
   294   000070                     efgtoa@ne:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x10
   298   000070                     	ds	2
   299   000072                     efgtoa@p:
   300                           	callstack 0
   301   000072                     RGB_to_HSV@B:
   302                           	callstack 0
   303                           
   304                           ; 4 bytes @ 0x12
   305   000072                     	ds	2
   306   000074                     efgtoa@t:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x14
   310   000074                     	ds	2
   311   000076                     _efgtoa$1311:
   312                           	callstack 0
   313   000076                     RGB_to_HSV@C:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x16
   317   000076                     	ds	2
   318   000078                     efgtoa@pp:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x18
   322   000078                     	ds	1
   323   000079                     efgtoa@mode:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x19
   327   000079                     	ds	1
   328   00007A                     RGB_to_HSV@H:
   329                           	callstack 0
   330   00007A                     efgtoa@nmode:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x1A
   334   00007A                     	ds	1
   335   00007B                     RGB_to_HSV@S:
   336                           	callstack 0
   337   00007B                     efgtoa@d:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x1B
   341   00007B                     	ds	1
   342   00007C                     RGB_to_HSV@V:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x1C
   346   00007C                     	ds	1
   347   00007D                     efgtoa@m:
   348                           	callstack 0
   349   00007D                     RGB_to_HSV@c_norm:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x1D
   353   00007D                     	ds	2
   354   00007F                     efgtoa@e:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x1F
   358   00007F                     	ds	2
   359   000081                     efgtoa@w:
   360                           	callstack 0
   361   000081                     _RGB_to_HSV$1653:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x21
   365   000081                     	ds	2
   366   000083                     efgtoa@ou:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0x23
   370   000083                     	ds	2
   371   000085                     _RGB_to_HSV$1654:
   372                           	callstack 0
   373                           
   374                           ; 4 bytes @ 0x25
   375   000085                     	ds	2
   376   000087                     efgtoa@i:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x27
   380   000087                     	ds	2
   381   000089                     efgtoa@h:
   382                           	callstack 0
   383   000089                     _RGB_to_HSV$1655:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x29
   387   000089                     	ds	4
   388   00008D                     efgtoa@l:
   389                           	callstack 0
   390   00008D                     _RGB_to_HSV$1657:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x2D
   394   00008D                     	ds	4
   395   000091                     efgtoa@sign:
   396                           	callstack 0
   397   000091                     _RGB_to_HSV$336:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x31
   401   000091                     	ds	1
   402   000092                     efgtoa@g:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x32
   406   000092                     	ds	3
   407   000095                     _RGB_to_HSV$337:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x35
   411   000095                     	ds	1
   412   000096                     efgtoa@n:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x36
   416   000096                     	ds	2
   417   000098                     efgtoa@u:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x38
   421   000098                     	ds	1
   422   000099                     RGB_to_HSV@minRGB:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x39
   426   000099                     	ds	3
   427   00009C                     vfpfcnvrt@fp:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x3C
   431   00009C                     	ds	1
   432   00009D                     vfpfcnvrt@fmt:
   433                           	callstack 0
   434   00009D                     _RGB_to_HSV$339:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0x3D
   438   00009D                     	ds	1
   439   00009E                     vfpfcnvrt@ap:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x3E
   443   00009E                     	ds	1
   444   00009F                     ??_vfpfcnvrt:
   445                           
   446                           ; 1 bytes @ 0x3F
   447   00009F                     	ds	2
   448   0000A1                     _RGB_to_HSV$340:
   449                           	callstack 0
   450   0000A1                     vfpfcnvrt@convarg:
   451                           	callstack 0
   452                           
   453                           ; 4 bytes @ 0x41
   454   0000A1                     	ds	4
   455   0000A5                     vfpfcnvrt@c:
   456                           	callstack 0
   457   0000A5                     _RGB_to_HSV$1656:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x45
   461   0000A5                     	ds	1
   462   0000A6                     vfpfcnvrt@cp:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x46
   466   0000A6                     	ds	1
   467   0000A7                     ?_vfprintf:
   468                           	callstack 0
   469   0000A7                     vfprintf@fp:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x47
   473   0000A7                     	ds	1
   474   0000A8                     vfprintf@fmt:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x48
   478   0000A8                     	ds	1
   479   0000A9                     vfprintf@ap:
   480                           	callstack 0
   481   0000A9                     RGB_to_HSV@H_temp:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0x49
   485   0000A9                     	ds	1
   486   0000AA                     vfprintf@cfmt:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x4A
   490   0000AA                     	ds	1
   491   0000AB                     ?_sprintf:
   492                           	callstack 0
   493   0000AB                     sprintf@s:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x4B
   497   0000AB                     	ds	1
   498   0000AC                     sprintf@fmt:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x4C
   502   0000AC                     	ds	1
   503   0000AD                     RGB_to_HSV@deltaRGB:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x4D
   507   0000AD                     	ds	4
   508   0000B1                     RGB_to_HSV@maxRGB:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x51
   512   0000B1                     	ds	4
   513   0000B5                     RGB_to_HSV@r:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x55
   517   0000B5                     	ds	4
   518   0000B9                     sprintf@ap:
   519                           	callstack 0
   520   0000B9                     RGB_to_HSV@g:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x59
   524   0000B9                     	ds	1
   525   0000BA                     sprintf@f:
   526                           	callstack 0
   527                           
   528                           ; 12 bytes @ 0x5A
   529   0000BA                     	ds	3
   530   0000BD                     RGB_to_HSV@b:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x5D
   534   0000BD                     	ds	9
   535   0000C6                     ??_color_cardCheck:
   536                           
   537                           ; 1 bytes @ 0x66
   538   0000C6                     	ds	2
   539   0000C8                     color_cardCheck@senddata:
   540                           	callstack 0
   541                           
   542                           ; 25 bytes @ 0x68
   543   0000C8                     	ds	25
   544   0000E1                     color_cardCheck@r:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x81
   548   0000E1                     	ds	4
   549   0000E5                     color_cardCheck@g:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x85
   553   0000E5                     	ds	4
   554   0000E9                     color_cardCheck@b:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x89
   558   0000E9                     	ds	4
   559   0000ED                     color_cardCheck@c:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x8D
   563   0000ED                     	ds	4
   564   0000F1                     color_cardCheck@H:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x91
   568   0000F1                     	ds	4
   569   0000F5                     color_cardCheck@V:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x95
   573   0000F5                     	ds	4
   574   0000F9                     color_cardCheck@S:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x99
   578   0000F9                     	ds	4
   579                           
   580                           	psect	cstackCOMRAM
   581   000001                     __pcstackCOMRAM:
   582                           	callstack 0
   583   000001                     ??_I2C_2_Master_Idle:
   584   000001                     ?___fpclassifyf:
   585                           	callstack 0
   586   000001                     ?___wmul:
   587                           	callstack 0
   588   000001                     ?___fladd:
   589                           	callstack 0
   590   000001                     ?_labs:
   591                           	callstack 0
   592   000001                     ?___flneg:
   593                           	callstack 0
   594   000001                     ?___fltol:
   595                           	callstack 0
   596   000001                     sendCharSerial4@charToSend:
   597                           	callstack 0
   598   000001                     ___wmul@multiplier:
   599                           	callstack 0
   600   000001                     memcpy@d1:
   601                           	callstack 0
   602   000001                     fputc@c:
   603                           	callstack 0
   604   000001                     strcpy@dest:
   605                           	callstack 0
   606   000001                     ___fleq@ff1:
   607                           	callstack 0
   608   000001                     ___flneg@f1:
   609                           	callstack 0
   610   000001                     ___fltol@f1:
   611                           	callstack 0
   612   000001                     ___fladd@b:
   613                           	callstack 0
   614   000001                     ___fpclassifyf@x:
   615                           	callstack 0
   616   000001                     labs@a:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x0
   620   000001                     	ds	1
   621   000002                     ??_I2C_2_Master_Read:
   622   000002                     sendStringSerial4@string:
   623                           	callstack 0
   624   000002                     I2C_2_Master_Write@data_byte:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x1
   628   000002                     	ds	1
   629   000003                     color_writetoaddr@value:
   630                           	callstack 0
   631   000003                     I2C_2_Master_Read@ack:
   632                           	callstack 0
   633   000003                     fputc@fp:
   634                           	callstack 0
   635   000003                     strcpy@src:
   636                           	callstack 0
   637   000003                     ___wmul@multiplicand:
   638                           	callstack 0
   639   000003                     memcpy@s1:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x2
   643   000003                     	ds	1
   644   000004                     ??_fputc:
   645   000004                     ??_strcpy:
   646   000004                     color_writetoaddr@address:
   647                           	callstack 0
   648   000004                     I2C_2_Master_Read@tmp:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x3
   652   000004                     	ds	1
   653   000005                     ??___fpclassifyf:
   654   000005                     ??_labs:
   655   000005                     ??_color_click_init:
   656   000005                     ??___fltol:
   657   000005                     ?_color_read_Red:
   658                           	callstack 0
   659   000005                     ?_color_read_Green:
   660                           	callstack 0
   661   000005                     ?_color_read_Blue:
   662                           	callstack 0
   663   000005                     ?_color_read_Clear:
   664                           	callstack 0
   665   000005                     ___wmul@product:
   666                           	callstack 0
   667   000005                     memcpy@n:
   668                           	callstack 0
   669   000005                     strcpy@d:
   670                           	callstack 0
   671   000005                     ___fleq@ff2:
   672                           	callstack 0
   673   000005                     ___fladd@a:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x4
   677   000005                     	ds	2
   678   000007                     ??_color_read_Red:
   679   000007                     ??_color_read_Green:
   680   000007                     ??_color_read_Blue:
   681   000007                     ??_color_read_Clear:
   682   000007                     ?_read_prec_or_width:
   683                           	callstack 0
   684   000007                     read_prec_or_width@fmt:
   685                           	callstack 0
   686   000007                     memcpy@tmp:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x6
   690   000007                     	ds	1
   691   000008                     read_prec_or_width@ap:
   692                           	callstack 0
   693   000008                     memcpy@d:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x7
   697   000008                     	ds	1
   698   000009                     ??___fladd:
   699   000009                     ??___fleq:
   700   000009                     ___fltol@sign1:
   701                           	callstack 0
   702   000009                     read_prec_or_width@c:
   703                           	callstack 0
   704   000009                     ___fpclassifyf@e:
   705                           	callstack 0
   706   000009                     fputs@s:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x8
   710   000009                     	ds	1
   711   00000A                     ___fltol@exp1:
   712                           	callstack 0
   713   00000A                     color_read_Red@tmp:
   714                           	callstack 0
   715   00000A                     color_read_Green@tmp:
   716                           	callstack 0
   717   00000A                     color_read_Blue@tmp:
   718                           	callstack 0
   719   00000A                     color_read_Clear@tmp:
   720                           	callstack 0
   721   00000A                     read_prec_or_width@n:
   722                           	callstack 0
   723   00000A                     memcpy@s:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x9
   727   00000A                     	ds	1
   728   00000B                     fputs@fp:
   729                           	callstack 0
   730   00000B                     ___fpclassifyf@u:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0xA
   734   00000B                     	ds	1
   735   00000C                     ?___xxtofl:
   736                           	callstack 0
   737   00000C                     fputs@c:
   738                           	callstack 0
   739   00000C                     ___xxtofl@val:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0xB
   743   00000C                     	ds	1
   744   00000D                     ___fladd@signs:
   745                           	callstack 0
   746   00000D                     fputs@i:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0xC
   750   00000D                     	ds	1
   751   00000E                     ___fladd@aexp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0xD
   755   00000E                     	ds	1
   756   00000F                     ___fladd@bexp:
   757                           	callstack 0
   758   00000F                     pad@fp:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0xE
   762   00000F                     	ds	1
   763   000010                     ??___xxtofl:
   764   000010                     ___fladd@grs:
   765                           	callstack 0
   766   000010                     pad@buf:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0xF
   770   000010                     	ds	2
   771   000012                     pad@p:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x11
   775   000012                     	ds	2
   776   000014                     ??_pad:
   777   000014                     ___xxtofl@sign:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x13
   781   000014                     	ds	1
   782   000015                     ___xxtofl@exp:
   783                           	callstack 0
   784   000015                     pad@i:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x14
   788   000015                     	ds	1
   789   000016                     ___xxtofl@arg:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x15
   793   000016                     	ds	4
   794   00001A                     ?___flmul:
   795                           	callstack 0
   796   00001A                     ___flmul@b:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x19
   800   00001A                     	ds	4
   801   00001E                     ___flmul@a:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x1D
   805   00001E                     	ds	4
   806   000022                     ??___flmul:
   807                           
   808                           ; 1 bytes @ 0x21
   809   000022                     	ds	4
   810   000026                     ___flmul@sign:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x25
   814   000026                     	ds	1
   815   000027                     ___flmul@aexp:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x26
   819   000027                     	ds	1
   820   000028                     ___flmul@grs:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x27
   824   000028                     	ds	4
   825   00002C                     ___flmul@bexp:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x2B
   829   00002C                     	ds	1
   830   00002D                     ___flmul@prod:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x2C
   834   00002D                     	ds	4
   835   000031                     ___flmul@temp:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x30
   839   000031                     	ds	2
   840   000033                     ?___flsub:
   841                           	callstack 0
   842   000033                     ___flge@ff1:
   843                           	callstack 0
   844   000033                     ___flsub@b:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x32
   848   000033                     	ds	4
   849   000037                     ___flge@ff2:
   850                           	callstack 0
   851   000037                     ___flsub@a:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x36
   855   000037                     	ds	4
   856   00003B                     ??___flge:
   857   00003B                     ?___fldiv:
   858                           	callstack 0
   859   00003B                     ___fldiv@b:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x3A
   863   00003B                     	ds	4
   864   00003F                     ___fldiv@a:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x3E
   868   00003F                     	ds	4
   869   000043                     ??___fldiv:
   870                           
   871                           ; 1 bytes @ 0x42
   872   000043                     	ds	4
   873   000047                     ___fldiv@rem:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x46
   877   000047                     	ds	4
   878   00004B                     ___fldiv@sign:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x4A
   882   00004B                     	ds	1
   883   00004C                     ___fldiv@new_exp:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x4B
   887   00004C                     	ds	2
   888   00004E                     ___fldiv@grs:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x4D
   892   00004E                     	ds	4
   893   000052                     ___fldiv@bexp:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x51
   897   000052                     	ds	1
   898   000053                     ___fldiv@aexp:
   899                           	callstack 0
   900                           
   901                           ; 1 bytes @ 0x52
   902   000053                     	ds	1
   903   000054                     ?_floorf:
   904                           	callstack 0
   905   000054                     ?_custom_floatmodulo:
   906                           	callstack 0
   907   000054                     custom_floatmodulo@x:
   908                           	callstack 0
   909   000054                     floorf@x:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x53
   913   000054                     	ds	4
   914   000058                     ??_floorf:
   915   000058                     custom_floatmodulo@y:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x57
   919   000058                     	ds	4
   920   00005C                     
   921                           ; 1 bytes @ 0x5B
   922   00005C                     	ds	2
   923   00005E                     ??_efgtoa:
   924                           
   925                           ; 1 bytes @ 0x5D
   926   00005E                     	ds	2
   927   000060                     
   928                           ; 1 bytes @ 0x5F
   929 ;;
   930 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   931 ;;
   932 ;; *************** function _main *****************
   933 ;; Defined at:
   934 ;;		line 12 in file "main.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;Total ram usage:        2 bytes
   953 ;; Hardware stack levels required when called: 9
   954 ;; This function calls:
   955 ;;		_color_TRILED_ON
   956 ;;		_color_cardCheck
   957 ;;		_color_click_init
   958 ;; This function is called by:
   959 ;;		Startup code after reset
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text0
   964   004170                     __ptext0:
   965                           	callstack 0
   966   004170                     _main:
   967                           	callstack 22
   968   004170                     
   969                           ;main.c: 14:     color_click_init();
   970   004170  ECBA  F021         	call	_color_click_init	;wreg free
   971   004174                     
   972                           ;main.c: 15:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   973   004174  0E52               	movlw	82
   974   004176  0101               	movlb	1	; () banked
   975   004178  6FB0               	movwf	(??_main+1)& (0+255),b
   976   00417A  0E2B               	movlw	43
   977   00417C  6FAF               	movwf	??_main& (0+255),b
   978   00417E  0E00               	movlw	0
   979   004180                     u6547:
   980   004180  2EE8               	decfsz	wreg,f,c
   981   004182  D7FE               	bra	u6547
   982   004184  2FAF               	decfsz	??_main& (0+255),f,b
   983   004186  D7FC               	bra	u6547
   984   004188  2FB0               	decfsz	(??_main+1)& (0+255),f,b
   985   00418A  D7FA               	bra	u6547
   986   00418C  0000               	nop	
   987   00418E                     
   988                           ;main.c: 16:     color_TRILED_ON();
   989   00418E  EC4D  F022         	call	_color_TRILED_ON	;wreg free
   990   004192                     l5167:
   991                           
   992                           ;main.c: 20:         color_cardCheck();
   993   004192  ECE8  F00F         	call	_color_cardCheck	;wreg free
   994   004196                     
   995                           ;main.c: 21:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   996   004196  0E52               	movlw	82
   997   004198  0101               	movlb	1	; () banked
   998   00419A  6FB0               	movwf	(??_main+1)& (0+255),b
   999   00419C  0E2B               	movlw	43
  1000   00419E  6FAF               	movwf	??_main& (0+255),b
  1001   0041A0  0E00               	movlw	0
  1002   0041A2                     u6557:
  1003   0041A2  2EE8               	decfsz	wreg,f,c
  1004   0041A4  D7FE               	bra	u6557
  1005   0041A6  2FAF               	decfsz	??_main& (0+255),f,b
  1006   0041A8  D7FC               	bra	u6557
  1007   0041AA  2FB0               	decfsz	(??_main+1)& (0+255),f,b
  1008   0041AC  D7FA               	bra	u6557
  1009   0041AE  0000               	nop	
  1010   0041B0  EFC9  F020         	goto	l5167
  1011   0041B4  EF00  F000         	goto	start
  1012   0041B8                     __end_of_main:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _color_click_init *****************
  1016 ;; Defined at:
  1017 ;;		line 7 in file "color.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;Total ram usage:        1 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 3
  1038 ;; This function calls:
  1039 ;;		_I2C_2_Master_Init
  1040 ;;		_color_writetoaddr
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text1
  1047   004374                     __ptext1:
  1048                           	callstack 0
  1049   004374                     _color_click_init:
  1050                           	callstack 27
  1051   004374                     
  1052                           ;color.c: 10:     I2C_2_Master_Init();
  1053   004374  ECD4  F021         	call	_I2C_2_Master_Init	;wreg free
  1054   004378                     
  1055                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1056   004378  0E01               	movlw	1
  1057   00437A  6E03               	movwf	color_writetoaddr@value^0,c
  1058   00437C  0E00               	movlw	0
  1059   00437E  EC25  F022         	call	_color_writetoaddr
  1060   004382                     
  1061                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1062   004382  0E3F               	movlw	63
  1063   004384  6E05               	movwf	??_color_click_init^0,c
  1064   004386  0E55               	movlw	85
  1065   004388                     u6567:
  1066   004388  2EE8               	decfsz	wreg,f,c
  1067   00438A  D7FE               	bra	u6567
  1068   00438C  2E05               	decfsz	??_color_click_init^0,f,c
  1069   00438E  D7FC               	bra	u6567
  1070   004390  0000               	nop	
  1071   004392                     
  1072                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1073   004392  0E03               	movlw	3
  1074   004394  6E03               	movwf	color_writetoaddr@value^0,c
  1075   004396  0E00               	movlw	0
  1076   004398  EC25  F022         	call	_color_writetoaddr
  1077   00439C                     
  1078                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1079   00439C  0ED5               	movlw	213
  1080   00439E  6E03               	movwf	color_writetoaddr@value^0,c
  1081   0043A0  0E01               	movlw	1
  1082   0043A2  EC25  F022         	call	_color_writetoaddr
  1083   0043A6  0012               	return		;funcret
  1084   0043A8                     __end_of_color_click_init:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _color_writetoaddr *****************
  1088 ;; Defined at:
  1089 ;;		line 40 in file "color.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  address         1    wreg     unsigned char 
  1092 ;;  value           1    2[COMRAM] unsigned char 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  address         1    3[COMRAM] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 2
  1111 ;; This function calls:
  1112 ;;		_I2C_2_Master_Start
  1113 ;;		_I2C_2_Master_Stop
  1114 ;;		_I2C_2_Master_Write
  1115 ;; This function is called by:
  1116 ;;		_color_click_init
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text2
  1121   00444A                     __ptext2:
  1122                           	callstack 0
  1123   00444A                     _color_writetoaddr:
  1124                           	callstack 27
  1125                           
  1126                           ;incstack = 0
  1127                           ;color_writetoaddr@address stored from wreg
  1128   00444A  6E04               	movwf	color_writetoaddr@address^0,c
  1129   00444C                     
  1130                           ;color.c: 41:     I2C_2_Master_Start();
  1131   00444C  EC5F  F022         	call	_I2C_2_Master_Start	;wreg free
  1132                           
  1133                           ;color.c: 42:     I2C_2_Master_Write(0x52 | 0x00);
  1134   004450  0E52               	movlw	82
  1135   004452  EC54  F022         	call	_I2C_2_Master_Write
  1136                           
  1137                           ;color.c: 43:     I2C_2_Master_Write(0x80 | address);
  1138   004456  5004               	movf	color_writetoaddr@address^0,w,c
  1139   004458  0980               	iorlw	128
  1140   00445A  EC54  F022         	call	_I2C_2_Master_Write
  1141                           
  1142                           ;color.c: 44:     I2C_2_Master_Write(value);
  1143   00445E  5003               	movf	color_writetoaddr@value^0,w,c
  1144   004460  EC54  F022         	call	_I2C_2_Master_Write
  1145                           
  1146                           ;color.c: 45:     I2C_2_Master_Stop();
  1147   004464  EC5A  F022         	call	_I2C_2_Master_Stop	;wreg free
  1148   004468  0012               	return		;funcret
  1149   00446A                     __end_of_color_writetoaddr:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _I2C_2_Master_Init *****************
  1153 ;; Defined at:
  1154 ;;		line 4 in file "i2c.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_color_click_init
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text3
  1182   0043A8                     __ptext3:
  1183                           	callstack 0
  1184   0043A8                     _I2C_2_Master_Init:
  1185                           	callstack 29
  1186   0043A8                     
  1187                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1188   0043A8  010E               	movlb	14	; () banked
  1189   0043AA  51D9               	movf	217,w,b	;volatile
  1190   0043AC  0BF0               	andlw	-16
  1191   0043AE  0908               	iorlw	8
  1192   0043B0  6FD9               	movwf	217,b	;volatile
  1193   0043B2                     
  1194                           ; BSR set to: 14
  1195                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1196   0043B2  8BD9               	bsf	217,5,b	;volatile
  1197                           
  1198                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1199   0043B4  0E9F               	movlw	159
  1200   0043B6  6FD6               	movwf	214,b	;volatile
  1201   0043B8                     
  1202                           ; BSR set to: 14
  1203                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1204   0043B8  8A84               	bsf	132,5,c	;volatile
  1205   0043BA                     
  1206                           ; BSR set to: 14
  1207                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1208   0043BA  8C84               	bsf	132,6,c	;volatile
  1209   0043BC                     
  1210                           ; BSR set to: 14
  1211                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1212   0043BC  9BA7               	bcf	167,5,b	;volatile
  1213   0043BE                     
  1214                           ; BSR set to: 14
  1215                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1216   0043BE  9DA7               	bcf	167,6,b	;volatile
  1217                           
  1218                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1219   0043C0  0E1D               	movlw	29
  1220   0043C2  6F1D               	movwf	29,b	;volatile
  1221                           
  1222                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1223   0043C4  0E1E               	movlw	30
  1224   0043C6  6F1C               	movwf	28,b	;volatile
  1225                           
  1226                           ;i2c.c: 18:   RD5PPS=0x1C;
  1227   0043C8  0E1C               	movlw	28
  1228   0043CA  6F6F               	movwf	111,b	;volatile
  1229                           
  1230                           ;i2c.c: 19:   RD6PPS=0x1B;
  1231   0043CC  0E1B               	movlw	27
  1232   0043CE  6F70               	movwf	112,b	;volatile
  1233   0043D0                     
  1234                           ; BSR set to: 14
  1235   0043D0  0012               	return		;funcret
  1236   0043D2                     __end_of_I2C_2_Master_Init:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _color_cardCheck *****************
  1240 ;; Defined at:
  1241 ;;		line 174 in file "color.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  senddata       25  104[BANK0 ] unsigned char [25]
  1246 ;;  S               4  153[BANK0 ] float 
  1247 ;;  V               4  149[BANK0 ] float 
  1248 ;;  H               4  145[BANK0 ] float 
  1249 ;;  c               4  141[BANK0 ] float 
  1250 ;;  b               4  137[BANK0 ] float 
  1251 ;;  g               4  133[BANK0 ] float 
  1252 ;;  r               4  129[BANK0 ] float 
  1253 ;;  card_color      2    0        unsigned int 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2  108[None  ] unsigned int 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Locals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Totals:         0      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;Total ram usage:       55 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 8
  1270 ;; This function calls:
  1271 ;;		_RGB_to_HSV
  1272 ;;		___fleq
  1273 ;;		___xxtofl
  1274 ;;		_color_read_Blue
  1275 ;;		_color_read_Clear
  1276 ;;		_color_read_Green
  1277 ;;		_color_read_Red
  1278 ;;		_sendStringSerial4
  1279 ;;		_sprintf
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text4
  1286   001FD0                     __ptext4:
  1287                           	callstack 0
  1288   001FD0                     _color_cardCheck:
  1289                           	callstack 22
  1290   001FD0                     
  1291                           ;color.c: 177:     float r = color_read_Red();
  1292   001FD0  EC18  F020         	call	_color_read_Red	;wreg free
  1293   001FD4  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1294   001FD8  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1295   001FDC  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1296   001FDE  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1297   001FE0  0E00               	movlw	0
  1298   001FE2  ECA7  F01B         	call	___xxtofl
  1299   001FE6  C00C  F0E1         	movff	?___xxtofl,color_cardCheck@r
  1300   001FEA  C00D  F0E2         	movff	?___xxtofl+1,color_cardCheck@r+1
  1301   001FEE  C00E  F0E3         	movff	?___xxtofl+2,color_cardCheck@r+2
  1302   001FF2  C00F  F0E4         	movff	?___xxtofl+3,color_cardCheck@r+3
  1303                           
  1304                           ;color.c: 178:     float g = color_read_Green();
  1305   001FF6  EC40  F020         	call	_color_read_Green	;wreg free
  1306   001FFA  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1307   001FFE  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1308   002002  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1309   002004  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1310   002006  0E00               	movlw	0
  1311   002008  ECA7  F01B         	call	___xxtofl
  1312   00200C  C00C  F0E5         	movff	?___xxtofl,color_cardCheck@g
  1313   002010  C00D  F0E6         	movff	?___xxtofl+1,color_cardCheck@g+1
  1314   002014  C00E  F0E7         	movff	?___xxtofl+2,color_cardCheck@g+2
  1315   002018  C00F  F0E8         	movff	?___xxtofl+3,color_cardCheck@g+3
  1316                           
  1317                           ;color.c: 179:     float b = color_read_Blue();
  1318   00201C  EC90  F020         	call	_color_read_Blue	;wreg free
  1319   002020  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1320   002024  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1321   002028  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1322   00202A  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1323   00202C  0E00               	movlw	0
  1324   00202E  ECA7  F01B         	call	___xxtofl
  1325   002032  C00C  F0E9         	movff	?___xxtofl,color_cardCheck@b
  1326   002036  C00D  F0EA         	movff	?___xxtofl+1,color_cardCheck@b+1
  1327   00203A  C00E  F0EB         	movff	?___xxtofl+2,color_cardCheck@b+2
  1328   00203E  C00F  F0EC         	movff	?___xxtofl+3,color_cardCheck@b+3
  1329                           
  1330                           ;color.c: 182:     float c = color_read_Clear();
  1331   002042  EC68  F020         	call	_color_read_Clear	;wreg free
  1332   002046  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1333   00204A  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1334   00204E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1335   002050  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1336   002052  0E00               	movlw	0
  1337   002054  ECA7  F01B         	call	___xxtofl
  1338   002058  C00C  F0ED         	movff	?___xxtofl,color_cardCheck@c
  1339   00205C  C00D  F0EE         	movff	?___xxtofl+1,color_cardCheck@c+1
  1340   002060  C00E  F0EF         	movff	?___xxtofl+2,color_cardCheck@c+2
  1341   002064  C00F  F0F0         	movff	?___xxtofl+3,color_cardCheck@c+3
  1342   002068                     
  1343                           ;color.c: 185:     float H;;color.c: 186:     float S;;color.c: 187:     float V;;color.
      +                          c: 189:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  1344   002068  C0E1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  1345   00206C  C0E2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  1346   002070  C0E3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  1347   002074  C0E4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  1348   002078  C0E5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  1349   00207C  C0E6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  1350   002080  C0E7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  1351   002084  C0E8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  1352   002088  C0E9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  1353   00208C  C0EA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  1354   002090  C0EB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  1355   002094  C0EC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  1356   002098  C0ED  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  1357   00209C  C0EE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  1358   0020A0  C0EF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  1359   0020A4  C0F0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  1360   0020A8  0EF1               	movlw	low color_cardCheck@H
  1361   0020AA  0100               	movlb	0	; () banked
  1362   0020AC  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  1363   0020AE  0EF9               	movlw	low color_cardCheck@S
  1364   0020B0  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  1365   0020B2  0EF5               	movlw	low color_cardCheck@V
  1366   0020B4  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  1367   0020B6  EC07  F00C         	call	_RGB_to_HSV	;wreg free
  1368   0020BA                     
  1369                           ;color.c: 197:     char senddata[25];;color.c: 198:     sprintf(senddata,"H:%.2f S: %.2f
      +                           V: %.2f ",H,S,V);
  1370   0020BA  0EC8               	movlw	low color_cardCheck@senddata
  1371   0020BC  0100               	movlb	0	; () banked
  1372   0020BE  6FAB               	movwf	sprintf@s& (0+255),b
  1373   0020C0  0E01               	movlw	low STR_1
  1374   0020C2  6FAC               	movwf	sprintf@fmt& (0+255),b
  1375   0020C4  C0F1  F0AD         	movff	color_cardCheck@H,?_sprintf+2
  1376   0020C8  C0F2  F0AE         	movff	color_cardCheck@H+1,?_sprintf+3
  1377   0020CC  C0F3  F0AF         	movff	color_cardCheck@H+2,?_sprintf+4
  1378   0020D0  C0F4  F0B0         	movff	color_cardCheck@H+3,?_sprintf+5
  1379   0020D4  C0F9  F0B1         	movff	color_cardCheck@S,?_sprintf+6
  1380   0020D8  C0FA  F0B2         	movff	color_cardCheck@S+1,?_sprintf+7
  1381   0020DC  C0FB  F0B3         	movff	color_cardCheck@S+2,?_sprintf+8
  1382   0020E0  C0FC  F0B4         	movff	color_cardCheck@S+3,?_sprintf+9
  1383   0020E4  C0F5  F0B5         	movff	color_cardCheck@V,?_sprintf+10
  1384   0020E8  C0F6  F0B6         	movff	color_cardCheck@V+1,?_sprintf+11
  1385   0020EC  C0F7  F0B7         	movff	color_cardCheck@V+2,?_sprintf+12
  1386   0020F0  C0F8  F0B8         	movff	color_cardCheck@V+3,?_sprintf+13
  1387   0020F4  EC82  F021         	call	_sprintf	;wreg free
  1388   0020F8                     
  1389                           ;color.c: 199:     sendStringSerial4(senddata);
  1390   0020F8  0EC8               	movlw	low color_cardCheck@senddata
  1391   0020FA  6E02               	movwf	sendStringSerial4@string^0,c
  1392   0020FC  ECE9  F021         	call	_sendStringSerial4	;wreg free
  1393   002100                     
  1394                           ;color.c: 200:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1395   002100  0E05               	movlw	5
  1396   002102  0100               	movlb	0	; () banked
  1397   002104  6FC7               	movwf	(??_color_cardCheck+1)& (0+255),b
  1398   002106  0E0F               	movlw	15
  1399   002108  6FC6               	movwf	??_color_cardCheck& (0+255),b
  1400   00210A  0EF1               	movlw	241
  1401   00210C                     u6577:
  1402   00210C  2EE8               	decfsz	wreg,f,c
  1403   00210E  D7FE               	bra	u6577
  1404   002110  2FC6               	decfsz	??_color_cardCheck& (0+255),f,b
  1405   002112  D7FC               	bra	u6577
  1406   002114  2FC7               	decfsz	(??_color_cardCheck+1)& (0+255),f,b
  1407   002116  D7FA               	bra	u6577
  1408   002118                     
  1409                           ;color.c: 209:     if (H && S && V) {card_color = 1;}
  1410   002118  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1411   00211C  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1412   002120  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1413   002124  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1414   002128  0E00               	movlw	0
  1415   00212A  6E05               	movwf	___fleq@ff2^0,c
  1416   00212C  0E00               	movlw	0
  1417   00212E  6E06               	movwf	(___fleq@ff2+1)^0,c
  1418   002130  0E00               	movlw	0
  1419   002132  6E07               	movwf	(___fleq@ff2+2)^0,c
  1420   002134  0E00               	movlw	0
  1421   002136  6E08               	movwf	(___fleq@ff2+3)^0,c
  1422   002138  EC3D  F01F         	call	___fleq	;wreg free
  1423   00213C  B0D8               	btfsc	status,0,c
  1424   00213E  EFA3  F010         	goto	u6271
  1425   002142  EFA5  F010         	goto	u6270
  1426   002146                     u6271:
  1427   002146  EFD9  F010         	goto	l5095
  1428   00214A                     u6270:
  1429   00214A  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1430   00214E  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1431   002152  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1432   002156  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1433   00215A  0E00               	movlw	0
  1434   00215C  6E05               	movwf	___fleq@ff2^0,c
  1435   00215E  0E00               	movlw	0
  1436   002160  6E06               	movwf	(___fleq@ff2+1)^0,c
  1437   002162  0E00               	movlw	0
  1438   002164  6E07               	movwf	(___fleq@ff2+2)^0,c
  1439   002166  0E00               	movlw	0
  1440   002168  6E08               	movwf	(___fleq@ff2+3)^0,c
  1441   00216A  EC3D  F01F         	call	___fleq	;wreg free
  1442   00216E  B0D8               	btfsc	status,0,c
  1443   002170  EFBC  F010         	goto	u6281
  1444   002174  EFBE  F010         	goto	u6280
  1445   002178                     u6281:
  1446   002178  EFD9  F010         	goto	l5095
  1447   00217C                     u6280:
  1448   00217C  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1449   002180  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1450   002184  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1451   002188  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1452   00218C  0E00               	movlw	0
  1453   00218E  6E05               	movwf	___fleq@ff2^0,c
  1454   002190  0E00               	movlw	0
  1455   002192  6E06               	movwf	(___fleq@ff2+1)^0,c
  1456   002194  0E00               	movlw	0
  1457   002196  6E07               	movwf	(___fleq@ff2+2)^0,c
  1458   002198  0E00               	movlw	0
  1459   00219A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1460   00219C  EC3D  F01F         	call	___fleq	;wreg free
  1461   0021A0  B0D8               	btfsc	status,0,c
  1462   0021A2  EFD5  F010         	goto	u6291
  1463   0021A6  EFD7  F010         	goto	u6290
  1464   0021AA                     u6291:
  1465   0021AA  EFD9  F010         	goto	l5095
  1466   0021AE                     u6290:
  1467   0021AE  EF41  F013         	goto	l126
  1468   0021B2                     l5095:
  1469   0021B2  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1470   0021B6  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1471   0021BA  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1472   0021BE  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1473   0021C2  0E00               	movlw	0
  1474   0021C4  6E05               	movwf	___fleq@ff2^0,c
  1475   0021C6  0E00               	movlw	0
  1476   0021C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1477   0021CA  0E00               	movlw	0
  1478   0021CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1479   0021CE  0E00               	movlw	0
  1480   0021D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1481   0021D2  EC3D  F01F         	call	___fleq	;wreg free
  1482   0021D6  B0D8               	btfsc	status,0,c
  1483   0021D8  EFF0  F010         	goto	u6301
  1484   0021DC  EFF2  F010         	goto	u6300
  1485   0021E0                     u6301:
  1486   0021E0  EF26  F011         	goto	l5103
  1487   0021E4                     u6300:
  1488   0021E4  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1489   0021E8  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1490   0021EC  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1491   0021F0  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1492   0021F4  0E00               	movlw	0
  1493   0021F6  6E05               	movwf	___fleq@ff2^0,c
  1494   0021F8  0E00               	movlw	0
  1495   0021FA  6E06               	movwf	(___fleq@ff2+1)^0,c
  1496   0021FC  0E00               	movlw	0
  1497   0021FE  6E07               	movwf	(___fleq@ff2+2)^0,c
  1498   002200  0E00               	movlw	0
  1499   002202  6E08               	movwf	(___fleq@ff2+3)^0,c
  1500   002204  EC3D  F01F         	call	___fleq	;wreg free
  1501   002208  B0D8               	btfsc	status,0,c
  1502   00220A  EF09  F011         	goto	u6311
  1503   00220E  EF0B  F011         	goto	u6310
  1504   002212                     u6311:
  1505   002212  EF26  F011         	goto	l5103
  1506   002216                     u6310:
  1507   002216  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1508   00221A  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1509   00221E  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1510   002222  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1511   002226  0E00               	movlw	0
  1512   002228  6E05               	movwf	___fleq@ff2^0,c
  1513   00222A  0E00               	movlw	0
  1514   00222C  6E06               	movwf	(___fleq@ff2+1)^0,c
  1515   00222E  0E00               	movlw	0
  1516   002230  6E07               	movwf	(___fleq@ff2+2)^0,c
  1517   002232  0E00               	movlw	0
  1518   002234  6E08               	movwf	(___fleq@ff2+3)^0,c
  1519   002236  EC3D  F01F         	call	___fleq	;wreg free
  1520   00223A  B0D8               	btfsc	status,0,c
  1521   00223C  EF22  F011         	goto	u6321
  1522   002240  EF24  F011         	goto	u6320
  1523   002244                     u6321:
  1524   002244  EF26  F011         	goto	l5103
  1525   002248                     u6320:
  1526   002248  EF41  F013         	goto	l126
  1527   00224C                     l5103:
  1528   00224C  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1529   002250  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1530   002254  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1531   002258  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1532   00225C  0E00               	movlw	0
  1533   00225E  6E05               	movwf	___fleq@ff2^0,c
  1534   002260  0E00               	movlw	0
  1535   002262  6E06               	movwf	(___fleq@ff2+1)^0,c
  1536   002264  0E00               	movlw	0
  1537   002266  6E07               	movwf	(___fleq@ff2+2)^0,c
  1538   002268  0E00               	movlw	0
  1539   00226A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1540   00226C  EC3D  F01F         	call	___fleq	;wreg free
  1541   002270  B0D8               	btfsc	status,0,c
  1542   002272  EF3D  F011         	goto	u6331
  1543   002276  EF3F  F011         	goto	u6330
  1544   00227A                     u6331:
  1545   00227A  EF73  F011         	goto	l5111
  1546   00227E                     u6330:
  1547   00227E  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1548   002282  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1549   002286  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1550   00228A  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1551   00228E  0E00               	movlw	0
  1552   002290  6E05               	movwf	___fleq@ff2^0,c
  1553   002292  0E00               	movlw	0
  1554   002294  6E06               	movwf	(___fleq@ff2+1)^0,c
  1555   002296  0E00               	movlw	0
  1556   002298  6E07               	movwf	(___fleq@ff2+2)^0,c
  1557   00229A  0E00               	movlw	0
  1558   00229C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1559   00229E  EC3D  F01F         	call	___fleq	;wreg free
  1560   0022A2  B0D8               	btfsc	status,0,c
  1561   0022A4  EF56  F011         	goto	u6341
  1562   0022A8  EF58  F011         	goto	u6340
  1563   0022AC                     u6341:
  1564   0022AC  EF73  F011         	goto	l5111
  1565   0022B0                     u6340:
  1566   0022B0  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1567   0022B4  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1568   0022B8  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1569   0022BC  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1570   0022C0  0E00               	movlw	0
  1571   0022C2  6E05               	movwf	___fleq@ff2^0,c
  1572   0022C4  0E00               	movlw	0
  1573   0022C6  6E06               	movwf	(___fleq@ff2+1)^0,c
  1574   0022C8  0E00               	movlw	0
  1575   0022CA  6E07               	movwf	(___fleq@ff2+2)^0,c
  1576   0022CC  0E00               	movlw	0
  1577   0022CE  6E08               	movwf	(___fleq@ff2+3)^0,c
  1578   0022D0  EC3D  F01F         	call	___fleq	;wreg free
  1579   0022D4  B0D8               	btfsc	status,0,c
  1580   0022D6  EF6F  F011         	goto	u6351
  1581   0022DA  EF71  F011         	goto	u6350
  1582   0022DE                     u6351:
  1583   0022DE  EF73  F011         	goto	l5111
  1584   0022E2                     u6350:
  1585   0022E2  EF41  F013         	goto	l126
  1586   0022E6                     l5111:
  1587   0022E6  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1588   0022EA  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1589   0022EE  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1590   0022F2  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1591   0022F6  0E00               	movlw	0
  1592   0022F8  6E05               	movwf	___fleq@ff2^0,c
  1593   0022FA  0E00               	movlw	0
  1594   0022FC  6E06               	movwf	(___fleq@ff2+1)^0,c
  1595   0022FE  0E00               	movlw	0
  1596   002300  6E07               	movwf	(___fleq@ff2+2)^0,c
  1597   002302  0E00               	movlw	0
  1598   002304  6E08               	movwf	(___fleq@ff2+3)^0,c
  1599   002306  EC3D  F01F         	call	___fleq	;wreg free
  1600   00230A  B0D8               	btfsc	status,0,c
  1601   00230C  EF8A  F011         	goto	u6361
  1602   002310  EF8C  F011         	goto	u6360
  1603   002314                     u6361:
  1604   002314  EFC0  F011         	goto	l5119
  1605   002318                     u6360:
  1606   002318  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1607   00231C  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1608   002320  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1609   002324  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1610   002328  0E00               	movlw	0
  1611   00232A  6E05               	movwf	___fleq@ff2^0,c
  1612   00232C  0E00               	movlw	0
  1613   00232E  6E06               	movwf	(___fleq@ff2+1)^0,c
  1614   002330  0E00               	movlw	0
  1615   002332  6E07               	movwf	(___fleq@ff2+2)^0,c
  1616   002334  0E00               	movlw	0
  1617   002336  6E08               	movwf	(___fleq@ff2+3)^0,c
  1618   002338  EC3D  F01F         	call	___fleq	;wreg free
  1619   00233C  B0D8               	btfsc	status,0,c
  1620   00233E  EFA3  F011         	goto	u6371
  1621   002342  EFA5  F011         	goto	u6370
  1622   002346                     u6371:
  1623   002346  EFC0  F011         	goto	l5119
  1624   00234A                     u6370:
  1625   00234A  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1626   00234E  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1627   002352  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1628   002356  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1629   00235A  0E00               	movlw	0
  1630   00235C  6E05               	movwf	___fleq@ff2^0,c
  1631   00235E  0E00               	movlw	0
  1632   002360  6E06               	movwf	(___fleq@ff2+1)^0,c
  1633   002362  0E00               	movlw	0
  1634   002364  6E07               	movwf	(___fleq@ff2+2)^0,c
  1635   002366  0E00               	movlw	0
  1636   002368  6E08               	movwf	(___fleq@ff2+3)^0,c
  1637   00236A  EC3D  F01F         	call	___fleq	;wreg free
  1638   00236E  B0D8               	btfsc	status,0,c
  1639   002370  EFBC  F011         	goto	u6381
  1640   002374  EFBE  F011         	goto	u6380
  1641   002378                     u6381:
  1642   002378  EFC0  F011         	goto	l5119
  1643   00237C                     u6380:
  1644   00237C  EF41  F013         	goto	l126
  1645   002380                     l5119:
  1646   002380  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1647   002384  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1648   002388  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1649   00238C  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1650   002390  0E00               	movlw	0
  1651   002392  6E05               	movwf	___fleq@ff2^0,c
  1652   002394  0E00               	movlw	0
  1653   002396  6E06               	movwf	(___fleq@ff2+1)^0,c
  1654   002398  0E00               	movlw	0
  1655   00239A  6E07               	movwf	(___fleq@ff2+2)^0,c
  1656   00239C  0E00               	movlw	0
  1657   00239E  6E08               	movwf	(___fleq@ff2+3)^0,c
  1658   0023A0  EC3D  F01F         	call	___fleq	;wreg free
  1659   0023A4  B0D8               	btfsc	status,0,c
  1660   0023A6  EFD7  F011         	goto	u6391
  1661   0023AA  EFD9  F011         	goto	u6390
  1662   0023AE                     u6391:
  1663   0023AE  EF0D  F012         	goto	l5127
  1664   0023B2                     u6390:
  1665   0023B2  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1666   0023B6  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1667   0023BA  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1668   0023BE  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1669   0023C2  0E00               	movlw	0
  1670   0023C4  6E05               	movwf	___fleq@ff2^0,c
  1671   0023C6  0E00               	movlw	0
  1672   0023C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1673   0023CA  0E00               	movlw	0
  1674   0023CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1675   0023CE  0E00               	movlw	0
  1676   0023D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1677   0023D2  EC3D  F01F         	call	___fleq	;wreg free
  1678   0023D6  B0D8               	btfsc	status,0,c
  1679   0023D8  EFF0  F011         	goto	u6401
  1680   0023DC  EFF2  F011         	goto	u6400
  1681   0023E0                     u6401:
  1682   0023E0  EF0D  F012         	goto	l5127
  1683   0023E4                     u6400:
  1684   0023E4  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1685   0023E8  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1686   0023EC  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1687   0023F0  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1688   0023F4  0E00               	movlw	0
  1689   0023F6  6E05               	movwf	___fleq@ff2^0,c
  1690   0023F8  0E00               	movlw	0
  1691   0023FA  6E06               	movwf	(___fleq@ff2+1)^0,c
  1692   0023FC  0E00               	movlw	0
  1693   0023FE  6E07               	movwf	(___fleq@ff2+2)^0,c
  1694   002400  0E00               	movlw	0
  1695   002402  6E08               	movwf	(___fleq@ff2+3)^0,c
  1696   002404  EC3D  F01F         	call	___fleq	;wreg free
  1697   002408  B0D8               	btfsc	status,0,c
  1698   00240A  EF09  F012         	goto	u6411
  1699   00240E  EF0B  F012         	goto	u6410
  1700   002412                     u6411:
  1701   002412  EF0D  F012         	goto	l5127
  1702   002416                     u6410:
  1703   002416  EF41  F013         	goto	l126
  1704   00241A                     l5127:
  1705   00241A  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1706   00241E  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1707   002422  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1708   002426  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1709   00242A  0E00               	movlw	0
  1710   00242C  6E05               	movwf	___fleq@ff2^0,c
  1711   00242E  0E00               	movlw	0
  1712   002430  6E06               	movwf	(___fleq@ff2+1)^0,c
  1713   002432  0E00               	movlw	0
  1714   002434  6E07               	movwf	(___fleq@ff2+2)^0,c
  1715   002436  0E00               	movlw	0
  1716   002438  6E08               	movwf	(___fleq@ff2+3)^0,c
  1717   00243A  EC3D  F01F         	call	___fleq	;wreg free
  1718   00243E  B0D8               	btfsc	status,0,c
  1719   002440  EF24  F012         	goto	u6421
  1720   002444  EF26  F012         	goto	u6420
  1721   002448                     u6421:
  1722   002448  EF5A  F012         	goto	l5135
  1723   00244C                     u6420:
  1724   00244C  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1725   002450  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1726   002454  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1727   002458  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1728   00245C  0E00               	movlw	0
  1729   00245E  6E05               	movwf	___fleq@ff2^0,c
  1730   002460  0E00               	movlw	0
  1731   002462  6E06               	movwf	(___fleq@ff2+1)^0,c
  1732   002464  0E00               	movlw	0
  1733   002466  6E07               	movwf	(___fleq@ff2+2)^0,c
  1734   002468  0E00               	movlw	0
  1735   00246A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1736   00246C  EC3D  F01F         	call	___fleq	;wreg free
  1737   002470  B0D8               	btfsc	status,0,c
  1738   002472  EF3D  F012         	goto	u6431
  1739   002476  EF3F  F012         	goto	u6430
  1740   00247A                     u6431:
  1741   00247A  EF5A  F012         	goto	l5135
  1742   00247E                     u6430:
  1743   00247E  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1744   002482  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1745   002486  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1746   00248A  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1747   00248E  0E00               	movlw	0
  1748   002490  6E05               	movwf	___fleq@ff2^0,c
  1749   002492  0E00               	movlw	0
  1750   002494  6E06               	movwf	(___fleq@ff2+1)^0,c
  1751   002496  0E00               	movlw	0
  1752   002498  6E07               	movwf	(___fleq@ff2+2)^0,c
  1753   00249A  0E00               	movlw	0
  1754   00249C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1755   00249E  EC3D  F01F         	call	___fleq	;wreg free
  1756   0024A2  B0D8               	btfsc	status,0,c
  1757   0024A4  EF56  F012         	goto	u6441
  1758   0024A8  EF58  F012         	goto	u6440
  1759   0024AC                     u6441:
  1760   0024AC  EF5A  F012         	goto	l5135
  1761   0024B0                     u6440:
  1762   0024B0  EF41  F013         	goto	l126
  1763   0024B4                     l5135:
  1764   0024B4  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1765   0024B8  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1766   0024BC  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1767   0024C0  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1768   0024C4  0E00               	movlw	0
  1769   0024C6  6E05               	movwf	___fleq@ff2^0,c
  1770   0024C8  0E00               	movlw	0
  1771   0024CA  6E06               	movwf	(___fleq@ff2+1)^0,c
  1772   0024CC  0E00               	movlw	0
  1773   0024CE  6E07               	movwf	(___fleq@ff2+2)^0,c
  1774   0024D0  0E00               	movlw	0
  1775   0024D2  6E08               	movwf	(___fleq@ff2+3)^0,c
  1776   0024D4  EC3D  F01F         	call	___fleq	;wreg free
  1777   0024D8  B0D8               	btfsc	status,0,c
  1778   0024DA  EF71  F012         	goto	u6451
  1779   0024DE  EF73  F012         	goto	u6450
  1780   0024E2                     u6451:
  1781   0024E2  EFA7  F012         	goto	l5143
  1782   0024E6                     u6450:
  1783   0024E6  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1784   0024EA  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1785   0024EE  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1786   0024F2  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1787   0024F6  0E00               	movlw	0
  1788   0024F8  6E05               	movwf	___fleq@ff2^0,c
  1789   0024FA  0E00               	movlw	0
  1790   0024FC  6E06               	movwf	(___fleq@ff2+1)^0,c
  1791   0024FE  0E00               	movlw	0
  1792   002500  6E07               	movwf	(___fleq@ff2+2)^0,c
  1793   002502  0E00               	movlw	0
  1794   002504  6E08               	movwf	(___fleq@ff2+3)^0,c
  1795   002506  EC3D  F01F         	call	___fleq	;wreg free
  1796   00250A  B0D8               	btfsc	status,0,c
  1797   00250C  EF8A  F012         	goto	u6461
  1798   002510  EF8C  F012         	goto	u6460
  1799   002514                     u6461:
  1800   002514  EFA7  F012         	goto	l5143
  1801   002518                     u6460:
  1802   002518  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1803   00251C  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1804   002520  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1805   002524  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1806   002528  0E00               	movlw	0
  1807   00252A  6E05               	movwf	___fleq@ff2^0,c
  1808   00252C  0E00               	movlw	0
  1809   00252E  6E06               	movwf	(___fleq@ff2+1)^0,c
  1810   002530  0E00               	movlw	0
  1811   002532  6E07               	movwf	(___fleq@ff2+2)^0,c
  1812   002534  0E00               	movlw	0
  1813   002536  6E08               	movwf	(___fleq@ff2+3)^0,c
  1814   002538  EC3D  F01F         	call	___fleq	;wreg free
  1815   00253C  B0D8               	btfsc	status,0,c
  1816   00253E  EFA3  F012         	goto	u6471
  1817   002542  EFA5  F012         	goto	u6470
  1818   002546                     u6471:
  1819   002546  EFA7  F012         	goto	l5143
  1820   00254A                     u6470:
  1821   00254A  EF41  F013         	goto	l126
  1822   00254E                     l5143:
  1823   00254E  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1824   002552  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1825   002556  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1826   00255A  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1827   00255E  0E00               	movlw	0
  1828   002560  6E05               	movwf	___fleq@ff2^0,c
  1829   002562  0E00               	movlw	0
  1830   002564  6E06               	movwf	(___fleq@ff2+1)^0,c
  1831   002566  0E00               	movlw	0
  1832   002568  6E07               	movwf	(___fleq@ff2+2)^0,c
  1833   00256A  0E00               	movlw	0
  1834   00256C  6E08               	movwf	(___fleq@ff2+3)^0,c
  1835   00256E  EC3D  F01F         	call	___fleq	;wreg free
  1836   002572  B0D8               	btfsc	status,0,c
  1837   002574  EFBE  F012         	goto	u6481
  1838   002578  EFC0  F012         	goto	u6480
  1839   00257C                     u6481:
  1840   00257C  EFF4  F012         	goto	l5151
  1841   002580                     u6480:
  1842   002580  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1843   002584  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1844   002588  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1845   00258C  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1846   002590  0E00               	movlw	0
  1847   002592  6E05               	movwf	___fleq@ff2^0,c
  1848   002594  0E00               	movlw	0
  1849   002596  6E06               	movwf	(___fleq@ff2+1)^0,c
  1850   002598  0E00               	movlw	0
  1851   00259A  6E07               	movwf	(___fleq@ff2+2)^0,c
  1852   00259C  0E00               	movlw	0
  1853   00259E  6E08               	movwf	(___fleq@ff2+3)^0,c
  1854   0025A0  EC3D  F01F         	call	___fleq	;wreg free
  1855   0025A4  B0D8               	btfsc	status,0,c
  1856   0025A6  EFD7  F012         	goto	u6491
  1857   0025AA  EFD9  F012         	goto	u6490
  1858   0025AE                     u6491:
  1859   0025AE  EFF4  F012         	goto	l5151
  1860   0025B2                     u6490:
  1861   0025B2  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1862   0025B6  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1863   0025BA  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1864   0025BE  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1865   0025C2  0E00               	movlw	0
  1866   0025C4  6E05               	movwf	___fleq@ff2^0,c
  1867   0025C6  0E00               	movlw	0
  1868   0025C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  1869   0025CA  0E00               	movlw	0
  1870   0025CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  1871   0025CE  0E00               	movlw	0
  1872   0025D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  1873   0025D2  EC3D  F01F         	call	___fleq	;wreg free
  1874   0025D6  B0D8               	btfsc	status,0,c
  1875   0025D8  EFF0  F012         	goto	u6501
  1876   0025DC  EFF2  F012         	goto	u6500
  1877   0025E0                     u6501:
  1878   0025E0  EFF4  F012         	goto	l5151
  1879   0025E4                     u6500:
  1880   0025E4  EF41  F013         	goto	l126
  1881   0025E8                     l5151:
  1882   0025E8  C0F1  F001         	movff	color_cardCheck@H,___fleq@ff1
  1883   0025EC  C0F2  F002         	movff	color_cardCheck@H+1,___fleq@ff1+1
  1884   0025F0  C0F3  F003         	movff	color_cardCheck@H+2,___fleq@ff1+2
  1885   0025F4  C0F4  F004         	movff	color_cardCheck@H+3,___fleq@ff1+3
  1886   0025F8  0E00               	movlw	0
  1887   0025FA  6E05               	movwf	___fleq@ff2^0,c
  1888   0025FC  0E00               	movlw	0
  1889   0025FE  6E06               	movwf	(___fleq@ff2+1)^0,c
  1890   002600  0E00               	movlw	0
  1891   002602  6E07               	movwf	(___fleq@ff2+2)^0,c
  1892   002604  0E00               	movlw	0
  1893   002606  6E08               	movwf	(___fleq@ff2+3)^0,c
  1894   002608  EC3D  F01F         	call	___fleq	;wreg free
  1895   00260C  B0D8               	btfsc	status,0,c
  1896   00260E  EF0B  F013         	goto	u6511
  1897   002612  EF0D  F013         	goto	u6510
  1898   002616                     u6511:
  1899   002616  EF41  F013         	goto	l120
  1900   00261A                     u6510:
  1901   00261A  C0F9  F001         	movff	color_cardCheck@S,___fleq@ff1
  1902   00261E  C0FA  F002         	movff	color_cardCheck@S+1,___fleq@ff1+1
  1903   002622  C0FB  F003         	movff	color_cardCheck@S+2,___fleq@ff1+2
  1904   002626  C0FC  F004         	movff	color_cardCheck@S+3,___fleq@ff1+3
  1905   00262A  0E00               	movlw	0
  1906   00262C  6E05               	movwf	___fleq@ff2^0,c
  1907   00262E  0E00               	movlw	0
  1908   002630  6E06               	movwf	(___fleq@ff2+1)^0,c
  1909   002632  0E00               	movlw	0
  1910   002634  6E07               	movwf	(___fleq@ff2+2)^0,c
  1911   002636  0E00               	movlw	0
  1912   002638  6E08               	movwf	(___fleq@ff2+3)^0,c
  1913   00263A  EC3D  F01F         	call	___fleq	;wreg free
  1914   00263E  B0D8               	btfsc	status,0,c
  1915   002640  EF24  F013         	goto	u6521
  1916   002644  EF26  F013         	goto	u6520
  1917   002648                     u6521:
  1918   002648  EF41  F013         	goto	l120
  1919   00264C                     u6520:
  1920   00264C  C0F5  F001         	movff	color_cardCheck@V,___fleq@ff1
  1921   002650  C0F6  F002         	movff	color_cardCheck@V+1,___fleq@ff1+1
  1922   002654  C0F7  F003         	movff	color_cardCheck@V+2,___fleq@ff1+2
  1923   002658  C0F8  F004         	movff	color_cardCheck@V+3,___fleq@ff1+3
  1924   00265C  0E00               	movlw	0
  1925   00265E  6E05               	movwf	___fleq@ff2^0,c
  1926   002660  0E00               	movlw	0
  1927   002662  6E06               	movwf	(___fleq@ff2+1)^0,c
  1928   002664  0E00               	movlw	0
  1929   002666  6E07               	movwf	(___fleq@ff2+2)^0,c
  1930   002668  0E00               	movlw	0
  1931   00266A  6E08               	movwf	(___fleq@ff2+3)^0,c
  1932   00266C  EC3D  F01F         	call	___fleq	;wreg free
  1933   002670  B0D8               	btfsc	status,0,c
  1934   002672  EF3D  F013         	goto	u6531
  1935   002676  EF3F  F013         	goto	u6530
  1936   00267A                     u6531:
  1937   00267A  EF41  F013         	goto	l120
  1938   00267E                     u6530:
  1939   00267E  EF41  F013         	goto	l126
  1940   002682                     l120:
  1941   002682                     l126:
  1942   002682  0012               	return		;funcret
  1943   002684                     __end_of_color_cardCheck:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function _sprintf *****************
  1947 ;; Defined at:
  1948 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  s               1   75[BANK0 ] PTR unsigned char 
  1951 ;;		 -> color_cardCheck@senddata(25), 
  1952 ;;  fmt             1   76[BANK0 ] PTR const unsigned char 
  1953 ;;		 -> STR_1(24), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  f              12   90[BANK0 ] struct _IO_FILE
  1956 ;;  ret             2    0        int 
  1957 ;;  ap              1   89[BANK0 ] PTR void [1]
  1958 ;;		 -> ?_sprintf(2), 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  2   75[BANK0 ] int 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1968 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1971 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1972 ;;Total ram usage:       27 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 7
  1975 ;; This function calls:
  1976 ;;		_vfprintf
  1977 ;; This function is called by:
  1978 ;;		_color_cardCheck
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text5
  1983   004304                     __ptext5:
  1984                           	callstack 0
  1985   004304                     _sprintf:
  1986                           	callstack 22
  1987   004304  0EAD               	movlw	low (?_sprintf+2)
  1988   004306  0100               	movlb	0	; () banked
  1989   004308  6FB9               	movwf	sprintf@ap& (0+255),b
  1990   00430A  C0AB  F0BA         	movff	sprintf@s,sprintf@f
  1991   00430E                     
  1992                           ; BSR set to: 0
  1993   00430E  0E00               	movlw	0
  1994   004310  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  1995   004312  0E00               	movlw	0
  1996   004314  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  1997   004316                     
  1998                           ; BSR set to: 0
  1999   004316  0E00               	movlw	0
  2000   004318  6FC5               	movwf	(sprintf@f+11)& (0+255),b
  2001   00431A  0E00               	movlw	0
  2002   00431C  6FC4               	movwf	(sprintf@f+10)& (0+255),b
  2003   00431E                     
  2004                           ; BSR set to: 0
  2005   00431E  0EBA               	movlw	low sprintf@f
  2006   004320  6FA7               	movwf	vfprintf@fp& (0+255),b
  2007   004322  C0AC  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  2008   004326  0EB9               	movlw	low sprintf@ap
  2009   004328  6FA9               	movwf	vfprintf@ap& (0+255),b
  2010   00432A  ECDC  F020         	call	_vfprintf	;wreg free
  2011   00432E  0100               	movlb	0	; () banked
  2012   004330  51AB               	movf	sprintf@s& (0+255),w,b
  2013   004332  25BD               	addwf	(sprintf@f+3)& (0+255),w,b
  2014   004334  6ED9               	movwf	fsr2l,c
  2015   004336  6ADA               	clrf	fsr2h,c
  2016   004338  6ADF               	clrf	indf2,c
  2017   00433A                     
  2018                           ; BSR set to: 0
  2019   00433A  0012               	return		;funcret
  2020   00433C                     __end_of_sprintf:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _vfprintf *****************
  2024 ;; Defined at:
  2025 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  fp              1   71[BANK0 ] PTR struct _IO_FILE
  2028 ;;		 -> sprintf@f(12), 
  2029 ;;  fmt             1   72[BANK0 ] PTR const unsigned char 
  2030 ;;		 -> STR_1(24), 
  2031 ;;  ap              1   73[BANK0 ] PTR PTR void 
  2032 ;;		 -> sprintf@ap(1), 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  cfmt            1   74[BANK0 ] PTR unsigned char 
  2035 ;;		 -> STR_1(24), 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2   71[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2045 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2049 ;;Total ram usage:        4 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 6
  2052 ;; This function calls:
  2053 ;;		_vfpfcnvrt
  2054 ;; This function is called by:
  2055 ;;		_sprintf
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text6
  2060   0041B8                     __ptext6:
  2061                           	callstack 0
  2062   0041B8                     _vfprintf:
  2063                           	callstack 22
  2064   0041B8                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2066   0041B8  C0A8  F0AA         	movff	vfprintf@fmt,vfprintf@cfmt
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2069   0041BC  EFE9  F020         	goto	l4997
  2070   0041C0                     l4995:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2073   0041C0  C0A7  F09C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2074   0041C4  0EAA               	movlw	low vfprintf@cfmt
  2075   0041C6  0100               	movlb	0	; () banked
  2076   0041C8  6F9D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2077   0041CA  C0A9  F09E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2078   0041CE  EC84  F019         	call	_vfpfcnvrt	;wreg free
  2079   0041D2                     l4997:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2082   0041D2  C0AA  FFF6         	movff	vfprintf@cfmt,tblptrl
  2083   0041D6                     	if	1	;There is more than 1 active tblptr byte
  2084   0041D6  0E0E               	movlw	high __smallconst
  2085   0041D8  6EF7               	movwf	tblptrh,c
  2086   0041DA                     	endif
  2087   0041DA                     	if	0	;tblptru may be non-zero
  2088   0041DA                     	endif
  2089   0041DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2090   0041DA  0E00               	movlw	low (__smallconst shr (0+16))
  2091   0041DC  6EF8               	movwf	tblptru,c
  2092   0041DE                     	endif
  2093   0041DE  0008               	tblrd		*
  2094   0041E0  50F5               	movf	tablat,w,c
  2095   0041E2  0900               	iorlw	0
  2096   0041E4  A4D8               	btfss	status,2,c
  2097   0041E6  EFF7  F020         	goto	u6141
  2098   0041EA  EFF9  F020         	goto	u6140
  2099   0041EE                     u6141:
  2100   0041EE  EFE0  F020         	goto	l4995
  2101   0041F2                     u6140:
  2102   0041F2                     
  2103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2104   0041F2  0E00               	movlw	0
  2105   0041F4  0100               	movlb	0	; () banked
  2106   0041F6  6FA8               	movwf	(?_vfprintf+1)& (0+255),b
  2107   0041F8  0E00               	movlw	0
  2108   0041FA  6FA7               	movwf	?_vfprintf& (0+255),b
  2109   0041FC                     
  2110                           ; BSR set to: 0
  2111   0041FC  0012               	return		;funcret
  2112   0041FE                     __end_of_vfprintf:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function _vfpfcnvrt *****************
  2116 ;; Defined at:
  2117 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  2120 ;;		 -> sprintf@f(12), 
  2121 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  2122 ;;		 -> vfprintf@cfmt(1), 
  2123 ;;  ap              1   62[BANK0 ] PTR PTR void 
  2124 ;;		 -> sprintf@ap(1), 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  convarg         4   65[BANK0 ] struct .
  2127 ;;  cp              1   70[BANK0 ] PTR unsigned char 
  2128 ;;		 -> STR_1(24), 
  2129 ;;  c               1   69[BANK0 ] unsigned char 
  2130 ;;  done            1    0        _Bool 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2140 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;Total ram usage:       11 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 5
  2147 ;; This function calls:
  2148 ;;		_efgtoa
  2149 ;;		_fputc
  2150 ;;		_read_prec_or_width
  2151 ;; This function is called by:
  2152 ;;		_vfprintf
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text7
  2157   003308                     __ptext7:
  2158                           	callstack 0
  2159   003308                     _vfpfcnvrt:
  2160                           	callstack 22
  2161   003308                     
  2162                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2163   003308  0100               	movlb	0	; () banked
  2164   00330A  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2165   00330C  6ED9               	movwf	fsr2l,c
  2166   00330E  6ADA               	clrf	fsr2h,c
  2167   003310  CFDF FFF6          	movff	indf2,tblptrl
  2168   003314                     	if	1	;There is more than 1 active tblptr byte
  2169   003314  0E0E               	movlw	high __smallconst
  2170   003316  6EF7               	movwf	tblptrh,c
  2171   003318                     	endif
  2172   003318                     	if	0	;tblptru may be non-zero
  2173   003318                     	endif
  2174   003318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2175   003318  0E00               	movlw	low (__smallconst shr (0+16))
  2176   00331A  6EF8               	movwf	tblptru,c
  2177   00331C                     	endif
  2178   00331C  0008               	tblrd		*
  2179   00331E  50F5               	movf	tablat,w,c
  2180   003320  0A25               	xorlw	37
  2181   003322  A4D8               	btfss	status,2,c
  2182   003324  EF96  F019         	goto	u6101
  2183   003328  EF98  F019         	goto	u6100
  2184   00332C                     u6101:
  2185   00332C  EF88  F01A         	goto	l4961
  2186   003330                     u6100:
  2187   003330                     
  2188                           ; BSR set to: 0
  2189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2190   003330  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2191   003332  6ED9               	movwf	fsr2l,c
  2192   003334  6ADA               	clrf	fsr2h,c
  2193   003336  2ADF               	incf	indf2,f,c
  2194   003338                     
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2197   003338  0E00               	movlw	0
  2198   00333A  0101               	movlb	1	; () banked
  2199   00333C  6F59               	movwf	(_width+1)& (0+255),b
  2200   00333E  0E00               	movlw	0
  2201   003340  6F58               	movwf	_width& (0+255),b
  2202   003342  C158  F15C         	movff	_width,_flags
  2203   003346                     
  2204                           ; BSR set to: 1
  2205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2206   003346  695A               	setf	_prec& (0+255),b
  2207   003348  695B               	setf	(_prec+1)& (0+255),b
  2208   00334A                     
  2209                           ; BSR set to: 1
  2210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2211   00334A  0100               	movlb	0	; () banked
  2212   00334C  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2213   00334E  6ED9               	movwf	fsr2l,c
  2214   003350  6ADA               	clrf	fsr2h,c
  2215   003352  CFDF FFF6          	movff	indf2,tblptrl
  2216   003356                     	if	1	;There is more than 1 active tblptr byte
  2217   003356  0E0E               	movlw	high __smallconst
  2218   003358  6EF7               	movwf	tblptrh,c
  2219   00335A                     	endif
  2220   00335A                     	if	0	;tblptru may be non-zero
  2221   00335A                     	endif
  2222   00335A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2223   00335A  0E00               	movlw	low (__smallconst shr (0+16))
  2224   00335C  6EF8               	movwf	tblptru,c
  2225   00335E                     	endif
  2226   00335E  0008               	tblrd		*
  2227   003360  50F5               	movf	tablat,w,c
  2228   003362  0A2E               	xorlw	46
  2229   003364  A4D8               	btfss	status,2,c
  2230   003366  EFB7  F019         	goto	u6111
  2231   00336A  EFB9  F019         	goto	u6110
  2232   00336E                     u6111:
  2233   00336E  EFC7  F019         	goto	l4923
  2234   003372                     u6110:
  2235   003372                     
  2236                           ; BSR set to: 0
  2237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2238   003372  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2239   003374  6ED9               	movwf	fsr2l,c
  2240   003376  6ADA               	clrf	fsr2h,c
  2241   003378  2ADF               	incf	indf2,f,c
  2242   00337A                     
  2243                           ; BSR set to: 0
  2244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2245   00337A  C09D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2246   00337E  C09E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2247   003382  EC91  F01E         	call	_read_prec_or_width	;wreg free
  2248   003386  C007  F15A         	movff	?_read_prec_or_width,_prec
  2249   00338A  C008  F15B         	movff	?_read_prec_or_width+1,_prec+1
  2250   00338E                     l4923:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2253   00338E  0100               	movlb	0	; () banked
  2254   003390  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2255   003392  6ED9               	movwf	fsr2l,c
  2256   003394  6ADA               	clrf	fsr2h,c
  2257   003396  50DF               	movf	indf2,w,c
  2258   003398  6FA6               	movwf	vfpfcnvrt@cp& (0+255),b
  2259   00339A                     
  2260                           ; BSR set to: 0
  2261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2262   00339A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2263   00339E                     	if	1	;There is more than 1 active tblptr byte
  2264   00339E  0E0E               	movlw	high __smallconst
  2265   0033A0  6EF7               	movwf	tblptrh,c
  2266   0033A2                     	endif
  2267   0033A2                     	if	0	;tblptru may be non-zero
  2268   0033A2                     	endif
  2269   0033A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2270   0033A2  0E00               	movlw	low (__smallconst shr (0+16))
  2271   0033A4  6EF8               	movwf	tblptru,c
  2272   0033A6                     	endif
  2273   0033A6  0008               	tblrd		*
  2274   0033A8  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2277   0033AC  EFE3  F019         	goto	l4935
  2278   0033B0                     l4927:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2282   0033B0  2BA6               	incf	vfpfcnvrt@cp& (0+255),f,b
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  2285   0033B2  EFFC  F019         	goto	l4937
  2286   0033B6                     l4929:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2290   0033B6  0E6C               	movlw	108
  2291   0033B8  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  2294   0033BA  EFFC  F019         	goto	l4937
  2295   0033BE                     l4931:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2299   0033BE  0E00               	movlw	0
  2300   0033C0  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  2303   0033C2  EFFC  F019         	goto	l4937
  2304   0033C6                     l4935:
  2305                           
  2306                           ; BSR set to: 0
  2307   0033C6  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2308   0033C8  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  2309   0033CA  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2310                           
  2311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2312                           ; Switch size 1, requested type "simple"
  2313                           ; Number of cases is 1, Range of values is 0 to 0
  2314                           ; switch strategies available:
  2315                           ; Name         Instructions Cycles
  2316                           ; simple_byte            4     3 (average)
  2317                           ;	Chosen strategy is simple_byte
  2318   0033CC  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2319   0033CE  0A00               	xorlw	0	; case 0
  2320   0033D0  B4D8               	btfsc	status,2,c
  2321   0033D2  EFED  F019         	goto	l5231
  2322   0033D6  EFDF  F019         	goto	l4931
  2323   0033DA                     l5231:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ; Switch size 1, requested type "simple"
  2327                           ; Number of cases is 3, Range of values is 76 to 108
  2328                           ; switch strategies available:
  2329                           ; Name         Instructions Cycles
  2330                           ; simple_byte           10     6 (average)
  2331                           ;	Chosen strategy is simple_byte
  2332   0033DA  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2333   0033DC  0A4C               	xorlw	76	; case 76
  2334   0033DE  B4D8               	btfsc	status,2,c
  2335   0033E0  EFD8  F019         	goto	l4927
  2336   0033E4  0A2A               	xorlw	42	; case 102
  2337   0033E6  B4D8               	btfsc	status,2,c
  2338   0033E8  EFDB  F019         	goto	l4929
  2339   0033EC  0A0A               	xorlw	10	; case 108
  2340   0033EE  B4D8               	btfsc	status,2,c
  2341   0033F0  EFD8  F019         	goto	l4927
  2342   0033F4  EFDF  F019         	goto	l4931
  2343   0033F8                     l4937:
  2344                           
  2345                           ; BSR set to: 0
  2346   0033F8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2347   0033FC                     	if	1	;There is more than 1 active tblptr byte
  2348   0033FC  0E0E               	movlw	high __smallconst
  2349   0033FE  6EF7               	movwf	tblptrh,c
  2350   003400                     	endif
  2351   003400                     	if	0	;tblptru may be non-zero
  2352   003400                     	endif
  2353   003400                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2354   003400  0E00               	movlw	low (__smallconst shr (0+16))
  2355   003402  6EF8               	movwf	tblptru,c
  2356   003404                     	endif
  2357   003404  0008               	tblrd		*
  2358   003406  50F5               	movf	tablat,w,c
  2359   003408  0A66               	xorlw	102
  2360   00340A  A4D8               	btfss	status,2,c
  2361   00340C  EF0A  F01A         	goto	u6121
  2362   003410  EF0C  F01A         	goto	u6120
  2363   003414                     u6121:
  2364   003414  EF81  F01A         	goto	l4957
  2365   003418                     u6120:
  2366   003418  EF36  F01A         	goto	l4945
  2367   00341C                     l4939:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2371   00341C  519E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2372   00341E  6ED9               	movwf	fsr2l,c
  2373   003420  6ADA               	clrf	fsr2h,c
  2374   003422  CFDF F09F          	movff	indf2,??_vfpfcnvrt
  2375   003426  0E04               	movlw	4
  2376   003428  26DF               	addwf	indf2,f,c
  2377   00342A  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2378   00342C  6ED9               	movwf	fsr2l,c
  2379   00342E  6ADA               	clrf	fsr2h,c
  2380   003430  CFDE F0A1          	movff	postinc2,vfpfcnvrt@convarg
  2381   003434  CFDE F0A2          	movff	postinc2,vfpfcnvrt@convarg+1
  2382   003438  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg+2
  2383   00343C  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+3
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  2386   003440  EF4B  F01A         	goto	l4947
  2387   003444                     l4941:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2391   003444  519E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2392   003446  6ED9               	movwf	fsr2l,c
  2393   003448  6ADA               	clrf	fsr2h,c
  2394   00344A  CFDF F09F          	movff	indf2,??_vfpfcnvrt
  2395   00344E  0E04               	movlw	4
  2396   003450  26DF               	addwf	indf2,f,c
  2397   003452  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2398   003454  6ED9               	movwf	fsr2l,c
  2399   003456  6ADA               	clrf	fsr2h,c
  2400   003458  CFDE F0A1          	movff	postinc2,vfpfcnvrt@convarg
  2401   00345C  CFDE F0A2          	movff	postinc2,vfpfcnvrt@convarg+1
  2402   003460  CFDE F0A3          	movff	postinc2,vfpfcnvrt@convarg+2
  2403   003464  CFDE F0A4          	movff	postinc2,vfpfcnvrt@convarg+3
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  2406   003468  EF4B  F01A         	goto	l4947
  2407   00346C                     l4945:
  2408                           
  2409                           ; BSR set to: 0
  2410   00346C  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2411   00346E  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  2412   003470  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2413                           
  2414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2415                           ; Switch size 1, requested type "simple"
  2416                           ; Number of cases is 1, Range of values is 0 to 0
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte            4     3 (average)
  2420                           ;	Chosen strategy is simple_byte
  2421   003472  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2422   003474  0A00               	xorlw	0	; case 0
  2423   003476  B4D8               	btfsc	status,2,c
  2424   003478  EF40  F01A         	goto	l5233
  2425   00347C  EF4B  F01A         	goto	l4947
  2426   003480                     l5233:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ; Switch size 1, requested type "simple"
  2430                           ; Number of cases is 2, Range of values is 76 to 108
  2431                           ; switch strategies available:
  2432                           ; Name         Instructions Cycles
  2433                           ; simple_byte            7     4 (average)
  2434                           ;	Chosen strategy is simple_byte
  2435   003480  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2436   003482  0A4C               	xorlw	76	; case 76
  2437   003484  B4D8               	btfsc	status,2,c
  2438   003486  EF22  F01A         	goto	l4941
  2439   00348A  0A20               	xorlw	32	; case 108
  2440   00348C  B4D8               	btfsc	status,2,c
  2441   00348E  EF0E  F01A         	goto	l4939
  2442   003492  EF4B  F01A         	goto	l4947
  2443   003496                     l4947:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2447   003496  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2448   003498  6ED9               	movwf	fsr2l,c
  2449   00349A  6ADA               	clrf	fsr2h,c
  2450   00349C  29A6               	incf	vfpfcnvrt@cp& (0+255),w,b
  2451   00349E  6EDF               	movwf	indf2,c
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2454   0034A0  EF69  F01A         	goto	l4955
  2455   0034A4                     l4949:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2459   0034A4  C09C  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2460   0034A8  C0A1  F06B         	movff	vfpfcnvrt@convarg,efgtoa@f
  2461   0034AC  C0A2  F06C         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2462   0034B0  C0A3  F06D         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2463   0034B4  C0A4  F06E         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2464   0034B8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2465   0034BC                     	if	1	;There is more than 1 active tblptr byte
  2466   0034BC  0E0E               	movlw	high __smallconst
  2467   0034BE  6EF7               	movwf	tblptrh,c
  2468   0034C0                     	endif
  2469   0034C0                     	if	0	;tblptru may be non-zero
  2470   0034C0                     	endif
  2471   0034C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2472   0034C0  0E00               	movlw	low (__smallconst shr (0+16))
  2473   0034C2  6EF8               	movwf	tblptru,c
  2474   0034C4                     	endif
  2475   0034C4  0008               	tblrd		*
  2476   0034C6  CFF5 F06F          	movff	tablat,efgtoa@c
  2477   0034CA  EC11  F007         	call	_efgtoa	;wreg free
  2478   0034CE  EF9B  F01A         	goto	l1066
  2479   0034D2                     l4955:
  2480                           
  2481                           ; BSR set to: 0
  2482   0034D2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2483   0034D6                     	if	1	;There is more than 1 active tblptr byte
  2484   0034D6  0E0E               	movlw	high __smallconst
  2485   0034D8  6EF7               	movwf	tblptrh,c
  2486   0034DA                     	endif
  2487   0034DA                     	if	0	;tblptru may be non-zero
  2488   0034DA                     	endif
  2489   0034DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2490   0034DA  0E00               	movlw	low (__smallconst shr (0+16))
  2491   0034DC  6EF8               	movwf	tblptru,c
  2492   0034DE                     	endif
  2493   0034DE  0008               	tblrd		*
  2494   0034E0  50F5               	movf	tablat,w,c
  2495   0034E2  6F9F               	movwf	??_vfpfcnvrt& (0+255),b
  2496   0034E4  6BA0               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2497                           
  2498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2499                           ; Switch size 1, requested type "simple"
  2500                           ; Number of cases is 1, Range of values is 0 to 0
  2501                           ; switch strategies available:
  2502                           ; Name         Instructions Cycles
  2503                           ; simple_byte            4     3 (average)
  2504                           ;	Chosen strategy is simple_byte
  2505   0034E6  51A0               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2506   0034E8  0A00               	xorlw	0	; case 0
  2507   0034EA  B4D8               	btfsc	status,2,c
  2508   0034EC  EF7A  F01A         	goto	l5235
  2509   0034F0  EF81  F01A         	goto	l4957
  2510   0034F4                     l5235:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 1, Range of values is 102 to 102
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte            4     3 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519   0034F4  519F               	movf	??_vfpfcnvrt& (0+255),w,b
  2520   0034F6  0A66               	xorlw	102	; case 102
  2521   0034F8  B4D8               	btfsc	status,2,c
  2522   0034FA  EF52  F01A         	goto	l4949
  2523   0034FE  EF81  F01A         	goto	l4957
  2524   003502                     l4957:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2527   003502  0100               	movlb	0	; () banked
  2528   003504  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2529   003506  6ED9               	movwf	fsr2l,c
  2530   003508  6ADA               	clrf	fsr2h,c
  2531   00350A  2ADF               	incf	indf2,f,c
  2532   00350C  EF9B  F01A         	goto	l1066
  2533   003510                     l4961:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2537   003510  519D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2538   003512  6ED9               	movwf	fsr2l,c
  2539   003514  6ADA               	clrf	fsr2h,c
  2540   003516  CFDF FFF6          	movff	indf2,tblptrl
  2541   00351A                     	if	1	;There is more than 1 active tblptr byte
  2542   00351A  0E0E               	movlw	high __smallconst
  2543   00351C  6EF7               	movwf	tblptrh,c
  2544   00351E                     	endif
  2545   00351E                     	if	0	;tblptru may be non-zero
  2546   00351E                     	endif
  2547   00351E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2548   00351E  0E00               	movlw	low (__smallconst shr (0+16))
  2549   003520  6EF8               	movwf	tblptru,c
  2550   003522                     	endif
  2551   003522  0008               	tblrd		*
  2552   003524  50F5               	movf	tablat,w,c
  2553   003526  6E01               	movwf	fputc@c^0,c
  2554   003528  6A02               	clrf	(fputc@c+1)^0,c
  2555   00352A  C09C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2556   00352E  ECE8  F01E         	call	_fputc	;wreg free
  2557   003532  EF81  F01A         	goto	l4957
  2558   003536                     l1066:
  2559   003536  0012               	return		;funcret
  2560   003538                     __end_of_vfpfcnvrt:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _read_prec_or_width *****************
  2564 ;; Defined at:
  2565 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2568 ;;		 -> vfprintf@cfmt(1), 
  2569 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2570 ;;		 -> sprintf@ap(1), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  c               1    8[COMRAM] unsigned char 
  2573 ;;  n               2    9[COMRAM] int 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2    6[COMRAM] int 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;Total ram usage:        5 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 1
  2590 ;; This function calls:
  2591 ;;		___wmul
  2592 ;; This function is called by:
  2593 ;;		_vfpfcnvrt
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text8
  2598   003D22                     __ptext8:
  2599                           	callstack 0
  2600   003D22                     _read_prec_or_width:
  2601                           	callstack 25
  2602   003D22                     
  2603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2604   003D22  0E00               	movlw	0
  2605   003D24  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2606   003D26  0E00               	movlw	0
  2607   003D28  6E0A               	movwf	read_prec_or_width@n^0,c
  2608   003D2A                     
  2609                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2610   003D2A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2611   003D2C  6ED9               	movwf	fsr2l,c
  2612   003D2E  6ADA               	clrf	fsr2h,c
  2613   003D30  CFDF FFF6          	movff	indf2,tblptrl
  2614   003D34                     	if	1	;There is more than 1 active tblptr byte
  2615   003D34  0E0E               	movlw	high __smallconst
  2616   003D36  6EF7               	movwf	tblptrh,c
  2617   003D38                     	endif
  2618   003D38                     	if	0	;tblptru may be non-zero
  2619   003D38                     	endif
  2620   003D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2621   003D38  0E00               	movlw	low (__smallconst shr (0+16))
  2622   003D3A  6EF8               	movwf	tblptru,c
  2623   003D3C                     	endif
  2624   003D3C  0008               	tblrd		*
  2625   003D3E  50F5               	movf	tablat,w,c
  2626   003D40  0A2A               	xorlw	42
  2627   003D42  A4D8               	btfss	status,2,c
  2628   003D44  EFA6  F01E         	goto	u6081
  2629   003D48  EFA8  F01E         	goto	u6080
  2630   003D4C                     u6081:
  2631   003D4C  EFCE  F01E         	goto	l4907
  2632   003D50                     u6080:
  2633   003D50                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2635   003D50  5007               	movf	read_prec_or_width@fmt^0,w,c
  2636   003D52  6ED9               	movwf	fsr2l,c
  2637   003D54  6ADA               	clrf	fsr2h,c
  2638   003D56  2ADF               	incf	indf2,f,c
  2639   003D58                     
  2640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2641   003D58  5008               	movf	read_prec_or_width@ap^0,w,c
  2642   003D5A  6ED9               	movwf	fsr2l,c
  2643   003D5C  6ADA               	clrf	fsr2h,c
  2644   003D5E  0E02               	movlw	2
  2645   003D60  26DF               	addwf	indf2,f,c
  2646   003D62  5CDF               	subwf	indf2,w,c
  2647   003D64  6ED9               	movwf	fsr2l,c
  2648   003D66  6ADA               	clrf	fsr2h,c
  2649   003D68  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2650   003D6C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2653   003D70  EFE3  F01E         	goto	l1042
  2654   003D74                     l4903:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2657   003D74  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2658   003D78  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2659   003D7C  0E00               	movlw	0
  2660   003D7E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2661   003D80  0E0A               	movlw	10
  2662   003D82  6E03               	movwf	___wmul@multiplicand^0,c
  2663   003D84  EC12  F022         	call	___wmul	;wreg free
  2664   003D88  5009               	movf	read_prec_or_width@c^0,w,c
  2665   003D8A  2401               	addwf	?___wmul^0,w,c
  2666   003D8C  6E0A               	movwf	read_prec_or_width@n^0,c
  2667   003D8E  0E00               	movlw	0
  2668   003D90  2002               	addwfc	(?___wmul+1)^0,w,c
  2669   003D92  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2670   003D94                     
  2671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2672   003D94  5007               	movf	read_prec_or_width@fmt^0,w,c
  2673   003D96  6ED9               	movwf	fsr2l,c
  2674   003D98  6ADA               	clrf	fsr2h,c
  2675   003D9A  2ADF               	incf	indf2,f,c
  2676   003D9C                     l4907:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2679   003D9C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2680   003D9E  6ED9               	movwf	fsr2l,c
  2681   003DA0  6ADA               	clrf	fsr2h,c
  2682   003DA2  CFDF FFF6          	movff	indf2,tblptrl
  2683   003DA6                     	if	1	;There is more than 1 active tblptr byte
  2684   003DA6  0E0E               	movlw	high __smallconst
  2685   003DA8  6EF7               	movwf	tblptrh,c
  2686   003DAA                     	endif
  2687   003DAA                     	if	0	;tblptru may be non-zero
  2688   003DAA                     	endif
  2689   003DAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2690   003DAA  0E00               	movlw	low (__smallconst shr (0+16))
  2691   003DAC  6EF8               	movwf	tblptru,c
  2692   003DAE                     	endif
  2693   003DAE  0008               	tblrd		*
  2694   003DB0  50F5               	movf	tablat,w,c
  2695   003DB2  0FD0               	addlw	208
  2696   003DB4  6E09               	movwf	read_prec_or_width@c^0,c
  2697   003DB6  0E09               	movlw	9
  2698   003DB8  6409               	cpfsgt	read_prec_or_width@c^0,c
  2699   003DBA  EFE1  F01E         	goto	u6091
  2700   003DBE  EFE3  F01E         	goto	u6090
  2701   003DC2                     u6091:
  2702   003DC2  EFBA  F01E         	goto	l4903
  2703   003DC6                     u6090:
  2704   003DC6                     l1042:
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2707   003DC6  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2708   003DCA  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2709   003DCE  0012               	return		;funcret
  2710   003DD0                     __end_of_read_prec_or_width:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function ___wmul *****************
  2714 ;; Defined at:
  2715 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  multiplier      2    0[COMRAM] unsigned int 
  2718 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  product         2    4[COMRAM] unsigned int 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[COMRAM] unsigned int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, prodl, prodh
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;Total ram usage:        6 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_read_prec_or_width
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text9
  2744   004424                     __ptext9:
  2745                           	callstack 0
  2746   004424                     ___wmul:
  2747                           	callstack 25
  2748   004424  5001               	movf	___wmul@multiplier^0,w,c
  2749   004426  0203               	mulwf	___wmul@multiplicand^0,c
  2750   004428  CFF3 F005          	movff	prodl,___wmul@product
  2751   00442C  CFF4 F006          	movff	prodh,___wmul@product+1
  2752   004430  5001               	movf	___wmul@multiplier^0,w,c
  2753   004432  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2754   004434  50F3               	movf	243,w,c
  2755   004436  2606               	addwf	(___wmul@product+1)^0,f,c
  2756   004438  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2757   00443A  0203               	mulwf	___wmul@multiplicand^0,c
  2758   00443C  50F3               	movf	243,w,c
  2759   00443E  2606               	addwf	(___wmul@product+1)^0,f,c
  2760   004440  C005  F001         	movff	___wmul@product,?___wmul
  2761   004444  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2762   004448  0012               	return		;funcret
  2763   00444A                     __end_of___wmul:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _efgtoa *****************
  2767 ;; Defined at:
  2768 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  2771 ;;		 -> sprintf@f(12), 
  2772 ;;  f               4   11[BANK0 ] PTR struct _IO_FILE
  2773 ;;  c               1   15[BANK0 ] unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  u               4   56[BANK0 ] struct flui
  2776 ;;  g               4   50[BANK0 ] struct flui
  2777 ;;  l               4   45[BANK0 ] struct flui
  2778 ;;  h               4   41[BANK0 ] struct flui
  2779 ;;  ou              4   35[BANK0 ] struct flui
  2780 ;;  n               2   54[BANK0 ] int 
  2781 ;;  i               2   39[BANK0 ] int 
  2782 ;;  w               2   33[BANK0 ] int 
  2783 ;;  e               2   31[BANK0 ] int 
  2784 ;;  m               2   29[BANK0 ] int 
  2785 ;;  d               2   27[BANK0 ] int 
  2786 ;;  t               2   20[BANK0 ] int 
  2787 ;;  p               2   18[BANK0 ] int 
  2788 ;;  ne              2   16[BANK0 ] int 
  2789 ;;  sign            1   49[BANK0 ] unsigned char 
  2790 ;;  nmode           1   26[BANK0 ] unsigned char 
  2791 ;;  mode            1   25[BANK0 ] unsigned char 
  2792 ;;  pp              1   24[BANK0 ] unsigned char 
  2793 ;;  esign           1    0        unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2803 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;Total ram usage:       52 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 4
  2810 ;; This function calls:
  2811 ;;		___fladd
  2812 ;;		___fldiv
  2813 ;;		___fleq
  2814 ;;		___flge
  2815 ;;		___flmul
  2816 ;;		___flneg
  2817 ;;		___flsub
  2818 ;;		___fltol
  2819 ;;		___fpclassifyf
  2820 ;;		_floorf
  2821 ;;		_labs
  2822 ;;		_memcpy
  2823 ;;		_pad
  2824 ;;		_strcpy
  2825 ;; This function is called by:
  2826 ;;		_vfpfcnvrt
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text10
  2831   000E22                     __ptext10:
  2832                           	callstack 0
  2833   000E22                     _efgtoa:
  2834                           	callstack 22
  2835   000E22                     
  2836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2837   000E22  0E00               	movlw	0
  2838   000E24  0100               	movlb	0	; () banked
  2839   000E26  6F91               	movwf	efgtoa@sign& (0+255),b
  2840   000E28                     
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2843   000E28  C06B  F092         	movff	efgtoa@f,efgtoa@g
  2844   000E2C  C06C  F093         	movff	efgtoa@f+1,efgtoa@g+1
  2845   000E30  C06D  F094         	movff	efgtoa@f+2,efgtoa@g+2
  2846   000E34  C06E  F095         	movff	efgtoa@f+3,efgtoa@g+3
  2847   000E38                     
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2850   000E38  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2851   000E3A  EF23  F007         	goto	u5760
  2852   000E3E  EF21  F007         	goto	u5761
  2853   000E42                     u5761:
  2854   000E42  EF37  F007         	goto	l4683
  2855   000E46                     u5760:
  2856   000E46                     
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2859   000E46  0E01               	movlw	1
  2860   000E48  6F91               	movwf	efgtoa@sign& (0+255),b
  2861   000E4A                     
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2864   000E4A  C092  F001         	movff	efgtoa@g,___flneg@f1
  2865   000E4E  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2866   000E52  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2867   000E56  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2868   000E5A  EC9E  F021         	call	___flneg	;wreg free
  2869   000E5E  C001  F092         	movff	?___flneg,efgtoa@g
  2870   000E62  C002  F093         	movff	?___flneg+1,efgtoa@g+1
  2871   000E66  C003  F094         	movff	?___flneg+2,efgtoa@g+2
  2872   000E6A  C004  F095         	movff	?___flneg+3,efgtoa@g+3
  2873   000E6E                     l4683:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2876   000E6E  0E00               	movlw	0
  2877   000E70  0100               	movlb	0	; () banked
  2878   000E72  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  2879   000E74  0E00               	movlw	0
  2880   000E76  6F96               	movwf	efgtoa@n& (0+255),b
  2881   000E78                     
  2882                           ; BSR set to: 0
  2883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2884   000E78  C158  F081         	movff	_width,efgtoa@w
  2885   000E7C  C159  F082         	movff	_width+1,efgtoa@w+1
  2886   000E80                     
  2887                           ; BSR set to: 0
  2888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2889   000E80  5191               	movf	efgtoa@sign& (0+255),w,b
  2890   000E82  B4D8               	btfsc	status,2,c
  2891   000E84  EF46  F007         	goto	u5771
  2892   000E88  EF48  F007         	goto	u5770
  2893   000E8C                     u5771:
  2894   000E8C  EF5C  F007         	goto	l4697
  2895   000E90                     u5770:
  2896   000E90                     
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2899   000E90  5191               	movf	efgtoa@sign& (0+255),w,b
  2900   000E92  A4D8               	btfss	status,2,c
  2901   000E94  EF4E  F007         	goto	u5781
  2902   000E98  EF50  F007         	goto	u5780
  2903   000E9C                     u5781:
  2904   000E9C  EF56  F007         	goto	l4693
  2905   000EA0                     u5780:
  2906   000EA0                     
  2907                           ; BSR set to: 0
  2908   000EA0  0E00               	movlw	0
  2909   000EA2  6F77               	movwf	(_efgtoa$1311+1)& (0+255),b
  2910   000EA4  0E2B               	movlw	43
  2911   000EA6  6F76               	movwf	_efgtoa$1311& (0+255),b
  2912   000EA8  EF5A  F007         	goto	l4695
  2913   000EAC                     l4693:
  2914                           
  2915                           ; BSR set to: 0
  2916   000EAC  0E00               	movlw	0
  2917   000EAE  6F77               	movwf	(_efgtoa$1311+1)& (0+255),b
  2918   000EB0  0E2D               	movlw	45
  2919   000EB2  6F76               	movwf	_efgtoa$1311& (0+255),b
  2920   000EB4                     l4695:
  2921                           
  2922                           ; BSR set to: 0
  2923   000EB4  C076  F091         	movff	_efgtoa$1311,efgtoa@sign
  2924   000EB8                     l4697:
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2928   000EB8  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  2929   000EBC  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2930   000EC0  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2931   000EC4  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2932   000EC8  EC12  F01E         	call	___fpclassifyf	;wreg free
  2933   000ECC  0401               	decf	?___fpclassifyf^0,w,c
  2934   000ECE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2935   000ED0  A4D8               	btfss	status,2,c
  2936   000ED2  EF6D  F007         	goto	u5791
  2937   000ED6  EF6F  F007         	goto	u5790
  2938   000EDA                     u5791:
  2939   000EDA  EF9E  F007         	goto	l4715
  2940   000EDE                     u5790:
  2941   000EDE                     
  2942                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2943   000EDE  0100               	movlb	0	; () banked
  2944   000EE0  5191               	movf	efgtoa@sign& (0+255),w,b
  2945   000EE2  B4D8               	btfsc	status,2,c
  2946   000EE4  EF76  F007         	goto	u5801
  2947   000EE8  EF78  F007         	goto	u5800
  2948   000EEC                     u5801:
  2949   000EEC  EF81  F007         	goto	l4707
  2950   000EF0                     u5800:
  2951   000EF0                     
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2954   000EF0  C091  F15F         	movff	efgtoa@sign,_dbuf
  2955   000EF4                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2958   000EF4  0781               	decf	efgtoa@w& (0+255),f,b
  2959   000EF6  A0D8               	btfss	status,0,c
  2960   000EF8  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  2961   000EFA                     
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2964   000EFA  0E00               	movlw	0
  2965   000EFC  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  2966   000EFE  0E01               	movlw	1
  2967   000F00  6F96               	movwf	efgtoa@n& (0+255),b
  2968   000F02                     l4707:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2972   000F02  0E5F               	movlw	low _dbuf
  2973   000F04  2596               	addwf	efgtoa@n& (0+255),w,b
  2974   000F06  6E01               	movwf	strcpy@dest^0,c
  2975   000F08  0E01               	movlw	high _dbuf
  2976   000F0A  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2977   000F0C  6E02               	movwf	(strcpy@dest+1)^0,c
  2978   000F0E  0E19               	movlw	low STR_2
  2979   000F10  6E03               	movwf	strcpy@src^0,c
  2980   000F12  EC63  F021         	call	_strcpy	;wreg free
  2981   000F16                     l4709:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2984   000F16  0100               	movlb	0	; () banked
  2985   000F18  0EFD               	movlw	253
  2986   000F1A  2781               	addwf	efgtoa@w& (0+255),f,b
  2987   000F1C  0EFF               	movlw	255
  2988   000F1E  2382               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2989   000F20                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2992   000F20  C06A  F00F         	movff	efgtoa@fp,pad@fp
  2993   000F24  0E5F               	movlw	low _dbuf
  2994   000F26  6E10               	movwf	pad@buf^0,c
  2995   000F28  0E01               	movlw	high _dbuf
  2996   000F2A  6E11               	movwf	(pad@buf+1)^0,c
  2997   000F2C  C081  F012         	movff	efgtoa@w,pad@p
  2998   000F30  C082  F013         	movff	efgtoa@w+1,pad@p+1
  2999   000F34  EC92  F01F         	call	_pad	;wreg free
  3000   000F38  EF06  F00C         	goto	l997
  3001   000F3C                     l4715:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3004   000F3C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  3005   000F40  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3006   000F44  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3007   000F48  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3008   000F4C  EC12  F01E         	call	___fpclassifyf	;wreg free
  3009   000F50  5001               	movf	?___fpclassifyf^0,w,c
  3010   000F52  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3011   000F54  A4D8               	btfss	status,2,c
  3012   000F56  EFAF  F007         	goto	u5811
  3013   000F5A  EFB1  F007         	goto	u5810
  3014   000F5E                     u5811:
  3015   000F5E  EFCF  F007         	goto	l4733
  3016   000F62                     u5810:
  3017   000F62                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3019   000F62  0100               	movlb	0	; () banked
  3020   000F64  5191               	movf	efgtoa@sign& (0+255),w,b
  3021   000F66  B4D8               	btfsc	status,2,c
  3022   000F68  EFB8  F007         	goto	u5821
  3023   000F6C  EFBA  F007         	goto	u5820
  3024   000F70                     u5821:
  3025   000F70  EFC3  F007         	goto	l4725
  3026   000F74                     u5820:
  3027   000F74                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3030   000F74  C091  F15F         	movff	efgtoa@sign,_dbuf
  3031   000F78                     
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  3034   000F78  0781               	decf	efgtoa@w& (0+255),f,b
  3035   000F7A  A0D8               	btfss	status,0,c
  3036   000F7C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3037   000F7E                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3040   000F7E  0E00               	movlw	0
  3041   000F80  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  3042   000F82  0E01               	movlw	1
  3043   000F84  6F96               	movwf	efgtoa@n& (0+255),b
  3044   000F86                     l4725:
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3048   000F86  0E5F               	movlw	low _dbuf
  3049   000F88  2596               	addwf	efgtoa@n& (0+255),w,b
  3050   000F8A  6E01               	movwf	strcpy@dest^0,c
  3051   000F8C  0E01               	movlw	high _dbuf
  3052   000F8E  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3053   000F90  6E02               	movwf	(strcpy@dest+1)^0,c
  3054   000F92  0E1D               	movlw	low STR_5
  3055   000F94  6E03               	movwf	strcpy@src^0,c
  3056   000F96  EC63  F021         	call	_strcpy	;wreg free
  3057   000F9A  EF8B  F007         	goto	l4709
  3058   000F9E                     l4733:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3061   000F9E  0E00               	movlw	0
  3062   000FA0  0100               	movlb	0	; () banked
  3063   000FA2  6F98               	movwf	efgtoa@u& (0+255),b
  3064   000FA4  0E00               	movlw	0
  3065   000FA6  6F99               	movwf	(efgtoa@u+1)& (0+255),b
  3066   000FA8  0E80               	movlw	128
  3067   000FAA  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
  3068   000FAC  0E3F               	movlw	63
  3069   000FAE  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3072   000FB0  0E00               	movlw	0
  3073   000FB2  6F80               	movwf	(efgtoa@e+1)& (0+255),b
  3074   000FB4  0E00               	movlw	0
  3075   000FB6  6F7F               	movwf	efgtoa@e& (0+255),b
  3076   000FB8                     
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3079   000FB8  C092  F001         	movff	efgtoa@g,___fleq@ff1
  3080   000FBC  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3081   000FC0  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3082   000FC4  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3083   000FC8  0E00               	movlw	0
  3084   000FCA  6E05               	movwf	___fleq@ff2^0,c
  3085   000FCC  0E00               	movlw	0
  3086   000FCE  6E06               	movwf	(___fleq@ff2+1)^0,c
  3087   000FD0  0E00               	movlw	0
  3088   000FD2  6E07               	movwf	(___fleq@ff2+2)^0,c
  3089   000FD4  0E00               	movlw	0
  3090   000FD6  6E08               	movwf	(___fleq@ff2+3)^0,c
  3091   000FD8  EC3D  F01F         	call	___fleq	;wreg free
  3092   000FDC  B0D8               	btfsc	status,0,c
  3093   000FDE  EFF3  F007         	goto	u5831
  3094   000FE2  EFF5  F007         	goto	u5830
  3095   000FE6                     u5831:
  3096   000FE6  EFD4  F008         	goto	l1000
  3097   000FEA                     u5830:
  3098   000FEA  EF02  F008         	goto	l4741
  3099   000FEE                     l1002:
  3100                           
  3101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3102   000FEE  C083  F098         	movff	efgtoa@ou,efgtoa@u
  3103   000FF2  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
  3104   000FF6  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
  3105   000FFA  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
  3106   000FFE                     
  3107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3108   000FFE  0100               	movlb	0	; () banked
  3109   001000  4B7F               	infsnz	efgtoa@e& (0+255),f,b
  3110   001002  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
  3111   001004                     l4741:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3114   001004  C098  F01A         	movff	efgtoa@u,___flmul@b
  3115   001008  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3116   00100C  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3117   001010  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3118   001014  0E00               	movlw	0
  3119   001016  6E1E               	movwf	___flmul@a^0,c
  3120   001018  0E00               	movlw	0
  3121   00101A  6E1F               	movwf	(___flmul@a+1)^0,c
  3122   00101C  0E20               	movlw	32
  3123   00101E  6E20               	movwf	(___flmul@a+2)^0,c
  3124   001020  0E41               	movlw	65
  3125   001022  6E21               	movwf	(___flmul@a+3)^0,c
  3126   001024  ECA2  F015         	call	___flmul	;wreg free
  3127   001028  C01A  F083         	movff	?___flmul,efgtoa@ou
  3128   00102C  C01B  F084         	movff	?___flmul+1,efgtoa@ou+1
  3129   001030  C01C  F085         	movff	?___flmul+2,efgtoa@ou+2
  3130   001034  C01D  F086         	movff	?___flmul+3,efgtoa@ou+3
  3131   001038  0100               	movlb	0	; () banked
  3132   00103A  5183               	movf	efgtoa@ou& (0+255),w,b
  3133   00103C  5D92               	subwf	efgtoa@g& (0+255),w,b
  3134   00103E  6E01               	movwf	labs@a^0,c
  3135   001040  5184               	movf	(efgtoa@ou+1)& (0+255),w,b
  3136   001042  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3137   001044  6E02               	movwf	(labs@a+1)^0,c
  3138   001046  5185               	movf	(efgtoa@ou+2)& (0+255),w,b
  3139   001048  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3140   00104A  6E03               	movwf	(labs@a+2)^0,c
  3141   00104C  5186               	movf	(efgtoa@ou+3)& (0+255),w,b
  3142   00104E  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3143   001050  6E04               	movwf	(labs@a+3)^0,c
  3144   001052  ECC5  F01F         	call	_labs	;wreg free
  3145   001056  BE04               	btfsc	(?_labs+3)^0,7,c
  3146   001058  EF39  F008         	goto	u5841
  3147   00105C  5004               	movf	(?_labs+3)^0,w,c
  3148   00105E  1003               	iorwf	(?_labs+2)^0,w,c
  3149   001060  1002               	iorwf	(?_labs+1)^0,w,c
  3150   001062  E109               	bnz	u5840
  3151   001064  0E02               	movlw	2
  3152   001066  5C01               	subwf	?_labs^0,w,c
  3153   001068  A0D8               	btfss	status,0,c
  3154   00106A  EF39  F008         	goto	u5841
  3155   00106E  EF3B  F008         	goto	u5840
  3156   001072                     u5841:
  3157   001072  EFF7  F007         	goto	l1002
  3158   001076                     u5840:
  3159   001076  C083  F033         	movff	efgtoa@ou,___flge@ff1
  3160   00107A  C084  F034         	movff	efgtoa@ou+1,___flge@ff1+1
  3161   00107E  C085  F035         	movff	efgtoa@ou+2,___flge@ff1+2
  3162   001082  C086  F036         	movff	efgtoa@ou+3,___flge@ff1+3
  3163   001086  C092  F037         	movff	efgtoa@g,___flge@ff2
  3164   00108A  C093  F038         	movff	efgtoa@g+1,___flge@ff2+1
  3165   00108E  C094  F039         	movff	efgtoa@g+2,___flge@ff2+2
  3166   001092  C095  F03A         	movff	efgtoa@g+3,___flge@ff2+3
  3167   001096  EC90  F01D         	call	___flge	;wreg free
  3168   00109A  A0D8               	btfss	status,0,c
  3169   00109C  EF52  F008         	goto	u5851
  3170   0010A0  EF54  F008         	goto	u5850
  3171   0010A4                     u5851:
  3172   0010A4  EFF7  F007         	goto	l1002
  3173   0010A8                     u5850:
  3174   0010A8                     
  3175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3176   0010A8  0100               	movlb	0	; () banked
  3177   0010AA  5198               	movf	efgtoa@u& (0+255),w,b
  3178   0010AC  5D92               	subwf	efgtoa@g& (0+255),w,b
  3179   0010AE  6E01               	movwf	labs@a^0,c
  3180   0010B0  5199               	movf	(efgtoa@u+1)& (0+255),w,b
  3181   0010B2  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3182   0010B4  6E02               	movwf	(labs@a+1)^0,c
  3183   0010B6  519A               	movf	(efgtoa@u+2)& (0+255),w,b
  3184   0010B8  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3185   0010BA  6E03               	movwf	(labs@a+2)^0,c
  3186   0010BC  519B               	movf	(efgtoa@u+3)& (0+255),w,b
  3187   0010BE  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3188   0010C0  6E04               	movwf	(labs@a+3)^0,c
  3189   0010C2  ECC5  F01F         	call	_labs	;wreg free
  3190   0010C6  BE04               	btfsc	(?_labs+3)^0,7,c
  3191   0010C8  EF73  F008         	goto	u5860
  3192   0010CC  5004               	movf	(?_labs+3)^0,w,c
  3193   0010CE  1003               	iorwf	(?_labs+2)^0,w,c
  3194   0010D0  1002               	iorwf	(?_labs+1)^0,w,c
  3195   0010D2  E107               	bnz	u5861
  3196   0010D4  0E02               	movlw	2
  3197   0010D6  5C01               	subwf	?_labs^0,w,c
  3198   0010D8  B0D8               	btfsc	status,0,c
  3199   0010DA  EF71  F008         	goto	u5861
  3200   0010DE  EF73  F008         	goto	u5860
  3201   0010E2                     u5861:
  3202   0010E2  EFBB  F008         	goto	l4759
  3203   0010E6                     u5860:
  3204   0010E6                     l4749:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3207   0010E6  C098  F092         	movff	efgtoa@u,efgtoa@g
  3208   0010EA  C099  F093         	movff	efgtoa@u+1,efgtoa@g+1
  3209   0010EE  C09A  F094         	movff	efgtoa@u+2,efgtoa@g+2
  3210   0010F2  C09B  F095         	movff	efgtoa@u+3,efgtoa@g+3
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  3213   0010F6  EFD4  F008         	goto	l1000
  3214   0010FA                     l4751:
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3217   0010FA  C098  F03B         	movff	efgtoa@u,___fldiv@b
  3218   0010FE  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  3219   001102  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  3220   001106  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  3221   00110A  0E00               	movlw	0
  3222   00110C  6E3F               	movwf	___fldiv@a^0,c
  3223   00110E  0E00               	movlw	0
  3224   001110  6E40               	movwf	(___fldiv@a+1)^0,c
  3225   001112  0E20               	movlw	32
  3226   001114  6E41               	movwf	(___fldiv@a+2)^0,c
  3227   001116  0E41               	movlw	65
  3228   001118  6E42               	movwf	(___fldiv@a+3)^0,c
  3229   00111A  ECB7  F017         	call	___fldiv	;wreg free
  3230   00111E  C03B  F098         	movff	?___fldiv,efgtoa@u
  3231   001122  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  3232   001126  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  3233   00112A  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  3234   00112E                     
  3235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  3236   00112E  0100               	movlb	0	; () banked
  3237   001130  077F               	decf	efgtoa@e& (0+255),f,b
  3238   001132  A0D8               	btfss	status,0,c
  3239   001134  0780               	decf	(efgtoa@e+1)& (0+255),f,b
  3240   001136                     
  3241                           ; BSR set to: 0
  3242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3243   001136  5198               	movf	efgtoa@u& (0+255),w,b
  3244   001138  5D92               	subwf	efgtoa@g& (0+255),w,b
  3245   00113A  6E01               	movwf	labs@a^0,c
  3246   00113C  5199               	movf	(efgtoa@u+1)& (0+255),w,b
  3247   00113E  5993               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3248   001140  6E02               	movwf	(labs@a+1)^0,c
  3249   001142  519A               	movf	(efgtoa@u+2)& (0+255),w,b
  3250   001144  5994               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3251   001146  6E03               	movwf	(labs@a+2)^0,c
  3252   001148  519B               	movf	(efgtoa@u+3)& (0+255),w,b
  3253   00114A  5995               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3254   00114C  6E04               	movwf	(labs@a+3)^0,c
  3255   00114E  ECC5  F01F         	call	_labs	;wreg free
  3256   001152  BE04               	btfsc	(?_labs+3)^0,7,c
  3257   001154  EFB9  F008         	goto	u5870
  3258   001158  5004               	movf	(?_labs+3)^0,w,c
  3259   00115A  1003               	iorwf	(?_labs+2)^0,w,c
  3260   00115C  1002               	iorwf	(?_labs+1)^0,w,c
  3261   00115E  E107               	bnz	u5871
  3262   001160  0E02               	movlw	2
  3263   001162  5C01               	subwf	?_labs^0,w,c
  3264   001164  B0D8               	btfsc	status,0,c
  3265   001166  EFB7  F008         	goto	u5871
  3266   00116A  EFB9  F008         	goto	u5870
  3267   00116E                     u5871:
  3268   00116E  EFBB  F008         	goto	l4759
  3269   001172                     u5870:
  3270   001172  EF73  F008         	goto	l4749
  3271   001176                     l4759:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3274   001176  C092  F033         	movff	efgtoa@g,___flge@ff1
  3275   00117A  C093  F034         	movff	efgtoa@g+1,___flge@ff1+1
  3276   00117E  C094  F035         	movff	efgtoa@g+2,___flge@ff1+2
  3277   001182  C095  F036         	movff	efgtoa@g+3,___flge@ff1+3
  3278   001186  C098  F037         	movff	efgtoa@u,___flge@ff2
  3279   00118A  C099  F038         	movff	efgtoa@u+1,___flge@ff2+1
  3280   00118E  C09A  F039         	movff	efgtoa@u+2,___flge@ff2+2
  3281   001192  C09B  F03A         	movff	efgtoa@u+3,___flge@ff2+3
  3282   001196  EC90  F01D         	call	___flge	;wreg free
  3283   00119A  A0D8               	btfss	status,0,c
  3284   00119C  EFD2  F008         	goto	u5881
  3285   0011A0  EFD4  F008         	goto	u5880
  3286   0011A4                     u5881:
  3287   0011A4  EF7D  F008         	goto	l4751
  3288   0011A8                     u5880:
  3289   0011A8                     l1000:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3292   0011A8  C06F  F079         	movff	efgtoa@c,efgtoa@mode
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3295   0011AC  C079  F07A         	movff	efgtoa@mode,efgtoa@nmode
  3296   0011B0                     
  3297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3298   0011B0  0101               	movlb	1	; () banked
  3299   0011B2  BF5B               	btfsc	(_prec+1)& (0+255),7,b
  3300   0011B4  EFDE  F008         	goto	u5891
  3301   0011B8  EFE0  F008         	goto	u5890
  3302   0011BC                     u5891:
  3303   0011BC  EFE6  F008         	goto	l4765
  3304   0011C0                     u5890:
  3305   0011C0                     
  3306                           ; BSR set to: 1
  3307   0011C0  C15A  F072         	movff	_prec,efgtoa@p
  3308   0011C4  C15B  F073         	movff	_prec+1,efgtoa@p+1
  3309   0011C8  EFEB  F008         	goto	l4767
  3310   0011CC                     l4765:
  3311                           
  3312                           ; BSR set to: 1
  3313   0011CC  0E00               	movlw	0
  3314   0011CE  0100               	movlb	0	; () banked
  3315   0011D0  6F73               	movwf	(efgtoa@p+1)& (0+255),b
  3316   0011D2  0E06               	movlw	6
  3317   0011D4  6F72               	movwf	efgtoa@p& (0+255),b
  3318   0011D6                     l4767:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3321   0011D6  C072  F07D         	movff	efgtoa@p,efgtoa@m
  3322   0011DA  C073  F07E         	movff	efgtoa@p+1,efgtoa@m+1
  3323   0011DE                     
  3324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3325   0011DE  0100               	movlb	0	; () banked
  3326   0011E0  4B7D               	infsnz	efgtoa@m& (0+255),f,b
  3327   0011E2  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
  3328   0011E4                     
  3329                           ; BSR set to: 0
  3330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3331   0011E4  0E66               	movlw	102
  3332   0011E6  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3333   0011E8  A4D8               	btfss	status,2,c
  3334   0011EA  EFF9  F008         	goto	u5901
  3335   0011EE  EFFB  F008         	goto	u5900
  3336   0011F2                     u5901:
  3337   0011F2  EF1B  F009         	goto	l4781
  3338   0011F6                     u5900:
  3339   0011F6                     
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3342   0011F6  BF80               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3343   0011F8  EF02  F009         	goto	u5910
  3344   0011FC  EF00  F009         	goto	u5911
  3345   001200                     u5911:
  3346   001200  EF0E  F009         	goto	l4777
  3347   001204                     u5910:
  3348   001204                     
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3351   001204  0E00               	movlw	0
  3352   001206  6F98               	movwf	efgtoa@u& (0+255),b
  3353   001208  0E00               	movlw	0
  3354   00120A  6F99               	movwf	(efgtoa@u+1)& (0+255),b
  3355   00120C  0E80               	movlw	128
  3356   00120E  6F9A               	movwf	(efgtoa@u+2)& (0+255),b
  3357   001210  0E3F               	movlw	63
  3358   001212  6F9B               	movwf	(efgtoa@u+3)& (0+255),b
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3361   001214  0E00               	movlw	0
  3362   001216  6F80               	movwf	(efgtoa@e+1)& (0+255),b
  3363   001218  0E00               	movlw	0
  3364   00121A  6F7F               	movwf	efgtoa@e& (0+255),b
  3365   00121C                     l4777:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3369   00121C  0E67               	movlw	103
  3370   00121E  1979               	xorwf	efgtoa@mode& (0+255),w,b
  3371   001220  B4D8               	btfsc	status,2,c
  3372   001222  EF15  F009         	goto	u5921
  3373   001226  EF17  F009         	goto	u5920
  3374   00122A                     u5921:
  3375   00122A  EF1B  F009         	goto	l4781
  3376   00122E                     u5920:
  3377   00122E                     
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3380   00122E  517F               	movf	efgtoa@e& (0+255),w,b
  3381   001230  277D               	addwf	efgtoa@m& (0+255),f,b
  3382   001232  5180               	movf	(efgtoa@e+1)& (0+255),w,b
  3383   001234  237E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3384   001236                     l4781:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3388   001236  0E00               	movlw	0
  3389   001238  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  3390   00123A  0E00               	movlw	0
  3391   00123C  6F87               	movwf	efgtoa@i& (0+255),b
  3392   00123E                     
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3395   00123E  C092  F089         	movff	efgtoa@g,efgtoa@h
  3396   001242  C093  F08A         	movff	efgtoa@g+1,efgtoa@h+1
  3397   001246  C094  F08B         	movff	efgtoa@g+2,efgtoa@h+2
  3398   00124A  C095  F08C         	movff	efgtoa@g+3,efgtoa@h+3
  3399   00124E                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3402   00124E  C098  F083         	movff	efgtoa@u,efgtoa@ou
  3403   001252  C099  F084         	movff	efgtoa@u+1,efgtoa@ou+1
  3404   001256  C09A  F085         	movff	efgtoa@u+2,efgtoa@ou+2
  3405   00125A  C09B  F086         	movff	efgtoa@u+3,efgtoa@ou+3
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3408   00125E  EFAC  F009         	goto	l4795
  3409   001262                     l4787:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3413   001262  C089  F03B         	movff	efgtoa@h,___fldiv@b
  3414   001266  C08A  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  3415   00126A  C08B  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  3416   00126E  C08C  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  3417   001272  C098  F03F         	movff	efgtoa@u,___fldiv@a
  3418   001276  C099  F040         	movff	efgtoa@u+1,___fldiv@a+1
  3419   00127A  C09A  F041         	movff	efgtoa@u+2,___fldiv@a+2
  3420   00127E  C09B  F042         	movff	efgtoa@u+3,___fldiv@a+3
  3421   001282  ECB7  F017         	call	___fldiv	;wreg free
  3422   001286  C03B  F054         	movff	?___fldiv,floorf@x
  3423   00128A  C03C  F055         	movff	?___fldiv+1,floorf@x+1
  3424   00128E  C03D  F056         	movff	?___fldiv+2,floorf@x+2
  3425   001292  C03E  F057         	movff	?___fldiv+3,floorf@x+3
  3426   001296  EC9C  F01A         	call	_floorf	;wreg free
  3427   00129A  C054  F08D         	movff	?_floorf,efgtoa@l
  3428   00129E  C055  F08E         	movff	?_floorf+1,efgtoa@l+1
  3429   0012A2  C056  F08F         	movff	?_floorf+2,efgtoa@l+2
  3430   0012A6  C057  F090         	movff	?_floorf+3,efgtoa@l+3
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3433   0012AA  C08D  F001         	movff	efgtoa@l,___fltol@f1
  3434   0012AE  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3435   0012B2  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3436   0012B6  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3437   0012BA  EC0D  F01D         	call	___fltol	;wreg free
  3438   0012BE  C001  F07B         	movff	?___fltol,efgtoa@d
  3439   0012C2  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
  3440   0012C6                     
  3441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3442   0012C6  C089  F033         	movff	efgtoa@h,___flsub@b
  3443   0012CA  C08A  F034         	movff	efgtoa@h+1,___flsub@b+1
  3444   0012CE  C08B  F035         	movff	efgtoa@h+2,___flsub@b+2
  3445   0012D2  C08C  F036         	movff	efgtoa@h+3,___flsub@b+3
  3446   0012D6  C08D  F01E         	movff	efgtoa@l,___flmul@a
  3447   0012DA  C08E  F01F         	movff	efgtoa@l+1,___flmul@a+1
  3448   0012DE  C08F  F020         	movff	efgtoa@l+2,___flmul@a+2
  3449   0012E2  C090  F021         	movff	efgtoa@l+3,___flmul@a+3
  3450   0012E6  C098  F01A         	movff	efgtoa@u,___flmul@b
  3451   0012EA  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3452   0012EE  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3453   0012F2  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3454   0012F6  ECA2  F015         	call	___flmul	;wreg free
  3455   0012FA  C01A  F037         	movff	?___flmul,___flsub@a
  3456   0012FE  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  3457   001302  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  3458   001306  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  3459   00130A  ECFF  F020         	call	___flsub	;wreg free
  3460   00130E  C033  F089         	movff	?___flsub,efgtoa@h
  3461   001312  C034  F08A         	movff	?___flsub+1,efgtoa@h+1
  3462   001316  C035  F08B         	movff	?___flsub+2,efgtoa@h+2
  3463   00131A  C036  F08C         	movff	?___flsub+3,efgtoa@h+3
  3464   00131E                     
  3465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3466   00131E  C098  F03B         	movff	efgtoa@u,___fldiv@b
  3467   001322  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  3468   001326  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  3469   00132A  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  3470   00132E  0E00               	movlw	0
  3471   001330  6E3F               	movwf	___fldiv@a^0,c
  3472   001332  0E00               	movlw	0
  3473   001334  6E40               	movwf	(___fldiv@a+1)^0,c
  3474   001336  0E20               	movlw	32
  3475   001338  6E41               	movwf	(___fldiv@a+2)^0,c
  3476   00133A  0E41               	movlw	65
  3477   00133C  6E42               	movwf	(___fldiv@a+3)^0,c
  3478   00133E  ECB7  F017         	call	___fldiv	;wreg free
  3479   001342  C03B  F098         	movff	?___fldiv,efgtoa@u
  3480   001346  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  3481   00134A  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  3482   00134E  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  3483   001352                     
  3484                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3485   001352  0100               	movlb	0	; () banked
  3486   001354  4B87               	infsnz	efgtoa@i& (0+255),f,b
  3487   001356  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
  3488   001358                     l4795:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3492   001358  517D               	movf	efgtoa@m& (0+255),w,b
  3493   00135A  5D87               	subwf	efgtoa@i& (0+255),w,b
  3494   00135C  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  3495   00135E  0A80               	xorlw	128
  3496   001360  6E5E               	movwf	??_efgtoa^0,c
  3497   001362  517E               	movf	(efgtoa@m+1)& (0+255),w,b
  3498   001364  0A80               	xorlw	128
  3499   001366  585E               	subwfb	??_efgtoa^0,w,c
  3500   001368  A0D8               	btfss	status,0,c
  3501   00136A  EFB9  F009         	goto	u5931
  3502   00136E  EFBB  F009         	goto	u5930
  3503   001372                     u5931:
  3504   001372  EF31  F009         	goto	l4787
  3505   001376                     u5930:
  3506   001376                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3509   001376  C098  F01A         	movff	efgtoa@u,___flmul@b
  3510   00137A  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3511   00137E  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3512   001382  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3513   001386  0E00               	movlw	0
  3514   001388  6E1E               	movwf	___flmul@a^0,c
  3515   00138A  0E00               	movlw	0
  3516   00138C  6E1F               	movwf	(___flmul@a+1)^0,c
  3517   00138E  0EA0               	movlw	160
  3518   001390  6E20               	movwf	(___flmul@a+2)^0,c
  3519   001392  0E40               	movlw	64
  3520   001394  6E21               	movwf	(___flmul@a+3)^0,c
  3521   001396  ECA2  F015         	call	___flmul	;wreg free
  3522   00139A  C01A  F08D         	movff	?___flmul,efgtoa@l
  3523   00139E  C01B  F08E         	movff	?___flmul+1,efgtoa@l+1
  3524   0013A2  C01C  F08F         	movff	?___flmul+2,efgtoa@l+2
  3525   0013A6  C01D  F090         	movff	?___flmul+3,efgtoa@l+3
  3526   0013AA                     
  3527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3528   0013AA  C089  F033         	movff	efgtoa@h,___flge@ff1
  3529   0013AE  C08A  F034         	movff	efgtoa@h+1,___flge@ff1+1
  3530   0013B2  C08B  F035         	movff	efgtoa@h+2,___flge@ff1+2
  3531   0013B6  C08C  F036         	movff	efgtoa@h+3,___flge@ff1+3
  3532   0013BA  C08D  F037         	movff	efgtoa@l,___flge@ff2
  3533   0013BE  C08E  F038         	movff	efgtoa@l+1,___flge@ff2+1
  3534   0013C2  C08F  F039         	movff	efgtoa@l+2,___flge@ff2+2
  3535   0013C6  C090  F03A         	movff	efgtoa@l+3,___flge@ff2+3
  3536   0013CA  EC90  F01D         	call	___flge	;wreg free
  3537   0013CE  B0D8               	btfsc	status,0,c
  3538   0013D0  EFEC  F009         	goto	u5941
  3539   0013D4  EFEE  F009         	goto	u5940
  3540   0013D8                     u5941:
  3541   0013D8  EFF9  F009         	goto	l4803
  3542   0013DC                     u5940:
  3543   0013DC                     
  3544                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3545   0013DC  0E00               	movlw	0
  3546   0013DE  0100               	movlb	0	; () banked
  3547   0013E0  6F8D               	movwf	efgtoa@l& (0+255),b
  3548   0013E2  0E00               	movlw	0
  3549   0013E4  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  3550   0013E6  0E00               	movlw	0
  3551   0013E8  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  3552   0013EA  0E00               	movlw	0
  3553   0013EC  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3556   0013EE  EF22  F00A         	goto	l4809
  3557   0013F2                     l4803:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3560   0013F2  C089  F001         	movff	efgtoa@h,___fleq@ff1
  3561   0013F6  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3562   0013FA  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3563   0013FE  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3564   001402  C08D  F005         	movff	efgtoa@l,___fleq@ff2
  3565   001406  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3566   00140A  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3567   00140E  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3568   001412  EC3D  F01F         	call	___fleq	;wreg free
  3569   001416  A0D8               	btfss	status,0,c
  3570   001418  EF10  F00A         	goto	u5951
  3571   00141C  EF12  F00A         	goto	u5950
  3572   001420                     u5951:
  3573   001420  EF22  F00A         	goto	l4809
  3574   001424                     u5950:
  3575   001424  0100               	movlb	0	; () banked
  3576   001426  B17B               	btfsc	efgtoa@d& (0+255),0,b
  3577   001428  EF18  F00A         	goto	u5961
  3578   00142C  EF1A  F00A         	goto	u5960
  3579   001430                     u5961:
  3580   001430  EF22  F00A         	goto	l4809
  3581   001434                     u5960:
  3582   001434                     
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3585   001434  0E00               	movlw	0
  3586   001436  6F8D               	movwf	efgtoa@l& (0+255),b
  3587   001438  0E00               	movlw	0
  3588   00143A  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  3589   00143C  0E00               	movlw	0
  3590   00143E  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  3591   001440  0E00               	movlw	0
  3592   001442  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  3593   001444                     l4809:
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3596   001444  C092  F001         	movff	efgtoa@g,___fladd@b
  3597   001448  C093  F002         	movff	efgtoa@g+1,___fladd@b+1
  3598   00144C  C094  F003         	movff	efgtoa@g+2,___fladd@b+2
  3599   001450  C095  F004         	movff	efgtoa@g+3,___fladd@b+3
  3600   001454  C08D  F005         	movff	efgtoa@l,___fladd@a
  3601   001458  C08E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3602   00145C  C08F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3603   001460  C090  F008         	movff	efgtoa@l+3,___fladd@a+3
  3604   001464  EC42  F013         	call	___fladd	;wreg free
  3605   001468  C001  F089         	movff	?___fladd,efgtoa@h
  3606   00146C  C002  F08A         	movff	?___fladd+1,efgtoa@h+1
  3607   001470  C003  F08B         	movff	?___fladd+2,efgtoa@h+2
  3608   001474  C004  F08C         	movff	?___fladd+3,efgtoa@h+3
  3609   001478                     
  3610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3611   001478  C089  F033         	movff	efgtoa@h,___flge@ff1
  3612   00147C  C08A  F034         	movff	efgtoa@h+1,___flge@ff1+1
  3613   001480  C08B  F035         	movff	efgtoa@h+2,___flge@ff1+2
  3614   001484  C08C  F036         	movff	efgtoa@h+3,___flge@ff1+3
  3615   001488  0E00               	movlw	0
  3616   00148A  6E1E               	movwf	___flmul@a^0,c
  3617   00148C  0E00               	movlw	0
  3618   00148E  6E1F               	movwf	(___flmul@a+1)^0,c
  3619   001490  0E20               	movlw	32
  3620   001492  6E20               	movwf	(___flmul@a+2)^0,c
  3621   001494  0E41               	movlw	65
  3622   001496  6E21               	movwf	(___flmul@a+3)^0,c
  3623   001498  C083  F01A         	movff	efgtoa@ou,___flmul@b
  3624   00149C  C084  F01B         	movff	efgtoa@ou+1,___flmul@b+1
  3625   0014A0  C085  F01C         	movff	efgtoa@ou+2,___flmul@b+2
  3626   0014A4  C086  F01D         	movff	efgtoa@ou+3,___flmul@b+3
  3627   0014A8  ECA2  F015         	call	___flmul	;wreg free
  3628   0014AC  C01A  F037         	movff	?___flmul,___flge@ff2
  3629   0014B0  C01B  F038         	movff	?___flmul+1,___flge@ff2+1
  3630   0014B4  C01C  F039         	movff	?___flmul+2,___flge@ff2+2
  3631   0014B8  C01D  F03A         	movff	?___flmul+3,___flge@ff2+3
  3632   0014BC  EC90  F01D         	call	___flge	;wreg free
  3633   0014C0  A0D8               	btfss	status,0,c
  3634   0014C2  EF65  F00A         	goto	u5971
  3635   0014C6  EF67  F00A         	goto	u5970
  3636   0014CA                     u5971:
  3637   0014CA  EF90  F00A         	goto	l4821
  3638   0014CE                     u5970:
  3639   0014CE                     
  3640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3641   0014CE  0100               	movlb	0	; () banked
  3642   0014D0  4B7F               	infsnz	efgtoa@e& (0+255),f,b
  3643   0014D2  2B80               	incf	(efgtoa@e+1)& (0+255),f,b
  3644   0014D4                     
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3647   0014D4  C083  F01A         	movff	efgtoa@ou,___flmul@b
  3648   0014D8  C084  F01B         	movff	efgtoa@ou+1,___flmul@b+1
  3649   0014DC  C085  F01C         	movff	efgtoa@ou+2,___flmul@b+2
  3650   0014E0  C086  F01D         	movff	efgtoa@ou+3,___flmul@b+3
  3651   0014E4  0E00               	movlw	0
  3652   0014E6  6E1E               	movwf	___flmul@a^0,c
  3653   0014E8  0E00               	movlw	0
  3654   0014EA  6E1F               	movwf	(___flmul@a+1)^0,c
  3655   0014EC  0E20               	movlw	32
  3656   0014EE  6E20               	movwf	(___flmul@a+2)^0,c
  3657   0014F0  0E41               	movlw	65
  3658   0014F2  6E21               	movwf	(___flmul@a+3)^0,c
  3659   0014F4  ECA2  F015         	call	___flmul	;wreg free
  3660   0014F8  C01A  F083         	movff	?___flmul,efgtoa@ou
  3661   0014FC  C01B  F084         	movff	?___flmul+1,efgtoa@ou+1
  3662   001500  C01C  F085         	movff	?___flmul+2,efgtoa@ou+2
  3663   001504  C01D  F086         	movff	?___flmul+3,efgtoa@ou+3
  3664   001508                     
  3665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3666   001508  0E66               	movlw	102
  3667   00150A  0100               	movlb	0	; () banked
  3668   00150C  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3669   00150E  A4D8               	btfss	status,2,c
  3670   001510  EF8C  F00A         	goto	u5981
  3671   001514  EF8E  F00A         	goto	u5980
  3672   001518                     u5981:
  3673   001518  EF90  F00A         	goto	l4821
  3674   00151C                     u5980:
  3675   00151C                     
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3678   00151C  4B7D               	infsnz	efgtoa@m& (0+255),f,b
  3679   00151E  2B7E               	incf	(efgtoa@m+1)& (0+255),f,b
  3680   001520                     l4821:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3683   001520  C083  F098         	movff	efgtoa@ou,efgtoa@u
  3684   001524  C084  F099         	movff	efgtoa@ou+1,efgtoa@u+1
  3685   001528  C085  F09A         	movff	efgtoa@ou+2,efgtoa@u+2
  3686   00152C  C086  F09B         	movff	efgtoa@ou+3,efgtoa@u+3
  3687   001530                     
  3688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3689   001530  C07F  F070         	movff	efgtoa@e,efgtoa@ne
  3690   001534  C080  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3691   001538                     
  3692                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3693   001538  0E00               	movlw	0
  3694   00153A  0100               	movlb	0	; () banked
  3695   00153C  6F78               	movwf	efgtoa@pp& (0+255),b
  3696   00153E                     
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3699   00153E  0E00               	movlw	0
  3700   001540  6F75               	movwf	(efgtoa@t+1)& (0+255),b
  3701   001542  0E00               	movlw	0
  3702   001544  6F74               	movwf	efgtoa@t& (0+255),b
  3703   001546                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3706   001546  0E00               	movlw	0
  3707   001548  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  3708   00154A  0E00               	movlw	0
  3709   00154C  6F87               	movwf	efgtoa@i& (0+255),b
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3712   00154E  EF8E  F00B         	goto	l4871
  3713   001552                     l4831:
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3717   001552  C089  F03B         	movff	efgtoa@h,___fldiv@b
  3718   001556  C08A  F03C         	movff	efgtoa@h+1,___fldiv@b+1
  3719   00155A  C08B  F03D         	movff	efgtoa@h+2,___fldiv@b+2
  3720   00155E  C08C  F03E         	movff	efgtoa@h+3,___fldiv@b+3
  3721   001562  C098  F03F         	movff	efgtoa@u,___fldiv@a
  3722   001566  C099  F040         	movff	efgtoa@u+1,___fldiv@a+1
  3723   00156A  C09A  F041         	movff	efgtoa@u+2,___fldiv@a+2
  3724   00156E  C09B  F042         	movff	efgtoa@u+3,___fldiv@a+3
  3725   001572  ECB7  F017         	call	___fldiv	;wreg free
  3726   001576  C03B  F054         	movff	?___fldiv,floorf@x
  3727   00157A  C03C  F055         	movff	?___fldiv+1,floorf@x+1
  3728   00157E  C03D  F056         	movff	?___fldiv+2,floorf@x+2
  3729   001582  C03E  F057         	movff	?___fldiv+3,floorf@x+3
  3730   001586  EC9C  F01A         	call	_floorf	;wreg free
  3731   00158A  C054  F08D         	movff	?_floorf,efgtoa@l
  3732   00158E  C055  F08E         	movff	?_floorf+1,efgtoa@l+1
  3733   001592  C056  F08F         	movff	?_floorf+2,efgtoa@l+2
  3734   001596  C057  F090         	movff	?_floorf+3,efgtoa@l+3
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3737   00159A  C08D  F001         	movff	efgtoa@l,___fltol@f1
  3738   00159E  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3739   0015A2  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3740   0015A6  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3741   0015AA  EC0D  F01D         	call	___fltol	;wreg free
  3742   0015AE  BE02               	btfsc	(?___fltol+1)^0,7,c
  3743   0015B0  EFE5  F00A         	goto	u5990
  3744   0015B4  5002               	movf	(?___fltol+1)^0,w,c
  3745   0015B6  E107               	bnz	u5991
  3746   0015B8  0E0A               	movlw	10
  3747   0015BA  5C01               	subwf	?___fltol^0,w,c
  3748   0015BC  B0D8               	btfsc	status,0,c
  3749   0015BE  EFE3  F00A         	goto	u5991
  3750   0015C2  EFE5  F00A         	goto	u5990
  3751   0015C6                     u5991:
  3752   0015C6  EFF5  F00A         	goto	l4835
  3753   0015CA                     u5990:
  3754   0015CA  C08D  F001         	movff	efgtoa@l,___fltol@f1
  3755   0015CE  C08E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3756   0015D2  C08F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3757   0015D6  C090  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3758   0015DA  EC0D  F01D         	call	___fltol	;wreg free
  3759   0015DE  C001  F07B         	movff	?___fltol,efgtoa@d
  3760   0015E2  C002  F07C         	movff	?___fltol+1,efgtoa@d+1
  3761   0015E6  EFFA  F00A         	goto	l1030
  3762   0015EA                     l4835:
  3763   0015EA  0E00               	movlw	0
  3764   0015EC  0100               	movlb	0	; () banked
  3765   0015EE  6F7C               	movwf	(efgtoa@d+1)& (0+255),b
  3766   0015F0  0E09               	movlw	9
  3767   0015F2  6F7B               	movwf	efgtoa@d& (0+255),b
  3768   0015F4                     l1030:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3771   0015F4  0100               	movlb	0	; () banked
  3772   0015F6  5178               	movf	efgtoa@pp& (0+255),w,b
  3773   0015F8  A4D8               	btfss	status,2,c
  3774   0015FA  EF01  F00B         	goto	u6001
  3775   0015FE  EF03  F00B         	goto	u6000
  3776   001602                     u6001:
  3777   001602  EF2B  F00B         	goto	l4855
  3778   001606                     u6000:
  3779   001606                     
  3780                           ; BSR set to: 0
  3781   001606  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3782   001608  EF0A  F00B         	goto	u6010
  3783   00160C  EF08  F00B         	goto	u6011
  3784   001610                     u6011:
  3785   001610  EF2B  F00B         	goto	l4855
  3786   001614                     u6010:
  3787   001614                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3790   001614  0E5F               	movlw	low _dbuf
  3791   001616  2596               	addwf	efgtoa@n& (0+255),w,b
  3792   001618  6ED9               	movwf	fsr2l,c
  3793   00161A  0E01               	movlw	high _dbuf
  3794   00161C  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3795   00161E  6EDA               	movwf	fsr2h,c
  3796   001620  0E2E               	movlw	46
  3797   001622  6EDF               	movwf	indf2,c
  3798   001624                     
  3799                           ; BSR set to: 0
  3800   001624  4B96               	infsnz	efgtoa@n& (0+255),f,b
  3801   001626  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  3802   001628                     
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3805   001628  0781               	decf	efgtoa@w& (0+255),f,b
  3806   00162A  A0D8               	btfss	status,0,c
  3807   00162C  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3808   00162E                     
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3811   00162E  0E01               	movlw	1
  3812   001630  6F78               	movwf	efgtoa@pp& (0+255),b
  3813   001632  EF2B  F00B         	goto	l4855
  3814   001636                     l4847:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3818   001636  0E5F               	movlw	low _dbuf
  3819   001638  2596               	addwf	efgtoa@n& (0+255),w,b
  3820   00163A  6ED9               	movwf	fsr2l,c
  3821   00163C  0E01               	movlw	high _dbuf
  3822   00163E  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3823   001640  6EDA               	movwf	fsr2h,c
  3824   001642  0E30               	movlw	48
  3825   001644  6EDF               	movwf	indf2,c
  3826   001646                     
  3827                           ; BSR set to: 0
  3828   001646  4B96               	infsnz	efgtoa@n& (0+255),f,b
  3829   001648  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  3830   00164A                     
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3833   00164A  0781               	decf	efgtoa@w& (0+255),f,b
  3834   00164C  A0D8               	btfss	status,0,c
  3835   00164E  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3836   001650                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3839   001650  0774               	decf	efgtoa@t& (0+255),f,b
  3840   001652  A0D8               	btfss	status,0,c
  3841   001654  0775               	decf	(efgtoa@t+1)& (0+255),f,b
  3842   001656                     l4855:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3846   001656  5174               	movf	efgtoa@t& (0+255),w,b
  3847   001658  1175               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3848   00165A  A4D8               	btfss	status,2,c
  3849   00165C  EF32  F00B         	goto	u6021
  3850   001660  EF34  F00B         	goto	u6020
  3851   001664                     u6021:
  3852   001664  EF1B  F00B         	goto	l4847
  3853   001668                     u6020:
  3854   001668                     
  3855                           ; BSR set to: 0
  3856                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3857   001668  0E5F               	movlw	low _dbuf
  3858   00166A  2596               	addwf	efgtoa@n& (0+255),w,b
  3859   00166C  6ED9               	movwf	fsr2l,c
  3860   00166E  0E01               	movlw	high _dbuf
  3861   001670  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3862   001672  6EDA               	movwf	fsr2h,c
  3863   001674  517B               	movf	efgtoa@d& (0+255),w,b
  3864   001676  0F30               	addlw	48
  3865   001678  6EDF               	movwf	indf2,c
  3866   00167A                     
  3867                           ; BSR set to: 0
  3868   00167A  4B96               	infsnz	efgtoa@n& (0+255),f,b
  3869   00167C  2B97               	incf	(efgtoa@n+1)& (0+255),f,b
  3870   00167E                     
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3873   00167E  0781               	decf	efgtoa@w& (0+255),f,b
  3874   001680  A0D8               	btfss	status,0,c
  3875   001682  0782               	decf	(efgtoa@w+1)& (0+255),f,b
  3876   001684                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3879   001684  C089  F033         	movff	efgtoa@h,___flsub@b
  3880   001688  C08A  F034         	movff	efgtoa@h+1,___flsub@b+1
  3881   00168C  C08B  F035         	movff	efgtoa@h+2,___flsub@b+2
  3882   001690  C08C  F036         	movff	efgtoa@h+3,___flsub@b+3
  3883   001694  C08D  F01E         	movff	efgtoa@l,___flmul@a
  3884   001698  C08E  F01F         	movff	efgtoa@l+1,___flmul@a+1
  3885   00169C  C08F  F020         	movff	efgtoa@l+2,___flmul@a+2
  3886   0016A0  C090  F021         	movff	efgtoa@l+3,___flmul@a+3
  3887   0016A4  C098  F01A         	movff	efgtoa@u,___flmul@b
  3888   0016A8  C099  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3889   0016AC  C09A  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3890   0016B0  C09B  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3891   0016B4  ECA2  F015         	call	___flmul	;wreg free
  3892   0016B8  C01A  F037         	movff	?___flmul,___flsub@a
  3893   0016BC  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  3894   0016C0  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  3895   0016C4  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  3896   0016C8  ECFF  F020         	call	___flsub	;wreg free
  3897   0016CC  C033  F089         	movff	?___flsub,efgtoa@h
  3898   0016D0  C034  F08A         	movff	?___flsub+1,efgtoa@h+1
  3899   0016D4  C035  F08B         	movff	?___flsub+2,efgtoa@h+2
  3900   0016D8  C036  F08C         	movff	?___flsub+3,efgtoa@h+3
  3901   0016DC                     
  3902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3903   0016DC  C098  F03B         	movff	efgtoa@u,___fldiv@b
  3904   0016E0  C099  F03C         	movff	efgtoa@u+1,___fldiv@b+1
  3905   0016E4  C09A  F03D         	movff	efgtoa@u+2,___fldiv@b+2
  3906   0016E8  C09B  F03E         	movff	efgtoa@u+3,___fldiv@b+3
  3907   0016EC  0E00               	movlw	0
  3908   0016EE  6E3F               	movwf	___fldiv@a^0,c
  3909   0016F0  0E00               	movlw	0
  3910   0016F2  6E40               	movwf	(___fldiv@a+1)^0,c
  3911   0016F4  0E20               	movlw	32
  3912   0016F6  6E41               	movwf	(___fldiv@a+2)^0,c
  3913   0016F8  0E41               	movlw	65
  3914   0016FA  6E42               	movwf	(___fldiv@a+3)^0,c
  3915   0016FC  ECB7  F017         	call	___fldiv	;wreg free
  3916   001700  C03B  F098         	movff	?___fldiv,efgtoa@u
  3917   001704  C03C  F099         	movff	?___fldiv+1,efgtoa@u+1
  3918   001708  C03D  F09A         	movff	?___fldiv+2,efgtoa@u+2
  3919   00170C  C03E  F09B         	movff	?___fldiv+3,efgtoa@u+3
  3920   001710                     
  3921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3922   001710  0100               	movlb	0	; () banked
  3923   001712  0770               	decf	efgtoa@ne& (0+255),f,b
  3924   001714  A0D8               	btfss	status,0,c
  3925   001716  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3926   001718                     
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3929   001718  4B87               	infsnz	efgtoa@i& (0+255),f,b
  3930   00171A  2B88               	incf	(efgtoa@i+1)& (0+255),f,b
  3931   00171C                     l4871:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3935   00171C  517D               	movf	efgtoa@m& (0+255),w,b
  3936   00171E  5D87               	subwf	efgtoa@i& (0+255),w,b
  3937   001720  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  3938   001722  0A80               	xorlw	128
  3939   001724  6E5E               	movwf	??_efgtoa^0,c
  3940   001726  517E               	movf	(efgtoa@m+1)& (0+255),w,b
  3941   001728  0A80               	xorlw	128
  3942   00172A  585E               	subwfb	??_efgtoa^0,w,c
  3943   00172C  B0D8               	btfsc	status,0,c
  3944   00172E  EF9B  F00B         	goto	u6031
  3945   001732  EF9D  F00B         	goto	u6030
  3946   001736                     u6031:
  3947   001736  EFAB  F00B         	goto	l4875
  3948   00173A                     u6030:
  3949   00173A                     
  3950                           ; BSR set to: 0
  3951   00173A  BF97               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3952   00173C  EFA9  F00B         	goto	u6041
  3953   001740  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  3954   001742  E109               	bnz	u6040
  3955   001744  0E4B               	movlw	75
  3956   001746  5D96               	subwf	efgtoa@n& (0+255),w,b
  3957   001748  A0D8               	btfss	status,0,c
  3958   00174A  EFA9  F00B         	goto	u6041
  3959   00174E  EFAB  F00B         	goto	u6040
  3960   001752                     u6041:
  3961   001752  EFA9  F00A         	goto	l4831
  3962   001756                     u6040:
  3963   001756                     l4875:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3967   001756  0E00               	movlw	0
  3968   001758  6F88               	movwf	(efgtoa@i+1)& (0+255),b
  3969   00175A  0E4F               	movlw	79
  3970   00175C  6F87               	movwf	efgtoa@i& (0+255),b
  3971   00175E                     
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3974   00175E  0E5F               	movlw	low _dbuf
  3975   001760  2587               	addwf	efgtoa@i& (0+255),w,b
  3976   001762  6ED9               	movwf	fsr2l,c
  3977   001764  0E01               	movlw	high _dbuf
  3978   001766  2188               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3979   001768  6EDA               	movwf	fsr2h,c
  3980   00176A  6ADF               	clrf	indf2,c
  3981   00176C                     
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3984   00176C  0E5F               	movlw	low _dbuf
  3985   00176E  6E5E               	movwf	??_efgtoa^0,c
  3986   001770  0E01               	movlw	high _dbuf
  3987   001772  6E5F               	movwf	(??_efgtoa+1)^0,c
  3988   001774  5196               	movf	efgtoa@n& (0+255),w,b
  3989   001776  5E5E               	subwf	??_efgtoa^0,f,c
  3990   001778  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  3991   00177A  5A5F               	subwfb	(??_efgtoa+1)^0,f,c
  3992   00177C  5187               	movf	efgtoa@i& (0+255),w,b
  3993   00177E  245E               	addwf	??_efgtoa^0,w,c
  3994   001780  6E01               	movwf	memcpy@d1^0,c
  3995   001782  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  3996   001784  205F               	addwfc	(??_efgtoa+1)^0,w,c
  3997   001786  6E02               	movwf	(memcpy@d1+1)^0,c
  3998   001788  0E5F               	movlw	low _dbuf
  3999   00178A  6E03               	movwf	memcpy@s1^0,c
  4000   00178C  0E01               	movlw	high _dbuf
  4001   00178E  6E04               	movwf	(memcpy@s1+1)^0,c
  4002   001790  C096  F005         	movff	efgtoa@n,memcpy@n
  4003   001794  C097  F006         	movff	efgtoa@n+1,memcpy@n+1
  4004   001798  ECF0  F01F         	call	_memcpy	;wreg free
  4005   00179C                     
  4006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4007   00179C  0100               	movlb	0	; () banked
  4008   00179E  5196               	movf	efgtoa@n& (0+255),w,b
  4009   0017A0  5D87               	subwf	efgtoa@i& (0+255),w,b
  4010   0017A2  6F96               	movwf	efgtoa@n& (0+255),b
  4011   0017A4  5197               	movf	(efgtoa@n+1)& (0+255),w,b
  4012   0017A6  5988               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4013   0017A8  6F97               	movwf	(efgtoa@n+1)& (0+255),b
  4014   0017AA                     
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4017   0017AA  5191               	movf	efgtoa@sign& (0+255),w,b
  4018   0017AC  A4D8               	btfss	status,2,c
  4019   0017AE  EFDB  F00B         	goto	u6051
  4020   0017B2  EFDE  F00B         	goto	u6050
  4021   0017B6                     u6051:
  4022   0017B6  0E01               	movlw	1
  4023   0017B8  EFDF  F00B         	goto	u6060
  4024   0017BC                     u6050:
  4025   0017BC  0E00               	movlw	0
  4026   0017BE                     u6060:
  4027   0017BE  6F87               	movwf	efgtoa@i& (0+255),b
  4028   0017C0  6B88               	clrf	(efgtoa@i+1)& (0+255),b
  4029   0017C2                     
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4032   0017C2  5191               	movf	efgtoa@sign& (0+255),w,b
  4033   0017C4  B4D8               	btfsc	status,2,c
  4034   0017C6  EFE7  F00B         	goto	u6071
  4035   0017CA  EFE9  F00B         	goto	u6070
  4036   0017CE                     u6071:
  4037   0017CE  EFF4  F00B         	goto	l4889
  4038   0017D2                     u6070:
  4039   0017D2                     
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4042   0017D2  0796               	decf	efgtoa@n& (0+255),f,b
  4043   0017D4  A0D8               	btfss	status,0,c
  4044   0017D6  0797               	decf	(efgtoa@n+1)& (0+255),f,b
  4045   0017D8  0E5F               	movlw	low _dbuf
  4046   0017DA  2596               	addwf	efgtoa@n& (0+255),w,b
  4047   0017DC  6ED9               	movwf	fsr2l,c
  4048   0017DE  0E01               	movlw	high _dbuf
  4049   0017E0  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4050   0017E2  6EDA               	movwf	fsr2h,c
  4051   0017E4  C091  FFDF         	movff	efgtoa@sign,indf2
  4052   0017E8                     l4889:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4056   0017E8  5187               	movf	efgtoa@i& (0+255),w,b
  4057   0017EA  5F81               	subwf	efgtoa@w& (0+255),f,b
  4058   0017EC  5188               	movf	(efgtoa@i+1)& (0+255),w,b
  4059   0017EE  5B82               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4060   0017F0                     
  4061                           ; BSR set to: 0
  4062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4063   0017F0  C06A  F00F         	movff	efgtoa@fp,pad@fp
  4064   0017F4  0E5F               	movlw	low _dbuf
  4065   0017F6  2596               	addwf	efgtoa@n& (0+255),w,b
  4066   0017F8  6E10               	movwf	pad@buf^0,c
  4067   0017FA  0E01               	movlw	high _dbuf
  4068   0017FC  2197               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4069   0017FE  6E11               	movwf	(pad@buf+1)^0,c
  4070   001800  C081  F012         	movff	efgtoa@w,pad@p
  4071   001804  C082  F013         	movff	efgtoa@w+1,pad@p+1
  4072   001808  EC92  F01F         	call	_pad	;wreg free
  4073   00180C                     l997:
  4074   00180C  0012               	return		;funcret
  4075   00180E                     __end_of_efgtoa:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _strcpy *****************
  4079 ;; Defined at:
  4080 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4083 ;;		 -> dbuf(80), 
  4084 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4085 ;;		 -> STR_5(4), STR_2(4), 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  d               2    4[COMRAM] PTR unsigned char 
  4088 ;;		 -> dbuf(80), 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  2    0[COMRAM] PTR unsigned char 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4098 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;Total ram usage:        6 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_efgtoa
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text11
  4112   0042C6                     __ptext11:
  4113                           	callstack 0
  4114   0042C6                     _strcpy:
  4115                           	callstack 25
  4116   0042C6  C001  F005         	movff	strcpy@dest,strcpy@d
  4117   0042CA  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4118   0042CE                     l4623:
  4119   0042CE  2A03               	incf	strcpy@src^0,f,c
  4120   0042D0  0403               	decf	strcpy@src^0,w,c
  4121   0042D2  6E04               	movwf	??_strcpy^0,c
  4122   0042D4  C004  FFF6         	movff	??_strcpy,tblptrl
  4123   0042D8                     	if	1	;There is more than 1 active tblptr byte
  4124   0042D8  0E0E               	movlw	high __smallconst
  4125   0042DA  6EF7               	movwf	tblptrh,c
  4126   0042DC                     	endif
  4127   0042DC                     	if	0	;tblptru may be non-zero
  4128   0042DC                     	endif
  4129   0042DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4130   0042DC  0E00               	movlw	low (__smallconst shr (0+16))
  4131   0042DE  6EF8               	movwf	tblptru,c
  4132   0042E0                     	endif
  4133   0042E0  C005  FFD9         	movff	strcpy@d,fsr2l
  4134   0042E4  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4135   0042E8  4A05               	infsnz	strcpy@d^0,f,c
  4136   0042EA  2A06               	incf	(strcpy@d+1)^0,f,c
  4137   0042EC  0008               	tblrd		*
  4138   0042EE  CFF5 FFDF          	movff	tablat,indf2
  4139   0042F2  50DF               	movf	indf2,w,c
  4140   0042F4  A4D8               	btfss	status,2,c
  4141   0042F6  EF7F  F021         	goto	u5631
  4142   0042FA  EF81  F021         	goto	u5630
  4143   0042FE                     u5631:
  4144   0042FE  EF67  F021         	goto	l4623
  4145   004302                     u5630:
  4146   004302  0012               	return		;funcret
  4147   004304                     __end_of_strcpy:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _pad *****************
  4151 ;; Defined at:
  4152 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4155 ;;		 -> sprintf@f(12), 
  4156 ;;  buf             2   15[COMRAM] PTR unsigned char 
  4157 ;;		 -> dbuf(80), 
  4158 ;;  p               2   17[COMRAM] int 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  i               2   20[COMRAM] int 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4170 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;Total ram usage:        8 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 3
  4177 ;; This function calls:
  4178 ;;		_fputc
  4179 ;;		_fputs
  4180 ;; This function is called by:
  4181 ;;		_efgtoa
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text12
  4186   003F24                     __ptext12:
  4187                           	callstack 0
  4188   003F24                     _pad:
  4189                           	callstack 22
  4190   003F24                     
  4191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4192   003F24  BE13               	btfsc	(pad@p+1)^0,7,c
  4193   003F26  EF99  F01F         	goto	u5540
  4194   003F2A  EF97  F01F         	goto	u5541
  4195   003F2E                     u5541:
  4196   003F2E  EF9D  F01F         	goto	l982
  4197   003F32                     u5540:
  4198   003F32                     
  4199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4200   003F32  0E00               	movlw	0
  4201   003F34  6E13               	movwf	(pad@p+1)^0,c
  4202   003F36  0E00               	movlw	0
  4203   003F38  6E12               	movwf	pad@p^0,c
  4204   003F3A                     l982:
  4205                           
  4206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4207   003F3A  0E00               	movlw	0
  4208   003F3C  6E16               	movwf	(pad@i+1)^0,c
  4209   003F3E  0E00               	movlw	0
  4210   003F40  6E15               	movwf	pad@i^0,c
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4213   003F42  EFAD  F01F         	goto	l4595
  4214   003F46                     l4591:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4217   003F46  0E00               	movlw	0
  4218   003F48  6E02               	movwf	(fputc@c+1)^0,c
  4219   003F4A  0E20               	movlw	32
  4220   003F4C  6E01               	movwf	fputc@c^0,c
  4221   003F4E  C00F  F003         	movff	pad@fp,fputc@fp
  4222   003F52  ECE8  F01E         	call	_fputc	;wreg free
  4223   003F56                     
  4224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4225   003F56  4A15               	infsnz	pad@i^0,f,c
  4226   003F58  2A16               	incf	(pad@i+1)^0,f,c
  4227   003F5A                     l4595:
  4228                           
  4229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4230   003F5A  5012               	movf	pad@p^0,w,c
  4231   003F5C  5C15               	subwf	pad@i^0,w,c
  4232   003F5E  5016               	movf	(pad@i+1)^0,w,c
  4233   003F60  0A80               	xorlw	128
  4234   003F62  6E14               	movwf	??_pad^0,c
  4235   003F64  5013               	movf	(pad@p+1)^0,w,c
  4236   003F66  0A80               	xorlw	128
  4237   003F68  5814               	subwfb	??_pad^0,w,c
  4238   003F6A  A0D8               	btfss	status,0,c
  4239   003F6C  EFBA  F01F         	goto	u5551
  4240   003F70  EFBC  F01F         	goto	u5550
  4241   003F74                     u5551:
  4242   003F74  EFA3  F01F         	goto	l4591
  4243   003F78                     u5550:
  4244   003F78                     
  4245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4246   003F78  C010  F009         	movff	pad@buf,fputs@s
  4247   003F7C  C011  F00A         	movff	pad@buf+1,fputs@s+1
  4248   003F80  C00F  F00B         	movff	pad@fp,fputs@fp
  4249   003F84  EC43  F021         	call	_fputs	;wreg free
  4250   003F88  0012               	return		;funcret
  4251   003F8A                     __end_of_pad:
  4252                           	callstack 0
  4253                           
  4254 ;; *************** function _fputs *****************
  4255 ;; Defined at:
  4256 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4259 ;;		 -> dbuf(80), 
  4260 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4261 ;;		 -> sprintf@f(12), 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  i               2   12[COMRAM] int 
  4264 ;;  c               1   11[COMRAM] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2    8[COMRAM] int 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4274 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4275 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;Total ram usage:        6 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 2
  4281 ;; This function calls:
  4282 ;;		_fputc
  4283 ;; This function is called by:
  4284 ;;		_pad
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text13
  4289   004286                     __ptext13:
  4290                           	callstack 0
  4291   004286                     _fputs:
  4292                           	callstack 22
  4293   004286  0E00               	movlw	0
  4294   004288  6E0E               	movwf	(fputs@i+1)^0,c
  4295   00428A  0E00               	movlw	0
  4296   00428C  6E0D               	movwf	fputs@i^0,c
  4297   00428E  EF52  F021         	goto	l4215
  4298   004292                     l4211:
  4299   004292  C00C  F001         	movff	fputs@c,fputc@c
  4300   004296  6A02               	clrf	(fputc@c+1)^0,c
  4301   004298  C00B  F003         	movff	fputs@fp,fputc@fp
  4302   00429C  ECE8  F01E         	call	_fputc	;wreg free
  4303   0042A0  4A0D               	infsnz	fputs@i^0,f,c
  4304   0042A2  2A0E               	incf	(fputs@i+1)^0,f,c
  4305   0042A4                     l4215:
  4306   0042A4  500D               	movf	fputs@i^0,w,c
  4307   0042A6  2409               	addwf	fputs@s^0,w,c
  4308   0042A8  6ED9               	movwf	fsr2l,c
  4309   0042AA  500E               	movf	(fputs@i+1)^0,w,c
  4310   0042AC  200A               	addwfc	(fputs@s+1)^0,w,c
  4311   0042AE  6EDA               	movwf	fsr2h,c
  4312   0042B0  50DF               	movf	indf2,w,c
  4313   0042B2  6E0C               	movwf	fputs@c^0,c
  4314   0042B4  500C               	movf	fputs@c^0,w,c
  4315   0042B6  A4D8               	btfss	status,2,c
  4316   0042B8  EF60  F021         	goto	u4951
  4317   0042BC  EF62  F021         	goto	u4950
  4318   0042C0                     u4951:
  4319   0042C0  EF49  F021         	goto	l4211
  4320   0042C4                     u4950:
  4321   0042C4  0012               	return		;funcret
  4322   0042C6                     __end_of_fputs:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _fputc *****************
  4326 ;; Defined at:
  4327 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  c               2    0[COMRAM] int 
  4330 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4331 ;;		 -> sprintf@f(12), 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2    0[COMRAM] int 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4343 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;Total ram usage:        8 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 1
  4350 ;; This function calls:
  4351 ;;		_putch
  4352 ;; This function is called by:
  4353 ;;		_pad
  4354 ;;		_vfpfcnvrt
  4355 ;;		_fputs
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text14
  4360   003DD0                     __ptext14:
  4361                           	callstack 0
  4362   003DD0                     _fputc:
  4363                           	callstack 25
  4364   003DD0  5003               	movf	fputc@fp^0,w,c
  4365   003DD2  B4D8               	btfsc	status,2,c
  4366   003DD4  EFEE  F01E         	goto	u4521
  4367   003DD8  EFF0  F01E         	goto	u4520
  4368   003DDC                     u4521:
  4369   003DDC  EFF8  F01E         	goto	l3997
  4370   003DE0                     u4520:
  4371   003DE0  5003               	movf	fputc@fp^0,w,c
  4372   003DE2  A4D8               	btfss	status,2,c
  4373   003DE4  EFF6  F01E         	goto	u4531
  4374   003DE8  EFF8  F01E         	goto	u4530
  4375   003DEC                     u4531:
  4376   003DEC  EFFD  F01E         	goto	l3999
  4377   003DF0                     u4530:
  4378   003DF0                     l3997:
  4379   003DF0  5001               	movf	fputc@c^0,w,c
  4380   003DF2  EC69  F022         	call	_putch
  4381   003DF6  EF3C  F01F         	goto	l1122
  4382   003DFA                     l3999:
  4383   003DFA  5003               	movf	fputc@fp^0,w,c
  4384   003DFC  6ED9               	movwf	fsr2l,c
  4385   003DFE  6ADA               	clrf	fsr2h,c
  4386   003E00  0E0A               	movlw	10
  4387   003E02  26D9               	addwf	fsr2l,f,c
  4388   003E04  50DE               	movf	postinc2,w,c
  4389   003E06  10DE               	iorwf	postinc2,w,c
  4390   003E08  B4D8               	btfsc	status,2,c
  4391   003E0A  EF09  F01F         	goto	u4541
  4392   003E0E  EF0B  F01F         	goto	u4540
  4393   003E12                     u4541:
  4394   003E12  EF24  F01F         	goto	l4003
  4395   003E16                     u4540:
  4396   003E16  5003               	movf	fputc@fp^0,w,c
  4397   003E18  6ED9               	movwf	fsr2l,c
  4398   003E1A  6ADA               	clrf	fsr2h,c
  4399   003E1C  0E0A               	movlw	10
  4400   003E1E  26D9               	addwf	fsr2l,f,c
  4401   003E20  5003               	movf	fputc@fp^0,w,c
  4402   003E22  6EE1               	movwf	fsr1l,c
  4403   003E24  6AE2               	clrf	fsr1h,c
  4404   003E26  0E03               	movlw	3
  4405   003E28  26E1               	addwf	fsr1l,f,c
  4406   003E2A  50DE               	movf	postinc2,w,c
  4407   003E2C  5CE6               	subwf	postinc1,w,c
  4408   003E2E  50E6               	movf	postinc1,w,c
  4409   003E30  0A80               	xorlw	128
  4410   003E32  6E08               	movwf	(??_fputc+4)^0,c
  4411   003E34  50DE               	movf	postinc2,w,c
  4412   003E36  0A80               	xorlw	128
  4413   003E38  5808               	subwfb	(??_fputc+4)^0,w,c
  4414   003E3A  B0D8               	btfsc	status,0,c
  4415   003E3C  EF22  F01F         	goto	u4551
  4416   003E40  EF24  F01F         	goto	u4550
  4417   003E44                     u4551:
  4418   003E44  EF3C  F01F         	goto	l1122
  4419   003E48                     u4550:
  4420   003E48                     l4003:
  4421   003E48  5003               	movf	fputc@fp^0,w,c
  4422   003E4A  6ED9               	movwf	fsr2l,c
  4423   003E4C  6ADA               	clrf	fsr2h,c
  4424   003E4E  0E03               	movlw	3
  4425   003E50  26D9               	addwf	fsr2l,f,c
  4426   003E52  50DF               	movf	indf2,w,c
  4427   003E54  6E04               	movwf	??_fputc^0,c
  4428   003E56  5003               	movf	fputc@fp^0,w,c
  4429   003E58  6ED9               	movwf	fsr2l,c
  4430   003E5A  6ADA               	clrf	fsr2h,c
  4431   003E5C  50DF               	movf	indf2,w,c
  4432   003E5E  2404               	addwf	??_fputc^0,w,c
  4433   003E60  6ED9               	movwf	fsr2l,c
  4434   003E62  6ADA               	clrf	fsr2h,c
  4435   003E64  C001  FFDF         	movff	fputc@c,indf2
  4436   003E68  5003               	movf	fputc@fp^0,w,c
  4437   003E6A  6ED9               	movwf	fsr2l,c
  4438   003E6C  6ADA               	clrf	fsr2h,c
  4439   003E6E  0E03               	movlw	3
  4440   003E70  26D9               	addwf	fsr2l,f,c
  4441   003E72  2ADE               	incf	postinc2,f,c
  4442   003E74  0E00               	movlw	0
  4443   003E76  22DD               	addwfc	postdec2,f,c
  4444   003E78                     l1122:
  4445   003E78  0012               	return		;funcret
  4446   003E7A                     __end_of_fputc:
  4447                           	callstack 0
  4448                           
  4449 ;; *************** function _putch *****************
  4450 ;; Defined at:
  4451 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  c               1    wreg     unsigned char 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  c               1    0[COMRAM] unsigned char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_fputc
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text15
  4479   0044D2                     __ptext15:
  4480                           	callstack 0
  4481   0044D2                     _putch:
  4482                           	callstack 25
  4483   0044D2  0012               	return		;funcret
  4484   0044D4                     __end_of_putch:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _memcpy *****************
  4488 ;; Defined at:
  4489 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  d1              2    0[COMRAM] PTR void 
  4492 ;;		 -> dbuf(80), 
  4493 ;;  s1              2    2[COMRAM] PTR const void 
  4494 ;;		 -> dbuf(80), 
  4495 ;;  n               2    4[COMRAM] unsigned int 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4498 ;;		 -> dbuf(80), 
  4499 ;;  d               2    7[COMRAM] PTR unsigned char 
  4500 ;;		 -> dbuf(80), 
  4501 ;;  tmp             1    6[COMRAM] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2    0[COMRAM] PTR void 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4511 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4512 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4514 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4515 ;;Total ram usage:       11 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_efgtoa
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text16
  4525   003FE0                     __ptext16:
  4526                           	callstack 0
  4527   003FE0                     _memcpy:
  4528                           	callstack 25
  4529   003FE0  C003  F00A         	movff	memcpy@s1,memcpy@s
  4530   003FE4  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4531   003FE8  C001  F008         	movff	memcpy@d1,memcpy@d
  4532   003FEC  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4533   003FF0  EF0A  F020         	goto	l4671
  4534   003FF4                     l4663:
  4535   003FF4  C00A  FFD9         	movff	memcpy@s,fsr2l
  4536   003FF8  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4537   003FFC  50DF               	movf	indf2,w,c
  4538   003FFE  6E07               	movwf	memcpy@tmp^0,c
  4539   004000  4A0A               	infsnz	memcpy@s^0,f,c
  4540   004002  2A0B               	incf	(memcpy@s+1)^0,f,c
  4541   004004  C008  FFD9         	movff	memcpy@d,fsr2l
  4542   004008  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4543   00400C  C007  FFDF         	movff	memcpy@tmp,indf2
  4544   004010  4A08               	infsnz	memcpy@d^0,f,c
  4545   004012  2A09               	incf	(memcpy@d+1)^0,f,c
  4546   004014                     l4671:
  4547   004014  0605               	decf	memcpy@n^0,f,c
  4548   004016  A0D8               	btfss	status,0,c
  4549   004018  0606               	decf	(memcpy@n+1)^0,f,c
  4550   00401A  2805               	incf	memcpy@n^0,w,c
  4551   00401C  E106               	bnz	u5751
  4552   00401E  2806               	incf	(memcpy@n+1)^0,w,c
  4553   004020  A4D8               	btfss	status,2,c
  4554   004022  EF15  F020         	goto	u5751
  4555   004026  EF17  F020         	goto	u5750
  4556   00402A                     u5751:
  4557   00402A  EFFA  F01F         	goto	l4663
  4558   00402E                     u5750:
  4559   00402E  0012               	return		;funcret
  4560   004030                     __end_of_memcpy:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _labs *****************
  4564 ;; Defined at:
  4565 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  a               4    0[COMRAM] long 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  4    0[COMRAM] long 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;Total ram usage:        8 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_efgtoa
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text17
  4593   003F8A                     __ptext17:
  4594                           	callstack 0
  4595   003F8A                     _labs:
  4596                           	callstack 25
  4597   003F8A  BE04               	btfsc	(labs@a+3)^0,7,c
  4598   003F8C  EFCA  F01F         	goto	u5641
  4599   003F90  EFCC  F01F         	goto	u5640
  4600   003F94                     u5641:
  4601   003F94  EFD6  F01F         	goto	l4629
  4602   003F98                     u5640:
  4603   003F98  C001  F001         	movff	labs@a,?_labs
  4604   003F9C  C002  F002         	movff	labs@a+1,?_labs+1
  4605   003FA0  C003  F003         	movff	labs@a+2,?_labs+2
  4606   003FA4  C004  F004         	movff	labs@a+3,?_labs+3
  4607   003FA8  EFEF  F01F         	goto	l1104
  4608   003FAC                     l4629:
  4609   003FAC  C001  F005         	movff	labs@a,??_labs
  4610   003FB0  C002  F006         	movff	labs@a+1,??_labs+1
  4611   003FB4  C003  F007         	movff	labs@a+2,??_labs+2
  4612   003FB8  C004  F008         	movff	labs@a+3,??_labs+3
  4613   003FBC  1E05               	comf	??_labs^0,f,c
  4614   003FBE  1E06               	comf	(??_labs+1)^0,f,c
  4615   003FC0  1E07               	comf	(??_labs+2)^0,f,c
  4616   003FC2  1E08               	comf	(??_labs+3)^0,f,c
  4617   003FC4  2A05               	incf	??_labs^0,f,c
  4618   003FC6  0E00               	movlw	0
  4619   003FC8  2206               	addwfc	(??_labs+1)^0,f,c
  4620   003FCA  2207               	addwfc	(??_labs+2)^0,f,c
  4621   003FCC  2208               	addwfc	(??_labs+3)^0,f,c
  4622   003FCE  C005  F001         	movff	??_labs,?_labs
  4623   003FD2  C006  F002         	movff	??_labs+1,?_labs+1
  4624   003FD6  C007  F003         	movff	??_labs+2,?_labs+2
  4625   003FDA  C008  F004         	movff	??_labs+3,?_labs+3
  4626   003FDE                     l1104:
  4627   003FDE  0012               	return		;funcret
  4628   003FE0                     __end_of_labs:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _floorf *****************
  4632 ;; Defined at:
  4633 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  x               4   83[COMRAM] float 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  u               4    6[BANK0 ] struct .
  4638 ;;  m               4    0[BANK0 ] unsigned long 
  4639 ;;  e               2    4[BANK0 ] int 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  4   83[COMRAM] float 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4653 ;;Total ram usage:       20 bytes
  4654 ;; Hardware stack levels used: 1
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_efgtoa
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text18
  4663   003538                     __ptext18:
  4664                           	callstack 0
  4665   003538                     _floorf:
  4666                           	callstack 25
  4667   003538  C150  F066         	movff	floorf@F521,floorf@u
  4668   00353C  C151  F067         	movff	floorf@F521+1,floorf@u+1
  4669   003540  C152  F068         	movff	floorf@F521+2,floorf@u+2
  4670   003544  C153  F069         	movff	floorf@F521+3,floorf@u+3
  4671   003548  C054  F066         	movff	floorf@x,floorf@u
  4672   00354C  C055  F067         	movff	floorf@x+1,floorf@u+1
  4673   003550  C056  F068         	movff	floorf@x+2,floorf@u+2
  4674   003554  C057  F069         	movff	floorf@x+3,floorf@u+3
  4675   003558  0E81               	movlw	129
  4676   00355A  6E58               	movwf	??_floorf^0,c
  4677   00355C  0EFF               	movlw	255
  4678   00355E  6E59               	movwf	(??_floorf+1)^0,c
  4679   003560  C066  F05A         	movff	floorf@u,??_floorf+2
  4680   003564  C067  F05B         	movff	floorf@u+1,??_floorf+3
  4681   003568  C068  F05C         	movff	floorf@u+2,??_floorf+4
  4682   00356C  C069  F05D         	movff	floorf@u+3,??_floorf+5
  4683   003570  0E18               	movlw	24
  4684   003572  EFC0  F01A         	goto	u5650
  4685   003576                     u5655:
  4686   003576  90D8               	bcf	status,0,c
  4687   003578  325D               	rrcf	(??_floorf+5)^0,f,c
  4688   00357A  325C               	rrcf	(??_floorf+4)^0,f,c
  4689   00357C  325B               	rrcf	(??_floorf+3)^0,f,c
  4690   00357E  325A               	rrcf	(??_floorf+2)^0,f,c
  4691   003580                     u5650:
  4692   003580  2EE8               	decfsz	wreg,f,c
  4693   003582  EFBB  F01A         	goto	u5655
  4694   003586  505A               	movf	(??_floorf+2)^0,w,c
  4695   003588  2458               	addwf	??_floorf^0,w,c
  4696   00358A  0100               	movlb	0	; () banked
  4697   00358C  6F64               	movwf	floorf@e& (0+255),b
  4698   00358E  0E00               	movlw	0
  4699   003590  2059               	addwfc	(??_floorf+1)^0,w,c
  4700   003592  6F65               	movwf	(floorf@e+1)& (0+255),b
  4701   003594  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4702   003596  EFD6  F01A         	goto	u5661
  4703   00359A  5165               	movf	(floorf@e+1)& (0+255),w,b
  4704   00359C  E109               	bnz	u5660
  4705   00359E  0E17               	movlw	23
  4706   0035A0  5D64               	subwf	floorf@e& (0+255),w,b
  4707   0035A2  A0D8               	btfss	status,0,c
  4708   0035A4  EFD6  F01A         	goto	u5661
  4709   0035A8  EFD8  F01A         	goto	u5660
  4710   0035AC                     u5661:
  4711   0035AC  EFE2  F01A         	goto	l4639
  4712   0035B0                     u5660:
  4713   0035B0                     l4637:
  4714                           
  4715                           ; BSR set to: 0
  4716   0035B0  C054  F054         	movff	floorf@x,?_floorf
  4717   0035B4  C055  F055         	movff	floorf@x+1,?_floorf+1
  4718   0035B8  C056  F056         	movff	floorf@x+2,?_floorf+2
  4719   0035BC  C057  F057         	movff	floorf@x+3,?_floorf+3
  4720   0035C0  EFA6  F01B         	goto	l1090
  4721   0035C4                     l4639:
  4722                           
  4723                           ; BSR set to: 0
  4724   0035C4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4725   0035C6  EFE7  F01A         	goto	u5671
  4726   0035CA  EFE9  F01A         	goto	u5670
  4727   0035CE                     u5671:
  4728   0035CE  EF5A  F01B         	goto	l4649
  4729   0035D2                     u5670:
  4730   0035D2                     
  4731                           ; BSR set to: 0
  4732   0035D2  C064  F058         	movff	floorf@e,??_floorf
  4733   0035D6  0EFF               	movlw	255
  4734   0035D8  6E59               	movwf	(??_floorf+1)^0,c
  4735   0035DA  0EFF               	movlw	255
  4736   0035DC  6E5A               	movwf	(??_floorf+2)^0,c
  4737   0035DE  0E7F               	movlw	127
  4738   0035E0  6E5B               	movwf	(??_floorf+3)^0,c
  4739   0035E2  0E00               	movlw	0
  4740   0035E4  6E5C               	movwf	(??_floorf+4)^0,c
  4741   0035E6                     u5685:
  4742   0035E6  6658               	tstfsz	??_floorf^0,c
  4743   0035E8  EFF8  F01A         	goto	u5686
  4744   0035EC  EF00  F01B         	goto	u5687
  4745   0035F0                     u5686:
  4746   0035F0  345C               	rlcf	(??_floorf+4)^0,w,c
  4747   0035F2  325C               	rrcf	(??_floorf+4)^0,f,c
  4748   0035F4  325B               	rrcf	(??_floorf+3)^0,f,c
  4749   0035F6  325A               	rrcf	(??_floorf+2)^0,f,c
  4750   0035F8  3259               	rrcf	(??_floorf+1)^0,f,c
  4751   0035FA  2E58               	decfsz	??_floorf^0,f,c
  4752   0035FC  EFF3  F01A         	goto	u5685
  4753   003600                     u5687:
  4754   003600  C059  F060         	movff	??_floorf+1,floorf@m
  4755   003604  C05A  F061         	movff	??_floorf+2,floorf@m+1
  4756   003608  C05B  F062         	movff	??_floorf+3,floorf@m+2
  4757   00360C  C05C  F063         	movff	??_floorf+4,floorf@m+3
  4758   003610  0100               	movlb	0	; () banked
  4759   003612  5160               	movf	floorf@m& (0+255),w,b
  4760   003614  1566               	andwf	floorf@u& (0+255),w,b
  4761   003616  6E58               	movwf	??_floorf^0,c
  4762   003618  5161               	movf	(floorf@m+1)& (0+255),w,b
  4763   00361A  1567               	andwf	(floorf@u+1)& (0+255),w,b
  4764   00361C  6E59               	movwf	(??_floorf+1)^0,c
  4765   00361E  5162               	movf	(floorf@m+2)& (0+255),w,b
  4766   003620  1568               	andwf	(floorf@u+2)& (0+255),w,b
  4767   003622  6E5A               	movwf	(??_floorf+2)^0,c
  4768   003624  5163               	movf	(floorf@m+3)& (0+255),w,b
  4769   003626  1569               	andwf	(floorf@u+3)& (0+255),w,b
  4770   003628  6E5B               	movwf	(??_floorf+3)^0,c
  4771   00362A  5058               	movf	??_floorf^0,w,c
  4772   00362C  1059               	iorwf	(??_floorf+1)^0,w,c
  4773   00362E  105A               	iorwf	(??_floorf+2)^0,w,c
  4774   003630  105B               	iorwf	(??_floorf+3)^0,w,c
  4775   003632  A4D8               	btfss	status,2,c
  4776   003634  EF1E  F01B         	goto	u5691
  4777   003638  EF20  F01B         	goto	u5690
  4778   00363C                     u5691:
  4779   00363C  EF22  F01B         	goto	l4645
  4780   003640                     u5690:
  4781   003640  EFD8  F01A         	goto	l4637
  4782   003644                     l4645:
  4783                           
  4784                           ; BSR set to: 0
  4785   003644  C066  F058         	movff	floorf@u,??_floorf
  4786   003648  C067  F059         	movff	floorf@u+1,??_floorf+1
  4787   00364C  C068  F05A         	movff	floorf@u+2,??_floorf+2
  4788   003650  C069  F05B         	movff	floorf@u+3,??_floorf+3
  4789   003654  0E20               	movlw	32
  4790   003656  EF32  F01B         	goto	u5700
  4791   00365A                     u5705:
  4792   00365A  90D8               	bcf	status,0,c
  4793   00365C  325B               	rrcf	(??_floorf+3)^0,f,c
  4794   00365E  325A               	rrcf	(??_floorf+2)^0,f,c
  4795   003660  3259               	rrcf	(??_floorf+1)^0,f,c
  4796   003662  3258               	rrcf	??_floorf^0,f,c
  4797   003664                     u5700:
  4798   003664  2EE8               	decfsz	wreg,f,c
  4799   003666  EF2D  F01B         	goto	u5705
  4800   00366A  5058               	movf	??_floorf^0,w,c
  4801   00366C  1059               	iorwf	(??_floorf+1)^0,w,c
  4802   00366E  105A               	iorwf	(??_floorf+2)^0,w,c
  4803   003670  105B               	iorwf	(??_floorf+3)^0,w,c
  4804   003672  B4D8               	btfsc	status,2,c
  4805   003674  EF3E  F01B         	goto	u5711
  4806   003678  EF40  F01B         	goto	u5710
  4807   00367C                     u5711:
  4808   00367C  EF48  F01B         	goto	l1093
  4809   003680                     u5710:
  4810   003680                     
  4811                           ; BSR set to: 0
  4812   003680  5160               	movf	floorf@m& (0+255),w,b
  4813   003682  2766               	addwf	floorf@u& (0+255),f,b
  4814   003684  5161               	movf	(floorf@m+1)& (0+255),w,b
  4815   003686  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  4816   003688  5162               	movf	(floorf@m+2)& (0+255),w,b
  4817   00368A  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  4818   00368C  5163               	movf	(floorf@m+3)& (0+255),w,b
  4819   00368E  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  4820   003690                     l1093:
  4821                           
  4822                           ; BSR set to: 0
  4823   003690  1D60               	comf	floorf@m& (0+255),w,b
  4824   003692  6E58               	movwf	??_floorf^0,c
  4825   003694  1D61               	comf	(floorf@m+1)& (0+255),w,b
  4826   003696  6E59               	movwf	(??_floorf+1)^0,c
  4827   003698  1D62               	comf	(floorf@m+2)& (0+255),w,b
  4828   00369A  6E5A               	movwf	(??_floorf+2)^0,c
  4829   00369C  1D63               	comf	(floorf@m+3)& (0+255),w,b
  4830   00369E  6E5B               	movwf	(??_floorf+3)^0,c
  4831   0036A0  5058               	movf	??_floorf^0,w,c
  4832   0036A2  1766               	andwf	floorf@u& (0+255),f,b
  4833   0036A4  5059               	movf	(??_floorf+1)^0,w,c
  4834   0036A6  1767               	andwf	(floorf@u+1)& (0+255),f,b
  4835   0036A8  505A               	movf	(??_floorf+2)^0,w,c
  4836   0036AA  1768               	andwf	(floorf@u+2)& (0+255),f,b
  4837   0036AC  505B               	movf	(??_floorf+3)^0,w,c
  4838   0036AE  1769               	andwf	(floorf@u+3)& (0+255),f,b
  4839   0036B0  EF9E  F01B         	goto	l4657
  4840   0036B4                     l4649:
  4841                           
  4842                           ; BSR set to: 0
  4843   0036B4  C066  F058         	movff	floorf@u,??_floorf
  4844   0036B8  C067  F059         	movff	floorf@u+1,??_floorf+1
  4845   0036BC  C068  F05A         	movff	floorf@u+2,??_floorf+2
  4846   0036C0  C069  F05B         	movff	floorf@u+3,??_floorf+3
  4847   0036C4  0E20               	movlw	32
  4848   0036C6  EF6A  F01B         	goto	u5720
  4849   0036CA                     u5725:
  4850   0036CA  90D8               	bcf	status,0,c
  4851   0036CC  325B               	rrcf	(??_floorf+3)^0,f,c
  4852   0036CE  325A               	rrcf	(??_floorf+2)^0,f,c
  4853   0036D0  3259               	rrcf	(??_floorf+1)^0,f,c
  4854   0036D2  3258               	rrcf	??_floorf^0,f,c
  4855   0036D4                     u5720:
  4856   0036D4  2EE8               	decfsz	wreg,f,c
  4857   0036D6  EF65  F01B         	goto	u5725
  4858   0036DA  5058               	movf	??_floorf^0,w,c
  4859   0036DC  1059               	iorwf	(??_floorf+1)^0,w,c
  4860   0036DE  105A               	iorwf	(??_floorf+2)^0,w,c
  4861   0036E0  105B               	iorwf	(??_floorf+3)^0,w,c
  4862   0036E2  A4D8               	btfss	status,2,c
  4863   0036E4  EF76  F01B         	goto	u5731
  4864   0036E8  EF78  F01B         	goto	u5730
  4865   0036EC                     u5731:
  4866   0036EC  EF82  F01B         	goto	l4653
  4867   0036F0                     u5730:
  4868   0036F0                     
  4869                           ; BSR set to: 0
  4870   0036F0  0E00               	movlw	0
  4871   0036F2  6F66               	movwf	floorf@u& (0+255),b
  4872   0036F4  0E00               	movlw	0
  4873   0036F6  6F67               	movwf	(floorf@u+1)& (0+255),b
  4874   0036F8  0E00               	movlw	0
  4875   0036FA  6F68               	movwf	(floorf@u+2)& (0+255),b
  4876   0036FC  0E00               	movlw	0
  4877   0036FE  6F69               	movwf	(floorf@u+3)& (0+255),b
  4878   003700  EF9E  F01B         	goto	l4657
  4879   003704                     l4653:
  4880                           
  4881                           ; BSR set to: 0
  4882   003704  90D8               	bcf	status,0,c
  4883   003706  3566               	rlcf	floorf@u& (0+255),w,b
  4884   003708  6E58               	movwf	??_floorf^0,c
  4885   00370A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  4886   00370C  6E59               	movwf	(??_floorf+1)^0,c
  4887   00370E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  4888   003710  6E5A               	movwf	(??_floorf+2)^0,c
  4889   003712  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  4890   003714  6E5B               	movwf	(??_floorf+3)^0,c
  4891   003716  5058               	movf	??_floorf^0,w,c
  4892   003718  1059               	iorwf	(??_floorf+1)^0,w,c
  4893   00371A  105A               	iorwf	(??_floorf+2)^0,w,c
  4894   00371C  105B               	iorwf	(??_floorf+3)^0,w,c
  4895   00371E  B4D8               	btfsc	status,2,c
  4896   003720  EF94  F01B         	goto	u5741
  4897   003724  EF96  F01B         	goto	u5740
  4898   003728                     u5741:
  4899   003728  EF9E  F01B         	goto	l4657
  4900   00372C                     u5740:
  4901   00372C                     
  4902                           ; BSR set to: 0
  4903   00372C  0E00               	movlw	0
  4904   00372E  6F66               	movwf	floorf@u& (0+255),b
  4905   003730  0E00               	movlw	0
  4906   003732  6F67               	movwf	(floorf@u+1)& (0+255),b
  4907   003734  0E80               	movlw	128
  4908   003736  6F68               	movwf	(floorf@u+2)& (0+255),b
  4909   003738  0EBF               	movlw	191
  4910   00373A  6F69               	movwf	(floorf@u+3)& (0+255),b
  4911   00373C                     l4657:
  4912                           
  4913                           ; BSR set to: 0
  4914   00373C  C066  F054         	movff	floorf@u,?_floorf
  4915   003740  C067  F055         	movff	floorf@u+1,?_floorf+1
  4916   003744  C068  F056         	movff	floorf@u+2,?_floorf+2
  4917   003748  C069  F057         	movff	floorf@u+3,?_floorf+3
  4918   00374C                     l1090:
  4919                           
  4920                           ; BSR set to: 0
  4921   00374C  0012               	return		;funcret
  4922   00374E                     __end_of_floorf:
  4923                           	callstack 0
  4924                           
  4925 ;; *************** function ___fpclassifyf *****************
  4926 ;; Defined at:
  4927 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  x               4    0[COMRAM] float 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  u               4   10[COMRAM] struct .
  4932 ;;  e               2    8[COMRAM] int 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  2    0[COMRAM] int 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;Total ram usage:       14 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_efgtoa
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text19
  4956   003C24                     __ptext19:
  4957                           	callstack 0
  4958   003C24                     ___fpclassifyf:
  4959                           	callstack 25
  4960   003C24  C154  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4961   003C28  C155  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4962   003C2C  C156  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4963   003C30  C157  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4964   003C34  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4965   003C38  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4966   003C3C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4967   003C40  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4968   003C44  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4969   003C48  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4970   003C4C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4971   003C50  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4972   003C54  0E18               	movlw	24
  4973   003C56  EF32  F01E         	goto	u5560
  4974   003C5A                     u5565:
  4975   003C5A  90D8               	bcf	status,0,c
  4976   003C5C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4977   003C5E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4978   003C60  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4979   003C62  3205               	rrcf	??___fpclassifyf^0,f,c
  4980   003C64                     u5560:
  4981   003C64  2EE8               	decfsz	wreg,f,c
  4982   003C66  EF2D  F01E         	goto	u5565
  4983   003C6A  5005               	movf	??___fpclassifyf^0,w,c
  4984   003C6C  6E09               	movwf	___fpclassifyf@e^0,c
  4985   003C6E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4986   003C70  5009               	movf	___fpclassifyf@e^0,w,c
  4987   003C72  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4988   003C74  A4D8               	btfss	status,2,c
  4989   003C76  EF3F  F01E         	goto	u5571
  4990   003C7A  EF41  F01E         	goto	u5570
  4991   003C7E                     u5571:
  4992   003C7E  EF61  F01E         	goto	l4611
  4993   003C82                     u5570:
  4994   003C82  90D8               	bcf	status,0,c
  4995   003C84  340B               	rlcf	___fpclassifyf@u^0,w,c
  4996   003C86  6E05               	movwf	??___fpclassifyf^0,c
  4997   003C88  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4998   003C8A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4999   003C8C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5000   003C8E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5001   003C90  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5002   003C92  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5003   003C94  5005               	movf	??___fpclassifyf^0,w,c
  5004   003C96  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5005   003C98  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5006   003C9A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5007   003C9C  A4D8               	btfss	status,2,c
  5008   003C9E  EF53  F01E         	goto	u5581
  5009   003CA2  EF55  F01E         	goto	u5580
  5010   003CA6                     u5581:
  5011   003CA6  EF5B  F01E         	goto	l4607
  5012   003CAA                     u5580:
  5013   003CAA  0E00               	movlw	0
  5014   003CAC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5015   003CAE  0E02               	movlw	2
  5016   003CB0  6E01               	movwf	?___fpclassifyf^0,c
  5017   003CB2  EF90  F01E         	goto	l1083
  5018   003CB6                     l4607:
  5019   003CB6  0E00               	movlw	0
  5020   003CB8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5021   003CBA  0E03               	movlw	3
  5022   003CBC  6E01               	movwf	?___fpclassifyf^0,c
  5023   003CBE  EF90  F01E         	goto	l1083
  5024   003CC2                     l4611:
  5025   003CC2  2809               	incf	___fpclassifyf@e^0,w,c
  5026   003CC4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5027   003CC6  A4D8               	btfss	status,2,c
  5028   003CC8  EF68  F01E         	goto	u5591
  5029   003CCC  EF6A  F01E         	goto	u5590
  5030   003CD0                     u5591:
  5031   003CD0  EF8C  F01E         	goto	l4617
  5032   003CD4                     u5590:
  5033   003CD4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5034   003CD8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5035   003CDC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5036   003CE0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5037   003CE4  0E09               	movlw	9
  5038   003CE6                     u5605:
  5039   003CE6  90D8               	bcf	status,0,c
  5040   003CE8  3605               	rlcf	??___fpclassifyf^0,f,c
  5041   003CEA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5042   003CEC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5043   003CEE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5044   003CF0  2EE8               	decfsz	wreg,f,c
  5045   003CF2  EF73  F01E         	goto	u5605
  5046   003CF6  5005               	movf	??___fpclassifyf^0,w,c
  5047   003CF8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5048   003CFA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5049   003CFC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5050   003CFE  B4D8               	btfsc	status,2,c
  5051   003D00  EF84  F01E         	goto	u5611
  5052   003D04  EF87  F01E         	goto	u5610
  5053   003D08                     u5611:
  5054   003D08  0E01               	movlw	1
  5055   003D0A  EF88  F01E         	goto	u5620
  5056   003D0E                     u5610:
  5057   003D0E  0E00               	movlw	0
  5058   003D10                     u5620:
  5059   003D10  6E01               	movwf	?___fpclassifyf^0,c
  5060   003D12  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5061   003D14  EF90  F01E         	goto	l1083
  5062   003D18                     l4617:
  5063   003D18  0E00               	movlw	0
  5064   003D1A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5065   003D1C  0E04               	movlw	4
  5066   003D1E  6E01               	movwf	?___fpclassifyf^0,c
  5067   003D20                     l1083:
  5068   003D20  0012               	return		;funcret
  5069   003D22                     __end_of___fpclassifyf:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function ___flneg *****************
  5073 ;; Defined at:
  5074 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  f1              4    0[COMRAM] int 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  4    0[COMRAM] int 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;Total ram usage:        4 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_efgtoa
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text20
  5102   00433C                     __ptext20:
  5103                           	callstack 0
  5104   00433C                     ___flneg:
  5105                           	callstack 25
  5106   00433C  5001               	movf	___flneg@f1^0,w,c
  5107   00433E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5108   004340  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5109   004342  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5110   004344  B4D8               	btfsc	status,2,c
  5111   004346  EFA7  F021         	goto	u5461
  5112   00434A  EFA9  F021         	goto	u5460
  5113   00434E                     u5461:
  5114   00434E  EFB1  F021         	goto	l4539
  5115   004352                     u5460:
  5116   004352  0E00               	movlw	0
  5117   004354  1A01               	xorwf	___flneg@f1^0,f,c
  5118   004356  0E00               	movlw	0
  5119   004358  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5120   00435A  0E00               	movlw	0
  5121   00435C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5122   00435E  0E80               	movlw	128
  5123   004360  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5124   004362                     l4539:
  5125   004362  C001  F001         	movff	___flneg@f1,?___flneg
  5126   004366  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5127   00436A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5128   00436E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5129   004372  0012               	return		;funcret
  5130   004374                     __end_of___flneg:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _sendStringSerial4 *****************
  5134 ;; Defined at:
  5135 ;;		line 41 in file "serial.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  string          1    1[COMRAM] PTR unsigned char 
  5138 ;;		 -> color_cardCheck@senddata(25), 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5150 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;Total ram usage:        1 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 1
  5157 ;; This function calls:
  5158 ;;		_sendCharSerial4
  5159 ;; This function is called by:
  5160 ;;		_color_cardCheck
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text21
  5165   0043D2                     __ptext21:
  5166                           	callstack 0
  5167   0043D2                     _sendStringSerial4:
  5168                           	callstack 28
  5169   0043D2                     
  5170                           ;serial.c: 43:     while(*string != 0){
  5171   0043D2  EFF2  F021         	goto	l3781
  5172   0043D6                     l3777:
  5173                           
  5174                           ;serial.c: 44:   sendCharSerial4(*string++);
  5175   0043D6  5002               	movf	sendStringSerial4@string^0,w,c
  5176   0043D8  6ED9               	movwf	fsr2l,c
  5177   0043DA  6ADA               	clrf	fsr2h,c
  5178   0043DC  50DF               	movf	indf2,w,c
  5179   0043DE  EC41  F022         	call	_sendCharSerial4
  5180   0043E2  2A02               	incf	sendStringSerial4@string^0,f,c
  5181   0043E4                     l3781:
  5182                           
  5183                           ;serial.c: 43:     while(*string != 0){
  5184   0043E4  5002               	movf	sendStringSerial4@string^0,w,c
  5185   0043E6  6ED9               	movwf	fsr2l,c
  5186   0043E8  6ADA               	clrf	fsr2h,c
  5187   0043EA  50DF               	movf	indf2,w,c
  5188   0043EC  A4D8               	btfss	status,2,c
  5189   0043EE  EFFB  F021         	goto	u4171
  5190   0043F2  EFFD  F021         	goto	u4170
  5191   0043F6                     u4171:
  5192   0043F6  EFEB  F021         	goto	l3777
  5193   0043FA                     u4170:
  5194   0043FA  0012               	return		;funcret
  5195   0043FC                     __end_of_sendStringSerial4:
  5196                           	callstack 0
  5197                           
  5198 ;; *************** function _sendCharSerial4 *****************
  5199 ;; Defined at:
  5200 ;;		line 34 in file "serial.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  charToSend      1    wreg     unsigned char 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  charToSend      1    0[COMRAM] unsigned char 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;Total ram usage:        1 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_sendStringSerial4
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text22
  5228   004482                     __ptext22:
  5229                           	callstack 0
  5230   004482                     _sendCharSerial4:
  5231                           	callstack 28
  5232                           
  5233                           ;incstack = 0
  5234                           ;sendCharSerial4@charToSend stored from wreg
  5235   004482  6E01               	movwf	sendCharSerial4@charToSend^0,c
  5236   004484                     l172:
  5237   004484  010E               	movlb	14	; () banked
  5238   004486  A537               	btfss	55,2,b	;volatile
  5239   004488  EF48  F022         	goto	u4031
  5240   00448C  EF4A  F022         	goto	u4030
  5241   004490                     u4031:
  5242   004490  EF42  F022         	goto	l172
  5243   004494                     u4030:
  5244   004494                     
  5245                           ; BSR set to: 14
  5246                           ;serial.c: 36:     TX4REG = charToSend;
  5247   004494  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5248   004498                     
  5249                           ; BSR set to: 14
  5250   004498  0012               	return		;funcret
  5251   00449A                     __end_of_sendCharSerial4:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function _color_read_Red *****************
  5255 ;; Defined at:
  5256 ;;		line 49 in file "color.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  tmp             2    9[COMRAM] unsigned int 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  2    4[COMRAM] unsigned int 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;Total ram usage:        7 bytes
  5275 ;; Hardware stack levels used: 1
  5276 ;; Hardware stack levels required when called: 2
  5277 ;; This function calls:
  5278 ;;		_I2C_2_Master_Read
  5279 ;;		_I2C_2_Master_RepStart
  5280 ;;		_I2C_2_Master_Start
  5281 ;;		_I2C_2_Master_Stop
  5282 ;;		_I2C_2_Master_Write
  5283 ;; This function is called by:
  5284 ;;		_color_cardCheck
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text23
  5289   004030                     __ptext23:
  5290                           	callstack 0
  5291   004030                     _color_read_Red:
  5292                           	callstack 27
  5293   004030                     
  5294                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  5295   004030  EC5F  F022         	call	_I2C_2_Master_Start	;wreg free
  5296                           
  5297                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  5298   004034  0E52               	movlw	82
  5299   004036  EC54  F022         	call	_I2C_2_Master_Write
  5300                           
  5301                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x16);
  5302   00403A  0EB6               	movlw	182
  5303   00403C  EC54  F022         	call	_I2C_2_Master_Write
  5304                           
  5305                           ;color.c: 55:  I2C_2_Master_RepStart();
  5306   004040  EC64  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5307                           
  5308                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  5309   004044  0E53               	movlw	83
  5310   004046  EC54  F022         	call	_I2C_2_Master_Write
  5311                           
  5312                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  5313   00404A  0E01               	movlw	1
  5314   00404C  EC22  F021         	call	_I2C_2_Master_Read
  5315   004050  6E07               	movwf	??_color_read_Red^0,c
  5316   004052  5007               	movf	??_color_read_Red^0,w,c
  5317   004054  6E0A               	movwf	color_read_Red@tmp^0,c
  5318   004056  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5319                           
  5320                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5321   004058  0E00               	movlw	0
  5322   00405A  EC22  F021         	call	_I2C_2_Master_Read
  5323   00405E  6E07               	movwf	??_color_read_Red^0,c
  5324   004060  5007               	movf	??_color_read_Red^0,w,c
  5325   004062  6E09               	movwf	(??_color_read_Red+2)^0,c
  5326   004064  6A08               	clrf	(??_color_read_Red+1)^0,c
  5327   004066  500A               	movf	color_read_Red@tmp^0,w,c
  5328   004068  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5329   00406A  6E0A               	movwf	color_read_Red@tmp^0,c
  5330   00406C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5331   00406E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5332   004070  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5333                           
  5334                           ;color.c: 59:  I2C_2_Master_Stop();
  5335   004072  EC5A  F022         	call	_I2C_2_Master_Stop	;wreg free
  5336   004076                     
  5337                           ;color.c: 60:  return tmp;
  5338   004076  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5339   00407A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5340   00407E  0012               	return		;funcret
  5341   004080                     __end_of_color_read_Red:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function _color_read_Green *****************
  5345 ;; Defined at:
  5346 ;;		line 63 in file "color.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  tmp             2    9[COMRAM] unsigned int 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  2    4[COMRAM] unsigned int 
  5353 ;; Registers used:
  5354 ;;		wreg, status,2, status,0, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;Total ram usage:        7 bytes
  5365 ;; Hardware stack levels used: 1
  5366 ;; Hardware stack levels required when called: 2
  5367 ;; This function calls:
  5368 ;;		_I2C_2_Master_Read
  5369 ;;		_I2C_2_Master_RepStart
  5370 ;;		_I2C_2_Master_Start
  5371 ;;		_I2C_2_Master_Stop
  5372 ;;		_I2C_2_Master_Write
  5373 ;; This function is called by:
  5374 ;;		_color_cardCheck
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text24
  5379   004080                     __ptext24:
  5380                           	callstack 0
  5381   004080                     _color_read_Green:
  5382                           	callstack 27
  5383   004080                     
  5384                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  5385   004080  EC5F  F022         	call	_I2C_2_Master_Start	;wreg free
  5386                           
  5387                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  5388   004084  0E52               	movlw	82
  5389   004086  EC54  F022         	call	_I2C_2_Master_Write
  5390                           
  5391                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x18);
  5392   00408A  0EB8               	movlw	184
  5393   00408C  EC54  F022         	call	_I2C_2_Master_Write
  5394                           
  5395                           ;color.c: 69:  I2C_2_Master_RepStart();
  5396   004090  EC64  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5397                           
  5398                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  5399   004094  0E53               	movlw	83
  5400   004096  EC54  F022         	call	_I2C_2_Master_Write
  5401                           
  5402                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  5403   00409A  0E01               	movlw	1
  5404   00409C  EC22  F021         	call	_I2C_2_Master_Read
  5405   0040A0  6E07               	movwf	??_color_read_Green^0,c
  5406   0040A2  5007               	movf	??_color_read_Green^0,w,c
  5407   0040A4  6E0A               	movwf	color_read_Green@tmp^0,c
  5408   0040A6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5409                           
  5410                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5411   0040A8  0E00               	movlw	0
  5412   0040AA  EC22  F021         	call	_I2C_2_Master_Read
  5413   0040AE  6E07               	movwf	??_color_read_Green^0,c
  5414   0040B0  5007               	movf	??_color_read_Green^0,w,c
  5415   0040B2  6E09               	movwf	(??_color_read_Green+2)^0,c
  5416   0040B4  6A08               	clrf	(??_color_read_Green+1)^0,c
  5417   0040B6  500A               	movf	color_read_Green@tmp^0,w,c
  5418   0040B8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5419   0040BA  6E0A               	movwf	color_read_Green@tmp^0,c
  5420   0040BC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5421   0040BE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5422   0040C0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5423                           
  5424                           ;color.c: 73:  I2C_2_Master_Stop();
  5425   0040C2  EC5A  F022         	call	_I2C_2_Master_Stop	;wreg free
  5426   0040C6                     
  5427                           ;color.c: 74:  return tmp;
  5428   0040C6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5429   0040CA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5430   0040CE  0012               	return		;funcret
  5431   0040D0                     __end_of_color_read_Green:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _color_read_Clear *****************
  5435 ;; Defined at:
  5436 ;;		line 91 in file "color.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  tmp             2    9[COMRAM] unsigned int 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  2    4[COMRAM] unsigned int 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5454 ;;Total ram usage:        7 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 2
  5457 ;; This function calls:
  5458 ;;		_I2C_2_Master_Read
  5459 ;;		_I2C_2_Master_RepStart
  5460 ;;		_I2C_2_Master_Start
  5461 ;;		_I2C_2_Master_Stop
  5462 ;;		_I2C_2_Master_Write
  5463 ;; This function is called by:
  5464 ;;		_color_cardCheck
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text25
  5469   0040D0                     __ptext25:
  5470                           	callstack 0
  5471   0040D0                     _color_read_Clear:
  5472                           	callstack 27
  5473   0040D0                     
  5474                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
  5475   0040D0  EC5F  F022         	call	_I2C_2_Master_Start	;wreg free
  5476                           
  5477                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
  5478   0040D4  0E52               	movlw	82
  5479   0040D6  EC54  F022         	call	_I2C_2_Master_Write
  5480                           
  5481                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x14);
  5482   0040DA  0EB4               	movlw	180
  5483   0040DC  EC54  F022         	call	_I2C_2_Master_Write
  5484                           
  5485                           ;color.c: 99:  I2C_2_Master_RepStart();
  5486   0040E0  EC64  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5487                           
  5488                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
  5489   0040E4  0E53               	movlw	83
  5490   0040E6  EC54  F022         	call	_I2C_2_Master_Write
  5491                           
  5492                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
  5493   0040EA  0E01               	movlw	1
  5494   0040EC  EC22  F021         	call	_I2C_2_Master_Read
  5495   0040F0  6E07               	movwf	??_color_read_Clear^0,c
  5496   0040F2  5007               	movf	??_color_read_Clear^0,w,c
  5497   0040F4  6E0A               	movwf	color_read_Clear@tmp^0,c
  5498   0040F6  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  5499                           
  5500                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5501   0040F8  0E00               	movlw	0
  5502   0040FA  EC22  F021         	call	_I2C_2_Master_Read
  5503   0040FE  6E07               	movwf	??_color_read_Clear^0,c
  5504   004100  5007               	movf	??_color_read_Clear^0,w,c
  5505   004102  6E09               	movwf	(??_color_read_Clear+2)^0,c
  5506   004104  6A08               	clrf	(??_color_read_Clear+1)^0,c
  5507   004106  500A               	movf	color_read_Clear@tmp^0,w,c
  5508   004108  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  5509   00410A  6E0A               	movwf	color_read_Clear@tmp^0,c
  5510   00410C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  5511   00410E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  5512   004110  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  5513                           
  5514                           ;color.c: 103:  I2C_2_Master_Stop();
  5515   004112  EC5A  F022         	call	_I2C_2_Master_Stop	;wreg free
  5516   004116                     
  5517                           ;color.c: 104:  return tmp;
  5518   004116  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  5519   00411A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5520   00411E  0012               	return		;funcret
  5521   004120                     __end_of_color_read_Clear:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function _color_read_Blue *****************
  5525 ;; Defined at:
  5526 ;;		line 77 in file "color.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  tmp             2    9[COMRAM] unsigned int 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  2    4[COMRAM] unsigned int 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;Total ram usage:        7 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 2
  5547 ;; This function calls:
  5548 ;;		_I2C_2_Master_Read
  5549 ;;		_I2C_2_Master_RepStart
  5550 ;;		_I2C_2_Master_Start
  5551 ;;		_I2C_2_Master_Stop
  5552 ;;		_I2C_2_Master_Write
  5553 ;; This function is called by:
  5554 ;;		_color_cardCheck
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text26
  5559   004120                     __ptext26:
  5560                           	callstack 0
  5561   004120                     _color_read_Blue:
  5562                           	callstack 27
  5563   004120                     
  5564                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  5565   004120  EC5F  F022         	call	_I2C_2_Master_Start	;wreg free
  5566                           
  5567                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  5568   004124  0E52               	movlw	82
  5569   004126  EC54  F022         	call	_I2C_2_Master_Write
  5570                           
  5571                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x1A);
  5572   00412A  0EBA               	movlw	186
  5573   00412C  EC54  F022         	call	_I2C_2_Master_Write
  5574                           
  5575                           ;color.c: 83:  I2C_2_Master_RepStart();
  5576   004130  EC64  F022         	call	_I2C_2_Master_RepStart	;wreg free
  5577                           
  5578                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  5579   004134  0E53               	movlw	83
  5580   004136  EC54  F022         	call	_I2C_2_Master_Write
  5581                           
  5582                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  5583   00413A  0E01               	movlw	1
  5584   00413C  EC22  F021         	call	_I2C_2_Master_Read
  5585   004140  6E07               	movwf	??_color_read_Blue^0,c
  5586   004142  5007               	movf	??_color_read_Blue^0,w,c
  5587   004144  6E0A               	movwf	color_read_Blue@tmp^0,c
  5588   004146  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5589                           
  5590                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5591   004148  0E00               	movlw	0
  5592   00414A  EC22  F021         	call	_I2C_2_Master_Read
  5593   00414E  6E07               	movwf	??_color_read_Blue^0,c
  5594   004150  5007               	movf	??_color_read_Blue^0,w,c
  5595   004152  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5596   004154  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5597   004156  500A               	movf	color_read_Blue@tmp^0,w,c
  5598   004158  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5599   00415A  6E0A               	movwf	color_read_Blue@tmp^0,c
  5600   00415C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5601   00415E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5602   004160  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5603                           
  5604                           ;color.c: 87:  I2C_2_Master_Stop();
  5605   004162  EC5A  F022         	call	_I2C_2_Master_Stop	;wreg free
  5606   004166                     
  5607                           ;color.c: 88:  return tmp;
  5608   004166  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5609   00416A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5610   00416E  0012               	return		;funcret
  5611   004170                     __end_of_color_read_Blue:
  5612                           	callstack 0
  5613                           
  5614 ;; *************** function _I2C_2_Master_Write *****************
  5615 ;; Defined at:
  5616 ;;		line 45 in file "i2c.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  data_byte       1    wreg     unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  data_byte       1    1[COMRAM] unsigned char 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;Total ram usage:        1 bytes
  5635 ;; Hardware stack levels used: 1
  5636 ;; Hardware stack levels required when called: 1
  5637 ;; This function calls:
  5638 ;;		_I2C_2_Master_Idle
  5639 ;; This function is called by:
  5640 ;;		_color_writetoaddr
  5641 ;;		_color_read_Red
  5642 ;;		_color_read_Green
  5643 ;;		_color_read_Blue
  5644 ;;		_color_read_Clear
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text27
  5649   0044A8                     __ptext27:
  5650                           	callstack 0
  5651   0044A8                     _I2C_2_Master_Write:
  5652                           	callstack 27
  5653                           
  5654                           ;incstack = 0
  5655                           ;I2C_2_Master_Write@data_byte stored from wreg
  5656   0044A8  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5657   0044AA                     
  5658                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5659   0044AA  ECFE  F021         	call	_I2C_2_Master_Idle	;wreg free
  5660   0044AE                     
  5661                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5662   0044AE  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5663   0044B2  0012               	return		;funcret
  5664   0044B4                     __end_of_I2C_2_Master_Write:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _I2C_2_Master_Stop *****************
  5668 ;; Defined at:
  5669 ;;		line 39 in file "i2c.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2, status,0, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 1
  5690 ;; This function calls:
  5691 ;;		_I2C_2_Master_Idle
  5692 ;; This function is called by:
  5693 ;;		_color_writetoaddr
  5694 ;;		_color_read_Red
  5695 ;;		_color_read_Green
  5696 ;;		_color_read_Blue
  5697 ;;		_color_read_Clear
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text28
  5702   0044B4                     __ptext28:
  5703                           	callstack 0
  5704   0044B4                     _I2C_2_Master_Stop:
  5705                           	callstack 27
  5706   0044B4                     
  5707                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5708   0044B4  ECFE  F021         	call	_I2C_2_Master_Idle	;wreg free
  5709   0044B8                     
  5710                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5711   0044B8  010E               	movlb	14	; () banked
  5712   0044BA  85DA               	bsf	218,2,b	;volatile
  5713   0044BC                     
  5714                           ; BSR set to: 14
  5715   0044BC  0012               	return		;funcret
  5716   0044BE                     __end_of_I2C_2_Master_Stop:
  5717                           	callstack 0
  5718                           
  5719 ;; *************** function _I2C_2_Master_Start *****************
  5720 ;; Defined at:
  5721 ;;		line 27 in file "i2c.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used: 1
  5741 ;; Hardware stack levels required when called: 1
  5742 ;; This function calls:
  5743 ;;		_I2C_2_Master_Idle
  5744 ;; This function is called by:
  5745 ;;		_color_writetoaddr
  5746 ;;		_color_read_Red
  5747 ;;		_color_read_Green
  5748 ;;		_color_read_Blue
  5749 ;;		_color_read_Clear
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text29
  5754   0044BE                     __ptext29:
  5755                           	callstack 0
  5756   0044BE                     _I2C_2_Master_Start:
  5757                           	callstack 27
  5758   0044BE                     
  5759                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5760   0044BE  ECFE  F021         	call	_I2C_2_Master_Idle	;wreg free
  5761   0044C2                     
  5762                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5763   0044C2  010E               	movlb	14	; () banked
  5764   0044C4  81DA               	bsf	218,0,b	;volatile
  5765   0044C6                     
  5766                           ; BSR set to: 14
  5767   0044C6  0012               	return		;funcret
  5768   0044C8                     __end_of_I2C_2_Master_Start:
  5769                           	callstack 0
  5770                           
  5771 ;; *************** function _I2C_2_Master_RepStart *****************
  5772 ;; Defined at:
  5773 ;;		line 33 in file "i2c.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;		None
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;		None
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, status,2, status,0, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;Total ram usage:        0 bytes
  5792 ;; Hardware stack levels used: 1
  5793 ;; Hardware stack levels required when called: 1
  5794 ;; This function calls:
  5795 ;;		_I2C_2_Master_Idle
  5796 ;; This function is called by:
  5797 ;;		_color_read_Red
  5798 ;;		_color_read_Green
  5799 ;;		_color_read_Blue
  5800 ;;		_color_read_Clear
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text30
  5805   0044C8                     __ptext30:
  5806                           	callstack 0
  5807   0044C8                     _I2C_2_Master_RepStart:
  5808                           	callstack 27
  5809   0044C8                     
  5810                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5811   0044C8  ECFE  F021         	call	_I2C_2_Master_Idle	;wreg free
  5812   0044CC                     
  5813                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5814   0044CC  010E               	movlb	14	; () banked
  5815   0044CE  83DA               	bsf	218,1,b	;volatile
  5816   0044D0                     
  5817                           ; BSR set to: 14
  5818   0044D0  0012               	return		;funcret
  5819   0044D2                     __end_of_I2C_2_Master_RepStart:
  5820                           	callstack 0
  5821                           
  5822 ;; *************** function _I2C_2_Master_Read *****************
  5823 ;; Defined at:
  5824 ;;		line 51 in file "i2c.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  ack             1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  ack             1    2[COMRAM] unsigned char 
  5829 ;;  tmp             1    3[COMRAM] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      unsigned char 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;Total ram usage:        3 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 1
  5846 ;; This function calls:
  5847 ;;		_I2C_2_Master_Idle
  5848 ;; This function is called by:
  5849 ;;		_color_read_Red
  5850 ;;		_color_read_Green
  5851 ;;		_color_read_Blue
  5852 ;;		_color_read_Clear
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text31
  5857   004244                     __ptext31:
  5858                           	callstack 0
  5859   004244                     _I2C_2_Master_Read:
  5860                           	callstack 27
  5861                           
  5862                           ; BSR set to: 14
  5863                           ;incstack = 0
  5864                           ;I2C_2_Master_Read@ack stored from wreg
  5865   004244  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5866   004246                     
  5867                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5868   004246  ECFE  F021         	call	_I2C_2_Master_Idle	;wreg free
  5869   00424A                     
  5870                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5871   00424A  010E               	movlb	14	; () banked
  5872   00424C  87DA               	bsf	218,3,b	;volatile
  5873                           
  5874                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5875   00424E  ECFE  F021         	call	_I2C_2_Master_Idle	;wreg free
  5876   004252                     
  5877                           ;i2c.c: 57:   tmp = SSP2BUF;
  5878   004252  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5879                           
  5880                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5881   004256  ECFE  F021         	call	_I2C_2_Master_Idle	;wreg free
  5882   00425A                     
  5883                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5884   00425A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5885   00425C  B4D8               	btfsc	status,2,c
  5886   00425E  EF33  F021         	goto	u4001
  5887   004262  EF37  F021         	goto	u4000
  5888   004266                     u4001:
  5889   004266  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5890   004268  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5891   00426A  EF38  F021         	goto	u4018
  5892   00426E                     u4000:
  5893   00426E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5894   004270                     u4018:
  5895   004270  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5896   004272  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5897   004274  010E               	movlb	14	; () banked
  5898   004276  51DA               	movf	218,w,b	;volatile
  5899   004278  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5900   00427A  0BDF               	andlw	-33
  5901   00427C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5902   00427E  6FDA               	movwf	218,b	;volatile
  5903   004280                     
  5904                           ; BSR set to: 14
  5905                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5906   004280  89DA               	bsf	218,4,b	;volatile
  5907   004282                     
  5908                           ; BSR set to: 14
  5909                           ;i2c.c: 61:   return tmp;
  5910   004282  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5911   004284                     
  5912                           ; BSR set to: 14
  5913   004284  0012               	return		;funcret
  5914   004286                     __end_of_I2C_2_Master_Read:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _I2C_2_Master_Idle *****************
  5918 ;; Defined at:
  5919 ;;		line 22 in file "i2c.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;Total ram usage:        1 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_I2C_2_Master_Start
  5943 ;;		_I2C_2_Master_RepStart
  5944 ;;		_I2C_2_Master_Stop
  5945 ;;		_I2C_2_Master_Write
  5946 ;;		_I2C_2_Master_Read
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text32
  5951   0043FC                     __ptext32:
  5952                           	callstack 0
  5953   0043FC                     _I2C_2_Master_Idle:
  5954                           	callstack 27
  5955   0043FC                     l240:
  5956   0043FC  010E               	movlb	14	; () banked
  5957   0043FE  B5D8               	btfsc	216,2,b	;volatile
  5958   004400  EF04  F022         	goto	u3851
  5959   004404  EF06  F022         	goto	u3850
  5960   004408                     u3851:
  5961   004408  EFFE  F021         	goto	l240
  5962   00440C                     u3850:
  5963   00440C                     
  5964                           ; BSR set to: 14
  5965   00440C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5966   004410  0E1F               	movlw	31
  5967   004412  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5968   004414  A4D8               	btfss	status,2,c
  5969   004416  EF0F  F022         	goto	u3861
  5970   00441A  EF11  F022         	goto	u3860
  5971   00441E                     u3861:
  5972   00441E  EFFE  F021         	goto	l240
  5973   004422                     u3860:
  5974   004422                     
  5975                           ; BSR set to: 14
  5976   004422  0012               	return		;funcret
  5977   004424                     __end_of_I2C_2_Master_Idle:
  5978                           	callstack 0
  5979                           
  5980 ;; *************** function _RGB_to_HSV *****************
  5981 ;; Defined at:
  5982 ;;		line 128 in file "color.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  R               4   10[BANK0 ] float 
  5985 ;;  G               4   14[BANK0 ] float 
  5986 ;;  B               4   18[BANK0 ] float 
  5987 ;;  C               4   22[BANK0 ] float 
  5988 ;;  H               1   26[BANK0 ] PTR float 
  5989 ;;		 -> color_cardCheck@H(4), 
  5990 ;;  S               1   27[BANK0 ] PTR float 
  5991 ;;		 -> color_cardCheck@S(4), 
  5992 ;;  V               1   28[BANK0 ] PTR float 
  5993 ;;		 -> color_cardCheck@V(4), 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  b               4   93[BANK0 ] float 
  5996 ;;  g               4   89[BANK0 ] float 
  5997 ;;  r               4   85[BANK0 ] float 
  5998 ;;  maxRGB          4   81[BANK0 ] float 
  5999 ;;  deltaRGB        4   77[BANK0 ] float 
  6000 ;;  H_temp          4   73[BANK0 ] float 
  6001 ;;  minRGB          4   57[BANK0 ] float 
  6002 ;;  c_norm          4   29[BANK0 ] float 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      void 
  6005 ;; Registers used:
  6006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6012 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6015 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;Total ram usage:       87 bytes
  6017 ;; Hardware stack levels used: 1
  6018 ;; Hardware stack levels required when called: 3
  6019 ;; This function calls:
  6020 ;;		___fladd
  6021 ;;		___fldiv
  6022 ;;		___fleq
  6023 ;;		___flge
  6024 ;;		___flmul
  6025 ;;		___flsub
  6026 ;;		_custom_floatmodulo
  6027 ;; This function is called by:
  6028 ;;		_color_cardCheck
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text33
  6033   00180E                     __ptext33:
  6034                           	callstack 0
  6035   00180E                     _RGB_to_HSV:
  6036                           	callstack 26
  6037   00180E                     
  6038                           ;color.c: 131:     float r = R/65535.0;
  6039   00180E  C06A  F03B         	movff	RGB_to_HSV@R,___fldiv@b
  6040   001812  C06B  F03C         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  6041   001816  C06C  F03D         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  6042   00181A  C06D  F03E         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  6043   00181E  0E00               	movlw	0
  6044   001820  6E3F               	movwf	___fldiv@a^0,c
  6045   001822  0EFF               	movlw	255
  6046   001824  6E40               	movwf	(___fldiv@a+1)^0,c
  6047   001826  0E7F               	movlw	127
  6048   001828  6E41               	movwf	(___fldiv@a+2)^0,c
  6049   00182A  0E47               	movlw	71
  6050   00182C  6E42               	movwf	(___fldiv@a+3)^0,c
  6051   00182E  ECB7  F017         	call	___fldiv	;wreg free
  6052   001832  C03B  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  6053   001836  C03C  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  6054   00183A  C03D  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  6055   00183E  C03E  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  6056                           
  6057                           ;color.c: 132:     float g = G/65535.0;
  6058   001842  C06E  F03B         	movff	RGB_to_HSV@G,___fldiv@b
  6059   001846  C06F  F03C         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  6060   00184A  C070  F03D         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  6061   00184E  C071  F03E         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  6062   001852  0E00               	movlw	0
  6063   001854  6E3F               	movwf	___fldiv@a^0,c
  6064   001856  0EFF               	movlw	255
  6065   001858  6E40               	movwf	(___fldiv@a+1)^0,c
  6066   00185A  0E7F               	movlw	127
  6067   00185C  6E41               	movwf	(___fldiv@a+2)^0,c
  6068   00185E  0E47               	movlw	71
  6069   001860  6E42               	movwf	(___fldiv@a+3)^0,c
  6070   001862  ECB7  F017         	call	___fldiv	;wreg free
  6071   001866  C03B  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  6072   00186A  C03C  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  6073   00186E  C03D  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  6074   001872  C03E  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  6075                           
  6076                           ;color.c: 133:     float b = B/65535.0;
  6077   001876  C072  F03B         	movff	RGB_to_HSV@B,___fldiv@b
  6078   00187A  C073  F03C         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  6079   00187E  C074  F03D         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  6080   001882  C075  F03E         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  6081   001886  0E00               	movlw	0
  6082   001888  6E3F               	movwf	___fldiv@a^0,c
  6083   00188A  0EFF               	movlw	255
  6084   00188C  6E40               	movwf	(___fldiv@a+1)^0,c
  6085   00188E  0E7F               	movlw	127
  6086   001890  6E41               	movwf	(___fldiv@a+2)^0,c
  6087   001892  0E47               	movlw	71
  6088   001894  6E42               	movwf	(___fldiv@a+3)^0,c
  6089   001896  ECB7  F017         	call	___fldiv	;wreg free
  6090   00189A  C03B  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  6091   00189E  C03C  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  6092   0018A2  C03D  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  6093   0018A6  C03E  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  6094                           
  6095                           ;color.c: 138:     float c_norm = 1.0 /(C/65535.0);
  6096   0018AA  0E00               	movlw	0
  6097   0018AC  6E3F               	movwf	___fldiv@a^0,c
  6098   0018AE  0EFF               	movlw	255
  6099   0018B0  6E40               	movwf	(___fldiv@a+1)^0,c
  6100   0018B2  0E7F               	movlw	127
  6101   0018B4  6E41               	movwf	(___fldiv@a+2)^0,c
  6102   0018B6  0E47               	movlw	71
  6103   0018B8  6E42               	movwf	(___fldiv@a+3)^0,c
  6104   0018BA  C076  F03B         	movff	RGB_to_HSV@C,___fldiv@b
  6105   0018BE  C077  F03C         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  6106   0018C2  C078  F03D         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  6107   0018C6  C079  F03E         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  6108   0018CA  ECB7  F017         	call	___fldiv	;wreg free
  6109   0018CE  C03B  F081         	movff	?___fldiv,_RGB_to_HSV$1653
  6110   0018D2  C03C  F082         	movff	?___fldiv+1,_RGB_to_HSV$1653+1
  6111   0018D6  C03D  F083         	movff	?___fldiv+2,_RGB_to_HSV$1653+2
  6112   0018DA  C03E  F084         	movff	?___fldiv+3,_RGB_to_HSV$1653+3
  6113                           
  6114                           ;color.c: 138:     float c_norm = 1.0 /(C/65535.0);
  6115   0018DE  0E00               	movlw	0
  6116   0018E0  6E3B               	movwf	___fldiv@b^0,c
  6117   0018E2  0E00               	movlw	0
  6118   0018E4  6E3C               	movwf	(___fldiv@b+1)^0,c
  6119   0018E6  0E80               	movlw	128
  6120   0018E8  6E3D               	movwf	(___fldiv@b+2)^0,c
  6121   0018EA  0E3F               	movlw	63
  6122   0018EC  6E3E               	movwf	(___fldiv@b+3)^0,c
  6123   0018EE  C081  F03F         	movff	_RGB_to_HSV$1653,___fldiv@a
  6124   0018F2  C082  F040         	movff	_RGB_to_HSV$1653+1,___fldiv@a+1
  6125   0018F6  C083  F041         	movff	_RGB_to_HSV$1653+2,___fldiv@a+2
  6126   0018FA  C084  F042         	movff	_RGB_to_HSV$1653+3,___fldiv@a+3
  6127   0018FE  ECB7  F017         	call	___fldiv	;wreg free
  6128   001902  C03B  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  6129   001906  C03C  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  6130   00190A  C03D  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  6131   00190E  C03E  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  6132                           
  6133                           ;color.c: 141:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  6134   001912  C0B9  F033         	movff	RGB_to_HSV@g,___flge@ff1
  6135   001916  C0BA  F034         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6136   00191A  C0BB  F035         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6137   00191E  C0BC  F036         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6138   001922  C0B5  F037         	movff	RGB_to_HSV@r,___flge@ff2
  6139   001926  C0B6  F038         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6140   00192A  C0B7  F039         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6141   00192E  C0B8  F03A         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6142   001932  EC90  F01D         	call	___flge	;wreg free
  6143   001936  A0D8               	btfss	status,0,c
  6144   001938  EFA0  F00C         	goto	u6151
  6145   00193C  EFA2  F00C         	goto	u6150
  6146   001940                     u6151:
  6147   001940  EFD7  F00C         	goto	l5009
  6148   001944                     u6150:
  6149   001944  C0BD  F033         	movff	RGB_to_HSV@b,___flge@ff1
  6150   001948  C0BE  F034         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6151   00194C  C0BF  F035         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6152   001950  C0C0  F036         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6153   001954  C0B9  F037         	movff	RGB_to_HSV@g,___flge@ff2
  6154   001958  C0BA  F038         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6155   00195C  C0BB  F039         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6156   001960  C0BC  F03A         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6157   001964  EC90  F01D         	call	___flge	;wreg free
  6158   001968  A0D8               	btfss	status,0,c
  6159   00196A  EFB9  F00C         	goto	u6161
  6160   00196E  EFBB  F00C         	goto	u6160
  6161   001972                     u6161:
  6162   001972  EFC5  F00C         	goto	l77
  6163   001976                     u6160:
  6164   001976  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$336
  6165   00197A  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$336+1
  6166   00197E  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$336+2
  6167   001982  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$336+3
  6168   001986  EFCD  F00C         	goto	l79
  6169   00198A                     l77:
  6170   00198A  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$336
  6171   00198E  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$336+1
  6172   001992  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$336+2
  6173   001996  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$336+3
  6174   00199A                     l79:
  6175   00199A  C091  F0B1         	movff	_RGB_to_HSV$336,RGB_to_HSV@maxRGB
  6176   00199E  C092  F0B2         	movff	_RGB_to_HSV$336+1,RGB_to_HSV@maxRGB+1
  6177   0019A2  C093  F0B3         	movff	_RGB_to_HSV$336+2,RGB_to_HSV@maxRGB+2
  6178   0019A6  C094  F0B4         	movff	_RGB_to_HSV$336+3,RGB_to_HSV@maxRGB+3
  6179   0019AA  EF0A  F00D         	goto	l5013
  6180   0019AE                     l5009:
  6181   0019AE  C0BD  F033         	movff	RGB_to_HSV@b,___flge@ff1
  6182   0019B2  C0BE  F034         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6183   0019B6  C0BF  F035         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6184   0019BA  C0C0  F036         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6185   0019BE  C0B5  F037         	movff	RGB_to_HSV@r,___flge@ff2
  6186   0019C2  C0B6  F038         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6187   0019C6  C0B7  F039         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6188   0019CA  C0B8  F03A         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6189   0019CE  EC90  F01D         	call	___flge	;wreg free
  6190   0019D2  A0D8               	btfss	status,0,c
  6191   0019D4  EFEE  F00C         	goto	u6171
  6192   0019D8  EFF0  F00C         	goto	u6170
  6193   0019DC                     u6171:
  6194   0019DC  EFFA  F00C         	goto	l81
  6195   0019E0                     u6170:
  6196   0019E0  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$337
  6197   0019E4  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$337+1
  6198   0019E8  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$337+2
  6199   0019EC  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$337+3
  6200   0019F0  EF02  F00D         	goto	l83
  6201   0019F4                     l81:
  6202   0019F4  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$337
  6203   0019F8  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$337+1
  6204   0019FC  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$337+2
  6205   001A00  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$337+3
  6206   001A04                     l83:
  6207   001A04  C095  F0B1         	movff	_RGB_to_HSV$337,RGB_to_HSV@maxRGB
  6208   001A08  C096  F0B2         	movff	_RGB_to_HSV$337+1,RGB_to_HSV@maxRGB+1
  6209   001A0C  C097  F0B3         	movff	_RGB_to_HSV$337+2,RGB_to_HSV@maxRGB+2
  6210   001A10  C098  F0B4         	movff	_RGB_to_HSV$337+3,RGB_to_HSV@maxRGB+3
  6211   001A14                     l5013:
  6212                           
  6213                           ;color.c: 142:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  6214   001A14  C0B5  F033         	movff	RGB_to_HSV@r,___flge@ff1
  6215   001A18  C0B6  F034         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6216   001A1C  C0B7  F035         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6217   001A20  C0B8  F036         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6218   001A24  C0B9  F037         	movff	RGB_to_HSV@g,___flge@ff2
  6219   001A28  C0BA  F038         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6220   001A2C  C0BB  F039         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6221   001A30  C0BC  F03A         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6222   001A34  EC90  F01D         	call	___flge	;wreg free
  6223   001A38  A0D8               	btfss	status,0,c
  6224   001A3A  EF21  F00D         	goto	u6181
  6225   001A3E  EF23  F00D         	goto	u6180
  6226   001A42                     u6181:
  6227   001A42  EF58  F00D         	goto	l5019
  6228   001A46                     u6180:
  6229   001A46  C0B9  F033         	movff	RGB_to_HSV@g,___flge@ff1
  6230   001A4A  C0BA  F034         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6231   001A4E  C0BB  F035         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6232   001A52  C0BC  F036         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6233   001A56  C0BD  F037         	movff	RGB_to_HSV@b,___flge@ff2
  6234   001A5A  C0BE  F038         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6235   001A5E  C0BF  F039         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6236   001A62  C0C0  F03A         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6237   001A66  EC90  F01D         	call	___flge	;wreg free
  6238   001A6A  A0D8               	btfss	status,0,c
  6239   001A6C  EF3A  F00D         	goto	u6191
  6240   001A70  EF3C  F00D         	goto	u6190
  6241   001A74                     u6191:
  6242   001A74  EF46  F00D         	goto	l89
  6243   001A78                     u6190:
  6244   001A78  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$339
  6245   001A7C  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$339+1
  6246   001A80  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$339+2
  6247   001A84  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$339+3
  6248   001A88  EF4E  F00D         	goto	l91
  6249   001A8C                     l89:
  6250   001A8C  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$339
  6251   001A90  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$339+1
  6252   001A94  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$339+2
  6253   001A98  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$339+3
  6254   001A9C                     l91:
  6255   001A9C  C09D  F099         	movff	_RGB_to_HSV$339,RGB_to_HSV@minRGB
  6256   001AA0  C09E  F09A         	movff	_RGB_to_HSV$339+1,RGB_to_HSV@minRGB+1
  6257   001AA4  C09F  F09B         	movff	_RGB_to_HSV$339+2,RGB_to_HSV@minRGB+2
  6258   001AA8  C0A0  F09C         	movff	_RGB_to_HSV$339+3,RGB_to_HSV@minRGB+3
  6259   001AAC  EF8B  F00D         	goto	l5023
  6260   001AB0                     l5019:
  6261   001AB0  C0B5  F033         	movff	RGB_to_HSV@r,___flge@ff1
  6262   001AB4  C0B6  F034         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6263   001AB8  C0B7  F035         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6264   001ABC  C0B8  F036         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6265   001AC0  C0BD  F037         	movff	RGB_to_HSV@b,___flge@ff2
  6266   001AC4  C0BE  F038         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6267   001AC8  C0BF  F039         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6268   001ACC  C0C0  F03A         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6269   001AD0  EC90  F01D         	call	___flge	;wreg free
  6270   001AD4  A0D8               	btfss	status,0,c
  6271   001AD6  EF6F  F00D         	goto	u6201
  6272   001ADA  EF71  F00D         	goto	u6200
  6273   001ADE                     u6201:
  6274   001ADE  EF7B  F00D         	goto	l93
  6275   001AE2                     u6200:
  6276   001AE2  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$340
  6277   001AE6  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$340+1
  6278   001AEA  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$340+2
  6279   001AEE  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$340+3
  6280   001AF2  EF83  F00D         	goto	l95
  6281   001AF6                     l93:
  6282   001AF6  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$340
  6283   001AFA  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$340+1
  6284   001AFE  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$340+2
  6285   001B02  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$340+3
  6286   001B06                     l95:
  6287   001B06  C0A1  F099         	movff	_RGB_to_HSV$340,RGB_to_HSV@minRGB
  6288   001B0A  C0A2  F09A         	movff	_RGB_to_HSV$340+1,RGB_to_HSV@minRGB+1
  6289   001B0E  C0A3  F09B         	movff	_RGB_to_HSV$340+2,RGB_to_HSV@minRGB+2
  6290   001B12  C0A4  F09C         	movff	_RGB_to_HSV$340+3,RGB_to_HSV@minRGB+3
  6291   001B16                     l5023:
  6292                           
  6293                           ;color.c: 143:     float deltaRGB = maxRGB - minRGB;
  6294   001B16  C0B1  F033         	movff	RGB_to_HSV@maxRGB,___flsub@b
  6295   001B1A  C0B2  F034         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  6296   001B1E  C0B3  F035         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  6297   001B22  C0B4  F036         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  6298   001B26  C099  F037         	movff	RGB_to_HSV@minRGB,___flsub@a
  6299   001B2A  C09A  F038         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  6300   001B2E  C09B  F039         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  6301   001B32  C09C  F03A         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  6302   001B36  ECFF  F020         	call	___flsub	;wreg free
  6303   001B3A  C033  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  6304   001B3E  C034  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  6305   001B42  C035  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  6306   001B46  C036  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  6307                           
  6308                           ;color.c: 148:     float H_temp;;color.c: 150:     if (deltaRGB == 0) {H_temp = 0;}
  6309   001B4A  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  6310   001B4E  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  6311   001B52  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  6312   001B56  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  6313   001B5A  0E00               	movlw	0
  6314   001B5C  6E05               	movwf	___fleq@ff2^0,c
  6315   001B5E  0E00               	movlw	0
  6316   001B60  6E06               	movwf	(___fleq@ff2+1)^0,c
  6317   001B62  0E00               	movlw	0
  6318   001B64  6E07               	movwf	(___fleq@ff2+2)^0,c
  6319   001B66  0E00               	movlw	0
  6320   001B68  6E08               	movwf	(___fleq@ff2+3)^0,c
  6321   001B6A  EC3D  F01F         	call	___fleq	;wreg free
  6322   001B6E  A0D8               	btfss	status,0,c
  6323   001B70  EFBC  F00D         	goto	u6211
  6324   001B74  EFBE  F00D         	goto	u6210
  6325   001B78                     u6211:
  6326   001B78  EFC9  F00D         	goto	l5027
  6327   001B7C                     u6210:
  6328   001B7C  0E00               	movlw	0
  6329   001B7E  0100               	movlb	0	; () banked
  6330   001B80  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  6331   001B82  0E00               	movlw	0
  6332   001B84  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  6333   001B86  0E00               	movlw	0
  6334   001B88  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  6335   001B8A  0E00               	movlw	0
  6336   001B8C  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  6337   001B8E  EF2A  F00F         	goto	l5047
  6338   001B92                     l5027:
  6339   001B92  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6340   001B96  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6341   001B9A  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6342   001B9E  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6343   001BA2  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  6344   001BA6  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  6345   001BAA  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  6346   001BAE  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  6347   001BB2  EC3D  F01F         	call	___fleq	;wreg free
  6348   001BB6  A0D8               	btfss	status,0,c
  6349   001BB8  EFE0  F00D         	goto	u6221
  6350   001BBC  EFE2  F00D         	goto	u6220
  6351   001BC0                     u6221:
  6352   001BC0  EF44  F00E         	goto	l5035
  6353   001BC4                     u6220:
  6354   001BC4  C0AD  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6355   001BC8  C0AE  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6356   001BCC  C0AF  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6357   001BD0  C0B0  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6358   001BD4  C0BD  F037         	movff	RGB_to_HSV@b,___flsub@a
  6359   001BD8  C0BE  F038         	movff	RGB_to_HSV@b+1,___flsub@a+1
  6360   001BDC  C0BF  F039         	movff	RGB_to_HSV@b+2,___flsub@a+2
  6361   001BE0  C0C0  F03A         	movff	RGB_to_HSV@b+3,___flsub@a+3
  6362   001BE4  C0B9  F033         	movff	RGB_to_HSV@g,___flsub@b
  6363   001BE8  C0BA  F034         	movff	RGB_to_HSV@g+1,___flsub@b+1
  6364   001BEC  C0BB  F035         	movff	RGB_to_HSV@g+2,___flsub@b+2
  6365   001BF0  C0BC  F036         	movff	RGB_to_HSV@g+3,___flsub@b+3
  6366   001BF4  ECFF  F020         	call	___flsub	;wreg free
  6367   001BF8  C033  F03B         	movff	?___flsub,___fldiv@b
  6368   001BFC  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  6369   001C00  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  6370   001C04  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  6371   001C08  ECB7  F017         	call	___fldiv	;wreg free
  6372   001C0C  C03B  F085         	movff	?___fldiv,_RGB_to_HSV$1654
  6373   001C10  C03C  F086         	movff	?___fldiv+1,_RGB_to_HSV$1654+1
  6374   001C14  C03D  F087         	movff	?___fldiv+2,_RGB_to_HSV$1654+2
  6375   001C18  C03E  F088         	movff	?___fldiv+3,_RGB_to_HSV$1654+3
  6376   001C1C  0E00               	movlw	0
  6377   001C1E  6E58               	movwf	custom_floatmodulo@y^0,c
  6378   001C20  0E00               	movlw	0
  6379   001C22  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  6380   001C24  0EC0               	movlw	192
  6381   001C26  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  6382   001C28  0E40               	movlw	64
  6383   001C2A  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  6384   001C2C  C085  F054         	movff	_RGB_to_HSV$1654,custom_floatmodulo@x
  6385   001C30  C086  F055         	movff	_RGB_to_HSV$1654+1,custom_floatmodulo@x+1
  6386   001C34  C087  F056         	movff	_RGB_to_HSV$1654+2,custom_floatmodulo@x+2
  6387   001C38  C088  F057         	movff	_RGB_to_HSV$1654+3,custom_floatmodulo@x+3
  6388   001C3C  EC81  F01C         	call	_custom_floatmodulo	;wreg free
  6389   001C40  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$1655
  6390   001C44  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$1655+1
  6391   001C48  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$1655+2
  6392   001C4C  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$1655+3
  6393   001C50  C089  F01A         	movff	_RGB_to_HSV$1655,___flmul@b
  6394   001C54  C08A  F01B         	movff	_RGB_to_HSV$1655+1,___flmul@b+1
  6395   001C58  C08B  F01C         	movff	_RGB_to_HSV$1655+2,___flmul@b+2
  6396   001C5C  C08C  F01D         	movff	_RGB_to_HSV$1655+3,___flmul@b+3
  6397   001C60  0E00               	movlw	0
  6398   001C62  6E1E               	movwf	___flmul@a^0,c
  6399   001C64  0E00               	movlw	0
  6400   001C66  6E1F               	movwf	(___flmul@a+1)^0,c
  6401   001C68  0E70               	movlw	112
  6402   001C6A  6E20               	movwf	(___flmul@a+2)^0,c
  6403   001C6C  0E42               	movlw	66
  6404   001C6E  6E21               	movwf	(___flmul@a+3)^0,c
  6405   001C70  ECA2  F015         	call	___flmul	;wreg free
  6406   001C74  C01A  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6407   001C78  C01B  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6408   001C7C  C01C  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6409   001C80  C01D  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6410   001C84  EF2A  F00F         	goto	l5047
  6411   001C88                     l5035:
  6412   001C88  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6413   001C8C  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6414   001C90  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6415   001C94  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6416   001C98  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  6417   001C9C  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  6418   001CA0  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  6419   001CA4  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  6420   001CA8  EC3D  F01F         	call	___fleq	;wreg free
  6421   001CAC  A0D8               	btfss	status,0,c
  6422   001CAE  EF5B  F00E         	goto	u6231
  6423   001CB2  EF5D  F00E         	goto	u6230
  6424   001CB6                     u6231:
  6425   001CB6  EFB7  F00E         	goto	l5041
  6426   001CBA                     u6230:
  6427   001CBA  C0AD  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6428   001CBE  C0AE  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6429   001CC2  C0AF  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6430   001CC6  C0B0  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6431   001CCA  C0B5  F037         	movff	RGB_to_HSV@r,___flsub@a
  6432   001CCE  C0B6  F038         	movff	RGB_to_HSV@r+1,___flsub@a+1
  6433   001CD2  C0B7  F039         	movff	RGB_to_HSV@r+2,___flsub@a+2
  6434   001CD6  C0B8  F03A         	movff	RGB_to_HSV@r+3,___flsub@a+3
  6435   001CDA  C0BD  F033         	movff	RGB_to_HSV@b,___flsub@b
  6436   001CDE  C0BE  F034         	movff	RGB_to_HSV@b+1,___flsub@b+1
  6437   001CE2  C0BF  F035         	movff	RGB_to_HSV@b+2,___flsub@b+2
  6438   001CE6  C0C0  F036         	movff	RGB_to_HSV@b+3,___flsub@b+3
  6439   001CEA  ECFF  F020         	call	___flsub	;wreg free
  6440   001CEE  C033  F03B         	movff	?___flsub,___fldiv@b
  6441   001CF2  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  6442   001CF6  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  6443   001CFA  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  6444   001CFE  ECB7  F017         	call	___fldiv	;wreg free
  6445   001D02  C03B  F0A5         	movff	?___fldiv,_RGB_to_HSV$1656
  6446   001D06  C03C  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$1656+1
  6447   001D0A  C03D  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$1656+2
  6448   001D0E  C03E  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$1656+3
  6449   001D12  0E00               	movlw	0
  6450   001D14  6E05               	movwf	___fladd@a^0,c
  6451   001D16  0E00               	movlw	0
  6452   001D18  6E06               	movwf	(___fladd@a+1)^0,c
  6453   001D1A  0E00               	movlw	0
  6454   001D1C  6E07               	movwf	(___fladd@a+2)^0,c
  6455   001D1E  0E40               	movlw	64
  6456   001D20  6E08               	movwf	(___fladd@a+3)^0,c
  6457   001D22  C0A5  F001         	movff	_RGB_to_HSV$1656,___fladd@b
  6458   001D26  C0A6  F002         	movff	_RGB_to_HSV$1656+1,___fladd@b+1
  6459   001D2A  C0A7  F003         	movff	_RGB_to_HSV$1656+2,___fladd@b+2
  6460   001D2E  C0A8  F004         	movff	_RGB_to_HSV$1656+3,___fladd@b+3
  6461   001D32  EC42  F013         	call	___fladd	;wreg free
  6462   001D36  C001  F01A         	movff	?___fladd,___flmul@b
  6463   001D3A  C002  F01B         	movff	?___fladd+1,___flmul@b+1
  6464   001D3E  C003  F01C         	movff	?___fladd+2,___flmul@b+2
  6465   001D42  C004  F01D         	movff	?___fladd+3,___flmul@b+3
  6466   001D46  0E00               	movlw	0
  6467   001D48  6E1E               	movwf	___flmul@a^0,c
  6468   001D4A  0E00               	movlw	0
  6469   001D4C  6E1F               	movwf	(___flmul@a+1)^0,c
  6470   001D4E  0E70               	movlw	112
  6471   001D50  6E20               	movwf	(___flmul@a+2)^0,c
  6472   001D52  0E42               	movlw	66
  6473   001D54  6E21               	movwf	(___flmul@a+3)^0,c
  6474   001D56  ECA2  F015         	call	___flmul	;wreg free
  6475   001D5A  C01A  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6476   001D5E  C01B  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6477   001D62  C01C  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6478   001D66  C01D  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6479   001D6A  EF2A  F00F         	goto	l5047
  6480   001D6E                     l5041:
  6481   001D6E  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6482   001D72  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6483   001D76  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6484   001D7A  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6485   001D7E  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  6486   001D82  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  6487   001D86  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  6488   001D8A  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  6489   001D8E  EC3D  F01F         	call	___fleq	;wreg free
  6490   001D92  A0D8               	btfss	status,0,c
  6491   001D94  EFCE  F00E         	goto	u6241
  6492   001D98  EFD0  F00E         	goto	u6240
  6493   001D9C                     u6241:
  6494   001D9C  EF2A  F00F         	goto	l99
  6495   001DA0                     u6240:
  6496   001DA0  C0AD  F03F         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6497   001DA4  C0AE  F040         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6498   001DA8  C0AF  F041         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6499   001DAC  C0B0  F042         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6500   001DB0  C0B9  F037         	movff	RGB_to_HSV@g,___flsub@a
  6501   001DB4  C0BA  F038         	movff	RGB_to_HSV@g+1,___flsub@a+1
  6502   001DB8  C0BB  F039         	movff	RGB_to_HSV@g+2,___flsub@a+2
  6503   001DBC  C0BC  F03A         	movff	RGB_to_HSV@g+3,___flsub@a+3
  6504   001DC0  C0B5  F033         	movff	RGB_to_HSV@r,___flsub@b
  6505   001DC4  C0B6  F034         	movff	RGB_to_HSV@r+1,___flsub@b+1
  6506   001DC8  C0B7  F035         	movff	RGB_to_HSV@r+2,___flsub@b+2
  6507   001DCC  C0B8  F036         	movff	RGB_to_HSV@r+3,___flsub@b+3
  6508   001DD0  ECFF  F020         	call	___flsub	;wreg free
  6509   001DD4  C033  F03B         	movff	?___flsub,___fldiv@b
  6510   001DD8  C034  F03C         	movff	?___flsub+1,___fldiv@b+1
  6511   001DDC  C035  F03D         	movff	?___flsub+2,___fldiv@b+2
  6512   001DE0  C036  F03E         	movff	?___flsub+3,___fldiv@b+3
  6513   001DE4  ECB7  F017         	call	___fldiv	;wreg free
  6514   001DE8  C03B  F0A5         	movff	?___fldiv,_RGB_to_HSV$1656
  6515   001DEC  C03C  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$1656+1
  6516   001DF0  C03D  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$1656+2
  6517   001DF4  C03E  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$1656+3
  6518   001DF8  0E00               	movlw	0
  6519   001DFA  6E05               	movwf	___fladd@a^0,c
  6520   001DFC  0E00               	movlw	0
  6521   001DFE  6E06               	movwf	(___fladd@a+1)^0,c
  6522   001E00  0E80               	movlw	128
  6523   001E02  6E07               	movwf	(___fladd@a+2)^0,c
  6524   001E04  0E40               	movlw	64
  6525   001E06  6E08               	movwf	(___fladd@a+3)^0,c
  6526   001E08  C0A5  F001         	movff	_RGB_to_HSV$1656,___fladd@b
  6527   001E0C  C0A6  F002         	movff	_RGB_to_HSV$1656+1,___fladd@b+1
  6528   001E10  C0A7  F003         	movff	_RGB_to_HSV$1656+2,___fladd@b+2
  6529   001E14  C0A8  F004         	movff	_RGB_to_HSV$1656+3,___fladd@b+3
  6530   001E18  EC42  F013         	call	___fladd	;wreg free
  6531   001E1C  C001  F01A         	movff	?___fladd,___flmul@b
  6532   001E20  C002  F01B         	movff	?___fladd+1,___flmul@b+1
  6533   001E24  C003  F01C         	movff	?___fladd+2,___flmul@b+2
  6534   001E28  C004  F01D         	movff	?___fladd+3,___flmul@b+3
  6535   001E2C  0E00               	movlw	0
  6536   001E2E  6E1E               	movwf	___flmul@a^0,c
  6537   001E30  0E00               	movlw	0
  6538   001E32  6E1F               	movwf	(___flmul@a+1)^0,c
  6539   001E34  0E70               	movlw	112
  6540   001E36  6E20               	movwf	(___flmul@a+2)^0,c
  6541   001E38  0E42               	movlw	66
  6542   001E3A  6E21               	movwf	(___flmul@a+3)^0,c
  6543   001E3C  ECA2  F015         	call	___flmul	;wreg free
  6544   001E40  C01A  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6545   001E44  C01B  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6546   001E48  C01C  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6547   001E4C  C01D  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6548   001E50  EF2A  F00F         	goto	l5047
  6549   001E54                     l99:
  6550   001E54                     l5047:
  6551                           
  6552                           ;color.c: 158:     if (H_temp < 0) {H_temp = H_temp + 360;}
  6553   001E54  0100               	movlb	0	; () banked
  6554   001E56  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  6555   001E58  EF32  F00F         	goto	u6250
  6556   001E5C  EF30  F00F         	goto	u6251
  6557   001E60                     u6251:
  6558   001E60  EF4C  F00F         	goto	l5051
  6559   001E64                     u6250:
  6560   001E64                     
  6561                           ; BSR set to: 0
  6562   001E64  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  6563   001E68  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  6564   001E6C  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  6565   001E70  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  6566   001E74  0E00               	movlw	0
  6567   001E76  6E05               	movwf	___fladd@a^0,c
  6568   001E78  0E00               	movlw	0
  6569   001E7A  6E06               	movwf	(___fladd@a+1)^0,c
  6570   001E7C  0EB4               	movlw	180
  6571   001E7E  6E07               	movwf	(___fladd@a+2)^0,c
  6572   001E80  0E43               	movlw	67
  6573   001E82  6E08               	movwf	(___fladd@a+3)^0,c
  6574   001E84  EC42  F013         	call	___fladd	;wreg free
  6575   001E88  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  6576   001E8C  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  6577   001E90  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  6578   001E94  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  6579   001E98                     l5051:
  6580                           
  6581                           ;color.c: 161:     *H = H_temp;
  6582   001E98  0100               	movlb	0	; () banked
  6583   001E9A  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  6584   001E9C  6ED9               	movwf	fsr2l,c
  6585   001E9E  6ADA               	clrf	fsr2h,c
  6586   001EA0  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  6587   001EA4  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  6588   001EA8  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  6589   001EAC  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  6590   001EB0                     
  6591                           ; BSR set to: 0
  6592                           ;color.c: 164:     if (maxRGB == 0) {*S = 0;}
  6593   001EB0  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6594   001EB4  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6595   001EB8  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6596   001EBC  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6597   001EC0  0E00               	movlw	0
  6598   001EC2  6E05               	movwf	___fleq@ff2^0,c
  6599   001EC4  0E00               	movlw	0
  6600   001EC6  6E06               	movwf	(___fleq@ff2+1)^0,c
  6601   001EC8  0E00               	movlw	0
  6602   001ECA  6E07               	movwf	(___fleq@ff2+2)^0,c
  6603   001ECC  0E00               	movlw	0
  6604   001ECE  6E08               	movwf	(___fleq@ff2+3)^0,c
  6605   001ED0  EC3D  F01F         	call	___fleq	;wreg free
  6606   001ED4  A0D8               	btfss	status,0,c
  6607   001ED6  EF6F  F00F         	goto	u6261
  6608   001EDA  EF71  F00F         	goto	u6260
  6609   001EDE                     u6261:
  6610   001EDE  EF7F  F00F         	goto	l5057
  6611   001EE2                     u6260:
  6612   001EE2  0100               	movlb	0	; () banked
  6613   001EE4  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6614   001EE6  6ED9               	movwf	fsr2l,c
  6615   001EE8  6ADA               	clrf	fsr2h,c
  6616   001EEA  0E00               	movlw	0
  6617   001EEC  6EDE               	movwf	postinc2,c
  6618   001EEE  0E00               	movlw	0
  6619   001EF0  6EDE               	movwf	postinc2,c
  6620   001EF2  0E00               	movlw	0
  6621   001EF4  6EDE               	movwf	postinc2,c
  6622   001EF6  0E00               	movlw	0
  6623   001EF8  6EDD               	movwf	postdec2,c
  6624   001EFA  EFAF  F00F         	goto	l5059
  6625   001EFE                     l5057:
  6626                           
  6627                           ;color.c: 167:         *S = (deltaRGB/maxRGB) * 100.0;
  6628   001EFE  C0B1  F03F         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  6629   001F02  C0B2  F040         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  6630   001F06  C0B3  F041         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  6631   001F0A  C0B4  F042         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  6632   001F0E  C0AD  F03B         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  6633   001F12  C0AE  F03C         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  6634   001F16  C0AF  F03D         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  6635   001F1A  C0B0  F03E         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  6636   001F1E  ECB7  F017         	call	___fldiv	;wreg free
  6637   001F22  C03B  F01A         	movff	?___fldiv,___flmul@b
  6638   001F26  C03C  F01B         	movff	?___fldiv+1,___flmul@b+1
  6639   001F2A  C03D  F01C         	movff	?___fldiv+2,___flmul@b+2
  6640   001F2E  C03E  F01D         	movff	?___fldiv+3,___flmul@b+3
  6641   001F32  0E00               	movlw	0
  6642   001F34  6E1E               	movwf	___flmul@a^0,c
  6643   001F36  0E00               	movlw	0
  6644   001F38  6E1F               	movwf	(___flmul@a+1)^0,c
  6645   001F3A  0EC8               	movlw	200
  6646   001F3C  6E20               	movwf	(___flmul@a+2)^0,c
  6647   001F3E  0E42               	movlw	66
  6648   001F40  6E21               	movwf	(___flmul@a+3)^0,c
  6649   001F42  ECA2  F015         	call	___flmul	;wreg free
  6650   001F46  0100               	movlb	0	; () banked
  6651   001F48  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6652   001F4A  6ED9               	movwf	fsr2l,c
  6653   001F4C  6ADA               	clrf	fsr2h,c
  6654   001F4E  C01A  FFDE         	movff	?___flmul,postinc2
  6655   001F52  C01B  FFDE         	movff	?___flmul+1,postinc2
  6656   001F56  C01C  FFDE         	movff	?___flmul+2,postinc2
  6657   001F5A  C01D  FFDE         	movff	?___flmul+3,postinc2
  6658   001F5E                     l5059:
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;color.c: 171:     *V = maxRGB * 100.0 * c_norm;
  6662   001F5E  0E00               	movlw	0
  6663   001F60  6E1E               	movwf	___flmul@a^0,c
  6664   001F62  0E00               	movlw	0
  6665   001F64  6E1F               	movwf	(___flmul@a+1)^0,c
  6666   001F66  0EC8               	movlw	200
  6667   001F68  6E20               	movwf	(___flmul@a+2)^0,c
  6668   001F6A  0E42               	movlw	66
  6669   001F6C  6E21               	movwf	(___flmul@a+3)^0,c
  6670   001F6E  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flmul@b
  6671   001F72  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  6672   001F76  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  6673   001F7A  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  6674   001F7E  ECA2  F015         	call	___flmul	;wreg free
  6675   001F82  C01A  F08D         	movff	?___flmul,_RGB_to_HSV$1657
  6676   001F86  C01B  F08E         	movff	?___flmul+1,_RGB_to_HSV$1657+1
  6677   001F8A  C01C  F08F         	movff	?___flmul+2,_RGB_to_HSV$1657+2
  6678   001F8E  C01D  F090         	movff	?___flmul+3,_RGB_to_HSV$1657+3
  6679   001F92                     
  6680                           ;color.c: 171:     *V = maxRGB * 100.0 * c_norm;
  6681   001F92  C08D  F01A         	movff	_RGB_to_HSV$1657,___flmul@b
  6682   001F96  C08E  F01B         	movff	_RGB_to_HSV$1657+1,___flmul@b+1
  6683   001F9A  C08F  F01C         	movff	_RGB_to_HSV$1657+2,___flmul@b+2
  6684   001F9E  C090  F01D         	movff	_RGB_to_HSV$1657+3,___flmul@b+3
  6685   001FA2  C07D  F01E         	movff	RGB_to_HSV@c_norm,___flmul@a
  6686   001FA6  C07E  F01F         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  6687   001FAA  C07F  F020         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  6688   001FAE  C080  F021         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  6689   001FB2  ECA2  F015         	call	___flmul	;wreg free
  6690   001FB6  0100               	movlb	0	; () banked
  6691   001FB8  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  6692   001FBA  6ED9               	movwf	fsr2l,c
  6693   001FBC  6ADA               	clrf	fsr2h,c
  6694   001FBE  C01A  FFDE         	movff	?___flmul,postinc2
  6695   001FC2  C01B  FFDE         	movff	?___flmul+1,postinc2
  6696   001FC6  C01C  FFDE         	movff	?___flmul+2,postinc2
  6697   001FCA  C01D  FFDE         	movff	?___flmul+3,postinc2
  6698   001FCE                     
  6699                           ; BSR set to: 0
  6700   001FCE  0012               	return		;funcret
  6701   001FD0                     __end_of_RGB_to_HSV:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _custom_floatmodulo *****************
  6705 ;; Defined at:
  6706 ;;		line 109 in file "color.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  x               4   83[COMRAM] float 
  6709 ;;  y               4   87[COMRAM] float 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  remainder       4    4[BANK0 ] float 
  6712 ;;  quotient        4    0[BANK0 ] float 
  6713 ;;  intPart         2    8[BANK0 ] int 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  4   83[COMRAM] float 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6723 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;Total ram usage:       18 bytes
  6728 ;; Hardware stack levels used: 1
  6729 ;; Hardware stack levels required when called: 2
  6730 ;; This function calls:
  6731 ;;		___fldiv
  6732 ;;		___fleq
  6733 ;;		___flmul
  6734 ;;		___flsub
  6735 ;;		___fltol
  6736 ;;		___xxtofl
  6737 ;; This function is called by:
  6738 ;;		_RGB_to_HSV
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text34
  6743   003902                     __ptext34:
  6744                           	callstack 0
  6745   003902                     _custom_floatmodulo:
  6746                           	callstack 26
  6747   003902                     
  6748                           ;color.c: 111:     if (y == 0.0) {
  6749   003902  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  6750   003906  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  6751   00390A  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  6752   00390E  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  6753   003912  0E00               	movlw	0
  6754   003914  6E05               	movwf	___fleq@ff2^0,c
  6755   003916  0E00               	movlw	0
  6756   003918  6E06               	movwf	(___fleq@ff2+1)^0,c
  6757   00391A  0E00               	movlw	0
  6758   00391C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6759   00391E  0E00               	movlw	0
  6760   003920  6E08               	movwf	(___fleq@ff2+3)^0,c
  6761   003922  EC3D  F01F         	call	___fleq	;wreg free
  6762   003926  A0D8               	btfss	status,0,c
  6763   003928  EF98  F01C         	goto	u6131
  6764   00392C  EF9A  F01C         	goto	u6130
  6765   003930                     u6131:
  6766   003930  EFA4  F01C         	goto	l4985
  6767   003934                     u6130:
  6768   003934                     
  6769                           ;color.c: 112:         return 0.0;
  6770   003934  0E00               	movlw	0
  6771   003936  6E54               	movwf	?_custom_floatmodulo^0,c
  6772   003938  0E00               	movlw	0
  6773   00393A  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  6774   00393C  0E00               	movlw	0
  6775   00393E  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  6776   003940  0E00               	movlw	0
  6777   003942  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  6778   003944  EF0C  F01D         	goto	l69
  6779   003948                     l4985:
  6780                           
  6781                           ;color.c: 116:     float quotient = x / y;
  6782   003948  C054  F03B         	movff	custom_floatmodulo@x,___fldiv@b
  6783   00394C  C055  F03C         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  6784   003950  C056  F03D         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  6785   003954  C057  F03E         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  6786   003958  C058  F03F         	movff	custom_floatmodulo@y,___fldiv@a
  6787   00395C  C059  F040         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  6788   003960  C05A  F041         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  6789   003964  C05B  F042         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  6790   003968  ECB7  F017         	call	___fldiv	;wreg free
  6791   00396C  C03B  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  6792   003970  C03C  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  6793   003974  C03D  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  6794   003978  C03E  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  6795                           
  6796                           ;color.c: 119:     int intPart = (int)quotient;
  6797   00397C  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  6798   003980  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  6799   003984  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  6800   003988  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  6801   00398C  EC0D  F01D         	call	___fltol	;wreg free
  6802   003990  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  6803   003994  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  6804   003998                     
  6805                           ;color.c: 122:     float remainder = x - intPart * y;
  6806   003998  C054  F033         	movff	custom_floatmodulo@x,___flsub@b
  6807   00399C  C055  F034         	movff	custom_floatmodulo@x+1,___flsub@b+1
  6808   0039A0  C056  F035         	movff	custom_floatmodulo@x+2,___flsub@b+2
  6809   0039A4  C057  F036         	movff	custom_floatmodulo@x+3,___flsub@b+3
  6810   0039A8  C058  F01E         	movff	custom_floatmodulo@y,___flmul@a
  6811   0039AC  C059  F01F         	movff	custom_floatmodulo@y+1,___flmul@a+1
  6812   0039B0  C05A  F020         	movff	custom_floatmodulo@y+2,___flmul@a+2
  6813   0039B4  C05B  F021         	movff	custom_floatmodulo@y+3,___flmul@a+3
  6814   0039B8  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  6815   0039BC  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  6816   0039C0  0E00               	movlw	0
  6817   0039C2  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  6818   0039C4  0EFF               	movlw	-1
  6819   0039C6  6E0E               	movwf	(___xxtofl@val+2)^0,c
  6820   0039C8  6E0F               	movwf	(___xxtofl@val+3)^0,c
  6821   0039CA  0E01               	movlw	1
  6822   0039CC  ECA7  F01B         	call	___xxtofl
  6823   0039D0  C00C  F01A         	movff	?___xxtofl,___flmul@b
  6824   0039D4  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  6825   0039D8  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  6826   0039DC  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  6827   0039E0  ECA2  F015         	call	___flmul	;wreg free
  6828   0039E4  C01A  F037         	movff	?___flmul,___flsub@a
  6829   0039E8  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  6830   0039EC  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  6831   0039F0  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  6832   0039F4  ECFF  F020         	call	___flsub	;wreg free
  6833   0039F8  C033  F064         	movff	?___flsub,custom_floatmodulo@remainder
  6834   0039FC  C034  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  6835   003A00  C035  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  6836   003A04  C036  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  6837   003A08                     
  6838                           ;color.c: 124:     return remainder;
  6839   003A08  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  6840   003A0C  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  6841   003A10  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  6842   003A14  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  6843   003A18                     l69:
  6844   003A18  0012               	return		;funcret
  6845   003A1A                     __end_of_custom_floatmodulo:
  6846                           	callstack 0
  6847                           
  6848 ;; *************** function ___xxtofl *****************
  6849 ;; Defined at:
  6850 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  sign            1    wreg     unsigned char 
  6853 ;;  val             4   11[COMRAM] long 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;  sign            1   19[COMRAM] unsigned char 
  6856 ;;  arg             4   21[COMRAM] unsigned long 
  6857 ;;  exp             1   20[COMRAM] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  4   11[COMRAM] unsigned char 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;Total ram usage:       14 bytes
  6872 ;; Hardware stack levels used: 1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_custom_floatmodulo
  6877 ;;		_color_cardCheck
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text35
  6882   00374E                     __ptext35:
  6883                           	callstack 0
  6884   00374E                     ___xxtofl:
  6885                           	callstack 29
  6886                           
  6887                           ;incstack = 0
  6888                           ;___xxtofl@sign stored from wreg
  6889   00374E  6E14               	movwf	___xxtofl@sign^0,c
  6890   003750  5014               	movf	___xxtofl@sign^0,w,c
  6891   003752  B4D8               	btfsc	status,2,c
  6892   003754  EFAE  F01B         	goto	u3871
  6893   003758  EFB0  F01B         	goto	u3870
  6894   00375C                     u3871:
  6895   00375C  EFD2  F01B         	goto	l932
  6896   003760                     u3870:
  6897   003760  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6898   003762  EFB7  F01B         	goto	u3880
  6899   003766  EFB5  F01B         	goto	u3881
  6900   00376A                     u3881:
  6901   00376A  EFD2  F01B         	goto	l932
  6902   00376E                     u3880:
  6903   00376E  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6904   003772  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6905   003776  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6906   00377A  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6907   00377E  1E10               	comf	??___xxtofl^0,f,c
  6908   003780  1E11               	comf	(??___xxtofl+1)^0,f,c
  6909   003782  1E12               	comf	(??___xxtofl+2)^0,f,c
  6910   003784  1E13               	comf	(??___xxtofl+3)^0,f,c
  6911   003786  2A10               	incf	??___xxtofl^0,f,c
  6912   003788  0E00               	movlw	0
  6913   00378A  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6914   00378C  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6915   00378E  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6916   003790  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6917   003794  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6918   003798  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6919   00379C  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6920   0037A0  EFDA  F01B         	goto	l3509
  6921   0037A4                     l932:
  6922   0037A4  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6923   0037A8  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6924   0037AC  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6925   0037B0  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6926   0037B4                     l3509:
  6927   0037B4  500C               	movf	___xxtofl@val^0,w,c
  6928   0037B6  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6929   0037B8  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6930   0037BA  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6931   0037BC  A4D8               	btfss	status,2,c
  6932   0037BE  EFE3  F01B         	goto	u3891
  6933   0037C2  EFE5  F01B         	goto	u3890
  6934   0037C6                     u3891:
  6935   0037C6  EFEF  F01B         	goto	l3515
  6936   0037CA                     u3890:
  6937   0037CA  0E00               	movlw	0
  6938   0037CC  6E0C               	movwf	?___xxtofl^0,c
  6939   0037CE  0E00               	movlw	0
  6940   0037D0  6E0D               	movwf	(?___xxtofl+1)^0,c
  6941   0037D2  0E00               	movlw	0
  6942   0037D4  6E0E               	movwf	(?___xxtofl+2)^0,c
  6943   0037D6  0E00               	movlw	0
  6944   0037D8  6E0F               	movwf	(?___xxtofl+3)^0,c
  6945   0037DA  EF80  F01C         	goto	l935
  6946   0037DE                     l3515:
  6947   0037DE  0E96               	movlw	150
  6948   0037E0  6E15               	movwf	___xxtofl@exp^0,c
  6949   0037E2  EFF9  F01B         	goto	l3519
  6950   0037E6                     l3517:
  6951   0037E6  2A15               	incf	___xxtofl@exp^0,f,c
  6952   0037E8  90D8               	bcf	status,0,c
  6953   0037EA  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6954   0037EC  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6955   0037EE  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6956   0037F0  3216               	rrcf	___xxtofl@arg^0,f,c
  6957   0037F2                     l3519:
  6958   0037F2  0E00               	movlw	0
  6959   0037F4  1416               	andwf	___xxtofl@arg^0,w,c
  6960   0037F6  6E10               	movwf	??___xxtofl^0,c
  6961   0037F8  0E00               	movlw	0
  6962   0037FA  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6963   0037FC  6E11               	movwf	(??___xxtofl+1)^0,c
  6964   0037FE  0E00               	movlw	0
  6965   003800  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6966   003802  6E12               	movwf	(??___xxtofl+2)^0,c
  6967   003804  0EFE               	movlw	254
  6968   003806  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6969   003808  6E13               	movwf	(??___xxtofl+3)^0,c
  6970   00380A  5010               	movf	??___xxtofl^0,w,c
  6971   00380C  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6972   00380E  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6973   003810  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6974   003812  A4D8               	btfss	status,2,c
  6975   003814  EF0E  F01C         	goto	u3901
  6976   003818  EF10  F01C         	goto	u3900
  6977   00381C                     u3901:
  6978   00381C  EFF3  F01B         	goto	l3517
  6979   003820                     u3900:
  6980   003820  EF1E  F01C         	goto	l939
  6981   003824                     l3521:
  6982   003824  2A15               	incf	___xxtofl@exp^0,f,c
  6983   003826  0E01               	movlw	1
  6984   003828  2616               	addwf	___xxtofl@arg^0,f,c
  6985   00382A  0E00               	movlw	0
  6986   00382C  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6987   00382E  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6988   003830  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6989   003832  90D8               	bcf	status,0,c
  6990   003834  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6991   003836  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6992   003838  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6993   00383A  3216               	rrcf	___xxtofl@arg^0,f,c
  6994   00383C                     l939:
  6995   00383C  0E00               	movlw	0
  6996   00383E  1416               	andwf	___xxtofl@arg^0,w,c
  6997   003840  6E10               	movwf	??___xxtofl^0,c
  6998   003842  0E00               	movlw	0
  6999   003844  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7000   003846  6E11               	movwf	(??___xxtofl+1)^0,c
  7001   003848  0E00               	movlw	0
  7002   00384A  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7003   00384C  6E12               	movwf	(??___xxtofl+2)^0,c
  7004   00384E  0EFF               	movlw	255
  7005   003850  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7006   003852  6E13               	movwf	(??___xxtofl+3)^0,c
  7007   003854  5010               	movf	??___xxtofl^0,w,c
  7008   003856  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7009   003858  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7010   00385A  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7011   00385C  A4D8               	btfss	status,2,c
  7012   00385E  EF33  F01C         	goto	u3911
  7013   003862  EF35  F01C         	goto	u3910
  7014   003866                     u3911:
  7015   003866  EF12  F01C         	goto	l3521
  7016   00386A                     u3910:
  7017   00386A  EF3D  F01C         	goto	l3529
  7018   00386E                     l3527:
  7019   00386E  0615               	decf	___xxtofl@exp^0,f,c
  7020   003870  90D8               	bcf	status,0,c
  7021   003872  3616               	rlcf	___xxtofl@arg^0,f,c
  7022   003874  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  7023   003876  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  7024   003878  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  7025   00387A                     l3529:
  7026   00387A  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  7027   00387C  EF42  F01C         	goto	u3921
  7028   003880  EF44  F01C         	goto	u3920
  7029   003884                     u3921:
  7030   003884  EF4C  F01C         	goto	l946
  7031   003888                     u3920:
  7032   003888  0E02               	movlw	2
  7033   00388A  6015               	cpfslt	___xxtofl@exp^0,c
  7034   00388C  EF4A  F01C         	goto	u3931
  7035   003890  EF4C  F01C         	goto	u3930
  7036   003894                     u3931:
  7037   003894  EF37  F01C         	goto	l3527
  7038   003898                     u3930:
  7039   003898                     l946:
  7040   003898  B015               	btfsc	___xxtofl@exp^0,0,c
  7041   00389A  EF51  F01C         	goto	u3941
  7042   00389E  EF53  F01C         	goto	u3940
  7043   0038A2                     u3941:
  7044   0038A2  EF54  F01C         	goto	l3535
  7045   0038A6                     u3940:
  7046   0038A6  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  7047   0038A8                     l3535:
  7048   0038A8  90D8               	bcf	status,0,c
  7049   0038AA  3215               	rrcf	___xxtofl@exp^0,f,c
  7050   0038AC  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  7051   0038B0  6A11               	clrf	(??___xxtofl+1)^0,c
  7052   0038B2  6A12               	clrf	(??___xxtofl+2)^0,c
  7053   0038B4  6A13               	clrf	(??___xxtofl+3)^0,c
  7054   0038B6  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  7055   0038BA  6A12               	clrf	(??___xxtofl+2)^0,c
  7056   0038BC  6A11               	clrf	(??___xxtofl+1)^0,c
  7057   0038BE  6A10               	clrf	??___xxtofl^0,c
  7058   0038C0  5010               	movf	??___xxtofl^0,w,c
  7059   0038C2  1216               	iorwf	___xxtofl@arg^0,f,c
  7060   0038C4  5011               	movf	(??___xxtofl+1)^0,w,c
  7061   0038C6  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  7062   0038C8  5012               	movf	(??___xxtofl+2)^0,w,c
  7063   0038CA  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  7064   0038CC  5013               	movf	(??___xxtofl+3)^0,w,c
  7065   0038CE  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  7066   0038D0  5014               	movf	___xxtofl@sign^0,w,c
  7067   0038D2  B4D8               	btfsc	status,2,c
  7068   0038D4  EF6E  F01C         	goto	u3951
  7069   0038D8  EF70  F01C         	goto	u3950
  7070   0038DC                     u3951:
  7071   0038DC  EF78  F01C         	goto	l3545
  7072   0038E0                     u3950:
  7073   0038E0  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7074   0038E2  EF77  F01C         	goto	u3960
  7075   0038E6  EF75  F01C         	goto	u3961
  7076   0038EA                     u3961:
  7077   0038EA  EF78  F01C         	goto	l3545
  7078   0038EE                     u3960:
  7079   0038EE  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  7080   0038F0                     l3545:
  7081   0038F0  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  7082   0038F4  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7083   0038F8  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7084   0038FC  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7085   003900                     l935:
  7086   003900  0012               	return		;funcret
  7087   003902                     __end_of___xxtofl:
  7088                           	callstack 0
  7089                           
  7090 ;; *************** function ___fltol *****************
  7091 ;; Defined at:
  7092 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  f1              4    0[COMRAM] unsigned char 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  exp1            1    9[COMRAM] unsigned char 
  7097 ;;  sign1           1    8[COMRAM] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  4    0[COMRAM] long 
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7110 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;Total ram usage:       10 bytes
  7112 ;; Hardware stack levels used: 1
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_custom_floatmodulo
  7117 ;;		_efgtoa
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text36
  7122   003A1A                     __ptext36:
  7123                           	callstack 0
  7124   003A1A                     ___fltol:
  7125                           	callstack 25
  7126   003A1A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7127   003A1C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7128   003A1E  6E0A               	movwf	___fltol@exp1^0,c
  7129   003A20  500A               	movf	___fltol@exp1^0,w,c
  7130   003A22  A4D8               	btfss	status,2,c
  7131   003A24  EF16  F01D         	goto	u5471
  7132   003A28  EF18  F01D         	goto	u5470
  7133   003A2C                     u5471:
  7134   003A2C  EF22  F01D         	goto	l4549
  7135   003A30                     u5470:
  7136   003A30                     l4545:
  7137   003A30  0E00               	movlw	0
  7138   003A32  6E01               	movwf	?___fltol^0,c
  7139   003A34  0E00               	movlw	0
  7140   003A36  6E02               	movwf	(?___fltol+1)^0,c
  7141   003A38  0E00               	movlw	0
  7142   003A3A  6E03               	movwf	(?___fltol+2)^0,c
  7143   003A3C  0E00               	movlw	0
  7144   003A3E  6E04               	movwf	(?___fltol+3)^0,c
  7145   003A40  EF8F  F01D         	goto	l574
  7146   003A44                     l4549:
  7147   003A44  C001  F005         	movff	___fltol@f1,??___fltol
  7148   003A48  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7149   003A4C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7150   003A50  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7151   003A54  0E20               	movlw	32
  7152   003A56  EF32  F01D         	goto	u5480
  7153   003A5A                     u5485:
  7154   003A5A  90D8               	bcf	status,0,c
  7155   003A5C  3208               	rrcf	(??___fltol+3)^0,f,c
  7156   003A5E  3207               	rrcf	(??___fltol+2)^0,f,c
  7157   003A60  3206               	rrcf	(??___fltol+1)^0,f,c
  7158   003A62  3205               	rrcf	??___fltol^0,f,c
  7159   003A64                     u5480:
  7160   003A64  2EE8               	decfsz	wreg,f,c
  7161   003A66  EF2D  F01D         	goto	u5485
  7162   003A6A  5005               	movf	??___fltol^0,w,c
  7163   003A6C  6E09               	movwf	___fltol@sign1^0,c
  7164   003A6E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7165   003A70  0EFF               	movlw	255
  7166   003A72  1601               	andwf	___fltol@f1^0,f,c
  7167   003A74  0EFF               	movlw	255
  7168   003A76  1602               	andwf	(___fltol@f1+1)^0,f,c
  7169   003A78  0EFF               	movlw	255
  7170   003A7A  1603               	andwf	(___fltol@f1+2)^0,f,c
  7171   003A7C  0E00               	movlw	0
  7172   003A7E  1604               	andwf	(___fltol@f1+3)^0,f,c
  7173   003A80  0E96               	movlw	150
  7174   003A82  5E0A               	subwf	___fltol@exp1^0,f,c
  7175   003A84  BE0A               	btfsc	___fltol@exp1^0,7,c
  7176   003A86  EF49  F01D         	goto	u5490
  7177   003A8A  EF47  F01D         	goto	u5491
  7178   003A8E                     u5491:
  7179   003A8E  EF5F  F01D         	goto	l4569
  7180   003A92                     u5490:
  7181   003A92  500A               	movf	___fltol@exp1^0,w,c
  7182   003A94  0A80               	xorlw	128
  7183   003A96  0F97               	addlw	151
  7184   003A98  B0D8               	btfsc	status,0,c
  7185   003A9A  EF51  F01D         	goto	u5501
  7186   003A9E  EF53  F01D         	goto	u5500
  7187   003AA2                     u5501:
  7188   003AA2  EF55  F01D         	goto	l4565
  7189   003AA6                     u5500:
  7190   003AA6  EF18  F01D         	goto	l4545
  7191   003AAA                     l4565:
  7192   003AAA  90D8               	bcf	status,0,c
  7193   003AAC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7194   003AAE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7195   003AB0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7196   003AB2  3201               	rrcf	___fltol@f1^0,f,c
  7197   003AB4  3E0A               	incfsz	___fltol@exp1^0,f,c
  7198   003AB6  EF55  F01D         	goto	l4565
  7199   003ABA  EF77  F01D         	goto	l4579
  7200   003ABE                     l4569:
  7201   003ABE  0E1F               	movlw	31
  7202   003AC0  640A               	cpfsgt	___fltol@exp1^0,c
  7203   003AC2  EF65  F01D         	goto	u5511
  7204   003AC6  EF67  F01D         	goto	u5510
  7205   003ACA                     u5511:
  7206   003ACA  EF6F  F01D         	goto	l4577
  7207   003ACE                     u5510:
  7208   003ACE  EF18  F01D         	goto	l4545
  7209   003AD2                     l4575:
  7210   003AD2  90D8               	bcf	status,0,c
  7211   003AD4  3601               	rlcf	___fltol@f1^0,f,c
  7212   003AD6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7213   003AD8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7214   003ADA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7215   003ADC  060A               	decf	___fltol@exp1^0,f,c
  7216   003ADE                     l4577:
  7217   003ADE  500A               	movf	___fltol@exp1^0,w,c
  7218   003AE0  A4D8               	btfss	status,2,c
  7219   003AE2  EF75  F01D         	goto	u5521
  7220   003AE6  EF77  F01D         	goto	u5520
  7221   003AEA                     u5521:
  7222   003AEA  EF69  F01D         	goto	l4575
  7223   003AEE                     u5520:
  7224   003AEE                     l4579:
  7225   003AEE  5009               	movf	___fltol@sign1^0,w,c
  7226   003AF0  B4D8               	btfsc	status,2,c
  7227   003AF2  EF7D  F01D         	goto	u5531
  7228   003AF6  EF7F  F01D         	goto	u5530
  7229   003AFA                     u5531:
  7230   003AFA  EF87  F01D         	goto	l4583
  7231   003AFE                     u5530:
  7232   003AFE  1E04               	comf	(___fltol@f1+3)^0,f,c
  7233   003B00  1E03               	comf	(___fltol@f1+2)^0,f,c
  7234   003B02  1E02               	comf	(___fltol@f1+1)^0,f,c
  7235   003B04  6C01               	negf	___fltol@f1^0,c
  7236   003B06  0E00               	movlw	0
  7237   003B08  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7238   003B0A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7239   003B0C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7240   003B0E                     l4583:
  7241   003B0E  C001  F001         	movff	___fltol@f1,?___fltol
  7242   003B12  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7243   003B16  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7244   003B1A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7245   003B1E                     l574:
  7246   003B1E  0012               	return		;funcret
  7247   003B20                     __end_of___fltol:
  7248                           	callstack 0
  7249                           
  7250 ;; *************** function ___flsub *****************
  7251 ;; Defined at:
  7252 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  b               4   50[COMRAM] long 
  7255 ;;  a               4   54[COMRAM] long 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  4   50[COMRAM] long 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7267 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7270 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;Total ram usage:        8 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 1
  7274 ;; This function calls:
  7275 ;;		___fladd
  7276 ;; This function is called by:
  7277 ;;		_custom_floatmodulo
  7278 ;;		_RGB_to_HSV
  7279 ;;		_efgtoa
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text37
  7284   0041FE                     __ptext37:
  7285                           	callstack 0
  7286   0041FE                     ___flsub:
  7287                           	callstack 24
  7288   0041FE  0E00               	movlw	0
  7289   004200  1A37               	xorwf	___flsub@a^0,f,c
  7290   004202  0E00               	movlw	0
  7291   004204  1A38               	xorwf	(___flsub@a+1)^0,f,c
  7292   004206  0E00               	movlw	0
  7293   004208  1A39               	xorwf	(___flsub@a+2)^0,f,c
  7294   00420A  0E80               	movlw	128
  7295   00420C  1A3A               	xorwf	(___flsub@a+3)^0,f,c
  7296   00420E  C033  F001         	movff	___flsub@b,___fladd@b
  7297   004212  C034  F002         	movff	___flsub@b+1,___fladd@b+1
  7298   004216  C035  F003         	movff	___flsub@b+2,___fladd@b+2
  7299   00421A  C036  F004         	movff	___flsub@b+3,___fladd@b+3
  7300   00421E  C037  F005         	movff	___flsub@a,___fladd@a
  7301   004222  C038  F006         	movff	___flsub@a+1,___fladd@a+1
  7302   004226  C039  F007         	movff	___flsub@a+2,___fladd@a+2
  7303   00422A  C03A  F008         	movff	___flsub@a+3,___fladd@a+3
  7304   00422E  EC42  F013         	call	___fladd	;wreg free
  7305   004232  C001  F033         	movff	?___fladd,?___flsub
  7306   004236  C002  F034         	movff	?___fladd+1,?___flsub+1
  7307   00423A  C003  F035         	movff	?___fladd+2,?___flsub+2
  7308   00423E  C004  F036         	movff	?___fladd+3,?___flsub+3
  7309   004242  0012               	return		;funcret
  7310   004244                     __end_of___flsub:
  7311                           	callstack 0
  7312                           
  7313 ;; *************** function ___fladd *****************
  7314 ;; Defined at:
  7315 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  b               4    0[COMRAM] long 
  7318 ;;  a               4    4[COMRAM] long 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  grs             1   15[COMRAM] unsigned char 
  7321 ;;  bexp            1   14[COMRAM] unsigned char 
  7322 ;;  aexp            1   13[COMRAM] unsigned char 
  7323 ;;  signs           1   12[COMRAM] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  4    0[COMRAM] unsigned char 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7333 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:       16 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_RGB_to_HSV
  7343 ;;		___flsub
  7344 ;;		_efgtoa
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text38
  7349   002684                     __ptext38:
  7350                           	callstack 0
  7351   002684                     ___fladd:
  7352                           	callstack 24
  7353   002684  5004               	movf	(___fladd@b+3)^0,w,c
  7354   002686  0B80               	andlw	128
  7355   002688  6E0D               	movwf	___fladd@signs^0,c
  7356   00268A  5004               	movf	(___fladd@b+3)^0,w,c
  7357   00268C  2404               	addwf	(___fladd@b+3)^0,w,c
  7358   00268E  6E0F               	movwf	___fladd@bexp^0,c
  7359   002690  AE03               	btfss	(___fladd@b+2)^0,7,c
  7360   002692  EF4D  F013         	goto	u4561
  7361   002696  EF4F  F013         	goto	u4560
  7362   00269A                     u4561:
  7363   00269A  EF50  F013         	goto	l4013
  7364   00269E                     u4560:
  7365   00269E  800F               	bsf	___fladd@bexp^0,0,c
  7366   0026A0                     l4013:
  7367   0026A0  500F               	movf	___fladd@bexp^0,w,c
  7368   0026A2  B4D8               	btfsc	status,2,c
  7369   0026A4  EF56  F013         	goto	u4571
  7370   0026A8  EF58  F013         	goto	u4570
  7371   0026AC                     u4571:
  7372   0026AC  EF6D  F013         	goto	l4023
  7373   0026B0                     u4570:
  7374   0026B0  280F               	incf	___fladd@bexp^0,w,c
  7375   0026B2  A4D8               	btfss	status,2,c
  7376   0026B4  EF5E  F013         	goto	u4581
  7377   0026B8  EF60  F013         	goto	u4580
  7378   0026BC                     u4581:
  7379   0026BC  EF68  F013         	goto	l4019
  7380   0026C0                     u4580:
  7381   0026C0  0E00               	movlw	0
  7382   0026C2  6E01               	movwf	___fladd@b^0,c
  7383   0026C4  0E00               	movlw	0
  7384   0026C6  6E02               	movwf	(___fladd@b+1)^0,c
  7385   0026C8  0E00               	movlw	0
  7386   0026CA  6E03               	movwf	(___fladd@b+2)^0,c
  7387   0026CC  0E00               	movlw	0
  7388   0026CE  6E04               	movwf	(___fladd@b+3)^0,c
  7389   0026D0                     l4019:
  7390   0026D0  8E03               	bsf	(___fladd@b+2)^0,7,c
  7391   0026D2  0E00               	movlw	0
  7392   0026D4  6E04               	movwf	(___fladd@b+3)^0,c
  7393   0026D6  EF75  F013         	goto	l4025
  7394   0026DA                     l4023:
  7395   0026DA  0E00               	movlw	0
  7396   0026DC  6E01               	movwf	___fladd@b^0,c
  7397   0026DE  0E00               	movlw	0
  7398   0026E0  6E02               	movwf	(___fladd@b+1)^0,c
  7399   0026E2  0E00               	movlw	0
  7400   0026E4  6E03               	movwf	(___fladd@b+2)^0,c
  7401   0026E6  0E00               	movlw	0
  7402   0026E8  6E04               	movwf	(___fladd@b+3)^0,c
  7403   0026EA                     l4025:
  7404   0026EA  5008               	movf	(___fladd@a+3)^0,w,c
  7405   0026EC  0B80               	andlw	128
  7406   0026EE  6E0E               	movwf	___fladd@aexp^0,c
  7407   0026F0  500D               	movf	___fladd@signs^0,w,c
  7408   0026F2  180E               	xorwf	___fladd@aexp^0,w,c
  7409   0026F4  B4D8               	btfsc	status,2,c
  7410   0026F6  EF7F  F013         	goto	u4591
  7411   0026FA  EF81  F013         	goto	u4590
  7412   0026FE                     u4591:
  7413   0026FE  EF82  F013         	goto	l4031
  7414   002702                     u4590:
  7415   002702  8C0D               	bsf	___fladd@signs^0,6,c
  7416   002704                     l4031:
  7417   002704  5008               	movf	(___fladd@a+3)^0,w,c
  7418   002706  2408               	addwf	(___fladd@a+3)^0,w,c
  7419   002708  6E0E               	movwf	___fladd@aexp^0,c
  7420   00270A  AE07               	btfss	(___fladd@a+2)^0,7,c
  7421   00270C  EF8A  F013         	goto	u4601
  7422   002710  EF8C  F013         	goto	u4600
  7423   002714                     u4601:
  7424   002714  EF8D  F013         	goto	l4037
  7425   002718                     u4600:
  7426   002718  800E               	bsf	___fladd@aexp^0,0,c
  7427   00271A                     l4037:
  7428   00271A  500E               	movf	___fladd@aexp^0,w,c
  7429   00271C  B4D8               	btfsc	status,2,c
  7430   00271E  EF93  F013         	goto	u4611
  7431   002722  EF95  F013         	goto	u4610
  7432   002726                     u4611:
  7433   002726  EFAA  F013         	goto	l4047
  7434   00272A                     u4610:
  7435   00272A  280E               	incf	___fladd@aexp^0,w,c
  7436   00272C  A4D8               	btfss	status,2,c
  7437   00272E  EF9B  F013         	goto	u4621
  7438   002732  EF9D  F013         	goto	u4620
  7439   002736                     u4621:
  7440   002736  EFA5  F013         	goto	l4043
  7441   00273A                     u4620:
  7442   00273A  0E00               	movlw	0
  7443   00273C  6E05               	movwf	___fladd@a^0,c
  7444   00273E  0E00               	movlw	0
  7445   002740  6E06               	movwf	(___fladd@a+1)^0,c
  7446   002742  0E00               	movlw	0
  7447   002744  6E07               	movwf	(___fladd@a+2)^0,c
  7448   002746  0E00               	movlw	0
  7449   002748  6E08               	movwf	(___fladd@a+3)^0,c
  7450   00274A                     l4043:
  7451   00274A  8E07               	bsf	(___fladd@a+2)^0,7,c
  7452   00274C  0E00               	movlw	0
  7453   00274E  6E08               	movwf	(___fladd@a+3)^0,c
  7454   002750  EFB2  F013         	goto	l4049
  7455   002754                     l4047:
  7456   002754  0E00               	movlw	0
  7457   002756  6E05               	movwf	___fladd@a^0,c
  7458   002758  0E00               	movlw	0
  7459   00275A  6E06               	movwf	(___fladd@a+1)^0,c
  7460   00275C  0E00               	movlw	0
  7461   00275E  6E07               	movwf	(___fladd@a+2)^0,c
  7462   002760  0E00               	movlw	0
  7463   002762  6E08               	movwf	(___fladd@a+3)^0,c
  7464   002764                     l4049:
  7465   002764  500F               	movf	___fladd@bexp^0,w,c
  7466   002766  5C0E               	subwf	___fladd@aexp^0,w,c
  7467   002768  B0D8               	btfsc	status,0,c
  7468   00276A  EFB9  F013         	goto	u4631
  7469   00276E  EFBB  F013         	goto	u4630
  7470   002772                     u4631:
  7471   002772  EFE2  F013         	goto	l4085
  7472   002776                     u4630:
  7473   002776  AC0D               	btfss	___fladd@signs^0,6,c
  7474   002778  EFC0  F013         	goto	u4641
  7475   00277C  EFC2  F013         	goto	u4640
  7476   002780                     u4641:
  7477   002780  EFC4  F013         	goto	l4055
  7478   002784                     u4640:
  7479   002784  0E80               	movlw	128
  7480   002786  1A0D               	xorwf	___fladd@signs^0,f,c
  7481   002788                     l4055:
  7482   002788  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7483   00278C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7484   002790  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7485   002794  C001  F010         	movff	___fladd@b,___fladd@grs
  7486   002798  C005  F001         	movff	___fladd@a,___fladd@b
  7487   00279C  C010  F005         	movff	___fladd@grs,___fladd@a
  7488   0027A0  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7489   0027A4  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7490   0027A8  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7491   0027AC  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7492   0027B0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7493   0027B4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7494   0027B8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7495   0027BC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7496   0027C0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7497   0027C4                     l4085:
  7498   0027C4  0E00               	movlw	0
  7499   0027C6  6E10               	movwf	___fladd@grs^0,c
  7500   0027C8  500F               	movf	___fladd@bexp^0,w,c
  7501   0027CA  C00E  F009         	movff	___fladd@aexp,??___fladd
  7502   0027CE  6A0A               	clrf	(??___fladd+1)^0,c
  7503   0027D0  5E09               	subwf	??___fladd^0,f,c
  7504   0027D2  0E00               	movlw	0
  7505   0027D4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7506   0027D6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7507   0027D8  EFF7  F013         	goto	u4651
  7508   0027DC  500A               	movf	(??___fladd+1)^0,w,c
  7509   0027DE  E109               	bnz	u4650
  7510   0027E0  0E1A               	movlw	26
  7511   0027E2  5C09               	subwf	??___fladd^0,w,c
  7512   0027E4  A0D8               	btfss	status,0,c
  7513   0027E6  EFF7  F013         	goto	u4651
  7514   0027EA  EFF9  F013         	goto	u4650
  7515   0027EE                     u4651:
  7516   0027EE  EF30  F014         	goto	l806
  7517   0027F2                     u4650:
  7518   0027F2  5001               	movf	___fladd@b^0,w,c
  7519   0027F4  1002               	iorwf	(___fladd@b+1)^0,w,c
  7520   0027F6  1003               	iorwf	(___fladd@b+2)^0,w,c
  7521   0027F8  1004               	iorwf	(___fladd@b+3)^0,w,c
  7522   0027FA  A4D8               	btfss	status,2,c
  7523   0027FC  EF02  F014         	goto	u4661
  7524   002800  EF05  F014         	goto	u4660
  7525   002804                     u4661:
  7526   002804  0E01               	movlw	1
  7527   002806  EF06  F014         	goto	u4670
  7528   00280A                     u4660:
  7529   00280A  0E00               	movlw	0
  7530   00280C                     u4670:
  7531   00280C  6E10               	movwf	___fladd@grs^0,c
  7532   00280E  0E00               	movlw	0
  7533   002810  6E01               	movwf	___fladd@b^0,c
  7534   002812  0E00               	movlw	0
  7535   002814  6E02               	movwf	(___fladd@b+1)^0,c
  7536   002816  0E00               	movlw	0
  7537   002818  6E03               	movwf	(___fladd@b+2)^0,c
  7538   00281A  0E00               	movlw	0
  7539   00281C  6E04               	movwf	(___fladd@b+3)^0,c
  7540   00281E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7541   002822  EF39  F014         	goto	l805
  7542   002826                     l807:
  7543   002826  A010               	btfss	___fladd@grs^0,0,c
  7544   002828  EF18  F014         	goto	u4681
  7545   00282C  EF1A  F014         	goto	u4680
  7546   002830                     u4681:
  7547   002830  EF20  F014         	goto	l4097
  7548   002834                     u4680:
  7549   002834  90D8               	bcf	status,0,c
  7550   002836  3010               	rrcf	___fladd@grs^0,w,c
  7551   002838  0901               	iorlw	1
  7552   00283A  6E10               	movwf	___fladd@grs^0,c
  7553   00283C  EF22  F014         	goto	l4099
  7554   002840                     l4097:
  7555   002840  90D8               	bcf	status,0,c
  7556   002842  3210               	rrcf	___fladd@grs^0,f,c
  7557   002844                     l4099:
  7558   002844  A001               	btfss	___fladd@b^0,0,c
  7559   002846  EF27  F014         	goto	u4691
  7560   00284A  EF29  F014         	goto	u4690
  7561   00284E                     u4691:
  7562   00284E  EF2A  F014         	goto	l4103
  7563   002852                     u4690:
  7564   002852  8E10               	bsf	___fladd@grs^0,7,c
  7565   002854                     l4103:
  7566   002854  3404               	rlcf	(___fladd@b+3)^0,w,c
  7567   002856  3204               	rrcf	(___fladd@b+3)^0,f,c
  7568   002858  3203               	rrcf	(___fladd@b+2)^0,f,c
  7569   00285A  3202               	rrcf	(___fladd@b+1)^0,f,c
  7570   00285C  3201               	rrcf	___fladd@b^0,f,c
  7571   00285E  2A0F               	incf	___fladd@bexp^0,f,c
  7572   002860                     l806:
  7573   002860  500E               	movf	___fladd@aexp^0,w,c
  7574   002862  5C0F               	subwf	___fladd@bexp^0,w,c
  7575   002864  A0D8               	btfss	status,0,c
  7576   002866  EF37  F014         	goto	u4701
  7577   00286A  EF39  F014         	goto	u4700
  7578   00286E                     u4701:
  7579   00286E  EF13  F014         	goto	l807
  7580   002872                     u4700:
  7581   002872                     l805:
  7582   002872  BC0D               	btfsc	___fladd@signs^0,6,c
  7583   002874  EF3E  F014         	goto	u4711
  7584   002878  EF40  F014         	goto	u4710
  7585   00287C                     u4711:
  7586   00287C  EF80  F014         	goto	l4131
  7587   002880                     u4710:
  7588   002880  500F               	movf	___fladd@bexp^0,w,c
  7589   002882  A4D8               	btfss	status,2,c
  7590   002884  EF46  F014         	goto	u4721
  7591   002888  EF48  F014         	goto	u4720
  7592   00288C                     u4721:
  7593   00288C  EF52  F014         	goto	l4113
  7594   002890                     u4720:
  7595   002890  0E00               	movlw	0
  7596   002892  6E01               	movwf	?___fladd^0,c
  7597   002894  0E00               	movlw	0
  7598   002896  6E02               	movwf	(?___fladd+1)^0,c
  7599   002898  0E00               	movlw	0
  7600   00289A  6E03               	movwf	(?___fladd+2)^0,c
  7601   00289C  0E00               	movlw	0
  7602   00289E  6E04               	movwf	(?___fladd+3)^0,c
  7603   0028A0  EFA1  F015         	goto	l814
  7604   0028A4                     l4113:
  7605   0028A4  5005               	movf	___fladd@a^0,w,c
  7606   0028A6  2601               	addwf	___fladd@b^0,f,c
  7607   0028A8  5006               	movf	(___fladd@a+1)^0,w,c
  7608   0028AA  2202               	addwfc	(___fladd@b+1)^0,f,c
  7609   0028AC  5007               	movf	(___fladd@a+2)^0,w,c
  7610   0028AE  2203               	addwfc	(___fladd@b+2)^0,f,c
  7611   0028B0  5008               	movf	(___fladd@a+3)^0,w,c
  7612   0028B2  2204               	addwfc	(___fladd@b+3)^0,f,c
  7613   0028B4  A004               	btfss	(___fladd@b+3)^0,0,c
  7614   0028B6  EF5F  F014         	goto	u4731
  7615   0028BA  EF61  F014         	goto	u4730
  7616   0028BE                     u4731:
  7617   0028BE  EF0D  F015         	goto	l4167
  7618   0028C2                     u4730:
  7619   0028C2  A010               	btfss	___fladd@grs^0,0,c
  7620   0028C4  EF66  F014         	goto	u4741
  7621   0028C8  EF68  F014         	goto	u4740
  7622   0028CC                     u4741:
  7623   0028CC  EF6E  F014         	goto	l4121
  7624   0028D0                     u4740:
  7625   0028D0  90D8               	bcf	status,0,c
  7626   0028D2  3010               	rrcf	___fladd@grs^0,w,c
  7627   0028D4  0901               	iorlw	1
  7628   0028D6  6E10               	movwf	___fladd@grs^0,c
  7629   0028D8  EF70  F014         	goto	l4123
  7630   0028DC                     l4121:
  7631   0028DC  90D8               	bcf	status,0,c
  7632   0028DE  3210               	rrcf	___fladd@grs^0,f,c
  7633   0028E0                     l4123:
  7634   0028E0  A001               	btfss	___fladd@b^0,0,c
  7635   0028E2  EF75  F014         	goto	u4751
  7636   0028E6  EF77  F014         	goto	u4750
  7637   0028EA                     u4751:
  7638   0028EA  EF78  F014         	goto	l4127
  7639   0028EE                     u4750:
  7640   0028EE  8E10               	bsf	___fladd@grs^0,7,c
  7641   0028F0                     l4127:
  7642   0028F0  3404               	rlcf	(___fladd@b+3)^0,w,c
  7643   0028F2  3204               	rrcf	(___fladd@b+3)^0,f,c
  7644   0028F4  3203               	rrcf	(___fladd@b+2)^0,f,c
  7645   0028F6  3202               	rrcf	(___fladd@b+1)^0,f,c
  7646   0028F8  3201               	rrcf	___fladd@b^0,f,c
  7647   0028FA  2A0F               	incf	___fladd@bexp^0,f,c
  7648   0028FC  EF0D  F015         	goto	l4167
  7649   002900                     l4131:
  7650   002900  5005               	movf	___fladd@a^0,w,c
  7651   002902  5C01               	subwf	___fladd@b^0,w,c
  7652   002904  5006               	movf	(___fladd@a+1)^0,w,c
  7653   002906  5802               	subwfb	(___fladd@b+1)^0,w,c
  7654   002908  5007               	movf	(___fladd@a+2)^0,w,c
  7655   00290A  5803               	subwfb	(___fladd@b+2)^0,w,c
  7656   00290C  5004               	movf	(___fladd@b+3)^0,w,c
  7657   00290E  0A80               	xorlw	128
  7658   002910  6E09               	movwf	??___fladd^0,c
  7659   002912  5008               	movf	(___fladd@a+3)^0,w,c
  7660   002914  0A80               	xorlw	128
  7661   002916  5809               	subwfb	??___fladd^0,w,c
  7662   002918  B0D8               	btfsc	status,0,c
  7663   00291A  EF91  F014         	goto	u4761
  7664   00291E  EF93  F014         	goto	u4760
  7665   002922                     u4761:
  7666   002922  EFBE  F014         	goto	l4141
  7667   002926                     u4760:
  7668   002926  5001               	movf	___fladd@b^0,w,c
  7669   002928  5C05               	subwf	___fladd@a^0,w,c
  7670   00292A  6E09               	movwf	??___fladd^0,c
  7671   00292C  5002               	movf	(___fladd@b+1)^0,w,c
  7672   00292E  5806               	subwfb	(___fladd@a+1)^0,w,c
  7673   002930  6E0A               	movwf	(??___fladd+1)^0,c
  7674   002932  5003               	movf	(___fladd@b+2)^0,w,c
  7675   002934  5807               	subwfb	(___fladd@a+2)^0,w,c
  7676   002936  6E0B               	movwf	(??___fladd+2)^0,c
  7677   002938  5004               	movf	(___fladd@b+3)^0,w,c
  7678   00293A  5808               	subwfb	(___fladd@a+3)^0,w,c
  7679   00293C  6E0C               	movwf	(??___fladd+3)^0,c
  7680   00293E  0EFF               	movlw	255
  7681   002940  2409               	addwf	??___fladd^0,w,c
  7682   002942  6E01               	movwf	___fladd@b^0,c
  7683   002944  0EFF               	movlw	255
  7684   002946  200A               	addwfc	(??___fladd+1)^0,w,c
  7685   002948  6E02               	movwf	(___fladd@b+1)^0,c
  7686   00294A  0EFF               	movlw	255
  7687   00294C  200B               	addwfc	(??___fladd+2)^0,w,c
  7688   00294E  6E03               	movwf	(___fladd@b+2)^0,c
  7689   002950  0EFF               	movlw	255
  7690   002952  200C               	addwfc	(??___fladd+3)^0,w,c
  7691   002954  6E04               	movwf	(___fladd@b+3)^0,c
  7692   002956  0E80               	movlw	128
  7693   002958  1A0D               	xorwf	___fladd@signs^0,f,c
  7694   00295A  6C10               	negf	___fladd@grs^0,c
  7695   00295C  5010               	movf	___fladd@grs^0,w,c
  7696   00295E  A4D8               	btfss	status,2,c
  7697   002960  EFB4  F014         	goto	u4771
  7698   002964  EFB6  F014         	goto	u4770
  7699   002968                     u4771:
  7700   002968  EFC6  F014         	goto	l822
  7701   00296C                     u4770:
  7702   00296C  0E01               	movlw	1
  7703   00296E  2601               	addwf	___fladd@b^0,f,c
  7704   002970  0E00               	movlw	0
  7705   002972  2202               	addwfc	(___fladd@b+1)^0,f,c
  7706   002974  2203               	addwfc	(___fladd@b+2)^0,f,c
  7707   002976  2204               	addwfc	(___fladd@b+3)^0,f,c
  7708   002978  EFC6  F014         	goto	l822
  7709   00297C                     l4141:
  7710   00297C  5005               	movf	___fladd@a^0,w,c
  7711   00297E  5E01               	subwf	___fladd@b^0,f,c
  7712   002980  5006               	movf	(___fladd@a+1)^0,w,c
  7713   002982  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7714   002984  5007               	movf	(___fladd@a+2)^0,w,c
  7715   002986  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7716   002988  5008               	movf	(___fladd@a+3)^0,w,c
  7717   00298A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7718   00298C                     l822:
  7719   00298C  5001               	movf	___fladd@b^0,w,c
  7720   00298E  1002               	iorwf	(___fladd@b+1)^0,w,c
  7721   002990  1003               	iorwf	(___fladd@b+2)^0,w,c
  7722   002992  1004               	iorwf	(___fladd@b+3)^0,w,c
  7723   002994  A4D8               	btfss	status,2,c
  7724   002996  EFCF  F014         	goto	u4781
  7725   00299A  EFD1  F014         	goto	u4780
  7726   00299E                     u4781:
  7727   00299E  EF06  F015         	goto	l4165
  7728   0029A2                     u4780:
  7729   0029A2  5010               	movf	___fladd@grs^0,w,c
  7730   0029A4  A4D8               	btfss	status,2,c
  7731   0029A6  EFD7  F014         	goto	u4791
  7732   0029AA  EFD9  F014         	goto	u4790
  7733   0029AE                     u4791:
  7734   0029AE  EF06  F015         	goto	l4165
  7735   0029B2                     u4790:
  7736   0029B2  0E00               	movlw	0
  7737   0029B4  6E01               	movwf	?___fladd^0,c
  7738   0029B6  0E00               	movlw	0
  7739   0029B8  6E02               	movwf	(?___fladd+1)^0,c
  7740   0029BA  0E00               	movlw	0
  7741   0029BC  6E03               	movwf	(?___fladd+2)^0,c
  7742   0029BE  0E00               	movlw	0
  7743   0029C0  6E04               	movwf	(?___fladd+3)^0,c
  7744   0029C2  EFA1  F015         	goto	l814
  7745   0029C6                     l4149:
  7746   0029C6  90D8               	bcf	status,0,c
  7747   0029C8  3601               	rlcf	___fladd@b^0,f,c
  7748   0029CA  3602               	rlcf	(___fladd@b+1)^0,f,c
  7749   0029CC  3603               	rlcf	(___fladd@b+2)^0,f,c
  7750   0029CE  3604               	rlcf	(___fladd@b+3)^0,f,c
  7751   0029D0  AE10               	btfss	___fladd@grs^0,7,c
  7752   0029D2  EFED  F014         	goto	u4801
  7753   0029D6  EFEF  F014         	goto	u4800
  7754   0029DA                     u4801:
  7755   0029DA  EFF0  F014         	goto	l4155
  7756   0029DE                     u4800:
  7757   0029DE  8001               	bsf	___fladd@b^0,0,c
  7758   0029E0                     l4155:
  7759   0029E0  A010               	btfss	___fladd@grs^0,0,c
  7760   0029E2  EFF5  F014         	goto	u4811
  7761   0029E6  EFF7  F014         	goto	u4810
  7762   0029EA                     u4811:
  7763   0029EA  EFFB  F014         	goto	l4159
  7764   0029EE                     u4810:
  7765   0029EE  80D8               	bsf	status,0,c
  7766   0029F0  3610               	rlcf	___fladd@grs^0,f,c
  7767   0029F2  EFFD  F014         	goto	l4161
  7768   0029F6                     l4159:
  7769   0029F6  90D8               	bcf	status,0,c
  7770   0029F8  3610               	rlcf	___fladd@grs^0,f,c
  7771   0029FA                     l4161:
  7772   0029FA  500F               	movf	___fladd@bexp^0,w,c
  7773   0029FC  B4D8               	btfsc	status,2,c
  7774   0029FE  EF03  F015         	goto	u4821
  7775   002A02  EF05  F015         	goto	u4820
  7776   002A06                     u4821:
  7777   002A06  EF06  F015         	goto	l4165
  7778   002A0A                     u4820:
  7779   002A0A  060F               	decf	___fladd@bexp^0,f,c
  7780   002A0C                     l4165:
  7781   002A0C  AE03               	btfss	(___fladd@b+2)^0,7,c
  7782   002A0E  EF0B  F015         	goto	u4831
  7783   002A12  EF0D  F015         	goto	u4830
  7784   002A16                     u4831:
  7785   002A16  EFE3  F014         	goto	l4149
  7786   002A1A                     u4830:
  7787   002A1A                     l4167:
  7788   002A1A  0E00               	movlw	0
  7789   002A1C  6E0E               	movwf	___fladd@aexp^0,c
  7790   002A1E  AE10               	btfss	___fladd@grs^0,7,c
  7791   002A20  EF14  F015         	goto	u4841
  7792   002A24  EF16  F015         	goto	u4840
  7793   002A28                     u4841:
  7794   002A28  EF2E  F015         	goto	l831
  7795   002A2C                     u4840:
  7796   002A2C  C010  F009         	movff	___fladd@grs,??___fladd
  7797   002A30  0E7F               	movlw	127
  7798   002A32  1609               	andwf	??___fladd^0,f,c
  7799   002A34  B4D8               	btfsc	status,2,c
  7800   002A36  EF1F  F015         	goto	u4851
  7801   002A3A  EF21  F015         	goto	u4850
  7802   002A3E                     u4851:
  7803   002A3E  EF25  F015         	goto	l832
  7804   002A42                     u4850:
  7805   002A42                     l4173:
  7806   002A42  0E01               	movlw	1
  7807   002A44  6E0E               	movwf	___fladd@aexp^0,c
  7808   002A46  EF2E  F015         	goto	l831
  7809   002A4A                     l832:
  7810   002A4A  A001               	btfss	___fladd@b^0,0,c
  7811   002A4C  EF2A  F015         	goto	u4861
  7812   002A50  EF2C  F015         	goto	u4860
  7813   002A54                     u4861:
  7814   002A54  EF2E  F015         	goto	l831
  7815   002A58                     u4860:
  7816   002A58  EF21  F015         	goto	l4173
  7817   002A5C                     l831:
  7818   002A5C  500E               	movf	___fladd@aexp^0,w,c
  7819   002A5E  B4D8               	btfsc	status,2,c
  7820   002A60  EF34  F015         	goto	u4871
  7821   002A64  EF36  F015         	goto	u4870
  7822   002A68                     u4871:
  7823   002A68  EF61  F015         	goto	l4185
  7824   002A6C                     u4870:
  7825   002A6C  0E01               	movlw	1
  7826   002A6E  2601               	addwf	___fladd@b^0,f,c
  7827   002A70  0E00               	movlw	0
  7828   002A72  2202               	addwfc	(___fladd@b+1)^0,f,c
  7829   002A74  2203               	addwfc	(___fladd@b+2)^0,f,c
  7830   002A76  2204               	addwfc	(___fladd@b+3)^0,f,c
  7831   002A78  A004               	btfss	(___fladd@b+3)^0,0,c
  7832   002A7A  EF41  F015         	goto	u4881
  7833   002A7E  EF43  F015         	goto	u4880
  7834   002A82                     u4881:
  7835   002A82  EF61  F015         	goto	l4185
  7836   002A86                     u4880:
  7837   002A86  C001  F009         	movff	___fladd@b,??___fladd
  7838   002A8A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7839   002A8E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7840   002A92  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7841   002A96  340C               	rlcf	(??___fladd+3)^0,w,c
  7842   002A98  320C               	rrcf	(??___fladd+3)^0,f,c
  7843   002A9A  320B               	rrcf	(??___fladd+2)^0,f,c
  7844   002A9C  320A               	rrcf	(??___fladd+1)^0,f,c
  7845   002A9E  3209               	rrcf	??___fladd^0,f,c
  7846   002AA0  C009  F001         	movff	??___fladd,___fladd@b
  7847   002AA4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7848   002AA8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7849   002AAC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7850   002AB0  280F               	incf	___fladd@bexp^0,w,c
  7851   002AB2  B4D8               	btfsc	status,2,c
  7852   002AB4  EF5E  F015         	goto	u4891
  7853   002AB8  EF60  F015         	goto	u4890
  7854   002ABC                     u4891:
  7855   002ABC  EF61  F015         	goto	l4185
  7856   002AC0                     u4890:
  7857   002AC0  2A0F               	incf	___fladd@bexp^0,f,c
  7858   002AC2                     l4185:
  7859   002AC2  280F               	incf	___fladd@bexp^0,w,c
  7860   002AC4  B4D8               	btfsc	status,2,c
  7861   002AC6  EF67  F015         	goto	u4901
  7862   002ACA  EF69  F015         	goto	u4900
  7863   002ACE                     u4901:
  7864   002ACE  EF71  F015         	goto	l4189
  7865   002AD2                     u4900:
  7866   002AD2  500F               	movf	___fladd@bexp^0,w,c
  7867   002AD4  A4D8               	btfss	status,2,c
  7868   002AD6  EF6F  F015         	goto	u4911
  7869   002ADA  EF71  F015         	goto	u4910
  7870   002ADE                     u4911:
  7871   002ADE  EF83  F015         	goto	l4193
  7872   002AE2                     u4910:
  7873   002AE2                     l4189:
  7874   002AE2  0E00               	movlw	0
  7875   002AE4  6E01               	movwf	___fladd@b^0,c
  7876   002AE6  0E00               	movlw	0
  7877   002AE8  6E02               	movwf	(___fladd@b+1)^0,c
  7878   002AEA  0E00               	movlw	0
  7879   002AEC  6E03               	movwf	(___fladd@b+2)^0,c
  7880   002AEE  0E00               	movlw	0
  7881   002AF0  6E04               	movwf	(___fladd@b+3)^0,c
  7882   002AF2  500F               	movf	___fladd@bexp^0,w,c
  7883   002AF4  A4D8               	btfss	status,2,c
  7884   002AF6  EF7F  F015         	goto	u4921
  7885   002AFA  EF81  F015         	goto	u4920
  7886   002AFE                     u4921:
  7887   002AFE  EF83  F015         	goto	l4193
  7888   002B02                     u4920:
  7889   002B02  0E00               	movlw	0
  7890   002B04  6E0D               	movwf	___fladd@signs^0,c
  7891   002B06                     l4193:
  7892   002B06  A00F               	btfss	___fladd@bexp^0,0,c
  7893   002B08  EF88  F015         	goto	u4931
  7894   002B0C  EF8A  F015         	goto	u4930
  7895   002B10                     u4931:
  7896   002B10  EF8D  F015         	goto	l4197
  7897   002B14                     u4930:
  7898   002B14  8E03               	bsf	(___fladd@b+2)^0,7,c
  7899   002B16  EF8E  F015         	goto	l4199
  7900   002B1A                     l4197:
  7901   002B1A  9E03               	bcf	(___fladd@b+2)^0,7,c
  7902   002B1C                     l4199:
  7903   002B1C  90D8               	bcf	status,0,c
  7904   002B1E  300F               	rrcf	___fladd@bexp^0,w,c
  7905   002B20  6E04               	movwf	(___fladd@b+3)^0,c
  7906   002B22  AE0D               	btfss	___fladd@signs^0,7,c
  7907   002B24  EF96  F015         	goto	u4941
  7908   002B28  EF98  F015         	goto	u4940
  7909   002B2C                     u4941:
  7910   002B2C  EF99  F015         	goto	l4205
  7911   002B30                     u4940:
  7912   002B30  8E04               	bsf	(___fladd@b+3)^0,7,c
  7913   002B32                     l4205:
  7914   002B32  C001  F001         	movff	___fladd@b,?___fladd
  7915   002B36  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7916   002B3A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7917   002B3E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7918   002B42                     l814:
  7919   002B42  0012               	return		;funcret
  7920   002B44                     __end_of___fladd:
  7921                           	callstack 0
  7922                           
  7923 ;; *************** function ___flmul *****************
  7924 ;; Defined at:
  7925 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  b               4   25[COMRAM] unsigned char 
  7928 ;;  a               4   29[COMRAM] unsigned char 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  prod            4   44[COMRAM] struct .
  7931 ;;  grs             4   39[COMRAM] unsigned long 
  7932 ;;  temp            2   48[COMRAM] struct .
  7933 ;;  bexp            1   43[COMRAM] unsigned char 
  7934 ;;  aexp            1   38[COMRAM] unsigned char 
  7935 ;;  sign            1   37[COMRAM] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  4   25[COMRAM] unsigned char 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0, prodl, prodh
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7945 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7946 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7948 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;Total ram usage:       25 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; This function calls:
  7952 ;;		Nothing
  7953 ;; This function is called by:
  7954 ;;		_custom_floatmodulo
  7955 ;;		_RGB_to_HSV
  7956 ;;		_efgtoa
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text39
  7961   002B44                     __ptext39:
  7962                           	callstack 0
  7963   002B44                     ___flmul:
  7964                           	callstack 25
  7965   002B44  501D               	movf	(___flmul@b+3)^0,w,c
  7966   002B46  0B80               	andlw	128
  7967   002B48  6E26               	movwf	___flmul@sign^0,c
  7968   002B4A  501D               	movf	(___flmul@b+3)^0,w,c
  7969   002B4C  241D               	addwf	(___flmul@b+3)^0,w,c
  7970   002B4E  6E2C               	movwf	___flmul@bexp^0,c
  7971   002B50  AE1C               	btfss	(___flmul@b+2)^0,7,c
  7972   002B52  EFAD  F015         	goto	u5191
  7973   002B56  EFAF  F015         	goto	u5190
  7974   002B5A                     u5191:
  7975   002B5A  EFB0  F015         	goto	l4367
  7976   002B5E                     u5190:
  7977   002B5E  802C               	bsf	___flmul@bexp^0,0,c
  7978   002B60                     l4367:
  7979   002B60  502C               	movf	___flmul@bexp^0,w,c
  7980   002B62  B4D8               	btfsc	status,2,c
  7981   002B64  EFB6  F015         	goto	u5201
  7982   002B68  EFB8  F015         	goto	u5200
  7983   002B6C                     u5201:
  7984   002B6C  EFCB  F015         	goto	l4375
  7985   002B70                     u5200:
  7986   002B70  282C               	incf	___flmul@bexp^0,w,c
  7987   002B72  A4D8               	btfss	status,2,c
  7988   002B74  EFBE  F015         	goto	u5211
  7989   002B78  EFC0  F015         	goto	u5210
  7990   002B7C                     u5211:
  7991   002B7C  EFC8  F015         	goto	l4373
  7992   002B80                     u5210:
  7993   002B80  0E00               	movlw	0
  7994   002B82  6E1A               	movwf	___flmul@b^0,c
  7995   002B84  0E00               	movlw	0
  7996   002B86  6E1B               	movwf	(___flmul@b+1)^0,c
  7997   002B88  0E00               	movlw	0
  7998   002B8A  6E1C               	movwf	(___flmul@b+2)^0,c
  7999   002B8C  0E00               	movlw	0
  8000   002B8E  6E1D               	movwf	(___flmul@b+3)^0,c
  8001   002B90                     l4373:
  8002   002B90  8E1C               	bsf	(___flmul@b+2)^0,7,c
  8003   002B92  EFD3  F015         	goto	l4377
  8004   002B96                     l4375:
  8005   002B96  0E00               	movlw	0
  8006   002B98  6E1A               	movwf	___flmul@b^0,c
  8007   002B9A  0E00               	movlw	0
  8008   002B9C  6E1B               	movwf	(___flmul@b+1)^0,c
  8009   002B9E  0E00               	movlw	0
  8010   002BA0  6E1C               	movwf	(___flmul@b+2)^0,c
  8011   002BA2  0E00               	movlw	0
  8012   002BA4  6E1D               	movwf	(___flmul@b+3)^0,c
  8013   002BA6                     l4377:
  8014   002BA6  5021               	movf	(___flmul@a+3)^0,w,c
  8015   002BA8  0B80               	andlw	128
  8016   002BAA  1A26               	xorwf	___flmul@sign^0,f,c
  8017   002BAC  5021               	movf	(___flmul@a+3)^0,w,c
  8018   002BAE  2421               	addwf	(___flmul@a+3)^0,w,c
  8019   002BB0  6E27               	movwf	___flmul@aexp^0,c
  8020   002BB2  AE20               	btfss	(___flmul@a+2)^0,7,c
  8021   002BB4  EFDE  F015         	goto	u5221
  8022   002BB8  EFE0  F015         	goto	u5220
  8023   002BBC                     u5221:
  8024   002BBC  EFE1  F015         	goto	l4385
  8025   002BC0                     u5220:
  8026   002BC0  8027               	bsf	___flmul@aexp^0,0,c
  8027   002BC2                     l4385:
  8028   002BC2  5027               	movf	___flmul@aexp^0,w,c
  8029   002BC4  B4D8               	btfsc	status,2,c
  8030   002BC6  EFE7  F015         	goto	u5231
  8031   002BCA  EFE9  F015         	goto	u5230
  8032   002BCE                     u5231:
  8033   002BCE  EFFC  F015         	goto	l4393
  8034   002BD2                     u5230:
  8035   002BD2  2827               	incf	___flmul@aexp^0,w,c
  8036   002BD4  A4D8               	btfss	status,2,c
  8037   002BD6  EFEF  F015         	goto	u5241
  8038   002BDA  EFF1  F015         	goto	u5240
  8039   002BDE                     u5241:
  8040   002BDE  EFF9  F015         	goto	l4391
  8041   002BE2                     u5240:
  8042   002BE2  0E00               	movlw	0
  8043   002BE4  6E1E               	movwf	___flmul@a^0,c
  8044   002BE6  0E00               	movlw	0
  8045   002BE8  6E1F               	movwf	(___flmul@a+1)^0,c
  8046   002BEA  0E00               	movlw	0
  8047   002BEC  6E20               	movwf	(___flmul@a+2)^0,c
  8048   002BEE  0E00               	movlw	0
  8049   002BF0  6E21               	movwf	(___flmul@a+3)^0,c
  8050   002BF2                     l4391:
  8051   002BF2  8E20               	bsf	(___flmul@a+2)^0,7,c
  8052   002BF4  EF04  F016         	goto	l891
  8053   002BF8                     l4393:
  8054   002BF8  0E00               	movlw	0
  8055   002BFA  6E1E               	movwf	___flmul@a^0,c
  8056   002BFC  0E00               	movlw	0
  8057   002BFE  6E1F               	movwf	(___flmul@a+1)^0,c
  8058   002C00  0E00               	movlw	0
  8059   002C02  6E20               	movwf	(___flmul@a+2)^0,c
  8060   002C04  0E00               	movlw	0
  8061   002C06  6E21               	movwf	(___flmul@a+3)^0,c
  8062   002C08                     l891:
  8063   002C08  5027               	movf	___flmul@aexp^0,w,c
  8064   002C0A  B4D8               	btfsc	status,2,c
  8065   002C0C  EF0A  F016         	goto	u5251
  8066   002C10  EF0C  F016         	goto	u5250
  8067   002C14                     u5251:
  8068   002C14  EF14  F016         	goto	l4397
  8069   002C18                     u5250:
  8070   002C18  502C               	movf	___flmul@bexp^0,w,c
  8071   002C1A  A4D8               	btfss	status,2,c
  8072   002C1C  EF12  F016         	goto	u5261
  8073   002C20  EF14  F016         	goto	u5260
  8074   002C24                     u5261:
  8075   002C24  EF1E  F016         	goto	l4401
  8076   002C28                     u5260:
  8077   002C28                     l4397:
  8078   002C28  0E00               	movlw	0
  8079   002C2A  6E1A               	movwf	?___flmul^0,c
  8080   002C2C  0E00               	movlw	0
  8081   002C2E  6E1B               	movwf	(?___flmul+1)^0,c
  8082   002C30  0E00               	movlw	0
  8083   002C32  6E1C               	movwf	(?___flmul+2)^0,c
  8084   002C34  0E00               	movlw	0
  8085   002C36  6E1D               	movwf	(?___flmul+3)^0,c
  8086   002C38  EFB6  F017         	goto	l895
  8087   002C3C                     l4401:
  8088   002C3C  5020               	movf	(___flmul@a+2)^0,w,c
  8089   002C3E  021A               	mulwf	___flmul@b^0,c
  8090   002C40  CFF3 F031          	movff	prodl,___flmul@temp
  8091   002C44  CFF4 F032          	movff	prodh,___flmul@temp+1
  8092   002C48  5031               	movf	___flmul@temp^0,w,c
  8093   002C4A  6E28               	movwf	___flmul@grs^0,c
  8094   002C4C  6A29               	clrf	(___flmul@grs+1)^0,c
  8095   002C4E  6A2A               	clrf	(___flmul@grs+2)^0,c
  8096   002C50  6A2B               	clrf	(___flmul@grs+3)^0,c
  8097   002C52  5032               	movf	(___flmul@temp+1)^0,w,c
  8098   002C54  6E2D               	movwf	___flmul@prod^0,c
  8099   002C56  6A2E               	clrf	(___flmul@prod+1)^0,c
  8100   002C58  6A2F               	clrf	(___flmul@prod+2)^0,c
  8101   002C5A  6A30               	clrf	(___flmul@prod+3)^0,c
  8102   002C5C  501F               	movf	(___flmul@a+1)^0,w,c
  8103   002C5E  021B               	mulwf	(___flmul@b+1)^0,c
  8104   002C60  CFF3 F031          	movff	prodl,___flmul@temp
  8105   002C64  CFF4 F032          	movff	prodh,___flmul@temp+1
  8106   002C68  5031               	movf	___flmul@temp^0,w,c
  8107   002C6A  2628               	addwf	___flmul@grs^0,f,c
  8108   002C6C  0E00               	movlw	0
  8109   002C6E  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8110   002C70  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8111   002C72  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8112   002C74  5032               	movf	(___flmul@temp+1)^0,w,c
  8113   002C76  262D               	addwf	___flmul@prod^0,f,c
  8114   002C78  0E00               	movlw	0
  8115   002C7A  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8116   002C7C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8117   002C7E  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8118   002C80  501E               	movf	___flmul@a^0,w,c
  8119   002C82  021C               	mulwf	(___flmul@b+2)^0,c
  8120   002C84  CFF3 F031          	movff	prodl,___flmul@temp
  8121   002C88  CFF4 F032          	movff	prodh,___flmul@temp+1
  8122   002C8C  5031               	movf	___flmul@temp^0,w,c
  8123   002C8E  2628               	addwf	___flmul@grs^0,f,c
  8124   002C90  0E00               	movlw	0
  8125   002C92  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8126   002C94  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8127   002C96  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8128   002C98  5032               	movf	(___flmul@temp+1)^0,w,c
  8129   002C9A  262D               	addwf	___flmul@prod^0,f,c
  8130   002C9C  0E00               	movlw	0
  8131   002C9E  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8132   002CA0  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8133   002CA2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8134   002CA4  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8135   002CA8  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8136   002CAC  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8137   002CB0  6A28               	clrf	___flmul@grs^0,c
  8138   002CB2  501E               	movf	___flmul@a^0,w,c
  8139   002CB4  021B               	mulwf	(___flmul@b+1)^0,c
  8140   002CB6  CFF3 F031          	movff	prodl,___flmul@temp
  8141   002CBA  CFF4 F032          	movff	prodh,___flmul@temp+1
  8142   002CBE  5031               	movf	___flmul@temp^0,w,c
  8143   002CC0  2628               	addwf	___flmul@grs^0,f,c
  8144   002CC2  5032               	movf	(___flmul@temp+1)^0,w,c
  8145   002CC4  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8146   002CC6  0E00               	movlw	0
  8147   002CC8  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8148   002CCA  0E00               	movlw	0
  8149   002CCC  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8150   002CCE  501F               	movf	(___flmul@a+1)^0,w,c
  8151   002CD0  021A               	mulwf	___flmul@b^0,c
  8152   002CD2  CFF3 F031          	movff	prodl,___flmul@temp
  8153   002CD6  CFF4 F032          	movff	prodh,___flmul@temp+1
  8154   002CDA  5031               	movf	___flmul@temp^0,w,c
  8155   002CDC  2628               	addwf	___flmul@grs^0,f,c
  8156   002CDE  5032               	movf	(___flmul@temp+1)^0,w,c
  8157   002CE0  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8158   002CE2  0E00               	movlw	0
  8159   002CE4  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8160   002CE6  0E00               	movlw	0
  8161   002CE8  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8162   002CEA  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8163   002CEE  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8164   002CF2  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8165   002CF6  6A28               	clrf	___flmul@grs^0,c
  8166   002CF8  501E               	movf	___flmul@a^0,w,c
  8167   002CFA  021A               	mulwf	___flmul@b^0,c
  8168   002CFC  CFF3 F031          	movff	prodl,___flmul@temp
  8169   002D00  CFF4 F032          	movff	prodh,___flmul@temp+1
  8170   002D04  5031               	movf	___flmul@temp^0,w,c
  8171   002D06  2628               	addwf	___flmul@grs^0,f,c
  8172   002D08  5032               	movf	(___flmul@temp+1)^0,w,c
  8173   002D0A  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8174   002D0C  0E00               	movlw	0
  8175   002D0E  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8176   002D10  0E00               	movlw	0
  8177   002D12  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8178   002D14  5020               	movf	(___flmul@a+2)^0,w,c
  8179   002D16  021B               	mulwf	(___flmul@b+1)^0,c
  8180   002D18  CFF3 F031          	movff	prodl,___flmul@temp
  8181   002D1C  CFF4 F032          	movff	prodh,___flmul@temp+1
  8182   002D20  5031               	movf	___flmul@temp^0,w,c
  8183   002D22  262D               	addwf	___flmul@prod^0,f,c
  8184   002D24  5032               	movf	(___flmul@temp+1)^0,w,c
  8185   002D26  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8186   002D28  0E00               	movlw	0
  8187   002D2A  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8188   002D2C  0E00               	movlw	0
  8189   002D2E  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8190   002D30  501F               	movf	(___flmul@a+1)^0,w,c
  8191   002D32  021C               	mulwf	(___flmul@b+2)^0,c
  8192   002D34  CFF3 F031          	movff	prodl,___flmul@temp
  8193   002D38  CFF4 F032          	movff	prodh,___flmul@temp+1
  8194   002D3C  5031               	movf	___flmul@temp^0,w,c
  8195   002D3E  262D               	addwf	___flmul@prod^0,f,c
  8196   002D40  5032               	movf	(___flmul@temp+1)^0,w,c
  8197   002D42  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8198   002D44  0E00               	movlw	0
  8199   002D46  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8200   002D48  0E00               	movlw	0
  8201   002D4A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8202   002D4C  5020               	movf	(___flmul@a+2)^0,w,c
  8203   002D4E  021C               	mulwf	(___flmul@b+2)^0,c
  8204   002D50  CFF3 F031          	movff	prodl,___flmul@temp
  8205   002D54  CFF4 F032          	movff	prodh,___flmul@temp+1
  8206   002D58  5031               	movf	___flmul@temp^0,w,c
  8207   002D5A  6E22               	movwf	??___flmul^0,c
  8208   002D5C  5032               	movf	(___flmul@temp+1)^0,w,c
  8209   002D5E  6E23               	movwf	(??___flmul+1)^0,c
  8210   002D60  6A24               	clrf	(??___flmul+2)^0,c
  8211   002D62  6A25               	clrf	(??___flmul+3)^0,c
  8212   002D64  C024  F025         	movff	??___flmul+2,??___flmul+3
  8213   002D68  C023  F024         	movff	??___flmul+1,??___flmul+2
  8214   002D6C  C022  F023         	movff	??___flmul,??___flmul+1
  8215   002D70  6A22               	clrf	??___flmul^0,c
  8216   002D72  5022               	movf	??___flmul^0,w,c
  8217   002D74  262D               	addwf	___flmul@prod^0,f,c
  8218   002D76  5023               	movf	(??___flmul+1)^0,w,c
  8219   002D78  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8220   002D7A  5024               	movf	(??___flmul+2)^0,w,c
  8221   002D7C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8222   002D7E  5025               	movf	(??___flmul+3)^0,w,c
  8223   002D80  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8224   002D82  C028  F022         	movff	___flmul@grs,??___flmul
  8225   002D86  C029  F023         	movff	___flmul@grs+1,??___flmul+1
  8226   002D8A  C02A  F024         	movff	___flmul@grs+2,??___flmul+2
  8227   002D8E  C02B  F025         	movff	___flmul@grs+3,??___flmul+3
  8228   002D92  0E19               	movlw	25
  8229   002D94  EFD1  F016         	goto	u5270
  8230   002D98                     u5275:
  8231   002D98  90D8               	bcf	status,0,c
  8232   002D9A  3225               	rrcf	(??___flmul+3)^0,f,c
  8233   002D9C  3224               	rrcf	(??___flmul+2)^0,f,c
  8234   002D9E  3223               	rrcf	(??___flmul+1)^0,f,c
  8235   002DA0  3222               	rrcf	??___flmul^0,f,c
  8236   002DA2                     u5270:
  8237   002DA2  2EE8               	decfsz	wreg,f,c
  8238   002DA4  EFCC  F016         	goto	u5275
  8239   002DA8  5022               	movf	??___flmul^0,w,c
  8240   002DAA  262D               	addwf	___flmul@prod^0,f,c
  8241   002DAC  5023               	movf	(??___flmul+1)^0,w,c
  8242   002DAE  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8243   002DB0  5024               	movf	(??___flmul+2)^0,w,c
  8244   002DB2  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8245   002DB4  5025               	movf	(??___flmul+3)^0,w,c
  8246   002DB6  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8247   002DB8  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8248   002DBC  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8249   002DC0  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8250   002DC4  6A28               	clrf	___flmul@grs^0,c
  8251   002DC6  5027               	movf	___flmul@aexp^0,w,c
  8252   002DC8  C02C  F022         	movff	___flmul@bexp,??___flmul
  8253   002DCC  6A23               	clrf	(??___flmul+1)^0,c
  8254   002DCE  2622               	addwf	??___flmul^0,f,c
  8255   002DD0  0E00               	movlw	0
  8256   002DD2  2223               	addwfc	(??___flmul+1)^0,f,c
  8257   002DD4  0E82               	movlw	130
  8258   002DD6  2422               	addwf	??___flmul^0,w,c
  8259   002DD8  6E31               	movwf	___flmul@temp^0,c
  8260   002DDA  0EFF               	movlw	255
  8261   002DDC  2023               	addwfc	(??___flmul+1)^0,w,c
  8262   002DDE  6E32               	movwf	(___flmul@temp+1)^0,c
  8263   002DE0  EF07  F017         	goto	l4449
  8264   002DE4                     l4443:
  8265   002DE4  90D8               	bcf	status,0,c
  8266   002DE6  362D               	rlcf	___flmul@prod^0,f,c
  8267   002DE8  362E               	rlcf	(___flmul@prod+1)^0,f,c
  8268   002DEA  362F               	rlcf	(___flmul@prod+2)^0,f,c
  8269   002DEC  3630               	rlcf	(___flmul@prod+3)^0,f,c
  8270   002DEE  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8271   002DF0  EFFC  F016         	goto	u5281
  8272   002DF4  EFFE  F016         	goto	u5280
  8273   002DF8                     u5281:
  8274   002DF8  EFFF  F016         	goto	l898
  8275   002DFC                     u5280:
  8276   002DFC  802D               	bsf	___flmul@prod^0,0,c
  8277   002DFE                     l898:
  8278   002DFE  90D8               	bcf	status,0,c
  8279   002E00  3628               	rlcf	___flmul@grs^0,f,c
  8280   002E02  3629               	rlcf	(___flmul@grs+1)^0,f,c
  8281   002E04  362A               	rlcf	(___flmul@grs+2)^0,f,c
  8282   002E06  362B               	rlcf	(___flmul@grs+3)^0,f,c
  8283   002E08  0631               	decf	___flmul@temp^0,f,c
  8284   002E0A  A0D8               	btfss	status,0,c
  8285   002E0C  0632               	decf	(___flmul@temp+1)^0,f,c
  8286   002E0E                     l4449:
  8287   002E0E  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  8288   002E10  EF0C  F017         	goto	u5291
  8289   002E14  EF0E  F017         	goto	u5290
  8290   002E18                     u5291:
  8291   002E18  EFF2  F016         	goto	l4443
  8292   002E1C                     u5290:
  8293   002E1C  0E00               	movlw	0
  8294   002E1E  6E27               	movwf	___flmul@aexp^0,c
  8295   002E20  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8296   002E22  EF15  F017         	goto	u5301
  8297   002E26  EF17  F017         	goto	u5300
  8298   002E2A                     u5301:
  8299   002E2A  EF3B  F017         	goto	l900
  8300   002E2E                     u5300:
  8301   002E2E  0EFF               	movlw	255
  8302   002E30  1428               	andwf	___flmul@grs^0,w,c
  8303   002E32  6E22               	movwf	??___flmul^0,c
  8304   002E34  0EFF               	movlw	255
  8305   002E36  1429               	andwf	(___flmul@grs+1)^0,w,c
  8306   002E38  6E23               	movwf	(??___flmul+1)^0,c
  8307   002E3A  0EFF               	movlw	255
  8308   002E3C  142A               	andwf	(___flmul@grs+2)^0,w,c
  8309   002E3E  6E24               	movwf	(??___flmul+2)^0,c
  8310   002E40  0E7F               	movlw	127
  8311   002E42  142B               	andwf	(___flmul@grs+3)^0,w,c
  8312   002E44  6E25               	movwf	(??___flmul+3)^0,c
  8313   002E46  5022               	movf	??___flmul^0,w,c
  8314   002E48  1023               	iorwf	(??___flmul+1)^0,w,c
  8315   002E4A  1024               	iorwf	(??___flmul+2)^0,w,c
  8316   002E4C  1025               	iorwf	(??___flmul+3)^0,w,c
  8317   002E4E  B4D8               	btfsc	status,2,c
  8318   002E50  EF2C  F017         	goto	u5311
  8319   002E54  EF2E  F017         	goto	u5310
  8320   002E58                     u5311:
  8321   002E58  EF32  F017         	goto	l901
  8322   002E5C                     u5310:
  8323   002E5C                     l4457:
  8324   002E5C  0E01               	movlw	1
  8325   002E5E  6E27               	movwf	___flmul@aexp^0,c
  8326   002E60  EF3B  F017         	goto	l900
  8327   002E64                     l901:
  8328   002E64  A02D               	btfss	___flmul@prod^0,0,c
  8329   002E66  EF37  F017         	goto	u5321
  8330   002E6A  EF39  F017         	goto	u5320
  8331   002E6E                     u5321:
  8332   002E6E  EF3B  F017         	goto	l900
  8333   002E72                     u5320:
  8334   002E72  EF2E  F017         	goto	l4457
  8335   002E76                     l900:
  8336   002E76  5027               	movf	___flmul@aexp^0,w,c
  8337   002E78  B4D8               	btfsc	status,2,c
  8338   002E7A  EF41  F017         	goto	u5331
  8339   002E7E  EF43  F017         	goto	u5330
  8340   002E82                     u5331:
  8341   002E82  EF67  F017         	goto	l4469
  8342   002E86                     u5330:
  8343   002E86  0E01               	movlw	1
  8344   002E88  262D               	addwf	___flmul@prod^0,f,c
  8345   002E8A  0E00               	movlw	0
  8346   002E8C  222E               	addwfc	(___flmul@prod+1)^0,f,c
  8347   002E8E  222F               	addwfc	(___flmul@prod+2)^0,f,c
  8348   002E90  2230               	addwfc	(___flmul@prod+3)^0,f,c
  8349   002E92  A030               	btfss	(___flmul@prod+3)^0,0,c
  8350   002E94  EF4E  F017         	goto	u5341
  8351   002E98  EF50  F017         	goto	u5340
  8352   002E9C                     u5341:
  8353   002E9C  EF67  F017         	goto	l4469
  8354   002EA0                     u5340:
  8355   002EA0  C02D  F022         	movff	___flmul@prod,??___flmul
  8356   002EA4  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  8357   002EA8  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  8358   002EAC  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  8359   002EB0  3425               	rlcf	(??___flmul+3)^0,w,c
  8360   002EB2  3225               	rrcf	(??___flmul+3)^0,f,c
  8361   002EB4  3224               	rrcf	(??___flmul+2)^0,f,c
  8362   002EB6  3223               	rrcf	(??___flmul+1)^0,f,c
  8363   002EB8  3222               	rrcf	??___flmul^0,f,c
  8364   002EBA  C022  F02D         	movff	??___flmul,___flmul@prod
  8365   002EBE  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  8366   002EC2  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  8367   002EC6  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  8368   002ECA  4A31               	infsnz	___flmul@temp^0,f,c
  8369   002ECC  2A32               	incf	(___flmul@temp+1)^0,f,c
  8370   002ECE                     l4469:
  8371   002ECE  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  8372   002ED0  EF72  F017         	goto	u5351
  8373   002ED4  5032               	movf	(___flmul@temp+1)^0,w,c
  8374   002ED6  E108               	bnz	u5350
  8375   002ED8  2831               	incf	___flmul@temp^0,w,c
  8376   002EDA  A0D8               	btfss	status,0,c
  8377   002EDC  EF72  F017         	goto	u5351
  8378   002EE0  EF74  F017         	goto	u5350
  8379   002EE4                     u5351:
  8380   002EE4  EF7E  F017         	goto	l4473
  8381   002EE8                     u5350:
  8382   002EE8  0E00               	movlw	0
  8383   002EEA  6E2D               	movwf	___flmul@prod^0,c
  8384   002EEC  0E00               	movlw	0
  8385   002EEE  6E2E               	movwf	(___flmul@prod+1)^0,c
  8386   002EF0  0E80               	movlw	128
  8387   002EF2  6E2F               	movwf	(___flmul@prod+2)^0,c
  8388   002EF4  0E7F               	movlw	127
  8389   002EF6  6E30               	movwf	(___flmul@prod+3)^0,c
  8390   002EF8  EFAC  F017         	goto	l4485
  8391   002EFC                     l4473:
  8392   002EFC  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  8393   002EFE  EF8B  F017         	goto	u5360
  8394   002F02  5032               	movf	(___flmul@temp+1)^0,w,c
  8395   002F04  E106               	bnz	u5361
  8396   002F06  0431               	decf	___flmul@temp^0,w,c
  8397   002F08  B0D8               	btfsc	status,0,c
  8398   002F0A  EF89  F017         	goto	u5361
  8399   002F0E  EF8B  F017         	goto	u5360
  8400   002F12                     u5361:
  8401   002F12  EF97  F017         	goto	l908
  8402   002F16                     u5360:
  8403   002F16  0E00               	movlw	0
  8404   002F18  6E2D               	movwf	___flmul@prod^0,c
  8405   002F1A  0E00               	movlw	0
  8406   002F1C  6E2E               	movwf	(___flmul@prod+1)^0,c
  8407   002F1E  0E00               	movlw	0
  8408   002F20  6E2F               	movwf	(___flmul@prod+2)^0,c
  8409   002F22  0E00               	movlw	0
  8410   002F24  6E30               	movwf	(___flmul@prod+3)^0,c
  8411   002F26  0E00               	movlw	0
  8412   002F28  6E26               	movwf	___flmul@sign^0,c
  8413   002F2A  EFAC  F017         	goto	l4485
  8414   002F2E                     l908:
  8415   002F2E  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  8416   002F32  0EFF               	movlw	255
  8417   002F34  162D               	andwf	___flmul@prod^0,f,c
  8418   002F36  0EFF               	movlw	255
  8419   002F38  162E               	andwf	(___flmul@prod+1)^0,f,c
  8420   002F3A  0E7F               	movlw	127
  8421   002F3C  162F               	andwf	(___flmul@prod+2)^0,f,c
  8422   002F3E  0E00               	movlw	0
  8423   002F40  1630               	andwf	(___flmul@prod+3)^0,f,c
  8424   002F42  A02C               	btfss	___flmul@bexp^0,0,c
  8425   002F44  EFA6  F017         	goto	u5371
  8426   002F48  EFA8  F017         	goto	u5370
  8427   002F4C                     u5371:
  8428   002F4C  EFA9  F017         	goto	l4483
  8429   002F50                     u5370:
  8430   002F50  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  8431   002F52                     l4483:
  8432   002F52  90D8               	bcf	status,0,c
  8433   002F54  302C               	rrcf	___flmul@bexp^0,w,c
  8434   002F56  6E30               	movwf	(___flmul@prod+3)^0,c
  8435   002F58                     l4485:
  8436   002F58  5026               	movf	___flmul@sign^0,w,c
  8437   002F5A  1230               	iorwf	(___flmul@prod+3)^0,f,c
  8438   002F5C  C02D  F01A         	movff	___flmul@prod,?___flmul
  8439   002F60  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  8440   002F64  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  8441   002F68  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  8442   002F6C                     l895:
  8443   002F6C  0012               	return		;funcret
  8444   002F6E                     __end_of___flmul:
  8445                           	callstack 0
  8446                           
  8447 ;; *************** function ___fleq *****************
  8448 ;; Defined at:
  8449 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  ff1             4    0[COMRAM] unsigned char 
  8452 ;;  ff2             4    4[COMRAM] unsigned char 
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;		None
  8455 ;; Return value:  Size  Location     Type
  8456 ;;		None               void
  8457 ;; Registers used:
  8458 ;;		wreg, status,2, status,0
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8464 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;Total ram usage:       12 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_custom_floatmodulo
  8474 ;;		_RGB_to_HSV
  8475 ;;		_color_cardCheck
  8476 ;;		_efgtoa
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text40
  8481   003E7A                     __ptext40:
  8482                           	callstack 0
  8483   003E7A                     ___fleq:
  8484                           	callstack 25
  8485   003E7A  0E00               	movlw	0
  8486   003E7C  1401               	andwf	___fleq@ff1^0,w,c
  8487   003E7E  6E09               	movwf	??___fleq^0,c
  8488   003E80  0E00               	movlw	0
  8489   003E82  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8490   003E84  6E0A               	movwf	(??___fleq+1)^0,c
  8491   003E86  0E80               	movlw	128
  8492   003E88  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8493   003E8A  6E0B               	movwf	(??___fleq+2)^0,c
  8494   003E8C  0E7F               	movlw	127
  8495   003E8E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8496   003E90  6E0C               	movwf	(??___fleq+3)^0,c
  8497   003E92  5009               	movf	??___fleq^0,w,c
  8498   003E94  100A               	iorwf	(??___fleq+1)^0,w,c
  8499   003E96  100B               	iorwf	(??___fleq+2)^0,w,c
  8500   003E98  100C               	iorwf	(??___fleq+3)^0,w,c
  8501   003E9A  A4D8               	btfss	status,2,c
  8502   003E9C  EF52  F01F         	goto	u5381
  8503   003EA0  EF54  F01F         	goto	u5380
  8504   003EA4                     u5381:
  8505   003EA4  EF5C  F01F         	goto	l4501
  8506   003EA8                     u5380:
  8507   003EA8  0E00               	movlw	0
  8508   003EAA  6E01               	movwf	___fleq@ff1^0,c
  8509   003EAC  0E00               	movlw	0
  8510   003EAE  6E02               	movwf	(___fleq@ff1+1)^0,c
  8511   003EB0  0E00               	movlw	0
  8512   003EB2  6E03               	movwf	(___fleq@ff1+2)^0,c
  8513   003EB4  0E00               	movlw	0
  8514   003EB6  6E04               	movwf	(___fleq@ff1+3)^0,c
  8515   003EB8                     l4501:
  8516   003EB8  0E00               	movlw	0
  8517   003EBA  1405               	andwf	___fleq@ff2^0,w,c
  8518   003EBC  6E09               	movwf	??___fleq^0,c
  8519   003EBE  0E00               	movlw	0
  8520   003EC0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8521   003EC2  6E0A               	movwf	(??___fleq+1)^0,c
  8522   003EC4  0E80               	movlw	128
  8523   003EC6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8524   003EC8  6E0B               	movwf	(??___fleq+2)^0,c
  8525   003ECA  0E7F               	movlw	127
  8526   003ECC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8527   003ECE  6E0C               	movwf	(??___fleq+3)^0,c
  8528   003ED0  5009               	movf	??___fleq^0,w,c
  8529   003ED2  100A               	iorwf	(??___fleq+1)^0,w,c
  8530   003ED4  100B               	iorwf	(??___fleq+2)^0,w,c
  8531   003ED6  100C               	iorwf	(??___fleq+3)^0,w,c
  8532   003ED8  A4D8               	btfss	status,2,c
  8533   003EDA  EF71  F01F         	goto	u5391
  8534   003EDE  EF73  F01F         	goto	u5390
  8535   003EE2                     u5391:
  8536   003EE2  EF7B  F01F         	goto	l4505
  8537   003EE6                     u5390:
  8538   003EE6  0E00               	movlw	0
  8539   003EE8  6E05               	movwf	___fleq@ff2^0,c
  8540   003EEA  0E00               	movlw	0
  8541   003EEC  6E06               	movwf	(___fleq@ff2+1)^0,c
  8542   003EEE  0E00               	movlw	0
  8543   003EF0  6E07               	movwf	(___fleq@ff2+2)^0,c
  8544   003EF2  0E00               	movlw	0
  8545   003EF4  6E08               	movwf	(___fleq@ff2+3)^0,c
  8546   003EF6                     l4505:
  8547   003EF6  5005               	movf	___fleq@ff2^0,w,c
  8548   003EF8  1801               	xorwf	___fleq@ff1^0,w,c
  8549   003EFA  E10F               	bnz	u5400
  8550   003EFC  5006               	movf	(___fleq@ff2+1)^0,w,c
  8551   003EFE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8552   003F00  E10C               	bnz	u5400
  8553   003F02  5007               	movf	(___fleq@ff2+2)^0,w,c
  8554   003F04  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8555   003F06  E109               	bnz	u5400
  8556   003F08  5008               	movf	(___fleq@ff2+3)^0,w,c
  8557   003F0A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8558   003F0C  B4D8               	btfsc	status,2,c
  8559   003F0E  EF8B  F01F         	goto	u5401
  8560   003F12  EF8D  F01F         	goto	u5400
  8561   003F16                     u5401:
  8562   003F16  EF90  F01F         	goto	l4509
  8563   003F1A                     u5400:
  8564   003F1A  90D8               	bcf	status,0,c
  8565   003F1C  EF91  F01F         	goto	l536
  8566   003F20                     l4509:
  8567   003F20  80D8               	bsf	status,0,c
  8568   003F22                     l536:
  8569   003F22  0012               	return		;funcret
  8570   003F24                     __end_of___fleq:
  8571                           	callstack 0
  8572                           
  8573 ;; *************** function ___fldiv *****************
  8574 ;; Defined at:
  8575 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  b               4   58[COMRAM] unsigned char 
  8578 ;;  a               4   62[COMRAM] unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  grs             4   77[COMRAM] unsigned long 
  8581 ;;  rem             4   70[COMRAM] unsigned long 
  8582 ;;  new_exp         2   75[COMRAM] short 
  8583 ;;  aexp            1   82[COMRAM] unsigned char 
  8584 ;;  bexp            1   81[COMRAM] unsigned char 
  8585 ;;  sign            1   74[COMRAM] unsigned char 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  4   58[COMRAM] unsigned char 
  8588 ;; Registers used:
  8589 ;;		wreg, status,2, status,0
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8595 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8597 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8598 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;Total ram usage:       25 bytes
  8600 ;; Hardware stack levels used: 1
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_custom_floatmodulo
  8605 ;;		_RGB_to_HSV
  8606 ;;		_efgtoa
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text41
  8611   002F6E                     __ptext41:
  8612                           	callstack 0
  8613   002F6E                     ___fldiv:
  8614                           	callstack 25
  8615   002F6E  503E               	movf	(___fldiv@b+3)^0,w,c
  8616   002F70  0B80               	andlw	128
  8617   002F72  6E4B               	movwf	___fldiv@sign^0,c
  8618   002F74  503E               	movf	(___fldiv@b+3)^0,w,c
  8619   002F76  243E               	addwf	(___fldiv@b+3)^0,w,c
  8620   002F78  6E52               	movwf	___fldiv@bexp^0,c
  8621   002F7A  AE3D               	btfss	(___fldiv@b+2)^0,7,c
  8622   002F7C  EFC2  F017         	goto	u4961
  8623   002F80  EFC4  F017         	goto	u4960
  8624   002F84                     u4961:
  8625   002F84  EFC5  F017         	goto	l4229
  8626   002F88                     u4960:
  8627   002F88  8052               	bsf	___fldiv@bexp^0,0,c
  8628   002F8A                     l4229:
  8629   002F8A  5052               	movf	___fldiv@bexp^0,w,c
  8630   002F8C  B4D8               	btfsc	status,2,c
  8631   002F8E  EFCB  F017         	goto	u4971
  8632   002F92  EFCD  F017         	goto	u4970
  8633   002F96                     u4971:
  8634   002F96  EFE2  F017         	goto	l4239
  8635   002F9A                     u4970:
  8636   002F9A  2852               	incf	___fldiv@bexp^0,w,c
  8637   002F9C  A4D8               	btfss	status,2,c
  8638   002F9E  EFD3  F017         	goto	u4981
  8639   002FA2  EFD5  F017         	goto	u4980
  8640   002FA6                     u4981:
  8641   002FA6  EFDD  F017         	goto	l4235
  8642   002FAA                     u4980:
  8643   002FAA  0E00               	movlw	0
  8644   002FAC  6E3B               	movwf	___fldiv@b^0,c
  8645   002FAE  0E00               	movlw	0
  8646   002FB0  6E3C               	movwf	(___fldiv@b+1)^0,c
  8647   002FB2  0E00               	movlw	0
  8648   002FB4  6E3D               	movwf	(___fldiv@b+2)^0,c
  8649   002FB6  0E00               	movlw	0
  8650   002FB8  6E3E               	movwf	(___fldiv@b+3)^0,c
  8651   002FBA                     l4235:
  8652   002FBA  8E3D               	bsf	(___fldiv@b+2)^0,7,c
  8653   002FBC  0E00               	movlw	0
  8654   002FBE  6E3E               	movwf	(___fldiv@b+3)^0,c
  8655   002FC0  EFEA  F017         	goto	l4241
  8656   002FC4                     l4239:
  8657   002FC4  0E00               	movlw	0
  8658   002FC6  6E3B               	movwf	___fldiv@b^0,c
  8659   002FC8  0E00               	movlw	0
  8660   002FCA  6E3C               	movwf	(___fldiv@b+1)^0,c
  8661   002FCC  0E00               	movlw	0
  8662   002FCE  6E3D               	movwf	(___fldiv@b+2)^0,c
  8663   002FD0  0E00               	movlw	0
  8664   002FD2  6E3E               	movwf	(___fldiv@b+3)^0,c
  8665   002FD4                     l4241:
  8666   002FD4  5042               	movf	(___fldiv@a+3)^0,w,c
  8667   002FD6  0B80               	andlw	128
  8668   002FD8  1A4B               	xorwf	___fldiv@sign^0,f,c
  8669   002FDA  5042               	movf	(___fldiv@a+3)^0,w,c
  8670   002FDC  2442               	addwf	(___fldiv@a+3)^0,w,c
  8671   002FDE  6E53               	movwf	___fldiv@aexp^0,c
  8672   002FE0  AE41               	btfss	(___fldiv@a+2)^0,7,c
  8673   002FE2  EFF5  F017         	goto	u4991
  8674   002FE6  EFF7  F017         	goto	u4990
  8675   002FEA                     u4991:
  8676   002FEA  EFF8  F017         	goto	l4249
  8677   002FEE                     u4990:
  8678   002FEE  8053               	bsf	___fldiv@aexp^0,0,c
  8679   002FF0                     l4249:
  8680   002FF0  5053               	movf	___fldiv@aexp^0,w,c
  8681   002FF2  B4D8               	btfsc	status,2,c
  8682   002FF4  EFFE  F017         	goto	u5001
  8683   002FF8  EF00  F018         	goto	u5000
  8684   002FFC                     u5001:
  8685   002FFC  EF15  F018         	goto	l4259
  8686   003000                     u5000:
  8687   003000  2853               	incf	___fldiv@aexp^0,w,c
  8688   003002  A4D8               	btfss	status,2,c
  8689   003004  EF06  F018         	goto	u5011
  8690   003008  EF08  F018         	goto	u5010
  8691   00300C                     u5011:
  8692   00300C  EF10  F018         	goto	l4255
  8693   003010                     u5010:
  8694   003010  0E00               	movlw	0
  8695   003012  6E3F               	movwf	___fldiv@a^0,c
  8696   003014  0E00               	movlw	0
  8697   003016  6E40               	movwf	(___fldiv@a+1)^0,c
  8698   003018  0E00               	movlw	0
  8699   00301A  6E41               	movwf	(___fldiv@a+2)^0,c
  8700   00301C  0E00               	movlw	0
  8701   00301E  6E42               	movwf	(___fldiv@a+3)^0,c
  8702   003020                     l4255:
  8703   003020  8E41               	bsf	(___fldiv@a+2)^0,7,c
  8704   003022  0E00               	movlw	0
  8705   003024  6E42               	movwf	(___fldiv@a+3)^0,c
  8706   003026  EF1D  F018         	goto	l4261
  8707   00302A                     l4259:
  8708   00302A  0E00               	movlw	0
  8709   00302C  6E3F               	movwf	___fldiv@a^0,c
  8710   00302E  0E00               	movlw	0
  8711   003030  6E40               	movwf	(___fldiv@a+1)^0,c
  8712   003032  0E00               	movlw	0
  8713   003034  6E41               	movwf	(___fldiv@a+2)^0,c
  8714   003036  0E00               	movlw	0
  8715   003038  6E42               	movwf	(___fldiv@a+3)^0,c
  8716   00303A                     l4261:
  8717   00303A  503F               	movf	___fldiv@a^0,w,c
  8718   00303C  1040               	iorwf	(___fldiv@a+1)^0,w,c
  8719   00303E  1041               	iorwf	(___fldiv@a+2)^0,w,c
  8720   003040  1042               	iorwf	(___fldiv@a+3)^0,w,c
  8721   003042  A4D8               	btfss	status,2,c
  8722   003044  EF26  F018         	goto	u5021
  8723   003048  EF28  F018         	goto	u5020
  8724   00304C                     u5021:
  8725   00304C  EF40  F018         	goto	l4273
  8726   003050                     u5020:
  8727   003050  0E00               	movlw	0
  8728   003052  6E3B               	movwf	___fldiv@b^0,c
  8729   003054  0E00               	movlw	0
  8730   003056  6E3C               	movwf	(___fldiv@b+1)^0,c
  8731   003058  0E00               	movlw	0
  8732   00305A  6E3D               	movwf	(___fldiv@b+2)^0,c
  8733   00305C  0E00               	movlw	0
  8734   00305E  6E3E               	movwf	(___fldiv@b+3)^0,c
  8735   003060  0E80               	movlw	128
  8736   003062  123D               	iorwf	(___fldiv@b+2)^0,f,c
  8737   003064  0E7F               	movlw	127
  8738   003066  123E               	iorwf	(___fldiv@b+3)^0,f,c
  8739   003068                     l4267:
  8740   003068  504B               	movf	___fldiv@sign^0,w,c
  8741   00306A  123E               	iorwf	(___fldiv@b+3)^0,f,c
  8742   00306C  C03B  F03B         	movff	___fldiv@b,?___fldiv
  8743   003070  C03C  F03C         	movff	___fldiv@b+1,?___fldiv+1
  8744   003074  C03D  F03D         	movff	___fldiv@b+2,?___fldiv+2
  8745   003078  C03E  F03E         	movff	___fldiv@b+3,?___fldiv+3
  8746   00307C  EF83  F019         	goto	l859
  8747   003080                     l4273:
  8748   003080  5052               	movf	___fldiv@bexp^0,w,c
  8749   003082  A4D8               	btfss	status,2,c
  8750   003084  EF46  F018         	goto	u5031
  8751   003088  EF48  F018         	goto	u5030
  8752   00308C                     u5031:
  8753   00308C  EF52  F018         	goto	l4281
  8754   003090                     u5030:
  8755   003090  0E00               	movlw	0
  8756   003092  6E3B               	movwf	?___fldiv^0,c
  8757   003094  0E00               	movlw	0
  8758   003096  6E3C               	movwf	(?___fldiv+1)^0,c
  8759   003098  0E00               	movlw	0
  8760   00309A  6E3D               	movwf	(?___fldiv+2)^0,c
  8761   00309C  0E00               	movlw	0
  8762   00309E  6E3E               	movwf	(?___fldiv+3)^0,c
  8763   0030A0  EF83  F019         	goto	l859
  8764   0030A4                     l4281:
  8765   0030A4  5053               	movf	___fldiv@aexp^0,w,c
  8766   0030A6  C052  F043         	movff	___fldiv@bexp,??___fldiv
  8767   0030AA  6A44               	clrf	(??___fldiv+1)^0,c
  8768   0030AC  5E43               	subwf	??___fldiv^0,f,c
  8769   0030AE  0E00               	movlw	0
  8770   0030B0  5A44               	subwfb	(??___fldiv+1)^0,f,c
  8771   0030B2  0E7F               	movlw	127
  8772   0030B4  2443               	addwf	??___fldiv^0,w,c
  8773   0030B6  6E4C               	movwf	___fldiv@new_exp^0,c
  8774   0030B8  0E00               	movlw	0
  8775   0030BA  2044               	addwfc	(??___fldiv+1)^0,w,c
  8776   0030BC  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
  8777   0030BE  C03B  F047         	movff	___fldiv@b,___fldiv@rem
  8778   0030C2  C03C  F048         	movff	___fldiv@b+1,___fldiv@rem+1
  8779   0030C6  C03D  F049         	movff	___fldiv@b+2,___fldiv@rem+2
  8780   0030CA  C03E  F04A         	movff	___fldiv@b+3,___fldiv@rem+3
  8781   0030CE  0E00               	movlw	0
  8782   0030D0  6E3B               	movwf	___fldiv@b^0,c
  8783   0030D2  0E00               	movlw	0
  8784   0030D4  6E3C               	movwf	(___fldiv@b+1)^0,c
  8785   0030D6  0E00               	movlw	0
  8786   0030D8  6E3D               	movwf	(___fldiv@b+2)^0,c
  8787   0030DA  0E00               	movlw	0
  8788   0030DC  6E3E               	movwf	(___fldiv@b+3)^0,c
  8789   0030DE  0E00               	movlw	0
  8790   0030E0  6E4E               	movwf	___fldiv@grs^0,c
  8791   0030E2  0E00               	movlw	0
  8792   0030E4  6E4F               	movwf	(___fldiv@grs+1)^0,c
  8793   0030E6  0E00               	movlw	0
  8794   0030E8  6E50               	movwf	(___fldiv@grs+2)^0,c
  8795   0030EA  0E00               	movlw	0
  8796   0030EC  6E51               	movwf	(___fldiv@grs+3)^0,c
  8797   0030EE  0E00               	movlw	0
  8798   0030F0  6E53               	movwf	___fldiv@aexp^0,c
  8799   0030F2  EFB3  F018         	goto	l861
  8800   0030F6                     l4291:
  8801   0030F6  5053               	movf	___fldiv@aexp^0,w,c
  8802   0030F8  B4D8               	btfsc	status,2,c
  8803   0030FA  EF81  F018         	goto	u5041
  8804   0030FE  EF83  F018         	goto	u5040
  8805   003102                     u5041:
  8806   003102  EF9A  F018         	goto	l4299
  8807   003106                     u5040:
  8808   003106  90D8               	bcf	status,0,c
  8809   003108  3647               	rlcf	___fldiv@rem^0,f,c
  8810   00310A  3648               	rlcf	(___fldiv@rem+1)^0,f,c
  8811   00310C  3649               	rlcf	(___fldiv@rem+2)^0,f,c
  8812   00310E  364A               	rlcf	(___fldiv@rem+3)^0,f,c
  8813   003110  90D8               	bcf	status,0,c
  8814   003112  363B               	rlcf	___fldiv@b^0,f,c
  8815   003114  363C               	rlcf	(___fldiv@b+1)^0,f,c
  8816   003116  363D               	rlcf	(___fldiv@b+2)^0,f,c
  8817   003118  363E               	rlcf	(___fldiv@b+3)^0,f,c
  8818   00311A  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  8819   00311C  EF92  F018         	goto	u5051
  8820   003120  EF94  F018         	goto	u5050
  8821   003124                     u5051:
  8822   003124  EF95  F018         	goto	l864
  8823   003128                     u5050:
  8824   003128  803B               	bsf	___fldiv@b^0,0,c
  8825   00312A                     l864:
  8826   00312A  90D8               	bcf	status,0,c
  8827   00312C  364E               	rlcf	___fldiv@grs^0,f,c
  8828   00312E  364F               	rlcf	(___fldiv@grs+1)^0,f,c
  8829   003130  3650               	rlcf	(___fldiv@grs+2)^0,f,c
  8830   003132  3651               	rlcf	(___fldiv@grs+3)^0,f,c
  8831   003134                     l4299:
  8832   003134  503F               	movf	___fldiv@a^0,w,c
  8833   003136  5C47               	subwf	___fldiv@rem^0,w,c
  8834   003138  5040               	movf	(___fldiv@a+1)^0,w,c
  8835   00313A  5848               	subwfb	(___fldiv@rem+1)^0,w,c
  8836   00313C  5041               	movf	(___fldiv@a+2)^0,w,c
  8837   00313E  5849               	subwfb	(___fldiv@rem+2)^0,w,c
  8838   003140  5042               	movf	(___fldiv@a+3)^0,w,c
  8839   003142  584A               	subwfb	(___fldiv@rem+3)^0,w,c
  8840   003144  A0D8               	btfss	status,0,c
  8841   003146  EFA7  F018         	goto	u5061
  8842   00314A  EFA9  F018         	goto	u5060
  8843   00314E                     u5061:
  8844   00314E  EFB2  F018         	goto	l4305
  8845   003152                     u5060:
  8846   003152  8C51               	bsf	(___fldiv@grs+3)^0,6,c
  8847   003154  503F               	movf	___fldiv@a^0,w,c
  8848   003156  5E47               	subwf	___fldiv@rem^0,f,c
  8849   003158  5040               	movf	(___fldiv@a+1)^0,w,c
  8850   00315A  5A48               	subwfb	(___fldiv@rem+1)^0,f,c
  8851   00315C  5041               	movf	(___fldiv@a+2)^0,w,c
  8852   00315E  5A49               	subwfb	(___fldiv@rem+2)^0,f,c
  8853   003160  5042               	movf	(___fldiv@a+3)^0,w,c
  8854   003162  5A4A               	subwfb	(___fldiv@rem+3)^0,f,c
  8855   003164                     l4305:
  8856   003164  2A53               	incf	___fldiv@aexp^0,f,c
  8857   003166                     l861:
  8858   003166  0E19               	movlw	25
  8859   003168  6453               	cpfsgt	___fldiv@aexp^0,c
  8860   00316A  EFB9  F018         	goto	u5071
  8861   00316E  EFBB  F018         	goto	u5070
  8862   003172                     u5071:
  8863   003172  EF7B  F018         	goto	l4291
  8864   003176                     u5070:
  8865   003176  5047               	movf	___fldiv@rem^0,w,c
  8866   003178  1048               	iorwf	(___fldiv@rem+1)^0,w,c
  8867   00317A  1049               	iorwf	(___fldiv@rem+2)^0,w,c
  8868   00317C  104A               	iorwf	(___fldiv@rem+3)^0,w,c
  8869   00317E  B4D8               	btfsc	status,2,c
  8870   003180  EFC4  F018         	goto	u5081
  8871   003184  EFC6  F018         	goto	u5080
  8872   003188                     u5081:
  8873   003188  EFDE  F018         	goto	l4317
  8874   00318C                     u5080:
  8875   00318C  804E               	bsf	___fldiv@grs^0,0,c
  8876   00318E  EFDE  F018         	goto	l4317
  8877   003192                     l4311:
  8878   003192  90D8               	bcf	status,0,c
  8879   003194  363B               	rlcf	___fldiv@b^0,f,c
  8880   003196  363C               	rlcf	(___fldiv@b+1)^0,f,c
  8881   003198  363D               	rlcf	(___fldiv@b+2)^0,f,c
  8882   00319A  363E               	rlcf	(___fldiv@b+3)^0,f,c
  8883   00319C  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  8884   00319E  EFD3  F018         	goto	u5091
  8885   0031A2  EFD5  F018         	goto	u5090
  8886   0031A6                     u5091:
  8887   0031A6  EFD6  F018         	goto	l870
  8888   0031AA                     u5090:
  8889   0031AA  803B               	bsf	___fldiv@b^0,0,c
  8890   0031AC                     l870:
  8891   0031AC  90D8               	bcf	status,0,c
  8892   0031AE  364E               	rlcf	___fldiv@grs^0,f,c
  8893   0031B0  364F               	rlcf	(___fldiv@grs+1)^0,f,c
  8894   0031B2  3650               	rlcf	(___fldiv@grs+2)^0,f,c
  8895   0031B4  3651               	rlcf	(___fldiv@grs+3)^0,f,c
  8896   0031B6  064C               	decf	___fldiv@new_exp^0,f,c
  8897   0031B8  A0D8               	btfss	status,0,c
  8898   0031BA  064D               	decf	(___fldiv@new_exp+1)^0,f,c
  8899   0031BC                     l4317:
  8900   0031BC  AE3D               	btfss	(___fldiv@b+2)^0,7,c
  8901   0031BE  EFE3  F018         	goto	u5101
  8902   0031C2  EFE5  F018         	goto	u5100
  8903   0031C6                     u5101:
  8904   0031C6  EFC9  F018         	goto	l4311
  8905   0031CA                     u5100:
  8906   0031CA  0E00               	movlw	0
  8907   0031CC  6E53               	movwf	___fldiv@aexp^0,c
  8908   0031CE  AE51               	btfss	(___fldiv@grs+3)^0,7,c
  8909   0031D0  EFEC  F018         	goto	u5111
  8910   0031D4  EFEE  F018         	goto	u5110
  8911   0031D8                     u5111:
  8912   0031D8  EF12  F019         	goto	l872
  8913   0031DC                     u5110:
  8914   0031DC  0EFF               	movlw	255
  8915   0031DE  144E               	andwf	___fldiv@grs^0,w,c
  8916   0031E0  6E43               	movwf	??___fldiv^0,c
  8917   0031E2  0EFF               	movlw	255
  8918   0031E4  144F               	andwf	(___fldiv@grs+1)^0,w,c
  8919   0031E6  6E44               	movwf	(??___fldiv+1)^0,c
  8920   0031E8  0EFF               	movlw	255
  8921   0031EA  1450               	andwf	(___fldiv@grs+2)^0,w,c
  8922   0031EC  6E45               	movwf	(??___fldiv+2)^0,c
  8923   0031EE  0E7F               	movlw	127
  8924   0031F0  1451               	andwf	(___fldiv@grs+3)^0,w,c
  8925   0031F2  6E46               	movwf	(??___fldiv+3)^0,c
  8926   0031F4  5043               	movf	??___fldiv^0,w,c
  8927   0031F6  1044               	iorwf	(??___fldiv+1)^0,w,c
  8928   0031F8  1045               	iorwf	(??___fldiv+2)^0,w,c
  8929   0031FA  1046               	iorwf	(??___fldiv+3)^0,w,c
  8930   0031FC  B4D8               	btfsc	status,2,c
  8931   0031FE  EF03  F019         	goto	u5121
  8932   003202  EF05  F019         	goto	u5120
  8933   003206                     u5121:
  8934   003206  EF09  F019         	goto	l873
  8935   00320A                     u5120:
  8936   00320A                     l4325:
  8937   00320A  0E01               	movlw	1
  8938   00320C  6E53               	movwf	___fldiv@aexp^0,c
  8939   00320E  EF12  F019         	goto	l872
  8940   003212                     l873:
  8941   003212  A03B               	btfss	___fldiv@b^0,0,c
  8942   003214  EF0E  F019         	goto	u5131
  8943   003218  EF10  F019         	goto	u5130
  8944   00321C                     u5131:
  8945   00321C  EF12  F019         	goto	l872
  8946   003220                     u5130:
  8947   003220  EF05  F019         	goto	l4325
  8948   003224                     l872:
  8949   003224  5053               	movf	___fldiv@aexp^0,w,c
  8950   003226  B4D8               	btfsc	status,2,c
  8951   003228  EF18  F019         	goto	u5141
  8952   00322C  EF1A  F019         	goto	u5140
  8953   003230                     u5141:
  8954   003230  EF3E  F019         	goto	l4337
  8955   003234                     u5140:
  8956   003234  0E01               	movlw	1
  8957   003236  263B               	addwf	___fldiv@b^0,f,c
  8958   003238  0E00               	movlw	0
  8959   00323A  223C               	addwfc	(___fldiv@b+1)^0,f,c
  8960   00323C  223D               	addwfc	(___fldiv@b+2)^0,f,c
  8961   00323E  223E               	addwfc	(___fldiv@b+3)^0,f,c
  8962   003240  A03E               	btfss	(___fldiv@b+3)^0,0,c
  8963   003242  EF25  F019         	goto	u5151
  8964   003246  EF27  F019         	goto	u5150
  8965   00324A                     u5151:
  8966   00324A  EF3E  F019         	goto	l4337
  8967   00324E                     u5150:
  8968   00324E  C03B  F043         	movff	___fldiv@b,??___fldiv
  8969   003252  C03C  F044         	movff	___fldiv@b+1,??___fldiv+1
  8970   003256  C03D  F045         	movff	___fldiv@b+2,??___fldiv+2
  8971   00325A  C03E  F046         	movff	___fldiv@b+3,??___fldiv+3
  8972   00325E  3446               	rlcf	(??___fldiv+3)^0,w,c
  8973   003260  3246               	rrcf	(??___fldiv+3)^0,f,c
  8974   003262  3245               	rrcf	(??___fldiv+2)^0,f,c
  8975   003264  3244               	rrcf	(??___fldiv+1)^0,f,c
  8976   003266  3243               	rrcf	??___fldiv^0,f,c
  8977   003268  C043  F03B         	movff	??___fldiv,___fldiv@b
  8978   00326C  C044  F03C         	movff	??___fldiv+1,___fldiv@b+1
  8979   003270  C045  F03D         	movff	??___fldiv+2,___fldiv@b+2
  8980   003274  C046  F03E         	movff	??___fldiv+3,___fldiv@b+3
  8981   003278  4A4C               	infsnz	___fldiv@new_exp^0,f,c
  8982   00327A  2A4D               	incf	(___fldiv@new_exp+1)^0,f,c
  8983   00327C                     l4337:
  8984   00327C  BE4D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8985   00327E  EF49  F019         	goto	u5161
  8986   003282  504D               	movf	(___fldiv@new_exp+1)^0,w,c
  8987   003284  E108               	bnz	u5160
  8988   003286  284C               	incf	___fldiv@new_exp^0,w,c
  8989   003288  A0D8               	btfss	status,0,c
  8990   00328A  EF49  F019         	goto	u5161
  8991   00328E  EF4B  F019         	goto	u5160
  8992   003292                     u5161:
  8993   003292  EF56  F019         	goto	l4341
  8994   003296                     u5160:
  8995   003296  0E00               	movlw	0
  8996   003298  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
  8997   00329A  684C               	setf	___fldiv@new_exp^0,c
  8998   00329C  0E00               	movlw	0
  8999   00329E  6E3B               	movwf	___fldiv@b^0,c
  9000   0032A0  0E00               	movlw	0
  9001   0032A2  6E3C               	movwf	(___fldiv@b+1)^0,c
  9002   0032A4  0E00               	movlw	0
  9003   0032A6  6E3D               	movwf	(___fldiv@b+2)^0,c
  9004   0032A8  0E00               	movlw	0
  9005   0032AA  6E3E               	movwf	(___fldiv@b+3)^0,c
  9006   0032AC                     l4341:
  9007   0032AC  BE4D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9008   0032AE  EF63  F019         	goto	u5170
  9009   0032B2  504D               	movf	(___fldiv@new_exp+1)^0,w,c
  9010   0032B4  E106               	bnz	u5171
  9011   0032B6  044C               	decf	___fldiv@new_exp^0,w,c
  9012   0032B8  B0D8               	btfsc	status,0,c
  9013   0032BA  EF61  F019         	goto	u5171
  9014   0032BE  EF63  F019         	goto	u5170
  9015   0032C2                     u5171:
  9016   0032C2  EF71  F019         	goto	l4345
  9017   0032C6                     u5170:
  9018   0032C6  0E00               	movlw	0
  9019   0032C8  6E4D               	movwf	(___fldiv@new_exp+1)^0,c
  9020   0032CA  0E00               	movlw	0
  9021   0032CC  6E4C               	movwf	___fldiv@new_exp^0,c
  9022   0032CE  0E00               	movlw	0
  9023   0032D0  6E3B               	movwf	___fldiv@b^0,c
  9024   0032D2  0E00               	movlw	0
  9025   0032D4  6E3C               	movwf	(___fldiv@b+1)^0,c
  9026   0032D6  0E00               	movlw	0
  9027   0032D8  6E3D               	movwf	(___fldiv@b+2)^0,c
  9028   0032DA  0E00               	movlw	0
  9029   0032DC  6E3E               	movwf	(___fldiv@b+3)^0,c
  9030   0032DE  0E00               	movlw	0
  9031   0032E0  6E4B               	movwf	___fldiv@sign^0,c
  9032   0032E2                     l4345:
  9033   0032E2  C04C  F052         	movff	___fldiv@new_exp,___fldiv@bexp
  9034   0032E6  A052               	btfss	___fldiv@bexp^0,0,c
  9035   0032E8  EF78  F019         	goto	u5181
  9036   0032EC  EF7A  F019         	goto	u5180
  9037   0032F0                     u5181:
  9038   0032F0  EF7D  F019         	goto	l4351
  9039   0032F4                     u5180:
  9040   0032F4  8E3D               	bsf	(___fldiv@b+2)^0,7,c
  9041   0032F6  EF7E  F019         	goto	l4353
  9042   0032FA                     l4351:
  9043   0032FA  9E3D               	bcf	(___fldiv@b+2)^0,7,c
  9044   0032FC                     l4353:
  9045   0032FC  90D8               	bcf	status,0,c
  9046   0032FE  3052               	rrcf	___fldiv@bexp^0,w,c
  9047   003300  6E3E               	movwf	(___fldiv@b+3)^0,c
  9048   003302  EF34  F018         	goto	l4267
  9049   003306                     l859:
  9050   003306  0012               	return		;funcret
  9051   003308                     __end_of___fldiv:
  9052                           	callstack 0
  9053                           
  9054 ;; *************** function ___flge *****************
  9055 ;; Defined at:
  9056 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  ff1             4   50[COMRAM] unsigned char 
  9059 ;;  ff2             4   54[COMRAM] unsigned char 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;		None               void
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9073 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;Total ram usage:       12 bytes
  9076 ;; Hardware stack levels used: 1
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_RGB_to_HSV
  9081 ;;		_efgtoa
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           	psect	text42
  9086   003B20                     __ptext42:
  9087                           	callstack 0
  9088   003B20                     ___flge:
  9089                           	callstack 25
  9090   003B20  0E00               	movlw	0
  9091   003B22  1433               	andwf	___flge@ff1^0,w,c
  9092   003B24  6E3B               	movwf	??___flge^0,c
  9093   003B26  0E00               	movlw	0
  9094   003B28  1434               	andwf	(___flge@ff1+1)^0,w,c
  9095   003B2A  6E3C               	movwf	(??___flge+1)^0,c
  9096   003B2C  0E80               	movlw	128
  9097   003B2E  1435               	andwf	(___flge@ff1+2)^0,w,c
  9098   003B30  6E3D               	movwf	(??___flge+2)^0,c
  9099   003B32  0E7F               	movlw	127
  9100   003B34  1436               	andwf	(___flge@ff1+3)^0,w,c
  9101   003B36  6E3E               	movwf	(??___flge+3)^0,c
  9102   003B38  503B               	movf	??___flge^0,w,c
  9103   003B3A  103C               	iorwf	(??___flge+1)^0,w,c
  9104   003B3C  103D               	iorwf	(??___flge+2)^0,w,c
  9105   003B3E  103E               	iorwf	(??___flge+3)^0,w,c
  9106   003B40  A4D8               	btfss	status,2,c
  9107   003B42  EFA5  F01D         	goto	u5411
  9108   003B46  EFA7  F01D         	goto	u5410
  9109   003B4A                     u5411:
  9110   003B4A  EFAF  F01D         	goto	l4517
  9111   003B4E                     u5410:
  9112   003B4E  0E00               	movlw	0
  9113   003B50  6E33               	movwf	___flge@ff1^0,c
  9114   003B52  0E00               	movlw	0
  9115   003B54  6E34               	movwf	(___flge@ff1+1)^0,c
  9116   003B56  0E00               	movlw	0
  9117   003B58  6E35               	movwf	(___flge@ff1+2)^0,c
  9118   003B5A  0E00               	movlw	0
  9119   003B5C  6E36               	movwf	(___flge@ff1+3)^0,c
  9120   003B5E                     l4517:
  9121   003B5E  0E00               	movlw	0
  9122   003B60  1437               	andwf	___flge@ff2^0,w,c
  9123   003B62  6E3B               	movwf	??___flge^0,c
  9124   003B64  0E00               	movlw	0
  9125   003B66  1438               	andwf	(___flge@ff2+1)^0,w,c
  9126   003B68  6E3C               	movwf	(??___flge+1)^0,c
  9127   003B6A  0E80               	movlw	128
  9128   003B6C  1439               	andwf	(___flge@ff2+2)^0,w,c
  9129   003B6E  6E3D               	movwf	(??___flge+2)^0,c
  9130   003B70  0E7F               	movlw	127
  9131   003B72  143A               	andwf	(___flge@ff2+3)^0,w,c
  9132   003B74  6E3E               	movwf	(??___flge+3)^0,c
  9133   003B76  503B               	movf	??___flge^0,w,c
  9134   003B78  103C               	iorwf	(??___flge+1)^0,w,c
  9135   003B7A  103D               	iorwf	(??___flge+2)^0,w,c
  9136   003B7C  103E               	iorwf	(??___flge+3)^0,w,c
  9137   003B7E  A4D8               	btfss	status,2,c
  9138   003B80  EFC4  F01D         	goto	u5421
  9139   003B84  EFC6  F01D         	goto	u5420
  9140   003B88                     u5421:
  9141   003B88  EFCE  F01D         	goto	l4521
  9142   003B8C                     u5420:
  9143   003B8C  0E00               	movlw	0
  9144   003B8E  6E37               	movwf	___flge@ff2^0,c
  9145   003B90  0E00               	movlw	0
  9146   003B92  6E38               	movwf	(___flge@ff2+1)^0,c
  9147   003B94  0E00               	movlw	0
  9148   003B96  6E39               	movwf	(___flge@ff2+2)^0,c
  9149   003B98  0E00               	movlw	0
  9150   003B9A  6E3A               	movwf	(___flge@ff2+3)^0,c
  9151   003B9C                     l4521:
  9152   003B9C  AE36               	btfss	(___flge@ff1+3)^0,7,c
  9153   003B9E  EFD3  F01D         	goto	u5431
  9154   003BA2  EFD5  F01D         	goto	u5430
  9155   003BA6                     u5431:
  9156   003BA6  EFDE  F01D         	goto	l4525
  9157   003BAA                     u5430:
  9158   003BAA  6C33               	negf	___flge@ff1^0,c
  9159   003BAC  1E34               	comf	(___flge@ff1+1)^0,f,c
  9160   003BAE  B0D8               	btfsc	status,0,c
  9161   003BB0  2A34               	incf	(___flge@ff1+1)^0,f,c
  9162   003BB2  1E35               	comf	(___flge@ff1+2)^0,f,c
  9163   003BB4  B0D8               	btfsc	status,0,c
  9164   003BB6  2A35               	incf	(___flge@ff1+2)^0,f,c
  9165   003BB8  0E80               	movlw	128
  9166   003BBA  5636               	subfwb	(___flge@ff1+3)^0,f,c
  9167   003BBC                     l4525:
  9168   003BBC  AE3A               	btfss	(___flge@ff2+3)^0,7,c
  9169   003BBE  EFE3  F01D         	goto	u5441
  9170   003BC2  EFE5  F01D         	goto	u5440
  9171   003BC6                     u5441:
  9172   003BC6  EFEE  F01D         	goto	l542
  9173   003BCA                     u5440:
  9174   003BCA  6C37               	negf	___flge@ff2^0,c
  9175   003BCC  1E38               	comf	(___flge@ff2+1)^0,f,c
  9176   003BCE  B0D8               	btfsc	status,0,c
  9177   003BD0  2A38               	incf	(___flge@ff2+1)^0,f,c
  9178   003BD2  1E39               	comf	(___flge@ff2+2)^0,f,c
  9179   003BD4  B0D8               	btfsc	status,0,c
  9180   003BD6  2A39               	incf	(___flge@ff2+2)^0,f,c
  9181   003BD8  0E80               	movlw	128
  9182   003BDA  563A               	subfwb	(___flge@ff2+3)^0,f,c
  9183   003BDC                     l542:
  9184   003BDC  0E00               	movlw	0
  9185   003BDE  1A33               	xorwf	___flge@ff1^0,f,c
  9186   003BE0  0E00               	movlw	0
  9187   003BE2  1A34               	xorwf	(___flge@ff1+1)^0,f,c
  9188   003BE4  0E00               	movlw	0
  9189   003BE6  1A35               	xorwf	(___flge@ff1+2)^0,f,c
  9190   003BE8  0E80               	movlw	128
  9191   003BEA  1A36               	xorwf	(___flge@ff1+3)^0,f,c
  9192   003BEC  0E00               	movlw	0
  9193   003BEE  1A37               	xorwf	___flge@ff2^0,f,c
  9194   003BF0  0E00               	movlw	0
  9195   003BF2  1A38               	xorwf	(___flge@ff2+1)^0,f,c
  9196   003BF4  0E00               	movlw	0
  9197   003BF6  1A39               	xorwf	(___flge@ff2+2)^0,f,c
  9198   003BF8  0E80               	movlw	128
  9199   003BFA  1A3A               	xorwf	(___flge@ff2+3)^0,f,c
  9200   003BFC  5037               	movf	___flge@ff2^0,w,c
  9201   003BFE  5C33               	subwf	___flge@ff1^0,w,c
  9202   003C00  5038               	movf	(___flge@ff2+1)^0,w,c
  9203   003C02  5834               	subwfb	(___flge@ff1+1)^0,w,c
  9204   003C04  5039               	movf	(___flge@ff2+2)^0,w,c
  9205   003C06  5835               	subwfb	(___flge@ff1+2)^0,w,c
  9206   003C08  503A               	movf	(___flge@ff2+3)^0,w,c
  9207   003C0A  5836               	subwfb	(___flge@ff1+3)^0,w,c
  9208   003C0C  B0D8               	btfsc	status,0,c
  9209   003C0E  EF0B  F01E         	goto	u5451
  9210   003C12  EF0D  F01E         	goto	u5450
  9211   003C16                     u5451:
  9212   003C16  EF10  F01E         	goto	l4531
  9213   003C1A                     u5450:
  9214   003C1A  90D8               	bcf	status,0,c
  9215   003C1C  EF11  F01E         	goto	l547
  9216   003C20                     l4531:
  9217   003C20  80D8               	bsf	status,0,c
  9218   003C22                     l547:
  9219   003C22  0012               	return		;funcret
  9220   003C24                     __end_of___flge:
  9221                           	callstack 0
  9222                           
  9223 ;; *************** function _color_TRILED_ON *****************
  9224 ;; Defined at:
  9225 ;;		line 23 in file "color.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;		None
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;		None
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		None
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;Total ram usage:        0 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_main
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text43
  9253   00449A                     __ptext43:
  9254                           	callstack 0
  9255   00449A                     _color_TRILED_ON:
  9256                           	callstack 30
  9257   00449A                     
  9258                           ;color.c: 28:     TRISGbits.TRISG1 = 0;
  9259   00449A  9287               	bcf	135,1,c	;volatile
  9260                           
  9261                           ;color.c: 29:     TRISAbits.TRISA4 = 0;
  9262   00449C  9881               	bcf	129,4,c	;volatile
  9263                           
  9264                           ;color.c: 30:     TRISFbits.TRISF7 = 0;
  9265   00449E  9E86               	bcf	134,7,c	;volatile
  9266                           
  9267                           ;color.c: 33:     LATGbits.LATG1 = 1;
  9268   0044A0  827F               	bsf	127,1,c	;volatile
  9269                           
  9270                           ;color.c: 34:     LATAbits.LATA4 = 1;
  9271   0044A2  8879               	bsf	121,4,c	;volatile
  9272                           
  9273                           ;color.c: 35:     LATFbits.LATF7 = 1;
  9274   0044A4  8E7E               	bsf	126,7,c	;volatile
  9275   0044A6  0012               	return		;funcret
  9276   0044A8                     __end_of_color_TRILED_ON:
  9277                           	callstack 0
  9278                           
  9279                           	psect	rparam
  9280   000000                     tosu	equ	0xFFF
  9281                           tosh	equ	0xFFE
  9282                           tosl	equ	0xFFD
  9283                           stkptr	equ	0xFFC
  9284                           pclatu	equ	0xFFB
  9285                           pclath	equ	0xFFA
  9286                           pcl	equ	0xFF9
  9287                           tblptru	equ	0xFF8
  9288                           tblptrh	equ	0xFF7
  9289                           tblptrl	equ	0xFF6
  9290                           tablat	equ	0xFF5
  9291                           prodh	equ	0xFF4
  9292                           prodl	equ	0xFF3
  9293                           indf0	equ	0xFEF
  9294                           postinc0	equ	0xFEE
  9295                           postdec0	equ	0xFED
  9296                           preinc0	equ	0xFEC
  9297                           plusw0	equ	0xFEB
  9298                           fsr0h	equ	0xFEA
  9299                           fsr0l	equ	0xFE9
  9300                           wreg	equ	0xFE8
  9301                           indf1	equ	0xFE7
  9302                           postinc1	equ	0xFE6
  9303                           postdec1	equ	0xFE5
  9304                           preinc1	equ	0xFE4
  9305                           plusw1	equ	0xFE3
  9306                           fsr1h	equ	0xFE2
  9307                           fsr1l	equ	0xFE1
  9308                           bsr	equ	0xFE0
  9309                           indf2	equ	0xFDF
  9310                           postinc2	equ	0xFDE
  9311                           postdec2	equ	0xFDD
  9312                           preinc2	equ	0xFDC
  9313                           plusw2	equ	0xFDB
  9314                           fsr2h	equ	0xFDA
  9315                           fsr2l	equ	0xFD9
  9316                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    157     159
    BANK1           256      2     177
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    S1186$buffer	PTR unsigned char  size(2) Largest target is 0

    S1186$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 25
		 -> color_cardCheck@senddata(BANK0[25]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 25
		 -> color_cardCheck@senddata(BANK0[25]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flsub
    ___flge->___flmul

Critical Paths under _main in BANK0

    _main->_color_cardCheck
    _color_cardCheck->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  103752
                                              0 BANK1      2     2      0
                    _color_TRILED_ON
                    _color_cardCheck
                   _color_click_init
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_cardCheck                                     57    57      0  103458
                                            102 BANK0     55    55      0
                         _RGB_to_HSV
                             ___fleq
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    15     14   40863
                                             75 BANK0     27    13     14
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   40365
                                             71 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3   39877
                                             60 BANK0     11     8      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     852
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   37164
                                             93 COMRAM     2     2      0
                                             10 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3039
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1177
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             83 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     143
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RGB_to_HSV                                          87    68     19   53288
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (3) _custom_floatmodulo                                  18    10      8   23189
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     697
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    5447
                                             50 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3982
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    4673
                                             25 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8    6710
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    4523
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2066
                                             50 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_TRILED_ON                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _color_TRILED_ON
   _color_cardCheck
     _RGB_to_HSV
       ___fladd
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
         ___flsub (ARG)
           ___fladd
           ___flmul (ARG)
           ___xxtofl (ARG)
       ___fleq
       ___flge
         ___flmul (ARG)
       ___flmul
       ___flsub
       _custom_floatmodulo
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
     ___fleq
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      B1       7       69.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9D      9F       5       99.4%
BITBIGSFRllllhh     8F      0       0      37        0.0%
BITBIGSFRh          78      0       0      32        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhl     36      0       0      41        0.0%
BITBIGSFRllllhl     2D      0       0      40        0.0%
BITBIGSFRlllllh     2A      0       0      43        0.0%
BITBIGSFRllllll     26      0       0      47        0.0%
BITBIGSFRlllllh      F      0       0      45        0.0%
BITBIGSFRllllhl      C      0       0      42        0.0%
BITBIGSFRlllllh      9      0       0      44        0.0%
BITBIGSFRllllhl      8      0       0      38        0.0%
BITBIGSFRlllllh      6      0       0      46        0.0%
BITBIGSFRlllh        4      0       0      36        0.0%
BITBIGSFRlhl         2      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      33        0.0%
BITBIGSFRllllhl      1      0       0      39        0.0%
BITBIGSFRllh         1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      48        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 19:05:22 2024

               _color_read_Red 4030                   ___fldiv@aexp 0053                   ___fldiv@bexp 0052  
                 ___fldiv@sign 004B                _color_read_Blue 4120                             l50 44A6  
                           l53 4468                             l62 416E                             l47 43A6  
                           l56 407E                             l81 19F4                             l65 411E  
                           l91 1A9C                             l83 1A04                             l59 40CE  
                           l69 3A18                             l93 1AF6                             l77 198A  
                           l95 1B06                             l79 199A                             l89 1A8C  
                           l99 1E54            ___wmul@multiplicand 0003               _color_read_Clear 40D0  
             _color_read_Green 4080                            l120 2682                            l106 1FCE  
                          l126 2682                            l240 43FC                            l243 4422  
                          l252 44BC                            l172 4484                            l181 43FA  
                          l237 43D0                            l246 44C6                            l255 44B2  
                          l175 4498                            l249 44D0                            l258 4284  
                          l277 4448                            l542 3BDC                            l551 4372  
                          l536 3F22                            l547 3C22                            l900 2E76  
                          l901 2E64                            l805 2872                            l822 298C  
                          l814 2B42                            l806 2860                            l574 3B1E  
                          l831 2A5C                            l807 2826                            l832 2A4A  
                          l908 2F2E                            l932 37A4                            l861 3166  
                          l870 31AC                            l847 4242                            l935 3900  
                          l872 3224                            l864 312A                            l873 3212  
                          l946 3898                            l859 3306                            l891 2C08  
                          l939 383C                            l955 433A                            l982 3F3A  
                          l895 2F6C                            l898 2DFE                            l986 3F88  
                          l997 180C                            _pad 3F24                            wreg 0FE8  
                 ___flmul@aexp 0027                   ___flmul@bexp 002C                   ___flmul@sign 0026  
                 ___flmul@temp 0031                   ___flmul@prod 002D                   ___fltol@exp1 000A  
                         l1000 11A8                           l1002 0FEE                           l1110 402E  
                         l1030 15F4                           l1104 3FDE                           l1122 3E78  
                         l1130 42C4                           l1042 3DC6                           l1133 44D2  
                         l1046 3DCE                           l1073 41FC                           l1090 374C  
                         l1066 3536                           l1083 3D20                           l1139 4302  
                         l1093 3690                           l4001 3E16                           l2241 43BC  
                         l2233 43A8                           l4011 269E                           l4003 3E48  
                         l2243 43BE                           l2235 43B2                           l4101 2852  
                         l4021 26D2                           l4013 26A0                           l2237 43B8  
                         l4103 2854                           l4031 2704                           l4015 26B0  
                         l4023 26DA                           l4007 2684                           l2239 43BA  
                         l2361 449A                           l4201 2B22                           l4121 28DC  
                         l4113 28A4                           l4105 285E                           l4041 273A  
                         l4033 270A                           l4025 26EA                           l4017 26C0  
                         l4009 2690                           l4203 2B30                           l4123 28E0  
                         l4115 28B4                           l4107 2880                           l4131 2900  
                         l4051 2776                           l4043 274A                           l4035 2718  
                         l4027 26F0                           l4019 26D0                           l5011 19E0  
                         l5003 180E                           l4211 4292                           l4301 3152  
                         l4205 2B32                           l4133 2926                           l4141 297C  
                         l4125 28EE                           l4117 28C2                           l4109 2890  
                         l4061 2794                           l4053 2784                           l4045 274C  
                         l4037 271A                           l4029 2702                           l5021 1AE2  
                         l5013 1A14                           l5005 1944                           l3501 440C  
                         l4213 42A0                           l5101 2248                           l4311 3192  
                         l4303 3154                           l4231 2F9A                           l4223 2F6E  
                         l4151 29D0                           l4143 29A2                           l4135 295A  
                         l4127 28F0                           l4119 28D0                           l4071 27A8  
                         l4063 2798                           l4055 2788                           l4039 272A  
                         l4047 2754                           l3511 37CA                           l3503 3750  
                         l5031 1C1C                           l5023 1B16                           l5015 1A46  
                         l5007 1976                           l4215 42A4                           l5111 22E6  
                         l5103 224C                           l4321 31CE                           l4313 319C  
                         l4305 3164                           l4241 2FD4                           l4233 2FAA  
                         l4225 2F7A                           l4401 2C3C                           l4161 29FA  
                         l4153 29DE                           l4145 29B2                           l4137 295C  
                         l4129 28FA                           l4081 27BC                           l4073 27AC  
                         l4065 279C                           l4057 278C                           l4049 2764  
                         l3521 3824                           l3505 3760                           l5041 1D6E  
                         l5033 1C50                           l5025 1B7C                           l5017 1A78  
                         l5009 19AE                           l4209 4286                           l4217 4424  
                         l5121 23B2                           l5113 2318                           l5105 227E  
                         l4331 3240                           l4323 31DC                           l4315 31AA  
                         l4307 3176                           l4251 3000                           l4243 2FDA  
                         l4235 2FBA                           l4227 2F88                           l4411 2C8C  
                         l4403 2C48                           l4171 2A2C                           l4163 2A0A  
                         l4155 29E0                           l4139 296C                           l4091 280E  
                         l4083 27C0                           l4075 27B0                           l4067 27A0  
                         l4059 2790                           l3531 3888                           l3523 3826  
                         l3515 37DE                           l3507 376E                           l5051 1E98  
                         l5043 1DA0                           l5035 1C88                           l5027 1B92  
                         l5019 1AB0                           l4219 4440                           l5131 247E  
                         l5123 23E4                           l5115 234A                           l5107 22B0  
                         l4341 32AC                           l4333 324E                           l4325 320A  
                         l4309 318C                           l4317 31BC                           l4261 303A  
                         l4253 3010                           l4245 2FE0                           l4237 2FBC  
                         l4229 2F8A                           l4501 3EB8                           l4421 2CCE  
                         l4413 2C98                           l4405 2C52                           l4181 2A86  
                         l4173 2A42                           l4157 29EE                           l4149 29C6  
                         l4165 2A0C                           l4093 281E                           l4077 27B4  
                         l4069 27A4                           l4085 27C4                           l3541 38E0  
                         l3533 38A6                           l3525 3832                           l3517 37E6  
                         l3509 37B4                           l5061 1F92                           l5053 1EB0  
                         l5045 1DF8                           l5037 1CBA                           l5029 1BC4  
                         l3621 44C2                           l5141 254A                           l5133 24B0  
                         l5125 2416                           l5117 237C                           l5109 22E2  
                         l4351 32FA                           l4343 32C6                           l4335 3278  
                         l4319 31CA                           l4263 3050                           l4255 3020  
                         l4247 2FEE                           l4239 2FC4                           l4503 3EE6  
                         l4431 2D30                           l4423 2CDA                           l4415 2CA4  
                         l4407 2C68                           l4191 2B02                           l4183 2AC0  
                         l4159 29F6                           l4167 2A1A                           l4095 2834  
                         l4087 27C8                           l4079 27B8                           l3543 38EE  
                         l3535 38A8                           l3527 386E                           l3519 37F2  
                         l5055 1EE2                           l5039 1D12                           l5047 1E54  
                         l3631 44C8                           l3623 44AA                           l5231 33DA  
                         l5071 432E                           l5063 4304                           l5151 25E8  
                         l5143 254E                           l5135 24B4                           l5127 241A  
                         l5119 2380                           l4521 3B9C                           l4513 3B20  
                         l4353 32FC                           l4345 32E2                           l4329 3234  
                         l4337 327C                           l4281 30A4                           l4265 3060  
                         l4273 3080                           l4257 3022                           l4249 2FF0  
                         l4505 3EF6                           l4441 2DC6                           l4433 2D3C  
                         l4425 2CEA                           l4417 2CB2                           l4409 2C74  
                         l4361 2B44                           l4193 2B06                           l4177 2A6C  
                         l4185 2AC2                           l4169 2A1E                           l4097 2840  
                         l4089 27F2                           l3545 38F0                           l3537 38AC  
                         l3529 387A                           l5057 1EFE                           l5049 1E64  
                         l3641 425A                           l3633 44CC                           l3625 44AE  
                         l4601 3C44                           l5233 3480                           l5065 430E  
                         l5153 261A                           l5145 2580                           l5137 24E6  
                         l5129 244C                           l5081 20F8                           l5161 4170  
                         l4531 3C20                           l4523 3BAA                           l4515 3B4E  
                         l4347 32E6                           l4339 3296                           l4291 30F6  
                         l4283 30BE                           l4275 3090                           l4267 3068  
                         l4259 302A                           l4507 3F1A                           l4451 2E1C  
                         l4443 2DE4                           l4435 2D58                           l4427 2D04  
                         l4419 2CBE                           l4371 2B80                           l4363 2B50  
                         l4195 2B14                           l4187 2AD2                           l4179 2A78  
                         l4099 2844                           l3539 38D0                           l5059 1F5E  
                         l3643 4280                           l3635 4246                           l3619 44BE  
                         l3627 44B4                           l4603 3C82                           l4611 3CC2  
                         l5235 34F4                           l5067 4316                           l5155 264C  
                         l5147 25B2                           l5139 2518                           l5091 217C  
                         l5083 2100                           l5075 1FD0                           l5163 4174  
                         l4525 3BBC                           l4517 3B5E                           l4349 32F4  
                         l4293 3106                           l4285 30CE                           l4277 3090  
                         l4269 306C                           l4509 3F20                           l4461 2E86  
                         l4453 2E20                           l4445 2DEE                           l4437 2D82  
                         l4429 2D14                           l4381 2BB2                           l4373 2B90  
                         l4365 2B5E                           l4197 2B1A                           l4189 2AE2  
                         l3645 4282                           l3637 424A                           l3629 44B8  
                         l4613 3CD4                           l4605 3CAA                           l4621 42C6  
                         l4701 0EF0                           l5069 431E                           l5157 267E  
                         l5149 25E4                           l5093 21AE                           l5085 2118  
                         l5077 2068                           l5165 418E                           ?_pad 000F  
                         l4527 3BCA                           l4519 3B8C                           l4295 311A  
                         l4287 30DE                           l4471 2EE8                           l4463 2E92  
                         l4455 2E2E                           l4447 2DFC                           l4439 2DB8  
                         l4391 2BF2                           l4383 2BC0                           l4375 2B96  
                         l4367 2B60                           l4199 2B1C                           l4551 3A6E  
                         l4543 3A1A                           l3639 4252                           l3663 4484  
                         l4535 433C                           l4607 3CB6                           l4623 42CE  
                         l4711 0F20                           l4703 0EF4                           l5095 21B2  
                         l5087 2118                           l5079 20BA                           l5167 4192  
                         l4529 3C1A                           l4297 3128                           l4289 30EE  
                         l4481 2F50                           l4473 2EFC                           l4465 2EA0  
                         l4457 2E5C                           l4449 2E0E                           l4393 2BF8  
                         l4385 2BC2                           l4377 2BA6                           l4369 2B70  
                         l4553 3A70                           l4545 3A30                           l3681 4076  
                         l3665 4494                           l4537 4352                           l4617 3D18  
                         l4641 35D2                           l4633 3538                           l4625 3F8A  
                         l4801 13DC                           l4721 0F78                           l4705 0EFA  
                         l5097 21E4                           l5089 214A                           l5169 4196  
                         l4299 3134                           l4483 2F52                           l4475 2F16  
                         l4467 2ECA                           l4395 2C18                           l4387 2BD2  
                         l4379 2BAC                           l4491 41FE                           l4555 3A80  
                         l3499 43FC                           l3691 4120                           l4539 4362  
                         l4651 36F0                           l4635 3558                           l4627 3F98  
                         l4811 1478                           l4803 13F2                           l4723 0F7E  
                         l4707 0F02                           l4715 0F3C                           l5099 2216  
                         l4477 2F32                           l4485 2F58                           l4469 2ECE  
                         l4397 2C28                           l4389 2BE2                           l4493 420E  
                         l4581 3AFE                           l4565 3AAA                           l4557 3A84  
                         l4549 3A44                           l3693 4166                           l3685 4080  
                         l3781 43E4                           l4653 3704                           l4645 3644  
                         l4637 35B0                           l4629 3FAC                           l4661 3FE0  
                         l4813 14CE                           l4821 1520                           l4805 1424  
                         l4741 1004                           l4725 0F86                           l4717 0F62  
                         l4733 0F9E                           l4709 0F16                           l4901 3D58  
                         l3677 444C                           l4487 2F5C                           l4479 2F42  
                         l4583 3B0E                           l4575 3AD2                           l4567 3AB4  
                         l4559 3A92                           l3687 40C6                           l3679 4030  
                         l3775 43D2                           l4655 372C                           l4647 3680  
                         l4639 35C4                           l4663 3FF4                           l4671 4014  
                         l4591 3F46                           l4831 1552                           l4823 1530  
                         l4815 14D4                           l4807 1434                           l4751 10FA  
                         l4743 1038                           l4735 0FB8                           l4719 0F74  
                         l4903 3D74                           l4911 3330                           l3791 439C  
                         l3783 4374                           l4497 3E7A                           l4577 3ADE  
                         l4569 3ABE                           l3697 40D0                           l3777 43D6  
                         l4657 373C                           l4649 36B4                           l4665 4000  
                         l4593 3F56                           l4841 1624                           l4833 15CA  
                         l4825 1538                           l4817 1508                           l4809 1444  
                         l4761 11B0                           l4753 112E                           l4745 1076  
                         l4681 0E4A                           l4673 0E22                           l4905 3D94  
                         l4921 337A                           l4913 3338                           l3785 4378  
                         l4499 3EA8                           l4579 3AEE                           l3699 4116  
                         l3779 43E2                           l4667 4004                           l4595 3F5A  
                         l4587 3F24                           l4851 164A                           l4843 1628  
                         l4835 15EA                           l4827 153E                           l4819 151C  
                         l4771 11E4                           l4763 11C0                           l4755 1136  
                         l4747 10A8                           l4739 0FFE                           l4691 0EA0  
                         l4683 0E6E                           l4675 0E28                           l4907 3D9C  
                         l4931 33BE                           l4923 338E                           l4915 3346  
                         l3787 4382                           l4669 4010                           l4597 3F78  
                         l4589 3F32                           l4861 167E                           l4853 1650  
                         l4845 162E                           l4837 1606                           l4829 1546  
                         l4773 11F6                           l4781 1236                           l4765 11CC  
                         l4749 10E6                           l4693 0EAC                           l4685 0E78  
                         l4677 0E38                           l4941 3444                           l4925 339A  
                         l4917 334A                           l4909 3308                           l3789 4392  
                         l4599 3C24                           l4863 1684                           l4847 1636  
                         l4839 1614                           l4855 1656                           l4871 171C  
                         l4791 131E                           l4783 123E                           l4775 1204  
                         l4767 11D6                           l4759 1176                           l4695 0EB4  
                         l4687 0E80                           l4679 0E46                           l4927 33B0  
                         l4935 33C6                           l4919 3372                           l3993 3DD0  
                         l4881 179C                           l4873 173A                           l4865 16DC  
                         l4857 1668                           l4849 1646                           l4793 1352  
                         l4785 124E                           l4777 121C                           l4769 11DE  
                         l4689 0E90                           l4697 0EB8                           l4945 346C  
                         l4929 33B6                           l4937 33F8                           l4961 3510  
                         l3995 3DE0                           l4891 17F0                           l4883 17AA  
                         l4875 1756                           l4867 1710                           l4859 167A  
                         l4787 1262                           l4795 1358                           l4779 122E  
                         l4699 0EDE                           l4955 34D2                           l4947 3496  
                         l4939 341C                           l4981 3934                           l3997 3DF0  
                         l4885 17C2                           l4877 175E                           l4869 1718  
                         l4797 1376                           l4789 12C6                           l4949 34A4  
                         l4957 3502                           l3999 3DFA                           l4887 17D2  
                         l4879 176C                           l4799 13AA                           l4895 3D22  
                         l4985 3948                           l4889 17E8                           l4897 3D2A  
                         l4993 41B8                           l4987 3998                           l4979 3902  
                         l4899 3D50                           l4995 41C0                           l4989 3A08  
                         l4997 41D2                           l4999 41F2                           STR_1 0E01  
                         STR_2 0E19                           STR_5 0E1D                           u4000 426E  
                 _BAUD4CONbits 0EE9                           u4001 4266                           u4030 4494  
                         u4031 4490                           u5000 3000                           u5001 2FFC  
                         u5010 3010                           u4018 4270                           u5011 300C  
                         u5100 31CA                           u5020 3050                           u5101 31C6  
                         u5021 304C                           u5110 31DC                           u5030 3090  
                         u5111 31D8                           u5031 308C                           u5120 320A  
                         u5040 3106                           u5200 2B70                           u6000 1606  
                         u5121 3206                           u5041 3102                           u5201 2B6C  
                         u6001 1602                           u5130 3220                           u5050 3128  
                         u5210 2B80                           u4170 43FA                           u6010 1614  
                         u5131 321C                           u5051 3124                           u5211 2B7C  
                         u4171 43F6                           u6011 1610                           u5140 3234  
                         u5060 3152                           u5300 2E2E                           u5220 2BC0  
                         u6020 1668                           u6100 3330                           u5141 3230  
                         u5061 314E                           u5301 2E2A                           u5221 2BBC  
                         u6021 1664                           u6101 332C                           u5150 324E  
                         u5070 3176                           u5310 2E5C                           u5230 2BD2  
                         u6030 173A                           u6110 3372                           u5151 324A  
                         u5071 3172                           u5311 2E58                           u5231 2BCE  
                         u6031 1736                           u6111 336E                           u5160 3296  
                         u5080 318C                           u5400 3F1A                           u5320 2E72  
                         u5240 2BE2                           u4600 2718                           u6200 1AE2  
                         u4520 3DE0                           u6040 1756                           u6120 3418  
                         u5161 3292                           u5081 3188                           u5401 3F16  
                         u5321 2E6E                           u5241 2BDE                           u4601 2714  
                         u6201 1ADE                           u4521 3DDC                           u6041 1752  
                         u6121 3414                           u5410 3B4E                           u5170 32C6  
                         u5090 31AA                           u5330 2E86                           u5250 2C18  
                         u4610 272A                           u6130 3934                           u6210 1B7C  
                         u4530 3DF0                           u6050 17BC                           u5411 3B4A  
                         u5171 32C2                           u5091 31A6                           u5331 2E82  
                         u5251 2C14                           u4611 2726                           u6131 3930  
                         u6211 1B78                           u4531 3DEC                           u6051 17B6  
                         u5420 3B8C                           u5180 32F4                           u5340 2EA0  
                         u5260 2C28                           u4700 2872                           u4620 273A  
                         u5500 3AA6                           u3900 3820                           u6220 1BC4  
                         u4540 3E16                           u6060 17BE                           u6140 41F2  
                         u6300 21E4                           u5421 3B88                           u5181 32F0  
                         u5341 2E9C                           u5261 2C24                           u4701 286E  
                         u4621 2736                           u5501 3AA2                           u3901 381C  
                         u6221 1BC0                           u4541 3E12                           u6141 41EE  
                         u6301 21E0                           u5430 3BAA                           u5350 2EE8  
                         u5270 2DA2                           u5190 2B5E                           u4710 2880  
                         u4630 2776                           u5510 3ACE                           u3910 386A  
                         u6230 1CBA                           u6150 1944                           u4550 3E48  
                         u6070 17D2                           u6310 2216                           u5431 3BA6  
                         u5351 2EE4                           u5191 2B5A                           u4711 287C  
                         u4631 2772                           u5511 3ACA                           u3911 3866  
                         u6231 1CB6                           u6151 1940                           u4551 3E44  
                         u6071 17CE                           u6311 2212                           u5440 3BCA  
                         u5360 2F16                           u5280 2DFC                           u4800 29DE  
                         u4720 2890                           u4640 2784                           u4560 269E  
                         u5520 3AEE                           u3920 3888                           u6240 1DA0  
                         u6160 1976                           u6080 3D50                           u6400 23E4  
                         u6320 2248                           u5441 3BC6                           u5361 2F12  
                         u5281 2DF8                           u4801 29DA                           u4721 288C  
                         u4641 2780                           u4561 269A                           u5521 3AEA  
                         u3921 3884                           u6241 1D9C                           u6161 1972  
                         u6081 3D4C                           u6401 23E0                           u6321 2244  
                         u5450 3C1A                           u5370 2F50                           u5290 2E1C  
                         u4810 29EE                           u4730 28C2                           u4650 27F2  
                         u4570 26B0                           u5530 3AFE                           u3930 3898  
                         u6250 1E64                           u6170 19E0                           u3850 440C  
                         u5610 3D0E                           u6090 3DC6                           u6410 2416  
                         u6330 227E                           u5451 3C16                           u5371 2F4C  
                         u5291 2E18                           u5275 2D98                           u4811 29EA  
                         u4731 28BE                           u4651 27EE                           u4571 26AC  
                         u5531 3AFA                           u3931 3894                           u6251 1E60  
                         u6171 19DC                           u3851 4408                           u5611 3D08  
                         u6091 3DC2                           u6411 2412                           u6331 227A  
                         u5380 3EA8                           u4900 2AD2                           u4820 2A0A  
                         u4740 28D0                           u4660 280A                           u4580 26C0  
                         u3940 38A6                           u6260 1EE2                           u6180 1A46  
                         u3860 4422                           u5460 4352                           u5620 3D10  
                         u5700 3664                           u5540 3F32                           u6500 25E4  
                         u6420 244C                           u6340 22B0                           u5381 3EA4  
                         u4901 2ACE                           u4821 2A06                           u4741 28CC  
                         u4661 2804                           u4581 26BC                           u3941 38A2  
                         u6261 1EDE                           u6181 1A42                           u3861 441E  
                         u5461 434E                           u5605 3CE6                           u5541 3F2E  
                         u6501 25E0                           u6421 2448                           u6341 22AC  
                         u5390 3EE6                           u4910 2AE2                           u4830 2A1A  
                         u4750 28EE                           u4670 280C                           u4590 2702  
                         u5470 3A30                           u3950 38E0                           u3870 3760  
                         u6190 1A78                           u5710 3680                           u5550 3F78  
                         u5630 4302                           u6510 261A                           u6430 247E  
                         u6350 22E2                           u6270 214A                           u5391 3EE2  
                         u4911 2ADE                           u4831 2A16                           u4751 28EA  
                         u4591 26FE                           u5471 3A2C                           u3951 38DC  
                         u3871 375C                           u6191 1A74                           u5711 367C  
                         u5551 3F74                           u5631 42FE                           u6511 2616  
                         u6431 247A                           u6351 22DE                           u6271 2146  
                         u4920 2B02                           u4840 2A2C                           u4760 2926  
                         u4680 2834                           u5480 3A64                           u3960 38EE  
                         u3880 376E                           u5560 3C64                           u5720 36D4  
                         u5640 3F98                           u5800 0EF0                           u6520 264C  
                         u6440 24B0                           u6360 2318                           u6280 217C  
                         u4921 2AFE                           u4841 2A28                           u4761 2922  
                         u4681 2830                           u3961 38EA                           u3881 376A  
                         u5705 365A                           u5641 3F94                           u5801 0EEC  
                         u6521 2648                           u6441 24AC                           u6361 2314  
                         u6281 2178                           u4930 2B14                           u4850 2A42  
                         u4770 296C                           u4690 2852                           u5490 3A92  
                         u3890 37CA                           u5570 3C82                           u5730 36F0  
                         u5650 3580                           u5810 0F62                           u6530 267E  
                         u6450 24E6                           u6370 234A                           u6290 21AE  
                         u4931 2B10                           u4851 2A3E                           u4771 2968  
                         u4691 284E                           u5491 3A8E                           u3891 37C6  
                         u5571 3C7E                           u5731 36EC                           u5811 0F5E  
                         u6531 267A                           u6451 24E2                           u6371 2346  
                         u6291 21AA                           u4940 2B30                           u4860 2A58  
                         u4780 29A2                           u5580 3CAA                           u5740 372C  
                         u5660 35B0                           u5900 11F6                           u5820 0F74  
                         u6460 2518                           u6380 237C                           u4941 2B2C  
                         u4861 2A54                           u4781 299E                           u5485 3A5A  
                         u5581 3CA6                           u5565 3C5A                           u5741 3728  
                         u5725 36CA                           u5661 35AC                           u5901 11F2  
                         u5821 0F70                           u6461 2514                           u6381 2378  
                         u4870 2A6C                           u4790 29B2                           u5590 3CD4  
                         u5670 35D2                           u5750 402E                           u4950 42C4  
                         u5910 1204                           u5830 0FEA                           u6470 254A  
                         u6390 23B2                           u4871 2A68                           u4791 29AE  
                         u5591 3CD0                           u5671 35CE                           u5655 3576  
                         u5751 402A                           u4951 42C0                           u5911 1200  
                         u5831 0FE6                           u6471 2546                           u6391 23AE  
                         u4960 2F88                           u4880 2A86                           u5920 122E  
                         u5840 1076                           u5760 0E46                           u6480 2580  
                         u4961 2F84                           u4881 2A82                           u5921 122A  
                         u5841 1072                           u5761 0E42                           u6481 257C  
                         u4970 2F9A                           u4890 2AC0                           u5690 3640  
                         u5930 1376                           u5850 10A8                           u5770 0E90  
                         u6490 25B2                           u4971 2F96                           u4891 2ABC  
                         u5691 363C                           u5931 1372                           u5851 10A4  
                         u5771 0E8C                           u6491 25AE                           u6547 4180  
                         u4980 2FAA                           u5940 13DC                           u5860 10E6  
                         u5780 0EA0                           u4981 2FA6                           u5685 35E6  
                         u5941 13D8                           u5861 10E2                           u5781 0E9C  
                         u6557 41A2                           u4990 2FEE                           u5686 35F0  
                         u5950 1424                           u5870 1172                           u5790 0EDE  
                         u4991 2FEA                           u5687 3600                           u5951 1420  
                         u5871 116E                           u5791 0EDA                           u6567 4388  
                         u5960 1434                           u5880 11A8                           u5961 1430  
                         u5881 11A4                           u6577 210C                           u5970 14CE  
                         u5890 11C0                           u5971 14CA                           u5891 11BC  
                         u5980 151C                           u5981 1518                           u5990 15CA  
                         u5991 15C6               ?_color_TRILED_ON 0001                           _dbuf 015F  
                         _labs 3F8A                           _main 4170                           _prec 015A  
                         pad@i 0015                           pad@p 0012                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                  ___fpclassifyf 3C24                           prodh 0FF4  
                         prodl 0FF3                           start 0000                ___fldiv@new_exp 004C  
       __end_of_color_read_Red 4080                   ___param_bank 0000        __end_of_color_cardCheck 2684  
                        ??_pad 0014                  ___fltol@sign1 0009                          ?_labs 0001  
              __end_of___fladd 2B44                          ?_main 0001                __end_of___fldiv 3308  
              __end_of___flneg 4374                __end_of___flmul 2F6E                __end_of___flsub 4244  
              __end_of___fltol 3B20                    ?_RGB_to_HSV 006A                   vfpfcnvrt@fmt 009D  
      __end_of_sendCharSerial4 449A     __end_of_I2C_2_Master_Start 44C8     __end_of_I2C_2_Master_Write 44B4  
                        _flags 015C            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 3DD0                          _fputs 4286                          labs@a 0001  
                        pad@fp 000F                          _width 0158                          _putch 44D2  
                        tablat 0FF5                          status 0FD8                __end_of_sprintf 433C  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 4170          _I2C_2_Master_RepStart 44C8  
              ?_color_read_Red 0005                __initialization 446A                   __end_of_labs 3FE0  
                 __end_of_main 41B8                         ??_labs 0005                         ??_main 01AF  
                __activetblptr 0003     __end_of_read_prec_or_width 3DD0                         ?_fputc 0001  
                       ?_fputs 0009                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RD5PPS 0E6F                         _RD6PPS 0E70  
     __end_of_color_click_init 43A8                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 3902                   vfprintf@cfmt 00AA                         ___flge 3B20  
                       ___fleq 3E7A               ?_color_cardCheck 0001                      ??___fladd 0009  
                       ___wmul 4424                      ??___fldiv 0043                      ??___flneg 0005  
                    ??___flmul 0022                      ??___flsub 003B                      ??___fltol 0005  
                       _efgtoa 0E22                         _floorf 3538                         _memcpy 3FE0  
         read_prec_or_width@ap 0008                         clear_0 4470                         isa$std 0001  
                       pad@buf 0010                         _strcpy 42C6                         fputc@c 0001  
                       fputs@c 000C                         fputs@i 000D                         fputs@s 0009  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 41FE                      ??_sprintf 0060                     ___flge@ff1 0033  
                   ___flge@ff2 0037                ??___fpclassifyf 0005                   ___xxtofl@arg 0016  
                 ___xxtofl@exp 0015                   ___xxtofl@val 000C                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005                     __accesstop 0060        __end_of__initialization 447C  
     __end_of_color_read_Clear 4120                     ___flneg@f1 0001       __end_of_color_read_Green 40D0  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                  __end_of_fputc 3E7A  
                __end_of_fputs 42C6                  __end_of_putch 44D4                 _RGB_to_HSV$340 00A1  
               _RGB_to_HSV$336 0091                 _RGB_to_HSV$337 0095                 _RGB_to_HSV$339 009D  
           RGB_to_HSV@deltaRGB 00AD                        ??_fputc 0004                        ??_fputs 000C  
                      ??_putch 0001                     __pbssBANK0 00FD                     __pbssBANK1 0100  
            _color_writetoaddr 444A                        ?___flge 0033                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?___wmul 0001                        ?_efgtoa 006A  
                      ?_floorf 0054                        ?_memcpy 0001            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                   ??_RGB_to_HSV 005C                      ?___xxtofl 000C  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 446A                    RGB_to_HSV@B 0072                    RGB_to_HSV@C 0076  
                  RGB_to_HSV@G 006E                    RGB_to_HSV@H 007A                    RGB_to_HSV@R 006A  
                  RGB_to_HSV@S 007B                    RGB_to_HSV@V 007C                    RGB_to_HSV@b 00BD  
                  RGB_to_HSV@g 00B9             _I2C_2_Master_Start 44BE                    RGB_to_HSV@r 00B5  
           _I2C_2_Master_Write 44A8                        __Hparam 0000             __end_of_RGB_to_HSV 1FD0  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___fladd 2684                        ___fldiv 2F6E                        ___flneg 433C  
                      ___flmul 2B44                        ___flsub 41FE                        ___fltol 3A1A  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A7  
                 __psmallconst 0E00                        __pcinit 446A                        __ramtop 0E00  
                      __ptext0 4170                        __ptext1 4374                        __ptext2 444A  
                      __ptext3 43A8                        __ptext4 1FD0                        __ptext5 4304  
                      __ptext6 41B8                        __ptext7 3308                        __ptext8 3D22  
                      __ptext9 4424          read_prec_or_width@fmt 0007                     ??___xxtofl 0010  
                      efgtoa@c 006F                        efgtoa@d 007B                        efgtoa@e 007F  
                      efgtoa@f 006B                        efgtoa@g 0092                        efgtoa@h 0089  
                      efgtoa@i 0087                        efgtoa@l 008D                        efgtoa@m 007D  
                      efgtoa@n 0096                        efgtoa@p 0072                        efgtoa@t 0074  
                      efgtoa@u 0098                        efgtoa@w 0081                  _RxBufWriteCnt 015E  
                      _sprintf 4304           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 447C                        floorf@e 0064                        floorf@m 0060  
                      floorf@u 0066                        floorf@x 0054                        memcpy@d 0008  
                      memcpy@n 0005                        memcpy@s 000A                        fputc@fp 0003  
                      fputs@fp 000B              ?_color_click_init 0001             _read_prec_or_width 3D22  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 3538                     efgtoa@mode 0079  
                   efgtoa@sign 0091                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 00A1                     ??_vfprintf 0060                        strcpy@d 0005  
                  ___fladd@grs 0010                  ___xxtofl@sign 0014                      _TRISAbits 0F81  
                    _TRISDbits 0F84                      _TRISFbits 0F86                      _TRISGbits 0F87  
         ??_read_prec_or_width 0009                    ___fldiv@grs 004E                    ___fldiv@rem 0047  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 0028  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0005      sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007  
           ??_color_read_Green 0007     __end_of_custom_floatmodulo 3A1A                 __end_of___flge 3C24  
               __end_of___fleq 3F24                    vfpfcnvrt@ap 009E                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 009C                 __end_of___wmul 444A                 __end_of_efgtoa 180E  
            ??_color_TRILED_ON 0001                 __end_of_floorf 374E                 __end_of_memcpy 4030  
                   floorf@F521 0150               RGB_to_HSV@H_temp 00A9                 __end_of_strcpy 4304  
          color_read_Clear@tmp 000A            start_initialization 446A                    __end_of_pad 3F8A  
                _TxBufWriteCnt 00FE               RGB_to_HSV@c_norm 007D               RGB_to_HSV@maxRGB 00B1  
             RGB_to_HSV@minRGB 0099                _RGB_to_HSV$1653 0081                _RGB_to_HSV$1654 0085  
              _RGB_to_HSV$1655 0089                _RGB_to_HSV$1656 00A5                _RGB_to_HSV$1657 008D  
        __end_of___fpclassifyf 3D22            color_read_Green@tmp 000A                    vfprintf@fmt 00A8  
                     ??___flge 003B                       ??___fleq 0009                       ??___wmul 0005  
                     ??_efgtoa 005E            custom_floatmodulo@x 0054            custom_floatmodulo@y 0058  
                     ??_floorf 0058                       ??_memcpy 0007                       ??_strcpy 0004  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 003F  
                    ___fldiv@b 003B                      ___flmul@a 001E                      ___flmul@b 001A  
                    ___flsub@a 0037                      ___flsub@b 0033                  __pcstackBANK0 0060  
                __pcstackBANK1 01AF      custom_floatmodulo@intPart 0068                    _efgtoa$1311 0076  
                     ?___fladd 0001                       ?___fldiv 003B                       ?___flneg 0001  
                     ?___flmul 001A                       ?___flsub 0033                       ?___fltol 0001  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 43FC              _I2C_2_Master_Init 43A8              _I2C_2_Master_Read 4244  
            _I2C_2_Master_Stop 44B4                   _RxBufReadCnt 015D             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                     ?_sprintf 00AB              ??_color_cardCheck 00C6              _sendStringSerial4 43D2  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0002  
                     _LATFbits 0F7E                       _LATGbits 0F7F             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                       _PIR4bits 0E37              ??_sendCharSerial4 0001  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0003                       _SSP2STAT 0ED8  
                    _vfpfcnvrt 3308      __end_of_I2C_2_Master_Idle 4424      __end_of_I2C_2_Master_Init 43D2  
    __end_of_I2C_2_Master_Read 4286              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 44BE  
  I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007                   _TxBufReadCnt 00FD  
                   vfpfcnvrt@c 00A5      __end_of_sendStringSerial4 43FC        color_cardCheck@senddata 00C8  
__end_of_I2C_2_Master_RepStart 44D2             color_read_Blue@tmp 000A                _color_TRILED_ON 449A  
                     __Hrparam 0000                      memcpy@tmp 0007                     vfprintf@ap 00A9  
                     __Lrparam 0000                     vfprintf@fp 00A7                     ?_vfpfcnvrt 009C  
                   _ANSELDbits 0EA7             ___fpclassifyf@F465 0154                     sprintf@fmt 00AC  
                     ___xxtofl 374E             _custom_floatmodulo 3902                       __ptext10 0E22  
                     __ptext11 42C6                       __ptext20 433C                       __ptext12 3F24  
                     __ptext21 43D2                       __ptext13 4286                       __ptext30 44C8  
                     __ptext22 4482                       __ptext14 3DD0                       __ptext31 4244  
                     __ptext23 4030                       __ptext15 44D2                       __ptext40 3E7A  
                     __ptext32 43FC                       __ptext24 4080                       __ptext16 3FE0  
                     __ptext41 2F6E                       __ptext33 180E                       __ptext25 40D0  
                     __ptext17 3F8A                       __ptext42 3B20                       __ptext34 3902  
                     __ptext26 4120                       __ptext18 3538                       __ptext43 449A  
                     __ptext35 374E                       __ptext27 44A8                       __ptext19 3C24  
                     __ptext36 3A1A                       __ptext28 44B4                       __ptext37 41FE  
                     __ptext29 44BE                       __ptext38 2684                       __ptext39 2B44  
  custom_floatmodulo@remainder 0064                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                   strcpy@dest 0001            ?_custom_floatmodulo 0054                       efgtoa@fp 006A  
                     efgtoa@ne 0070                       efgtoa@pp 0078                       efgtoa@ou 0083  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       _vfprintf 41B8  
         ??_custom_floatmodulo 005C                       memcpy@d1 0001                       memcpy@s1 0003  
      __end_of_color_TRILED_ON 44A8                      sprintf@ap 00B9                      strcpy@src 0003  
                  efgtoa@nmode 007A     custom_floatmodulo@quotient 0060                    ??_vfpfcnvrt 009F  
             _color_click_init 4374                _color_cardCheck 1FD0                       sprintf@f 00BA  
                   _RGB_to_HSV 180E                       sprintf@s 00AB                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C               color_cardCheck@H 00F1               color_cardCheck@S 00F9  
             color_cardCheck@V 00F5               color_cardCheck@b 00E9               color_cardCheck@c 00ED  
             color_cardCheck@g 00E5               color_cardCheck@r 00E1                  ___fladd@signs 000D  
                   _TX4STAbits 0EE8                _sendCharSerial4 4482                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F  
