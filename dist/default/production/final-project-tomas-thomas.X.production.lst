

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 21:23:43 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 21/07/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F67K40 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   001928                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _temp
    67   001928  07                 	db	7
    68   000000                     _TRISGbits	set	3975
    69   000000                     _TRISEbits	set	3973
    70   000000                     _TRISFbits	set	3974
    71   000000                     _TRISHbits	set	3976
    72   000000                     _RC7PPS	set	3689
    73   000000                     _RE2PPS	set	3700
    74   000000                     _ANSELFbits	set	3764
    75   000000                     _CCPR4H	set	3873
    76   000000                     _CCPR3H	set	3877
    77   000000                     _CCPR2H	set	4006
    78   000000                     _CCPR1H	set	4010
    79   000000                     _CCP1CONbits	set	4011
    80   000000                     _CCPTMRS0bits	set	4013
    81   000000                     _T2PR	set	4028
    82   000000                     _T2CONbits	set	4029
    83   000000                     _CCP2CONbits	set	4007
    84   000000                     _CCP3CONbits	set	3878
    85   000000                     _LATCbits	set	3963
    86   000000                     _LATDbits	set	3964
    87   000000                     _TRISDbits	set	3972
    88   000000                     _CCP4CONbits	set	3874
    89   000000                     _LATGbits	set	3967
    90   000000                     _LATEbits	set	3965
    91   000000                     _LATHbits	set	3968
    92   000000                     _PORTFbits	set	3982
    93   000000                     _TRISCbits	set	3971
    94   000000                     _RE4PPS	set	3702
    95   000000                     _RG6PPS	set	3720
    96   000000                     _T2CLKCONbits	set	4031
    97   000000                     _T2HLTbits	set	4030
    98                           
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102   001904                     __pcinit:
   103                           	callstack 0
   104   001904                     start_initialization:
   105                           	callstack 0
   106   001904                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Initialize objects allocated to COMRAM (1 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111   001904  0E28               	movlw	low __pidataCOMRAM
   112   001906  6EF6               	movwf	tblptrl,c
   113   001908  0E19               	movlw	high __pidataCOMRAM
   114   00190A  6EF7               	movwf	tblptrh,c
   115   00190C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116   00190E  6EF8               	movwf	tblptru,c
   117   001910  0009               	tblrd		*+	;fetch initializer
   118   001912  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   119                           
   120                           ; Clear objects allocated to COMRAM (41 bytes)
   121   001916  EE00  F001         	lfsr	0,__pbssCOMRAM
   122   00191A  0E29               	movlw	41
   123   00191C                     clear_0:
   124   00191C  6AEE               	clrf	postinc0,c
   125   00191E  06E8               	decf	wreg,f,c
   126   001920  E1FD               	bnz	clear_0
   127   001922                     end_of_initialization:
   128                           	callstack 0
   129   001922                     __end_of__initialization:
   130                           	callstack 0
   131   001922  0100               	movlb	0
   132   001924  EF82  F00A         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	bssCOMRAM
   135   000001                     __pbssCOMRAM:
   136                           	callstack 0
   137   000001                     _motor_adjustments:
   138                           	callstack 0
   139   000001                     	ds	10
   140   00000B                     _off_period:
   141                           	callstack 0
   142   00000B                     	ds	2
   143   00000D                     _on_period:
   144                           	callstack 0
   145   00000D                     	ds	2
   146   00000F                     _calibration:
   147                           	callstack 0
   148   00000F                     	ds	9
   149   000018                     _motorR:
   150                           	callstack 0
   151   000018                     	ds	9
   152   000021                     _motorL:
   153                           	callstack 0
   154   000021                     	ds	9
   155                           
   156                           	psect	dataCOMRAM
   157   00004A                     __pdataCOMRAM:
   158                           	callstack 0
   159   00004A                     _temp:
   160                           	callstack 0
   161   00004A                     	ds	1
   162                           
   163                           	psect	cstackCOMRAM
   164   00002A                     __pcstackCOMRAM:
   165                           	callstack 0
   166   00002A                     ?___wmul:
   167                           	callstack 0
   168   00002A                     ?___awdiv:
   169                           	callstack 0
   170   00002A                     adjust_calibration@calibration_label:
   171                           	callstack 0
   172   00002A                     switch_calibration@calibration_index:
   173                           	callstack 0
   174   00002A                     initDCmotorsPWM@PWMperiod:
   175                           	callstack 0
   176   00002A                     delay_ms_function@milliseconds:
   177                           	callstack 0
   178   00002A                     ___wmul@multiplier:
   179                           	callstack 0
   180   00002A                     ___awdiv@dividend:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x0
   184   00002A                     	ds	1
   185   00002B                     ??_adjust_calibration:
   186   00002B                     ??_switch_calibration:
   187                           
   188                           ; 1 bytes @ 0x1
   189   00002B                     	ds	1
   190   00002C                     ??_delay_ms_function:
   191   00002C                     ___wmul@multiplicand:
   192                           	callstack 0
   193   00002C                     ___awdiv@divisor:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x2
   197   00002C                     	ds	2
   198   00002E                     ___awdiv@counter:
   199                           	callstack 0
   200   00002E                     ___wmul@product:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x4
   204   00002E                     	ds	1
   205   00002F                     ___awdiv@sign:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0x5
   209   00002F                     	ds	1
   210   000030                     ?___lwdiv:
   211                           	callstack 0
   212   000030                     ___awdiv@quotient:
   213                           	callstack 0
   214   000030                     ___lwdiv@dividend:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x6
   218   000030                     	ds	2
   219   000032                     ___lwdiv@divisor:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x8
   223   000032                     	ds	2
   224   000034                     ___lwdiv@quotient:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0xA
   228   000034                     	ds	2
   229   000036                     ___lwdiv@counter:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0xC
   233   000036                     	ds	1
   234   000037                     setMotorPWM@m:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0xD
   238   000037                     	ds	1
   239   000038                     ??_setMotorPWM:
   240                           
   241                           ; 1 bytes @ 0xE
   242   000038                     	ds	2
   243   00003A                     setMotorPWM@posDuty:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x10
   247   00003A                     	ds	1
   248   00003B                     setMotorPWM@negDuty:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x11
   252   00003B                     	ds	1
   253   00003C                     forward@mL:
   254                           	callstack 0
   255   00003C                     turnLEFT@mL:
   256                           	callstack 0
   257   00003C                     turnRIGHT@mL:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x12
   261   00003C                     	ds	1
   262   00003D                     forward@mR:
   263                           	callstack 0
   264   00003D                     turnLEFT@mR:
   265                           	callstack 0
   266   00003D                     turnRIGHT@mR:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x13
   270   00003D                     	ds	1
   271   00003E                     ??_turnRIGHT:
   272   00003E                     ??_turnLEFT:
   273   00003E                     ??_forward:
   274                           
   275                           ; 1 bytes @ 0x14
   276   00003E                     	ds	3
   277   000041                     forward@Distance_Calibration:
   278                           	callstack 0
   279   000041                     turnLEFT@rotation_calibration:
   280                           	callstack 0
   281   000041                     turnRIGHT@rotation_calibration:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x17
   285   000041                     	ds	1
   286   000042                     forward@i:
   287                           	callstack 0
   288   000042                     turnLEFT@i:
   289                           	callstack 0
   290   000042                     turnRIGHT@i:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x18
   294   000042                     	ds	2
   295   000044                     forward@j:
   296                           	callstack 0
   297   000044                     turnLEFT@j:
   298                           	callstack 0
   299   000044                     turnRIGHT@j:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x1A
   303   000044                     	ds	2
   304   000046                     forward@max_power:
   305                           	callstack 0
   306   000046                     turnLEFT@max_power:
   307                           	callstack 0
   308   000046                     turnRIGHT@max_power:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x1C
   312   000046                     	ds	2
   313   000048                     forward@delay_time:
   314                           	callstack 0
   315   000048                     turnLEFT@delay_time:
   316                           	callstack 0
   317   000048                     turnRIGHT@delay_time:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x1E
   321   000048                     	ds	2
   322   00004A                     
   323                           ; 1 bytes @ 0x20
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 20 in file "../lab-6-motors-and-pwm-tomas-thomas.X/main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  PWMperiod       2    0        unsigned int 
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels required when called: 3
   349 ;; This function calls:
   350 ;;		_adjust_calibration
   351 ;;		_forward
   352 ;;		_initDCmotorsPWM
   353 ;;		_switch_calibration
   354 ;;		_turnLEFT
   355 ;;		_turnRIGHT
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362   001504                     __ptext0:
   363                           	callstack 0
   364   001504                     _main:
   365                           	callstack 28
   366   001504                     
   367                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 22:     initDCmotorsPWM(PWMperiod);
   368   001504  0E00               	movlw	0
   369   001506  6E2B               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   370   001508  0E63               	movlw	99
   371   00150A  6E2A               	movwf	initDCmotorsPWM@PWMperiod^0,c
   372   00150C  ECD4  F00B         	call	_initDCmotorsPWM	;wreg free
   373   001510                     
   374                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 26:     motorL.power=0;
   375   001510  0E00               	movlw	0
   376   001512  6E21               	movwf	_motorL^0,c
   377   001514                     
   378                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 27:     motorL.direction=1;
   379   001514  0E01               	movlw	1
   380   001516  6E22               	movwf	(_motorL+1)^0,c
   381   001518                     
   382                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 28:     motorL.brakemode=1;
   383   001518  0E01               	movlw	1
   384   00151A  6E23               	movwf	(_motorL+2)^0,c
   385   00151C                     
   386                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 29:     motorL.posDutyHighByte=(unsigned
      +                           char *)(&CCPR1H);
   387   00151C  0EAA               	movlw	170
   388   00151E  6E26               	movwf	(_motorL+5)^0,c
   389   001520  0E0F               	movlw	15
   390   001522  6E27               	movwf	(_motorL+6)^0,c
   391   001524                     
   392                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 30:     motorL.negDutyHighByte=(unsigned
      +                           char *)(&CCPR2H);
   393   001524  0EA6               	movlw	166
   394   001526  6E28               	movwf	(_motorL+7)^0,c
   395   001528  0E0F               	movlw	15
   396   00152A  6E29               	movwf	(_motorL+8)^0,c
   397   00152C                     
   398                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 31:     motorL.PWMperiod=PWMperiod;
   399   00152C  0E00               	movlw	0
   400   00152E  6E25               	movwf	(_motorL+4)^0,c
   401   001530  0E63               	movlw	99
   402   001532  6E24               	movwf	(_motorL+3)^0,c
   403   001534                     
   404                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 33:     motorR.power=0;
   405   001534  0E00               	movlw	0
   406   001536  6E18               	movwf	_motorR^0,c
   407   001538                     
   408                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 34:     motorR.direction=1;
   409   001538  0E01               	movlw	1
   410   00153A  6E19               	movwf	(_motorR+1)^0,c
   411   00153C                     
   412                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 35:     motorR.brakemode=1;
   413   00153C  0E01               	movlw	1
   414   00153E  6E1A               	movwf	(_motorR+2)^0,c
   415   001540                     
   416                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 36:     motorR.posDutyHighByte=(unsigned
      +                           char *)(&CCPR3H);
   417   001540  0E25               	movlw	37
   418   001542  6E1D               	movwf	(_motorR+5)^0,c
   419   001544  0E0F               	movlw	15
   420   001546  6E1E               	movwf	(_motorR+6)^0,c
   421   001548                     
   422                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 37:     motorR.negDutyHighByte=(unsigned
      +                           char *)(&CCPR4H);
   423   001548  0E21               	movlw	33
   424   00154A  6E1F               	movwf	(_motorR+7)^0,c
   425   00154C  0E0F               	movlw	15
   426   00154E  6E20               	movwf	(_motorR+8)^0,c
   427   001550                     
   428                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 38:     motorR.PWMperiod=PWMperiod;
   429   001550  0E00               	movlw	0
   430   001552  6E1C               	movwf	(_motorR+4)^0,c
   431   001554  0E63               	movlw	99
   432   001556  6E1B               	movwf	(_motorR+3)^0,c
   433   001558                     
   434                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 44:     TRISDbits.TRISD7 = 0;
   435   001558  9E84               	bcf	132,7,c	;volatile
   436   00155A                     
   437                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 45:     LATDbits.LATD7 = 0;
   438   00155A  9E7C               	bcf	124,7,c	;volatile
   439   00155C                     
   440                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 48:     TRISHbits.TRISH3 = 0;
   441   00155C  9688               	bcf	136,3,c	;volatile
   442   00155E                     
   443                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 49:     LATHbits.LATH3 = 0;
   444   00155E  9680               	bcf	128,3,c	;volatile
   445   001560                     
   446                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 52:     TRISFbits.TRISF2=1;
   447   001560  8486               	bsf	134,2,c	;volatile
   448   001562                     
   449                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 53:     ANSELFbits.ANSELF2=0;
   450   001562  010E               	movlb	14	; () banked
   451   001564  95B4               	bcf	180,2,b	;volatile
   452   001566                     
   453                           ; BSR set to: 14
   454                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 56:     TRISFbits.TRISF3=1;
   455   001566  8686               	bsf	134,3,c	;volatile
   456   001568                     
   457                           ; BSR set to: 14
   458                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 57:     ANSELFbits.ANSELF3=0;
   459   001568  97B4               	bcf	180,3,b	;volatile
   460   00156A                     
   461                           ; BSR set to: 14
   462                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 61:     calibration.index = 1;
   463   00156A  0E01               	movlw	1
   464   00156C  6E0F               	movwf	_calibration^0,c
   465   00156E                     
   466                           ; BSR set to: 14
   467                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 62:     calibration.over = 0;
   468   00156E  0E00               	movlw	0
   469   001570  6E10               	movwf	(_calibration+1)^0,c
   470   001572                     
   471                           ; BSR set to: 14
   472                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 68:     calibration.left_90 = 60;
   473   001572  0E3C               	movlw	60
   474   001574  6E11               	movwf	(_calibration+2)^0,c
   475   001576                     
   476                           ; BSR set to: 14
   477                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 69:     calibration.right_90 = 10;
   478   001576  0E0A               	movlw	10
   479   001578  6E12               	movwf	(_calibration+3)^0,c
   480   00157A                     
   481                           ; BSR set to: 14
   482                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 70:     calibration.left_135 = 60;
   483   00157A  0E3C               	movlw	60
   484   00157C  6E13               	movwf	(_calibration+4)^0,c
   485   00157E                     
   486                           ; BSR set to: 14
   487                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 71:     calibration.right_135 = 10;
   488   00157E  0E0A               	movlw	10
   489   001580  6E14               	movwf	(_calibration+5)^0,c
   490   001582                     
   491                           ; BSR set to: 14
   492                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 72:     calibration.forward = 10;
   493   001582  0E0A               	movlw	10
   494   001584  6E15               	movwf	(_calibration+6)^0,c
   495   001586                     
   496                           ; BSR set to: 14
   497                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 73:     calibration.forward_motorL = 20;
   498   001586  0E14               	movlw	20
   499   001588  6E16               	movwf	(_calibration+7)^0,c
   500   00158A                     
   501                           ; BSR set to: 14
   502                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 74:     calibration.forward_motorR = 20;
   503   00158A  0E14               	movlw	20
   504   00158C  6E17               	movwf	(_calibration+8)^0,c
   505   00158E                     l1730:
   506                           
   507                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 85:         if(calibration.index == 1){
   508   00158E  040F               	decf	_calibration^0,w,c
   509   001590  A4D8               	btfss	status,2,c
   510   001592  EFCD  F00A         	goto	u851
   511   001596  EFCF  F00A         	goto	u850
   512   00159A                     u851:
   513   00159A  EFDE  F00A         	goto	l1738
   514   00159E                     u850:
   515   00159E                     
   516                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 86:             adjust_calibration(&cali
      +                          bration.right_90);
   517   00159E  0E12               	movlw	low (_calibration+3)
   518   0015A0  6E2A               	movwf	adjust_calibration@calibration_label^0,c
   519   0015A2  ECDB  F009         	call	_adjust_calibration	;wreg free
   520   0015A6                     
   521                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 87:             turnRIGHT(calibration.ri
      +                          ght_90, &motorL, &motorR);
   522   0015A6  0E21               	movlw	low _motorL
   523   0015A8  6E3C               	movwf	turnRIGHT@mL^0,c
   524   0015AA  0E18               	movlw	low _motorR
   525   0015AC  6E3D               	movwf	turnRIGHT@mR^0,c
   526   0015AE  5012               	movf	(_calibration+3)^0,w,c
   527   0015B0  EC01  F007         	call	_turnRIGHT
   528   0015B4                     
   529                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 88:             switch_calibration(&cali
      +                          bration.index);
   530   0015B4  0E0F               	movlw	low _calibration
   531   0015B6  6E2A               	movwf	switch_calibration@calibration_index^0,c
   532   0015B8  EC7D  F00B         	call	_switch_calibration	;wreg free
   533   0015BC                     l1738:
   534                           
   535                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 92:         if(calibration.index == 2){
   536   0015BC  0E02               	movlw	2
   537   0015BE  180F               	xorwf	_calibration^0,w,c
   538   0015C0  A4D8               	btfss	status,2,c
   539   0015C2  EFE5  F00A         	goto	u861
   540   0015C6  EFE7  F00A         	goto	u860
   541   0015CA                     u861:
   542   0015CA  EFF6  F00A         	goto	l1746
   543   0015CE                     u860:
   544   0015CE                     
   545                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 93:             adjust_calibration(&cali
      +                          bration.left_90);
   546   0015CE  0E11               	movlw	low (_calibration+2)
   547   0015D0  6E2A               	movwf	adjust_calibration@calibration_label^0,c
   548   0015D2  ECDB  F009         	call	_adjust_calibration	;wreg free
   549   0015D6                     
   550                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 94:             turnLEFT(calibration.lef
      +                          t_90, &motorL, &motorR);
   551   0015D6  0E21               	movlw	low _motorL
   552   0015D8  6E3C               	movwf	turnLEFT@mL^0,c
   553   0015DA  0E18               	movlw	low _motorR
   554   0015DC  6E3D               	movwf	turnLEFT@mR^0,c
   555   0015DE  5011               	movf	(_calibration+2)^0,w,c
   556   0015E0  ECC0  F007         	call	_turnLEFT
   557   0015E4                     
   558                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 95:             switch_calibration(&cali
      +                          bration.index);
   559   0015E4  0E0F               	movlw	low _calibration
   560   0015E6  6E2A               	movwf	switch_calibration@calibration_index^0,c
   561   0015E8  EC7D  F00B         	call	_switch_calibration	;wreg free
   562   0015EC                     l1746:
   563                           
   564                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 99:         if(calibration.index == 3){
   565   0015EC  0E03               	movlw	3
   566   0015EE  180F               	xorwf	_calibration^0,w,c
   567   0015F0  A4D8               	btfss	status,2,c
   568   0015F2  EFFD  F00A         	goto	u871
   569   0015F6  EFFF  F00A         	goto	u870
   570   0015FA                     u871:
   571   0015FA  EF0E  F00B         	goto	l1754
   572   0015FE                     u870:
   573   0015FE                     
   574                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 100:             adjust_calibration(&cal
      +                          ibration.forward);
   575   0015FE  0E15               	movlw	low (_calibration+6)
   576   001600  6E2A               	movwf	adjust_calibration@calibration_label^0,c
   577   001602  ECDB  F009         	call	_adjust_calibration	;wreg free
   578   001606                     
   579                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 101:             forward(calibration.for
      +                          ward, &motorL, &motorR);
   580   001606  0E21               	movlw	low _motorL
   581   001608  6E3C               	movwf	forward@mL^0,c
   582   00160A  0E18               	movlw	low _motorR
   583   00160C  6E3D               	movwf	forward@mR^0,c
   584   00160E  5015               	movf	(_calibration+6)^0,w,c
   585   001610  EC7F  F008         	call	_forward
   586   001614                     
   587                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 102:             switch_calibration(&cal
      +                          ibration.index);
   588   001614  0E0F               	movlw	low _calibration
   589   001616  6E2A               	movwf	switch_calibration@calibration_index^0,c
   590   001618  EC7D  F00B         	call	_switch_calibration	;wreg free
   591   00161C                     l1754:
   592                           
   593                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 122:         if(calibration.index == 5){
   594   00161C  0E05               	movlw	5
   595   00161E  180F               	xorwf	_calibration^0,w,c
   596   001620  A4D8               	btfss	status,2,c
   597   001622  EF15  F00B         	goto	u881
   598   001626  EF17  F00B         	goto	u880
   599   00162A                     u881:
   600   00162A  EFC7  F00A         	goto	l1730
   601   00162E                     u880:
   602   00162E                     
   603                           ;../lab-6-motors-and-pwm-tomas-thomas.X/main.c: 123:             calibration.index = 1;
   604   00162E  0E01               	movlw	1
   605   001630  6E0F               	movwf	_calibration^0,c
   606   001632  EF00  F000         	goto	start
   607   001636                     __end_of_main:
   608                           	callstack 0
   609                           
   610 ;; *************** function _turnRIGHT *****************
   611 ;; Defined at:
   612 ;;		line 203 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  rotation_cal    1    wreg     unsigned char 
   615 ;;  mL              1   18[COMRAM] PTR struct DC_motor
   616 ;;		 -> motorL(9), 
   617 ;;  mR              1   19[COMRAM] PTR struct DC_motor
   618 ;;		 -> motorR(9), 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  rotation_cal    1   23[COMRAM] unsigned char 
   621 ;;  j               2   26[COMRAM] int 
   622 ;;  i               2   24[COMRAM] int 
   623 ;;  delay_time      2   30[COMRAM] int 
   624 ;;  max_power       2   28[COMRAM] int 
   625 ;;  acceleration    2    0        int 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   637 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   638 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   639 ;;Total ram usage:       14 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 2
   642 ;; This function calls:
   643 ;;		___awdiv
   644 ;;		_delay_ms_function
   645 ;;		_setMotorPWM
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text1
   652   000E02                     __ptext1:
   653                           	callstack 0
   654   000E02                     _turnRIGHT:
   655                           	callstack 28
   656                           
   657                           ;incstack = 0
   658                           ;turnRIGHT@rotation_calibration stored from wreg
   659   000E02  6E41               	movwf	turnRIGHT@rotation_calibration^0,c
   660   000E04                     
   661                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 204:     mL->direction = 1;
   662   000E04  503C               	movf	turnRIGHT@mL^0,w,c
   663   000E06  6ED9               	movwf	fsr2l,c
   664   000E08  6ADA               	clrf	fsr2h,c
   665   000E0A  0E01               	movlw	1
   666   000E0C  26D9               	addwf	fsr2l,f,c
   667   000E0E  0E01               	movlw	1
   668   000E10  6EDF               	movwf	indf2,c
   669                           
   670                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 205:     mR->direction = 0;
   671   000E12  503D               	movf	turnRIGHT@mR^0,w,c
   672   000E14  6ED9               	movwf	fsr2l,c
   673   000E16  6ADA               	clrf	fsr2h,c
   674   000E18  0E01               	movlw	1
   675   000E1A  26D9               	addwf	fsr2l,f,c
   676   000E1C  6ADF               	clrf	indf2,c
   677   000E1E                     
   678                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 207:    int max_power = 20;
   679   000E1E  0E00               	movlw	0
   680   000E20  6E47               	movwf	(turnRIGHT@max_power+1)^0,c
   681   000E22  0E14               	movlw	20
   682   000E24  6E46               	movwf	turnRIGHT@max_power^0,c
   683   000E26                     
   684                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 209:     int delay_time = acceler
      +                          ation_time/max_power;
   685   000E26  0E00               	movlw	0
   686   000E28  6E2B               	movwf	(___awdiv@dividend+1)^0,c
   687   000E2A  0E64               	movlw	100
   688   000E2C  6E2A               	movwf	___awdiv@dividend^0,c
   689   000E2E  0E00               	movlw	0
   690   000E30  6E2D               	movwf	(___awdiv@divisor+1)^0,c
   691   000E32  0E14               	movlw	20
   692   000E34  6E2C               	movwf	___awdiv@divisor^0,c
   693   000E36  EC1B  F00B         	call	___awdiv	;wreg free
   694   000E3A  C02A  F048         	movff	?___awdiv,turnRIGHT@delay_time
   695   000E3E  C02B  F049         	movff	?___awdiv+1,turnRIGHT@delay_time+1
   696   000E42                     
   697                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 212:     for(int i=0; i< max_powe
      +                          r; i++){
   698   000E42  0E00               	movlw	0
   699   000E44  6E43               	movwf	(turnRIGHT@i+1)^0,c
   700   000E46  0E00               	movlw	0
   701   000E48  6E42               	movwf	turnRIGHT@i^0,c
   702   000E4A  EF4B  F007         	goto	l1538
   703   000E4E                     l1528:
   704                           
   705                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 213:         mL->power = mL->powe
      +                          r + 1;
   706   000E4E  503C               	movf	turnRIGHT@mL^0,w,c
   707   000E50  6ED9               	movwf	fsr2l,c
   708   000E52  6ADA               	clrf	fsr2h,c
   709   000E54  503C               	movf	turnRIGHT@mL^0,w,c
   710   000E56  6EE1               	movwf	fsr1l,c
   711   000E58  6AE2               	clrf	fsr1h,c
   712   000E5A  50E7               	movf	indf1,w,c
   713   000E5C  6E3E               	movwf	??_turnRIGHT^0,c
   714   000E5E  283E               	incf	??_turnRIGHT^0,w,c
   715   000E60  6EDF               	movwf	indf2,c
   716                           
   717                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 214:         mR->power = mR->powe
      +                          r + 1 ;
   718   000E62  503D               	movf	turnRIGHT@mR^0,w,c
   719   000E64  6ED9               	movwf	fsr2l,c
   720   000E66  6ADA               	clrf	fsr2h,c
   721   000E68  503D               	movf	turnRIGHT@mR^0,w,c
   722   000E6A  6EE1               	movwf	fsr1l,c
   723   000E6C  6AE2               	clrf	fsr1h,c
   724   000E6E  50E7               	movf	indf1,w,c
   725   000E70  6E3E               	movwf	??_turnRIGHT^0,c
   726   000E72  283E               	incf	??_turnRIGHT^0,w,c
   727   000E74  6EDF               	movwf	indf2,c
   728   000E76                     
   729                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 215:         setMotorPWM(mR);
   730   000E76  C03D  F037         	movff	turnRIGHT@mR,setMotorPWM@m
   731   000E7A  EC31  F009         	call	_setMotorPWM	;wreg free
   732   000E7E                     
   733                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 216:         setMotorPWM(mL);
   734   000E7E  C03C  F037         	movff	turnRIGHT@mL,setMotorPWM@m
   735   000E82  EC31  F009         	call	_setMotorPWM	;wreg free
   736   000E86                     
   737                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 217:         delay_ms_function(de
      +                          lay_time);
   738   000E86  C048  F02A         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
   739   000E8A  C049  F02B         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
   740   000E8E  EC58  F00C         	call	_delay_ms_function	;wreg free
   741   000E92                     
   742                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 218:     }
   743   000E92  4A42               	infsnz	turnRIGHT@i^0,f,c
   744   000E94  2A43               	incf	(turnRIGHT@i+1)^0,f,c
   745   000E96                     l1538:
   746   000E96  5046               	movf	turnRIGHT@max_power^0,w,c
   747   000E98  5C42               	subwf	turnRIGHT@i^0,w,c
   748   000E9A  5043               	movf	(turnRIGHT@i+1)^0,w,c
   749   000E9C  0A80               	xorlw	128
   750   000E9E  6E3E               	movwf	??_turnRIGHT^0,c
   751   000EA0  5047               	movf	(turnRIGHT@max_power+1)^0,w,c
   752   000EA2  0A80               	xorlw	128
   753   000EA4  583E               	subwfb	??_turnRIGHT^0,w,c
   754   000EA6  A0D8               	btfss	status,0,c
   755   000EA8  EF58  F007         	goto	u651
   756   000EAC  EF5A  F007         	goto	u650
   757   000EB0                     u651:
   758   000EB0  EF27  F007         	goto	l1528
   759   000EB4                     u650:
   760   000EB4                     
   761                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 221:     for(int j=0; j<rotation_
      +                          calibration; j++){
   762   000EB4  0E00               	movlw	0
   763   000EB6  6E45               	movwf	(turnRIGHT@j+1)^0,c
   764   000EB8  0E00               	movlw	0
   765   000EBA  6E44               	movwf	turnRIGHT@j^0,c
   766   000EBC  EF69  F007         	goto	l236
   767   000EC0                     l1542:
   768                           
   769                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 222:         _delay((unsigned lon
      +                          g)((10)*(64000000/4000.0)));
   770   000EC0  0ED0               	movlw	208
   771   000EC2  6E3E               	movwf	??_turnRIGHT^0,c
   772   000EC4  0ECA               	movlw	202
   773   000EC6                     u937:
   774   000EC6  2EE8               	decfsz	wreg,f,c
   775   000EC8  D7FE               	bra	u937
   776   000ECA  2E3E               	decfsz	??_turnRIGHT^0,f,c
   777   000ECC  D7FC               	bra	u937
   778   000ECE                     
   779                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 223:     }
   780   000ECE  4A44               	infsnz	turnRIGHT@j^0,f,c
   781   000ED0  2A45               	incf	(turnRIGHT@j+1)^0,f,c
   782   000ED2                     l236:
   783   000ED2  5041               	movf	turnRIGHT@rotation_calibration^0,w,c
   784   000ED4  6E3E               	movwf	??_turnRIGHT^0,c
   785   000ED6  6A3F               	clrf	(??_turnRIGHT+1)^0,c
   786   000ED8  503E               	movf	??_turnRIGHT^0,w,c
   787   000EDA  5C44               	subwf	turnRIGHT@j^0,w,c
   788   000EDC  5045               	movf	(turnRIGHT@j+1)^0,w,c
   789   000EDE  0A80               	xorlw	128
   790   000EE0  6E40               	movwf	(??_turnRIGHT+2)^0,c
   791   000EE2  503F               	movf	(??_turnRIGHT+1)^0,w,c
   792   000EE4  0A80               	xorlw	128
   793   000EE6  5840               	subwfb	(??_turnRIGHT+2)^0,w,c
   794   000EE8  A0D8               	btfss	status,0,c
   795   000EEA  EF79  F007         	goto	u661
   796   000EEE  EF7B  F007         	goto	u660
   797   000EF2                     u661:
   798   000EF2  EF60  F007         	goto	l1542
   799   000EF6                     u660:
   800   000EF6  EFA9  F007         	goto	l1560
   801   000EFA                     l1546:
   802                           
   803                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 227:         if(mR->power> 0 ){
   804   000EFA  503D               	movf	turnRIGHT@mR^0,w,c
   805   000EFC  6ED9               	movwf	fsr2l,c
   806   000EFE  6ADA               	clrf	fsr2h,c
   807   000F00  50DF               	movf	indf2,w,c
   808   000F02  B4D8               	btfsc	status,2,c
   809   000F04  EF86  F007         	goto	u671
   810   000F08  EF88  F007         	goto	u670
   811   000F0C                     u671:
   812   000F0C  EF8C  F007         	goto	l1550
   813   000F10                     u670:
   814   000F10                     
   815                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 228:             mR->power--;
   816   000F10  503D               	movf	turnRIGHT@mR^0,w,c
   817   000F12  6ED9               	movwf	fsr2l,c
   818   000F14  6ADA               	clrf	fsr2h,c
   819   000F16  06DF               	decf	indf2,f,c
   820   000F18                     l1550:
   821                           
   822                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 230:         if(mL->power> 0 ){
   823   000F18  503C               	movf	turnRIGHT@mL^0,w,c
   824   000F1A  6ED9               	movwf	fsr2l,c
   825   000F1C  6ADA               	clrf	fsr2h,c
   826   000F1E  50DF               	movf	indf2,w,c
   827   000F20  B4D8               	btfsc	status,2,c
   828   000F22  EF95  F007         	goto	u681
   829   000F26  EF97  F007         	goto	u680
   830   000F2A                     u681:
   831   000F2A  EF9B  F007         	goto	l1554
   832   000F2E                     u680:
   833   000F2E                     
   834                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 231:             mL->power--;
   835   000F2E  503C               	movf	turnRIGHT@mL^0,w,c
   836   000F30  6ED9               	movwf	fsr2l,c
   837   000F32  6ADA               	clrf	fsr2h,c
   838   000F34  06DF               	decf	indf2,f,c
   839   000F36                     l1554:
   840                           
   841                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 233:         setMotorPWM(mR);
   842   000F36  C03D  F037         	movff	turnRIGHT@mR,setMotorPWM@m
   843   000F3A  EC31  F009         	call	_setMotorPWM	;wreg free
   844   000F3E                     
   845                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 234:         setMotorPWM(mL);
   846   000F3E  C03C  F037         	movff	turnRIGHT@mL,setMotorPWM@m
   847   000F42  EC31  F009         	call	_setMotorPWM	;wreg free
   848   000F46                     
   849                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 235:         delay_ms_function(de
      +                          lay_time);
   850   000F46  C048  F02A         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
   851   000F4A  C049  F02B         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
   852   000F4E  EC58  F00C         	call	_delay_ms_function	;wreg free
   853   000F52                     l1560:
   854                           
   855                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 226:     while(mL->power || mR->p
      +                          ower > 0){
   856   000F52  503C               	movf	turnRIGHT@mL^0,w,c
   857   000F54  6ED9               	movwf	fsr2l,c
   858   000F56  6ADA               	clrf	fsr2h,c
   859   000F58  50DF               	movf	indf2,w,c
   860   000F5A  A4D8               	btfss	status,2,c
   861   000F5C  EFB2  F007         	goto	u691
   862   000F60  EFB4  F007         	goto	u690
   863   000F64                     u691:
   864   000F64  EF7D  F007         	goto	l1546
   865   000F68                     u690:
   866   000F68  503D               	movf	turnRIGHT@mR^0,w,c
   867   000F6A  6ED9               	movwf	fsr2l,c
   868   000F6C  6ADA               	clrf	fsr2h,c
   869   000F6E  50DF               	movf	indf2,w,c
   870   000F70  A4D8               	btfss	status,2,c
   871   000F72  EFBD  F007         	goto	u701
   872   000F76  EFBF  F007         	goto	u700
   873   000F7A                     u701:
   874   000F7A  EF7D  F007         	goto	l1546
   875   000F7E                     u700:
   876   000F7E  0012               	return		;funcret
   877   000F80                     __end_of_turnRIGHT:
   878                           	callstack 0
   879                           
   880 ;; *************** function _turnLEFT *****************
   881 ;; Defined at:
   882 ;;		line 165 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  rotation_cal    1    wreg     unsigned char 
   885 ;;  mL              1   18[COMRAM] PTR struct DC_motor
   886 ;;		 -> motorL(9), 
   887 ;;  mR              1   19[COMRAM] PTR struct DC_motor
   888 ;;		 -> motorR(9), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  rotation_cal    1   23[COMRAM] unsigned char 
   891 ;;  j               2   26[COMRAM] int 
   892 ;;  i               2   24[COMRAM] int 
   893 ;;  delay_time      2   30[COMRAM] int 
   894 ;;  max_power       2   28[COMRAM] int 
   895 ;;  acceleration    2    0        int 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;Total ram usage:       14 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 2
   912 ;; This function calls:
   913 ;;		___awdiv
   914 ;;		_delay_ms_function
   915 ;;		_setMotorPWM
   916 ;; This function is called by:
   917 ;;		_main
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text2
   922   000F80                     __ptext2:
   923                           	callstack 0
   924   000F80                     _turnLEFT:
   925                           	callstack 28
   926                           
   927                           ;incstack = 0
   928                           ;turnLEFT@rotation_calibration stored from wreg
   929   000F80  6E41               	movwf	turnLEFT@rotation_calibration^0,c
   930   000F82                     
   931                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 166:     mL->direction = 0;
   932   000F82  503C               	movf	turnLEFT@mL^0,w,c
   933   000F84  6ED9               	movwf	fsr2l,c
   934   000F86  6ADA               	clrf	fsr2h,c
   935   000F88  0E01               	movlw	1
   936   000F8A  26D9               	addwf	fsr2l,f,c
   937   000F8C  6ADF               	clrf	indf2,c
   938                           
   939                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 167:     mR->direction = 1;
   940   000F8E  503D               	movf	turnLEFT@mR^0,w,c
   941   000F90  6ED9               	movwf	fsr2l,c
   942   000F92  6ADA               	clrf	fsr2h,c
   943   000F94  0E01               	movlw	1
   944   000F96  26D9               	addwf	fsr2l,f,c
   945   000F98  0E01               	movlw	1
   946   000F9A  6EDF               	movwf	indf2,c
   947   000F9C                     
   948                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 169:     int max_power = 20;
   949   000F9C  0E00               	movlw	0
   950   000F9E  6E47               	movwf	(turnLEFT@max_power+1)^0,c
   951   000FA0  0E14               	movlw	20
   952   000FA2  6E46               	movwf	turnLEFT@max_power^0,c
   953   000FA4                     
   954                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 171:     int delay_time = acceler
      +                          ation_time/max_power;
   955   000FA4  0E00               	movlw	0
   956   000FA6  6E2B               	movwf	(___awdiv@dividend+1)^0,c
   957   000FA8  0E64               	movlw	100
   958   000FAA  6E2A               	movwf	___awdiv@dividend^0,c
   959   000FAC  0E00               	movlw	0
   960   000FAE  6E2D               	movwf	(___awdiv@divisor+1)^0,c
   961   000FB0  0E14               	movlw	20
   962   000FB2  6E2C               	movwf	___awdiv@divisor^0,c
   963   000FB4  EC1B  F00B         	call	___awdiv	;wreg free
   964   000FB8  C02A  F048         	movff	?___awdiv,turnLEFT@delay_time
   965   000FBC  C02B  F049         	movff	?___awdiv+1,turnLEFT@delay_time+1
   966   000FC0                     
   967                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 174:     for(int i=0; i< max_powe
      +                          r; i++){
   968   000FC0  0E00               	movlw	0
   969   000FC2  6E43               	movwf	(turnLEFT@i+1)^0,c
   970   000FC4  0E00               	movlw	0
   971   000FC6  6E42               	movwf	turnLEFT@i^0,c
   972   000FC8  EF0A  F008         	goto	l1600
   973   000FCC                     l1590:
   974                           
   975                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 175:         mL->power = mL->powe
      +                          r + 1;
   976   000FCC  503C               	movf	turnLEFT@mL^0,w,c
   977   000FCE  6ED9               	movwf	fsr2l,c
   978   000FD0  6ADA               	clrf	fsr2h,c
   979   000FD2  503C               	movf	turnLEFT@mL^0,w,c
   980   000FD4  6EE1               	movwf	fsr1l,c
   981   000FD6  6AE2               	clrf	fsr1h,c
   982   000FD8  50E7               	movf	indf1,w,c
   983   000FDA  6E3E               	movwf	??_turnLEFT^0,c
   984   000FDC  283E               	incf	??_turnLEFT^0,w,c
   985   000FDE  6EDF               	movwf	indf2,c
   986                           
   987                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 176:         mR->power = mR->powe
      +                          r + 1 ;
   988   000FE0  503D               	movf	turnLEFT@mR^0,w,c
   989   000FE2  6ED9               	movwf	fsr2l,c
   990   000FE4  6ADA               	clrf	fsr2h,c
   991   000FE6  503D               	movf	turnLEFT@mR^0,w,c
   992   000FE8  6EE1               	movwf	fsr1l,c
   993   000FEA  6AE2               	clrf	fsr1h,c
   994   000FEC  50E7               	movf	indf1,w,c
   995   000FEE  6E3E               	movwf	??_turnLEFT^0,c
   996   000FF0  283E               	incf	??_turnLEFT^0,w,c
   997   000FF2  6EDF               	movwf	indf2,c
   998   000FF4                     
   999                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 177:         setMotorPWM(mR);
  1000   000FF4  C03D  F037         	movff	turnLEFT@mR,setMotorPWM@m
  1001   000FF8  EC31  F009         	call	_setMotorPWM	;wreg free
  1002   000FFC                     
  1003                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 178:         setMotorPWM(mL);
  1004   000FFC  C03C  F037         	movff	turnLEFT@mL,setMotorPWM@m
  1005   001000  EC31  F009         	call	_setMotorPWM	;wreg free
  1006   001004                     
  1007                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 179:         delay_ms_function(de
      +                          lay_time);
  1008   001004  C048  F02A         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  1009   001008  C049  F02B         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  1010   00100C  EC58  F00C         	call	_delay_ms_function	;wreg free
  1011   001010                     
  1012                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 180:     }
  1013   001010  4A42               	infsnz	turnLEFT@i^0,f,c
  1014   001012  2A43               	incf	(turnLEFT@i+1)^0,f,c
  1015   001014                     l1600:
  1016   001014  5046               	movf	turnLEFT@max_power^0,w,c
  1017   001016  5C42               	subwf	turnLEFT@i^0,w,c
  1018   001018  5043               	movf	(turnLEFT@i+1)^0,w,c
  1019   00101A  0A80               	xorlw	128
  1020   00101C  6E3E               	movwf	??_turnLEFT^0,c
  1021   00101E  5047               	movf	(turnLEFT@max_power+1)^0,w,c
  1022   001020  0A80               	xorlw	128
  1023   001022  583E               	subwfb	??_turnLEFT^0,w,c
  1024   001024  A0D8               	btfss	status,0,c
  1025   001026  EF17  F008         	goto	u731
  1026   00102A  EF19  F008         	goto	u730
  1027   00102E                     u731:
  1028   00102E  EFE6  F007         	goto	l1590
  1029   001032                     u730:
  1030   001032                     
  1031                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 183:     for(int j=0; j<rotation_
      +                          calibration; j++){
  1032   001032  0E00               	movlw	0
  1033   001034  6E45               	movwf	(turnLEFT@j+1)^0,c
  1034   001036  0E00               	movlw	0
  1035   001038  6E44               	movwf	turnLEFT@j^0,c
  1036   00103A  EF28  F008         	goto	l222
  1037   00103E                     l1604:
  1038                           
  1039                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 184:         _delay((unsigned lon
      +                          g)((10)*(64000000/4000.0)));
  1040   00103E  0ED0               	movlw	208
  1041   001040  6E3E               	movwf	??_turnLEFT^0,c
  1042   001042  0ECA               	movlw	202
  1043   001044                     u947:
  1044   001044  2EE8               	decfsz	wreg,f,c
  1045   001046  D7FE               	bra	u947
  1046   001048  2E3E               	decfsz	??_turnLEFT^0,f,c
  1047   00104A  D7FC               	bra	u947
  1048   00104C                     
  1049                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 185:     }
  1050   00104C  4A44               	infsnz	turnLEFT@j^0,f,c
  1051   00104E  2A45               	incf	(turnLEFT@j+1)^0,f,c
  1052   001050                     l222:
  1053   001050  5041               	movf	turnLEFT@rotation_calibration^0,w,c
  1054   001052  6E3E               	movwf	??_turnLEFT^0,c
  1055   001054  6A3F               	clrf	(??_turnLEFT+1)^0,c
  1056   001056  503E               	movf	??_turnLEFT^0,w,c
  1057   001058  5C44               	subwf	turnLEFT@j^0,w,c
  1058   00105A  5045               	movf	(turnLEFT@j+1)^0,w,c
  1059   00105C  0A80               	xorlw	128
  1060   00105E  6E40               	movwf	(??_turnLEFT+2)^0,c
  1061   001060  503F               	movf	(??_turnLEFT+1)^0,w,c
  1062   001062  0A80               	xorlw	128
  1063   001064  5840               	subwfb	(??_turnLEFT+2)^0,w,c
  1064   001066  A0D8               	btfss	status,0,c
  1065   001068  EF38  F008         	goto	u741
  1066   00106C  EF3A  F008         	goto	u740
  1067   001070                     u741:
  1068   001070  EF1F  F008         	goto	l1604
  1069   001074                     u740:
  1070   001074  EF68  F008         	goto	l1622
  1071   001078                     l1608:
  1072                           
  1073                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 189:         if(mR->power> 0 ){
  1074   001078  503D               	movf	turnLEFT@mR^0,w,c
  1075   00107A  6ED9               	movwf	fsr2l,c
  1076   00107C  6ADA               	clrf	fsr2h,c
  1077   00107E  50DF               	movf	indf2,w,c
  1078   001080  B4D8               	btfsc	status,2,c
  1079   001082  EF45  F008         	goto	u751
  1080   001086  EF47  F008         	goto	u750
  1081   00108A                     u751:
  1082   00108A  EF4B  F008         	goto	l1612
  1083   00108E                     u750:
  1084   00108E                     
  1085                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 190:             mR->power--;
  1086   00108E  503D               	movf	turnLEFT@mR^0,w,c
  1087   001090  6ED9               	movwf	fsr2l,c
  1088   001092  6ADA               	clrf	fsr2h,c
  1089   001094  06DF               	decf	indf2,f,c
  1090   001096                     l1612:
  1091                           
  1092                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 192:         if(mL->power> 0 ){
  1093   001096  503C               	movf	turnLEFT@mL^0,w,c
  1094   001098  6ED9               	movwf	fsr2l,c
  1095   00109A  6ADA               	clrf	fsr2h,c
  1096   00109C  50DF               	movf	indf2,w,c
  1097   00109E  B4D8               	btfsc	status,2,c
  1098   0010A0  EF54  F008         	goto	u761
  1099   0010A4  EF56  F008         	goto	u760
  1100   0010A8                     u761:
  1101   0010A8  EF5A  F008         	goto	l1616
  1102   0010AC                     u760:
  1103   0010AC                     
  1104                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 193:             mL->power--;
  1105   0010AC  503C               	movf	turnLEFT@mL^0,w,c
  1106   0010AE  6ED9               	movwf	fsr2l,c
  1107   0010B0  6ADA               	clrf	fsr2h,c
  1108   0010B2  06DF               	decf	indf2,f,c
  1109   0010B4                     l1616:
  1110                           
  1111                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 195:         setMotorPWM(mR);
  1112   0010B4  C03D  F037         	movff	turnLEFT@mR,setMotorPWM@m
  1113   0010B8  EC31  F009         	call	_setMotorPWM	;wreg free
  1114   0010BC                     
  1115                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 196:         setMotorPWM(mL);
  1116   0010BC  C03C  F037         	movff	turnLEFT@mL,setMotorPWM@m
  1117   0010C0  EC31  F009         	call	_setMotorPWM	;wreg free
  1118   0010C4                     
  1119                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 197:         delay_ms_function(de
      +                          lay_time);
  1120   0010C4  C048  F02A         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  1121   0010C8  C049  F02B         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  1122   0010CC  EC58  F00C         	call	_delay_ms_function	;wreg free
  1123   0010D0                     l1622:
  1124                           
  1125                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 188:     while(mL->power || mR->p
      +                          ower > 0){
  1126   0010D0  503C               	movf	turnLEFT@mL^0,w,c
  1127   0010D2  6ED9               	movwf	fsr2l,c
  1128   0010D4  6ADA               	clrf	fsr2h,c
  1129   0010D6  50DF               	movf	indf2,w,c
  1130   0010D8  A4D8               	btfss	status,2,c
  1131   0010DA  EF71  F008         	goto	u771
  1132   0010DE  EF73  F008         	goto	u770
  1133   0010E2                     u771:
  1134   0010E2  EF3C  F008         	goto	l1608
  1135   0010E6                     u770:
  1136   0010E6  503D               	movf	turnLEFT@mR^0,w,c
  1137   0010E8  6ED9               	movwf	fsr2l,c
  1138   0010EA  6ADA               	clrf	fsr2h,c
  1139   0010EC  50DF               	movf	indf2,w,c
  1140   0010EE  A4D8               	btfss	status,2,c
  1141   0010F0  EF7C  F008         	goto	u781
  1142   0010F4  EF7E  F008         	goto	u780
  1143   0010F8                     u781:
  1144   0010F8  EF3C  F008         	goto	l1608
  1145   0010FC                     u780:
  1146   0010FC  0012               	return		;funcret
  1147   0010FE                     __end_of_turnLEFT:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _switch_calibration *****************
  1151 ;; Defined at:
  1152 ;;		line 44 in file "../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  calibration_    1    0[COMRAM] PTR int 
  1155 ;;		 -> calibration(9), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;Total ram usage:        3 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text3
  1181   0016FA                     __ptext3:
  1182                           	callstack 0
  1183   0016FA                     _switch_calibration:
  1184                           	callstack 30
  1185   0016FA                     l115:
  1186                           
  1187                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 46:         if(!PORTFbits.RF2){
  1188   0016FA  B48E               	btfsc	142,2,c	;volatile
  1189   0016FC  EF82  F00B         	goto	u711
  1190   001700  EF84  F00B         	goto	u710
  1191   001704                     u711:
  1192   001704  EFB2  F00B         	goto	l116
  1193   001708                     u710:
  1194   001708                     
  1195                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 47:             _delay((unsigned 
      +                          long)((200)*(64000000/4000.0)));
  1196   001708  0E11               	movlw	17
  1197   00170A  6E2C               	movwf	(??_switch_calibration+1)^0,c
  1198   00170C  0E3C               	movlw	60
  1199   00170E  6E2B               	movwf	??_switch_calibration^0,c
  1200   001710  0ECB               	movlw	203
  1201   001712                     u957:
  1202   001712  2EE8               	decfsz	wreg,f,c
  1203   001714  D7FE               	bra	u957
  1204   001716  2E2B               	decfsz	??_switch_calibration^0,f,c
  1205   001718  D7FC               	bra	u957
  1206   00171A  2E2C               	decfsz	(??_switch_calibration+1)^0,f,c
  1207   00171C  D7FA               	bra	u957
  1208   00171E  0000               	nop	
  1209   001720                     
  1210                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 48:             *calibration_inde
      +                          x = *calibration_index + 1;
  1211   001720  502A               	movf	switch_calibration@calibration_index^0,w,c
  1212   001722  6ED9               	movwf	fsr2l,c
  1213   001724  6ADA               	clrf	fsr2h,c
  1214   001726  CFDE F02B          	movff	postinc2,??_switch_calibration
  1215   00172A  CFDD F02C          	movff	postdec2,??_switch_calibration+1
  1216   00172E  0E01               	movlw	1
  1217   001730  262B               	addwf	??_switch_calibration^0,f,c
  1218   001732  0E00               	movlw	0
  1219   001734  222C               	addwfc	(??_switch_calibration+1)^0,f,c
  1220   001736  502A               	movf	switch_calibration@calibration_index^0,w,c
  1221   001738  6ED9               	movwf	fsr2l,c
  1222   00173A  6ADA               	clrf	fsr2h,c
  1223   00173C  C02B  FFDE         	movff	??_switch_calibration,postinc2
  1224   001740  C02C  FFDD         	movff	??_switch_calibration+1,postdec2
  1225   001744                     
  1226                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 49:             LATDbits.LATD7 = 
      +                          1;
  1227   001744  8E7C               	bsf	124,7,c	;volatile
  1228   001746                     
  1229                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 50:             _delay((unsigned 
      +                          long)((200)*(64000000/4000.0)));
  1230   001746  0E11               	movlw	17
  1231   001748  6E2C               	movwf	(??_switch_calibration+1)^0,c
  1232   00174A  0E3C               	movlw	60
  1233   00174C  6E2B               	movwf	??_switch_calibration^0,c
  1234   00174E  0ECB               	movlw	203
  1235   001750                     u967:
  1236   001750  2EE8               	decfsz	wreg,f,c
  1237   001752  D7FE               	bra	u967
  1238   001754  2E2B               	decfsz	??_switch_calibration^0,f,c
  1239   001756  D7FC               	bra	u967
  1240   001758  2E2C               	decfsz	(??_switch_calibration+1)^0,f,c
  1241   00175A  D7FA               	bra	u967
  1242   00175C  0000               	nop	
  1243   00175E                     
  1244                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 51:             LATDbits.LATD7 = 
      +                          0;
  1245   00175E  9E7C               	bcf	124,7,c	;volatile
  1246                           
  1247                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 52:             break;
  1248   001760  EFD3  F00B         	goto	l120
  1249   001764                     l116:
  1250                           
  1251                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 55:         if(!PORTFbits.RF3){
  1252   001764  B68E               	btfsc	142,3,c	;volatile
  1253   001766  EFB7  F00B         	goto	u721
  1254   00176A  EFB9  F00B         	goto	u720
  1255   00176E                     u721:
  1256   00176E  EF7D  F00B         	goto	l115
  1257   001772                     u720:
  1258   001772                     
  1259                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 56:             _delay((unsigned 
      +                          long)((200)*(64000000/4000.0)));
  1260   001772  0E11               	movlw	17
  1261   001774  6E2C               	movwf	(??_switch_calibration+1)^0,c
  1262   001776  0E3C               	movlw	60
  1263   001778  6E2B               	movwf	??_switch_calibration^0,c
  1264   00177A  0ECB               	movlw	203
  1265   00177C                     u977:
  1266   00177C  2EE8               	decfsz	wreg,f,c
  1267   00177E  D7FE               	bra	u977
  1268   001780  2E2B               	decfsz	??_switch_calibration^0,f,c
  1269   001782  D7FC               	bra	u977
  1270   001784  2E2C               	decfsz	(??_switch_calibration+1)^0,f,c
  1271   001786  D7FA               	bra	u977
  1272   001788  0000               	nop	
  1273   00178A                     
  1274                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 57:             LATHbits.LATH3 = 
      +                          1;
  1275   00178A  8680               	bsf	128,3,c	;volatile
  1276                           
  1277                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 58:             _delay((unsigned 
      +                          long)((200)*(64000000/4000.0)));
  1278   00178C  0E11               	movlw	17
  1279   00178E  6E2C               	movwf	(??_switch_calibration+1)^0,c
  1280   001790  0E3C               	movlw	60
  1281   001792  6E2B               	movwf	??_switch_calibration^0,c
  1282   001794  0ECB               	movlw	203
  1283   001796                     u987:
  1284   001796  2EE8               	decfsz	wreg,f,c
  1285   001798  D7FE               	bra	u987
  1286   00179A  2E2B               	decfsz	??_switch_calibration^0,f,c
  1287   00179C  D7FC               	bra	u987
  1288   00179E  2E2C               	decfsz	(??_switch_calibration+1)^0,f,c
  1289   0017A0  D7FA               	bra	u987
  1290   0017A2  0000               	nop	
  1291   0017A4                     
  1292                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 59:             LATHbits.LATH3 = 
      +                          0;
  1293   0017A4  9680               	bcf	128,3,c	;volatile
  1294   0017A6                     l120:
  1295   0017A6  0012               	return		;funcret
  1296   0017A8                     __end_of_switch_calibration:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function _initDCmotorsPWM *****************
  1300 ;; Defined at:
  1301 ;;		line 5 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;Total ram usage:        2 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text4
  1329   0017A8                     __ptext4:
  1330                           	callstack 0
  1331   0017A8                     _initDCmotorsPWM:
  1332                           	callstack 30
  1333   0017A8                     
  1334                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  1335   0017A8  9485               	bcf	133,2,c	;volatile
  1336                           
  1337                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  1338   0017AA  9885               	bcf	133,4,c	;volatile
  1339                           
  1340                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  1341   0017AC  9E83               	bcf	131,7,c	;volatile
  1342                           
  1343                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  1344   0017AE  9C87               	bcf	135,6,c	;volatile
  1345                           
  1346                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  1347   0017B0  947D               	bcf	125,2,c	;volatile
  1348                           
  1349                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  1350   0017B2  987D               	bcf	125,4,c	;volatile
  1351                           
  1352                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  1353   0017B4  9E7B               	bcf	123,7,c	;volatile
  1354                           
  1355                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  1356   0017B6  9C7F               	bcf	127,6,c	;volatile
  1357   0017B8                     
  1358                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 18:     RE2PPS=0x05;
  1359   0017B8  0E05               	movlw	5
  1360   0017BA  010E               	movlb	14	; () banked
  1361   0017BC  6F74               	movwf	116,b	;volatile
  1362                           
  1363                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 19:     RE4PPS=0x06;
  1364   0017BE  0E06               	movlw	6
  1365   0017C0  6F76               	movwf	118,b	;volatile
  1366                           
  1367                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 20:     RC7PPS=0x07;
  1368   0017C2  0E07               	movlw	7
  1369   0017C4  6F69               	movwf	105,b	;volatile
  1370                           
  1371                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 21:     RG6PPS=0x08;
  1372   0017C6  0E08               	movlw	8
  1373   0017C8  6F88               	movwf	136,b	;volatile
  1374                           
  1375                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  1376   0017CA  50BD               	movf	189,w,c	;volatile
  1377   0017CC  0B8F               	andlw	-113
  1378   0017CE  0940               	iorlw	64
  1379   0017D0  6EBD               	movwf	189,c	;volatile
  1380                           
  1381                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  1382   0017D2  0EE0               	movlw	-32
  1383   0017D4  16BE               	andwf	190,f,c	;volatile
  1384                           
  1385                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  1386   0017D6  50BF               	movf	191,w,c	;volatile
  1387   0017D8  0BF0               	andlw	-16
  1388   0017DA  0901               	iorlw	1
  1389   0017DC  6EBF               	movwf	191,c	;volatile
  1390   0017DE                     
  1391                           ; BSR set to: 14
  1392                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 30:     T2PR=PWMperiod;
  1393   0017DE  C02A  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1394   0017E2                     
  1395                           ; BSR set to: 14
  1396                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 31:     T2CONbits.ON=1;
  1397   0017E2  8EBD               	bsf	189,7,c	;volatile
  1398                           
  1399                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 35:     CCPR1H=0;
  1400   0017E4  0E00               	movlw	0
  1401   0017E6  6EAA               	movwf	170,c	;volatile
  1402                           
  1403                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 36:     CCPR2H=0;
  1404   0017E8  0E00               	movlw	0
  1405   0017EA  6EA6               	movwf	166,c	;volatile
  1406                           
  1407                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 37:     CCPR3H=0;
  1408   0017EC  0E00               	movlw	0
  1409   0017EE  010F               	movlb	15	; () banked
  1410   0017F0  6F25               	movwf	37,b	;volatile
  1411                           
  1412                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 38:     CCPR4H=0;
  1413   0017F2  0E00               	movlw	0
  1414   0017F4  6F21               	movwf	33,b	;volatile
  1415                           
  1416                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  1417   0017F6  0EFC               	movlw	-4
  1418   0017F8  16AD               	andwf	173,f,c	;volatile
  1419                           
  1420                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  1421   0017FA  0EF3               	movlw	-13
  1422   0017FC  16AD               	andwf	173,f,c	;volatile
  1423                           
  1424                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  1425   0017FE  0ECF               	movlw	-49
  1426   001800  16AD               	andwf	173,f,c	;volatile
  1427                           
  1428                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  1429   001802  0E3F               	movlw	-193
  1430   001804  16AD               	andwf	173,f,c	;volatile
  1431   001806                     
  1432                           ; BSR set to: 15
  1433                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  1434   001806  88AB               	bsf	171,4,c	;volatile
  1435                           
  1436                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b11
      +                          00;
  1437   001808  50AB               	movf	171,w,c	;volatile
  1438   00180A  0BF0               	andlw	-16
  1439   00180C  090C               	iorlw	12
  1440   00180E  6EAB               	movwf	171,c	;volatile
  1441   001810                     
  1442                           ; BSR set to: 15
  1443                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  1444   001810  8EAB               	bsf	171,7,c	;volatile
  1445   001812                     
  1446                           ; BSR set to: 15
  1447                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  1448   001812  88A7               	bsf	167,4,c	;volatile
  1449                           
  1450                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b11
      +                          00;
  1451   001814  50A7               	movf	167,w,c	;volatile
  1452   001816  0BF0               	andlw	-16
  1453   001818  090C               	iorlw	12
  1454   00181A  6EA7               	movwf	167,c	;volatile
  1455   00181C                     
  1456                           ; BSR set to: 15
  1457                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  1458   00181C  8EA7               	bsf	167,7,c	;volatile
  1459   00181E                     
  1460                           ; BSR set to: 15
  1461                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  1462   00181E  8926               	bsf	38,4,b	;volatile
  1463                           
  1464                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b11
      +                          00;
  1465   001820  5126               	movf	38,w,b	;volatile
  1466   001822  0BF0               	andlw	-16
  1467   001824  090C               	iorlw	12
  1468   001826  6F26               	movwf	38,b	;volatile
  1469   001828                     
  1470                           ; BSR set to: 15
  1471                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  1472   001828  8F26               	bsf	38,7,b	;volatile
  1473   00182A                     
  1474                           ; BSR set to: 15
  1475                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  1476   00182A  8922               	bsf	34,4,b	;volatile
  1477                           
  1478                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b11
      +                          00;
  1479   00182C  5122               	movf	34,w,b	;volatile
  1480   00182E  0BF0               	andlw	-16
  1481   001830  090C               	iorlw	12
  1482   001832  6F22               	movwf	34,b	;volatile
  1483   001834                     
  1484                           ; BSR set to: 15
  1485                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  1486   001834  8F22               	bsf	34,7,b	;volatile
  1487   001836                     
  1488                           ; BSR set to: 15
  1489                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  1490   001836  9688               	bcf	136,3,c	;volatile
  1491   001838                     
  1492                           ; BSR set to: 15
  1493                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  1494   001838  9680               	bcf	128,3,c	;volatile
  1495   00183A                     
  1496                           ; BSR set to: 15
  1497   00183A  0012               	return		;funcret
  1498   00183C                     __end_of_initDCmotorsPWM:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _forward *****************
  1502 ;; Defined at:
  1503 ;;		line 122 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  Distance_Cal    1    wreg     unsigned char 
  1506 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  1507 ;;		 -> motorL(9), 
  1508 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  1509 ;;		 -> motorR(9), 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  1512 ;;  j               2   26[COMRAM] int 
  1513 ;;  i               2   24[COMRAM] int 
  1514 ;;  delay_time      2   30[COMRAM] int 
  1515 ;;  max_power       2   28[COMRAM] int 
  1516 ;;  acceleration    2    0        int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1527 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1528 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;Total ram usage:       14 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 2
  1533 ;; This function calls:
  1534 ;;		___awdiv
  1535 ;;		_delay_ms_function
  1536 ;;		_setMotorPWM
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text5
  1543   0010FE                     __ptext5:
  1544                           	callstack 0
  1545   0010FE                     _forward:
  1546                           	callstack 28
  1547                           
  1548                           ; BSR set to: 15
  1549                           ;incstack = 0
  1550                           ;forward@Distance_Calibration stored from wreg
  1551   0010FE  6E41               	movwf	forward@Distance_Calibration^0,c
  1552   001100                     
  1553                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 128:     int max_power = 20;
  1554   001100  0E00               	movlw	0
  1555   001102  6E47               	movwf	(forward@max_power+1)^0,c
  1556   001104  0E14               	movlw	20
  1557   001106  6E46               	movwf	forward@max_power^0,c
  1558   001108                     
  1559                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 130:     int delay_time = acceler
      +                          ation_time/max_power;
  1560   001108  0E00               	movlw	0
  1561   00110A  6E2B               	movwf	(___awdiv@dividend+1)^0,c
  1562   00110C  0E64               	movlw	100
  1563   00110E  6E2A               	movwf	___awdiv@dividend^0,c
  1564   001110  0E00               	movlw	0
  1565   001112  6E2D               	movwf	(___awdiv@divisor+1)^0,c
  1566   001114  0E14               	movlw	20
  1567   001116  6E2C               	movwf	___awdiv@divisor^0,c
  1568   001118  EC1B  F00B         	call	___awdiv	;wreg free
  1569   00111C  C02A  F048         	movff	?___awdiv,forward@delay_time
  1570   001120  C02B  F049         	movff	?___awdiv+1,forward@delay_time+1
  1571   001124                     
  1572                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 133:     for(int i=0; i< max_powe
      +                          r; i++){
  1573   001124  0E00               	movlw	0
  1574   001126  6E43               	movwf	(forward@i+1)^0,c
  1575   001128  0E00               	movlw	0
  1576   00112A  6E42               	movwf	forward@i^0,c
  1577   00112C  EFBC  F008         	goto	l1642
  1578   001130                     l1632:
  1579                           
  1580                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 134:         mL->power = mL->powe
      +                          r + 1;
  1581   001130  503C               	movf	forward@mL^0,w,c
  1582   001132  6ED9               	movwf	fsr2l,c
  1583   001134  6ADA               	clrf	fsr2h,c
  1584   001136  503C               	movf	forward@mL^0,w,c
  1585   001138  6EE1               	movwf	fsr1l,c
  1586   00113A  6AE2               	clrf	fsr1h,c
  1587   00113C  50E7               	movf	indf1,w,c
  1588   00113E  6E3E               	movwf	??_forward^0,c
  1589   001140  283E               	incf	??_forward^0,w,c
  1590   001142  6EDF               	movwf	indf2,c
  1591                           
  1592                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 135:         mR->power = mR->powe
      +                          r + 1 ;
  1593   001144  503D               	movf	forward@mR^0,w,c
  1594   001146  6ED9               	movwf	fsr2l,c
  1595   001148  6ADA               	clrf	fsr2h,c
  1596   00114A  503D               	movf	forward@mR^0,w,c
  1597   00114C  6EE1               	movwf	fsr1l,c
  1598   00114E  6AE2               	clrf	fsr1h,c
  1599   001150  50E7               	movf	indf1,w,c
  1600   001152  6E3E               	movwf	??_forward^0,c
  1601   001154  283E               	incf	??_forward^0,w,c
  1602   001156  6EDF               	movwf	indf2,c
  1603   001158                     
  1604                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 136:         setMotorPWM(mR);
  1605   001158  C03D  F037         	movff	forward@mR,setMotorPWM@m
  1606   00115C  EC31  F009         	call	_setMotorPWM	;wreg free
  1607   001160                     
  1608                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 137:         setMotorPWM(mL);
  1609   001160  C03C  F037         	movff	forward@mL,setMotorPWM@m
  1610   001164  EC31  F009         	call	_setMotorPWM	;wreg free
  1611   001168                     
  1612                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 138:         delay_ms_function(de
      +                          lay_time);
  1613   001168  C048  F02A         	movff	forward@delay_time,delay_ms_function@milliseconds
  1614   00116C  C049  F02B         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  1615   001170  EC58  F00C         	call	_delay_ms_function	;wreg free
  1616   001174                     
  1617                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 139:     }
  1618   001174  4A42               	infsnz	forward@i^0,f,c
  1619   001176  2A43               	incf	(forward@i+1)^0,f,c
  1620   001178                     l1642:
  1621   001178  5046               	movf	forward@max_power^0,w,c
  1622   00117A  5C42               	subwf	forward@i^0,w,c
  1623   00117C  5043               	movf	(forward@i+1)^0,w,c
  1624   00117E  0A80               	xorlw	128
  1625   001180  6E3E               	movwf	??_forward^0,c
  1626   001182  5047               	movf	(forward@max_power+1)^0,w,c
  1627   001184  0A80               	xorlw	128
  1628   001186  583E               	subwfb	??_forward^0,w,c
  1629   001188  A0D8               	btfss	status,0,c
  1630   00118A  EFC9  F008         	goto	u791
  1631   00118E  EFCB  F008         	goto	u790
  1632   001192                     u791:
  1633   001192  EF98  F008         	goto	l1632
  1634   001196                     u790:
  1635   001196                     
  1636                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 144:     for(int j=0; j<Distance_
      +                          Calibration; j++){
  1637   001196  0E00               	movlw	0
  1638   001198  6E45               	movwf	(forward@j+1)^0,c
  1639   00119A  0E00               	movlw	0
  1640   00119C  6E44               	movwf	forward@j^0,c
  1641   00119E  EFDA  F008         	goto	l208
  1642   0011A2                     l1646:
  1643                           
  1644                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 145:         _delay((unsigned lon
      +                          g)((10)*(64000000/4000.0)));
  1645   0011A2  0ED0               	movlw	208
  1646   0011A4  6E3E               	movwf	??_forward^0,c
  1647   0011A6  0ECA               	movlw	202
  1648   0011A8                     u997:
  1649   0011A8  2EE8               	decfsz	wreg,f,c
  1650   0011AA  D7FE               	bra	u997
  1651   0011AC  2E3E               	decfsz	??_forward^0,f,c
  1652   0011AE  D7FC               	bra	u997
  1653   0011B0                     
  1654                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 146:     }
  1655   0011B0  4A44               	infsnz	forward@j^0,f,c
  1656   0011B2  2A45               	incf	(forward@j+1)^0,f,c
  1657   0011B4                     l208:
  1658   0011B4  5041               	movf	forward@Distance_Calibration^0,w,c
  1659   0011B6  6E3E               	movwf	??_forward^0,c
  1660   0011B8  6A3F               	clrf	(??_forward+1)^0,c
  1661   0011BA  503E               	movf	??_forward^0,w,c
  1662   0011BC  5C44               	subwf	forward@j^0,w,c
  1663   0011BE  5045               	movf	(forward@j+1)^0,w,c
  1664   0011C0  0A80               	xorlw	128
  1665   0011C2  6E40               	movwf	(??_forward+2)^0,c
  1666   0011C4  503F               	movf	(??_forward+1)^0,w,c
  1667   0011C6  0A80               	xorlw	128
  1668   0011C8  5840               	subwfb	(??_forward+2)^0,w,c
  1669   0011CA  A0D8               	btfss	status,0,c
  1670   0011CC  EFEA  F008         	goto	u801
  1671   0011D0  EFEC  F008         	goto	u800
  1672   0011D4                     u801:
  1673   0011D4  EFD1  F008         	goto	l1646
  1674   0011D8                     u800:
  1675   0011D8  EF1A  F009         	goto	l1664
  1676   0011DC                     l1650:
  1677                           
  1678                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 150:         if(mR->power> 0 ){
  1679   0011DC  503D               	movf	forward@mR^0,w,c
  1680   0011DE  6ED9               	movwf	fsr2l,c
  1681   0011E0  6ADA               	clrf	fsr2h,c
  1682   0011E2  50DF               	movf	indf2,w,c
  1683   0011E4  B4D8               	btfsc	status,2,c
  1684   0011E6  EFF7  F008         	goto	u811
  1685   0011EA  EFF9  F008         	goto	u810
  1686   0011EE                     u811:
  1687   0011EE  EFFD  F008         	goto	l1654
  1688   0011F2                     u810:
  1689   0011F2                     
  1690                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 151:             mR->power--;
  1691   0011F2  503D               	movf	forward@mR^0,w,c
  1692   0011F4  6ED9               	movwf	fsr2l,c
  1693   0011F6  6ADA               	clrf	fsr2h,c
  1694   0011F8  06DF               	decf	indf2,f,c
  1695   0011FA                     l1654:
  1696                           
  1697                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 153:         if(mL->power> 0 ){
  1698   0011FA  503C               	movf	forward@mL^0,w,c
  1699   0011FC  6ED9               	movwf	fsr2l,c
  1700   0011FE  6ADA               	clrf	fsr2h,c
  1701   001200  50DF               	movf	indf2,w,c
  1702   001202  B4D8               	btfsc	status,2,c
  1703   001204  EF06  F009         	goto	u821
  1704   001208  EF08  F009         	goto	u820
  1705   00120C                     u821:
  1706   00120C  EF0C  F009         	goto	l1658
  1707   001210                     u820:
  1708   001210                     
  1709                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 154:             mL->power--;
  1710   001210  503C               	movf	forward@mL^0,w,c
  1711   001212  6ED9               	movwf	fsr2l,c
  1712   001214  6ADA               	clrf	fsr2h,c
  1713   001216  06DF               	decf	indf2,f,c
  1714   001218                     l1658:
  1715                           
  1716                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 156:         setMotorPWM(mR);
  1717   001218  C03D  F037         	movff	forward@mR,setMotorPWM@m
  1718   00121C  EC31  F009         	call	_setMotorPWM	;wreg free
  1719   001220                     
  1720                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 157:         setMotorPWM(mL);
  1721   001220  C03C  F037         	movff	forward@mL,setMotorPWM@m
  1722   001224  EC31  F009         	call	_setMotorPWM	;wreg free
  1723   001228                     
  1724                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 158:         delay_ms_function(de
      +                          lay_time);
  1725   001228  C048  F02A         	movff	forward@delay_time,delay_ms_function@milliseconds
  1726   00122C  C049  F02B         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  1727   001230  EC58  F00C         	call	_delay_ms_function	;wreg free
  1728   001234                     l1664:
  1729                           
  1730                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 149:     while(mL->power || mR->p
      +                          ower > 0){
  1731   001234  503C               	movf	forward@mL^0,w,c
  1732   001236  6ED9               	movwf	fsr2l,c
  1733   001238  6ADA               	clrf	fsr2h,c
  1734   00123A  50DF               	movf	indf2,w,c
  1735   00123C  A4D8               	btfss	status,2,c
  1736   00123E  EF23  F009         	goto	u831
  1737   001242  EF25  F009         	goto	u830
  1738   001246                     u831:
  1739   001246  EFEE  F008         	goto	l1650
  1740   00124A                     u830:
  1741   00124A  503D               	movf	forward@mR^0,w,c
  1742   00124C  6ED9               	movwf	fsr2l,c
  1743   00124E  6ADA               	clrf	fsr2h,c
  1744   001250  50DF               	movf	indf2,w,c
  1745   001252  A4D8               	btfss	status,2,c
  1746   001254  EF2E  F009         	goto	u841
  1747   001258  EF30  F009         	goto	u840
  1748   00125C                     u841:
  1749   00125C  EFEE  F008         	goto	l1650
  1750   001260                     u840:
  1751   001260  0012               	return		;funcret
  1752   001262                     __end_of_forward:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _setMotorPWM *****************
  1756 ;; Defined at:
  1757 ;;		line 75 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  m               1   13[COMRAM] PTR struct DC_motor
  1760 ;;		 -> motorR(9), motorL(9), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  negDuty         1   17[COMRAM] unsigned char 
  1763 ;;  posDuty         1   16[COMRAM] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1773 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;Total ram usage:        5 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 1
  1780 ;; This function calls:
  1781 ;;		___lwdiv
  1782 ;;		___wmul
  1783 ;; This function is called by:
  1784 ;;		_forward
  1785 ;;		_turnLEFT
  1786 ;;		_turnRIGHT
  1787 ;;		_stop
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text6
  1792   001262                     __ptext6:
  1793                           	callstack 0
  1794   001262                     _setMotorPWM:
  1795                           	callstack 28
  1796   001262                     
  1797                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m)
      +                          ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 76: {;../lab-6-motors-and-pwm-tom
      +                          as-thomas.X/dc_motor_v1.c: 77:     unsigned char posDuty, negDuty;;../lab-6-motors-and-p
      +                          wm-tomas-thomas.X/dc_motor_v1.c: 79:     if(m->brakemode) {
  1798   001262  5037               	movf	setMotorPWM@m^0,w,c
  1799   001264  6ED9               	movwf	fsr2l,c
  1800   001266  6ADA               	clrf	fsr2h,c
  1801   001268  0E02               	movlw	2
  1802   00126A  26D9               	addwf	fsr2l,f,c
  1803   00126C  50DF               	movf	indf2,w,c
  1804   00126E  B4D8               	btfsc	status,2,c
  1805   001270  EF3C  F009         	goto	u511
  1806   001274  EF3E  F009         	goto	u510
  1807   001278                     u511:
  1808   001278  EF6E  F009         	goto	l1396
  1809   00127C                     u510:
  1810   00127C                     
  1811                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 80:         posDuty=m->PWMperiod 
      +                          - ((unsigned int)(m->power)*(m->PWMperiod))/100;
  1812   00127C  5037               	movf	setMotorPWM@m^0,w,c
  1813   00127E  6ED9               	movwf	fsr2l,c
  1814   001280  6ADA               	clrf	fsr2h,c
  1815   001282  50DF               	movf	indf2,w,c
  1816   001284  6E38               	movwf	??_setMotorPWM^0,c
  1817   001286  5038               	movf	??_setMotorPWM^0,w,c
  1818   001288  6E2A               	movwf	___wmul@multiplier^0,c
  1819   00128A  6A2B               	clrf	(___wmul@multiplier+1)^0,c
  1820   00128C  5037               	movf	setMotorPWM@m^0,w,c
  1821   00128E  6ED9               	movwf	fsr2l,c
  1822   001290  6ADA               	clrf	fsr2h,c
  1823   001292  0E03               	movlw	3
  1824   001294  26D9               	addwf	fsr2l,f,c
  1825   001296  CFDE F02C          	movff	postinc2,___wmul@multiplicand
  1826   00129A  CFDD F02D          	movff	postdec2,___wmul@multiplicand+1
  1827   00129E  EC6F  F00C         	call	___wmul	;wreg free
  1828   0012A2  C02A  F030         	movff	?___wmul,___lwdiv@dividend
  1829   0012A6  C02B  F031         	movff	?___wmul+1,___lwdiv@dividend+1
  1830   0012AA  0E00               	movlw	0
  1831   0012AC  6E33               	movwf	(___lwdiv@divisor+1)^0,c
  1832   0012AE  0E64               	movlw	100
  1833   0012B0  6E32               	movwf	___lwdiv@divisor^0,c
  1834   0012B2  EC1E  F00C         	call	___lwdiv	;wreg free
  1835   0012B6  5037               	movf	setMotorPWM@m^0,w,c
  1836   0012B8  6ED9               	movwf	fsr2l,c
  1837   0012BA  6ADA               	clrf	fsr2h,c
  1838   0012BC  0E03               	movlw	3
  1839   0012BE  26D9               	addwf	fsr2l,f,c
  1840   0012C0  50DF               	movf	indf2,w,c
  1841   0012C2  6E39               	movwf	(??_setMotorPWM+1)^0,c
  1842   0012C4  5030               	movf	?___lwdiv^0,w,c
  1843   0012C6  5C39               	subwf	(??_setMotorPWM+1)^0,w,c
  1844   0012C8  6E3A               	movwf	setMotorPWM@posDuty^0,c
  1845   0012CA                     
  1846                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  1847   0012CA  5037               	movf	setMotorPWM@m^0,w,c
  1848   0012CC  6ED9               	movwf	fsr2l,c
  1849   0012CE  6ADA               	clrf	fsr2h,c
  1850   0012D0  0E03               	movlw	3
  1851   0012D2  26D9               	addwf	fsr2l,f,c
  1852   0012D4  50DF               	movf	indf2,w,c
  1853   0012D6  6E3B               	movwf	setMotorPWM@negDuty^0,c
  1854                           
  1855                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 82:     }
  1856   0012D8  EF8F  F009         	goto	l1400
  1857   0012DC                     l1396:
  1858                           
  1859                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 84:         posDuty=0;
  1860   0012DC  0E00               	movlw	0
  1861   0012DE  6E3A               	movwf	setMotorPWM@posDuty^0,c
  1862   0012E0                     
  1863                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->
      +                          power)*(m->PWMperiod))/100;
  1864   0012E0  5037               	movf	setMotorPWM@m^0,w,c
  1865   0012E2  6ED9               	movwf	fsr2l,c
  1866   0012E4  6ADA               	clrf	fsr2h,c
  1867   0012E6  50DF               	movf	indf2,w,c
  1868   0012E8  6E38               	movwf	??_setMotorPWM^0,c
  1869   0012EA  5038               	movf	??_setMotorPWM^0,w,c
  1870   0012EC  6E2A               	movwf	___wmul@multiplier^0,c
  1871   0012EE  6A2B               	clrf	(___wmul@multiplier+1)^0,c
  1872   0012F0  5037               	movf	setMotorPWM@m^0,w,c
  1873   0012F2  6ED9               	movwf	fsr2l,c
  1874   0012F4  6ADA               	clrf	fsr2h,c
  1875   0012F6  0E03               	movlw	3
  1876   0012F8  26D9               	addwf	fsr2l,f,c
  1877   0012FA  CFDE F02C          	movff	postinc2,___wmul@multiplicand
  1878   0012FE  CFDD F02D          	movff	postdec2,___wmul@multiplicand+1
  1879   001302  EC6F  F00C         	call	___wmul	;wreg free
  1880   001306  C02A  F030         	movff	?___wmul,___lwdiv@dividend
  1881   00130A  C02B  F031         	movff	?___wmul+1,___lwdiv@dividend+1
  1882   00130E  0E00               	movlw	0
  1883   001310  6E33               	movwf	(___lwdiv@divisor+1)^0,c
  1884   001312  0E64               	movlw	100
  1885   001314  6E32               	movwf	___lwdiv@divisor^0,c
  1886   001316  EC1E  F00C         	call	___lwdiv	;wreg free
  1887   00131A  5030               	movf	?___lwdiv^0,w,c
  1888   00131C  6E3B               	movwf	setMotorPWM@negDuty^0,c
  1889   00131E                     l1400:
  1890                           
  1891                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 88:     if (m->direction) {
  1892   00131E  5037               	movf	setMotorPWM@m^0,w,c
  1893   001320  6ED9               	movwf	fsr2l,c
  1894   001322  6ADA               	clrf	fsr2h,c
  1895   001324  0E01               	movlw	1
  1896   001326  26D9               	addwf	fsr2l,f,c
  1897   001328  50DF               	movf	indf2,w,c
  1898   00132A  B4D8               	btfsc	status,2,c
  1899   00132C  EF9A  F009         	goto	u521
  1900   001330  EF9C  F009         	goto	u520
  1901   001334                     u521:
  1902   001334  EFBC  F009         	goto	l1404
  1903   001338                     u520:
  1904   001338                     
  1905                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 89:         *(m->posDutyHighByte)
      +                          =posDuty;
  1906   001338  5037               	movf	setMotorPWM@m^0,w,c
  1907   00133A  6ED9               	movwf	fsr2l,c
  1908   00133C  6ADA               	clrf	fsr2h,c
  1909   00133E  0E05               	movlw	5
  1910   001340  26D9               	addwf	fsr2l,f,c
  1911   001342  CFDE F038          	movff	postinc2,??_setMotorPWM
  1912   001346  CFDD F039          	movff	postdec2,??_setMotorPWM+1
  1913   00134A  C038  FFD9         	movff	??_setMotorPWM,fsr2l
  1914   00134E  C039  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1915   001352  C03A  FFDF         	movff	setMotorPWM@posDuty,indf2
  1916                           
  1917                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 90:         *(m->negDutyHighByte)
      +                          =negDuty;
  1918   001356  5037               	movf	setMotorPWM@m^0,w,c
  1919   001358  6ED9               	movwf	fsr2l,c
  1920   00135A  6ADA               	clrf	fsr2h,c
  1921   00135C  0E07               	movlw	7
  1922   00135E  26D9               	addwf	fsr2l,f,c
  1923   001360  CFDE F038          	movff	postinc2,??_setMotorPWM
  1924   001364  CFDD F039          	movff	postdec2,??_setMotorPWM+1
  1925   001368  C038  FFD9         	movff	??_setMotorPWM,fsr2l
  1926   00136C  C039  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1927   001370  C03B  FFDF         	movff	setMotorPWM@negDuty,indf2
  1928                           
  1929                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 91:     } else {
  1930   001374  EFDA  F009         	goto	l194
  1931   001378                     l1404:
  1932                           
  1933                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 92:         *(m->posDutyHighByte)
      +                          =negDuty;
  1934   001378  5037               	movf	setMotorPWM@m^0,w,c
  1935   00137A  6ED9               	movwf	fsr2l,c
  1936   00137C  6ADA               	clrf	fsr2h,c
  1937   00137E  0E05               	movlw	5
  1938   001380  26D9               	addwf	fsr2l,f,c
  1939   001382  CFDE F038          	movff	postinc2,??_setMotorPWM
  1940   001386  CFDD F039          	movff	postdec2,??_setMotorPWM+1
  1941   00138A  C038  FFD9         	movff	??_setMotorPWM,fsr2l
  1942   00138E  C039  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1943   001392  C03B  FFDF         	movff	setMotorPWM@negDuty,indf2
  1944                           
  1945                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 93:         *(m->negDutyHighByte)
      +                          =posDuty;
  1946   001396  5037               	movf	setMotorPWM@m^0,w,c
  1947   001398  6ED9               	movwf	fsr2l,c
  1948   00139A  6ADA               	clrf	fsr2h,c
  1949   00139C  0E07               	movlw	7
  1950   00139E  26D9               	addwf	fsr2l,f,c
  1951   0013A0  CFDE F038          	movff	postinc2,??_setMotorPWM
  1952   0013A4  CFDD F039          	movff	postdec2,??_setMotorPWM+1
  1953   0013A8  C038  FFD9         	movff	??_setMotorPWM,fsr2l
  1954   0013AC  C039  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1955   0013B0  C03A  FFDF         	movff	setMotorPWM@posDuty,indf2
  1956   0013B4                     l194:
  1957   0013B4  0012               	return		;funcret
  1958   0013B6                     __end_of_setMotorPWM:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function ___wmul *****************
  1962 ;; Defined at:
  1963 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  multiplier      2    0[COMRAM] unsigned int 
  1966 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  product         2    4[COMRAM] unsigned int 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2    0[COMRAM] unsigned int 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, prodl, prodh
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;Total ram usage:        6 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_setMotorPWM
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text7
  1992   0018DE                     __ptext7:
  1993                           	callstack 0
  1994   0018DE                     ___wmul:
  1995                           	callstack 28
  1996   0018DE  502A               	movf	___wmul@multiplier^0,w,c
  1997   0018E0  022C               	mulwf	___wmul@multiplicand^0,c
  1998   0018E2  CFF3 F02E          	movff	prodl,___wmul@product
  1999   0018E6  CFF4 F02F          	movff	prodh,___wmul@product+1
  2000   0018EA  502A               	movf	___wmul@multiplier^0,w,c
  2001   0018EC  022D               	mulwf	(___wmul@multiplicand+1)^0,c
  2002   0018EE  50F3               	movf	243,w,c
  2003   0018F0  262F               	addwf	(___wmul@product+1)^0,f,c
  2004   0018F2  502B               	movf	(___wmul@multiplier+1)^0,w,c
  2005   0018F4  022C               	mulwf	___wmul@multiplicand^0,c
  2006   0018F6  50F3               	movf	243,w,c
  2007   0018F8  262F               	addwf	(___wmul@product+1)^0,f,c
  2008   0018FA  C02E  F02A         	movff	___wmul@product,?___wmul
  2009   0018FE  C02F  F02B         	movff	___wmul@product+1,?___wmul+1
  2010   001902  0012               	return		;funcret
  2011   001904                     __end_of___wmul:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function ___lwdiv *****************
  2015 ;; Defined at:
  2016 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  dividend        2    6[COMRAM] unsigned int 
  2019 ;;  divisor         2    8[COMRAM] unsigned int 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  quotient        2   10[COMRAM] unsigned int 
  2022 ;;  counter         1   12[COMRAM] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2    6[COMRAM] unsigned int 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;Total ram usage:        7 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_setMotorPWM
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text8
  2046   00183C                     __ptext8:
  2047                           	callstack 0
  2048   00183C                     ___lwdiv:
  2049                           	callstack 28
  2050   00183C  0E00               	movlw	0
  2051   00183E  6E35               	movwf	(___lwdiv@quotient+1)^0,c
  2052   001840  0E00               	movlw	0
  2053   001842  6E34               	movwf	___lwdiv@quotient^0,c
  2054   001844  5032               	movf	___lwdiv@divisor^0,w,c
  2055   001846  1033               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2056   001848  B4D8               	btfsc	status,2,c
  2057   00184A  EF29  F00C         	goto	u471
  2058   00184E  EF2B  F00C         	goto	u470
  2059   001852                     u471:
  2060   001852  EF53  F00C         	goto	l738
  2061   001856                     u470:
  2062   001856  0E01               	movlw	1
  2063   001858  6E36               	movwf	___lwdiv@counter^0,c
  2064   00185A  EF33  F00C         	goto	l1370
  2065   00185E                     l1368:
  2066   00185E  90D8               	bcf	status,0,c
  2067   001860  3632               	rlcf	___lwdiv@divisor^0,f,c
  2068   001862  3633               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2069   001864  2A36               	incf	___lwdiv@counter^0,f,c
  2070   001866                     l1370:
  2071   001866  AE33               	btfss	(___lwdiv@divisor+1)^0,7,c
  2072   001868  EF38  F00C         	goto	u481
  2073   00186C  EF3A  F00C         	goto	u480
  2074   001870                     u481:
  2075   001870  EF2F  F00C         	goto	l1368
  2076   001874                     u480:
  2077   001874                     l1372:
  2078   001874  90D8               	bcf	status,0,c
  2079   001876  3634               	rlcf	___lwdiv@quotient^0,f,c
  2080   001878  3635               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2081   00187A  5032               	movf	___lwdiv@divisor^0,w,c
  2082   00187C  5C30               	subwf	___lwdiv@dividend^0,w,c
  2083   00187E  5033               	movf	(___lwdiv@divisor+1)^0,w,c
  2084   001880  5831               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2085   001882  A0D8               	btfss	status,0,c
  2086   001884  EF46  F00C         	goto	u491
  2087   001888  EF48  F00C         	goto	u490
  2088   00188C                     u491:
  2089   00188C  EF4D  F00C         	goto	l1380
  2090   001890                     u490:
  2091   001890  5032               	movf	___lwdiv@divisor^0,w,c
  2092   001892  5E30               	subwf	___lwdiv@dividend^0,f,c
  2093   001894  5033               	movf	(___lwdiv@divisor+1)^0,w,c
  2094   001896  5A31               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2095   001898  8034               	bsf	___lwdiv@quotient^0,0,c
  2096   00189A                     l1380:
  2097   00189A  90D8               	bcf	status,0,c
  2098   00189C  3233               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2099   00189E  3232               	rrcf	___lwdiv@divisor^0,f,c
  2100   0018A0  2E36               	decfsz	___lwdiv@counter^0,f,c
  2101   0018A2  EF3A  F00C         	goto	l1372
  2102   0018A6                     l738:
  2103   0018A6  C034  F030         	movff	___lwdiv@quotient,?___lwdiv
  2104   0018AA  C035  F031         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2105   0018AE  0012               	return		;funcret
  2106   0018B0                     __end_of___lwdiv:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _delay_ms_function *****************
  2110 ;; Defined at:
  2111 ;;		line 67 in file "../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  milliseconds    2    0[COMRAM] unsigned int 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2128 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2129 ;;Total ram usage:        3 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_forward
  2135 ;;		_turnLEFT
  2136 ;;		_turnRIGHT
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text9
  2141   0018B0                     __ptext9:
  2142                           	callstack 0
  2143   0018B0                     _delay_ms_function:
  2144                           	callstack 29
  2145   0018B0                     
  2146                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 68:     while (milliseconds > 0) 
      +                          {
  2147   0018B0  EF65  F00C         	goto	l184
  2148   0018B4                     l1386:
  2149                           
  2150                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 69:         _delay((unsigned long
      +                          )((1)*(64000000/4000.0)));
  2151   0018B4  0E15               	movlw	21
  2152   0018B6  6E2C               	movwf	??_delay_ms_function^0,c
  2153   0018B8  0EC6               	movlw	198
  2154   0018BA                     u1007:
  2155   0018BA  2EE8               	decfsz	wreg,f,c
  2156   0018BC  D7FE               	bra	u1007
  2157   0018BE  2E2C               	decfsz	??_delay_ms_function^0,f,c
  2158   0018C0  D7FC               	bra	u1007
  2159   0018C2  D000               	nop2	
  2160   0018C4                     
  2161                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 70:         milliseconds--;
  2162   0018C4  062A               	decf	delay_ms_function@milliseconds^0,f,c
  2163   0018C6  A0D8               	btfss	status,0,c
  2164   0018C8  062B               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  2165   0018CA                     l184:
  2166                           
  2167                           ;../lab-6-motors-and-pwm-tomas-thomas.X/dc_motor_v1.c: 68:     while (milliseconds > 0) 
      +                          {
  2168   0018CA  502A               	movf	delay_ms_function@milliseconds^0,w,c
  2169   0018CC  102B               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  2170   0018CE  A4D8               	btfss	status,2,c
  2171   0018D0  EF6C  F00C         	goto	u501
  2172   0018D4  EF6E  F00C         	goto	u500
  2173   0018D8                     u501:
  2174   0018D8  EF5A  F00C         	goto	l1386
  2175   0018DC                     u500:
  2176   0018DC  0012               	return		;funcret
  2177   0018DE                     __end_of_delay_ms_function:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function ___awdiv *****************
  2181 ;; Defined at:
  2182 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  dividend        2    0[COMRAM] int 
  2185 ;;  divisor         2    2[COMRAM] int 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  quotient        2    6[COMRAM] int 
  2188 ;;  sign            1    5[COMRAM] unsigned char 
  2189 ;;  counter         1    4[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  2    0[COMRAM] int 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;Total ram usage:        8 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_forward
  2209 ;;		_turnLEFT
  2210 ;;		_turnRIGHT
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text10
  2215   001636                     __ptext10:
  2216                           	callstack 0
  2217   001636                     ___awdiv:
  2218                           	callstack 29
  2219   001636  0E00               	movlw	0
  2220   001638  6E2F               	movwf	___awdiv@sign^0,c
  2221   00163A  BE2D               	btfsc	(___awdiv@divisor+1)^0,7,c
  2222   00163C  EF24  F00B         	goto	u530
  2223   001640  EF22  F00B         	goto	u531
  2224   001644                     u531:
  2225   001644  EF2A  F00B         	goto	l1414
  2226   001648                     u530:
  2227   001648  6C2C               	negf	___awdiv@divisor^0,c
  2228   00164A  1E2D               	comf	(___awdiv@divisor+1)^0,f,c
  2229   00164C  B0D8               	btfsc	status,0,c
  2230   00164E  2A2D               	incf	(___awdiv@divisor+1)^0,f,c
  2231   001650  0E01               	movlw	1
  2232   001652  6E2F               	movwf	___awdiv@sign^0,c
  2233   001654                     l1414:
  2234   001654  BE2B               	btfsc	(___awdiv@dividend+1)^0,7,c
  2235   001656  EF31  F00B         	goto	u540
  2236   00165A  EF2F  F00B         	goto	u541
  2237   00165E                     u541:
  2238   00165E  EF37  F00B         	goto	l1420
  2239   001662                     u540:
  2240   001662  6C2A               	negf	___awdiv@dividend^0,c
  2241   001664  1E2B               	comf	(___awdiv@dividend+1)^0,f,c
  2242   001666  B0D8               	btfsc	status,0,c
  2243   001668  2A2B               	incf	(___awdiv@dividend+1)^0,f,c
  2244   00166A  0E01               	movlw	1
  2245   00166C  1A2F               	xorwf	___awdiv@sign^0,f,c
  2246   00166E                     l1420:
  2247   00166E  0E00               	movlw	0
  2248   001670  6E31               	movwf	(___awdiv@quotient+1)^0,c
  2249   001672  0E00               	movlw	0
  2250   001674  6E30               	movwf	___awdiv@quotient^0,c
  2251   001676  502C               	movf	___awdiv@divisor^0,w,c
  2252   001678  102D               	iorwf	(___awdiv@divisor+1)^0,w,c
  2253   00167A  B4D8               	btfsc	status,2,c
  2254   00167C  EF42  F00B         	goto	u551
  2255   001680  EF44  F00B         	goto	u550
  2256   001684                     u551:
  2257   001684  EF6C  F00B         	goto	l1442
  2258   001688                     u550:
  2259   001688  0E01               	movlw	1
  2260   00168A  6E2E               	movwf	___awdiv@counter^0,c
  2261   00168C  EF4C  F00B         	goto	l1428
  2262   001690                     l1426:
  2263   001690  90D8               	bcf	status,0,c
  2264   001692  362C               	rlcf	___awdiv@divisor^0,f,c
  2265   001694  362D               	rlcf	(___awdiv@divisor+1)^0,f,c
  2266   001696  2A2E               	incf	___awdiv@counter^0,f,c
  2267   001698                     l1428:
  2268   001698  AE2D               	btfss	(___awdiv@divisor+1)^0,7,c
  2269   00169A  EF51  F00B         	goto	u561
  2270   00169E  EF53  F00B         	goto	u560
  2271   0016A2                     u561:
  2272   0016A2  EF48  F00B         	goto	l1426
  2273   0016A6                     u560:
  2274   0016A6                     l1430:
  2275   0016A6  90D8               	bcf	status,0,c
  2276   0016A8  3630               	rlcf	___awdiv@quotient^0,f,c
  2277   0016AA  3631               	rlcf	(___awdiv@quotient+1)^0,f,c
  2278   0016AC  502C               	movf	___awdiv@divisor^0,w,c
  2279   0016AE  5C2A               	subwf	___awdiv@dividend^0,w,c
  2280   0016B0  502D               	movf	(___awdiv@divisor+1)^0,w,c
  2281   0016B2  582B               	subwfb	(___awdiv@dividend+1)^0,w,c
  2282   0016B4  A0D8               	btfss	status,0,c
  2283   0016B6  EF5F  F00B         	goto	u571
  2284   0016BA  EF61  F00B         	goto	u570
  2285   0016BE                     u571:
  2286   0016BE  EF66  F00B         	goto	l1438
  2287   0016C2                     u570:
  2288   0016C2  502C               	movf	___awdiv@divisor^0,w,c
  2289   0016C4  5E2A               	subwf	___awdiv@dividend^0,f,c
  2290   0016C6  502D               	movf	(___awdiv@divisor+1)^0,w,c
  2291   0016C8  5A2B               	subwfb	(___awdiv@dividend+1)^0,f,c
  2292   0016CA  8030               	bsf	___awdiv@quotient^0,0,c
  2293   0016CC                     l1438:
  2294   0016CC  90D8               	bcf	status,0,c
  2295   0016CE  322D               	rrcf	(___awdiv@divisor+1)^0,f,c
  2296   0016D0  322C               	rrcf	___awdiv@divisor^0,f,c
  2297   0016D2  2E2E               	decfsz	___awdiv@counter^0,f,c
  2298   0016D4  EF53  F00B         	goto	l1430
  2299   0016D8                     l1442:
  2300   0016D8  502F               	movf	___awdiv@sign^0,w,c
  2301   0016DA  B4D8               	btfsc	status,2,c
  2302   0016DC  EF72  F00B         	goto	u581
  2303   0016E0  EF74  F00B         	goto	u580
  2304   0016E4                     u581:
  2305   0016E4  EF78  F00B         	goto	l1446
  2306   0016E8                     u580:
  2307   0016E8  6C30               	negf	___awdiv@quotient^0,c
  2308   0016EA  1E31               	comf	(___awdiv@quotient+1)^0,f,c
  2309   0016EC  B0D8               	btfsc	status,0,c
  2310   0016EE  2A31               	incf	(___awdiv@quotient+1)^0,f,c
  2311   0016F0                     l1446:
  2312   0016F0  C030  F02A         	movff	___awdiv@quotient,?___awdiv
  2313   0016F4  C031  F02B         	movff	___awdiv@quotient+1,?___awdiv+1
  2314   0016F8  0012               	return		;funcret
  2315   0016FA                     __end_of___awdiv:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _adjust_calibration *****************
  2319 ;; Defined at:
  2320 ;;		line 6 in file "../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  calibration_    1    0[COMRAM] PTR int 
  2323 ;;		 -> calibration(9), 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2338 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;Total ram usage:        5 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text11
  2349   0013B6                     __ptext11:
  2350                           	callstack 0
  2351   0013B6                     _adjust_calibration:
  2352                           	callstack 30
  2353   0013B6                     l102:
  2354                           
  2355                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 11:         if(!PORTFbits.RF3 || 
      +                          !PORTFbits.RF2){
  2356   0013B6  A68E               	btfss	142,3,c	;volatile
  2357   0013B8  EFE0  F009         	goto	u591
  2358   0013BC  EFE2  F009         	goto	u590
  2359   0013C0                     u591:
  2360   0013C0  EFE9  F009         	goto	l1480
  2361   0013C4                     u590:
  2362   0013C4  B48E               	btfsc	142,2,c	;volatile
  2363   0013C6  EFE7  F009         	goto	u601
  2364   0013CA  EFE9  F009         	goto	u600
  2365   0013CE                     u601:
  2366   0013CE  EFDB  F009         	goto	l102
  2367   0013D2                     u600:
  2368   0013D2                     l1480:
  2369                           
  2370                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 12:             _delay((unsigned 
      +                          long)((100)*(64000000/4000.0)));
  2371   0013D2  0E09               	movlw	9
  2372   0013D4  6E2C               	movwf	(??_adjust_calibration+1)^0,c
  2373   0013D6  0E1E               	movlw	30
  2374   0013D8  6E2B               	movwf	??_adjust_calibration^0,c
  2375   0013DA  0EE4               	movlw	228
  2376   0013DC                     u1017:
  2377   0013DC  2EE8               	decfsz	wreg,f,c
  2378   0013DE  D7FE               	bra	u1017
  2379   0013E0  2E2B               	decfsz	??_adjust_calibration^0,f,c
  2380   0013E2  D7FC               	bra	u1017
  2381   0013E4  2E2C               	decfsz	(??_adjust_calibration+1)^0,f,c
  2382   0013E6  D7FA               	bra	u1017
  2383   0013E8  D000               	nop2	
  2384   0013EA                     
  2385                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 14:             if(!PORTFbits.RF3
      +                           && !PORTFbits.RF2 ){
  2386   0013EA  B68E               	btfsc	142,3,c	;volatile
  2387   0013EC  EFFA  F009         	goto	u611
  2388   0013F0  EFFC  F009         	goto	u610
  2389   0013F4                     u611:
  2390   0013F4  EF15  F00A         	goto	l106
  2391   0013F8                     u610:
  2392   0013F8  B48E               	btfsc	142,2,c	;volatile
  2393   0013FA  EF01  F00A         	goto	u621
  2394   0013FE  EF03  F00A         	goto	u620
  2395   001402                     u621:
  2396   001402  EF15  F00A         	goto	l106
  2397   001406                     u620:
  2398   001406                     
  2399                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 16:                 LATHbits.LATH
      +                          3 = 1;
  2400   001406  8680               	bsf	128,3,c	;volatile
  2401                           
  2402                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 17:                 LATDbits.LATD
      +                          7 = 1;
  2403   001408  8E7C               	bsf	124,7,c	;volatile
  2404   00140A                     
  2405                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 18:                 _delay((unsig
      +                          ned long)((1000)*(64000000/4000.0)));
  2406   00140A  0E52               	movlw	82
  2407   00140C  6E2C               	movwf	(??_adjust_calibration+1)^0,c
  2408   00140E  0E2B               	movlw	43
  2409   001410  6E2B               	movwf	??_adjust_calibration^0,c
  2410   001412  0E00               	movlw	0
  2411   001414                     u1027:
  2412   001414  2EE8               	decfsz	wreg,f,c
  2413   001416  D7FE               	bra	u1027
  2414   001418  2E2B               	decfsz	??_adjust_calibration^0,f,c
  2415   00141A  D7FC               	bra	u1027
  2416   00141C  2E2C               	decfsz	(??_adjust_calibration+1)^0,f,c
  2417   00141E  D7FA               	bra	u1027
  2418   001420  D000               	nop2	
  2419   001422                     
  2420                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 19:                 LATHbits.LATH
      +                          3 = 0;
  2421   001422  9680               	bcf	128,3,c	;volatile
  2422   001424                     
  2423                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 20:                 LATDbits.LATD
      +                          7 = 0;
  2424   001424  9E7C               	bcf	124,7,c	;volatile
  2425                           
  2426                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 21:                 break;
  2427   001426  EF81  F00A         	goto	l112
  2428   00142A                     l106:
  2429                           
  2430                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 24:                 if(!PORTFbits
      +                          .RF2){
  2431   00142A  B48E               	btfsc	142,2,c	;volatile
  2432   00142C  EF1A  F00A         	goto	u631
  2433   001430  EF1C  F00A         	goto	u630
  2434   001434                     u631:
  2435   001434  EF48  F00A         	goto	l1506
  2436   001438                     u630:
  2437   001438                     
  2438                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 25:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  2439   001438  0E11               	movlw	17
  2440   00143A  6E2C               	movwf	(??_adjust_calibration+1)^0,c
  2441   00143C  0E3C               	movlw	60
  2442   00143E  6E2B               	movwf	??_adjust_calibration^0,c
  2443   001440  0ECB               	movlw	203
  2444   001442                     u1037:
  2445   001442  2EE8               	decfsz	wreg,f,c
  2446   001444  D7FE               	bra	u1037
  2447   001446  2E2B               	decfsz	??_adjust_calibration^0,f,c
  2448   001448  D7FC               	bra	u1037
  2449   00144A  2E2C               	decfsz	(??_adjust_calibration+1)^0,f,c
  2450   00144C  D7FA               	bra	u1037
  2451   00144E  0000               	nop	
  2452   001450                     
  2453                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 26:                     *calibrat
      +                          ion_label = *calibration_label + 5;
  2454   001450  502A               	movf	adjust_calibration@calibration_label^0,w,c
  2455   001452  6ED9               	movwf	fsr2l,c
  2456   001454  6ADA               	clrf	fsr2h,c
  2457   001456  CFDE F02B          	movff	postinc2,??_adjust_calibration
  2458   00145A  CFDD F02C          	movff	postdec2,??_adjust_calibration+1
  2459   00145E  0E05               	movlw	5
  2460   001460  262B               	addwf	??_adjust_calibration^0,f,c
  2461   001462  0E00               	movlw	0
  2462   001464  222C               	addwfc	(??_adjust_calibration+1)^0,f,c
  2463   001466  502A               	movf	adjust_calibration@calibration_label^0,w,c
  2464   001468  6ED9               	movwf	fsr2l,c
  2465   00146A  6ADA               	clrf	fsr2h,c
  2466   00146C  C02B  FFDE         	movff	??_adjust_calibration,postinc2
  2467   001470  C02C  FFDD         	movff	??_adjust_calibration+1,postdec2
  2468   001474                     
  2469                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 27:                     LATDbits.
      +                          LATD7 = 1;
  2470   001474  8E7C               	bsf	124,7,c	;volatile
  2471   001476                     
  2472                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 28:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  2473   001476  0E11               	movlw	17
  2474   001478  6E2C               	movwf	(??_adjust_calibration+1)^0,c
  2475   00147A  0E3C               	movlw	60
  2476   00147C  6E2B               	movwf	??_adjust_calibration^0,c
  2477   00147E  0ECB               	movlw	203
  2478   001480                     u1047:
  2479   001480  2EE8               	decfsz	wreg,f,c
  2480   001482  D7FE               	bra	u1047
  2481   001484  2E2B               	decfsz	??_adjust_calibration^0,f,c
  2482   001486  D7FC               	bra	u1047
  2483   001488  2E2C               	decfsz	(??_adjust_calibration+1)^0,f,c
  2484   00148A  D7FA               	bra	u1047
  2485   00148C  0000               	nop	
  2486   00148E                     
  2487                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 29:                     LATDbits.
      +                          LATD7 = 0;
  2488   00148E  9E7C               	bcf	124,7,c	;volatile
  2489   001490                     l1506:
  2490                           
  2491                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 32:                 if(!PORTFbits
      +                          .RF3){
  2492   001490  B68E               	btfsc	142,3,c	;volatile
  2493   001492  EF4D  F00A         	goto	u641
  2494   001496  EF4F  F00A         	goto	u640
  2495   00149A                     u641:
  2496   00149A  EF7F  F00A         	goto	l103
  2497   00149E                     u640:
  2498   00149E                     
  2499                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 33:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  2500   00149E  0E11               	movlw	17
  2501   0014A0  6E2C               	movwf	(??_adjust_calibration+1)^0,c
  2502   0014A2  0E3C               	movlw	60
  2503   0014A4  6E2B               	movwf	??_adjust_calibration^0,c
  2504   0014A6  0ECB               	movlw	203
  2505   0014A8                     u1057:
  2506   0014A8  2EE8               	decfsz	wreg,f,c
  2507   0014AA  D7FE               	bra	u1057
  2508   0014AC  2E2B               	decfsz	??_adjust_calibration^0,f,c
  2509   0014AE  D7FC               	bra	u1057
  2510   0014B0  2E2C               	decfsz	(??_adjust_calibration+1)^0,f,c
  2511   0014B2  D7FA               	bra	u1057
  2512   0014B4  0000               	nop	
  2513   0014B6                     
  2514                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 34:                     *calibrat
      +                          ion_label = *calibration_label - 5;
  2515   0014B6  502A               	movf	adjust_calibration@calibration_label^0,w,c
  2516   0014B8  6ED9               	movwf	fsr2l,c
  2517   0014BA  6ADA               	clrf	fsr2h,c
  2518   0014BC  CFDE F02B          	movff	postinc2,??_adjust_calibration
  2519   0014C0  CFDD F02C          	movff	postdec2,??_adjust_calibration+1
  2520   0014C4  0EFB               	movlw	251
  2521   0014C6  242B               	addwf	??_adjust_calibration^0,w,c
  2522   0014C8  6E2D               	movwf	(??_adjust_calibration+2)^0,c
  2523   0014CA  0EFF               	movlw	255
  2524   0014CC  202C               	addwfc	(??_adjust_calibration+1)^0,w,c
  2525   0014CE  6E2E               	movwf	(??_adjust_calibration+3)^0,c
  2526   0014D0  502A               	movf	adjust_calibration@calibration_label^0,w,c
  2527   0014D2  6ED9               	movwf	fsr2l,c
  2528   0014D4  6ADA               	clrf	fsr2h,c
  2529   0014D6  C02D  FFDE         	movff	??_adjust_calibration+2,postinc2
  2530   0014DA  C02E  FFDD         	movff	??_adjust_calibration+3,postdec2
  2531   0014DE                     
  2532                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 35:                     LATHbits.
      +                          LATH3 = 1;
  2533   0014DE  8680               	bsf	128,3,c	;volatile
  2534   0014E0                     
  2535                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 36:                     _delay((u
      +                          nsigned long)((200)*(64000000/4000.0)));
  2536   0014E0  0E11               	movlw	17
  2537   0014E2  6E2C               	movwf	(??_adjust_calibration+1)^0,c
  2538   0014E4  0E3C               	movlw	60
  2539   0014E6  6E2B               	movwf	??_adjust_calibration^0,c
  2540   0014E8  0ECB               	movlw	203
  2541   0014EA                     u1067:
  2542   0014EA  2EE8               	decfsz	wreg,f,c
  2543   0014EC  D7FE               	bra	u1067
  2544   0014EE  2E2B               	decfsz	??_adjust_calibration^0,f,c
  2545   0014F0  D7FC               	bra	u1067
  2546   0014F2  2E2C               	decfsz	(??_adjust_calibration+1)^0,f,c
  2547   0014F4  D7FA               	bra	u1067
  2548   0014F6  0000               	nop	
  2549   0014F8                     
  2550                           ;../lab-6-motors-and-pwm-tomas-thomas.X/calibration.c: 37:                     LATHbits.
      +                          LATH3 = 0;
  2551   0014F8  9680               	bcf	128,3,c	;volatile
  2552   0014FA  EFDB  F009         	goto	l102
  2553   0014FE                     l103:
  2554   0014FE  EFDB  F009         	goto	l102
  2555   001502                     l112:
  2556   001502  0012               	return		;funcret
  2557   001504                     __end_of_adjust_calibration:
  2558                           	callstack 0
  2559                           
  2560                           	psect	smallconst
  2561   000E00                     __psmallconst:
  2562                           	callstack 0
  2563   000E00  00                 	db	0
  2564   000E01  00                 	db	0	; dummy byte at the end
  2565   000000                     
  2566                           	psect	rparam
  2567   000000                     
  2568                           	psect	config
  2569                           
  2570                           ;Config register CONFIG1L @ 0x300000
  2571                           ;	External Oscillator mode Selection bits
  2572                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2573                           ;	Power-up default value for COSC bits
  2574                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2575   300000                     	org	3145728
  2576   300000  AA                 	db	170
  2577                           
  2578                           ;Config register CONFIG1H @ 0x300001
  2579                           ;	unspecified, using default values
  2580                           ;	Clock Out Enable bit
  2581                           ;	CLKOUTEN = 0x1, unprogrammed default
  2582                           ;	Clock Switch Enable bit
  2583                           ;	CSWEN = 0x1, unprogrammed default
  2584                           ;	Fail-Safe Clock Monitor Enable bit
  2585                           ;	FCMEN = 0x1, unprogrammed default
  2586   300001                     	org	3145729
  2587   300001  FF                 	db	255
  2588                           
  2589                           ;Config register CONFIG3L @ 0x300004
  2590                           ;	WDT Period Select bits
  2591                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2592                           ;	WDT operating mode
  2593                           ;	WDTE = OFF, WDT Disabled
  2594   300004                     	org	3145732
  2595   300004  9F                 	db	159
  2596                           
  2597                           ;Config register CONFIG3H @ 0x300005
  2598                           ;	unspecified, using default values
  2599                           ;	WDT Window Select bits
  2600                           ;	WDTCWS = 0x7, unprogrammed default
  2601                           ;	WDT input clock selector
  2602                           ;	WDTCCS = 0x7, unprogrammed default
  2603   300005                     	org	3145733
  2604   300005  FF                 	db	255
  2605                           tosu	equ	0xFFF
  2606                           tosh	equ	0xFFE
  2607                           tosl	equ	0xFFD
  2608                           stkptr	equ	0xFFC
  2609                           pclatu	equ	0xFFB
  2610                           pclath	equ	0xFFA
  2611                           pcl	equ	0xFF9
  2612                           tblptru	equ	0xFF8
  2613                           tblptrh	equ	0xFF7
  2614                           tblptrl	equ	0xFF6
  2615                           tablat	equ	0xFF5
  2616                           prodh	equ	0xFF4
  2617                           prodl	equ	0xFF3
  2618                           indf0	equ	0xFEF
  2619                           postinc0	equ	0xFEE
  2620                           postdec0	equ	0xFED
  2621                           preinc0	equ	0xFEC
  2622                           plusw0	equ	0xFEB
  2623                           fsr0h	equ	0xFEA
  2624                           fsr0l	equ	0xFE9
  2625                           wreg	equ	0xFE8
  2626                           indf1	equ	0xFE7
  2627                           postinc1	equ	0xFE6
  2628                           postdec1	equ	0xFE5
  2629                           preinc1	equ	0xFE4
  2630                           plusw1	equ	0xFE3
  2631                           fsr1h	equ	0xFE2
  2632                           fsr1l	equ	0xFE1
  2633                           bsr	equ	0xFE0
  2634                           indf2	equ	0xFDF
  2635                           postinc2	equ	0xFDE
  2636                           postdec2	equ	0xFDD
  2637                           preinc2	equ	0xFDC
  2638                           plusw2	equ	0xFDB
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      74
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(1) Largest target is 9
		 -> calibration(COMRAM[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), motorR(COMRAM[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    switch_calibration@calibration_index	PTR int  size(1) Largest target is 9
		 -> calibration(COMRAM[9]), 

    turnLEFT@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnLEFT@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(COMRAM[9]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(COMRAM[9]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRlllllll[1]), CCPR4H(BITBIGSFRlllllll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRlllllll[1]), CCPR3H(BITBIGSFRlllllll[1]), 


Critical Paths under _main in COMRAM

    _main->_forward
    _main->_turnLEFT
    _main->_turnRIGHT
    _turnRIGHT->_setMotorPWM
    _turnLEFT->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12874
                 _adjust_calibration
                            _forward
                    _initDCmotorsPWM
                 _switch_calibration
                           _turnLEFT
                          _turnRIGHT
 ---------------------------------------------------------------------------------
 (1) _turnRIGHT                                           16    14      2    4055
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLEFT                                            16    14      2    4055
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _switch_calibration                                   3     2      1     272
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                             16    14      2    4011
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          5     4      1    2133
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms_function                                    3     1      2     479
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _adjust_calibration                                   5     4      1     316
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adjust_calibration
   _forward
     ___awdiv
     _delay_ms_function
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _switch_calibration
   _turnLEFT
     ___awdiv
     _delay_ms_function
     _setMotorPWM
   _turnRIGHT
     ___awdiv
     _delay_ms_function
     _setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRllllll     7A      0       0      47        0.0%
BITBIGSFRllllh      6C      0       0      42        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      4A       1       77.9%
BITBIGSFRllhll      54      0       0      40        0.0%
BITBIGSFRhh         40      0       0      32        0.0%
BITBIGSFRlllllh     2B      0       0      43        0.0%
BITBIGSFRllhhhh     17      0       0      36        0.0%
BITBIGSFRlllllh     11      0       0      44        0.0%
BITBIGSFRhlh         E      0       0      33        0.0%
BITBIGSFRllllll      A      0       0      46        0.0%
BITBIGSFRllhhhl      5      0       0      37        0.0%
BITBIGSFRllhlhh      2      0       0      38        0.0%
BITBIGSFRlllh        2      0       0      41        0.0%
BITBIGSFRlh          2      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRllhlhl      1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      34        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A      48        0.0%
DATA                 0      0      4A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 21:23:43 2024

                                 l58 1632                         ___awdiv@sign 002F  
                ___wmul@multiplicand 002C                                  l102 13B6  
                                l103 14FE                                  l112 1502  
                                l120 17A6                                  l106 142A  
                                l115 16FA                                  l116 1764  
                                l230 10FC                                  l222 1050  
                                l216 1260                                  l208 11B4  
                                l244 0F7E                                  l236 0ED2  
                                l181 183A                                  l247 1902  
                                l184 18CA                                  l194 13B4  
                                l187 18DC                                  l478 16F8  
                                l745 18AE                                  l738 18A6  
                                u500 18DC                                  u501 18D8  
                                u510 127C                                  u511 1278  
                                u600 13D2                                  u520 1338  
                                u601 13CE                                  u521 1334  
                                u610 13F8                                  u530 1648  
                                u611 13F4                                  u531 1644  
                                u620 1406                                  u540 1662  
                                u700 0F7E                                  u621 1402  
                                u541 165E                                  u701 0F7A  
                                u630 1438                                  u550 1688  
                                u470 1856                                  u710 1708  
                                u631 1434                                  u551 1684  
                                u471 1852                                  u711 1704  
                                u640 149E                                  u560 16A6  
                                u480 1874                                  u800 11D8  
                                u720 1772                                  u641 149A  
                                u561 16A2                                  u481 1870  
                                u801 11D4                                  u721 176E  
                                u570 16C2                                  u490 1890  
                                u810 11F2                                  u730 1032  
                                u650 0EB4                                  u571 16BE  
                                u491 188C                                  u811 11EE  
                                u731 102E                                  u651 0EB0  
                                u580 16E8                                  u820 1210  
                                u740 1074                                  u660 0EF6  
                                u581 16E4                                  u821 120C  
                                u741 1070                                  u661 0EF2  
                                u590 13C4                                  u830 124A  
                                u750 108E                                  u670 0F10  
                                u591 13C0                                  u831 1246  
                                u751 108A                                  u671 0F0C  
                                u840 1260                                  u760 10AC  
                                u680 0F2E                                  u841 125C  
                                u761 10A8                                  u681 0F2A  
                                u770 10E6                                  u690 0F68  
                                u850 159E                                  u771 10E2  
                                u691 0F64                                  u851 159A  
                                u780 10FC                                  u860 15CE  
                                u781 10F8                                  u861 15CA  
                                u790 1196                                  u870 15FE  
                                u791 1192                                  u871 15FA  
                                u880 162E                                  u937 0EC6  
                                u881 162A                                  u947 1044  
                                u957 1712                                  u967 1750  
                                u977 177C                                  u987 1796  
                                u997 11A8                                  wreg 0FE8  
         __end_of_adjust_calibration 1504                                 l1400 131E  
                               l1410 1648                                 l1402 1338  
                               l1500 1474                                 l1420 166E  
                               l1412 1650                                 l1404 1378  
                               l1510 14B6                                 l1502 1476  
                               l1430 16A6                                 l1422 1676  
                               l1414 1654                                 l1406 1636  
                               l1512 14DE                                 l1504 148E  
                               l1440 16D2                                 l1432 16AC  
                               l1424 1688                                 l1416 1662  
                               l1408 163A                                 l1600 1014  
                               l1520 0E1E                                 l1514 14E0  
                               l1506 1490                                 l1434 16C2  
                               l1426 1690                                 l1442 16D8  
                               l1418 166A                                 l1370 1866  
                               l1362 183C                                 l1450 17A8  
                               l1610 108E                                 l1602 1032  
                               l1530 0E76                                 l1522 0E26  
                               l1516 14F8                                 l1508 149E  
                               l1444 16E8                                 l1436 16CA  
                               l1428 1698                                 l1380 189A  
                               l1372 1874                                 l1364 1844  
                               l1356 18DE                                 l1460 1810  
                               l1452 17B8                                 l1620 10C4  
                               l1612 1096                                 l1604 103E  
                               l1540 0EB4                                 l1532 0E7E  
                               l1524 0E26                                 l1700 155C  
                               l1446 16F0                                 l1438 16CC  
                               l1382 18A0                                 l1374 187A  
                               l1366 1856                                 l1358 18FA  
                               l1390 1262                                 l1630 1124  
                               l1470 182A                                 l1462 1812  
                               l1454 17DE                                 l1614 10AC  
                               l1622 10D0                                 l1606 104C  
                               l1550 0F18                                 l1542 0EC0  
                               l1534 0E86                                 l1526 0E42  
                               l1518 0E04                                 l1710 1568  
                               l1702 155E                                 l1480 13D2  
                               l1384 18B0                                 l1376 1890  
                               l1368 185E                                 l1392 127C  
                               l1640 1174                                 l1632 1130  
                               l1472 1834                                 l1464 181C  
                               l1456 17E2                                 l1624 10E6  
                               l1616 10B4                                 l1608 1078  
                               l1552 0F2E                                 l1560 0F52  
                               l1544 0ECE                                 l1536 0E92  
                               l1528 0E4E                                 l1720 157A  
                               l1712 156A                                 l1704 1560  
                               l1490 1422                                 l1482 13EA  
                               l1386 18B4                                 l1378 1898  
                               l1394 12CA                                 l1650 11DC  
                               l1634 1158                                 l1642 1178  
                               l1626 1100                                 l1474 1836  
                               l1466 181E                                 l1458 1806  
                               l1570 1746                                 l1618 10BC  
                               l1562 0F68                                 l1554 0F36  
                               l1546 0EFA                                 l1538 0E96  
                               l1730 158E                                 l1722 157E  
                               l1714 156E                                 l1706 1562  
                               l1492 1424                                 l1484 13F8  
                               l1388 18C4                                 l1396 12DC  
                               l1660 1220                                 l1652 11F2  
                               l1644 1196                                 l1636 1160  
                               l1628 1108                                 l1476 1838  
                               l1468 1828                                 l1572 175E  
                               l1564 1708                                 l1580 0F82  
                               l1556 0F3E                                 l1548 0F10  
                               l1740 15CE                                 l1732 159E  
                               l1724 1582                                 l1716 1572  
                               l1708 1566                                 l1486 1406  
                               l1478 13C4                                 l1398 12E0  
                               l1662 1228                                 l1654 11FA  
                               l1646 11A2                                 l1638 1168  
                               l1574 1772                                 l1566 1720  
                               l1590 0FCC                                 l1582 0F9C  
                               l1558 0F46                                 l1750 1606  
                               l1742 15D6                                 l1734 15A6  
                               l1726 1586                                 l1718 1576  
                               l1670 1504                                 l1496 1438  
                               l1488 140A                                 l1656 1210  
                               l1664 1234                                 l1648 11B0  
                               l1576 178A                                 l1568 1744  
                               l1592 0FF4                                 l1584 0FA4  
                               l1752 1614                                 l1744 15E4  
                               l1736 15B4                                 l1728 158A  
                               l1680 1524                                 l1672 1510  
                               l1498 1450                                 l1666 124A  
                               l1658 1218                                 l1578 17A4  
                               l1594 0FFC                                 l1586 0FA4  
                               l1754 161C                                 l1746 15EC  
                               l1738 15BC                                 l1690 1540  
                               l1682 152C                                 l1674 1514  
                               l1596 1004                                 l1588 0FC0  
                               l1756 162E                                 l1748 15FE  
                               l1692 1548                                 l1684 1534  
                               l1676 1518                                 l1668 1504  
                               l1598 1010                                 l1694 1550  
                               l1686 1538                                 l1678 151C  
                               l1696 1558                                 l1688 153C  
                               l1698 155A                                 u1007 18BA  
                               u1017 13DC                                 u1027 1414  
                               u1037 1442                                 u1047 1480  
                               u1057 14A8                                 u1067 14EA  
                               _T2PR 0FBC                                 _main 1504  
                               _temp 004A                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                       ___param_bank 0000                                ?_main 002A  
                    __end_of___awdiv 16FA                      ___awdiv@divisor 002C  
                    __end_of___lwdiv 18B0                      ___awdiv@counter 002E  
                    __end_of_forward 1262                                tablat 0FF5  
                              status 0FD8                   _switch_calibration 16FA  
                    __initialization 1904                         __end_of_main 1636  
                ?_switch_calibration 002A                               ??_main 004A  
                      __activetblptr 0000                         ?_setMotorPWM 0037  
                             _CCPR1H 0FAA                               _CCPR2H 0FA6  
                             _CCPR3H 0F25                               _CCPR4H 0F21  
                   ___awdiv@dividend 002A                 ??_switch_calibration 002B  
                             _RE2PPS 0E74                               _RC7PPS 0E69  
                             _RE4PPS 0E76                               _RG6PPS 0E88  
                   forward@max_power 0046                         _CCPTMRS0bits 0FAD  
                             ___wmul 18DE                            ??___awdiv 002E  
                          ??___lwdiv 0034        delay_ms_function@milliseconds 002A  
                             clear_0 191C                     ___awdiv@quotient 0030  
                             _motorL 0021                               _motorR 0018  
                             isa$std 0001                         __pdataCOMRAM 004A  
                          ??_forward 003E                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                    ??_initDCmotorsPWM 002C  
                   __end_of_turnLEFT 10FE                           __accesstop 0060  
            __end_of__initialization 1922                        ___rparam_used 0001  
                     __pcstackCOMRAM 002A                    forward@delay_time 0048  
                       _T2CLKCONbits 0FBF                   _adjust_calibration 13B6  
                            ?___wmul 002A                  ?_adjust_calibration 002A  
                  _delay_ms_function 18B0                   ?_delay_ms_function 002A  
                ??_delay_ms_function 002C                 ??_adjust_calibration 002B  
       turnLEFT@rotation_calibration 0041                              __Hparam 0000  
                            __Lparam 0000                              ___awdiv 1636  
                            ___lwdiv 183C                           _off_period 000B  
                       __psmallconst 0E00                            ?_turnLEFT 003C  
          __end_of_delay_ms_function 18DE                              __pcinit 1904  
                            __ramtop 0E00                              __ptext0 1504  
                            __ptext1 0E02                              __ptext2 0F80  
                            __ptext3 16FA                              __ptext4 17A8  
                            __ptext5 10FE                              __ptext6 1262  
                            __ptext7 18DE                              __ptext8 183C  
                            __ptext9 18B0                            _T2CONbits 0FBD  
                            _forward 10FE                            _T2HLTbits 0FBE  
               end_of_initialization 1922                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                         ??_turnLEFT 003E                    __end_of_turnRIGHT 0F80  
                    _initDCmotorsPWM 17A8                   turnRIGHT@max_power 0046  
                          _PORTFbits 0F8E                   setMotorPWM@negDuty 003B  
                 setMotorPWM@posDuty 003A                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 002A  
switch_calibration@calibration_index 002A                          _CCP1CONbits 0FAB  
                        _CCP2CONbits 0FA7                          _CCP3CONbits 0F26  
        forward@Distance_Calibration 0041                          _CCP4CONbits 0F22  
                     __end_of___wmul 1904                        __pidataCOMRAM 1928  
                start_initialization 1904                   turnLEFT@delay_time 0048  
            __end_of_initDCmotorsPWM 183C                             ??___wmul 002E  
                        _calibration 000F                          __pbssCOMRAM 0001  
                   ___lwdiv@dividend 0030                          turnRIGHT@mL 003C  
                        turnRIGHT@mR 003D                             ?___awdiv 002A  
                           ?___lwdiv 0030                          __smallconst 0E00  
                           ?_forward 003C                        ??_setMotorPWM 0038  
                   ___lwdiv@quotient 0034             initDCmotorsPWM@PWMperiod 002A  
                     ___wmul@product 002E                             _LATCbits 0F7B  
                           _LATDbits 0F7C                             _LATEbits 0F7D  
                          _on_period 000D                             _LATGbits 0F7F  
                           _LATHbits 0F80                     ?_initDCmotorsPWM 002A  
                  ___wmul@multiplier 002A                         setMotorPWM@m 0037  
      turnRIGHT@rotation_calibration 0041                            _turnRIGHT 0E02  
                __end_of_setMotorPWM 13B6                             __Hrparam 0000  
                           __Lrparam 0000                            forward@mL 003C  
                          forward@mR 003D                           _ANSELFbits 0EB4  
                         turnLEFT@mL 003C                           turnLEFT@mR 003D  
                         ?_turnRIGHT 003C                      ___lwdiv@divisor 0032  
                         turnRIGHT@i 0042                           turnRIGHT@j 0044  
         __end_of_switch_calibration 17A8                      ___lwdiv@counter 0036  
                           __ptext10 1636                             __ptext11 13B6  
                  turnLEFT@max_power 0046                    _motor_adjustments 0001  
                           isa$xinst 0000                             _turnLEFT 0F80  
                turnRIGHT@delay_time 0048                             forward@i 0042  
                           forward@j 0044                          _setMotorPWM 1262  
                          turnLEFT@i 0042                            turnLEFT@j 0044  
                        ??_turnRIGHT 003E  
