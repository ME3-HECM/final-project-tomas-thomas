

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 11:02:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataBANK0
    94   004CBC                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _forward_reset_threshold
    98   004CBC  0A                 	db	10
    99                           
   100                           ;initializer for _length
   101   004CBD  32                 	db	50
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _LATEbits	set	3965
   106   000000                     _TRISEbits	set	3973
   107   000000                     _LATHbits	set	3968
   108   000000                     _SSP2CON2bits	set	3802
   109   000000                     _RX4PPS	set	3605
   110   000000                     _SSP2CLKPPS	set	3612
   111   000000                     _SSP2DATPPS	set	3613
   112   000000                     _ANSELDbits	set	3751
   113   000000                     _SSP2ADD	set	3798
   114   000000                     _SSP2CON1bits	set	3801
   115   000000                     _LATAbits	set	3961
   116   000000                     _LATGbits	set	3967
   117   000000                     _TRISAbits	set	3969
   118   000000                     _TRISGbits	set	3975
   119   000000                     _TRISHbits	set	3976
   120   000000                     _PORTFbits	set	3982
   121   000000                     _TRISCbits	set	3971
   122   000000                     _TRISDbits	set	3972
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATCbits	set	3963
   125   000000                     _LATDbits	set	3964
   126   000000                     _LATFbits	set	3966
   127   000000                     _RC4REG	set	3811
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _SSP2CON2	set	3802
   132   000000                     _CCPR4H	set	3873
   133   000000                     _CCPR3H	set	3877
   134   000000                     _SSP2STAT	set	3800
   135   000000                     _ANSELFbits	set	3764
   136   000000                     _SSP2BUF	set	3797
   137   000000                     _PIE4bits	set	3629
   138   000000                     _PIR4bits	set	3639
   139   000000                     _RC0PPS	set	3682
   140   000000                     _RC7PPS	set	3689
   141   000000                     _RD5PPS	set	3695
   142   000000                     _RE2PPS	set	3700
   143   000000                     _RD6PPS	set	3696
   144   000000                     _T2PR	set	4028
   145   000000                     _T2CONbits	set	4029
   146   000000                     _CCPR2H	set	4006
   147   000000                     _CCPR1H	set	4010
   148   000000                     _RE4PPS	set	3702
   149   000000                     _RG6PPS	set	3720
   150   000000                     _T2CLKCONbits	set	4031
   151   000000                     _T2HLTbits	set	4030
   152   000000                     _CCP1CONbits	set	4011
   153   000000                     _CCPTMRS0bits	set	4013
   154   000000                     _CCP2CONbits	set	4007
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157                           
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161   004B96                     __pcinit:
   162                           	callstack 0
   163   004B96                     start_initialization:
   164                           	callstack 0
   165   004B96                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Initialize objects allocated to BANK0 (2 bytes)
   169                           ; load TBLPTR registers with __pidataBANK0
   170   004B96  0EBC               	movlw	low __pidataBANK0
   171   004B98  6EF6               	movwf	tblptrl,c
   172   004B9A  0E4C               	movlw	high __pidataBANK0
   173   004B9C  6EF7               	movwf	tblptrh,c
   174   004B9E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   175   004BA0  6EF8               	movwf	tblptru,c
   176   004BA2  0009               	tblrd		*+	;fetch initializer
   177   004BA4  CFF5 F0FB          	movff	tablat,__pdataBANK0
   178   004BA8  0009               	tblrd		*+	;fetch initializer
   179   004BAA  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   180                           
   181                           ; Clear objects allocated to BANK1 (130 bytes)
   182   004BAE  EE01  F000         	lfsr	0,__pbssBANK1
   183   004BB2  0E82               	movlw	130
   184   004BB4                     clear_0:
   185   004BB4  6AEE               	clrf	postinc0,c
   186   004BB6  06E8               	decf	wreg,f,c
   187   004BB8  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (35 bytes)
   190   004BBA  EE00  F0D8         	lfsr	0,__pbssBANK0
   191   004BBE  0E23               	movlw	35
   192   004BC0                     clear_1:
   193   004BC0  6AEE               	clrf	postinc0,c
   194   004BC2  06E8               	decf	wreg,f,c
   195   004BC4  E1FD               	bnz	clear_1
   196   004BC6                     end_of_initialization:
   197                           	callstack 0
   198   004BC6                     __end_of__initialization:
   199                           	callstack 0
   200   004BC6  0100               	movlb	0
   201   004BC8  EFA1  F022         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssBANK0
   204   0000D8                     __pbssBANK0:
   205                           	callstack 0
   206   0000D8                     _Color_Value:
   207                           	callstack 0
   208   0000D8                     	ds	2
   209   0000DA                     _Forward_Count:
   210                           	callstack 0
   211   0000DA                     	ds	1
   212   0000DB                     _Operation_Count:
   213                           	callstack 0
   214   0000DB                     	ds	1
   215   0000DC                     _TxBufReadCnt:
   216                           	callstack 0
   217   0000DC                     	ds	1
   218   0000DD                     _TxBufWriteCnt:
   219                           	callstack 0
   220   0000DD                     	ds	1
   221   0000DE                     _RxBufReadCnt:
   222                           	callstack 0
   223   0000DE                     	ds	1
   224   0000DF                     _RxBufWriteCnt:
   225                           	callstack 0
   226   0000DF                     	ds	1
   227   0000E0                     _calibration:
   228                           	callstack 0
   229   0000E0                     	ds	9
   230   0000E9                     _motorR:
   231                           	callstack 0
   232   0000E9                     	ds	9
   233   0000F2                     _motorL:
   234                           	callstack 0
   235   0000F2                     	ds	9
   236                           
   237                           	psect	dataBANK0
   238   0000FB                     __pdataBANK0:
   239                           	callstack 0
   240   0000FB                     _forward_reset_threshold:
   241                           	callstack 0
   242   0000FB                     	ds	1
   243   0000FC                     _length:
   244                           	callstack 0
   245   0000FC                     	ds	1
   246                           
   247                           	psect	bssBANK1
   248   000100                     __pbssBANK1:
   249                           	callstack 0
   250   000100                     _EUSART4TXbuf:
   251                           	callstack 0
   252   000100                     	ds	60
   253   00013C                     _Operation_History:
   254                           	callstack 0
   255   00013C                     	ds	50
   256   00016E                     _EUSART4RXbuf:
   257                           	callstack 0
   258   00016E                     	ds	20
   259                           
   260                           	psect	cstackBANK0
   261   000060                     __pcstackBANK0:
   262                           	callstack 0
   263   000060                     custom_floatmodulo@quotient:
   264                           	callstack 0
   265                           
   266                           ; 4 bytes @ 0x0
   267   000060                     	ds	4
   268   000064                     custom_floatmodulo@remainder:
   269                           	callstack 0
   270                           
   271                           ; 4 bytes @ 0x4
   272   000064                     	ds	4
   273   000068                     custom_floatmodulo@intPart:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x8
   277   000068                     	ds	2
   278   00006A                     RGB_to_HSV@R:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0xA
   282   00006A                     	ds	4
   283   00006E                     RGB_to_HSV@G:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0xE
   287   00006E                     	ds	4
   288   000072                     RGB_to_HSV@B:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x12
   292   000072                     	ds	4
   293   000076                     RGB_to_HSV@C:
   294                           	callstack 0
   295                           
   296                           ; 4 bytes @ 0x16
   297   000076                     	ds	4
   298   00007A                     RGB_to_HSV@H:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1A
   302   00007A                     	ds	1
   303   00007B                     RGB_to_HSV@S:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x1B
   307   00007B                     	ds	1
   308   00007C                     RGB_to_HSV@V:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x1C
   312   00007C                     	ds	1
   313   00007D                     _RGB_to_HSV$2715:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x1D
   317   00007D                     	ds	4
   318   000081                     _RGB_to_HSV$2716:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0x21
   322   000081                     	ds	4
   323   000085                     _RGB_to_HSV$317:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x25
   327   000085                     	ds	4
   328   000089                     _RGB_to_HSV$318:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x29
   332   000089                     	ds	4
   333   00008D                     RGB_to_HSV@minRGB:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x2D
   337   00008D                     	ds	4
   338   000091                     _RGB_to_HSV$320:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x31
   342   000091                     	ds	4
   343   000095                     _RGB_to_HSV$321:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x35
   347   000095                     	ds	4
   348   000099                     _RGB_to_HSV$2717:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x39
   352   000099                     	ds	4
   353   00009D                     RGB_to_HSV@H_temp:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x3D
   357   00009D                     	ds	4
   358   0000A1                     RGB_to_HSV@deltaRGB:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x41
   362   0000A1                     	ds	4
   363   0000A5                     RGB_to_HSV@maxRGB:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x45
   367   0000A5                     	ds	4
   368   0000A9                     RGB_to_HSV@r:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x49
   372   0000A9                     	ds	4
   373   0000AD                     RGB_to_HSV@g:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x4D
   377   0000AD                     	ds	4
   378   0000B1                     RGB_to_HSV@b:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x51
   382   0000B1                     	ds	4
   383   0000B5                     color_cardCheck@r:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x55
   387   0000B5                     	ds	4
   388   0000B9                     color_cardCheck@g:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x59
   392   0000B9                     	ds	4
   393   0000BD                     color_cardCheck@b:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x5D
   397   0000BD                     	ds	4
   398   0000C1                     color_cardCheck@c:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x61
   402   0000C1                     	ds	4
   403   0000C5                     color_cardCheck@card_color:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x65
   407   0000C5                     	ds	2
   408   0000C7                     color_cardCheck@H:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x67
   412   0000C7                     	ds	4
   413   0000CB                     color_cardCheck@S:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x6B
   417   0000CB                     	ds	4
   418   0000CF                     color_cardCheck@V:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x6F
   422   0000CF                     	ds	4
   423   0000D3                     maze_search@c:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x73
   427   0000D3                     	ds	1
   428   0000D4                     maze_search@mL:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x74
   432   0000D4                     	ds	1
   433   0000D5                     maze_search@mR:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x75
   437   0000D5                     	ds	1
   438   0000D6                     maze_search@i:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x76
   442   0000D6                     	ds	2
   443                           
   444                           	psect	cstackCOMRAM
   445   000001                     __pcstackCOMRAM:
   446                           	callstack 0
   447   000001                     ??_I2C_2_Master_Idle:
   448   000001                     ??_pause_until_RF2_pressed:
   449   000001                     ?___wmul:
   450                           	callstack 0
   451   000001                     ?___awdiv:
   452                           	callstack 0
   453   000001                     ?___fladd:
   454                           	callstack 0
   455   000001                     ?___fltol:
   456                           	callstack 0
   457   000001                     adjust_calibration@calibration_label:
   458                           	callstack 0
   459   000001                     switch_calibration@calibration_index:
   460                           	callstack 0
   461   000001                     initDCmotorsPWM@PWMperiod:
   462                           	callstack 0
   463   000001                     delay_ms_function@milliseconds:
   464                           	callstack 0
   465   000001                     ___wmul@multiplier:
   466                           	callstack 0
   467   000001                     ___awdiv@dividend:
   468                           	callstack 0
   469   000001                     ___fleq@ff1:
   470                           	callstack 0
   471   000001                     ___flge@ff1:
   472                           	callstack 0
   473   000001                     ___fltol@f1:
   474                           	callstack 0
   475   000001                     ___fladd@b:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x0
   479   000001                     	ds	1
   480   000002                     ??_I2C_2_Master_Read:
   481   000002                     ??_adjust_calibration:
   482   000002                     ??_switch_calibration:
   483   000002                     I2C_2_Master_Write@data_byte:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1
   487   000002                     	ds	1
   488   000003                     ??_delay_ms_function:
   489   000003                     color_writetoaddr@value:
   490                           	callstack 0
   491   000003                     I2C_2_Master_Read@ack:
   492                           	callstack 0
   493   000003                     ___wmul@multiplicand:
   494                           	callstack 0
   495   000003                     ___awdiv@divisor:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499   000003                     	ds	1
   500   000004                     color_writetoaddr@address:
   501                           	callstack 0
   502   000004                     I2C_2_Master_Read@tmp:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x3
   506   000004                     	ds	1
   507   000005                     ??_color_click_init:
   508   000005                     ??___fltol:
   509   000005                     ?_color_read_Red:
   510                           	callstack 0
   511   000005                     ?_color_read_Green:
   512                           	callstack 0
   513   000005                     ?_color_read_Blue:
   514                           	callstack 0
   515   000005                     ?_color_read_Clear:
   516                           	callstack 0
   517   000005                     ___awdiv@counter:
   518                           	callstack 0
   519   000005                     ___wmul@product:
   520                           	callstack 0
   521   000005                     ___fleq@ff2:
   522                           	callstack 0
   523   000005                     ___flge@ff2:
   524                           	callstack 0
   525   000005                     ___fladd@a:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x4
   529   000005                     	ds	1
   530   000006                     ___awdiv@sign:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x5
   534   000006                     	ds	1
   535   000007                     ??_color_read_Red:
   536   000007                     ??_color_read_Green:
   537   000007                     ??_color_read_Blue:
   538   000007                     ??_color_read_Clear:
   539   000007                     ?___lwdiv:
   540                           	callstack 0
   541   000007                     ___awdiv@quotient:
   542                           	callstack 0
   543   000007                     ___lwdiv@dividend:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x6
   547   000007                     	ds	2
   548   000009                     ??___fladd:
   549   000009                     ??___fleq:
   550   000009                     ??___flge:
   551   000009                     ___fltol@sign1:
   552                           	callstack 0
   553   000009                     ___lwdiv@divisor:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x8
   557   000009                     	ds	1
   558   00000A                     ___fltol@exp1:
   559                           	callstack 0
   560   00000A                     color_read_Red@tmp:
   561                           	callstack 0
   562   00000A                     color_read_Green@tmp:
   563                           	callstack 0
   564   00000A                     color_read_Blue@tmp:
   565                           	callstack 0
   566   00000A                     color_read_Clear@tmp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x9
   570   00000A                     	ds	1
   571   00000B                     ___lwdiv@quotient:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xA
   575   00000B                     	ds	1
   576   00000C                     ?___xxtofl:
   577                           	callstack 0
   578   00000C                     ___xxtofl@val:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0xB
   582   00000C                     	ds	1
   583   00000D                     ___lwdiv@counter:
   584                           	callstack 0
   585   00000D                     ___fladd@signs:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0xC
   589   00000D                     	ds	1
   590   00000E                     setMotorPWM@m:
   591                           	callstack 0
   592   00000E                     ___fladd@aexp:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0xD
   596   00000E                     	ds	1
   597   00000F                     ??_setMotorPWM:
   598   00000F                     ___fladd@bexp:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0xE
   602   00000F                     	ds	1
   603   000010                     ??___xxtofl:
   604   000010                     ___fladd@grs:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xF
   608   000010                     	ds	1
   609   000011                     setMotorPWM@posDuty:
   610                           	callstack 0
   611                           
   612                           ; 1 bytes @ 0x10
   613   000011                     	ds	1
   614   000012                     setMotorPWM@negDuty:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x11
   618   000012                     	ds	1
   619   000013                     forward@mL:
   620                           	callstack 0
   621   000013                     backward@mL:
   622                           	callstack 0
   623   000013                     leftTURN@mL:
   624                           	callstack 0
   625   000013                     rightTURN@mL:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x12
   629   000013                     	ds	1
   630   000014                     forward@mR:
   631                           	callstack 0
   632   000014                     backward@mR:
   633                           	callstack 0
   634   000014                     leftTURN@mR:
   635                           	callstack 0
   636   000014                     rightTURN@mR:
   637                           	callstack 0
   638   000014                     ___xxtofl@sign:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x13
   642   000014                     	ds	1
   643   000015                     ??_rightTURN:
   644   000015                     ??_leftTURN:
   645   000015                     ??_forward:
   646   000015                     ??_backward:
   647   000015                     ___xxtofl@exp:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x14
   651   000015                     	ds	1
   652   000016                     ___xxtofl@arg:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x15
   656   000016                     	ds	2
   657   000018                     forward@Distance_Calibration:
   658                           	callstack 0
   659   000018                     backward@Distance_Calibration:
   660                           	callstack 0
   661   000018                     leftTURN@rotation_calibration:
   662                           	callstack 0
   663   000018                     rightTURN@rotation_calibration:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x17
   667   000018                     	ds	1
   668   000019                     forward@i:
   669                           	callstack 0
   670   000019                     backward@i:
   671                           	callstack 0
   672   000019                     leftTURN@i:
   673                           	callstack 0
   674   000019                     rightTURN@i:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x18
   678   000019                     	ds	1
   679   00001A                     ?___flsub:
   680                           	callstack 0
   681   00001A                     ___flsub@b:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x19
   685   00001A                     	ds	1
   686   00001B                     forward@j:
   687                           	callstack 0
   688   00001B                     backward@j:
   689                           	callstack 0
   690   00001B                     leftTURN@j:
   691                           	callstack 0
   692   00001B                     rightTURN@j:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x1A
   696   00001B                     	ds	2
   697   00001D                     forward@max_power:
   698                           	callstack 0
   699   00001D                     backward@max_power:
   700                           	callstack 0
   701   00001D                     leftTURN@max_power:
   702                           	callstack 0
   703   00001D                     rightTURN@max_power:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x1C
   707   00001D                     	ds	1
   708   00001E                     ___flsub@a:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x1D
   712   00001E                     	ds	1
   713   00001F                     forward@delay_time:
   714                           	callstack 0
   715   00001F                     backward@delay_time:
   716                           	callstack 0
   717   00001F                     leftTURN@delay_time:
   718                           	callstack 0
   719   00001F                     rightTURN@delay_time:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x1E
   723   00001F                     	ds	2
   724   000021                     calibration_routine@c:
   725                           	callstack 0
   726   000021                     maze_return@c:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x20
   730   000021                     	ds	1
   731   000022                     ?___fldiv:
   732                           	callstack 0
   733   000022                     calibration_routine@mL:
   734                           	callstack 0
   735   000022                     maze_return@mL:
   736                           	callstack 0
   737   000022                     ___fldiv@b:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x21
   741   000022                     	ds	1
   742   000023                     calibration_routine@mR:
   743                           	callstack 0
   744   000023                     maze_return@mR:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x22
   748   000023                     	ds	1
   749   000024                     ??_maze_return:
   750   000024                     
   751                           ; 1 bytes @ 0x23
   752   000024                     	ds	2
   753   000026                     ___fldiv@a:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x25
   757   000026                     	ds	1
   758   000027                     maze_return@j:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x26
   762   000027                     	ds	2
   763   000029                     maze_return@distance_back:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x28
   767   000029                     	ds	1
   768   00002A                     ??___fldiv:
   769   00002A                     maze_return@i_2039:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x29
   773   00002A                     	ds	2
   774   00002C                     maze_return@i:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2B
   778   00002C                     	ds	2
   779   00002E                     ___fldiv@rem:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x2D
   783   00002E                     	ds	4
   784   000032                     ___fldiv@sign:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x31
   788   000032                     	ds	1
   789   000033                     ___fldiv@new_exp:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x32
   793   000033                     	ds	2
   794   000035                     ___fldiv@grs:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x34
   798   000035                     	ds	4
   799   000039                     ___fldiv@bexp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x38
   803   000039                     	ds	1
   804   00003A                     ___fldiv@aexp:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x39
   808   00003A                     	ds	1
   809   00003B                     ?___flmul:
   810                           	callstack 0
   811   00003B                     ___flmul@b:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x3A
   815   00003B                     	ds	4
   816   00003F                     ___flmul@a:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x3E
   820   00003F                     	ds	4
   821   000043                     ??___flmul:
   822                           
   823                           ; 1 bytes @ 0x42
   824   000043                     	ds	4
   825   000047                     ___flmul@sign:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x46
   829   000047                     	ds	1
   830   000048                     ___flmul@grs:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x47
   834   000048                     	ds	4
   835   00004C                     ___flmul@aexp:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x4B
   839   00004C                     	ds	1
   840   00004D                     ___flmul@bexp:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x4C
   844   00004D                     	ds	1
   845   00004E                     ___flmul@prod:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x4D
   849   00004E                     	ds	4
   850   000052                     ___flmul@temp:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x51
   854   000052                     	ds	2
   855   000054                     ?_custom_floatmodulo:
   856                           	callstack 0
   857   000054                     custom_floatmodulo@x:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x53
   861   000054                     	ds	4
   862   000058                     custom_floatmodulo@y:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x57
   866   000058                     	ds	4
   867   00005C                     ?_color_cardCheck:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x5B
   871   00005C                     	ds	2
   872   00005E                     ??_maze_search:
   873   00005E                     
   874                           ; 1 bytes @ 0x5D
   875   00005E                     	ds	2
   876   000060                     
   877                           ; 1 bytes @ 0x5F
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 20 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  PWMperiod       2    0        unsigned int 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels required when called: 6
   903 ;; This function calls:
   904 ;;		_calibration_routine
   905 ;;		_initDCmotorsPWM
   906 ;;		_maze_return
   907 ;;		_maze_search
   908 ;;		_pause_until_RF2_pressed
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text0
   915   004542                     __ptext0:
   916                           	callstack 0
   917   004542                     _main:
   918                           	callstack 25
   919   004542                     
   920                           ;main.c: 24:     initDCmotorsPWM(PWMperiod);
   921   004542  0E00               	movlw	0
   922   004544  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   923   004546  0E63               	movlw	99
   924   004548  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   925   00454A  EC14  F024         	call	_initDCmotorsPWM	;wreg free
   926   00454E                     
   927                           ;main.c: 28:     TRISDbits.TRISD7 = 0;
   928   00454E  9E84               	bcf	132,7,c	;volatile
   929   004550                     
   930                           ;main.c: 29:     LATDbits.LATD7 = 0;
   931   004550  9E7C               	bcf	124,7,c	;volatile
   932   004552                     
   933                           ;main.c: 31:     TRISHbits.TRISH3 = 0;
   934   004552  9688               	bcf	136,3,c	;volatile
   935   004554                     
   936                           ;main.c: 32:     LATHbits.LATH3 = 0;
   937   004554  9680               	bcf	128,3,c	;volatile
   938   004556                     
   939                           ;main.c: 34:     TRISFbits.TRISF2=1;
   940   004556  8486               	bsf	134,2,c	;volatile
   941   004558                     
   942                           ;main.c: 35:     ANSELFbits.ANSELF2=0;
   943   004558  010E               	movlb	14	; () banked
   944   00455A  95B4               	bcf	180,2,b	;volatile
   945   00455C                     
   946                           ; BSR set to: 14
   947                           ;main.c: 37:     TRISFbits.TRISF3=1;
   948   00455C  8686               	bsf	134,3,c	;volatile
   949   00455E                     
   950                           ; BSR set to: 14
   951                           ;main.c: 38:     ANSELFbits.ANSELF3=0;
   952   00455E  97B4               	bcf	180,3,b	;volatile
   953   004560                     
   954                           ; BSR set to: 14
   955                           ;main.c: 42:     motorL.power=0;
   956   004560  0E00               	movlw	0
   957   004562  0100               	movlb	0	; () banked
   958   004564  6FF2               	movwf	_motorL& (0+255),b
   959   004566                     
   960                           ; BSR set to: 0
   961                           ;main.c: 43:     motorL.direction=1;
   962   004566  0E01               	movlw	1
   963   004568  6FF3               	movwf	(_motorL+1)& (0+255),b
   964   00456A                     
   965                           ; BSR set to: 0
   966                           ;main.c: 44:     motorL.brakemode=1;
   967   00456A  0E01               	movlw	1
   968   00456C  6FF4               	movwf	(_motorL+2)& (0+255),b
   969   00456E                     
   970                           ; BSR set to: 0
   971                           ;main.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   972   00456E  0EAA               	movlw	170
   973   004570  6FF7               	movwf	(_motorL+5)& (0+255),b
   974   004572  0E0F               	movlw	15
   975   004574  6FF8               	movwf	(_motorL+6)& (0+255),b
   976   004576                     
   977                           ; BSR set to: 0
   978                           ;main.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   979   004576  0EA6               	movlw	166
   980   004578  6FF9               	movwf	(_motorL+7)& (0+255),b
   981   00457A  0E0F               	movlw	15
   982   00457C  6FFA               	movwf	(_motorL+8)& (0+255),b
   983   00457E                     
   984                           ; BSR set to: 0
   985                           ;main.c: 47:     motorL.PWMperiod=PWMperiod;
   986   00457E  0E00               	movlw	0
   987   004580  6FF6               	movwf	(_motorL+4)& (0+255),b
   988   004582  0E63               	movlw	99
   989   004584  6FF5               	movwf	(_motorL+3)& (0+255),b
   990   004586                     
   991                           ; BSR set to: 0
   992                           ;main.c: 49:     motorR.power=0;
   993   004586  0E00               	movlw	0
   994   004588  6FE9               	movwf	_motorR& (0+255),b
   995   00458A                     
   996                           ; BSR set to: 0
   997                           ;main.c: 50:     motorR.direction=1;
   998   00458A  0E01               	movlw	1
   999   00458C  6FEA               	movwf	(_motorR+1)& (0+255),b
  1000   00458E                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 51:     motorR.brakemode=1;
  1003   00458E  0E01               	movlw	1
  1004   004590  6FEB               	movwf	(_motorR+2)& (0+255),b
  1005   004592                     
  1006                           ; BSR set to: 0
  1007                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1008   004592  0E25               	movlw	37
  1009   004594  6FEE               	movwf	(_motorR+5)& (0+255),b
  1010   004596  0E0F               	movlw	15
  1011   004598  6FEF               	movwf	(_motorR+6)& (0+255),b
  1012   00459A                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1015   00459A  0E21               	movlw	33
  1016   00459C  6FF0               	movwf	(_motorR+7)& (0+255),b
  1017   00459E  0E0F               	movlw	15
  1018   0045A0  6FF1               	movwf	(_motorR+8)& (0+255),b
  1019   0045A2                     
  1020                           ; BSR set to: 0
  1021                           ;main.c: 54:     motorR.PWMperiod=PWMperiod;
  1022   0045A2  0E00               	movlw	0
  1023   0045A4  6FED               	movwf	(_motorR+4)& (0+255),b
  1024   0045A6  0E63               	movlw	99
  1025   0045A8  6FEC               	movwf	(_motorR+3)& (0+255),b
  1026   0045AA                     
  1027                           ; BSR set to: 0
  1028                           ;main.c: 58:     calibration.index = 1;
  1029   0045AA  0E01               	movlw	1
  1030   0045AC  6FE0               	movwf	_calibration& (0+255),b
  1031   0045AE                     
  1032                           ; BSR set to: 0
  1033                           ;main.c: 61:     calibration.right_90 = 25;
  1034   0045AE  0E19               	movlw	25
  1035   0045B0  6FE1               	movwf	(_calibration+1)& (0+255),b
  1036   0045B2                     
  1037                           ; BSR set to: 0
  1038                           ;main.c: 62:     calibration.left_90 = 25;
  1039   0045B2  0E19               	movlw	25
  1040   0045B4  6FE2               	movwf	(_calibration+2)& (0+255),b
  1041   0045B6                     
  1042                           ; BSR set to: 0
  1043                           ;main.c: 64:     calibration.right_135 = 40;
  1044   0045B6  0E28               	movlw	40
  1045   0045B8  6FE3               	movwf	(_calibration+3)& (0+255),b
  1046   0045BA                     
  1047                           ; BSR set to: 0
  1048                           ;main.c: 65:     calibration.left_135 = 40;
  1049   0045BA  0E28               	movlw	40
  1050   0045BC  6FE4               	movwf	(_calibration+4)& (0+255),b
  1051   0045BE                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 67:     calibration.forward_one = 100;
  1054   0045BE  0E64               	movlw	100
  1055   0045C0  6FE5               	movwf	(_calibration+5)& (0+255),b
  1056   0045C2                     
  1057                           ; BSR set to: 0
  1058                           ;main.c: 68:     calibration.backward_one = 100;
  1059   0045C2  0E64               	movlw	100
  1060   0045C4  6FE6               	movwf	(_calibration+6)& (0+255),b
  1061   0045C6                     
  1062                           ; BSR set to: 0
  1063                           ;main.c: 70:     calibration.forward_half = 33;
  1064   0045C6  0E21               	movlw	33
  1065   0045C8  6FE7               	movwf	(_calibration+7)& (0+255),b
  1066   0045CA                     
  1067                           ; BSR set to: 0
  1068                           ;main.c: 71:     calibration.backward_half = 33;
  1069   0045CA  0E21               	movlw	33
  1070   0045CC  6FE8               	movwf	(_calibration+8)& (0+255),b
  1071   0045CE                     l4544:
  1072                           
  1073                           ;main.c: 79:         pause_until_RF2_pressed();
  1074   0045CE  EC98  F024         	call	_pause_until_RF2_pressed	;wreg free
  1075   0045D2                     
  1076                           ;main.c: 81:         calibration_routine(&calibration, &motorL, &motorR);
  1077   0045D2  0EE0               	movlw	low _calibration
  1078   0045D4  6E21               	movwf	calibration_routine@c^0,c
  1079   0045D6  0EF2               	movlw	low _motorL
  1080   0045D8  6E22               	movwf	calibration_routine@mL^0,c
  1081   0045DA  0EE9               	movlw	low _motorR
  1082   0045DC  6E23               	movwf	calibration_routine@mR^0,c
  1083   0045DE  ECD2  F01A         	call	_calibration_routine	;wreg free
  1084   0045E2                     
  1085                           ;main.c: 83:         maze_search(&calibration, &motorL, &motorR);
  1086   0045E2  0EE0               	movlw	low _calibration
  1087   0045E4  0100               	movlb	0	; () banked
  1088   0045E6  6FD3               	movwf	maze_search@c& (0+255),b
  1089   0045E8  0EF2               	movlw	low _motorL
  1090   0045EA  6FD4               	movwf	maze_search@mL& (0+255),b
  1091   0045EC  0EE9               	movlw	low _motorR
  1092   0045EE  6FD5               	movwf	maze_search@mR& (0+255),b
  1093   0045F0  ECB0  F00F         	call	_maze_search	;wreg free
  1094   0045F4                     
  1095                           ;main.c: 85:         maze_return(&calibration, &motorL, &motorR);
  1096   0045F4  0EE0               	movlw	low _calibration
  1097   0045F6  6E21               	movwf	maze_return@c^0,c
  1098   0045F8  0EF2               	movlw	low _motorL
  1099   0045FA  6E22               	movwf	maze_return@mL^0,c
  1100   0045FC  0EE9               	movlw	low _motorR
  1101   0045FE  6E23               	movwf	maze_return@mR^0,c
  1102   004600  EC2B  F012         	call	_maze_return	;wreg free
  1103   004604  EFE7  F022         	goto	l4544
  1104   004608  EF00  F000         	goto	start
  1105   00460C                     __end_of_main:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _pause_until_RF2_pressed *****************
  1109 ;; Defined at:
  1110 ;;		line 6 in file "calibration.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text1
  1138   004930                     __ptext1:
  1139                           	callstack 0
  1140   004930                     _pause_until_RF2_pressed:
  1141                           	callstack 30
  1142   004930                     l178:
  1143                           
  1144                           ;calibration.c: 13:         LATDbits.LATD7 = 1;
  1145   004930  8E7C               	bsf	124,7,c	;volatile
  1146   004932                     
  1147                           ;calibration.c: 14:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1148   004932  0E09               	movlw	9
  1149   004934  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1150   004936  0E1E               	movlw	30
  1151   004938  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1152   00493A  0EE4               	movlw	228
  1153   00493C                     u5147:
  1154   00493C  2EE8               	decfsz	wreg,f,c
  1155   00493E  D7FE               	bra	u5147
  1156   004940  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1157   004942  D7FC               	bra	u5147
  1158   004944  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1159   004946  D7FA               	bra	u5147
  1160   004948  D000               	nop2	
  1161   00494A                     
  1162                           ;calibration.c: 15:         LATDbits.LATD7 = 0;
  1163   00494A  9E7C               	bcf	124,7,c	;volatile
  1164                           
  1165                           ;calibration.c: 16:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1166   00494C  0E09               	movlw	9
  1167   00494E  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1168   004950  0E1E               	movlw	30
  1169   004952  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1170   004954  0EE4               	movlw	228
  1171   004956                     u5157:
  1172   004956  2EE8               	decfsz	wreg,f,c
  1173   004958  D7FE               	bra	u5157
  1174   00495A  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1175   00495C  D7FC               	bra	u5157
  1176   00495E  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1177   004960  D7FA               	bra	u5157
  1178   004962  D000               	nop2	
  1179   004964                     
  1180                           ;calibration.c: 18:         if(!PORTFbits.RF2){
  1181   004964  B48E               	btfsc	142,2,c	;volatile
  1182   004966  EFB7  F024         	goto	u4711
  1183   00496A  EFB9  F024         	goto	u4710
  1184   00496E                     u4711:
  1185   00496E  EF98  F024         	goto	l178
  1186   004972                     u4710:
  1187   004972                     
  1188                           ;calibration.c: 19:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1189   004972  0E11               	movlw	17
  1190   004974  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1191   004976  0E3C               	movlw	60
  1192   004978  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1193   00497A  0ECB               	movlw	203
  1194   00497C                     u5167:
  1195   00497C  2EE8               	decfsz	wreg,f,c
  1196   00497E  D7FE               	bra	u5167
  1197   004980  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1198   004982  D7FC               	bra	u5167
  1199   004984  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1200   004986  D7FA               	bra	u5167
  1201   004988  0000               	nop	
  1202   00498A                     
  1203                           ;calibration.c: 20:         LATDbits.LATD7 = 0;
  1204   00498A  9E7C               	bcf	124,7,c	;volatile
  1205   00498C  0012               	return		;funcret
  1206   00498E                     __end_of_pause_until_RF2_pressed:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _maze_search *****************
  1210 ;; Defined at:
  1211 ;;		line 6 in file "pathfinder.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  c               1  115[BANK0 ] PTR struct calibration_s
  1214 ;;		 -> calibration(9), 
  1215 ;;  mL              1  116[BANK0 ] PTR struct DC_motor
  1216 ;;		 -> motorL(9), 
  1217 ;;  mR              1  117[BANK0 ] PTR struct DC_motor
  1218 ;;		 -> motorR(9), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  i               2  118[BANK0 ] int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1230 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;Total ram usage:        7 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 5
  1237 ;; This function calls:
  1238 ;;		_backward
  1239 ;;		_color_cardCheck
  1240 ;;		_color_click_init
  1241 ;;		_forward
  1242 ;;		_leftTURN
  1243 ;;		_rightTURN
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text2
  1250   001F60                     __ptext2:
  1251                           	callstack 0
  1252   001F60                     _maze_search:
  1253                           	callstack 25
  1254   001F60                     
  1255                           ;pathfinder.c: 9:     color_click_init();
  1256   001F60  ECAB  F025         	call	_color_click_init	;wreg free
  1257   001F64                     l4274:
  1258                           
  1259                           ;pathfinder.c: 13:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1260   001F64  0E29               	movlw	41
  1261   001F66  6E5F               	movwf	(??_maze_search+1)^0,c
  1262   001F68  0E96               	movlw	150
  1263   001F6A  6E5E               	movwf	??_maze_search^0,c
  1264   001F6C  0E7F               	movlw	127
  1265   001F6E                     u5177:
  1266   001F6E  2EE8               	decfsz	wreg,f,c
  1267   001F70  D7FE               	bra	u5177
  1268   001F72  2E5E               	decfsz	??_maze_search^0,f,c
  1269   001F74  D7FC               	bra	u5177
  1270   001F76  2E5F               	decfsz	(??_maze_search+1)^0,f,c
  1271   001F78  D7FA               	bra	u5177
  1272   001F7A  0000               	nop	
  1273   001F7C                     
  1274                           ;pathfinder.c: 14:         LATHbits.LATH3 = 1;
  1275   001F7C  8680               	bsf	128,3,c	;volatile
  1276   001F7E                     
  1277                           ;pathfinder.c: 15:         LATDbits.LATD7 = 1;
  1278   001F7E  8E7C               	bsf	124,7,c	;volatile
  1279   001F80                     
  1280                           ;pathfinder.c: 18:         forward(c->forward_one, mL, mR);
  1281   001F80  C0D4  F013         	movff	maze_search@mL,forward@mL
  1282   001F84  C0D5  F014         	movff	maze_search@mR,forward@mR
  1283   001F88  0100               	movlb	0	; () banked
  1284   001F8A  51D3               	movf	maze_search@c& (0+255),w,b
  1285   001F8C  6ED9               	movwf	fsr2l,c
  1286   001F8E  6ADA               	clrf	fsr2h,c
  1287   001F90  0E05               	movlw	5
  1288   001F92  26D9               	addwf	fsr2l,f,c
  1289   001F94  50DF               	movf	indf2,w,c
  1290   001F96  ECC3  F01C         	call	_forward
  1291   001F9A                     
  1292                           ;pathfinder.c: 19:         Forward_Count++;
  1293   001F9A  0100               	movlb	0	; () banked
  1294   001F9C  2BDA               	incf	_Forward_Count& (0+255),f,b
  1295   001F9E                     
  1296                           ; BSR set to: 0
  1297                           ;pathfinder.c: 20:         Color_Value = color_cardCheck();
  1298   001F9E  EC01  F007         	call	_color_cardCheck	;wreg free
  1299   001FA2  C05C  F0D8         	movff	?_color_cardCheck,_Color_Value
  1300   001FA6  C05D  F0D9         	movff	?_color_cardCheck+1,_Color_Value+1
  1301   001FAA                     
  1302                           ;pathfinder.c: 22:         LATHbits.LATH3 = 0;
  1303   001FAA  9680               	bcf	128,3,c	;volatile
  1304   001FAC                     
  1305                           ;pathfinder.c: 23:         LATDbits.LATD7 = 0;
  1306   001FAC  9E7C               	bcf	124,7,c	;volatile
  1307   001FAE  0E0A               	movlw	10
  1308   001FB0  0100               	movlb	0	; () banked
  1309   001FB2  65DA               	cpfsgt	_Forward_Count& (0+255),b
  1310   001FB4  EFDE  F00F         	goto	u4811
  1311   001FB8  EFE0  F00F         	goto	u4810
  1312   001FBC                     u4811:
  1313   001FBC  EF45  F010         	goto	l4304
  1314   001FC0                     u4810:
  1315   001FC0                     
  1316                           ; BSR set to: 0
  1317                           ;pathfinder.c: 29:             backward(c->backward_half, mL, mR);
  1318   001FC0  C0D4  F013         	movff	maze_search@mL,backward@mL
  1319   001FC4  C0D5  F014         	movff	maze_search@mR,backward@mR
  1320   001FC8  51D3               	movf	maze_search@c& (0+255),w,b
  1321   001FCA  6ED9               	movwf	fsr2l,c
  1322   001FCC  6ADA               	clrf	fsr2h,c
  1323   001FCE  0E08               	movlw	8
  1324   001FD0  26D9               	addwf	fsr2l,f,c
  1325   001FD2  50DF               	movf	indf2,w,c
  1326   001FD4  EC01  F01F         	call	_backward
  1327                           
  1328                           ;pathfinder.c: 30:             rightTURN(c->right_90, mL, mR);
  1329   001FD8  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1330   001FDC  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1331   001FE0  0100               	movlb	0	; () banked
  1332   001FE2  51D3               	movf	maze_search@c& (0+255),w,b
  1333   001FE4  6ED9               	movwf	fsr2l,c
  1334   001FE6  6ADA               	clrf	fsr2h,c
  1335   001FE8  0E01               	movlw	1
  1336   001FEA  26D9               	addwf	fsr2l,f,c
  1337   001FEC  50DF               	movf	indf2,w,c
  1338   001FEE  EC83  F01D         	call	_rightTURN
  1339                           
  1340                           ;pathfinder.c: 31:             rightTURN(c->right_90, mL, mR);
  1341   001FF2  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1342   001FF6  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1343   001FFA  0100               	movlb	0	; () banked
  1344   001FFC  51D3               	movf	maze_search@c& (0+255),w,b
  1345   001FFE  6ED9               	movwf	fsr2l,c
  1346   002000  6ADA               	clrf	fsr2h,c
  1347   002002  0E01               	movlw	1
  1348   002004  26D9               	addwf	fsr2l,f,c
  1349   002006  50DF               	movf	indf2,w,c
  1350   002008  EC83  F01D         	call	_rightTURN
  1351                           
  1352                           ;pathfinder.c: 32:             backward(c->backward_one, mL, mR);
  1353   00200C  C0D4  F013         	movff	maze_search@mL,backward@mL
  1354   002010  C0D5  F014         	movff	maze_search@mR,backward@mR
  1355   002014  0100               	movlb	0	; () banked
  1356   002016  51D3               	movf	maze_search@c& (0+255),w,b
  1357   002018  6ED9               	movwf	fsr2l,c
  1358   00201A  6ADA               	clrf	fsr2h,c
  1359   00201C  0E06               	movlw	6
  1360   00201E  26D9               	addwf	fsr2l,f,c
  1361   002020  50DF               	movf	indf2,w,c
  1362   002022  EC01  F01F         	call	_backward
  1363   002026                     
  1364                           ;pathfinder.c: 33:             for (int i = 0; i < forward_reset_threshold; i++) {
  1365   002026  0E00               	movlw	0
  1366   002028  0100               	movlb	0	; () banked
  1367   00202A  6FD7               	movwf	(maze_search@i+1)& (0+255),b
  1368   00202C  0E00               	movlw	0
  1369   00202E  6FD6               	movwf	maze_search@i& (0+255),b
  1370   002030  EF29  F010         	goto	l4300
  1371   002034                     l4296:
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;pathfinder.c: 34:                  forward(c->forward_one, mL, mR);
  1375   002034  C0D4  F013         	movff	maze_search@mL,forward@mL
  1376   002038  C0D5  F014         	movff	maze_search@mR,forward@mR
  1377   00203C  51D3               	movf	maze_search@c& (0+255),w,b
  1378   00203E  6ED9               	movwf	fsr2l,c
  1379   002040  6ADA               	clrf	fsr2h,c
  1380   002042  0E05               	movlw	5
  1381   002044  26D9               	addwf	fsr2l,f,c
  1382   002046  50DF               	movf	indf2,w,c
  1383   002048  ECC3  F01C         	call	_forward
  1384   00204C                     
  1385                           ;pathfinder.c: 36:             }
  1386   00204C  0100               	movlb	0	; () banked
  1387   00204E  4BD6               	infsnz	maze_search@i& (0+255),f,b
  1388   002050  2BD7               	incf	(maze_search@i+1)& (0+255),f,b
  1389   002052                     l4300:
  1390                           
  1391                           ; BSR set to: 0
  1392   002052  BFD7               	btfsc	(maze_search@i+1)& (0+255),7,b
  1393   002054  EF35  F010         	goto	u4821
  1394   002058  51D7               	movf	(maze_search@i+1)& (0+255),w,b
  1395   00205A  E109               	bnz	u4820
  1396   00205C  0E0A               	movlw	10
  1397   00205E  5DD6               	subwf	maze_search@i& (0+255),w,b
  1398   002060  A0D8               	btfss	status,0,c
  1399   002062  EF35  F010         	goto	u4821
  1400   002066  EF37  F010         	goto	u4820
  1401   00206A                     u4821:
  1402   00206A  EF1A  F010         	goto	l4296
  1403   00206E                     u4820:
  1404   00206E                     
  1405                           ; BSR set to: 0
  1406                           ;pathfinder.c: 37:             backward(c->backward_half, mL, mR);
  1407   00206E  C0D4  F013         	movff	maze_search@mL,backward@mL
  1408   002072  C0D5  F014         	movff	maze_search@mR,backward@mR
  1409   002076  51D3               	movf	maze_search@c& (0+255),w,b
  1410   002078  6ED9               	movwf	fsr2l,c
  1411   00207A  6ADA               	clrf	fsr2h,c
  1412   00207C  0E08               	movlw	8
  1413   00207E  26D9               	addwf	fsr2l,f,c
  1414   002080  50DF               	movf	indf2,w,c
  1415   002082  EC01  F01F         	call	_backward
  1416                           
  1417                           ;pathfinder.c: 38:             break;
  1418   002086  EF2A  F012         	goto	l568
  1419   00208A                     l4304:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;pathfinder.c: 41:         if(Color_Value != 0){
  1423   00208A  51D8               	movf	_Color_Value& (0+255),w,b
  1424   00208C  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1425   00208E  B4D8               	btfsc	status,2,c
  1426   002090  EF4C  F010         	goto	u4831
  1427   002094  EF4E  F010         	goto	u4830
  1428   002098                     u4831:
  1429   002098  EFB2  F00F         	goto	l4274
  1430   00209C                     u4830:
  1431   00209C                     
  1432                           ; BSR set to: 0
  1433                           ;pathfinder.c: 43:             Operation_History[Operation_Count] = Forward_Count + 10;
  1434   00209C  0E3C               	movlw	low _Operation_History
  1435   00209E  25DB               	addwf	_Operation_Count& (0+255),w,b
  1436   0020A0  6ED9               	movwf	fsr2l,c
  1437   0020A2  6ADA               	clrf	fsr2h,c
  1438   0020A4  0E01               	movlw	high _Operation_History
  1439   0020A6  22DA               	addwfc	fsr2h,f,c
  1440   0020A8  51DA               	movf	_Forward_Count& (0+255),w,b
  1441   0020AA  0F0A               	addlw	10
  1442   0020AC  6EDF               	movwf	indf2,c
  1443   0020AE                     
  1444                           ; BSR set to: 0
  1445                           ;pathfinder.c: 44:             Forward_Count = 0;
  1446   0020AE  0E00               	movlw	0
  1447   0020B0  6FDA               	movwf	_Forward_Count& (0+255),b
  1448   0020B2                     
  1449                           ; BSR set to: 0
  1450                           ;pathfinder.c: 45:             Operation_Count++;
  1451   0020B2  2BDB               	incf	_Operation_Count& (0+255),f,b
  1452   0020B4                     
  1453                           ; BSR set to: 0
  1454                           ;pathfinder.c: 47:             if(Color_Value == 1){
  1455   0020B4  05D8               	decf	_Color_Value& (0+255),w,b
  1456   0020B6  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1457   0020B8  A4D8               	btfss	status,2,c
  1458   0020BA  EF61  F010         	goto	u4841
  1459   0020BE  EF63  F010         	goto	u4840
  1460   0020C2                     u4841:
  1461   0020C2  EF87  F010         	goto	l4322
  1462   0020C6                     u4840:
  1463   0020C6                     
  1464                           ; BSR set to: 0
  1465                           ;pathfinder.c: 48:                 Operation_History[Operation_Count] = Color_Value;
  1466   0020C6  0E3C               	movlw	low _Operation_History
  1467   0020C8  25DB               	addwf	_Operation_Count& (0+255),w,b
  1468   0020CA  6ED9               	movwf	fsr2l,c
  1469   0020CC  6ADA               	clrf	fsr2h,c
  1470   0020CE  0E01               	movlw	high _Operation_History
  1471   0020D0  22DA               	addwfc	fsr2h,f,c
  1472   0020D2  C0D8  FFDF         	movff	_Color_Value,indf2
  1473   0020D6                     
  1474                           ; BSR set to: 0
  1475                           ;pathfinder.c: 49:                 Operation_Count++;
  1476   0020D6  2BDB               	incf	_Operation_Count& (0+255),f,b
  1477   0020D8                     
  1478                           ; BSR set to: 0
  1479                           ;pathfinder.c: 50:                 backward(c->backward_half, mL, mR);
  1480   0020D8  C0D4  F013         	movff	maze_search@mL,backward@mL
  1481   0020DC  C0D5  F014         	movff	maze_search@mR,backward@mR
  1482   0020E0  51D3               	movf	maze_search@c& (0+255),w,b
  1483   0020E2  6ED9               	movwf	fsr2l,c
  1484   0020E4  6ADA               	clrf	fsr2h,c
  1485   0020E6  0E08               	movlw	8
  1486   0020E8  26D9               	addwf	fsr2l,f,c
  1487   0020EA  50DF               	movf	indf2,w,c
  1488   0020EC  EC01  F01F         	call	_backward
  1489   0020F0                     
  1490                           ;pathfinder.c: 51:                 rightTURN(c->right_90, mL, mR);
  1491   0020F0  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1492   0020F4  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1493   0020F8  0100               	movlb	0	; () banked
  1494   0020FA  51D3               	movf	maze_search@c& (0+255),w,b
  1495   0020FC  6ED9               	movwf	fsr2l,c
  1496   0020FE  6ADA               	clrf	fsr2h,c
  1497   002100  0E01               	movlw	1
  1498   002102  26D9               	addwf	fsr2l,f,c
  1499   002104  50DF               	movf	indf2,w,c
  1500   002106  EC83  F01D         	call	_rightTURN
  1501                           
  1502                           ;pathfinder.c: 52:             }
  1503   00210A  EFB2  F00F         	goto	l4274
  1504   00210E                     l4322:
  1505                           
  1506                           ; BSR set to: 0
  1507   00210E  0E02               	movlw	2
  1508   002110  19D8               	xorwf	_Color_Value& (0+255),w,b
  1509   002112  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1510   002114  A4D8               	btfss	status,2,c
  1511   002116  EF8F  F010         	goto	u4851
  1512   00211A  EF91  F010         	goto	u4850
  1513   00211E                     u4851:
  1514   00211E  EFB5  F010         	goto	l4332
  1515   002122                     u4850:
  1516   002122                     
  1517                           ; BSR set to: 0
  1518                           ;pathfinder.c: 55:                 Operation_History[Operation_Count] = Color_Value;
  1519   002122  0E3C               	movlw	low _Operation_History
  1520   002124  25DB               	addwf	_Operation_Count& (0+255),w,b
  1521   002126  6ED9               	movwf	fsr2l,c
  1522   002128  6ADA               	clrf	fsr2h,c
  1523   00212A  0E01               	movlw	high _Operation_History
  1524   00212C  22DA               	addwfc	fsr2h,f,c
  1525   00212E  C0D8  FFDF         	movff	_Color_Value,indf2
  1526   002132                     
  1527                           ; BSR set to: 0
  1528                           ;pathfinder.c: 56:                 Operation_Count++;
  1529   002132  2BDB               	incf	_Operation_Count& (0+255),f,b
  1530   002134                     
  1531                           ; BSR set to: 0
  1532                           ;pathfinder.c: 57:                 backward(c->backward_half, mL, mR);
  1533   002134  C0D4  F013         	movff	maze_search@mL,backward@mL
  1534   002138  C0D5  F014         	movff	maze_search@mR,backward@mR
  1535   00213C  51D3               	movf	maze_search@c& (0+255),w,b
  1536   00213E  6ED9               	movwf	fsr2l,c
  1537   002140  6ADA               	clrf	fsr2h,c
  1538   002142  0E08               	movlw	8
  1539   002144  26D9               	addwf	fsr2l,f,c
  1540   002146  50DF               	movf	indf2,w,c
  1541   002148  EC01  F01F         	call	_backward
  1542   00214C                     
  1543                           ;pathfinder.c: 58:                 leftTURN(c->left_90, mL, mR);
  1544   00214C  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1545   002150  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1546   002154  0100               	movlb	0	; () banked
  1547   002156  51D3               	movf	maze_search@c& (0+255),w,b
  1548   002158  6ED9               	movwf	fsr2l,c
  1549   00215A  6ADA               	clrf	fsr2h,c
  1550   00215C  0E02               	movlw	2
  1551   00215E  26D9               	addwf	fsr2l,f,c
  1552   002160  50DF               	movf	indf2,w,c
  1553   002162  EC42  F01E         	call	_leftTURN
  1554                           
  1555                           ;pathfinder.c: 59:             }
  1556   002166  EFB2  F00F         	goto	l4274
  1557   00216A                     l4332:
  1558                           
  1559                           ; BSR set to: 0
  1560   00216A  0E03               	movlw	3
  1561   00216C  19D8               	xorwf	_Color_Value& (0+255),w,b
  1562   00216E  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1563   002170  A4D8               	btfss	status,2,c
  1564   002172  EFBD  F010         	goto	u4861
  1565   002176  EFBF  F010         	goto	u4860
  1566   00217A                     u4861:
  1567   00217A  EF0A  F011         	goto	l4348
  1568   00217E                     u4860:
  1569   00217E                     
  1570                           ; BSR set to: 0
  1571                           ;pathfinder.c: 62:                 Operation_History[Operation_Count] = Color_Value;
  1572   00217E  0E3C               	movlw	low _Operation_History
  1573   002180  25DB               	addwf	_Operation_Count& (0+255),w,b
  1574   002182  6ED9               	movwf	fsr2l,c
  1575   002184  6ADA               	clrf	fsr2h,c
  1576   002186  0E01               	movlw	high _Operation_History
  1577   002188  22DA               	addwfc	fsr2h,f,c
  1578   00218A  C0D8  FFDF         	movff	_Color_Value,indf2
  1579   00218E                     
  1580                           ; BSR set to: 0
  1581                           ;pathfinder.c: 63:                 Operation_Count++;
  1582   00218E  2BDB               	incf	_Operation_Count& (0+255),f,b
  1583   002190                     
  1584                           ; BSR set to: 0
  1585                           ;pathfinder.c: 64:                 backward(c->backward_half, mL, mR);
  1586   002190  C0D4  F013         	movff	maze_search@mL,backward@mL
  1587   002194  C0D5  F014         	movff	maze_search@mR,backward@mR
  1588   002198  51D3               	movf	maze_search@c& (0+255),w,b
  1589   00219A  6ED9               	movwf	fsr2l,c
  1590   00219C  6ADA               	clrf	fsr2h,c
  1591   00219E  0E08               	movlw	8
  1592   0021A0  26D9               	addwf	fsr2l,f,c
  1593   0021A2  50DF               	movf	indf2,w,c
  1594   0021A4  EC01  F01F         	call	_backward
  1595   0021A8                     
  1596                           ;pathfinder.c: 65:                 rightTURN(c->right_90, mL, mR);
  1597   0021A8  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1598   0021AC  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1599   0021B0  0100               	movlb	0	; () banked
  1600   0021B2  51D3               	movf	maze_search@c& (0+255),w,b
  1601   0021B4  6ED9               	movwf	fsr2l,c
  1602   0021B6  6ADA               	clrf	fsr2h,c
  1603   0021B8  0E01               	movlw	1
  1604   0021BA  26D9               	addwf	fsr2l,f,c
  1605   0021BC  50DF               	movf	indf2,w,c
  1606   0021BE  EC83  F01D         	call	_rightTURN
  1607   0021C2                     
  1608                           ;pathfinder.c: 66:                 rightTURN(c->right_90, mL, mR);
  1609   0021C2  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1610   0021C6  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1611   0021CA  0100               	movlb	0	; () banked
  1612   0021CC  51D3               	movf	maze_search@c& (0+255),w,b
  1613   0021CE  6ED9               	movwf	fsr2l,c
  1614   0021D0  6ADA               	clrf	fsr2h,c
  1615   0021D2  0E01               	movlw	1
  1616   0021D4  26D9               	addwf	fsr2l,f,c
  1617   0021D6  50DF               	movf	indf2,w,c
  1618   0021D8  EC83  F01D         	call	_rightTURN
  1619   0021DC                     
  1620                           ;pathfinder.c: 67:                 backward(c->backward_one, mL, mR);
  1621   0021DC  C0D4  F013         	movff	maze_search@mL,backward@mL
  1622   0021E0  C0D5  F014         	movff	maze_search@mR,backward@mR
  1623   0021E4  0100               	movlb	0	; () banked
  1624   0021E6  51D3               	movf	maze_search@c& (0+255),w,b
  1625   0021E8  6ED9               	movwf	fsr2l,c
  1626   0021EA  6ADA               	clrf	fsr2h,c
  1627   0021EC  0E06               	movlw	6
  1628   0021EE  26D9               	addwf	fsr2l,f,c
  1629   0021F0  50DF               	movf	indf2,w,c
  1630   0021F2  EC01  F01F         	call	_backward
  1631   0021F6                     
  1632                           ;pathfinder.c: 68:                 forward(c->forward_half, mL, mR);
  1633   0021F6  C0D4  F013         	movff	maze_search@mL,forward@mL
  1634   0021FA  C0D5  F014         	movff	maze_search@mR,forward@mR
  1635   0021FE  0100               	movlb	0	; () banked
  1636   002200  51D3               	movf	maze_search@c& (0+255),w,b
  1637   002202  6ED9               	movwf	fsr2l,c
  1638   002204  6ADA               	clrf	fsr2h,c
  1639   002206  0E07               	movlw	7
  1640   002208  26D9               	addwf	fsr2l,f,c
  1641   00220A  50DF               	movf	indf2,w,c
  1642   00220C  ECC3  F01C         	call	_forward
  1643                           
  1644                           ;pathfinder.c: 70:             }
  1645   002210  EFB2  F00F         	goto	l4274
  1646   002214                     l4348:
  1647                           
  1648                           ; BSR set to: 0
  1649   002214  0E04               	movlw	4
  1650   002216  19D8               	xorwf	_Color_Value& (0+255),w,b
  1651   002218  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1652   00221A  A4D8               	btfss	status,2,c
  1653   00221C  EF12  F011         	goto	u4871
  1654   002220  EF14  F011         	goto	u4870
  1655   002224                     u4871:
  1656   002224  EF45  F011         	goto	l4360
  1657   002228                     u4870:
  1658   002228                     
  1659                           ; BSR set to: 0
  1660                           ;pathfinder.c: 73:                 Operation_History[Operation_Count] = Color_Value;
  1661   002228  0E3C               	movlw	low _Operation_History
  1662   00222A  25DB               	addwf	_Operation_Count& (0+255),w,b
  1663   00222C  6ED9               	movwf	fsr2l,c
  1664   00222E  6ADA               	clrf	fsr2h,c
  1665   002230  0E01               	movlw	high _Operation_History
  1666   002232  22DA               	addwfc	fsr2h,f,c
  1667   002234  C0D8  FFDF         	movff	_Color_Value,indf2
  1668   002238                     
  1669                           ; BSR set to: 0
  1670                           ;pathfinder.c: 74:                 Operation_Count++;
  1671   002238  2BDB               	incf	_Operation_Count& (0+255),f,b
  1672   00223A                     
  1673                           ; BSR set to: 0
  1674                           ;pathfinder.c: 75:                 backward(c->backward_half, mL, mR);
  1675   00223A  C0D4  F013         	movff	maze_search@mL,backward@mL
  1676   00223E  C0D5  F014         	movff	maze_search@mR,backward@mR
  1677   002242  51D3               	movf	maze_search@c& (0+255),w,b
  1678   002244  6ED9               	movwf	fsr2l,c
  1679   002246  6ADA               	clrf	fsr2h,c
  1680   002248  0E08               	movlw	8
  1681   00224A  26D9               	addwf	fsr2l,f,c
  1682   00224C  50DF               	movf	indf2,w,c
  1683   00224E  EC01  F01F         	call	_backward
  1684   002252                     
  1685                           ;pathfinder.c: 76:                 backward(c->backward_one, mL, mR);
  1686   002252  C0D4  F013         	movff	maze_search@mL,backward@mL
  1687   002256  C0D5  F014         	movff	maze_search@mR,backward@mR
  1688   00225A  0100               	movlb	0	; () banked
  1689   00225C  51D3               	movf	maze_search@c& (0+255),w,b
  1690   00225E  6ED9               	movwf	fsr2l,c
  1691   002260  6ADA               	clrf	fsr2h,c
  1692   002262  0E06               	movlw	6
  1693   002264  26D9               	addwf	fsr2l,f,c
  1694   002266  50DF               	movf	indf2,w,c
  1695   002268  EC01  F01F         	call	_backward
  1696   00226C                     
  1697                           ;pathfinder.c: 77:                 rightTURN(c->right_90, mL, mR);
  1698   00226C  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1699   002270  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1700   002274  0100               	movlb	0	; () banked
  1701   002276  51D3               	movf	maze_search@c& (0+255),w,b
  1702   002278  6ED9               	movwf	fsr2l,c
  1703   00227A  6ADA               	clrf	fsr2h,c
  1704   00227C  0E01               	movlw	1
  1705   00227E  26D9               	addwf	fsr2l,f,c
  1706   002280  50DF               	movf	indf2,w,c
  1707   002282  EC83  F01D         	call	_rightTURN
  1708                           
  1709                           ;pathfinder.c: 78:             }
  1710   002286  EFB2  F00F         	goto	l4274
  1711   00228A                     l4360:
  1712                           
  1713                           ; BSR set to: 0
  1714   00228A  0E05               	movlw	5
  1715   00228C  19D8               	xorwf	_Color_Value& (0+255),w,b
  1716   00228E  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1717   002290  A4D8               	btfss	status,2,c
  1718   002292  EF4D  F011         	goto	u4881
  1719   002296  EF4F  F011         	goto	u4880
  1720   00229A                     u4881:
  1721   00229A  EF80  F011         	goto	l4372
  1722   00229E                     u4880:
  1723   00229E                     
  1724                           ; BSR set to: 0
  1725                           ;pathfinder.c: 81:                 Operation_History[Operation_Count] = Color_Value;
  1726   00229E  0E3C               	movlw	low _Operation_History
  1727   0022A0  25DB               	addwf	_Operation_Count& (0+255),w,b
  1728   0022A2  6ED9               	movwf	fsr2l,c
  1729   0022A4  6ADA               	clrf	fsr2h,c
  1730   0022A6  0E01               	movlw	high _Operation_History
  1731   0022A8  22DA               	addwfc	fsr2h,f,c
  1732   0022AA  C0D8  FFDF         	movff	_Color_Value,indf2
  1733   0022AE                     
  1734                           ; BSR set to: 0
  1735                           ;pathfinder.c: 82:                 Operation_Count++;
  1736   0022AE  2BDB               	incf	_Operation_Count& (0+255),f,b
  1737   0022B0                     
  1738                           ; BSR set to: 0
  1739                           ;pathfinder.c: 83:                 backward(c->backward_half, mL, mR);
  1740   0022B0  C0D4  F013         	movff	maze_search@mL,backward@mL
  1741   0022B4  C0D5  F014         	movff	maze_search@mR,backward@mR
  1742   0022B8  51D3               	movf	maze_search@c& (0+255),w,b
  1743   0022BA  6ED9               	movwf	fsr2l,c
  1744   0022BC  6ADA               	clrf	fsr2h,c
  1745   0022BE  0E08               	movlw	8
  1746   0022C0  26D9               	addwf	fsr2l,f,c
  1747   0022C2  50DF               	movf	indf2,w,c
  1748   0022C4  EC01  F01F         	call	_backward
  1749   0022C8                     
  1750                           ;pathfinder.c: 84:                 backward(c->backward_one, mL, mR);
  1751   0022C8  C0D4  F013         	movff	maze_search@mL,backward@mL
  1752   0022CC  C0D5  F014         	movff	maze_search@mR,backward@mR
  1753   0022D0  0100               	movlb	0	; () banked
  1754   0022D2  51D3               	movf	maze_search@c& (0+255),w,b
  1755   0022D4  6ED9               	movwf	fsr2l,c
  1756   0022D6  6ADA               	clrf	fsr2h,c
  1757   0022D8  0E06               	movlw	6
  1758   0022DA  26D9               	addwf	fsr2l,f,c
  1759   0022DC  50DF               	movf	indf2,w,c
  1760   0022DE  EC01  F01F         	call	_backward
  1761   0022E2                     
  1762                           ;pathfinder.c: 85:                 leftTURN(c->left_90, mL, mR);
  1763   0022E2  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1764   0022E6  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1765   0022EA  0100               	movlb	0	; () banked
  1766   0022EC  51D3               	movf	maze_search@c& (0+255),w,b
  1767   0022EE  6ED9               	movwf	fsr2l,c
  1768   0022F0  6ADA               	clrf	fsr2h,c
  1769   0022F2  0E02               	movlw	2
  1770   0022F4  26D9               	addwf	fsr2l,f,c
  1771   0022F6  50DF               	movf	indf2,w,c
  1772   0022F8  EC42  F01E         	call	_leftTURN
  1773                           
  1774                           ;pathfinder.c: 86:             }
  1775   0022FC  EFB2  F00F         	goto	l4274
  1776   002300                     l4372:
  1777                           
  1778                           ; BSR set to: 0
  1779   002300  0E06               	movlw	6
  1780   002302  19D8               	xorwf	_Color_Value& (0+255),w,b
  1781   002304  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1782   002306  A4D8               	btfss	status,2,c
  1783   002308  EF88  F011         	goto	u4891
  1784   00230C  EF8A  F011         	goto	u4890
  1785   002310                     u4891:
  1786   002310  EFAE  F011         	goto	l4382
  1787   002314                     u4890:
  1788   002314                     
  1789                           ; BSR set to: 0
  1790                           ;pathfinder.c: 89:                 Operation_History[Operation_Count] = Color_Value;
  1791   002314  0E3C               	movlw	low _Operation_History
  1792   002316  25DB               	addwf	_Operation_Count& (0+255),w,b
  1793   002318  6ED9               	movwf	fsr2l,c
  1794   00231A  6ADA               	clrf	fsr2h,c
  1795   00231C  0E01               	movlw	high _Operation_History
  1796   00231E  22DA               	addwfc	fsr2h,f,c
  1797   002320  C0D8  FFDF         	movff	_Color_Value,indf2
  1798   002324                     
  1799                           ; BSR set to: 0
  1800                           ;pathfinder.c: 90:                 Operation_Count++;
  1801   002324  2BDB               	incf	_Operation_Count& (0+255),f,b
  1802   002326                     
  1803                           ; BSR set to: 0
  1804                           ;pathfinder.c: 91:                 backward(c->backward_half, mL, mR);
  1805   002326  C0D4  F013         	movff	maze_search@mL,backward@mL
  1806   00232A  C0D5  F014         	movff	maze_search@mR,backward@mR
  1807   00232E  51D3               	movf	maze_search@c& (0+255),w,b
  1808   002330  6ED9               	movwf	fsr2l,c
  1809   002332  6ADA               	clrf	fsr2h,c
  1810   002334  0E08               	movlw	8
  1811   002336  26D9               	addwf	fsr2l,f,c
  1812   002338  50DF               	movf	indf2,w,c
  1813   00233A  EC01  F01F         	call	_backward
  1814   00233E                     
  1815                           ;pathfinder.c: 92:                 rightTURN(c->right_135, mL, mR);
  1816   00233E  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1817   002342  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1818   002346  0100               	movlb	0	; () banked
  1819   002348  51D3               	movf	maze_search@c& (0+255),w,b
  1820   00234A  6ED9               	movwf	fsr2l,c
  1821   00234C  6ADA               	clrf	fsr2h,c
  1822   00234E  0E03               	movlw	3
  1823   002350  26D9               	addwf	fsr2l,f,c
  1824   002352  50DF               	movf	indf2,w,c
  1825   002354  EC83  F01D         	call	_rightTURN
  1826                           
  1827                           ;pathfinder.c: 93:             }
  1828   002358  EFB2  F00F         	goto	l4274
  1829   00235C                     l4382:
  1830                           
  1831                           ; BSR set to: 0
  1832   00235C  0E07               	movlw	7
  1833   00235E  19D8               	xorwf	_Color_Value& (0+255),w,b
  1834   002360  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1835   002362  A4D8               	btfss	status,2,c
  1836   002364  EFB6  F011         	goto	u4901
  1837   002368  EFB8  F011         	goto	u4900
  1838   00236C                     u4901:
  1839   00236C  EFDC  F011         	goto	l4392
  1840   002370                     u4900:
  1841   002370                     
  1842                           ; BSR set to: 0
  1843                           ;pathfinder.c: 96:                 Operation_History[Operation_Count] = Color_Value;
  1844   002370  0E3C               	movlw	low _Operation_History
  1845   002372  25DB               	addwf	_Operation_Count& (0+255),w,b
  1846   002374  6ED9               	movwf	fsr2l,c
  1847   002376  6ADA               	clrf	fsr2h,c
  1848   002378  0E01               	movlw	high _Operation_History
  1849   00237A  22DA               	addwfc	fsr2h,f,c
  1850   00237C  C0D8  FFDF         	movff	_Color_Value,indf2
  1851   002380                     
  1852                           ; BSR set to: 0
  1853                           ;pathfinder.c: 97:                 Operation_Count++;
  1854   002380  2BDB               	incf	_Operation_Count& (0+255),f,b
  1855   002382                     
  1856                           ; BSR set to: 0
  1857                           ;pathfinder.c: 98:                 backward(c->backward_half, mL, mR);
  1858   002382  C0D4  F013         	movff	maze_search@mL,backward@mL
  1859   002386  C0D5  F014         	movff	maze_search@mR,backward@mR
  1860   00238A  51D3               	movf	maze_search@c& (0+255),w,b
  1861   00238C  6ED9               	movwf	fsr2l,c
  1862   00238E  6ADA               	clrf	fsr2h,c
  1863   002390  0E08               	movlw	8
  1864   002392  26D9               	addwf	fsr2l,f,c
  1865   002394  50DF               	movf	indf2,w,c
  1866   002396  EC01  F01F         	call	_backward
  1867   00239A                     
  1868                           ;pathfinder.c: 99:                 leftTURN(c->left_135, mL, mR);
  1869   00239A  C0D4  F013         	movff	maze_search@mL,leftTURN@mL
  1870   00239E  C0D5  F014         	movff	maze_search@mR,leftTURN@mR
  1871   0023A2  0100               	movlb	0	; () banked
  1872   0023A4  51D3               	movf	maze_search@c& (0+255),w,b
  1873   0023A6  6ED9               	movwf	fsr2l,c
  1874   0023A8  6ADA               	clrf	fsr2h,c
  1875   0023AA  0E04               	movlw	4
  1876   0023AC  26D9               	addwf	fsr2l,f,c
  1877   0023AE  50DF               	movf	indf2,w,c
  1878   0023B0  EC42  F01E         	call	_leftTURN
  1879                           
  1880                           ;pathfinder.c: 100:             }
  1881   0023B4  EFB2  F00F         	goto	l4274
  1882   0023B8                     l4392:
  1883                           
  1884                           ; BSR set to: 0
  1885   0023B8  0E08               	movlw	8
  1886   0023BA  19D8               	xorwf	_Color_Value& (0+255),w,b
  1887   0023BC  11D9               	iorwf	(_Color_Value+1)& (0+255),w,b
  1888   0023BE  A4D8               	btfss	status,2,c
  1889   0023C0  EFE4  F011         	goto	u4911
  1890   0023C4  EFE6  F011         	goto	u4910
  1891   0023C8                     u4911:
  1892   0023C8  EF28  F012         	goto	l561
  1893   0023CC                     u4910:
  1894   0023CC                     
  1895                           ; BSR set to: 0
  1896                           ;pathfinder.c: 104:                 backward(c->backward_half, mL, mR);
  1897   0023CC  C0D4  F013         	movff	maze_search@mL,backward@mL
  1898   0023D0  C0D5  F014         	movff	maze_search@mR,backward@mR
  1899   0023D4  51D3               	movf	maze_search@c& (0+255),w,b
  1900   0023D6  6ED9               	movwf	fsr2l,c
  1901   0023D8  6ADA               	clrf	fsr2h,c
  1902   0023DA  0E08               	movlw	8
  1903   0023DC  26D9               	addwf	fsr2l,f,c
  1904   0023DE  50DF               	movf	indf2,w,c
  1905   0023E0  EC01  F01F         	call	_backward
  1906                           
  1907                           ;pathfinder.c: 105:                 rightTURN(c->right_90, mL, mR);
  1908   0023E4  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1909   0023E8  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1910   0023EC  0100               	movlb	0	; () banked
  1911   0023EE  51D3               	movf	maze_search@c& (0+255),w,b
  1912   0023F0  6ED9               	movwf	fsr2l,c
  1913   0023F2  6ADA               	clrf	fsr2h,c
  1914   0023F4  0E01               	movlw	1
  1915   0023F6  26D9               	addwf	fsr2l,f,c
  1916   0023F8  50DF               	movf	indf2,w,c
  1917   0023FA  EC83  F01D         	call	_rightTURN
  1918                           
  1919                           ;pathfinder.c: 106:                 rightTURN(c->right_90, mL, mR);
  1920   0023FE  C0D4  F013         	movff	maze_search@mL,rightTURN@mL
  1921   002402  C0D5  F014         	movff	maze_search@mR,rightTURN@mR
  1922   002406  0100               	movlb	0	; () banked
  1923   002408  51D3               	movf	maze_search@c& (0+255),w,b
  1924   00240A  6ED9               	movwf	fsr2l,c
  1925   00240C  6ADA               	clrf	fsr2h,c
  1926   00240E  0E01               	movlw	1
  1927   002410  26D9               	addwf	fsr2l,f,c
  1928   002412  50DF               	movf	indf2,w,c
  1929   002414  EC83  F01D         	call	_rightTURN
  1930                           
  1931                           ;pathfinder.c: 107:                 backward(c->backward_one, mL, mR);
  1932   002418  C0D4  F013         	movff	maze_search@mL,backward@mL
  1933   00241C  C0D5  F014         	movff	maze_search@mR,backward@mR
  1934   002420  0100               	movlb	0	; () banked
  1935   002422  51D3               	movf	maze_search@c& (0+255),w,b
  1936   002424  6ED9               	movwf	fsr2l,c
  1937   002426  6ADA               	clrf	fsr2h,c
  1938   002428  0E06               	movlw	6
  1939   00242A  26D9               	addwf	fsr2l,f,c
  1940   00242C  50DF               	movf	indf2,w,c
  1941   00242E  EC01  F01F         	call	_backward
  1942                           
  1943                           ;pathfinder.c: 108:                 forward(c->forward_half, mL, mR);
  1944   002432  C0D4  F013         	movff	maze_search@mL,forward@mL
  1945   002436  C0D5  F014         	movff	maze_search@mR,forward@mR
  1946   00243A  0100               	movlb	0	; () banked
  1947   00243C  51D3               	movf	maze_search@c& (0+255),w,b
  1948   00243E  6ED9               	movwf	fsr2l,c
  1949   002440  6ADA               	clrf	fsr2h,c
  1950   002442  0E07               	movlw	7
  1951   002444  26D9               	addwf	fsr2l,f,c
  1952   002446  50DF               	movf	indf2,w,c
  1953   002448  ECC3  F01C         	call	_forward
  1954                           
  1955                           ;pathfinder.c: 109:                 break;
  1956   00244C  EF2A  F012         	goto	l568
  1957   002450                     l561:
  1958                           
  1959                           ; BSR set to: 0
  1960   002450  EFB2  F00F         	goto	l4274
  1961   002454                     l568:
  1962   002454  0012               	return		;funcret
  1963   002456                     __end_of_maze_search:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _color_click_init *****************
  1967 ;; Defined at:
  1968 ;;		line 7 in file "color.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;Total ram usage:        1 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 3
  1989 ;; This function calls:
  1990 ;;		_I2C_2_Master_Init
  1991 ;;		_color_writetoaddr
  1992 ;; This function is called by:
  1993 ;;		_maze_search
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text3
  1998   004B56                     __ptext3:
  1999                           	callstack 0
  2000   004B56                     _color_click_init:
  2001                           	callstack 26
  2002   004B56                     
  2003                           ;color.c: 10:     I2C_2_Master_Init();
  2004   004B56  ECFD  F025         	call	_I2C_2_Master_Init	;wreg free
  2005   004B5A                     
  2006                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  2007   004B5A  0E01               	movlw	1
  2008   004B5C  6E03               	movwf	color_writetoaddr@value^0,c
  2009   004B5E  0E00               	movlw	0
  2010   004B60  EC39  F026         	call	_color_writetoaddr
  2011   004B64                     
  2012                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2013   004B64  0E3F               	movlw	63
  2014   004B66  6E05               	movwf	??_color_click_init^0,c
  2015   004B68  0E55               	movlw	85
  2016   004B6A                     u5187:
  2017   004B6A  2EE8               	decfsz	wreg,f,c
  2018   004B6C  D7FE               	bra	u5187
  2019   004B6E  2E05               	decfsz	??_color_click_init^0,f,c
  2020   004B70  D7FC               	bra	u5187
  2021   004B72  0000               	nop	
  2022   004B74                     
  2023                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  2024   004B74  0E03               	movlw	3
  2025   004B76  6E03               	movwf	color_writetoaddr@value^0,c
  2026   004B78  0E00               	movlw	0
  2027   004B7A  EC39  F026         	call	_color_writetoaddr
  2028   004B7E                     
  2029                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  2030   004B7E  0ED5               	movlw	213
  2031   004B80  6E03               	movwf	color_writetoaddr@value^0,c
  2032   004B82  0E01               	movlw	1
  2033   004B84  EC39  F026         	call	_color_writetoaddr
  2034   004B88                     
  2035                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  2036   004B88  9287               	bcf	135,1,c	;volatile
  2037   004B8A                     
  2038                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  2039   004B8A  9881               	bcf	129,4,c	;volatile
  2040   004B8C                     
  2041                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  2042   004B8C  9E86               	bcf	134,7,c	;volatile
  2043   004B8E                     
  2044                           ;color.c: 30:     LATGbits.LATG1 = 1;
  2045   004B8E  827F               	bsf	127,1,c	;volatile
  2046   004B90                     
  2047                           ;color.c: 31:     LATAbits.LATA4 = 1;
  2048   004B90  8879               	bsf	121,4,c	;volatile
  2049   004B92                     
  2050                           ;color.c: 32:     LATFbits.LATF7 = 1;
  2051   004B92  8E7E               	bsf	126,7,c	;volatile
  2052   004B94  0012               	return		;funcret
  2053   004B96                     __end_of_color_click_init:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function _color_writetoaddr *****************
  2057 ;; Defined at:
  2058 ;;		line 37 in file "color.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  address         1    wreg     unsigned char 
  2061 ;;  value           1    2[COMRAM] unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  address         1    3[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;Total ram usage:        2 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 2
  2080 ;; This function calls:
  2081 ;;		_I2C_2_Master_Start
  2082 ;;		_I2C_2_Master_Stop
  2083 ;;		_I2C_2_Master_Write
  2084 ;; This function is called by:
  2085 ;;		_color_click_init
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text4
  2090   004C72                     __ptext4:
  2091                           	callstack 0
  2092   004C72                     _color_writetoaddr:
  2093                           	callstack 26
  2094                           
  2095                           ;incstack = 0
  2096                           ;color_writetoaddr@address stored from wreg
  2097   004C72  6E04               	movwf	color_writetoaddr@address^0,c
  2098   004C74                     
  2099                           ;color.c: 38:     I2C_2_Master_Start();
  2100   004C74  EC54  F026         	call	_I2C_2_Master_Start	;wreg free
  2101                           
  2102                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2103   004C78  0E52               	movlw	82
  2104   004C7A  EC49  F026         	call	_I2C_2_Master_Write
  2105                           
  2106                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  2107   004C7E  5004               	movf	color_writetoaddr@address^0,w,c
  2108   004C80  0980               	iorlw	128
  2109   004C82  EC49  F026         	call	_I2C_2_Master_Write
  2110                           
  2111                           ;color.c: 41:     I2C_2_Master_Write(value);
  2112   004C86  5003               	movf	color_writetoaddr@value^0,w,c
  2113   004C88  EC49  F026         	call	_I2C_2_Master_Write
  2114                           
  2115                           ;color.c: 42:     I2C_2_Master_Stop();
  2116   004C8C  EC4F  F026         	call	_I2C_2_Master_Stop	;wreg free
  2117   004C90  0012               	return		;funcret
  2118   004C92                     __end_of_color_writetoaddr:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _I2C_2_Master_Init *****************
  2122 ;; Defined at:
  2123 ;;		line 4 in file "i2c.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_color_click_init
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text5
  2151   004BFA                     __ptext5:
  2152                           	callstack 0
  2153   004BFA                     _I2C_2_Master_Init:
  2154                           	callstack 28
  2155   004BFA                     
  2156                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2157   004BFA  010E               	movlb	14	; () banked
  2158   004BFC  51D9               	movf	217,w,b	;volatile
  2159   004BFE  0BF0               	andlw	-16
  2160   004C00  0908               	iorlw	8
  2161   004C02  6FD9               	movwf	217,b	;volatile
  2162   004C04                     
  2163                           ; BSR set to: 14
  2164                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2165   004C04  8BD9               	bsf	217,5,b	;volatile
  2166                           
  2167                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2168   004C06  0E9F               	movlw	159
  2169   004C08  6FD6               	movwf	214,b	;volatile
  2170   004C0A                     
  2171                           ; BSR set to: 14
  2172                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2173   004C0A  8A84               	bsf	132,5,c	;volatile
  2174   004C0C                     
  2175                           ; BSR set to: 14
  2176                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2177   004C0C  8C84               	bsf	132,6,c	;volatile
  2178   004C0E                     
  2179                           ; BSR set to: 14
  2180                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2181   004C0E  9BA7               	bcf	167,5,b	;volatile
  2182   004C10                     
  2183                           ; BSR set to: 14
  2184                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2185   004C10  9DA7               	bcf	167,6,b	;volatile
  2186                           
  2187                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2188   004C12  0E1D               	movlw	29
  2189   004C14  6F1D               	movwf	29,b	;volatile
  2190                           
  2191                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2192   004C16  0E1E               	movlw	30
  2193   004C18  6F1C               	movwf	28,b	;volatile
  2194                           
  2195                           ;i2c.c: 18:   RD5PPS=0x1C;
  2196   004C1A  0E1C               	movlw	28
  2197   004C1C  6F6F               	movwf	111,b	;volatile
  2198                           
  2199                           ;i2c.c: 19:   RD6PPS=0x1B;
  2200   004C1E  0E1B               	movlw	27
  2201   004C20  6F70               	movwf	112,b	;volatile
  2202   004C22                     
  2203                           ; BSR set to: 14
  2204   004C22  0012               	return		;funcret
  2205   004C24                     __end_of_I2C_2_Master_Init:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _color_cardCheck *****************
  2209 ;; Defined at:
  2210 ;;		line 166 in file "color.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  V               4  111[BANK0 ] float 
  2215 ;;  S               4  107[BANK0 ] float 
  2216 ;;  H               4  103[BANK0 ] float 
  2217 ;;  c               4   97[BANK0 ] float 
  2218 ;;  b               4   93[BANK0 ] float 
  2219 ;;  g               4   89[BANK0 ] float 
  2220 ;;  r               4   85[BANK0 ] float 
  2221 ;;  card_color      2  101[BANK0 ] unsigned int 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2   91[COMRAM] unsigned int 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;Total ram usage:       32 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 4
  2238 ;; This function calls:
  2239 ;;		_RGB_to_HSV
  2240 ;;		___flge
  2241 ;;		___xxtofl
  2242 ;;		_color_read_Blue
  2243 ;;		_color_read_Clear
  2244 ;;		_color_read_Green
  2245 ;;		_color_read_Red
  2246 ;; This function is called by:
  2247 ;;		_maze_search
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text6
  2252   000E02                     __ptext6:
  2253                           	callstack 0
  2254   000E02                     _color_cardCheck:
  2255                           	callstack 25
  2256   000E02                     
  2257                           ;color.c: 169:     float r = color_read_Red();
  2258   000E02  ECC7  F024         	call	_color_read_Red	;wreg free
  2259   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2260   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2261   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2262   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2263   000E12  0E00               	movlw	0
  2264   000E14  ECE9  F01B         	call	___xxtofl
  2265   000E18  C00C  F0B5         	movff	?___xxtofl,color_cardCheck@r
  2266   000E1C  C00D  F0B6         	movff	?___xxtofl+1,color_cardCheck@r+1
  2267   000E20  C00E  F0B7         	movff	?___xxtofl+2,color_cardCheck@r+2
  2268   000E24  C00F  F0B8         	movff	?___xxtofl+3,color_cardCheck@r+3
  2269                           
  2270                           ;color.c: 170:     float g = color_read_Green();
  2271   000E28  ECEF  F024         	call	_color_read_Green	;wreg free
  2272   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2273   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2274   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2275   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2276   000E38  0E00               	movlw	0
  2277   000E3A  ECE9  F01B         	call	___xxtofl
  2278   000E3E  C00C  F0B9         	movff	?___xxtofl,color_cardCheck@g
  2279   000E42  C00D  F0BA         	movff	?___xxtofl+1,color_cardCheck@g+1
  2280   000E46  C00E  F0BB         	movff	?___xxtofl+2,color_cardCheck@g+2
  2281   000E4A  C00F  F0BC         	movff	?___xxtofl+3,color_cardCheck@g+3
  2282                           
  2283                           ;color.c: 171:     float b = color_read_Blue();
  2284   000E4E  EC3F  F025         	call	_color_read_Blue	;wreg free
  2285   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2286   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2287   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2288   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2289   000E5E  0E00               	movlw	0
  2290   000E60  ECE9  F01B         	call	___xxtofl
  2291   000E64  C00C  F0BD         	movff	?___xxtofl,color_cardCheck@b
  2292   000E68  C00D  F0BE         	movff	?___xxtofl+1,color_cardCheck@b+1
  2293   000E6C  C00E  F0BF         	movff	?___xxtofl+2,color_cardCheck@b+2
  2294   000E70  C00F  F0C0         	movff	?___xxtofl+3,color_cardCheck@b+3
  2295                           
  2296                           ;color.c: 174:     float c = color_read_Clear();
  2297   000E74  EC17  F025         	call	_color_read_Clear	;wreg free
  2298   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2299   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2300   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2301   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2302   000E84  0E00               	movlw	0
  2303   000E86  ECE9  F01B         	call	___xxtofl
  2304   000E8A  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@c
  2305   000E8E  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@c+1
  2306   000E92  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@c+2
  2307   000E96  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@c+3
  2308   000E9A                     
  2309                           ;color.c: 177:     float H;;color.c: 178:     float S;;color.c: 179:     float V;;color.
      +                          c: 181:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  2310   000E9A  C0B5  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  2311   000E9E  C0B6  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  2312   000EA2  C0B7  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  2313   000EA6  C0B8  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  2314   000EAA  C0B9  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  2315   000EAE  C0BA  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  2316   000EB2  C0BB  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  2317   000EB6  C0BC  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  2318   000EBA  C0BD  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  2319   000EBE  C0BE  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  2320   000EC2  C0BF  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  2321   000EC6  C0C0  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  2322   000ECA  C0C1  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  2323   000ECE  C0C2  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  2324   000ED2  C0C3  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  2325   000ED6  C0C4  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  2326   000EDA  0EC7               	movlw	low color_cardCheck@H
  2327   000EDC  0100               	movlb	0	; () banked
  2328   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  2329   000EE0  0ECB               	movlw	low color_cardCheck@S
  2330   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  2331   000EE4  0ECF               	movlw	low color_cardCheck@V
  2332   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  2333   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  2334   000EEC                     
  2335                           ;color.c: 186:     unsigned int card_color = 0;
  2336   000EEC  0E00               	movlw	0
  2337   000EEE  0100               	movlb	0	; () banked
  2338   000EF0  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2339   000EF2  0E00               	movlw	0
  2340   000EF4  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2341   000EF6                     
  2342                           ; BSR set to: 0
  2343                           ;color.c: 189:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  2344   000EF6  0E00               	movlw	0
  2345   000EF8  6E01               	movwf	___flge@ff1^0,c
  2346   000EFA  0E80               	movlw	128
  2347   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  2348   000EFE  0EB1               	movlw	177
  2349   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  2350   000F02  0E43               	movlw	67
  2351   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  2352   000F06  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2353   000F0A  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2354   000F0E  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2355   000F12  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2356   000F16  EC1F  F022         	call	___flge	;wreg free
  2357   000F1A  B0D8               	btfsc	status,0,c
  2358   000F1C  EF92  F007         	goto	u3941
  2359   000F20  EF94  F007         	goto	u3940
  2360   000F24                     u3941:
  2361   000F24  EF18  F008         	goto	l3830
  2362   000F28                     u3940:
  2363   000F28  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2364   000F2C  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2365   000F30  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2366   000F34  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2367   000F38  0E00               	movlw	0
  2368   000F3A  6E05               	movwf	___flge@ff2^0,c
  2369   000F3C  0E00               	movlw	0
  2370   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  2371   000F40  0EB4               	movlw	180
  2372   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  2373   000F44  0E43               	movlw	67
  2374   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  2375   000F48  EC1F  F022         	call	___flge	;wreg free
  2376   000F4C  B0D8               	btfsc	status,0,c
  2377   000F4E  EFAB  F007         	goto	u3951
  2378   000F52  EFAD  F007         	goto	u3950
  2379   000F56                     u3951:
  2380   000F56  EF18  F008         	goto	l3830
  2381   000F5A                     u3950:
  2382   000F5A  0E00               	movlw	0
  2383   000F5C  6E01               	movwf	___flge@ff1^0,c
  2384   000F5E  0E00               	movlw	0
  2385   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  2386   000F62  0EAA               	movlw	170
  2387   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  2388   000F66  0E42               	movlw	66
  2389   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  2390   000F6A  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2391   000F6E  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2392   000F72  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2393   000F76  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2394   000F7A  EC1F  F022         	call	___flge	;wreg free
  2395   000F7E  B0D8               	btfsc	status,0,c
  2396   000F80  EFC4  F007         	goto	u3961
  2397   000F84  EFC6  F007         	goto	u3960
  2398   000F88                     u3961:
  2399   000F88  EF18  F008         	goto	l3830
  2400   000F8C                     u3960:
  2401   000F8C  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2402   000F90  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2403   000F94  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2404   000F98  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2405   000F9C  0E00               	movlw	0
  2406   000F9E  6E05               	movwf	___flge@ff2^0,c
  2407   000FA0  0E00               	movlw	0
  2408   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  2409   000FA4  0EB4               	movlw	180
  2410   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  2411   000FA8  0E42               	movlw	66
  2412   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  2413   000FAC  EC1F  F022         	call	___flge	;wreg free
  2414   000FB0  B0D8               	btfsc	status,0,c
  2415   000FB2  EFDD  F007         	goto	u3971
  2416   000FB6  EFDF  F007         	goto	u3970
  2417   000FBA                     u3971:
  2418   000FBA  EF18  F008         	goto	l3830
  2419   000FBE                     u3970:
  2420   000FBE  0E00               	movlw	0
  2421   000FC0  6E01               	movwf	___flge@ff1^0,c
  2422   000FC2  0E00               	movlw	0
  2423   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  2424   000FC6  0EA0               	movlw	160
  2425   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  2426   000FCA  0E42               	movlw	66
  2427   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  2428   000FCE  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2429   000FD2  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2430   000FD6  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2431   000FDA  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2432   000FDE  EC1F  F022         	call	___flge	;wreg free
  2433   000FE2  B0D8               	btfsc	status,0,c
  2434   000FE4  EFF6  F007         	goto	u3981
  2435   000FE8  EFF8  F007         	goto	u3980
  2436   000FEC                     u3981:
  2437   000FEC  EF18  F008         	goto	l3830
  2438   000FF0                     u3980:
  2439   000FF0  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2440   000FF4  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2441   000FF8  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2442   000FFC  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2443   001000  0E00               	movlw	0
  2444   001002  6E05               	movwf	___flge@ff2^0,c
  2445   001004  0E00               	movlw	0
  2446   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  2447   001008  0EAA               	movlw	170
  2448   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  2449   00100C  0E42               	movlw	66
  2450   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  2451   001010  EC1F  F022         	call	___flge	;wreg free
  2452   001014  B0D8               	btfsc	status,0,c
  2453   001016  EF0F  F008         	goto	u3991
  2454   00101A  EF11  F008         	goto	u3990
  2455   00101E                     u3991:
  2456   00101E  EF18  F008         	goto	l3830
  2457   001022                     u3990:
  2458   001022  0E00               	movlw	0
  2459   001024  0100               	movlb	0	; () banked
  2460   001026  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2461   001028  0E01               	movlw	1
  2462   00102A  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2463   00102C  EF18  F00C         	goto	l3922
  2464   001030                     l3830:
  2465   001030  0E00               	movlw	0
  2466   001032  6E01               	movwf	___flge@ff1^0,c
  2467   001034  0E00               	movlw	0
  2468   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  2469   001038  0E86               	movlw	134
  2470   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  2471   00103C  0E42               	movlw	66
  2472   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  2473   001040  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2474   001044  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2475   001048  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2476   00104C  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2477   001050  EC1F  F022         	call	___flge	;wreg free
  2478   001054  B0D8               	btfsc	status,0,c
  2479   001056  EF2F  F008         	goto	u4001
  2480   00105A  EF31  F008         	goto	u4000
  2481   00105E                     u4001:
  2482   00105E  EFB5  F008         	goto	l3844
  2483   001062                     u4000:
  2484   001062  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2485   001066  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2486   00106A  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2487   00106E  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2488   001072  0E00               	movlw	0
  2489   001074  6E05               	movwf	___flge@ff2^0,c
  2490   001076  0E00               	movlw	0
  2491   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  2492   00107A  0E9E               	movlw	158
  2493   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  2494   00107E  0E42               	movlw	66
  2495   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  2496   001082  EC1F  F022         	call	___flge	;wreg free
  2497   001086  B0D8               	btfsc	status,0,c
  2498   001088  EF48  F008         	goto	u4011
  2499   00108C  EF4A  F008         	goto	u4010
  2500   001090                     u4011:
  2501   001090  EFB5  F008         	goto	l3844
  2502   001094                     u4010:
  2503   001094  0E00               	movlw	0
  2504   001096  6E01               	movwf	___flge@ff1^0,c
  2505   001098  0E00               	movlw	0
  2506   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  2507   00109C  0E48               	movlw	72
  2508   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  2509   0010A0  0E42               	movlw	66
  2510   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  2511   0010A4  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2512   0010A8  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2513   0010AC  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2514   0010B0  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2515   0010B4  EC1F  F022         	call	___flge	;wreg free
  2516   0010B8  B0D8               	btfsc	status,0,c
  2517   0010BA  EF61  F008         	goto	u4021
  2518   0010BE  EF63  F008         	goto	u4020
  2519   0010C2                     u4021:
  2520   0010C2  EFB5  F008         	goto	l3844
  2521   0010C6                     u4020:
  2522   0010C6  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2523   0010CA  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2524   0010CE  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2525   0010D2  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2526   0010D6  0E00               	movlw	0
  2527   0010D8  6E05               	movwf	___flge@ff2^0,c
  2528   0010DA  0E00               	movlw	0
  2529   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  2530   0010DE  0E64               	movlw	100
  2531   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  2532   0010E2  0E42               	movlw	66
  2533   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  2534   0010E6  EC1F  F022         	call	___flge	;wreg free
  2535   0010EA  B0D8               	btfsc	status,0,c
  2536   0010EC  EF7A  F008         	goto	u4031
  2537   0010F0  EF7C  F008         	goto	u4030
  2538   0010F4                     u4031:
  2539   0010F4  EFB5  F008         	goto	l3844
  2540   0010F8                     u4030:
  2541   0010F8  0E00               	movlw	0
  2542   0010FA  6E01               	movwf	___flge@ff1^0,c
  2543   0010FC  0E00               	movlw	0
  2544   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  2545   001100  0E20               	movlw	32
  2546   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  2547   001104  0E42               	movlw	66
  2548   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  2549   001108  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2550   00110C  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2551   001110  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2552   001114  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2553   001118  EC1F  F022         	call	___flge	;wreg free
  2554   00111C  B0D8               	btfsc	status,0,c
  2555   00111E  EF93  F008         	goto	u4041
  2556   001122  EF95  F008         	goto	u4040
  2557   001126                     u4041:
  2558   001126  EFB5  F008         	goto	l3844
  2559   00112A                     u4040:
  2560   00112A  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2561   00112E  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2562   001132  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2563   001136  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2564   00113A  0E00               	movlw	0
  2565   00113C  6E05               	movwf	___flge@ff2^0,c
  2566   00113E  0E00               	movlw	0
  2567   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  2568   001142  0E38               	movlw	56
  2569   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  2570   001146  0E42               	movlw	66
  2571   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  2572   00114A  EC1F  F022         	call	___flge	;wreg free
  2573   00114E  B0D8               	btfsc	status,0,c
  2574   001150  EFAC  F008         	goto	u4051
  2575   001154  EFAE  F008         	goto	u4050
  2576   001158                     u4051:
  2577   001158  EFB5  F008         	goto	l3844
  2578   00115C                     u4050:
  2579   00115C  0E00               	movlw	0
  2580   00115E  0100               	movlb	0	; () banked
  2581   001160  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2582   001162  0E02               	movlw	2
  2583   001164  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2584   001166  EF18  F00C         	goto	l3922
  2585   00116A                     l3844:
  2586   00116A  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2587   00116E  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2588   001172  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2589   001176  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2590   00117A  0E00               	movlw	0
  2591   00117C  6E05               	movwf	___flge@ff2^0,c
  2592   00117E  0E00               	movlw	0
  2593   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  2594   001182  0E20               	movlw	32
  2595   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  2596   001186  0E41               	movlw	65
  2597   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  2598   00118A  EC1F  F022         	call	___flge	;wreg free
  2599   00118E  B0D8               	btfsc	status,0,c
  2600   001190  EFCC  F008         	goto	u4061
  2601   001194  EFCE  F008         	goto	u4060
  2602   001198                     u4061:
  2603   001198  EF07  F009         	goto	l3852
  2604   00119C                     u4060:
  2605   00119C  0E00               	movlw	0
  2606   00119E  6E01               	movwf	___flge@ff1^0,c
  2607   0011A0  0E00               	movlw	0
  2608   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  2609   0011A4  0EF0               	movlw	240
  2610   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  2611   0011A8  0E41               	movlw	65
  2612   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  2613   0011AC  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2614   0011B0  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2615   0011B4  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2616   0011B8  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2617   0011BC  EC1F  F022         	call	___flge	;wreg free
  2618   0011C0  B0D8               	btfsc	status,0,c
  2619   0011C2  EFE5  F008         	goto	u4071
  2620   0011C6  EFE7  F008         	goto	u4070
  2621   0011CA                     u4071:
  2622   0011CA  EF07  F009         	goto	l3852
  2623   0011CE                     u4070:
  2624   0011CE  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2625   0011D2  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2626   0011D6  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2627   0011DA  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2628   0011DE  0E00               	movlw	0
  2629   0011E0  6E05               	movwf	___flge@ff2^0,c
  2630   0011E2  0E00               	movlw	0
  2631   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  2632   0011E6  0E20               	movlw	32
  2633   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  2634   0011EA  0E42               	movlw	66
  2635   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  2636   0011EE  EC1F  F022         	call	___flge	;wreg free
  2637   0011F2  B0D8               	btfsc	status,0,c
  2638   0011F4  EFFE  F008         	goto	u4081
  2639   0011F8  EF00  F009         	goto	u4080
  2640   0011FC                     u4081:
  2641   0011FC  EF07  F009         	goto	l3852
  2642   001200                     u4080:
  2643   001200  0E00               	movlw	0
  2644   001202  0100               	movlb	0	; () banked
  2645   001204  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2646   001206  0E03               	movlw	3
  2647   001208  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2648   00120A  EF18  F00C         	goto	l3922
  2649   00120E                     l3852:
  2650   00120E  0E00               	movlw	0
  2651   001210  6E01               	movwf	___flge@ff1^0,c
  2652   001212  0E00               	movlw	0
  2653   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  2654   001216  0EA0               	movlw	160
  2655   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  2656   00121A  0E41               	movlw	65
  2657   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  2658   00121E  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2659   001222  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2660   001226  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2661   00122A  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2662   00122E  EC1F  F022         	call	___flge	;wreg free
  2663   001232  B0D8               	btfsc	status,0,c
  2664   001234  EF1E  F009         	goto	u4091
  2665   001238  EF20  F009         	goto	u4090
  2666   00123C                     u4091:
  2667   00123C  EFA4  F009         	goto	l3866
  2668   001240                     u4090:
  2669   001240  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2670   001244  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2671   001248  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2672   00124C  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2673   001250  0E00               	movlw	0
  2674   001252  6E05               	movwf	___flge@ff2^0,c
  2675   001254  0E00               	movlw	0
  2676   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  2677   001258  0EC8               	movlw	200
  2678   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  2679   00125C  0E41               	movlw	65
  2680   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  2681   001260  EC1F  F022         	call	___flge	;wreg free
  2682   001264  B0D8               	btfsc	status,0,c
  2683   001266  EF37  F009         	goto	u4101
  2684   00126A  EF39  F009         	goto	u4100
  2685   00126E                     u4101:
  2686   00126E  EFA4  F009         	goto	l3866
  2687   001272                     u4100:
  2688   001272  0E00               	movlw	0
  2689   001274  6E01               	movwf	___flge@ff1^0,c
  2690   001276  0E00               	movlw	0
  2691   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  2692   00127A  0E82               	movlw	130
  2693   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  2694   00127E  0E42               	movlw	66
  2695   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  2696   001282  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2697   001286  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2698   00128A  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2699   00128E  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2700   001292  EC1F  F022         	call	___flge	;wreg free
  2701   001296  B0D8               	btfsc	status,0,c
  2702   001298  EF50  F009         	goto	u4111
  2703   00129C  EF52  F009         	goto	u4110
  2704   0012A0                     u4111:
  2705   0012A0  EFA4  F009         	goto	l3866
  2706   0012A4                     u4110:
  2707   0012A4  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2708   0012A8  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2709   0012AC  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2710   0012B0  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2711   0012B4  0E00               	movlw	0
  2712   0012B6  6E05               	movwf	___flge@ff2^0,c
  2713   0012B8  0E00               	movlw	0
  2714   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2715   0012BC  0E8C               	movlw	140
  2716   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2717   0012C0  0E42               	movlw	66
  2718   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2719   0012C4  EC1F  F022         	call	___flge	;wreg free
  2720   0012C8  B0D8               	btfsc	status,0,c
  2721   0012CA  EF69  F009         	goto	u4121
  2722   0012CE  EF6B  F009         	goto	u4120
  2723   0012D2                     u4121:
  2724   0012D2  EFA4  F009         	goto	l3866
  2725   0012D6                     u4120:
  2726   0012D6  0E00               	movlw	0
  2727   0012D8  6E01               	movwf	___flge@ff1^0,c
  2728   0012DA  0E00               	movlw	0
  2729   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  2730   0012DE  0E58               	movlw	88
  2731   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  2732   0012E2  0E42               	movlw	66
  2733   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  2734   0012E6  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2735   0012EA  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2736   0012EE  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2737   0012F2  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2738   0012F6  EC1F  F022         	call	___flge	;wreg free
  2739   0012FA  B0D8               	btfsc	status,0,c
  2740   0012FC  EF82  F009         	goto	u4131
  2741   001300  EF84  F009         	goto	u4130
  2742   001304                     u4131:
  2743   001304  EFA4  F009         	goto	l3866
  2744   001308                     u4130:
  2745   001308  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2746   00130C  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2747   001310  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2748   001314  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2749   001318  0E00               	movlw	0
  2750   00131A  6E05               	movwf	___flge@ff2^0,c
  2751   00131C  0E00               	movlw	0
  2752   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  2753   001320  0E64               	movlw	100
  2754   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  2755   001324  0E42               	movlw	66
  2756   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  2757   001328  EC1F  F022         	call	___flge	;wreg free
  2758   00132C  B0D8               	btfsc	status,0,c
  2759   00132E  EF9B  F009         	goto	u4141
  2760   001332  EF9D  F009         	goto	u4140
  2761   001336                     u4141:
  2762   001336  EFA4  F009         	goto	l3866
  2763   00133A                     u4140:
  2764   00133A  0E00               	movlw	0
  2765   00133C  0100               	movlb	0	; () banked
  2766   00133E  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2767   001340  0E04               	movlw	4
  2768   001342  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2769   001344  EF18  F00C         	goto	l3922
  2770   001348                     l3866:
  2771   001348  0E00               	movlw	0
  2772   00134A  6E01               	movwf	___flge@ff1^0,c
  2773   00134C  0E00               	movlw	0
  2774   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  2775   001350  0E50               	movlw	80
  2776   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  2777   001354  0E41               	movlw	65
  2778   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  2779   001358  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2780   00135C  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2781   001360  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2782   001364  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2783   001368  EC1F  F022         	call	___flge	;wreg free
  2784   00136C  B0D8               	btfsc	status,0,c
  2785   00136E  EFBB  F009         	goto	u4151
  2786   001372  EFBD  F009         	goto	u4150
  2787   001376                     u4151:
  2788   001376  EF41  F00A         	goto	l3880
  2789   00137A                     u4150:
  2790   00137A  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2791   00137E  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2792   001382  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2793   001386  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2794   00138A  0E00               	movlw	0
  2795   00138C  6E05               	movwf	___flge@ff2^0,c
  2796   00138E  0E00               	movlw	0
  2797   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  2798   001392  0E90               	movlw	144
  2799   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  2800   001396  0E41               	movlw	65
  2801   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  2802   00139A  EC1F  F022         	call	___flge	;wreg free
  2803   00139E  B0D8               	btfsc	status,0,c
  2804   0013A0  EFD4  F009         	goto	u4161
  2805   0013A4  EFD6  F009         	goto	u4160
  2806   0013A8                     u4161:
  2807   0013A8  EF41  F00A         	goto	l3880
  2808   0013AC                     u4160:
  2809   0013AC  0E00               	movlw	0
  2810   0013AE  6E01               	movwf	___flge@ff1^0,c
  2811   0013B0  0E00               	movlw	0
  2812   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  2813   0013B4  0E5C               	movlw	92
  2814   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  2815   0013B8  0E42               	movlw	66
  2816   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  2817   0013BC  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2818   0013C0  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2819   0013C4  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2820   0013C8  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2821   0013CC  EC1F  F022         	call	___flge	;wreg free
  2822   0013D0  B0D8               	btfsc	status,0,c
  2823   0013D2  EFED  F009         	goto	u4171
  2824   0013D6  EFEF  F009         	goto	u4170
  2825   0013DA                     u4171:
  2826   0013DA  EF41  F00A         	goto	l3880
  2827   0013DE                     u4170:
  2828   0013DE  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2829   0013E2  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2830   0013E6  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2831   0013EA  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2832   0013EE  0E00               	movlw	0
  2833   0013F0  6E05               	movwf	___flge@ff2^0,c
  2834   0013F2  0E00               	movlw	0
  2835   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  2836   0013F6  0E70               	movlw	112
  2837   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  2838   0013FA  0E42               	movlw	66
  2839   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  2840   0013FE  EC1F  F022         	call	___flge	;wreg free
  2841   001402  B0D8               	btfsc	status,0,c
  2842   001404  EF06  F00A         	goto	u4181
  2843   001408  EF08  F00A         	goto	u4180
  2844   00140C                     u4181:
  2845   00140C  EF41  F00A         	goto	l3880
  2846   001410                     u4180:
  2847   001410  0E00               	movlw	0
  2848   001412  6E01               	movwf	___flge@ff1^0,c
  2849   001414  0E00               	movlw	0
  2850   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  2851   001418  0E48               	movlw	72
  2852   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  2853   00141C  0E42               	movlw	66
  2854   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  2855   001420  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2856   001424  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2857   001428  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2858   00142C  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2859   001430  EC1F  F022         	call	___flge	;wreg free
  2860   001434  B0D8               	btfsc	status,0,c
  2861   001436  EF1F  F00A         	goto	u4191
  2862   00143A  EF21  F00A         	goto	u4190
  2863   00143E                     u4191:
  2864   00143E  EF41  F00A         	goto	l3880
  2865   001442                     u4190:
  2866   001442  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2867   001446  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2868   00144A  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2869   00144E  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2870   001452  0E00               	movlw	0
  2871   001454  6E05               	movwf	___flge@ff2^0,c
  2872   001456  0E00               	movlw	0
  2873   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  2874   00145A  0E58               	movlw	88
  2875   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  2876   00145E  0E42               	movlw	66
  2877   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  2878   001462  EC1F  F022         	call	___flge	;wreg free
  2879   001466  B0D8               	btfsc	status,0,c
  2880   001468  EF38  F00A         	goto	u4201
  2881   00146C  EF3A  F00A         	goto	u4200
  2882   001470                     u4201:
  2883   001470  EF41  F00A         	goto	l3880
  2884   001474                     u4200:
  2885   001474  0E00               	movlw	0
  2886   001476  0100               	movlb	0	; () banked
  2887   001478  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2888   00147A  0E05               	movlw	5
  2889   00147C  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  2890   00147E  EF18  F00C         	goto	l3922
  2891   001482                     l3880:
  2892   001482  0E00               	movlw	0
  2893   001484  6E01               	movwf	___flge@ff1^0,c
  2894   001486  0E00               	movlw	0
  2895   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  2896   00148A  0EA0               	movlw	160
  2897   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  2898   00148E  0E40               	movlw	64
  2899   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  2900   001492  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  2901   001496  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2902   00149A  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2903   00149E  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2904   0014A2  EC1F  F022         	call	___flge	;wreg free
  2905   0014A6  B0D8               	btfsc	status,0,c
  2906   0014A8  EF58  F00A         	goto	u4211
  2907   0014AC  EF5A  F00A         	goto	u4210
  2908   0014B0                     u4211:
  2909   0014B0  EFDE  F00A         	goto	l3894
  2910   0014B4                     u4210:
  2911   0014B4  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  2912   0014B8  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2913   0014BC  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2914   0014C0  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2915   0014C4  0E00               	movlw	0
  2916   0014C6  6E05               	movwf	___flge@ff2^0,c
  2917   0014C8  0E00               	movlw	0
  2918   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  2919   0014CC  0E20               	movlw	32
  2920   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  2921   0014D0  0E41               	movlw	65
  2922   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  2923   0014D4  EC1F  F022         	call	___flge	;wreg free
  2924   0014D8  B0D8               	btfsc	status,0,c
  2925   0014DA  EF71  F00A         	goto	u4221
  2926   0014DE  EF73  F00A         	goto	u4220
  2927   0014E2                     u4221:
  2928   0014E2  EFDE  F00A         	goto	l3894
  2929   0014E6                     u4220:
  2930   0014E6  0E00               	movlw	0
  2931   0014E8  6E01               	movwf	___flge@ff1^0,c
  2932   0014EA  0E00               	movlw	0
  2933   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  2934   0014EE  0E8C               	movlw	140
  2935   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  2936   0014F2  0E42               	movlw	66
  2937   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  2938   0014F6  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  2939   0014FA  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2940   0014FE  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2941   001502  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2942   001506  EC1F  F022         	call	___flge	;wreg free
  2943   00150A  B0D8               	btfsc	status,0,c
  2944   00150C  EF8A  F00A         	goto	u4231
  2945   001510  EF8C  F00A         	goto	u4230
  2946   001514                     u4231:
  2947   001514  EFDE  F00A         	goto	l3894
  2948   001518                     u4230:
  2949   001518  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  2950   00151C  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2951   001520  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2952   001524  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2953   001528  0E00               	movlw	0
  2954   00152A  6E05               	movwf	___flge@ff2^0,c
  2955   00152C  0E00               	movlw	0
  2956   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  2957   001530  0E96               	movlw	150
  2958   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  2959   001534  0E42               	movlw	66
  2960   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  2961   001538  EC1F  F022         	call	___flge	;wreg free
  2962   00153C  B0D8               	btfsc	status,0,c
  2963   00153E  EFA3  F00A         	goto	u4241
  2964   001542  EFA5  F00A         	goto	u4240
  2965   001546                     u4241:
  2966   001546  EFDE  F00A         	goto	l3894
  2967   00154A                     u4240:
  2968   00154A  0E00               	movlw	0
  2969   00154C  6E01               	movwf	___flge@ff1^0,c
  2970   00154E  0E00               	movlw	0
  2971   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  2972   001552  0E78               	movlw	120
  2973   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  2974   001556  0E42               	movlw	66
  2975   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  2976   00155A  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  2977   00155E  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2978   001562  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2979   001566  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2980   00156A  EC1F  F022         	call	___flge	;wreg free
  2981   00156E  B0D8               	btfsc	status,0,c
  2982   001570  EFBC  F00A         	goto	u4251
  2983   001574  EFBE  F00A         	goto	u4250
  2984   001578                     u4251:
  2985   001578  EFDE  F00A         	goto	l3894
  2986   00157C                     u4250:
  2987   00157C  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  2988   001580  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2989   001584  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2990   001588  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2991   00158C  0E00               	movlw	0
  2992   00158E  6E05               	movwf	___flge@ff2^0,c
  2993   001590  0E00               	movlw	0
  2994   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  2995   001594  0E86               	movlw	134
  2996   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  2997   001598  0E42               	movlw	66
  2998   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  2999   00159C  EC1F  F022         	call	___flge	;wreg free
  3000   0015A0  B0D8               	btfsc	status,0,c
  3001   0015A2  EFD5  F00A         	goto	u4261
  3002   0015A6  EFD7  F00A         	goto	u4260
  3003   0015AA                     u4261:
  3004   0015AA  EFDE  F00A         	goto	l3894
  3005   0015AE                     u4260:
  3006   0015AE  0E00               	movlw	0
  3007   0015B0  0100               	movlb	0	; () banked
  3008   0015B2  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3009   0015B4  0E06               	movlw	6
  3010   0015B6  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3011   0015B8  EF18  F00C         	goto	l3922
  3012   0015BC                     l3894:
  3013   0015BC  0E00               	movlw	0
  3014   0015BE  6E01               	movwf	___flge@ff1^0,c
  3015   0015C0  0E00               	movlw	0
  3016   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  3017   0015C4  0E94               	movlw	148
  3018   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  3019   0015C8  0E42               	movlw	66
  3020   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  3021   0015CC  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  3022   0015D0  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3023   0015D4  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3024   0015D8  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3025   0015DC  EC1F  F022         	call	___flge	;wreg free
  3026   0015E0  B0D8               	btfsc	status,0,c
  3027   0015E2  EFF5  F00A         	goto	u4271
  3028   0015E6  EFF7  F00A         	goto	u4270
  3029   0015EA                     u4271:
  3030   0015EA  EF7B  F00B         	goto	l3908
  3031   0015EE                     u4270:
  3032   0015EE  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  3033   0015F2  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3034   0015F6  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3035   0015FA  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3036   0015FE  0E00               	movlw	0
  3037   001600  6E05               	movwf	___flge@ff2^0,c
  3038   001602  0E00               	movlw	0
  3039   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  3040   001606  0EAA               	movlw	170
  3041   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  3042   00160A  0E42               	movlw	66
  3043   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  3044   00160E  EC1F  F022         	call	___flge	;wreg free
  3045   001612  B0D8               	btfsc	status,0,c
  3046   001614  EF0E  F00B         	goto	u4281
  3047   001618  EF10  F00B         	goto	u4280
  3048   00161C                     u4281:
  3049   00161C  EF7B  F00B         	goto	l3908
  3050   001620                     u4280:
  3051   001620  0E00               	movlw	0
  3052   001622  6E01               	movwf	___flge@ff1^0,c
  3053   001624  0E00               	movlw	0
  3054   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  3055   001628  0EE0               	movlw	224
  3056   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  3057   00162C  0E41               	movlw	65
  3058   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  3059   001630  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  3060   001634  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3061   001638  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3062   00163C  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3063   001640  EC1F  F022         	call	___flge	;wreg free
  3064   001644  B0D8               	btfsc	status,0,c
  3065   001646  EF27  F00B         	goto	u4291
  3066   00164A  EF29  F00B         	goto	u4290
  3067   00164E                     u4291:
  3068   00164E  EF7B  F00B         	goto	l3908
  3069   001652                     u4290:
  3070   001652  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  3071   001656  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3072   00165A  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3073   00165E  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3074   001662  0E00               	movlw	0
  3075   001664  6E05               	movwf	___flge@ff2^0,c
  3076   001666  0E00               	movlw	0
  3077   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  3078   00166A  0E04               	movlw	4
  3079   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  3080   00166E  0E42               	movlw	66
  3081   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  3082   001672  EC1F  F022         	call	___flge	;wreg free
  3083   001676  B0D8               	btfsc	status,0,c
  3084   001678  EF40  F00B         	goto	u4301
  3085   00167C  EF42  F00B         	goto	u4300
  3086   001680                     u4301:
  3087   001680  EF7B  F00B         	goto	l3908
  3088   001684                     u4300:
  3089   001684  0E00               	movlw	0
  3090   001686  6E01               	movwf	___flge@ff1^0,c
  3091   001688  0E00               	movlw	0
  3092   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  3093   00168C  0E14               	movlw	20
  3094   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  3095   001690  0E42               	movlw	66
  3096   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  3097   001694  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  3098   001698  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3099   00169C  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3100   0016A0  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3101   0016A4  EC1F  F022         	call	___flge	;wreg free
  3102   0016A8  B0D8               	btfsc	status,0,c
  3103   0016AA  EF59  F00B         	goto	u4311
  3104   0016AE  EF5B  F00B         	goto	u4310
  3105   0016B2                     u4311:
  3106   0016B2  EF7B  F00B         	goto	l3908
  3107   0016B6                     u4310:
  3108   0016B6  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  3109   0016BA  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3110   0016BE  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3111   0016C2  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3112   0016C6  0E00               	movlw	0
  3113   0016C8  6E05               	movwf	___flge@ff2^0,c
  3114   0016CA  0E00               	movlw	0
  3115   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  3116   0016CE  0E28               	movlw	40
  3117   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  3118   0016D2  0E42               	movlw	66
  3119   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  3120   0016D6  EC1F  F022         	call	___flge	;wreg free
  3121   0016DA  B0D8               	btfsc	status,0,c
  3122   0016DC  EF72  F00B         	goto	u4321
  3123   0016E0  EF74  F00B         	goto	u4320
  3124   0016E4                     u4321:
  3125   0016E4  EF7B  F00B         	goto	l3908
  3126   0016E8                     u4320:
  3127   0016E8  0E00               	movlw	0
  3128   0016EA  0100               	movlb	0	; () banked
  3129   0016EC  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3130   0016EE  0E07               	movlw	7
  3131   0016F0  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3132   0016F2  EF18  F00C         	goto	l3922
  3133   0016F6                     l3908:
  3134   0016F6  0E00               	movlw	0
  3135   0016F8  6E01               	movwf	___flge@ff1^0,c
  3136   0016FA  0E00               	movlw	0
  3137   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  3138   0016FE  0EB0               	movlw	176
  3139   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  3140   001702  0E41               	movlw	65
  3141   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  3142   001706  C0C7  F005         	movff	color_cardCheck@H,___flge@ff2
  3143   00170A  C0C8  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3144   00170E  C0C9  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3145   001712  C0CA  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3146   001716  EC1F  F022         	call	___flge	;wreg free
  3147   00171A  B0D8               	btfsc	status,0,c
  3148   00171C  EF92  F00B         	goto	u4331
  3149   001720  EF94  F00B         	goto	u4330
  3150   001724                     u4331:
  3151   001724  EF18  F00C         	goto	l99
  3152   001728                     u4330:
  3153   001728  C0C7  F001         	movff	color_cardCheck@H,___flge@ff1
  3154   00172C  C0C8  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3155   001730  C0C9  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3156   001734  C0CA  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3157   001738  0E00               	movlw	0
  3158   00173A  6E05               	movwf	___flge@ff2^0,c
  3159   00173C  0E00               	movlw	0
  3160   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  3161   001740  0ED8               	movlw	216
  3162   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  3163   001744  0E41               	movlw	65
  3164   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  3165   001748  EC1F  F022         	call	___flge	;wreg free
  3166   00174C  B0D8               	btfsc	status,0,c
  3167   00174E  EFAB  F00B         	goto	u4341
  3168   001752  EFAD  F00B         	goto	u4340
  3169   001756                     u4341:
  3170   001756  EF18  F00C         	goto	l99
  3171   00175A                     u4340:
  3172   00175A  0E00               	movlw	0
  3173   00175C  6E01               	movwf	___flge@ff1^0,c
  3174   00175E  0E00               	movlw	0
  3175   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  3176   001762  0E40               	movlw	64
  3177   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  3178   001766  0E42               	movlw	66
  3179   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  3180   00176A  C0CB  F005         	movff	color_cardCheck@S,___flge@ff2
  3181   00176E  C0CC  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3182   001772  C0CD  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3183   001776  C0CE  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3184   00177A  EC1F  F022         	call	___flge	;wreg free
  3185   00177E  B0D8               	btfsc	status,0,c
  3186   001780  EFC4  F00B         	goto	u4351
  3187   001784  EFC6  F00B         	goto	u4350
  3188   001788                     u4351:
  3189   001788  EF18  F00C         	goto	l99
  3190   00178C                     u4350:
  3191   00178C  C0CB  F001         	movff	color_cardCheck@S,___flge@ff1
  3192   001790  C0CC  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3193   001794  C0CD  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3194   001798  C0CE  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3195   00179C  0E00               	movlw	0
  3196   00179E  6E05               	movwf	___flge@ff2^0,c
  3197   0017A0  0E00               	movlw	0
  3198   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  3199   0017A4  0E54               	movlw	84
  3200   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  3201   0017A8  0E42               	movlw	66
  3202   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  3203   0017AC  EC1F  F022         	call	___flge	;wreg free
  3204   0017B0  B0D8               	btfsc	status,0,c
  3205   0017B2  EFDD  F00B         	goto	u4361
  3206   0017B6  EFDF  F00B         	goto	u4360
  3207   0017BA                     u4361:
  3208   0017BA  EF18  F00C         	goto	l99
  3209   0017BE                     u4360:
  3210   0017BE  0E00               	movlw	0
  3211   0017C0  6E01               	movwf	___flge@ff1^0,c
  3212   0017C2  0E00               	movlw	0
  3213   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  3214   0017C6  0E34               	movlw	52
  3215   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  3216   0017CA  0E42               	movlw	66
  3217   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  3218   0017CE  C0CF  F005         	movff	color_cardCheck@V,___flge@ff2
  3219   0017D2  C0D0  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3220   0017D6  C0D1  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3221   0017DA  C0D2  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3222   0017DE  EC1F  F022         	call	___flge	;wreg free
  3223   0017E2  B0D8               	btfsc	status,0,c
  3224   0017E4  EFF6  F00B         	goto	u4371
  3225   0017E8  EFF8  F00B         	goto	u4370
  3226   0017EC                     u4371:
  3227   0017EC  EF18  F00C         	goto	l99
  3228   0017F0                     u4370:
  3229   0017F0  C0CF  F001         	movff	color_cardCheck@V,___flge@ff1
  3230   0017F4  C0D0  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3231   0017F8  C0D1  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3232   0017FC  C0D2  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3233   001800  0E00               	movlw	0
  3234   001802  6E05               	movwf	___flge@ff2^0,c
  3235   001804  0E00               	movlw	0
  3236   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  3237   001808  0E48               	movlw	72
  3238   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  3239   00180C  0E42               	movlw	66
  3240   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  3241   001810  EC1F  F022         	call	___flge	;wreg free
  3242   001814  B0D8               	btfsc	status,0,c
  3243   001816  EF0F  F00C         	goto	u4381
  3244   00181A  EF11  F00C         	goto	u4380
  3245   00181E                     u4381:
  3246   00181E  EF18  F00C         	goto	l99
  3247   001822                     u4380:
  3248   001822  0E00               	movlw	0
  3249   001824  0100               	movlb	0	; () banked
  3250   001826  6FC6               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3251   001828  0E08               	movlw	8
  3252   00182A  6FC5               	movwf	color_cardCheck@card_color& (0+255),b
  3253   00182C  EF18  F00C         	goto	l3922
  3254   001830                     l99:
  3255   001830                     l3922:
  3256                           
  3257                           ;color.c: 213:     return card_color;
  3258   001830  C0C5  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  3259   001834  C0C6  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  3260   001838  0012               	return		;funcret
  3261   00183A                     __end_of_color_cardCheck:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _color_read_Red *****************
  3265 ;; Defined at:
  3266 ;;		line 46 in file "color.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  tmp             2    9[COMRAM] unsigned int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2    4[COMRAM] unsigned int 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;Total ram usage:        7 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 2
  3287 ;; This function calls:
  3288 ;;		_I2C_2_Master_Read
  3289 ;;		_I2C_2_Master_RepStart
  3290 ;;		_I2C_2_Master_Start
  3291 ;;		_I2C_2_Master_Stop
  3292 ;;		_I2C_2_Master_Write
  3293 ;; This function is called by:
  3294 ;;		_color_cardCheck
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text7
  3299   00498E                     __ptext7:
  3300                           	callstack 0
  3301   00498E                     _color_read_Red:
  3302                           	callstack 26
  3303   00498E                     
  3304                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  3305   00498E  EC54  F026         	call	_I2C_2_Master_Start	;wreg free
  3306                           
  3307                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  3308   004992  0E52               	movlw	82
  3309   004994  EC49  F026         	call	_I2C_2_Master_Write
  3310                           
  3311                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  3312   004998  0EB6               	movlw	182
  3313   00499A  EC49  F026         	call	_I2C_2_Master_Write
  3314                           
  3315                           ;color.c: 52:  I2C_2_Master_RepStart();
  3316   00499E  EC59  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3317                           
  3318                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  3319   0049A2  0E53               	movlw	83
  3320   0049A4  EC49  F026         	call	_I2C_2_Master_Write
  3321                           
  3322                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  3323   0049A8  0E01               	movlw	1
  3324   0049AA  EC8A  F025         	call	_I2C_2_Master_Read
  3325   0049AE  6E07               	movwf	??_color_read_Red^0,c
  3326   0049B0  5007               	movf	??_color_read_Red^0,w,c
  3327   0049B2  6E0A               	movwf	color_read_Red@tmp^0,c
  3328   0049B4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3329                           
  3330                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3331   0049B6  0E00               	movlw	0
  3332   0049B8  EC8A  F025         	call	_I2C_2_Master_Read
  3333   0049BC  6E07               	movwf	??_color_read_Red^0,c
  3334   0049BE  5007               	movf	??_color_read_Red^0,w,c
  3335   0049C0  6E09               	movwf	(??_color_read_Red+2)^0,c
  3336   0049C2  6A08               	clrf	(??_color_read_Red+1)^0,c
  3337   0049C4  500A               	movf	color_read_Red@tmp^0,w,c
  3338   0049C6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3339   0049C8  6E0A               	movwf	color_read_Red@tmp^0,c
  3340   0049CA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3341   0049CC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3342   0049CE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3343                           
  3344                           ;color.c: 56:  I2C_2_Master_Stop();
  3345   0049D0  EC4F  F026         	call	_I2C_2_Master_Stop	;wreg free
  3346   0049D4                     
  3347                           ;color.c: 57:  return tmp;
  3348   0049D4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3349   0049D8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3350   0049DC  0012               	return		;funcret
  3351   0049DE                     __end_of_color_read_Red:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _color_read_Green *****************
  3355 ;; Defined at:
  3356 ;;		line 60 in file "color.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  tmp             2    9[COMRAM] unsigned int 
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  2    4[COMRAM] unsigned int 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0, cstack
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;Total ram usage:        7 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 2
  3377 ;; This function calls:
  3378 ;;		_I2C_2_Master_Read
  3379 ;;		_I2C_2_Master_RepStart
  3380 ;;		_I2C_2_Master_Start
  3381 ;;		_I2C_2_Master_Stop
  3382 ;;		_I2C_2_Master_Write
  3383 ;; This function is called by:
  3384 ;;		_color_cardCheck
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text8
  3389   0049DE                     __ptext8:
  3390                           	callstack 0
  3391   0049DE                     _color_read_Green:
  3392                           	callstack 26
  3393   0049DE                     
  3394                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  3395   0049DE  EC54  F026         	call	_I2C_2_Master_Start	;wreg free
  3396                           
  3397                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  3398   0049E2  0E52               	movlw	82
  3399   0049E4  EC49  F026         	call	_I2C_2_Master_Write
  3400                           
  3401                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  3402   0049E8  0EB8               	movlw	184
  3403   0049EA  EC49  F026         	call	_I2C_2_Master_Write
  3404                           
  3405                           ;color.c: 66:  I2C_2_Master_RepStart();
  3406   0049EE  EC59  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3407                           
  3408                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  3409   0049F2  0E53               	movlw	83
  3410   0049F4  EC49  F026         	call	_I2C_2_Master_Write
  3411                           
  3412                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  3413   0049F8  0E01               	movlw	1
  3414   0049FA  EC8A  F025         	call	_I2C_2_Master_Read
  3415   0049FE  6E07               	movwf	??_color_read_Green^0,c
  3416   004A00  5007               	movf	??_color_read_Green^0,w,c
  3417   004A02  6E0A               	movwf	color_read_Green@tmp^0,c
  3418   004A04  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3419                           
  3420                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3421   004A06  0E00               	movlw	0
  3422   004A08  EC8A  F025         	call	_I2C_2_Master_Read
  3423   004A0C  6E07               	movwf	??_color_read_Green^0,c
  3424   004A0E  5007               	movf	??_color_read_Green^0,w,c
  3425   004A10  6E09               	movwf	(??_color_read_Green+2)^0,c
  3426   004A12  6A08               	clrf	(??_color_read_Green+1)^0,c
  3427   004A14  500A               	movf	color_read_Green@tmp^0,w,c
  3428   004A16  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3429   004A18  6E0A               	movwf	color_read_Green@tmp^0,c
  3430   004A1A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3431   004A1C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3432   004A1E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3433                           
  3434                           ;color.c: 70:  I2C_2_Master_Stop();
  3435   004A20  EC4F  F026         	call	_I2C_2_Master_Stop	;wreg free
  3436   004A24                     
  3437                           ;color.c: 71:  return tmp;
  3438   004A24  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3439   004A28  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3440   004A2C  0012               	return		;funcret
  3441   004A2E                     __end_of_color_read_Green:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _color_read_Clear *****************
  3445 ;; Defined at:
  3446 ;;		line 88 in file "color.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  tmp             2    9[COMRAM] unsigned int 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2    4[COMRAM] unsigned int 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3460 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3463 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;Total ram usage:        7 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 2
  3467 ;; This function calls:
  3468 ;;		_I2C_2_Master_Read
  3469 ;;		_I2C_2_Master_RepStart
  3470 ;;		_I2C_2_Master_Start
  3471 ;;		_I2C_2_Master_Stop
  3472 ;;		_I2C_2_Master_Write
  3473 ;; This function is called by:
  3474 ;;		_color_cardCheck
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text9
  3479   004A2E                     __ptext9:
  3480                           	callstack 0
  3481   004A2E                     _color_read_Clear:
  3482                           	callstack 26
  3483   004A2E                     
  3484                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3485   004A2E  EC54  F026         	call	_I2C_2_Master_Start	;wreg free
  3486                           
  3487                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3488   004A32  0E52               	movlw	82
  3489   004A34  EC49  F026         	call	_I2C_2_Master_Write
  3490                           
  3491                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  3492   004A38  0EB4               	movlw	180
  3493   004A3A  EC49  F026         	call	_I2C_2_Master_Write
  3494                           
  3495                           ;color.c: 96:  I2C_2_Master_RepStart();
  3496   004A3E  EC59  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3497                           
  3498                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3499   004A42  0E53               	movlw	83
  3500   004A44  EC49  F026         	call	_I2C_2_Master_Write
  3501                           
  3502                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3503   004A48  0E01               	movlw	1
  3504   004A4A  EC8A  F025         	call	_I2C_2_Master_Read
  3505   004A4E  6E07               	movwf	??_color_read_Clear^0,c
  3506   004A50  5007               	movf	??_color_read_Clear^0,w,c
  3507   004A52  6E0A               	movwf	color_read_Clear@tmp^0,c
  3508   004A54  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3509                           
  3510                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3511   004A56  0E00               	movlw	0
  3512   004A58  EC8A  F025         	call	_I2C_2_Master_Read
  3513   004A5C  6E07               	movwf	??_color_read_Clear^0,c
  3514   004A5E  5007               	movf	??_color_read_Clear^0,w,c
  3515   004A60  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3516   004A62  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3517   004A64  500A               	movf	color_read_Clear@tmp^0,w,c
  3518   004A66  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3519   004A68  6E0A               	movwf	color_read_Clear@tmp^0,c
  3520   004A6A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3521   004A6C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3522   004A6E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3523                           
  3524                           ;color.c: 100:  I2C_2_Master_Stop();
  3525   004A70  EC4F  F026         	call	_I2C_2_Master_Stop	;wreg free
  3526   004A74                     
  3527                           ;color.c: 101:  return tmp;
  3528   004A74  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3529   004A78  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3530   004A7C  0012               	return		;funcret
  3531   004A7E                     __end_of_color_read_Clear:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _color_read_Blue *****************
  3535 ;; Defined at:
  3536 ;;		line 74 in file "color.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  tmp             2    9[COMRAM] unsigned int 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  2    4[COMRAM] unsigned int 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;Total ram usage:        7 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 2
  3557 ;; This function calls:
  3558 ;;		_I2C_2_Master_Read
  3559 ;;		_I2C_2_Master_RepStart
  3560 ;;		_I2C_2_Master_Start
  3561 ;;		_I2C_2_Master_Stop
  3562 ;;		_I2C_2_Master_Write
  3563 ;; This function is called by:
  3564 ;;		_color_cardCheck
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text10
  3569   004A7E                     __ptext10:
  3570                           	callstack 0
  3571   004A7E                     _color_read_Blue:
  3572                           	callstack 26
  3573   004A7E                     
  3574                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  3575   004A7E  EC54  F026         	call	_I2C_2_Master_Start	;wreg free
  3576                           
  3577                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  3578   004A82  0E52               	movlw	82
  3579   004A84  EC49  F026         	call	_I2C_2_Master_Write
  3580                           
  3581                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  3582   004A88  0EBA               	movlw	186
  3583   004A8A  EC49  F026         	call	_I2C_2_Master_Write
  3584                           
  3585                           ;color.c: 80:  I2C_2_Master_RepStart();
  3586   004A8E  EC59  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3587                           
  3588                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3589   004A92  0E53               	movlw	83
  3590   004A94  EC49  F026         	call	_I2C_2_Master_Write
  3591                           
  3592                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  3593   004A98  0E01               	movlw	1
  3594   004A9A  EC8A  F025         	call	_I2C_2_Master_Read
  3595   004A9E  6E07               	movwf	??_color_read_Blue^0,c
  3596   004AA0  5007               	movf	??_color_read_Blue^0,w,c
  3597   004AA2  6E0A               	movwf	color_read_Blue@tmp^0,c
  3598   004AA4  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3599                           
  3600                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3601   004AA6  0E00               	movlw	0
  3602   004AA8  EC8A  F025         	call	_I2C_2_Master_Read
  3603   004AAC  6E07               	movwf	??_color_read_Blue^0,c
  3604   004AAE  5007               	movf	??_color_read_Blue^0,w,c
  3605   004AB0  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3606   004AB2  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3607   004AB4  500A               	movf	color_read_Blue@tmp^0,w,c
  3608   004AB6  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3609   004AB8  6E0A               	movwf	color_read_Blue@tmp^0,c
  3610   004ABA  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3611   004ABC  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3612   004ABE  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3613                           
  3614                           ;color.c: 84:  I2C_2_Master_Stop();
  3615   004AC0  EC4F  F026         	call	_I2C_2_Master_Stop	;wreg free
  3616   004AC4                     
  3617                           ;color.c: 85:  return tmp;
  3618   004AC4  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3619   004AC8  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3620   004ACC  0012               	return		;funcret
  3621   004ACE                     __end_of_color_read_Blue:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _I2C_2_Master_Write *****************
  3625 ;; Defined at:
  3626 ;;		line 45 in file "i2c.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  data_byte       1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  data_byte       1    1[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;Total ram usage:        1 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 1
  3647 ;; This function calls:
  3648 ;;		_I2C_2_Master_Idle
  3649 ;; This function is called by:
  3650 ;;		_color_writetoaddr
  3651 ;;		_color_read_Red
  3652 ;;		_color_read_Green
  3653 ;;		_color_read_Blue
  3654 ;;		_color_read_Clear
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text11
  3659   004C92                     __ptext11:
  3660                           	callstack 0
  3661   004C92                     _I2C_2_Master_Write:
  3662                           	callstack 26
  3663                           
  3664                           ;incstack = 0
  3665                           ;I2C_2_Master_Write@data_byte stored from wreg
  3666   004C92  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3667   004C94                     
  3668                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3669   004C94  EC12  F026         	call	_I2C_2_Master_Idle	;wreg free
  3670   004C98                     
  3671                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3672   004C98  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3673   004C9C  0012               	return		;funcret
  3674   004C9E                     __end_of_I2C_2_Master_Write:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _I2C_2_Master_Stop *****************
  3678 ;; Defined at:
  3679 ;;		line 39 in file "i2c.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 1
  3700 ;; This function calls:
  3701 ;;		_I2C_2_Master_Idle
  3702 ;; This function is called by:
  3703 ;;		_color_writetoaddr
  3704 ;;		_color_read_Red
  3705 ;;		_color_read_Green
  3706 ;;		_color_read_Blue
  3707 ;;		_color_read_Clear
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text12
  3712   004C9E                     __ptext12:
  3713                           	callstack 0
  3714   004C9E                     _I2C_2_Master_Stop:
  3715                           	callstack 26
  3716   004C9E                     
  3717                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3718   004C9E  EC12  F026         	call	_I2C_2_Master_Idle	;wreg free
  3719   004CA2                     
  3720                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3721   004CA2  010E               	movlb	14	; () banked
  3722   004CA4  85DA               	bsf	218,2,b	;volatile
  3723   004CA6                     
  3724                           ; BSR set to: 14
  3725   004CA6  0012               	return		;funcret
  3726   004CA8                     __end_of_I2C_2_Master_Stop:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _I2C_2_Master_Start *****************
  3730 ;; Defined at:
  3731 ;;		line 27 in file "i2c.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 1
  3752 ;; This function calls:
  3753 ;;		_I2C_2_Master_Idle
  3754 ;; This function is called by:
  3755 ;;		_color_writetoaddr
  3756 ;;		_color_read_Red
  3757 ;;		_color_read_Green
  3758 ;;		_color_read_Blue
  3759 ;;		_color_read_Clear
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text13
  3764   004CA8                     __ptext13:
  3765                           	callstack 0
  3766   004CA8                     _I2C_2_Master_Start:
  3767                           	callstack 26
  3768   004CA8                     
  3769                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3770   004CA8  EC12  F026         	call	_I2C_2_Master_Idle	;wreg free
  3771   004CAC                     
  3772                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3773   004CAC  010E               	movlb	14	; () banked
  3774   004CAE  81DA               	bsf	218,0,b	;volatile
  3775   004CB0                     
  3776                           ; BSR set to: 14
  3777   004CB0  0012               	return		;funcret
  3778   004CB2                     __end_of_I2C_2_Master_Start:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _I2C_2_Master_RepStart *****************
  3782 ;; Defined at:
  3783 ;;		line 33 in file "i2c.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 1
  3804 ;; This function calls:
  3805 ;;		_I2C_2_Master_Idle
  3806 ;; This function is called by:
  3807 ;;		_color_read_Red
  3808 ;;		_color_read_Green
  3809 ;;		_color_read_Blue
  3810 ;;		_color_read_Clear
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text14
  3815   004CB2                     __ptext14:
  3816                           	callstack 0
  3817   004CB2                     _I2C_2_Master_RepStart:
  3818                           	callstack 26
  3819   004CB2                     
  3820                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3821   004CB2  EC12  F026         	call	_I2C_2_Master_Idle	;wreg free
  3822   004CB6                     
  3823                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3824   004CB6  010E               	movlb	14	; () banked
  3825   004CB8  83DA               	bsf	218,1,b	;volatile
  3826   004CBA                     
  3827                           ; BSR set to: 14
  3828   004CBA  0012               	return		;funcret
  3829   004CBC                     __end_of_I2C_2_Master_RepStart:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _I2C_2_Master_Read *****************
  3833 ;; Defined at:
  3834 ;;		line 51 in file "i2c.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  ack             1    wreg     unsigned char 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  ack             1    2[COMRAM] unsigned char 
  3839 ;;  tmp             1    3[COMRAM] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      unsigned char 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;Total ram usage:        3 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 1
  3856 ;; This function calls:
  3857 ;;		_I2C_2_Master_Idle
  3858 ;; This function is called by:
  3859 ;;		_color_read_Red
  3860 ;;		_color_read_Green
  3861 ;;		_color_read_Blue
  3862 ;;		_color_read_Clear
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text15
  3867   004B14                     __ptext15:
  3868                           	callstack 0
  3869   004B14                     _I2C_2_Master_Read:
  3870                           	callstack 26
  3871                           
  3872                           ; BSR set to: 14
  3873                           ;incstack = 0
  3874                           ;I2C_2_Master_Read@ack stored from wreg
  3875   004B14  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3876   004B16                     
  3877                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3878   004B16  EC12  F026         	call	_I2C_2_Master_Idle	;wreg free
  3879   004B1A                     
  3880                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3881   004B1A  010E               	movlb	14	; () banked
  3882   004B1C  87DA               	bsf	218,3,b	;volatile
  3883                           
  3884                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3885   004B1E  EC12  F026         	call	_I2C_2_Master_Idle	;wreg free
  3886   004B22                     
  3887                           ;i2c.c: 57:   tmp = SSP2BUF;
  3888   004B22  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3889                           
  3890                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3891   004B26  EC12  F026         	call	_I2C_2_Master_Idle	;wreg free
  3892   004B2A                     
  3893                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3894   004B2A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3895   004B2C  B4D8               	btfsc	status,2,c
  3896   004B2E  EF9B  F025         	goto	u3621
  3897   004B32  EF9F  F025         	goto	u3620
  3898   004B36                     u3621:
  3899   004B36  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3900   004B38  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3901   004B3A  EFA0  F025         	goto	u3638
  3902   004B3E                     u3620:
  3903   004B3E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3904   004B40                     u3638:
  3905   004B40  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3906   004B42  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3907   004B44  010E               	movlb	14	; () banked
  3908   004B46  51DA               	movf	218,w,b	;volatile
  3909   004B48  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3910   004B4A  0BDF               	andlw	-33
  3911   004B4C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3912   004B4E  6FDA               	movwf	218,b	;volatile
  3913   004B50                     
  3914                           ; BSR set to: 14
  3915                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3916   004B50  89DA               	bsf	218,4,b	;volatile
  3917   004B52                     
  3918                           ; BSR set to: 14
  3919                           ;i2c.c: 61:   return tmp;
  3920   004B52  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3921   004B54                     
  3922                           ; BSR set to: 14
  3923   004B54  0012               	return		;funcret
  3924   004B56                     __end_of_I2C_2_Master_Read:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _I2C_2_Master_Idle *****************
  3928 ;; Defined at:
  3929 ;;		line 22 in file "i2c.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;		None
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        1 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_I2C_2_Master_Start
  3953 ;;		_I2C_2_Master_RepStart
  3954 ;;		_I2C_2_Master_Stop
  3955 ;;		_I2C_2_Master_Write
  3956 ;;		_I2C_2_Master_Read
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text16
  3961   004C24                     __ptext16:
  3962                           	callstack 0
  3963   004C24                     _I2C_2_Master_Idle:
  3964                           	callstack 26
  3965   004C24                     l135:
  3966   004C24  010E               	movlb	14	; () banked
  3967   004C26  B5D8               	btfsc	216,2,b	;volatile
  3968   004C28  EF18  F026         	goto	u2981
  3969   004C2C  EF1A  F026         	goto	u2980
  3970   004C30                     u2981:
  3971   004C30  EF12  F026         	goto	l135
  3972   004C34                     u2980:
  3973   004C34                     
  3974                           ; BSR set to: 14
  3975   004C34  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3976   004C38  0E1F               	movlw	31
  3977   004C3A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3978   004C3C  A4D8               	btfss	status,2,c
  3979   004C3E  EF23  F026         	goto	u2991
  3980   004C42  EF25  F026         	goto	u2990
  3981   004C46                     u2991:
  3982   004C46  EF12  F026         	goto	l135
  3983   004C4A                     u2990:
  3984   004C4A                     
  3985                           ; BSR set to: 14
  3986   004C4A  0012               	return		;funcret
  3987   004C4C                     __end_of_I2C_2_Master_Idle:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _RGB_to_HSV *****************
  3991 ;; Defined at:
  3992 ;;		line 125 in file "color.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  R               4   10[BANK0 ] float 
  3995 ;;  G               4   14[BANK0 ] float 
  3996 ;;  B               4   18[BANK0 ] float 
  3997 ;;  C               4   22[BANK0 ] float 
  3998 ;;  H               1   26[BANK0 ] PTR float 
  3999 ;;		 -> color_cardCheck@H(4), 
  4000 ;;  S               1   27[BANK0 ] PTR float 
  4001 ;;		 -> color_cardCheck@S(4), 
  4002 ;;  V               1   28[BANK0 ] PTR float 
  4003 ;;		 -> color_cardCheck@V(4), 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  b               4   81[BANK0 ] float 
  4006 ;;  g               4   77[BANK0 ] float 
  4007 ;;  r               4   73[BANK0 ] float 
  4008 ;;  maxRGB          4   69[BANK0 ] float 
  4009 ;;  deltaRGB        4   65[BANK0 ] float 
  4010 ;;  H_temp          4   61[BANK0 ] float 
  4011 ;;  minRGB          4   45[BANK0 ] float 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4021 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Totals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;Total ram usage:       75 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 3
  4028 ;; This function calls:
  4029 ;;		___fladd
  4030 ;;		___fldiv
  4031 ;;		___fleq
  4032 ;;		___flge
  4033 ;;		___flmul
  4034 ;;		___flsub
  4035 ;;		_custom_floatmodulo
  4036 ;; This function is called by:
  4037 ;;		_color_cardCheck
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text17
  4042   00183A                     __ptext17:
  4043                           	callstack 0
  4044   00183A                     _RGB_to_HSV:
  4045                           	callstack 25
  4046   00183A                     
  4047                           ;color.c: 128:     float r = R/C;
  4048   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  4049   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  4050   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  4051   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  4052   00184A  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4053   00184E  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4054   001852  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4055   001856  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4056   00185A  EC05  F019         	call	___fldiv	;wreg free
  4057   00185E  C022  F0A9         	movff	?___fldiv,RGB_to_HSV@r
  4058   001862  C023  F0AA         	movff	?___fldiv+1,RGB_to_HSV@r+1
  4059   001866  C024  F0AB         	movff	?___fldiv+2,RGB_to_HSV@r+2
  4060   00186A  C025  F0AC         	movff	?___fldiv+3,RGB_to_HSV@r+3
  4061                           
  4062                           ;color.c: 129:     float g = G/C;
  4063   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  4064   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  4065   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  4066   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  4067   00187E  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4068   001882  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4069   001886  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4070   00188A  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4071   00188E  EC05  F019         	call	___fldiv	;wreg free
  4072   001892  C022  F0AD         	movff	?___fldiv,RGB_to_HSV@g
  4073   001896  C023  F0AE         	movff	?___fldiv+1,RGB_to_HSV@g+1
  4074   00189A  C024  F0AF         	movff	?___fldiv+2,RGB_to_HSV@g+2
  4075   00189E  C025  F0B0         	movff	?___fldiv+3,RGB_to_HSV@g+3
  4076                           
  4077                           ;color.c: 130:     float b = B/C;
  4078   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  4079   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  4080   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  4081   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  4082   0018B2  C076  F026         	movff	RGB_to_HSV@C,___fldiv@a
  4083   0018B6  C077  F027         	movff	RGB_to_HSV@C+1,___fldiv@a+1
  4084   0018BA  C078  F028         	movff	RGB_to_HSV@C+2,___fldiv@a+2
  4085   0018BE  C079  F029         	movff	RGB_to_HSV@C+3,___fldiv@a+3
  4086   0018C2  EC05  F019         	call	___fldiv	;wreg free
  4087   0018C6  C022  F0B1         	movff	?___fldiv,RGB_to_HSV@b
  4088   0018CA  C023  F0B2         	movff	?___fldiv+1,RGB_to_HSV@b+1
  4089   0018CE  C024  F0B3         	movff	?___fldiv+2,RGB_to_HSV@b+2
  4090   0018D2  C025  F0B4         	movff	?___fldiv+3,RGB_to_HSV@b+3
  4091                           
  4092                           ;color.c: 133:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  4093   0018D6  C0AD  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4094   0018DA  C0AE  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4095   0018DE  C0AF  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4096   0018E2  C0B0  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4097   0018E6  C0A9  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4098   0018EA  C0AA  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4099   0018EE  C0AB  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4100   0018F2  C0AC  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4101   0018F6  EC1F  F022         	call	___flge	;wreg free
  4102   0018FA  A0D8               	btfss	status,0,c
  4103   0018FC  EF82  F00C         	goto	u3731
  4104   001900  EF84  F00C         	goto	u3730
  4105   001904                     u3731:
  4106   001904  EFB9  F00C         	goto	l3672
  4107   001908                     u3730:
  4108   001908  C0B1  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4109   00190C  C0B2  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4110   001910  C0B3  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4111   001914  C0B4  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4112   001918  C0AD  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4113   00191C  C0AE  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4114   001920  C0AF  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4115   001924  C0B0  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4116   001928  EC1F  F022         	call	___flge	;wreg free
  4117   00192C  A0D8               	btfss	status,0,c
  4118   00192E  EF9B  F00C         	goto	u3741
  4119   001932  EF9D  F00C         	goto	u3740
  4120   001936                     u3741:
  4121   001936  EFA7  F00C         	goto	l58
  4122   00193A                     u3740:
  4123   00193A  C0B1  F085         	movff	RGB_to_HSV@b,_RGB_to_HSV$317
  4124   00193E  C0B2  F086         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$317+1
  4125   001942  C0B3  F087         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$317+2
  4126   001946  C0B4  F088         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$317+3
  4127   00194A  EFAF  F00C         	goto	l60
  4128   00194E                     l58:
  4129   00194E  C0AD  F085         	movff	RGB_to_HSV@g,_RGB_to_HSV$317
  4130   001952  C0AE  F086         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$317+1
  4131   001956  C0AF  F087         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$317+2
  4132   00195A  C0B0  F088         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$317+3
  4133   00195E                     l60:
  4134   00195E  C085  F0A5         	movff	_RGB_to_HSV$317,RGB_to_HSV@maxRGB
  4135   001962  C086  F0A6         	movff	_RGB_to_HSV$317+1,RGB_to_HSV@maxRGB+1
  4136   001966  C087  F0A7         	movff	_RGB_to_HSV$317+2,RGB_to_HSV@maxRGB+2
  4137   00196A  C088  F0A8         	movff	_RGB_to_HSV$317+3,RGB_to_HSV@maxRGB+3
  4138   00196E  EFEC  F00C         	goto	l3676
  4139   001972                     l3672:
  4140   001972  C0B1  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4141   001976  C0B2  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4142   00197A  C0B3  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4143   00197E  C0B4  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4144   001982  C0A9  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4145   001986  C0AA  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4146   00198A  C0AB  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4147   00198E  C0AC  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4148   001992  EC1F  F022         	call	___flge	;wreg free
  4149   001996  A0D8               	btfss	status,0,c
  4150   001998  EFD0  F00C         	goto	u3751
  4151   00199C  EFD2  F00C         	goto	u3750
  4152   0019A0                     u3751:
  4153   0019A0  EFDC  F00C         	goto	l62
  4154   0019A4                     u3750:
  4155   0019A4  C0B1  F089         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  4156   0019A8  C0B2  F08A         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  4157   0019AC  C0B3  F08B         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  4158   0019B0  C0B4  F08C         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  4159   0019B4  EFE4  F00C         	goto	l64
  4160   0019B8                     l62:
  4161   0019B8  C0A9  F089         	movff	RGB_to_HSV@r,_RGB_to_HSV$318
  4162   0019BC  C0AA  F08A         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$318+1
  4163   0019C0  C0AB  F08B         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$318+2
  4164   0019C4  C0AC  F08C         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$318+3
  4165   0019C8                     l64:
  4166   0019C8  C089  F0A5         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  4167   0019CC  C08A  F0A6         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  4168   0019D0  C08B  F0A7         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  4169   0019D4  C08C  F0A8         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  4170   0019D8                     l3676:
  4171                           
  4172                           ;color.c: 134:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  4173   0019D8  C0A9  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4174   0019DC  C0AA  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4175   0019E0  C0AB  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4176   0019E4  C0AC  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4177   0019E8  C0AD  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4178   0019EC  C0AE  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4179   0019F0  C0AF  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4180   0019F4  C0B0  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4181   0019F8  EC1F  F022         	call	___flge	;wreg free
  4182   0019FC  A0D8               	btfss	status,0,c
  4183   0019FE  EF03  F00D         	goto	u3761
  4184   001A02  EF05  F00D         	goto	u3760
  4185   001A06                     u3761:
  4186   001A06  EF3A  F00D         	goto	l3682
  4187   001A0A                     u3760:
  4188   001A0A  C0AD  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4189   001A0E  C0AE  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4190   001A12  C0AF  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4191   001A16  C0B0  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4192   001A1A  C0B1  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4193   001A1E  C0B2  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4194   001A22  C0B3  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4195   001A26  C0B4  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4196   001A2A  EC1F  F022         	call	___flge	;wreg free
  4197   001A2E  A0D8               	btfss	status,0,c
  4198   001A30  EF1C  F00D         	goto	u3771
  4199   001A34  EF1E  F00D         	goto	u3770
  4200   001A38                     u3771:
  4201   001A38  EF28  F00D         	goto	l70
  4202   001A3C                     u3770:
  4203   001A3C  C0B1  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$320
  4204   001A40  C0B2  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$320+1
  4205   001A44  C0B3  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$320+2
  4206   001A48  C0B4  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$320+3
  4207   001A4C  EF30  F00D         	goto	l72
  4208   001A50                     l70:
  4209   001A50  C0AD  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$320
  4210   001A54  C0AE  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$320+1
  4211   001A58  C0AF  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$320+2
  4212   001A5C  C0B0  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$320+3
  4213   001A60                     l72:
  4214   001A60  C091  F08D         	movff	_RGB_to_HSV$320,RGB_to_HSV@minRGB
  4215   001A64  C092  F08E         	movff	_RGB_to_HSV$320+1,RGB_to_HSV@minRGB+1
  4216   001A68  C093  F08F         	movff	_RGB_to_HSV$320+2,RGB_to_HSV@minRGB+2
  4217   001A6C  C094  F090         	movff	_RGB_to_HSV$320+3,RGB_to_HSV@minRGB+3
  4218   001A70  EF6D  F00D         	goto	l3686
  4219   001A74                     l3682:
  4220   001A74  C0A9  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4221   001A78  C0AA  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4222   001A7C  C0AB  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4223   001A80  C0AC  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4224   001A84  C0B1  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4225   001A88  C0B2  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4226   001A8C  C0B3  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4227   001A90  C0B4  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4228   001A94  EC1F  F022         	call	___flge	;wreg free
  4229   001A98  A0D8               	btfss	status,0,c
  4230   001A9A  EF51  F00D         	goto	u3781
  4231   001A9E  EF53  F00D         	goto	u3780
  4232   001AA2                     u3781:
  4233   001AA2  EF5D  F00D         	goto	l74
  4234   001AA6                     u3780:
  4235   001AA6  C0B1  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  4236   001AAA  C0B2  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  4237   001AAE  C0B3  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  4238   001AB2  C0B4  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  4239   001AB6  EF65  F00D         	goto	l76
  4240   001ABA                     l74:
  4241   001ABA  C0A9  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$321
  4242   001ABE  C0AA  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$321+1
  4243   001AC2  C0AB  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$321+2
  4244   001AC6  C0AC  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$321+3
  4245   001ACA                     l76:
  4246   001ACA  C095  F08D         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  4247   001ACE  C096  F08E         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  4248   001AD2  C097  F08F         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  4249   001AD6  C098  F090         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  4250   001ADA                     l3686:
  4251                           
  4252                           ;color.c: 135:     float deltaRGB = maxRGB - minRGB;
  4253   001ADA  C0A5  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  4254   001ADE  C0A6  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  4255   001AE2  C0A7  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  4256   001AE6  C0A8  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  4257   001AEA  C08D  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  4258   001AEE  C08E  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  4259   001AF2  C08F  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  4260   001AF6  C090  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  4261   001AFA  EC67  F025         	call	___flsub	;wreg free
  4262   001AFE  C01A  F0A1         	movff	?___flsub,RGB_to_HSV@deltaRGB
  4263   001B02  C01B  F0A2         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  4264   001B06  C01C  F0A3         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  4265   001B0A  C01D  F0A4         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  4266                           
  4267                           ;color.c: 140:     float H_temp;;color.c: 142:     if (deltaRGB == 0) {H_temp = 0;}
  4268   001B0E  C0A1  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  4269   001B12  C0A2  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  4270   001B16  C0A3  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  4271   001B1A  C0A4  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  4272   001B1E  0E00               	movlw	0
  4273   001B20  6E05               	movwf	___fleq@ff2^0,c
  4274   001B22  0E00               	movlw	0
  4275   001B24  6E06               	movwf	(___fleq@ff2+1)^0,c
  4276   001B26  0E00               	movlw	0
  4277   001B28  6E07               	movwf	(___fleq@ff2+2)^0,c
  4278   001B2A  0E00               	movlw	0
  4279   001B2C  6E08               	movwf	(___fleq@ff2+3)^0,c
  4280   001B2E  ECBF  F023         	call	___fleq	;wreg free
  4281   001B32  A0D8               	btfss	status,0,c
  4282   001B34  EF9E  F00D         	goto	u3791
  4283   001B38  EFA0  F00D         	goto	u3790
  4284   001B3C                     u3791:
  4285   001B3C  EFAB  F00D         	goto	l3690
  4286   001B40                     u3790:
  4287   001B40  0E00               	movlw	0
  4288   001B42  0100               	movlb	0	; () banked
  4289   001B44  6F9D               	movwf	RGB_to_HSV@H_temp& (0+255),b
  4290   001B46  0E00               	movlw	0
  4291   001B48  6F9E               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  4292   001B4A  0E00               	movlw	0
  4293   001B4C  6F9F               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  4294   001B4E  0E00               	movlw	0
  4295   001B50  6FA0               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  4296   001B52  EF0C  F00F         	goto	l3710
  4297   001B56                     l3690:
  4298   001B56  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4299   001B5A  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4300   001B5E  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4301   001B62  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4302   001B66  C0A9  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  4303   001B6A  C0AA  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  4304   001B6E  C0AB  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  4305   001B72  C0AC  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  4306   001B76  ECBF  F023         	call	___fleq	;wreg free
  4307   001B7A  A0D8               	btfss	status,0,c
  4308   001B7C  EFC2  F00D         	goto	u3801
  4309   001B80  EFC4  F00D         	goto	u3800
  4310   001B84                     u3801:
  4311   001B84  EF26  F00E         	goto	l3698
  4312   001B88                     u3800:
  4313   001B88  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4314   001B8C  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4315   001B90  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4316   001B94  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4317   001B98  C0B1  F01E         	movff	RGB_to_HSV@b,___flsub@a
  4318   001B9C  C0B2  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  4319   001BA0  C0B3  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  4320   001BA4  C0B4  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  4321   001BA8  C0AD  F01A         	movff	RGB_to_HSV@g,___flsub@b
  4322   001BAC  C0AE  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  4323   001BB0  C0AF  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  4324   001BB4  C0B0  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  4325   001BB8  EC67  F025         	call	___flsub	;wreg free
  4326   001BBC  C01A  F022         	movff	?___flsub,___fldiv@b
  4327   001BC0  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4328   001BC4  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4329   001BC8  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4330   001BCC  EC05  F019         	call	___fldiv	;wreg free
  4331   001BD0  C022  F07D         	movff	?___fldiv,_RGB_to_HSV$2715
  4332   001BD4  C023  F07E         	movff	?___fldiv+1,_RGB_to_HSV$2715+1
  4333   001BD8  C024  F07F         	movff	?___fldiv+2,_RGB_to_HSV$2715+2
  4334   001BDC  C025  F080         	movff	?___fldiv+3,_RGB_to_HSV$2715+3
  4335   001BE0  0E00               	movlw	0
  4336   001BE2  6E58               	movwf	custom_floatmodulo@y^0,c
  4337   001BE4  0E00               	movlw	0
  4338   001BE6  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  4339   001BE8  0EC0               	movlw	192
  4340   001BEA  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  4341   001BEC  0E40               	movlw	64
  4342   001BEE  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  4343   001BF0  C07D  F054         	movff	_RGB_to_HSV$2715,custom_floatmodulo@x
  4344   001BF4  C07E  F055         	movff	_RGB_to_HSV$2715+1,custom_floatmodulo@x+1
  4345   001BF8  C07F  F056         	movff	_RGB_to_HSV$2715+2,custom_floatmodulo@x+2
  4346   001BFC  C080  F057         	movff	_RGB_to_HSV$2715+3,custom_floatmodulo@x+3
  4347   001C00  EC10  F021         	call	_custom_floatmodulo	;wreg free
  4348   001C04  C054  F081         	movff	?_custom_floatmodulo,_RGB_to_HSV$2716
  4349   001C08  C055  F082         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2716+1
  4350   001C0C  C056  F083         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2716+2
  4351   001C10  C057  F084         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2716+3
  4352   001C14  C081  F03B         	movff	_RGB_to_HSV$2716,___flmul@b
  4353   001C18  C082  F03C         	movff	_RGB_to_HSV$2716+1,___flmul@b+1
  4354   001C1C  C083  F03D         	movff	_RGB_to_HSV$2716+2,___flmul@b+2
  4355   001C20  C084  F03E         	movff	_RGB_to_HSV$2716+3,___flmul@b+3
  4356   001C24  0E00               	movlw	0
  4357   001C26  6E3F               	movwf	___flmul@a^0,c
  4358   001C28  0E00               	movlw	0
  4359   001C2A  6E40               	movwf	(___flmul@a+1)^0,c
  4360   001C2C  0E70               	movlw	112
  4361   001C2E  6E41               	movwf	(___flmul@a+2)^0,c
  4362   001C30  0E42               	movlw	66
  4363   001C32  6E42               	movwf	(___flmul@a+3)^0,c
  4364   001C34  ECF0  F016         	call	___flmul	;wreg free
  4365   001C38  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4366   001C3C  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4367   001C40  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4368   001C44  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4369   001C48  EF0C  F00F         	goto	l3710
  4370   001C4C                     l3698:
  4371   001C4C  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4372   001C50  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4373   001C54  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4374   001C58  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4375   001C5C  C0AD  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  4376   001C60  C0AE  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  4377   001C64  C0AF  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  4378   001C68  C0B0  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  4379   001C6C  ECBF  F023         	call	___fleq	;wreg free
  4380   001C70  A0D8               	btfss	status,0,c
  4381   001C72  EF3D  F00E         	goto	u3811
  4382   001C76  EF3F  F00E         	goto	u3810
  4383   001C7A                     u3811:
  4384   001C7A  EF99  F00E         	goto	l3704
  4385   001C7E                     u3810:
  4386   001C7E  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4387   001C82  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4388   001C86  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4389   001C8A  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4390   001C8E  C0A9  F01E         	movff	RGB_to_HSV@r,___flsub@a
  4391   001C92  C0AA  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  4392   001C96  C0AB  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  4393   001C9A  C0AC  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  4394   001C9E  C0B1  F01A         	movff	RGB_to_HSV@b,___flsub@b
  4395   001CA2  C0B2  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  4396   001CA6  C0B3  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  4397   001CAA  C0B4  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  4398   001CAE  EC67  F025         	call	___flsub	;wreg free
  4399   001CB2  C01A  F022         	movff	?___flsub,___fldiv@b
  4400   001CB6  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4401   001CBA  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4402   001CBE  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4403   001CC2  EC05  F019         	call	___fldiv	;wreg free
  4404   001CC6  C022  F099         	movff	?___fldiv,_RGB_to_HSV$2717
  4405   001CCA  C023  F09A         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4406   001CCE  C024  F09B         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4407   001CD2  C025  F09C         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4408   001CD6  0E00               	movlw	0
  4409   001CD8  6E05               	movwf	___fladd@a^0,c
  4410   001CDA  0E00               	movlw	0
  4411   001CDC  6E06               	movwf	(___fladd@a+1)^0,c
  4412   001CDE  0E00               	movlw	0
  4413   001CE0  6E07               	movwf	(___fladd@a+2)^0,c
  4414   001CE2  0E40               	movlw	64
  4415   001CE4  6E08               	movwf	(___fladd@a+3)^0,c
  4416   001CE6  C099  F001         	movff	_RGB_to_HSV$2717,___fladd@b
  4417   001CEA  C09A  F002         	movff	_RGB_to_HSV$2717+1,___fladd@b+1
  4418   001CEE  C09B  F003         	movff	_RGB_to_HSV$2717+2,___fladd@b+2
  4419   001CF2  C09C  F004         	movff	_RGB_to_HSV$2717+3,___fladd@b+3
  4420   001CF6  EC90  F014         	call	___fladd	;wreg free
  4421   001CFA  C001  F03B         	movff	?___fladd,___flmul@b
  4422   001CFE  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4423   001D02  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4424   001D06  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4425   001D0A  0E00               	movlw	0
  4426   001D0C  6E3F               	movwf	___flmul@a^0,c
  4427   001D0E  0E00               	movlw	0
  4428   001D10  6E40               	movwf	(___flmul@a+1)^0,c
  4429   001D12  0E70               	movlw	112
  4430   001D14  6E41               	movwf	(___flmul@a+2)^0,c
  4431   001D16  0E42               	movlw	66
  4432   001D18  6E42               	movwf	(___flmul@a+3)^0,c
  4433   001D1A  ECF0  F016         	call	___flmul	;wreg free
  4434   001D1E  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4435   001D22  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4436   001D26  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4437   001D2A  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4438   001D2E  EF0C  F00F         	goto	l3710
  4439   001D32                     l3704:
  4440   001D32  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4441   001D36  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4442   001D3A  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4443   001D3E  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4444   001D42  C0B1  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  4445   001D46  C0B2  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  4446   001D4A  C0B3  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  4447   001D4E  C0B4  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  4448   001D52  ECBF  F023         	call	___fleq	;wreg free
  4449   001D56  A0D8               	btfss	status,0,c
  4450   001D58  EFB0  F00E         	goto	u3821
  4451   001D5C  EFB2  F00E         	goto	u3820
  4452   001D60                     u3821:
  4453   001D60  EF0C  F00F         	goto	l80
  4454   001D64                     u3820:
  4455   001D64  C0A1  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4456   001D68  C0A2  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4457   001D6C  C0A3  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4458   001D70  C0A4  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4459   001D74  C0AD  F01E         	movff	RGB_to_HSV@g,___flsub@a
  4460   001D78  C0AE  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  4461   001D7C  C0AF  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  4462   001D80  C0B0  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  4463   001D84  C0A9  F01A         	movff	RGB_to_HSV@r,___flsub@b
  4464   001D88  C0AA  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  4465   001D8C  C0AB  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  4466   001D90  C0AC  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  4467   001D94  EC67  F025         	call	___flsub	;wreg free
  4468   001D98  C01A  F022         	movff	?___flsub,___fldiv@b
  4469   001D9C  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4470   001DA0  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4471   001DA4  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4472   001DA8  EC05  F019         	call	___fldiv	;wreg free
  4473   001DAC  C022  F099         	movff	?___fldiv,_RGB_to_HSV$2717
  4474   001DB0  C023  F09A         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4475   001DB4  C024  F09B         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4476   001DB8  C025  F09C         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4477   001DBC  0E00               	movlw	0
  4478   001DBE  6E05               	movwf	___fladd@a^0,c
  4479   001DC0  0E00               	movlw	0
  4480   001DC2  6E06               	movwf	(___fladd@a+1)^0,c
  4481   001DC4  0E80               	movlw	128
  4482   001DC6  6E07               	movwf	(___fladd@a+2)^0,c
  4483   001DC8  0E40               	movlw	64
  4484   001DCA  6E08               	movwf	(___fladd@a+3)^0,c
  4485   001DCC  C099  F001         	movff	_RGB_to_HSV$2717,___fladd@b
  4486   001DD0  C09A  F002         	movff	_RGB_to_HSV$2717+1,___fladd@b+1
  4487   001DD4  C09B  F003         	movff	_RGB_to_HSV$2717+2,___fladd@b+2
  4488   001DD8  C09C  F004         	movff	_RGB_to_HSV$2717+3,___fladd@b+3
  4489   001DDC  EC90  F014         	call	___fladd	;wreg free
  4490   001DE0  C001  F03B         	movff	?___fladd,___flmul@b
  4491   001DE4  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4492   001DE8  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4493   001DEC  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4494   001DF0  0E00               	movlw	0
  4495   001DF2  6E3F               	movwf	___flmul@a^0,c
  4496   001DF4  0E00               	movlw	0
  4497   001DF6  6E40               	movwf	(___flmul@a+1)^0,c
  4498   001DF8  0E70               	movlw	112
  4499   001DFA  6E41               	movwf	(___flmul@a+2)^0,c
  4500   001DFC  0E42               	movlw	66
  4501   001DFE  6E42               	movwf	(___flmul@a+3)^0,c
  4502   001E00  ECF0  F016         	call	___flmul	;wreg free
  4503   001E04  C03B  F09D         	movff	?___flmul,RGB_to_HSV@H_temp
  4504   001E08  C03C  F09E         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4505   001E0C  C03D  F09F         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4506   001E10  C03E  F0A0         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4507   001E14  EF0C  F00F         	goto	l3710
  4508   001E18                     l80:
  4509   001E18                     l3710:
  4510                           
  4511                           ;color.c: 150:     if (H_temp < 0) {H_temp = H_temp + 360;}
  4512   001E18  0100               	movlb	0	; () banked
  4513   001E1A  BFA0               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  4514   001E1C  EF14  F00F         	goto	u3830
  4515   001E20  EF12  F00F         	goto	u3831
  4516   001E24                     u3831:
  4517   001E24  EF2E  F00F         	goto	l3714
  4518   001E28                     u3830:
  4519   001E28                     
  4520                           ; BSR set to: 0
  4521   001E28  C09D  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  4522   001E2C  C09E  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  4523   001E30  C09F  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  4524   001E34  C0A0  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  4525   001E38  0E00               	movlw	0
  4526   001E3A  6E05               	movwf	___fladd@a^0,c
  4527   001E3C  0E00               	movlw	0
  4528   001E3E  6E06               	movwf	(___fladd@a+1)^0,c
  4529   001E40  0EB4               	movlw	180
  4530   001E42  6E07               	movwf	(___fladd@a+2)^0,c
  4531   001E44  0E43               	movlw	67
  4532   001E46  6E08               	movwf	(___fladd@a+3)^0,c
  4533   001E48  EC90  F014         	call	___fladd	;wreg free
  4534   001E4C  C001  F09D         	movff	?___fladd,RGB_to_HSV@H_temp
  4535   001E50  C002  F09E         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  4536   001E54  C003  F09F         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  4537   001E58  C004  F0A0         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  4538   001E5C                     l3714:
  4539                           
  4540                           ;color.c: 153:     *H = H_temp;
  4541   001E5C  0100               	movlb	0	; () banked
  4542   001E5E  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  4543   001E60  6ED9               	movwf	fsr2l,c
  4544   001E62  6ADA               	clrf	fsr2h,c
  4545   001E64  C09D  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  4546   001E68  C09E  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  4547   001E6C  C09F  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  4548   001E70  C0A0  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  4549   001E74                     
  4550                           ; BSR set to: 0
  4551                           ;color.c: 156:     if (maxRGB == 0) {*S = 0;}
  4552   001E74  C0A5  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4553   001E78  C0A6  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4554   001E7C  C0A7  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4555   001E80  C0A8  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4556   001E84  0E00               	movlw	0
  4557   001E86  6E05               	movwf	___fleq@ff2^0,c
  4558   001E88  0E00               	movlw	0
  4559   001E8A  6E06               	movwf	(___fleq@ff2+1)^0,c
  4560   001E8C  0E00               	movlw	0
  4561   001E8E  6E07               	movwf	(___fleq@ff2+2)^0,c
  4562   001E90  0E00               	movlw	0
  4563   001E92  6E08               	movwf	(___fleq@ff2+3)^0,c
  4564   001E94  ECBF  F023         	call	___fleq	;wreg free
  4565   001E98  A0D8               	btfss	status,0,c
  4566   001E9A  EF51  F00F         	goto	u3841
  4567   001E9E  EF53  F00F         	goto	u3840
  4568   001EA2                     u3841:
  4569   001EA2  EF61  F00F         	goto	l3720
  4570   001EA6                     u3840:
  4571   001EA6  0100               	movlb	0	; () banked
  4572   001EA8  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4573   001EAA  6ED9               	movwf	fsr2l,c
  4574   001EAC  6ADA               	clrf	fsr2h,c
  4575   001EAE  0E00               	movlw	0
  4576   001EB0  6EDE               	movwf	postinc2,c
  4577   001EB2  0E00               	movlw	0
  4578   001EB4  6EDE               	movwf	postinc2,c
  4579   001EB6  0E00               	movlw	0
  4580   001EB8  6EDE               	movwf	postinc2,c
  4581   001EBA  0E00               	movlw	0
  4582   001EBC  6EDD               	movwf	postdec2,c
  4583   001EBE  EF91  F00F         	goto	l86
  4584   001EC2                     l3720:
  4585                           
  4586                           ;color.c: 159:         *S = (deltaRGB/maxRGB) * 100;
  4587   001EC2  C0A5  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  4588   001EC6  C0A6  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  4589   001ECA  C0A7  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  4590   001ECE  C0A8  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  4591   001ED2  C0A1  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  4592   001ED6  C0A2  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  4593   001EDA  C0A3  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  4594   001EDE  C0A4  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  4595   001EE2  EC05  F019         	call	___fldiv	;wreg free
  4596   001EE6  C022  F03B         	movff	?___fldiv,___flmul@b
  4597   001EEA  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  4598   001EEE  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  4599   001EF2  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  4600   001EF6  0E00               	movlw	0
  4601   001EF8  6E3F               	movwf	___flmul@a^0,c
  4602   001EFA  0E00               	movlw	0
  4603   001EFC  6E40               	movwf	(___flmul@a+1)^0,c
  4604   001EFE  0EC8               	movlw	200
  4605   001F00  6E41               	movwf	(___flmul@a+2)^0,c
  4606   001F02  0E42               	movlw	66
  4607   001F04  6E42               	movwf	(___flmul@a+3)^0,c
  4608   001F06  ECF0  F016         	call	___flmul	;wreg free
  4609   001F0A  0100               	movlb	0	; () banked
  4610   001F0C  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4611   001F0E  6ED9               	movwf	fsr2l,c
  4612   001F10  6ADA               	clrf	fsr2h,c
  4613   001F12  C03B  FFDE         	movff	?___flmul,postinc2
  4614   001F16  C03C  FFDE         	movff	?___flmul+1,postinc2
  4615   001F1A  C03D  FFDE         	movff	?___flmul+2,postinc2
  4616   001F1E  C03E  FFDE         	movff	?___flmul+3,postinc2
  4617   001F22                     l86:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;color.c: 163:     *V = maxRGB * 100;
  4621   001F22  C0A5  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  4622   001F26  C0A6  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  4623   001F2A  C0A7  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  4624   001F2E  C0A8  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  4625   001F32  0E00               	movlw	0
  4626   001F34  6E3F               	movwf	___flmul@a^0,c
  4627   001F36  0E00               	movlw	0
  4628   001F38  6E40               	movwf	(___flmul@a+1)^0,c
  4629   001F3A  0EC8               	movlw	200
  4630   001F3C  6E41               	movwf	(___flmul@a+2)^0,c
  4631   001F3E  0E42               	movlw	66
  4632   001F40  6E42               	movwf	(___flmul@a+3)^0,c
  4633   001F42  ECF0  F016         	call	___flmul	;wreg free
  4634   001F46  0100               	movlb	0	; () banked
  4635   001F48  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  4636   001F4A  6ED9               	movwf	fsr2l,c
  4637   001F4C  6ADA               	clrf	fsr2h,c
  4638   001F4E  C03B  FFDE         	movff	?___flmul,postinc2
  4639   001F52  C03C  FFDE         	movff	?___flmul+1,postinc2
  4640   001F56  C03D  FFDE         	movff	?___flmul+2,postinc2
  4641   001F5A  C03E  FFDE         	movff	?___flmul+3,postinc2
  4642   001F5E                     
  4643                           ; BSR set to: 0
  4644   001F5E  0012               	return		;funcret
  4645   001F60                     __end_of_RGB_to_HSV:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _custom_floatmodulo *****************
  4649 ;; Defined at:
  4650 ;;		line 106 in file "color.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  x               4   83[COMRAM] float 
  4653 ;;  y               4   87[COMRAM] float 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;  remainder       4    4[BANK0 ] float 
  4656 ;;  quotient        4    0[BANK0 ] float 
  4657 ;;  intPart         2    8[BANK0 ] int 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  4   83[COMRAM] float 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4667 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4668 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;Total ram usage:       18 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; Hardware stack levels required when called: 2
  4674 ;; This function calls:
  4675 ;;		___fldiv
  4676 ;;		___fleq
  4677 ;;		___flmul
  4678 ;;		___flsub
  4679 ;;		___fltol
  4680 ;;		___xxtofl
  4681 ;; This function is called by:
  4682 ;;		_RGB_to_HSV
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text18
  4687   004220                     __ptext18:
  4688                           	callstack 0
  4689   004220                     _custom_floatmodulo:
  4690                           	callstack 25
  4691   004220                     
  4692                           ;color.c: 108:     if (y == 0.0) {
  4693   004220  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  4694   004224  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  4695   004228  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  4696   00422C  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  4697   004230  0E00               	movlw	0
  4698   004232  6E05               	movwf	___fleq@ff2^0,c
  4699   004234  0E00               	movlw	0
  4700   004236  6E06               	movwf	(___fleq@ff2+1)^0,c
  4701   004238  0E00               	movlw	0
  4702   00423A  6E07               	movwf	(___fleq@ff2+2)^0,c
  4703   00423C  0E00               	movlw	0
  4704   00423E  6E08               	movwf	(___fleq@ff2+3)^0,c
  4705   004240  ECBF  F023         	call	___fleq	;wreg free
  4706   004244  A0D8               	btfss	status,0,c
  4707   004246  EF27  F021         	goto	u3641
  4708   00424A  EF29  F021         	goto	u3640
  4709   00424E                     u3641:
  4710   00424E  EF33  F021         	goto	l3570
  4711   004252                     u3640:
  4712   004252                     
  4713                           ;color.c: 109:         return 0.0;
  4714   004252  0E00               	movlw	0
  4715   004254  6E54               	movwf	?_custom_floatmodulo^0,c
  4716   004256  0E00               	movlw	0
  4717   004258  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  4718   00425A  0E00               	movlw	0
  4719   00425C  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  4720   00425E  0E00               	movlw	0
  4721   004260  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  4722   004262  EF9B  F021         	goto	l50
  4723   004266                     l3570:
  4724                           
  4725                           ;color.c: 113:     float quotient = x / y;
  4726   004266  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  4727   00426A  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  4728   00426E  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  4729   004272  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  4730   004276  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  4731   00427A  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  4732   00427E  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  4733   004282  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  4734   004286  EC05  F019         	call	___fldiv	;wreg free
  4735   00428A  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  4736   00428E  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  4737   004292  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  4738   004296  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  4739                           
  4740                           ;color.c: 116:     int intPart = (int)quotient;
  4741   00429A  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  4742   00429E  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  4743   0042A2  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  4744   0042A6  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  4745   0042AA  EC9C  F021         	call	___fltol	;wreg free
  4746   0042AE  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  4747   0042B2  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  4748   0042B6                     
  4749                           ;color.c: 119:     float remainder = x - intPart * y;
  4750   0042B6  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  4751   0042BA  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  4752   0042BE  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  4753   0042C2  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  4754   0042C6  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  4755   0042CA  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  4756   0042CE  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  4757   0042D2  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  4758   0042D6  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  4759   0042DA  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  4760   0042DE  0E00               	movlw	0
  4761   0042E0  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  4762   0042E2  0EFF               	movlw	-1
  4763   0042E4  6E0E               	movwf	(___xxtofl@val+2)^0,c
  4764   0042E6  6E0F               	movwf	(___xxtofl@val+3)^0,c
  4765   0042E8  0E01               	movlw	1
  4766   0042EA  ECE9  F01B         	call	___xxtofl
  4767   0042EE  C00C  F03B         	movff	?___xxtofl,___flmul@b
  4768   0042F2  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  4769   0042F6  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  4770   0042FA  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  4771   0042FE  ECF0  F016         	call	___flmul	;wreg free
  4772   004302  C03B  F01E         	movff	?___flmul,___flsub@a
  4773   004306  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  4774   00430A  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  4775   00430E  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  4776   004312  EC67  F025         	call	___flsub	;wreg free
  4777   004316  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  4778   00431A  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  4779   00431E  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  4780   004322  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  4781   004326                     
  4782                           ;color.c: 121:     return remainder;
  4783   004326  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  4784   00432A  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  4785   00432E  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  4786   004332  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  4787   004336                     l50:
  4788   004336  0012               	return		;funcret
  4789   004338                     __end_of_custom_floatmodulo:
  4790                           	callstack 0
  4791                           
  4792 ;; *************** function ___xxtofl *****************
  4793 ;; Defined at:
  4794 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  sign            1    wreg     unsigned char 
  4797 ;;  val             4   11[COMRAM] long 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  sign            1   19[COMRAM] unsigned char 
  4800 ;;  arg             4   21[COMRAM] unsigned long 
  4801 ;;  exp             1   20[COMRAM] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  4   11[COMRAM] unsigned char 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;Total ram usage:       14 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_custom_floatmodulo
  4821 ;;		_color_cardCheck
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text19
  4826   0037D2                     __ptext19:
  4827                           	callstack 0
  4828   0037D2                     ___xxtofl:
  4829                           	callstack 28
  4830                           
  4831                           ;incstack = 0
  4832                           ;___xxtofl@sign stored from wreg
  4833   0037D2  6E14               	movwf	___xxtofl@sign^0,c
  4834   0037D4  5014               	movf	___xxtofl@sign^0,w,c
  4835   0037D6  B4D8               	btfsc	status,2,c
  4836   0037D8  EFF0  F01B         	goto	u3521
  4837   0037DC  EFF2  F01B         	goto	u3520
  4838   0037E0                     u3521:
  4839   0037E0  EF14  F01C         	goto	l1254
  4840   0037E4                     u3520:
  4841   0037E4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4842   0037E6  EFF9  F01B         	goto	u3530
  4843   0037EA  EFF7  F01B         	goto	u3531
  4844   0037EE                     u3531:
  4845   0037EE  EF14  F01C         	goto	l1254
  4846   0037F2                     u3530:
  4847   0037F2  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4848   0037F6  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4849   0037FA  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4850   0037FE  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4851   003802  1E10               	comf	??___xxtofl^0,f,c
  4852   003804  1E11               	comf	(??___xxtofl+1)^0,f,c
  4853   003806  1E12               	comf	(??___xxtofl+2)^0,f,c
  4854   003808  1E13               	comf	(??___xxtofl+3)^0,f,c
  4855   00380A  2A10               	incf	??___xxtofl^0,f,c
  4856   00380C  0E00               	movlw	0
  4857   00380E  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4858   003810  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4859   003812  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4860   003814  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4861   003818  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4862   00381C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4863   003820  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4864   003824  EF1C  F01C         	goto	l3494
  4865   003828                     l1254:
  4866   003828  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4867   00382C  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4868   003830  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4869   003834  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4870   003838                     l3494:
  4871   003838  500C               	movf	___xxtofl@val^0,w,c
  4872   00383A  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4873   00383C  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4874   00383E  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4875   003840  A4D8               	btfss	status,2,c
  4876   003842  EF25  F01C         	goto	u3541
  4877   003846  EF27  F01C         	goto	u3540
  4878   00384A                     u3541:
  4879   00384A  EF31  F01C         	goto	l3500
  4880   00384E                     u3540:
  4881   00384E  0E00               	movlw	0
  4882   003850  6E0C               	movwf	?___xxtofl^0,c
  4883   003852  0E00               	movlw	0
  4884   003854  6E0D               	movwf	(?___xxtofl+1)^0,c
  4885   003856  0E00               	movlw	0
  4886   003858  6E0E               	movwf	(?___xxtofl+2)^0,c
  4887   00385A  0E00               	movlw	0
  4888   00385C  6E0F               	movwf	(?___xxtofl+3)^0,c
  4889   00385E  EFC2  F01C         	goto	l1257
  4890   003862                     l3500:
  4891   003862  0E96               	movlw	150
  4892   003864  6E15               	movwf	___xxtofl@exp^0,c
  4893   003866  EF3B  F01C         	goto	l3504
  4894   00386A                     l3502:
  4895   00386A  2A15               	incf	___xxtofl@exp^0,f,c
  4896   00386C  90D8               	bcf	status,0,c
  4897   00386E  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4898   003870  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4899   003872  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4900   003874  3216               	rrcf	___xxtofl@arg^0,f,c
  4901   003876                     l3504:
  4902   003876  0E00               	movlw	0
  4903   003878  1416               	andwf	___xxtofl@arg^0,w,c
  4904   00387A  6E10               	movwf	??___xxtofl^0,c
  4905   00387C  0E00               	movlw	0
  4906   00387E  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4907   003880  6E11               	movwf	(??___xxtofl+1)^0,c
  4908   003882  0E00               	movlw	0
  4909   003884  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4910   003886  6E12               	movwf	(??___xxtofl+2)^0,c
  4911   003888  0EFE               	movlw	254
  4912   00388A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4913   00388C  6E13               	movwf	(??___xxtofl+3)^0,c
  4914   00388E  5010               	movf	??___xxtofl^0,w,c
  4915   003890  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4916   003892  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4917   003894  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4918   003896  A4D8               	btfss	status,2,c
  4919   003898  EF50  F01C         	goto	u3551
  4920   00389C  EF52  F01C         	goto	u3550
  4921   0038A0                     u3551:
  4922   0038A0  EF35  F01C         	goto	l3502
  4923   0038A4                     u3550:
  4924   0038A4  EF60  F01C         	goto	l1261
  4925   0038A8                     l3506:
  4926   0038A8  2A15               	incf	___xxtofl@exp^0,f,c
  4927   0038AA  0E01               	movlw	1
  4928   0038AC  2616               	addwf	___xxtofl@arg^0,f,c
  4929   0038AE  0E00               	movlw	0
  4930   0038B0  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  4931   0038B2  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  4932   0038B4  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  4933   0038B6  90D8               	bcf	status,0,c
  4934   0038B8  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4935   0038BA  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4936   0038BC  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4937   0038BE  3216               	rrcf	___xxtofl@arg^0,f,c
  4938   0038C0                     l1261:
  4939   0038C0  0E00               	movlw	0
  4940   0038C2  1416               	andwf	___xxtofl@arg^0,w,c
  4941   0038C4  6E10               	movwf	??___xxtofl^0,c
  4942   0038C6  0E00               	movlw	0
  4943   0038C8  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4944   0038CA  6E11               	movwf	(??___xxtofl+1)^0,c
  4945   0038CC  0E00               	movlw	0
  4946   0038CE  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4947   0038D0  6E12               	movwf	(??___xxtofl+2)^0,c
  4948   0038D2  0EFF               	movlw	255
  4949   0038D4  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4950   0038D6  6E13               	movwf	(??___xxtofl+3)^0,c
  4951   0038D8  5010               	movf	??___xxtofl^0,w,c
  4952   0038DA  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4953   0038DC  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4954   0038DE  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4955   0038E0  A4D8               	btfss	status,2,c
  4956   0038E2  EF75  F01C         	goto	u3561
  4957   0038E6  EF77  F01C         	goto	u3560
  4958   0038EA                     u3561:
  4959   0038EA  EF54  F01C         	goto	l3506
  4960   0038EE                     u3560:
  4961   0038EE  EF7F  F01C         	goto	l3514
  4962   0038F2                     l3512:
  4963   0038F2  0615               	decf	___xxtofl@exp^0,f,c
  4964   0038F4  90D8               	bcf	status,0,c
  4965   0038F6  3616               	rlcf	___xxtofl@arg^0,f,c
  4966   0038F8  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  4967   0038FA  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  4968   0038FC  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  4969   0038FE                     l3514:
  4970   0038FE  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  4971   003900  EF84  F01C         	goto	u3571
  4972   003904  EF86  F01C         	goto	u3570
  4973   003908                     u3571:
  4974   003908  EF8E  F01C         	goto	l1268
  4975   00390C                     u3570:
  4976   00390C  0E02               	movlw	2
  4977   00390E  6015               	cpfslt	___xxtofl@exp^0,c
  4978   003910  EF8C  F01C         	goto	u3581
  4979   003914  EF8E  F01C         	goto	u3580
  4980   003918                     u3581:
  4981   003918  EF79  F01C         	goto	l3512
  4982   00391C                     u3580:
  4983   00391C                     l1268:
  4984   00391C  B015               	btfsc	___xxtofl@exp^0,0,c
  4985   00391E  EF93  F01C         	goto	u3591
  4986   003922  EF95  F01C         	goto	u3590
  4987   003926                     u3591:
  4988   003926  EF96  F01C         	goto	l3520
  4989   00392A                     u3590:
  4990   00392A  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  4991   00392C                     l3520:
  4992   00392C  90D8               	bcf	status,0,c
  4993   00392E  3215               	rrcf	___xxtofl@exp^0,f,c
  4994   003930  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  4995   003934  6A11               	clrf	(??___xxtofl+1)^0,c
  4996   003936  6A12               	clrf	(??___xxtofl+2)^0,c
  4997   003938  6A13               	clrf	(??___xxtofl+3)^0,c
  4998   00393A  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  4999   00393E  6A12               	clrf	(??___xxtofl+2)^0,c
  5000   003940  6A11               	clrf	(??___xxtofl+1)^0,c
  5001   003942  6A10               	clrf	??___xxtofl^0,c
  5002   003944  5010               	movf	??___xxtofl^0,w,c
  5003   003946  1216               	iorwf	___xxtofl@arg^0,f,c
  5004   003948  5011               	movf	(??___xxtofl+1)^0,w,c
  5005   00394A  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  5006   00394C  5012               	movf	(??___xxtofl+2)^0,w,c
  5007   00394E  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  5008   003950  5013               	movf	(??___xxtofl+3)^0,w,c
  5009   003952  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  5010   003954  5014               	movf	___xxtofl@sign^0,w,c
  5011   003956  B4D8               	btfsc	status,2,c
  5012   003958  EFB0  F01C         	goto	u3601
  5013   00395C  EFB2  F01C         	goto	u3600
  5014   003960                     u3601:
  5015   003960  EFBA  F01C         	goto	l3530
  5016   003964                     u3600:
  5017   003964  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5018   003966  EFB9  F01C         	goto	u3610
  5019   00396A  EFB7  F01C         	goto	u3611
  5020   00396E                     u3611:
  5021   00396E  EFBA  F01C         	goto	l3530
  5022   003972                     u3610:
  5023   003972  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  5024   003974                     l3530:
  5025   003974  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  5026   003978  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5027   00397C  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5028   003980  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5029   003984                     l1257:
  5030   003984  0012               	return		;funcret
  5031   003986                     __end_of___xxtofl:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function ___fltol *****************
  5035 ;; Defined at:
  5036 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  f1              4    0[COMRAM] unsigned char 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  exp1            1    9[COMRAM] unsigned char 
  5041 ;;  sign1           1    8[COMRAM] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  4    0[COMRAM] long 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;Total ram usage:       10 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_custom_floatmodulo
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text20
  5065   004338                     __ptext20:
  5066                           	callstack 0
  5067   004338                     ___fltol:
  5068                           	callstack 26
  5069   004338  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5070   00433A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5071   00433C  6E0A               	movwf	___fltol@exp1^0,c
  5072   00433E  500A               	movf	___fltol@exp1^0,w,c
  5073   004340  A4D8               	btfss	status,2,c
  5074   004342  EFA5  F021         	goto	u3451
  5075   004346  EFA7  F021         	goto	u3450
  5076   00434A                     u3451:
  5077   00434A  EFB1  F021         	goto	l3450
  5078   00434E                     u3450:
  5079   00434E                     l3446:
  5080   00434E  0E00               	movlw	0
  5081   004350  6E01               	movwf	?___fltol^0,c
  5082   004352  0E00               	movlw	0
  5083   004354  6E02               	movwf	(?___fltol+1)^0,c
  5084   004356  0E00               	movlw	0
  5085   004358  6E03               	movwf	(?___fltol+2)^0,c
  5086   00435A  0E00               	movlw	0
  5087   00435C  6E04               	movwf	(?___fltol+3)^0,c
  5088   00435E  EF1E  F022         	goto	l896
  5089   004362                     l3450:
  5090   004362  C001  F005         	movff	___fltol@f1,??___fltol
  5091   004366  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5092   00436A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5093   00436E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5094   004372  0E20               	movlw	32
  5095   004374  EFC1  F021         	goto	u3460
  5096   004378                     u3465:
  5097   004378  90D8               	bcf	status,0,c
  5098   00437A  3208               	rrcf	(??___fltol+3)^0,f,c
  5099   00437C  3207               	rrcf	(??___fltol+2)^0,f,c
  5100   00437E  3206               	rrcf	(??___fltol+1)^0,f,c
  5101   004380  3205               	rrcf	??___fltol^0,f,c
  5102   004382                     u3460:
  5103   004382  2EE8               	decfsz	wreg,f,c
  5104   004384  EFBC  F021         	goto	u3465
  5105   004388  5005               	movf	??___fltol^0,w,c
  5106   00438A  6E09               	movwf	___fltol@sign1^0,c
  5107   00438C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5108   00438E  0EFF               	movlw	255
  5109   004390  1601               	andwf	___fltol@f1^0,f,c
  5110   004392  0EFF               	movlw	255
  5111   004394  1602               	andwf	(___fltol@f1+1)^0,f,c
  5112   004396  0EFF               	movlw	255
  5113   004398  1603               	andwf	(___fltol@f1+2)^0,f,c
  5114   00439A  0E00               	movlw	0
  5115   00439C  1604               	andwf	(___fltol@f1+3)^0,f,c
  5116   00439E  0E96               	movlw	150
  5117   0043A0  5E0A               	subwf	___fltol@exp1^0,f,c
  5118   0043A2  BE0A               	btfsc	___fltol@exp1^0,7,c
  5119   0043A4  EFD8  F021         	goto	u3470
  5120   0043A8  EFD6  F021         	goto	u3471
  5121   0043AC                     u3471:
  5122   0043AC  EFEE  F021         	goto	l3470
  5123   0043B0                     u3470:
  5124   0043B0  500A               	movf	___fltol@exp1^0,w,c
  5125   0043B2  0A80               	xorlw	128
  5126   0043B4  0F97               	addlw	151
  5127   0043B6  B0D8               	btfsc	status,0,c
  5128   0043B8  EFE0  F021         	goto	u3481
  5129   0043BC  EFE2  F021         	goto	u3480
  5130   0043C0                     u3481:
  5131   0043C0  EFE4  F021         	goto	l3466
  5132   0043C4                     u3480:
  5133   0043C4  EFA7  F021         	goto	l3446
  5134   0043C8                     l3466:
  5135   0043C8  90D8               	bcf	status,0,c
  5136   0043CA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5137   0043CC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5138   0043CE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5139   0043D0  3201               	rrcf	___fltol@f1^0,f,c
  5140   0043D2  3E0A               	incfsz	___fltol@exp1^0,f,c
  5141   0043D4  EFE4  F021         	goto	l3466
  5142   0043D8  EF06  F022         	goto	l3480
  5143   0043DC                     l3470:
  5144   0043DC  0E1F               	movlw	31
  5145   0043DE  640A               	cpfsgt	___fltol@exp1^0,c
  5146   0043E0  EFF4  F021         	goto	u3491
  5147   0043E4  EFF6  F021         	goto	u3490
  5148   0043E8                     u3491:
  5149   0043E8  EFFE  F021         	goto	l3478
  5150   0043EC                     u3490:
  5151   0043EC  EFA7  F021         	goto	l3446
  5152   0043F0                     l3476:
  5153   0043F0  90D8               	bcf	status,0,c
  5154   0043F2  3601               	rlcf	___fltol@f1^0,f,c
  5155   0043F4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5156   0043F6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5157   0043F8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5158   0043FA  060A               	decf	___fltol@exp1^0,f,c
  5159   0043FC                     l3478:
  5160   0043FC  500A               	movf	___fltol@exp1^0,w,c
  5161   0043FE  A4D8               	btfss	status,2,c
  5162   004400  EF04  F022         	goto	u3501
  5163   004404  EF06  F022         	goto	u3500
  5164   004408                     u3501:
  5165   004408  EFF8  F021         	goto	l3476
  5166   00440C                     u3500:
  5167   00440C                     l3480:
  5168   00440C  5009               	movf	___fltol@sign1^0,w,c
  5169   00440E  B4D8               	btfsc	status,2,c
  5170   004410  EF0C  F022         	goto	u3511
  5171   004414  EF0E  F022         	goto	u3510
  5172   004418                     u3511:
  5173   004418  EF16  F022         	goto	l3484
  5174   00441C                     u3510:
  5175   00441C  1E04               	comf	(___fltol@f1+3)^0,f,c
  5176   00441E  1E03               	comf	(___fltol@f1+2)^0,f,c
  5177   004420  1E02               	comf	(___fltol@f1+1)^0,f,c
  5178   004422  6C01               	negf	___fltol@f1^0,c
  5179   004424  0E00               	movlw	0
  5180   004426  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5181   004428  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5182   00442A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5183   00442C                     l3484:
  5184   00442C  C001  F001         	movff	___fltol@f1,?___fltol
  5185   004430  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5186   004434  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5187   004438  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5188   00443C                     l896:
  5189   00443C  0012               	return		;funcret
  5190   00443E                     __end_of___fltol:
  5191                           	callstack 0
  5192                           
  5193 ;; *************** function ___flsub *****************
  5194 ;; Defined at:
  5195 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  b               4   25[COMRAM] long 
  5198 ;;  a               4   29[COMRAM] long 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  4   25[COMRAM] long 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5210 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;Total ram usage:        8 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 1
  5217 ;; This function calls:
  5218 ;;		___fladd
  5219 ;; This function is called by:
  5220 ;;		_custom_floatmodulo
  5221 ;;		_RGB_to_HSV
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text21
  5226   004ACE                     __ptext21:
  5227                           	callstack 0
  5228   004ACE                     ___flsub:
  5229                           	callstack 25
  5230   004ACE  0E00               	movlw	0
  5231   004AD0  1A1E               	xorwf	___flsub@a^0,f,c
  5232   004AD2  0E00               	movlw	0
  5233   004AD4  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5234   004AD6  0E00               	movlw	0
  5235   004AD8  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5236   004ADA  0E80               	movlw	128
  5237   004ADC  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5238   004ADE  C01A  F001         	movff	___flsub@b,___fladd@b
  5239   004AE2  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5240   004AE6  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5241   004AEA  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5242   004AEE  C01E  F005         	movff	___flsub@a,___fladd@a
  5243   004AF2  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5244   004AF6  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5245   004AFA  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5246   004AFE  EC90  F014         	call	___fladd	;wreg free
  5247   004B02  C001  F01A         	movff	?___fladd,?___flsub
  5248   004B06  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5249   004B0A  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5250   004B0E  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5251   004B12  0012               	return		;funcret
  5252   004B14                     __end_of___flsub:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function ___fladd *****************
  5256 ;; Defined at:
  5257 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  b               4    0[COMRAM] long 
  5260 ;;  a               4    4[COMRAM] long 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  grs             1   15[COMRAM] unsigned char 
  5263 ;;  bexp            1   14[COMRAM] unsigned char 
  5264 ;;  aexp            1   13[COMRAM] unsigned char 
  5265 ;;  signs           1   12[COMRAM] unsigned char 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  4    0[COMRAM] unsigned char 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5278 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;Total ram usage:       16 bytes
  5280 ;; Hardware stack levels used: 1
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_RGB_to_HSV
  5285 ;;		___flsub
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text22
  5290   002920                     __ptext22:
  5291                           	callstack 0
  5292   002920                     ___fladd:
  5293                           	callstack 25
  5294   002920  5004               	movf	(___fladd@b+3)^0,w,c
  5295   002922  0B80               	andlw	128
  5296   002924  6E0D               	movwf	___fladd@signs^0,c
  5297   002926  5004               	movf	(___fladd@b+3)^0,w,c
  5298   002928  2404               	addwf	(___fladd@b+3)^0,w,c
  5299   00292A  6E0F               	movwf	___fladd@bexp^0,c
  5300   00292C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5301   00292E  EF9B  F014         	goto	u2591
  5302   002932  EF9D  F014         	goto	u2590
  5303   002936                     u2591:
  5304   002936  EF9E  F014         	goto	l2954
  5305   00293A                     u2590:
  5306   00293A  800F               	bsf	___fladd@bexp^0,0,c
  5307   00293C                     l2954:
  5308   00293C  500F               	movf	___fladd@bexp^0,w,c
  5309   00293E  B4D8               	btfsc	status,2,c
  5310   002940  EFA4  F014         	goto	u2601
  5311   002944  EFA6  F014         	goto	u2600
  5312   002948                     u2601:
  5313   002948  EFBB  F014         	goto	l2964
  5314   00294C                     u2600:
  5315   00294C  280F               	incf	___fladd@bexp^0,w,c
  5316   00294E  A4D8               	btfss	status,2,c
  5317   002950  EFAC  F014         	goto	u2611
  5318   002954  EFAE  F014         	goto	u2610
  5319   002958                     u2611:
  5320   002958  EFB6  F014         	goto	l2960
  5321   00295C                     u2610:
  5322   00295C  0E00               	movlw	0
  5323   00295E  6E01               	movwf	___fladd@b^0,c
  5324   002960  0E00               	movlw	0
  5325   002962  6E02               	movwf	(___fladd@b+1)^0,c
  5326   002964  0E00               	movlw	0
  5327   002966  6E03               	movwf	(___fladd@b+2)^0,c
  5328   002968  0E00               	movlw	0
  5329   00296A  6E04               	movwf	(___fladd@b+3)^0,c
  5330   00296C                     l2960:
  5331   00296C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5332   00296E  0E00               	movlw	0
  5333   002970  6E04               	movwf	(___fladd@b+3)^0,c
  5334   002972  EFC3  F014         	goto	l2966
  5335   002976                     l2964:
  5336   002976  0E00               	movlw	0
  5337   002978  6E01               	movwf	___fladd@b^0,c
  5338   00297A  0E00               	movlw	0
  5339   00297C  6E02               	movwf	(___fladd@b+1)^0,c
  5340   00297E  0E00               	movlw	0
  5341   002980  6E03               	movwf	(___fladd@b+2)^0,c
  5342   002982  0E00               	movlw	0
  5343   002984  6E04               	movwf	(___fladd@b+3)^0,c
  5344   002986                     l2966:
  5345   002986  5008               	movf	(___fladd@a+3)^0,w,c
  5346   002988  0B80               	andlw	128
  5347   00298A  6E0E               	movwf	___fladd@aexp^0,c
  5348   00298C  500D               	movf	___fladd@signs^0,w,c
  5349   00298E  180E               	xorwf	___fladd@aexp^0,w,c
  5350   002990  B4D8               	btfsc	status,2,c
  5351   002992  EFCD  F014         	goto	u2621
  5352   002996  EFCF  F014         	goto	u2620
  5353   00299A                     u2621:
  5354   00299A  EFD0  F014         	goto	l2972
  5355   00299E                     u2620:
  5356   00299E  8C0D               	bsf	___fladd@signs^0,6,c
  5357   0029A0                     l2972:
  5358   0029A0  5008               	movf	(___fladd@a+3)^0,w,c
  5359   0029A2  2408               	addwf	(___fladd@a+3)^0,w,c
  5360   0029A4  6E0E               	movwf	___fladd@aexp^0,c
  5361   0029A6  AE07               	btfss	(___fladd@a+2)^0,7,c
  5362   0029A8  EFD8  F014         	goto	u2631
  5363   0029AC  EFDA  F014         	goto	u2630
  5364   0029B0                     u2631:
  5365   0029B0  EFDB  F014         	goto	l2978
  5366   0029B4                     u2630:
  5367   0029B4  800E               	bsf	___fladd@aexp^0,0,c
  5368   0029B6                     l2978:
  5369   0029B6  500E               	movf	___fladd@aexp^0,w,c
  5370   0029B8  B4D8               	btfsc	status,2,c
  5371   0029BA  EFE1  F014         	goto	u2641
  5372   0029BE  EFE3  F014         	goto	u2640
  5373   0029C2                     u2641:
  5374   0029C2  EFF8  F014         	goto	l2988
  5375   0029C6                     u2640:
  5376   0029C6  280E               	incf	___fladd@aexp^0,w,c
  5377   0029C8  A4D8               	btfss	status,2,c
  5378   0029CA  EFE9  F014         	goto	u2651
  5379   0029CE  EFEB  F014         	goto	u2650
  5380   0029D2                     u2651:
  5381   0029D2  EFF3  F014         	goto	l2984
  5382   0029D6                     u2650:
  5383   0029D6  0E00               	movlw	0
  5384   0029D8  6E05               	movwf	___fladd@a^0,c
  5385   0029DA  0E00               	movlw	0
  5386   0029DC  6E06               	movwf	(___fladd@a+1)^0,c
  5387   0029DE  0E00               	movlw	0
  5388   0029E0  6E07               	movwf	(___fladd@a+2)^0,c
  5389   0029E2  0E00               	movlw	0
  5390   0029E4  6E08               	movwf	(___fladd@a+3)^0,c
  5391   0029E6                     l2984:
  5392   0029E6  8E07               	bsf	(___fladd@a+2)^0,7,c
  5393   0029E8  0E00               	movlw	0
  5394   0029EA  6E08               	movwf	(___fladd@a+3)^0,c
  5395   0029EC  EF00  F015         	goto	l2990
  5396   0029F0                     l2988:
  5397   0029F0  0E00               	movlw	0
  5398   0029F2  6E05               	movwf	___fladd@a^0,c
  5399   0029F4  0E00               	movlw	0
  5400   0029F6  6E06               	movwf	(___fladd@a+1)^0,c
  5401   0029F8  0E00               	movlw	0
  5402   0029FA  6E07               	movwf	(___fladd@a+2)^0,c
  5403   0029FC  0E00               	movlw	0
  5404   0029FE  6E08               	movwf	(___fladd@a+3)^0,c
  5405   002A00                     l2990:
  5406   002A00  500F               	movf	___fladd@bexp^0,w,c
  5407   002A02  5C0E               	subwf	___fladd@aexp^0,w,c
  5408   002A04  B0D8               	btfsc	status,0,c
  5409   002A06  EF07  F015         	goto	u2661
  5410   002A0A  EF09  F015         	goto	u2660
  5411   002A0E                     u2661:
  5412   002A0E  EF30  F015         	goto	l3026
  5413   002A12                     u2660:
  5414   002A12  AC0D               	btfss	___fladd@signs^0,6,c
  5415   002A14  EF0E  F015         	goto	u2671
  5416   002A18  EF10  F015         	goto	u2670
  5417   002A1C                     u2671:
  5418   002A1C  EF12  F015         	goto	l2996
  5419   002A20                     u2670:
  5420   002A20  0E80               	movlw	128
  5421   002A22  1A0D               	xorwf	___fladd@signs^0,f,c
  5422   002A24                     l2996:
  5423   002A24  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5424   002A28  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5425   002A2C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5426   002A30  C001  F010         	movff	___fladd@b,___fladd@grs
  5427   002A34  C005  F001         	movff	___fladd@a,___fladd@b
  5428   002A38  C010  F005         	movff	___fladd@grs,___fladd@a
  5429   002A3C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5430   002A40  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5431   002A44  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5432   002A48  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5433   002A4C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5434   002A50  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5435   002A54  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5436   002A58  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5437   002A5C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5438   002A60                     l3026:
  5439   002A60  0E00               	movlw	0
  5440   002A62  6E10               	movwf	___fladd@grs^0,c
  5441   002A64  500F               	movf	___fladd@bexp^0,w,c
  5442   002A66  C00E  F009         	movff	___fladd@aexp,??___fladd
  5443   002A6A  6A0A               	clrf	(??___fladd+1)^0,c
  5444   002A6C  5E09               	subwf	??___fladd^0,f,c
  5445   002A6E  0E00               	movlw	0
  5446   002A70  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5447   002A72  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5448   002A74  EF45  F015         	goto	u2681
  5449   002A78  500A               	movf	(??___fladd+1)^0,w,c
  5450   002A7A  E109               	bnz	u2680
  5451   002A7C  0E1A               	movlw	26
  5452   002A7E  5C09               	subwf	??___fladd^0,w,c
  5453   002A80  A0D8               	btfss	status,0,c
  5454   002A82  EF45  F015         	goto	u2681
  5455   002A86  EF47  F015         	goto	u2680
  5456   002A8A                     u2681:
  5457   002A8A  EF7E  F015         	goto	l1128
  5458   002A8E                     u2680:
  5459   002A8E  5001               	movf	___fladd@b^0,w,c
  5460   002A90  1002               	iorwf	(___fladd@b+1)^0,w,c
  5461   002A92  1003               	iorwf	(___fladd@b+2)^0,w,c
  5462   002A94  1004               	iorwf	(___fladd@b+3)^0,w,c
  5463   002A96  A4D8               	btfss	status,2,c
  5464   002A98  EF50  F015         	goto	u2691
  5465   002A9C  EF53  F015         	goto	u2690
  5466   002AA0                     u2691:
  5467   002AA0  0E01               	movlw	1
  5468   002AA2  EF54  F015         	goto	u2700
  5469   002AA6                     u2690:
  5470   002AA6  0E00               	movlw	0
  5471   002AA8                     u2700:
  5472   002AA8  6E10               	movwf	___fladd@grs^0,c
  5473   002AAA  0E00               	movlw	0
  5474   002AAC  6E01               	movwf	___fladd@b^0,c
  5475   002AAE  0E00               	movlw	0
  5476   002AB0  6E02               	movwf	(___fladd@b+1)^0,c
  5477   002AB2  0E00               	movlw	0
  5478   002AB4  6E03               	movwf	(___fladd@b+2)^0,c
  5479   002AB6  0E00               	movlw	0
  5480   002AB8  6E04               	movwf	(___fladd@b+3)^0,c
  5481   002ABA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5482   002ABE  EF87  F015         	goto	l1127
  5483   002AC2                     l1129:
  5484   002AC2  A010               	btfss	___fladd@grs^0,0,c
  5485   002AC4  EF66  F015         	goto	u2711
  5486   002AC8  EF68  F015         	goto	u2710
  5487   002ACC                     u2711:
  5488   002ACC  EF6E  F015         	goto	l3038
  5489   002AD0                     u2710:
  5490   002AD0  90D8               	bcf	status,0,c
  5491   002AD2  3010               	rrcf	___fladd@grs^0,w,c
  5492   002AD4  0901               	iorlw	1
  5493   002AD6  6E10               	movwf	___fladd@grs^0,c
  5494   002AD8  EF70  F015         	goto	l3040
  5495   002ADC                     l3038:
  5496   002ADC  90D8               	bcf	status,0,c
  5497   002ADE  3210               	rrcf	___fladd@grs^0,f,c
  5498   002AE0                     l3040:
  5499   002AE0  A001               	btfss	___fladd@b^0,0,c
  5500   002AE2  EF75  F015         	goto	u2721
  5501   002AE6  EF77  F015         	goto	u2720
  5502   002AEA                     u2721:
  5503   002AEA  EF78  F015         	goto	l3044
  5504   002AEE                     u2720:
  5505   002AEE  8E10               	bsf	___fladd@grs^0,7,c
  5506   002AF0                     l3044:
  5507   002AF0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5508   002AF2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5509   002AF4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5510   002AF6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5511   002AF8  3201               	rrcf	___fladd@b^0,f,c
  5512   002AFA  2A0F               	incf	___fladd@bexp^0,f,c
  5513   002AFC                     l1128:
  5514   002AFC  500E               	movf	___fladd@aexp^0,w,c
  5515   002AFE  5C0F               	subwf	___fladd@bexp^0,w,c
  5516   002B00  A0D8               	btfss	status,0,c
  5517   002B02  EF85  F015         	goto	u2731
  5518   002B06  EF87  F015         	goto	u2730
  5519   002B0A                     u2731:
  5520   002B0A  EF61  F015         	goto	l1129
  5521   002B0E                     u2730:
  5522   002B0E                     l1127:
  5523   002B0E  BC0D               	btfsc	___fladd@signs^0,6,c
  5524   002B10  EF8C  F015         	goto	u2741
  5525   002B14  EF8E  F015         	goto	u2740
  5526   002B18                     u2741:
  5527   002B18  EFCE  F015         	goto	l3072
  5528   002B1C                     u2740:
  5529   002B1C  500F               	movf	___fladd@bexp^0,w,c
  5530   002B1E  A4D8               	btfss	status,2,c
  5531   002B20  EF94  F015         	goto	u2751
  5532   002B24  EF96  F015         	goto	u2750
  5533   002B28                     u2751:
  5534   002B28  EFA0  F015         	goto	l3054
  5535   002B2C                     u2750:
  5536   002B2C  0E00               	movlw	0
  5537   002B2E  6E01               	movwf	?___fladd^0,c
  5538   002B30  0E00               	movlw	0
  5539   002B32  6E02               	movwf	(?___fladd+1)^0,c
  5540   002B34  0E00               	movlw	0
  5541   002B36  6E03               	movwf	(?___fladd+2)^0,c
  5542   002B38  0E00               	movlw	0
  5543   002B3A  6E04               	movwf	(?___fladd+3)^0,c
  5544   002B3C  EFEF  F016         	goto	l1136
  5545   002B40                     l3054:
  5546   002B40  5005               	movf	___fladd@a^0,w,c
  5547   002B42  2601               	addwf	___fladd@b^0,f,c
  5548   002B44  5006               	movf	(___fladd@a+1)^0,w,c
  5549   002B46  2202               	addwfc	(___fladd@b+1)^0,f,c
  5550   002B48  5007               	movf	(___fladd@a+2)^0,w,c
  5551   002B4A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5552   002B4C  5008               	movf	(___fladd@a+3)^0,w,c
  5553   002B4E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5554   002B50  A004               	btfss	(___fladd@b+3)^0,0,c
  5555   002B52  EFAD  F015         	goto	u2761
  5556   002B56  EFAF  F015         	goto	u2760
  5557   002B5A                     u2761:
  5558   002B5A  EF5B  F016         	goto	l3108
  5559   002B5E                     u2760:
  5560   002B5E  A010               	btfss	___fladd@grs^0,0,c
  5561   002B60  EFB4  F015         	goto	u2771
  5562   002B64  EFB6  F015         	goto	u2770
  5563   002B68                     u2771:
  5564   002B68  EFBC  F015         	goto	l3062
  5565   002B6C                     u2770:
  5566   002B6C  90D8               	bcf	status,0,c
  5567   002B6E  3010               	rrcf	___fladd@grs^0,w,c
  5568   002B70  0901               	iorlw	1
  5569   002B72  6E10               	movwf	___fladd@grs^0,c
  5570   002B74  EFBE  F015         	goto	l3064
  5571   002B78                     l3062:
  5572   002B78  90D8               	bcf	status,0,c
  5573   002B7A  3210               	rrcf	___fladd@grs^0,f,c
  5574   002B7C                     l3064:
  5575   002B7C  A001               	btfss	___fladd@b^0,0,c
  5576   002B7E  EFC3  F015         	goto	u2781
  5577   002B82  EFC5  F015         	goto	u2780
  5578   002B86                     u2781:
  5579   002B86  EFC6  F015         	goto	l3068
  5580   002B8A                     u2780:
  5581   002B8A  8E10               	bsf	___fladd@grs^0,7,c
  5582   002B8C                     l3068:
  5583   002B8C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5584   002B8E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5585   002B90  3203               	rrcf	(___fladd@b+2)^0,f,c
  5586   002B92  3202               	rrcf	(___fladd@b+1)^0,f,c
  5587   002B94  3201               	rrcf	___fladd@b^0,f,c
  5588   002B96  2A0F               	incf	___fladd@bexp^0,f,c
  5589   002B98  EF5B  F016         	goto	l3108
  5590   002B9C                     l3072:
  5591   002B9C  5005               	movf	___fladd@a^0,w,c
  5592   002B9E  5C01               	subwf	___fladd@b^0,w,c
  5593   002BA0  5006               	movf	(___fladd@a+1)^0,w,c
  5594   002BA2  5802               	subwfb	(___fladd@b+1)^0,w,c
  5595   002BA4  5007               	movf	(___fladd@a+2)^0,w,c
  5596   002BA6  5803               	subwfb	(___fladd@b+2)^0,w,c
  5597   002BA8  5004               	movf	(___fladd@b+3)^0,w,c
  5598   002BAA  0A80               	xorlw	128
  5599   002BAC  6E09               	movwf	??___fladd^0,c
  5600   002BAE  5008               	movf	(___fladd@a+3)^0,w,c
  5601   002BB0  0A80               	xorlw	128
  5602   002BB2  5809               	subwfb	??___fladd^0,w,c
  5603   002BB4  B0D8               	btfsc	status,0,c
  5604   002BB6  EFDF  F015         	goto	u2791
  5605   002BBA  EFE1  F015         	goto	u2790
  5606   002BBE                     u2791:
  5607   002BBE  EF0C  F016         	goto	l3082
  5608   002BC2                     u2790:
  5609   002BC2  5001               	movf	___fladd@b^0,w,c
  5610   002BC4  5C05               	subwf	___fladd@a^0,w,c
  5611   002BC6  6E09               	movwf	??___fladd^0,c
  5612   002BC8  5002               	movf	(___fladd@b+1)^0,w,c
  5613   002BCA  5806               	subwfb	(___fladd@a+1)^0,w,c
  5614   002BCC  6E0A               	movwf	(??___fladd+1)^0,c
  5615   002BCE  5003               	movf	(___fladd@b+2)^0,w,c
  5616   002BD0  5807               	subwfb	(___fladd@a+2)^0,w,c
  5617   002BD2  6E0B               	movwf	(??___fladd+2)^0,c
  5618   002BD4  5004               	movf	(___fladd@b+3)^0,w,c
  5619   002BD6  5808               	subwfb	(___fladd@a+3)^0,w,c
  5620   002BD8  6E0C               	movwf	(??___fladd+3)^0,c
  5621   002BDA  0EFF               	movlw	255
  5622   002BDC  2409               	addwf	??___fladd^0,w,c
  5623   002BDE  6E01               	movwf	___fladd@b^0,c
  5624   002BE0  0EFF               	movlw	255
  5625   002BE2  200A               	addwfc	(??___fladd+1)^0,w,c
  5626   002BE4  6E02               	movwf	(___fladd@b+1)^0,c
  5627   002BE6  0EFF               	movlw	255
  5628   002BE8  200B               	addwfc	(??___fladd+2)^0,w,c
  5629   002BEA  6E03               	movwf	(___fladd@b+2)^0,c
  5630   002BEC  0EFF               	movlw	255
  5631   002BEE  200C               	addwfc	(??___fladd+3)^0,w,c
  5632   002BF0  6E04               	movwf	(___fladd@b+3)^0,c
  5633   002BF2  0E80               	movlw	128
  5634   002BF4  1A0D               	xorwf	___fladd@signs^0,f,c
  5635   002BF6  6C10               	negf	___fladd@grs^0,c
  5636   002BF8  5010               	movf	___fladd@grs^0,w,c
  5637   002BFA  A4D8               	btfss	status,2,c
  5638   002BFC  EF02  F016         	goto	u2801
  5639   002C00  EF04  F016         	goto	u2800
  5640   002C04                     u2801:
  5641   002C04  EF14  F016         	goto	l1144
  5642   002C08                     u2800:
  5643   002C08  0E01               	movlw	1
  5644   002C0A  2601               	addwf	___fladd@b^0,f,c
  5645   002C0C  0E00               	movlw	0
  5646   002C0E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5647   002C10  2203               	addwfc	(___fladd@b+2)^0,f,c
  5648   002C12  2204               	addwfc	(___fladd@b+3)^0,f,c
  5649   002C14  EF14  F016         	goto	l1144
  5650   002C18                     l3082:
  5651   002C18  5005               	movf	___fladd@a^0,w,c
  5652   002C1A  5E01               	subwf	___fladd@b^0,f,c
  5653   002C1C  5006               	movf	(___fladd@a+1)^0,w,c
  5654   002C1E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5655   002C20  5007               	movf	(___fladd@a+2)^0,w,c
  5656   002C22  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5657   002C24  5008               	movf	(___fladd@a+3)^0,w,c
  5658   002C26  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5659   002C28                     l1144:
  5660   002C28  5001               	movf	___fladd@b^0,w,c
  5661   002C2A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5662   002C2C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5663   002C2E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5664   002C30  A4D8               	btfss	status,2,c
  5665   002C32  EF1D  F016         	goto	u2811
  5666   002C36  EF1F  F016         	goto	u2810
  5667   002C3A                     u2811:
  5668   002C3A  EF54  F016         	goto	l3106
  5669   002C3E                     u2810:
  5670   002C3E  5010               	movf	___fladd@grs^0,w,c
  5671   002C40  A4D8               	btfss	status,2,c
  5672   002C42  EF25  F016         	goto	u2821
  5673   002C46  EF27  F016         	goto	u2820
  5674   002C4A                     u2821:
  5675   002C4A  EF54  F016         	goto	l3106
  5676   002C4E                     u2820:
  5677   002C4E  0E00               	movlw	0
  5678   002C50  6E01               	movwf	?___fladd^0,c
  5679   002C52  0E00               	movlw	0
  5680   002C54  6E02               	movwf	(?___fladd+1)^0,c
  5681   002C56  0E00               	movlw	0
  5682   002C58  6E03               	movwf	(?___fladd+2)^0,c
  5683   002C5A  0E00               	movlw	0
  5684   002C5C  6E04               	movwf	(?___fladd+3)^0,c
  5685   002C5E  EFEF  F016         	goto	l1136
  5686   002C62                     l3090:
  5687   002C62  90D8               	bcf	status,0,c
  5688   002C64  3601               	rlcf	___fladd@b^0,f,c
  5689   002C66  3602               	rlcf	(___fladd@b+1)^0,f,c
  5690   002C68  3603               	rlcf	(___fladd@b+2)^0,f,c
  5691   002C6A  3604               	rlcf	(___fladd@b+3)^0,f,c
  5692   002C6C  AE10               	btfss	___fladd@grs^0,7,c
  5693   002C6E  EF3B  F016         	goto	u2831
  5694   002C72  EF3D  F016         	goto	u2830
  5695   002C76                     u2831:
  5696   002C76  EF3E  F016         	goto	l3096
  5697   002C7A                     u2830:
  5698   002C7A  8001               	bsf	___fladd@b^0,0,c
  5699   002C7C                     l3096:
  5700   002C7C  A010               	btfss	___fladd@grs^0,0,c
  5701   002C7E  EF43  F016         	goto	u2841
  5702   002C82  EF45  F016         	goto	u2840
  5703   002C86                     u2841:
  5704   002C86  EF49  F016         	goto	l3100
  5705   002C8A                     u2840:
  5706   002C8A  80D8               	bsf	status,0,c
  5707   002C8C  3610               	rlcf	___fladd@grs^0,f,c
  5708   002C8E  EF4B  F016         	goto	l3102
  5709   002C92                     l3100:
  5710   002C92  90D8               	bcf	status,0,c
  5711   002C94  3610               	rlcf	___fladd@grs^0,f,c
  5712   002C96                     l3102:
  5713   002C96  500F               	movf	___fladd@bexp^0,w,c
  5714   002C98  B4D8               	btfsc	status,2,c
  5715   002C9A  EF51  F016         	goto	u2851
  5716   002C9E  EF53  F016         	goto	u2850
  5717   002CA2                     u2851:
  5718   002CA2  EF54  F016         	goto	l3106
  5719   002CA6                     u2850:
  5720   002CA6  060F               	decf	___fladd@bexp^0,f,c
  5721   002CA8                     l3106:
  5722   002CA8  AE03               	btfss	(___fladd@b+2)^0,7,c
  5723   002CAA  EF59  F016         	goto	u2861
  5724   002CAE  EF5B  F016         	goto	u2860
  5725   002CB2                     u2861:
  5726   002CB2  EF31  F016         	goto	l3090
  5727   002CB6                     u2860:
  5728   002CB6                     l3108:
  5729   002CB6  0E00               	movlw	0
  5730   002CB8  6E0E               	movwf	___fladd@aexp^0,c
  5731   002CBA  AE10               	btfss	___fladd@grs^0,7,c
  5732   002CBC  EF62  F016         	goto	u2871
  5733   002CC0  EF64  F016         	goto	u2870
  5734   002CC4                     u2871:
  5735   002CC4  EF7C  F016         	goto	l1153
  5736   002CC8                     u2870:
  5737   002CC8  C010  F009         	movff	___fladd@grs,??___fladd
  5738   002CCC  0E7F               	movlw	127
  5739   002CCE  1609               	andwf	??___fladd^0,f,c
  5740   002CD0  B4D8               	btfsc	status,2,c
  5741   002CD2  EF6D  F016         	goto	u2881
  5742   002CD6  EF6F  F016         	goto	u2880
  5743   002CDA                     u2881:
  5744   002CDA  EF73  F016         	goto	l1154
  5745   002CDE                     u2880:
  5746   002CDE                     l3114:
  5747   002CDE  0E01               	movlw	1
  5748   002CE0  6E0E               	movwf	___fladd@aexp^0,c
  5749   002CE2  EF7C  F016         	goto	l1153
  5750   002CE6                     l1154:
  5751   002CE6  A001               	btfss	___fladd@b^0,0,c
  5752   002CE8  EF78  F016         	goto	u2891
  5753   002CEC  EF7A  F016         	goto	u2890
  5754   002CF0                     u2891:
  5755   002CF0  EF7C  F016         	goto	l1153
  5756   002CF4                     u2890:
  5757   002CF4  EF6F  F016         	goto	l3114
  5758   002CF8                     l1153:
  5759   002CF8  500E               	movf	___fladd@aexp^0,w,c
  5760   002CFA  B4D8               	btfsc	status,2,c
  5761   002CFC  EF82  F016         	goto	u2901
  5762   002D00  EF84  F016         	goto	u2900
  5763   002D04                     u2901:
  5764   002D04  EFAF  F016         	goto	l3126
  5765   002D08                     u2900:
  5766   002D08  0E01               	movlw	1
  5767   002D0A  2601               	addwf	___fladd@b^0,f,c
  5768   002D0C  0E00               	movlw	0
  5769   002D0E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5770   002D10  2203               	addwfc	(___fladd@b+2)^0,f,c
  5771   002D12  2204               	addwfc	(___fladd@b+3)^0,f,c
  5772   002D14  A004               	btfss	(___fladd@b+3)^0,0,c
  5773   002D16  EF8F  F016         	goto	u2911
  5774   002D1A  EF91  F016         	goto	u2910
  5775   002D1E                     u2911:
  5776   002D1E  EFAF  F016         	goto	l3126
  5777   002D22                     u2910:
  5778   002D22  C001  F009         	movff	___fladd@b,??___fladd
  5779   002D26  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5780   002D2A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5781   002D2E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5782   002D32  340C               	rlcf	(??___fladd+3)^0,w,c
  5783   002D34  320C               	rrcf	(??___fladd+3)^0,f,c
  5784   002D36  320B               	rrcf	(??___fladd+2)^0,f,c
  5785   002D38  320A               	rrcf	(??___fladd+1)^0,f,c
  5786   002D3A  3209               	rrcf	??___fladd^0,f,c
  5787   002D3C  C009  F001         	movff	??___fladd,___fladd@b
  5788   002D40  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5789   002D44  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5790   002D48  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5791   002D4C  280F               	incf	___fladd@bexp^0,w,c
  5792   002D4E  B4D8               	btfsc	status,2,c
  5793   002D50  EFAC  F016         	goto	u2921
  5794   002D54  EFAE  F016         	goto	u2920
  5795   002D58                     u2921:
  5796   002D58  EFAF  F016         	goto	l3126
  5797   002D5C                     u2920:
  5798   002D5C  2A0F               	incf	___fladd@bexp^0,f,c
  5799   002D5E                     l3126:
  5800   002D5E  280F               	incf	___fladd@bexp^0,w,c
  5801   002D60  B4D8               	btfsc	status,2,c
  5802   002D62  EFB5  F016         	goto	u2931
  5803   002D66  EFB7  F016         	goto	u2930
  5804   002D6A                     u2931:
  5805   002D6A  EFBF  F016         	goto	l3130
  5806   002D6E                     u2930:
  5807   002D6E  500F               	movf	___fladd@bexp^0,w,c
  5808   002D70  A4D8               	btfss	status,2,c
  5809   002D72  EFBD  F016         	goto	u2941
  5810   002D76  EFBF  F016         	goto	u2940
  5811   002D7A                     u2941:
  5812   002D7A  EFD1  F016         	goto	l3134
  5813   002D7E                     u2940:
  5814   002D7E                     l3130:
  5815   002D7E  0E00               	movlw	0
  5816   002D80  6E01               	movwf	___fladd@b^0,c
  5817   002D82  0E00               	movlw	0
  5818   002D84  6E02               	movwf	(___fladd@b+1)^0,c
  5819   002D86  0E00               	movlw	0
  5820   002D88  6E03               	movwf	(___fladd@b+2)^0,c
  5821   002D8A  0E00               	movlw	0
  5822   002D8C  6E04               	movwf	(___fladd@b+3)^0,c
  5823   002D8E  500F               	movf	___fladd@bexp^0,w,c
  5824   002D90  A4D8               	btfss	status,2,c
  5825   002D92  EFCD  F016         	goto	u2951
  5826   002D96  EFCF  F016         	goto	u2950
  5827   002D9A                     u2951:
  5828   002D9A  EFD1  F016         	goto	l3134
  5829   002D9E                     u2950:
  5830   002D9E  0E00               	movlw	0
  5831   002DA0  6E0D               	movwf	___fladd@signs^0,c
  5832   002DA2                     l3134:
  5833   002DA2  A00F               	btfss	___fladd@bexp^0,0,c
  5834   002DA4  EFD6  F016         	goto	u2961
  5835   002DA8  EFD8  F016         	goto	u2960
  5836   002DAC                     u2961:
  5837   002DAC  EFDB  F016         	goto	l3138
  5838   002DB0                     u2960:
  5839   002DB0  8E03               	bsf	(___fladd@b+2)^0,7,c
  5840   002DB2  EFDC  F016         	goto	l3140
  5841   002DB6                     l3138:
  5842   002DB6  9E03               	bcf	(___fladd@b+2)^0,7,c
  5843   002DB8                     l3140:
  5844   002DB8  90D8               	bcf	status,0,c
  5845   002DBA  300F               	rrcf	___fladd@bexp^0,w,c
  5846   002DBC  6E04               	movwf	(___fladd@b+3)^0,c
  5847   002DBE  AE0D               	btfss	___fladd@signs^0,7,c
  5848   002DC0  EFE4  F016         	goto	u2971
  5849   002DC4  EFE6  F016         	goto	u2970
  5850   002DC8                     u2971:
  5851   002DC8  EFE7  F016         	goto	l3146
  5852   002DCC                     u2970:
  5853   002DCC  8E04               	bsf	(___fladd@b+3)^0,7,c
  5854   002DCE                     l3146:
  5855   002DCE  C001  F001         	movff	___fladd@b,?___fladd
  5856   002DD2  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5857   002DD6  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5858   002DDA  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5859   002DDE                     l1136:
  5860   002DDE  0012               	return		;funcret
  5861   002DE0                     __end_of___fladd:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function ___flmul *****************
  5865 ;; Defined at:
  5866 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  b               4   58[COMRAM] unsigned char 
  5869 ;;  a               4   62[COMRAM] unsigned char 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  prod            4   77[COMRAM] struct .
  5872 ;;  grs             4   71[COMRAM] unsigned long 
  5873 ;;  temp            2   81[COMRAM] struct .
  5874 ;;  bexp            1   76[COMRAM] unsigned char 
  5875 ;;  aexp            1   75[COMRAM] unsigned char 
  5876 ;;  sign            1   70[COMRAM] unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  4   58[COMRAM] unsigned char 
  5879 ;; Registers used:
  5880 ;;		wreg, status,2, status,0, prodl, prodh
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5886 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5887 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;Total ram usage:       25 bytes
  5891 ;; Hardware stack levels used: 1
  5892 ;; This function calls:
  5893 ;;		Nothing
  5894 ;; This function is called by:
  5895 ;;		_custom_floatmodulo
  5896 ;;		_RGB_to_HSV
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text23
  5901   002DE0                     __ptext23:
  5902                           	callstack 0
  5903   002DE0                     ___flmul:
  5904                           	callstack 26
  5905   002DE0  503E               	movf	(___flmul@b+3)^0,w,c
  5906   002DE2  0B80               	andlw	128
  5907   002DE4  6E47               	movwf	___flmul@sign^0,c
  5908   002DE6  503E               	movf	(___flmul@b+3)^0,w,c
  5909   002DE8  243E               	addwf	(___flmul@b+3)^0,w,c
  5910   002DEA  6E4D               	movwf	___flmul@bexp^0,c
  5911   002DEC  AE3D               	btfss	(___flmul@b+2)^0,7,c
  5912   002DEE  EFFB  F016         	goto	u3231
  5913   002DF2  EFFD  F016         	goto	u3230
  5914   002DF6                     u3231:
  5915   002DF6  EFFE  F016         	goto	l3298
  5916   002DFA                     u3230:
  5917   002DFA  804D               	bsf	___flmul@bexp^0,0,c
  5918   002DFC                     l3298:
  5919   002DFC  504D               	movf	___flmul@bexp^0,w,c
  5920   002DFE  B4D8               	btfsc	status,2,c
  5921   002E00  EF04  F017         	goto	u3241
  5922   002E04  EF06  F017         	goto	u3240
  5923   002E08                     u3241:
  5924   002E08  EF19  F017         	goto	l3306
  5925   002E0C                     u3240:
  5926   002E0C  284D               	incf	___flmul@bexp^0,w,c
  5927   002E0E  A4D8               	btfss	status,2,c
  5928   002E10  EF0C  F017         	goto	u3251
  5929   002E14  EF0E  F017         	goto	u3250
  5930   002E18                     u3251:
  5931   002E18  EF16  F017         	goto	l3304
  5932   002E1C                     u3250:
  5933   002E1C  0E00               	movlw	0
  5934   002E1E  6E3B               	movwf	___flmul@b^0,c
  5935   002E20  0E00               	movlw	0
  5936   002E22  6E3C               	movwf	(___flmul@b+1)^0,c
  5937   002E24  0E00               	movlw	0
  5938   002E26  6E3D               	movwf	(___flmul@b+2)^0,c
  5939   002E28  0E00               	movlw	0
  5940   002E2A  6E3E               	movwf	(___flmul@b+3)^0,c
  5941   002E2C                     l3304:
  5942   002E2C  8E3D               	bsf	(___flmul@b+2)^0,7,c
  5943   002E2E  EF21  F017         	goto	l3308
  5944   002E32                     l3306:
  5945   002E32  0E00               	movlw	0
  5946   002E34  6E3B               	movwf	___flmul@b^0,c
  5947   002E36  0E00               	movlw	0
  5948   002E38  6E3C               	movwf	(___flmul@b+1)^0,c
  5949   002E3A  0E00               	movlw	0
  5950   002E3C  6E3D               	movwf	(___flmul@b+2)^0,c
  5951   002E3E  0E00               	movlw	0
  5952   002E40  6E3E               	movwf	(___flmul@b+3)^0,c
  5953   002E42                     l3308:
  5954   002E42  5042               	movf	(___flmul@a+3)^0,w,c
  5955   002E44  0B80               	andlw	128
  5956   002E46  1A47               	xorwf	___flmul@sign^0,f,c
  5957   002E48  5042               	movf	(___flmul@a+3)^0,w,c
  5958   002E4A  2442               	addwf	(___flmul@a+3)^0,w,c
  5959   002E4C  6E4C               	movwf	___flmul@aexp^0,c
  5960   002E4E  AE41               	btfss	(___flmul@a+2)^0,7,c
  5961   002E50  EF2C  F017         	goto	u3261
  5962   002E54  EF2E  F017         	goto	u3260
  5963   002E58                     u3261:
  5964   002E58  EF2F  F017         	goto	l3316
  5965   002E5C                     u3260:
  5966   002E5C  804C               	bsf	___flmul@aexp^0,0,c
  5967   002E5E                     l3316:
  5968   002E5E  504C               	movf	___flmul@aexp^0,w,c
  5969   002E60  B4D8               	btfsc	status,2,c
  5970   002E62  EF35  F017         	goto	u3271
  5971   002E66  EF37  F017         	goto	u3270
  5972   002E6A                     u3271:
  5973   002E6A  EF4A  F017         	goto	l3324
  5974   002E6E                     u3270:
  5975   002E6E  284C               	incf	___flmul@aexp^0,w,c
  5976   002E70  A4D8               	btfss	status,2,c
  5977   002E72  EF3D  F017         	goto	u3281
  5978   002E76  EF3F  F017         	goto	u3280
  5979   002E7A                     u3281:
  5980   002E7A  EF47  F017         	goto	l3322
  5981   002E7E                     u3280:
  5982   002E7E  0E00               	movlw	0
  5983   002E80  6E3F               	movwf	___flmul@a^0,c
  5984   002E82  0E00               	movlw	0
  5985   002E84  6E40               	movwf	(___flmul@a+1)^0,c
  5986   002E86  0E00               	movlw	0
  5987   002E88  6E41               	movwf	(___flmul@a+2)^0,c
  5988   002E8A  0E00               	movlw	0
  5989   002E8C  6E42               	movwf	(___flmul@a+3)^0,c
  5990   002E8E                     l3322:
  5991   002E8E  8E41               	bsf	(___flmul@a+2)^0,7,c
  5992   002E90  EF52  F017         	goto	l1213
  5993   002E94                     l3324:
  5994   002E94  0E00               	movlw	0
  5995   002E96  6E3F               	movwf	___flmul@a^0,c
  5996   002E98  0E00               	movlw	0
  5997   002E9A  6E40               	movwf	(___flmul@a+1)^0,c
  5998   002E9C  0E00               	movlw	0
  5999   002E9E  6E41               	movwf	(___flmul@a+2)^0,c
  6000   002EA0  0E00               	movlw	0
  6001   002EA2  6E42               	movwf	(___flmul@a+3)^0,c
  6002   002EA4                     l1213:
  6003   002EA4  504C               	movf	___flmul@aexp^0,w,c
  6004   002EA6  B4D8               	btfsc	status,2,c
  6005   002EA8  EF58  F017         	goto	u3291
  6006   002EAC  EF5A  F017         	goto	u3290
  6007   002EB0                     u3291:
  6008   002EB0  EF62  F017         	goto	l3328
  6009   002EB4                     u3290:
  6010   002EB4  504D               	movf	___flmul@bexp^0,w,c
  6011   002EB6  A4D8               	btfss	status,2,c
  6012   002EB8  EF60  F017         	goto	u3301
  6013   002EBC  EF62  F017         	goto	u3300
  6014   002EC0                     u3301:
  6015   002EC0  EF6C  F017         	goto	l3332
  6016   002EC4                     u3300:
  6017   002EC4                     l3328:
  6018   002EC4  0E00               	movlw	0
  6019   002EC6  6E3B               	movwf	?___flmul^0,c
  6020   002EC8  0E00               	movlw	0
  6021   002ECA  6E3C               	movwf	(?___flmul+1)^0,c
  6022   002ECC  0E00               	movlw	0
  6023   002ECE  6E3D               	movwf	(?___flmul+2)^0,c
  6024   002ED0  0E00               	movlw	0
  6025   002ED2  6E3E               	movwf	(?___flmul+3)^0,c
  6026   002ED4  EF04  F019         	goto	l1217
  6027   002ED8                     l3332:
  6028   002ED8  5041               	movf	(___flmul@a+2)^0,w,c
  6029   002EDA  023B               	mulwf	___flmul@b^0,c
  6030   002EDC  CFF3 F052          	movff	prodl,___flmul@temp
  6031   002EE0  CFF4 F053          	movff	prodh,___flmul@temp+1
  6032   002EE4  5052               	movf	___flmul@temp^0,w,c
  6033   002EE6  6E48               	movwf	___flmul@grs^0,c
  6034   002EE8  6A49               	clrf	(___flmul@grs+1)^0,c
  6035   002EEA  6A4A               	clrf	(___flmul@grs+2)^0,c
  6036   002EEC  6A4B               	clrf	(___flmul@grs+3)^0,c
  6037   002EEE  5053               	movf	(___flmul@temp+1)^0,w,c
  6038   002EF0  6E4E               	movwf	___flmul@prod^0,c
  6039   002EF2  6A4F               	clrf	(___flmul@prod+1)^0,c
  6040   002EF4  6A50               	clrf	(___flmul@prod+2)^0,c
  6041   002EF6  6A51               	clrf	(___flmul@prod+3)^0,c
  6042   002EF8  5040               	movf	(___flmul@a+1)^0,w,c
  6043   002EFA  023C               	mulwf	(___flmul@b+1)^0,c
  6044   002EFC  CFF3 F052          	movff	prodl,___flmul@temp
  6045   002F00  CFF4 F053          	movff	prodh,___flmul@temp+1
  6046   002F04  5052               	movf	___flmul@temp^0,w,c
  6047   002F06  2648               	addwf	___flmul@grs^0,f,c
  6048   002F08  0E00               	movlw	0
  6049   002F0A  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6050   002F0C  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6051   002F0E  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6052   002F10  5053               	movf	(___flmul@temp+1)^0,w,c
  6053   002F12  264E               	addwf	___flmul@prod^0,f,c
  6054   002F14  0E00               	movlw	0
  6055   002F16  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6056   002F18  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6057   002F1A  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6058   002F1C  503F               	movf	___flmul@a^0,w,c
  6059   002F1E  023D               	mulwf	(___flmul@b+2)^0,c
  6060   002F20  CFF3 F052          	movff	prodl,___flmul@temp
  6061   002F24  CFF4 F053          	movff	prodh,___flmul@temp+1
  6062   002F28  5052               	movf	___flmul@temp^0,w,c
  6063   002F2A  2648               	addwf	___flmul@grs^0,f,c
  6064   002F2C  0E00               	movlw	0
  6065   002F2E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6066   002F30  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6067   002F32  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6068   002F34  5053               	movf	(___flmul@temp+1)^0,w,c
  6069   002F36  264E               	addwf	___flmul@prod^0,f,c
  6070   002F38  0E00               	movlw	0
  6071   002F3A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6072   002F3C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6073   002F3E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6074   002F40  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6075   002F44  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6076   002F48  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6077   002F4C  6A48               	clrf	___flmul@grs^0,c
  6078   002F4E  503F               	movf	___flmul@a^0,w,c
  6079   002F50  023C               	mulwf	(___flmul@b+1)^0,c
  6080   002F52  CFF3 F052          	movff	prodl,___flmul@temp
  6081   002F56  CFF4 F053          	movff	prodh,___flmul@temp+1
  6082   002F5A  5052               	movf	___flmul@temp^0,w,c
  6083   002F5C  2648               	addwf	___flmul@grs^0,f,c
  6084   002F5E  5053               	movf	(___flmul@temp+1)^0,w,c
  6085   002F60  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6086   002F62  0E00               	movlw	0
  6087   002F64  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6088   002F66  0E00               	movlw	0
  6089   002F68  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6090   002F6A  5040               	movf	(___flmul@a+1)^0,w,c
  6091   002F6C  023B               	mulwf	___flmul@b^0,c
  6092   002F6E  CFF3 F052          	movff	prodl,___flmul@temp
  6093   002F72  CFF4 F053          	movff	prodh,___flmul@temp+1
  6094   002F76  5052               	movf	___flmul@temp^0,w,c
  6095   002F78  2648               	addwf	___flmul@grs^0,f,c
  6096   002F7A  5053               	movf	(___flmul@temp+1)^0,w,c
  6097   002F7C  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6098   002F7E  0E00               	movlw	0
  6099   002F80  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6100   002F82  0E00               	movlw	0
  6101   002F84  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6102   002F86  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6103   002F8A  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6104   002F8E  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6105   002F92  6A48               	clrf	___flmul@grs^0,c
  6106   002F94  503F               	movf	___flmul@a^0,w,c
  6107   002F96  023B               	mulwf	___flmul@b^0,c
  6108   002F98  CFF3 F052          	movff	prodl,___flmul@temp
  6109   002F9C  CFF4 F053          	movff	prodh,___flmul@temp+1
  6110   002FA0  5052               	movf	___flmul@temp^0,w,c
  6111   002FA2  2648               	addwf	___flmul@grs^0,f,c
  6112   002FA4  5053               	movf	(___flmul@temp+1)^0,w,c
  6113   002FA6  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6114   002FA8  0E00               	movlw	0
  6115   002FAA  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6116   002FAC  0E00               	movlw	0
  6117   002FAE  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6118   002FB0  5041               	movf	(___flmul@a+2)^0,w,c
  6119   002FB2  023C               	mulwf	(___flmul@b+1)^0,c
  6120   002FB4  CFF3 F052          	movff	prodl,___flmul@temp
  6121   002FB8  CFF4 F053          	movff	prodh,___flmul@temp+1
  6122   002FBC  5052               	movf	___flmul@temp^0,w,c
  6123   002FBE  264E               	addwf	___flmul@prod^0,f,c
  6124   002FC0  5053               	movf	(___flmul@temp+1)^0,w,c
  6125   002FC2  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6126   002FC4  0E00               	movlw	0
  6127   002FC6  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6128   002FC8  0E00               	movlw	0
  6129   002FCA  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6130   002FCC  5040               	movf	(___flmul@a+1)^0,w,c
  6131   002FCE  023D               	mulwf	(___flmul@b+2)^0,c
  6132   002FD0  CFF3 F052          	movff	prodl,___flmul@temp
  6133   002FD4  CFF4 F053          	movff	prodh,___flmul@temp+1
  6134   002FD8  5052               	movf	___flmul@temp^0,w,c
  6135   002FDA  264E               	addwf	___flmul@prod^0,f,c
  6136   002FDC  5053               	movf	(___flmul@temp+1)^0,w,c
  6137   002FDE  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6138   002FE0  0E00               	movlw	0
  6139   002FE2  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6140   002FE4  0E00               	movlw	0
  6141   002FE6  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6142   002FE8  5041               	movf	(___flmul@a+2)^0,w,c
  6143   002FEA  023D               	mulwf	(___flmul@b+2)^0,c
  6144   002FEC  CFF3 F052          	movff	prodl,___flmul@temp
  6145   002FF0  CFF4 F053          	movff	prodh,___flmul@temp+1
  6146   002FF4  5052               	movf	___flmul@temp^0,w,c
  6147   002FF6  6E43               	movwf	??___flmul^0,c
  6148   002FF8  5053               	movf	(___flmul@temp+1)^0,w,c
  6149   002FFA  6E44               	movwf	(??___flmul+1)^0,c
  6150   002FFC  6A45               	clrf	(??___flmul+2)^0,c
  6151   002FFE  6A46               	clrf	(??___flmul+3)^0,c
  6152   003000  C045  F046         	movff	??___flmul+2,??___flmul+3
  6153   003004  C044  F045         	movff	??___flmul+1,??___flmul+2
  6154   003008  C043  F044         	movff	??___flmul,??___flmul+1
  6155   00300C  6A43               	clrf	??___flmul^0,c
  6156   00300E  5043               	movf	??___flmul^0,w,c
  6157   003010  264E               	addwf	___flmul@prod^0,f,c
  6158   003012  5044               	movf	(??___flmul+1)^0,w,c
  6159   003014  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6160   003016  5045               	movf	(??___flmul+2)^0,w,c
  6161   003018  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6162   00301A  5046               	movf	(??___flmul+3)^0,w,c
  6163   00301C  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6164   00301E  C048  F043         	movff	___flmul@grs,??___flmul
  6165   003022  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  6166   003026  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  6167   00302A  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  6168   00302E  0E19               	movlw	25
  6169   003030  EF1F  F018         	goto	u3310
  6170   003034                     u3315:
  6171   003034  90D8               	bcf	status,0,c
  6172   003036  3246               	rrcf	(??___flmul+3)^0,f,c
  6173   003038  3245               	rrcf	(??___flmul+2)^0,f,c
  6174   00303A  3244               	rrcf	(??___flmul+1)^0,f,c
  6175   00303C  3243               	rrcf	??___flmul^0,f,c
  6176   00303E                     u3310:
  6177   00303E  2EE8               	decfsz	wreg,f,c
  6178   003040  EF1A  F018         	goto	u3315
  6179   003044  5043               	movf	??___flmul^0,w,c
  6180   003046  264E               	addwf	___flmul@prod^0,f,c
  6181   003048  5044               	movf	(??___flmul+1)^0,w,c
  6182   00304A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6183   00304C  5045               	movf	(??___flmul+2)^0,w,c
  6184   00304E  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6185   003050  5046               	movf	(??___flmul+3)^0,w,c
  6186   003052  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6187   003054  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6188   003058  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6189   00305C  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6190   003060  6A48               	clrf	___flmul@grs^0,c
  6191   003062  504C               	movf	___flmul@aexp^0,w,c
  6192   003064  C04D  F043         	movff	___flmul@bexp,??___flmul
  6193   003068  6A44               	clrf	(??___flmul+1)^0,c
  6194   00306A  2643               	addwf	??___flmul^0,f,c
  6195   00306C  0E00               	movlw	0
  6196   00306E  2244               	addwfc	(??___flmul+1)^0,f,c
  6197   003070  0E82               	movlw	130
  6198   003072  2443               	addwf	??___flmul^0,w,c
  6199   003074  6E52               	movwf	___flmul@temp^0,c
  6200   003076  0EFF               	movlw	255
  6201   003078  2044               	addwfc	(??___flmul+1)^0,w,c
  6202   00307A  6E53               	movwf	(___flmul@temp+1)^0,c
  6203   00307C  EF55  F018         	goto	l3380
  6204   003080                     l3374:
  6205   003080  90D8               	bcf	status,0,c
  6206   003082  364E               	rlcf	___flmul@prod^0,f,c
  6207   003084  364F               	rlcf	(___flmul@prod+1)^0,f,c
  6208   003086  3650               	rlcf	(___flmul@prod+2)^0,f,c
  6209   003088  3651               	rlcf	(___flmul@prod+3)^0,f,c
  6210   00308A  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6211   00308C  EF4A  F018         	goto	u3321
  6212   003090  EF4C  F018         	goto	u3320
  6213   003094                     u3321:
  6214   003094  EF4D  F018         	goto	l1220
  6215   003098                     u3320:
  6216   003098  804E               	bsf	___flmul@prod^0,0,c
  6217   00309A                     l1220:
  6218   00309A  90D8               	bcf	status,0,c
  6219   00309C  3648               	rlcf	___flmul@grs^0,f,c
  6220   00309E  3649               	rlcf	(___flmul@grs+1)^0,f,c
  6221   0030A0  364A               	rlcf	(___flmul@grs+2)^0,f,c
  6222   0030A2  364B               	rlcf	(___flmul@grs+3)^0,f,c
  6223   0030A4  0652               	decf	___flmul@temp^0,f,c
  6224   0030A6  A0D8               	btfss	status,0,c
  6225   0030A8  0653               	decf	(___flmul@temp+1)^0,f,c
  6226   0030AA                     l3380:
  6227   0030AA  AE50               	btfss	(___flmul@prod+2)^0,7,c
  6228   0030AC  EF5A  F018         	goto	u3331
  6229   0030B0  EF5C  F018         	goto	u3330
  6230   0030B4                     u3331:
  6231   0030B4  EF40  F018         	goto	l3374
  6232   0030B8                     u3330:
  6233   0030B8  0E00               	movlw	0
  6234   0030BA  6E4C               	movwf	___flmul@aexp^0,c
  6235   0030BC  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6236   0030BE  EF63  F018         	goto	u3341
  6237   0030C2  EF65  F018         	goto	u3340
  6238   0030C6                     u3341:
  6239   0030C6  EF89  F018         	goto	l1222
  6240   0030CA                     u3340:
  6241   0030CA  0EFF               	movlw	255
  6242   0030CC  1448               	andwf	___flmul@grs^0,w,c
  6243   0030CE  6E43               	movwf	??___flmul^0,c
  6244   0030D0  0EFF               	movlw	255
  6245   0030D2  1449               	andwf	(___flmul@grs+1)^0,w,c
  6246   0030D4  6E44               	movwf	(??___flmul+1)^0,c
  6247   0030D6  0EFF               	movlw	255
  6248   0030D8  144A               	andwf	(___flmul@grs+2)^0,w,c
  6249   0030DA  6E45               	movwf	(??___flmul+2)^0,c
  6250   0030DC  0E7F               	movlw	127
  6251   0030DE  144B               	andwf	(___flmul@grs+3)^0,w,c
  6252   0030E0  6E46               	movwf	(??___flmul+3)^0,c
  6253   0030E2  5043               	movf	??___flmul^0,w,c
  6254   0030E4  1044               	iorwf	(??___flmul+1)^0,w,c
  6255   0030E6  1045               	iorwf	(??___flmul+2)^0,w,c
  6256   0030E8  1046               	iorwf	(??___flmul+3)^0,w,c
  6257   0030EA  B4D8               	btfsc	status,2,c
  6258   0030EC  EF7A  F018         	goto	u3351
  6259   0030F0  EF7C  F018         	goto	u3350
  6260   0030F4                     u3351:
  6261   0030F4  EF80  F018         	goto	l1223
  6262   0030F8                     u3350:
  6263   0030F8                     l3388:
  6264   0030F8  0E01               	movlw	1
  6265   0030FA  6E4C               	movwf	___flmul@aexp^0,c
  6266   0030FC  EF89  F018         	goto	l1222
  6267   003100                     l1223:
  6268   003100  A04E               	btfss	___flmul@prod^0,0,c
  6269   003102  EF85  F018         	goto	u3361
  6270   003106  EF87  F018         	goto	u3360
  6271   00310A                     u3361:
  6272   00310A  EF89  F018         	goto	l1222
  6273   00310E                     u3360:
  6274   00310E  EF7C  F018         	goto	l3388
  6275   003112                     l1222:
  6276   003112  504C               	movf	___flmul@aexp^0,w,c
  6277   003114  B4D8               	btfsc	status,2,c
  6278   003116  EF8F  F018         	goto	u3371
  6279   00311A  EF91  F018         	goto	u3370
  6280   00311E                     u3371:
  6281   00311E  EFB5  F018         	goto	l3400
  6282   003122                     u3370:
  6283   003122  0E01               	movlw	1
  6284   003124  264E               	addwf	___flmul@prod^0,f,c
  6285   003126  0E00               	movlw	0
  6286   003128  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6287   00312A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6288   00312C  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6289   00312E  A051               	btfss	(___flmul@prod+3)^0,0,c
  6290   003130  EF9C  F018         	goto	u3381
  6291   003134  EF9E  F018         	goto	u3380
  6292   003138                     u3381:
  6293   003138  EFB5  F018         	goto	l3400
  6294   00313C                     u3380:
  6295   00313C  C04E  F043         	movff	___flmul@prod,??___flmul
  6296   003140  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  6297   003144  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  6298   003148  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  6299   00314C  3446               	rlcf	(??___flmul+3)^0,w,c
  6300   00314E  3246               	rrcf	(??___flmul+3)^0,f,c
  6301   003150  3245               	rrcf	(??___flmul+2)^0,f,c
  6302   003152  3244               	rrcf	(??___flmul+1)^0,f,c
  6303   003154  3243               	rrcf	??___flmul^0,f,c
  6304   003156  C043  F04E         	movff	??___flmul,___flmul@prod
  6305   00315A  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6306   00315E  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6307   003162  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6308   003166  4A52               	infsnz	___flmul@temp^0,f,c
  6309   003168  2A53               	incf	(___flmul@temp+1)^0,f,c
  6310   00316A                     l3400:
  6311   00316A  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6312   00316C  EFC0  F018         	goto	u3391
  6313   003170  5053               	movf	(___flmul@temp+1)^0,w,c
  6314   003172  E108               	bnz	u3390
  6315   003174  2852               	incf	___flmul@temp^0,w,c
  6316   003176  A0D8               	btfss	status,0,c
  6317   003178  EFC0  F018         	goto	u3391
  6318   00317C  EFC2  F018         	goto	u3390
  6319   003180                     u3391:
  6320   003180  EFCC  F018         	goto	l3404
  6321   003184                     u3390:
  6322   003184  0E00               	movlw	0
  6323   003186  6E4E               	movwf	___flmul@prod^0,c
  6324   003188  0E00               	movlw	0
  6325   00318A  6E4F               	movwf	(___flmul@prod+1)^0,c
  6326   00318C  0E80               	movlw	128
  6327   00318E  6E50               	movwf	(___flmul@prod+2)^0,c
  6328   003190  0E7F               	movlw	127
  6329   003192  6E51               	movwf	(___flmul@prod+3)^0,c
  6330   003194  EFFA  F018         	goto	l3416
  6331   003198                     l3404:
  6332   003198  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6333   00319A  EFD9  F018         	goto	u3400
  6334   00319E  5053               	movf	(___flmul@temp+1)^0,w,c
  6335   0031A0  E106               	bnz	u3401
  6336   0031A2  0452               	decf	___flmul@temp^0,w,c
  6337   0031A4  B0D8               	btfsc	status,0,c
  6338   0031A6  EFD7  F018         	goto	u3401
  6339   0031AA  EFD9  F018         	goto	u3400
  6340   0031AE                     u3401:
  6341   0031AE  EFE5  F018         	goto	l1230
  6342   0031B2                     u3400:
  6343   0031B2  0E00               	movlw	0
  6344   0031B4  6E4E               	movwf	___flmul@prod^0,c
  6345   0031B6  0E00               	movlw	0
  6346   0031B8  6E4F               	movwf	(___flmul@prod+1)^0,c
  6347   0031BA  0E00               	movlw	0
  6348   0031BC  6E50               	movwf	(___flmul@prod+2)^0,c
  6349   0031BE  0E00               	movlw	0
  6350   0031C0  6E51               	movwf	(___flmul@prod+3)^0,c
  6351   0031C2  0E00               	movlw	0
  6352   0031C4  6E47               	movwf	___flmul@sign^0,c
  6353   0031C6  EFFA  F018         	goto	l3416
  6354   0031CA                     l1230:
  6355   0031CA  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6356   0031CE  0EFF               	movlw	255
  6357   0031D0  164E               	andwf	___flmul@prod^0,f,c
  6358   0031D2  0EFF               	movlw	255
  6359   0031D4  164F               	andwf	(___flmul@prod+1)^0,f,c
  6360   0031D6  0E7F               	movlw	127
  6361   0031D8  1650               	andwf	(___flmul@prod+2)^0,f,c
  6362   0031DA  0E00               	movlw	0
  6363   0031DC  1651               	andwf	(___flmul@prod+3)^0,f,c
  6364   0031DE  A04D               	btfss	___flmul@bexp^0,0,c
  6365   0031E0  EFF4  F018         	goto	u3411
  6366   0031E4  EFF6  F018         	goto	u3410
  6367   0031E8                     u3411:
  6368   0031E8  EFF7  F018         	goto	l3414
  6369   0031EC                     u3410:
  6370   0031EC  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6371   0031EE                     l3414:
  6372   0031EE  90D8               	bcf	status,0,c
  6373   0031F0  304D               	rrcf	___flmul@bexp^0,w,c
  6374   0031F2  6E51               	movwf	(___flmul@prod+3)^0,c
  6375   0031F4                     l3416:
  6376   0031F4  5047               	movf	___flmul@sign^0,w,c
  6377   0031F6  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6378   0031F8  C04E  F03B         	movff	___flmul@prod,?___flmul
  6379   0031FC  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6380   003200  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6381   003204  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6382   003208                     l1217:
  6383   003208  0012               	return		;funcret
  6384   00320A                     __end_of___flmul:
  6385                           	callstack 0
  6386                           
  6387 ;; *************** function ___fleq *****************
  6388 ;; Defined at:
  6389 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  ff1             4    0[COMRAM] unsigned char 
  6392 ;;  ff2             4    4[COMRAM] unsigned char 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;		None               void
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6404 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6408 ;;Total ram usage:       12 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_custom_floatmodulo
  6414 ;;		_RGB_to_HSV
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text24
  6419   00477E                     __ptext24:
  6420                           	callstack 0
  6421   00477E                     ___fleq:
  6422                           	callstack 26
  6423   00477E  0E00               	movlw	0
  6424   004780  1401               	andwf	___fleq@ff1^0,w,c
  6425   004782  6E09               	movwf	??___fleq^0,c
  6426   004784  0E00               	movlw	0
  6427   004786  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6428   004788  6E0A               	movwf	(??___fleq+1)^0,c
  6429   00478A  0E80               	movlw	128
  6430   00478C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6431   00478E  6E0B               	movwf	(??___fleq+2)^0,c
  6432   004790  0E7F               	movlw	127
  6433   004792  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6434   004794  6E0C               	movwf	(??___fleq+3)^0,c
  6435   004796  5009               	movf	??___fleq^0,w,c
  6436   004798  100A               	iorwf	(??___fleq+1)^0,w,c
  6437   00479A  100B               	iorwf	(??___fleq+2)^0,w,c
  6438   00479C  100C               	iorwf	(??___fleq+3)^0,w,c
  6439   00479E  A4D8               	btfss	status,2,c
  6440   0047A0  EFD4  F023         	goto	u3421
  6441   0047A4  EFD6  F023         	goto	u3420
  6442   0047A8                     u3421:
  6443   0047A8  EFDE  F023         	goto	l3432
  6444   0047AC                     u3420:
  6445   0047AC  0E00               	movlw	0
  6446   0047AE  6E01               	movwf	___fleq@ff1^0,c
  6447   0047B0  0E00               	movlw	0
  6448   0047B2  6E02               	movwf	(___fleq@ff1+1)^0,c
  6449   0047B4  0E00               	movlw	0
  6450   0047B6  6E03               	movwf	(___fleq@ff1+2)^0,c
  6451   0047B8  0E00               	movlw	0
  6452   0047BA  6E04               	movwf	(___fleq@ff1+3)^0,c
  6453   0047BC                     l3432:
  6454   0047BC  0E00               	movlw	0
  6455   0047BE  1405               	andwf	___fleq@ff2^0,w,c
  6456   0047C0  6E09               	movwf	??___fleq^0,c
  6457   0047C2  0E00               	movlw	0
  6458   0047C4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6459   0047C6  6E0A               	movwf	(??___fleq+1)^0,c
  6460   0047C8  0E80               	movlw	128
  6461   0047CA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6462   0047CC  6E0B               	movwf	(??___fleq+2)^0,c
  6463   0047CE  0E7F               	movlw	127
  6464   0047D0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6465   0047D2  6E0C               	movwf	(??___fleq+3)^0,c
  6466   0047D4  5009               	movf	??___fleq^0,w,c
  6467   0047D6  100A               	iorwf	(??___fleq+1)^0,w,c
  6468   0047D8  100B               	iorwf	(??___fleq+2)^0,w,c
  6469   0047DA  100C               	iorwf	(??___fleq+3)^0,w,c
  6470   0047DC  A4D8               	btfss	status,2,c
  6471   0047DE  EFF3  F023         	goto	u3431
  6472   0047E2  EFF5  F023         	goto	u3430
  6473   0047E6                     u3431:
  6474   0047E6  EFFD  F023         	goto	l3436
  6475   0047EA                     u3430:
  6476   0047EA  0E00               	movlw	0
  6477   0047EC  6E05               	movwf	___fleq@ff2^0,c
  6478   0047EE  0E00               	movlw	0
  6479   0047F0  6E06               	movwf	(___fleq@ff2+1)^0,c
  6480   0047F2  0E00               	movlw	0
  6481   0047F4  6E07               	movwf	(___fleq@ff2+2)^0,c
  6482   0047F6  0E00               	movlw	0
  6483   0047F8  6E08               	movwf	(___fleq@ff2+3)^0,c
  6484   0047FA                     l3436:
  6485   0047FA  5005               	movf	___fleq@ff2^0,w,c
  6486   0047FC  1801               	xorwf	___fleq@ff1^0,w,c
  6487   0047FE  E10F               	bnz	u3440
  6488   004800  5006               	movf	(___fleq@ff2+1)^0,w,c
  6489   004802  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6490   004804  E10C               	bnz	u3440
  6491   004806  5007               	movf	(___fleq@ff2+2)^0,w,c
  6492   004808  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6493   00480A  E109               	bnz	u3440
  6494   00480C  5008               	movf	(___fleq@ff2+3)^0,w,c
  6495   00480E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6496   004810  B4D8               	btfsc	status,2,c
  6497   004812  EF0D  F024         	goto	u3441
  6498   004816  EF0F  F024         	goto	u3440
  6499   00481A                     u3441:
  6500   00481A  EF12  F024         	goto	l3440
  6501   00481E                     u3440:
  6502   00481E  90D8               	bcf	status,0,c
  6503   004820  EF13  F024         	goto	l858
  6504   004824                     l3440:
  6505   004824  80D8               	bsf	status,0,c
  6506   004826                     l858:
  6507   004826  0012               	return		;funcret
  6508   004828                     __end_of___fleq:
  6509                           	callstack 0
  6510                           
  6511 ;; *************** function ___fldiv *****************
  6512 ;; Defined at:
  6513 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  b               4   33[COMRAM] unsigned char 
  6516 ;;  a               4   37[COMRAM] unsigned char 
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  grs             4   52[COMRAM] unsigned long 
  6519 ;;  rem             4   45[COMRAM] unsigned long 
  6520 ;;  new_exp         2   50[COMRAM] short 
  6521 ;;  aexp            1   57[COMRAM] unsigned char 
  6522 ;;  bexp            1   56[COMRAM] unsigned char 
  6523 ;;  sign            1   49[COMRAM] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  4   33[COMRAM] unsigned char 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6533 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6536 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;Total ram usage:       25 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_custom_floatmodulo
  6543 ;;		_RGB_to_HSV
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text25
  6548   00320A                     __ptext25:
  6549                           	callstack 0
  6550   00320A                     ___fldiv:
  6551                           	callstack 26
  6552   00320A  5025               	movf	(___fldiv@b+3)^0,w,c
  6553   00320C  0B80               	andlw	128
  6554   00320E  6E32               	movwf	___fldiv@sign^0,c
  6555   003210  5025               	movf	(___fldiv@b+3)^0,w,c
  6556   003212  2425               	addwf	(___fldiv@b+3)^0,w,c
  6557   003214  6E39               	movwf	___fldiv@bexp^0,c
  6558   003216  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6559   003218  EF10  F019         	goto	u3001
  6560   00321C  EF12  F019         	goto	u3000
  6561   003220                     u3001:
  6562   003220  EF13  F019         	goto	l3160
  6563   003224                     u3000:
  6564   003224  8039               	bsf	___fldiv@bexp^0,0,c
  6565   003226                     l3160:
  6566   003226  5039               	movf	___fldiv@bexp^0,w,c
  6567   003228  B4D8               	btfsc	status,2,c
  6568   00322A  EF19  F019         	goto	u3011
  6569   00322E  EF1B  F019         	goto	u3010
  6570   003232                     u3011:
  6571   003232  EF30  F019         	goto	l3170
  6572   003236                     u3010:
  6573   003236  2839               	incf	___fldiv@bexp^0,w,c
  6574   003238  A4D8               	btfss	status,2,c
  6575   00323A  EF21  F019         	goto	u3021
  6576   00323E  EF23  F019         	goto	u3020
  6577   003242                     u3021:
  6578   003242  EF2B  F019         	goto	l3166
  6579   003246                     u3020:
  6580   003246  0E00               	movlw	0
  6581   003248  6E22               	movwf	___fldiv@b^0,c
  6582   00324A  0E00               	movlw	0
  6583   00324C  6E23               	movwf	(___fldiv@b+1)^0,c
  6584   00324E  0E00               	movlw	0
  6585   003250  6E24               	movwf	(___fldiv@b+2)^0,c
  6586   003252  0E00               	movlw	0
  6587   003254  6E25               	movwf	(___fldiv@b+3)^0,c
  6588   003256                     l3166:
  6589   003256  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6590   003258  0E00               	movlw	0
  6591   00325A  6E25               	movwf	(___fldiv@b+3)^0,c
  6592   00325C  EF38  F019         	goto	l3172
  6593   003260                     l3170:
  6594   003260  0E00               	movlw	0
  6595   003262  6E22               	movwf	___fldiv@b^0,c
  6596   003264  0E00               	movlw	0
  6597   003266  6E23               	movwf	(___fldiv@b+1)^0,c
  6598   003268  0E00               	movlw	0
  6599   00326A  6E24               	movwf	(___fldiv@b+2)^0,c
  6600   00326C  0E00               	movlw	0
  6601   00326E  6E25               	movwf	(___fldiv@b+3)^0,c
  6602   003270                     l3172:
  6603   003270  5029               	movf	(___fldiv@a+3)^0,w,c
  6604   003272  0B80               	andlw	128
  6605   003274  1A32               	xorwf	___fldiv@sign^0,f,c
  6606   003276  5029               	movf	(___fldiv@a+3)^0,w,c
  6607   003278  2429               	addwf	(___fldiv@a+3)^0,w,c
  6608   00327A  6E3A               	movwf	___fldiv@aexp^0,c
  6609   00327C  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6610   00327E  EF43  F019         	goto	u3031
  6611   003282  EF45  F019         	goto	u3030
  6612   003286                     u3031:
  6613   003286  EF46  F019         	goto	l3180
  6614   00328A                     u3030:
  6615   00328A  803A               	bsf	___fldiv@aexp^0,0,c
  6616   00328C                     l3180:
  6617   00328C  503A               	movf	___fldiv@aexp^0,w,c
  6618   00328E  B4D8               	btfsc	status,2,c
  6619   003290  EF4C  F019         	goto	u3041
  6620   003294  EF4E  F019         	goto	u3040
  6621   003298                     u3041:
  6622   003298  EF63  F019         	goto	l3190
  6623   00329C                     u3040:
  6624   00329C  283A               	incf	___fldiv@aexp^0,w,c
  6625   00329E  A4D8               	btfss	status,2,c
  6626   0032A0  EF54  F019         	goto	u3051
  6627   0032A4  EF56  F019         	goto	u3050
  6628   0032A8                     u3051:
  6629   0032A8  EF5E  F019         	goto	l3186
  6630   0032AC                     u3050:
  6631   0032AC  0E00               	movlw	0
  6632   0032AE  6E26               	movwf	___fldiv@a^0,c
  6633   0032B0  0E00               	movlw	0
  6634   0032B2  6E27               	movwf	(___fldiv@a+1)^0,c
  6635   0032B4  0E00               	movlw	0
  6636   0032B6  6E28               	movwf	(___fldiv@a+2)^0,c
  6637   0032B8  0E00               	movlw	0
  6638   0032BA  6E29               	movwf	(___fldiv@a+3)^0,c
  6639   0032BC                     l3186:
  6640   0032BC  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6641   0032BE  0E00               	movlw	0
  6642   0032C0  6E29               	movwf	(___fldiv@a+3)^0,c
  6643   0032C2  EF6B  F019         	goto	l3192
  6644   0032C6                     l3190:
  6645   0032C6  0E00               	movlw	0
  6646   0032C8  6E26               	movwf	___fldiv@a^0,c
  6647   0032CA  0E00               	movlw	0
  6648   0032CC  6E27               	movwf	(___fldiv@a+1)^0,c
  6649   0032CE  0E00               	movlw	0
  6650   0032D0  6E28               	movwf	(___fldiv@a+2)^0,c
  6651   0032D2  0E00               	movlw	0
  6652   0032D4  6E29               	movwf	(___fldiv@a+3)^0,c
  6653   0032D6                     l3192:
  6654   0032D6  5026               	movf	___fldiv@a^0,w,c
  6655   0032D8  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6656   0032DA  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6657   0032DC  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6658   0032DE  A4D8               	btfss	status,2,c
  6659   0032E0  EF74  F019         	goto	u3061
  6660   0032E4  EF76  F019         	goto	u3060
  6661   0032E8                     u3061:
  6662   0032E8  EF8E  F019         	goto	l3204
  6663   0032EC                     u3060:
  6664   0032EC  0E00               	movlw	0
  6665   0032EE  6E22               	movwf	___fldiv@b^0,c
  6666   0032F0  0E00               	movlw	0
  6667   0032F2  6E23               	movwf	(___fldiv@b+1)^0,c
  6668   0032F4  0E00               	movlw	0
  6669   0032F6  6E24               	movwf	(___fldiv@b+2)^0,c
  6670   0032F8  0E00               	movlw	0
  6671   0032FA  6E25               	movwf	(___fldiv@b+3)^0,c
  6672   0032FC  0E80               	movlw	128
  6673   0032FE  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6674   003300  0E7F               	movlw	127
  6675   003302  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6676   003304                     l3198:
  6677   003304  5032               	movf	___fldiv@sign^0,w,c
  6678   003306  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6679   003308  C022  F022         	movff	___fldiv@b,?___fldiv
  6680   00330C  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6681   003310  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6682   003314  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6683   003318  EFD1  F01A         	goto	l1181
  6684   00331C                     l3204:
  6685   00331C  5039               	movf	___fldiv@bexp^0,w,c
  6686   00331E  A4D8               	btfss	status,2,c
  6687   003320  EF94  F019         	goto	u3071
  6688   003324  EF96  F019         	goto	u3070
  6689   003328                     u3071:
  6690   003328  EFA0  F019         	goto	l3212
  6691   00332C                     u3070:
  6692   00332C  0E00               	movlw	0
  6693   00332E  6E22               	movwf	?___fldiv^0,c
  6694   003330  0E00               	movlw	0
  6695   003332  6E23               	movwf	(?___fldiv+1)^0,c
  6696   003334  0E00               	movlw	0
  6697   003336  6E24               	movwf	(?___fldiv+2)^0,c
  6698   003338  0E00               	movlw	0
  6699   00333A  6E25               	movwf	(?___fldiv+3)^0,c
  6700   00333C  EFD1  F01A         	goto	l1181
  6701   003340                     l3212:
  6702   003340  503A               	movf	___fldiv@aexp^0,w,c
  6703   003342  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6704   003346  6A2B               	clrf	(??___fldiv+1)^0,c
  6705   003348  5E2A               	subwf	??___fldiv^0,f,c
  6706   00334A  0E00               	movlw	0
  6707   00334C  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6708   00334E  0E7F               	movlw	127
  6709   003350  242A               	addwf	??___fldiv^0,w,c
  6710   003352  6E33               	movwf	___fldiv@new_exp^0,c
  6711   003354  0E00               	movlw	0
  6712   003356  202B               	addwfc	(??___fldiv+1)^0,w,c
  6713   003358  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6714   00335A  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6715   00335E  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6716   003362  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6717   003366  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6718   00336A  0E00               	movlw	0
  6719   00336C  6E22               	movwf	___fldiv@b^0,c
  6720   00336E  0E00               	movlw	0
  6721   003370  6E23               	movwf	(___fldiv@b+1)^0,c
  6722   003372  0E00               	movlw	0
  6723   003374  6E24               	movwf	(___fldiv@b+2)^0,c
  6724   003376  0E00               	movlw	0
  6725   003378  6E25               	movwf	(___fldiv@b+3)^0,c
  6726   00337A  0E00               	movlw	0
  6727   00337C  6E35               	movwf	___fldiv@grs^0,c
  6728   00337E  0E00               	movlw	0
  6729   003380  6E36               	movwf	(___fldiv@grs+1)^0,c
  6730   003382  0E00               	movlw	0
  6731   003384  6E37               	movwf	(___fldiv@grs+2)^0,c
  6732   003386  0E00               	movlw	0
  6733   003388  6E38               	movwf	(___fldiv@grs+3)^0,c
  6734   00338A  0E00               	movlw	0
  6735   00338C  6E3A               	movwf	___fldiv@aexp^0,c
  6736   00338E  EF01  F01A         	goto	l1183
  6737   003392                     l3222:
  6738   003392  503A               	movf	___fldiv@aexp^0,w,c
  6739   003394  B4D8               	btfsc	status,2,c
  6740   003396  EFCF  F019         	goto	u3081
  6741   00339A  EFD1  F019         	goto	u3080
  6742   00339E                     u3081:
  6743   00339E  EFE8  F019         	goto	l3230
  6744   0033A2                     u3080:
  6745   0033A2  90D8               	bcf	status,0,c
  6746   0033A4  362E               	rlcf	___fldiv@rem^0,f,c
  6747   0033A6  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6748   0033A8  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6749   0033AA  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6750   0033AC  90D8               	bcf	status,0,c
  6751   0033AE  3622               	rlcf	___fldiv@b^0,f,c
  6752   0033B0  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6753   0033B2  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6754   0033B4  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6755   0033B6  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6756   0033B8  EFE0  F019         	goto	u3091
  6757   0033BC  EFE2  F019         	goto	u3090
  6758   0033C0                     u3091:
  6759   0033C0  EFE3  F019         	goto	l1186
  6760   0033C4                     u3090:
  6761   0033C4  8022               	bsf	___fldiv@b^0,0,c
  6762   0033C6                     l1186:
  6763   0033C6  90D8               	bcf	status,0,c
  6764   0033C8  3635               	rlcf	___fldiv@grs^0,f,c
  6765   0033CA  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6766   0033CC  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6767   0033CE  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6768   0033D0                     l3230:
  6769   0033D0  5026               	movf	___fldiv@a^0,w,c
  6770   0033D2  5C2E               	subwf	___fldiv@rem^0,w,c
  6771   0033D4  5027               	movf	(___fldiv@a+1)^0,w,c
  6772   0033D6  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6773   0033D8  5028               	movf	(___fldiv@a+2)^0,w,c
  6774   0033DA  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6775   0033DC  5029               	movf	(___fldiv@a+3)^0,w,c
  6776   0033DE  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6777   0033E0  A0D8               	btfss	status,0,c
  6778   0033E2  EFF5  F019         	goto	u3101
  6779   0033E6  EFF7  F019         	goto	u3100
  6780   0033EA                     u3101:
  6781   0033EA  EF00  F01A         	goto	l3236
  6782   0033EE                     u3100:
  6783   0033EE  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6784   0033F0  5026               	movf	___fldiv@a^0,w,c
  6785   0033F2  5E2E               	subwf	___fldiv@rem^0,f,c
  6786   0033F4  5027               	movf	(___fldiv@a+1)^0,w,c
  6787   0033F6  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6788   0033F8  5028               	movf	(___fldiv@a+2)^0,w,c
  6789   0033FA  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6790   0033FC  5029               	movf	(___fldiv@a+3)^0,w,c
  6791   0033FE  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6792   003400                     l3236:
  6793   003400  2A3A               	incf	___fldiv@aexp^0,f,c
  6794   003402                     l1183:
  6795   003402  0E19               	movlw	25
  6796   003404  643A               	cpfsgt	___fldiv@aexp^0,c
  6797   003406  EF07  F01A         	goto	u3111
  6798   00340A  EF09  F01A         	goto	u3110
  6799   00340E                     u3111:
  6800   00340E  EFC9  F019         	goto	l3222
  6801   003412                     u3110:
  6802   003412  502E               	movf	___fldiv@rem^0,w,c
  6803   003414  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6804   003416  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6805   003418  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6806   00341A  B4D8               	btfsc	status,2,c
  6807   00341C  EF12  F01A         	goto	u3121
  6808   003420  EF14  F01A         	goto	u3120
  6809   003424                     u3121:
  6810   003424  EF2C  F01A         	goto	l3248
  6811   003428                     u3120:
  6812   003428  8035               	bsf	___fldiv@grs^0,0,c
  6813   00342A  EF2C  F01A         	goto	l3248
  6814   00342E                     l3242:
  6815   00342E  90D8               	bcf	status,0,c
  6816   003430  3622               	rlcf	___fldiv@b^0,f,c
  6817   003432  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6818   003434  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6819   003436  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6820   003438  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6821   00343A  EF21  F01A         	goto	u3131
  6822   00343E  EF23  F01A         	goto	u3130
  6823   003442                     u3131:
  6824   003442  EF24  F01A         	goto	l1192
  6825   003446                     u3130:
  6826   003446  8022               	bsf	___fldiv@b^0,0,c
  6827   003448                     l1192:
  6828   003448  90D8               	bcf	status,0,c
  6829   00344A  3635               	rlcf	___fldiv@grs^0,f,c
  6830   00344C  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6831   00344E  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6832   003450  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6833   003452  0633               	decf	___fldiv@new_exp^0,f,c
  6834   003454  A0D8               	btfss	status,0,c
  6835   003456  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6836   003458                     l3248:
  6837   003458  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6838   00345A  EF31  F01A         	goto	u3141
  6839   00345E  EF33  F01A         	goto	u3140
  6840   003462                     u3141:
  6841   003462  EF17  F01A         	goto	l3242
  6842   003466                     u3140:
  6843   003466  0E00               	movlw	0
  6844   003468  6E3A               	movwf	___fldiv@aexp^0,c
  6845   00346A  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6846   00346C  EF3A  F01A         	goto	u3151
  6847   003470  EF3C  F01A         	goto	u3150
  6848   003474                     u3151:
  6849   003474  EF60  F01A         	goto	l1194
  6850   003478                     u3150:
  6851   003478  0EFF               	movlw	255
  6852   00347A  1435               	andwf	___fldiv@grs^0,w,c
  6853   00347C  6E2A               	movwf	??___fldiv^0,c
  6854   00347E  0EFF               	movlw	255
  6855   003480  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6856   003482  6E2B               	movwf	(??___fldiv+1)^0,c
  6857   003484  0EFF               	movlw	255
  6858   003486  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6859   003488  6E2C               	movwf	(??___fldiv+2)^0,c
  6860   00348A  0E7F               	movlw	127
  6861   00348C  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6862   00348E  6E2D               	movwf	(??___fldiv+3)^0,c
  6863   003490  502A               	movf	??___fldiv^0,w,c
  6864   003492  102B               	iorwf	(??___fldiv+1)^0,w,c
  6865   003494  102C               	iorwf	(??___fldiv+2)^0,w,c
  6866   003496  102D               	iorwf	(??___fldiv+3)^0,w,c
  6867   003498  B4D8               	btfsc	status,2,c
  6868   00349A  EF51  F01A         	goto	u3161
  6869   00349E  EF53  F01A         	goto	u3160
  6870   0034A2                     u3161:
  6871   0034A2  EF57  F01A         	goto	l1195
  6872   0034A6                     u3160:
  6873   0034A6                     l3256:
  6874   0034A6  0E01               	movlw	1
  6875   0034A8  6E3A               	movwf	___fldiv@aexp^0,c
  6876   0034AA  EF60  F01A         	goto	l1194
  6877   0034AE                     l1195:
  6878   0034AE  A022               	btfss	___fldiv@b^0,0,c
  6879   0034B0  EF5C  F01A         	goto	u3171
  6880   0034B4  EF5E  F01A         	goto	u3170
  6881   0034B8                     u3171:
  6882   0034B8  EF60  F01A         	goto	l1194
  6883   0034BC                     u3170:
  6884   0034BC  EF53  F01A         	goto	l3256
  6885   0034C0                     l1194:
  6886   0034C0  503A               	movf	___fldiv@aexp^0,w,c
  6887   0034C2  B4D8               	btfsc	status,2,c
  6888   0034C4  EF66  F01A         	goto	u3181
  6889   0034C8  EF68  F01A         	goto	u3180
  6890   0034CC                     u3181:
  6891   0034CC  EF8C  F01A         	goto	l3268
  6892   0034D0                     u3180:
  6893   0034D0  0E01               	movlw	1
  6894   0034D2  2622               	addwf	___fldiv@b^0,f,c
  6895   0034D4  0E00               	movlw	0
  6896   0034D6  2223               	addwfc	(___fldiv@b+1)^0,f,c
  6897   0034D8  2224               	addwfc	(___fldiv@b+2)^0,f,c
  6898   0034DA  2225               	addwfc	(___fldiv@b+3)^0,f,c
  6899   0034DC  A025               	btfss	(___fldiv@b+3)^0,0,c
  6900   0034DE  EF73  F01A         	goto	u3191
  6901   0034E2  EF75  F01A         	goto	u3190
  6902   0034E6                     u3191:
  6903   0034E6  EF8C  F01A         	goto	l3268
  6904   0034EA                     u3190:
  6905   0034EA  C022  F02A         	movff	___fldiv@b,??___fldiv
  6906   0034EE  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  6907   0034F2  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  6908   0034F6  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  6909   0034FA  342D               	rlcf	(??___fldiv+3)^0,w,c
  6910   0034FC  322D               	rrcf	(??___fldiv+3)^0,f,c
  6911   0034FE  322C               	rrcf	(??___fldiv+2)^0,f,c
  6912   003500  322B               	rrcf	(??___fldiv+1)^0,f,c
  6913   003502  322A               	rrcf	??___fldiv^0,f,c
  6914   003504  C02A  F022         	movff	??___fldiv,___fldiv@b
  6915   003508  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  6916   00350C  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  6917   003510  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  6918   003514  4A33               	infsnz	___fldiv@new_exp^0,f,c
  6919   003516  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  6920   003518                     l3268:
  6921   003518  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6922   00351A  EF97  F01A         	goto	u3201
  6923   00351E  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6924   003520  E108               	bnz	u3200
  6925   003522  2833               	incf	___fldiv@new_exp^0,w,c
  6926   003524  A0D8               	btfss	status,0,c
  6927   003526  EF97  F01A         	goto	u3201
  6928   00352A  EF99  F01A         	goto	u3200
  6929   00352E                     u3201:
  6930   00352E  EFA4  F01A         	goto	l3272
  6931   003532                     u3200:
  6932   003532  0E00               	movlw	0
  6933   003534  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6934   003536  6833               	setf	___fldiv@new_exp^0,c
  6935   003538  0E00               	movlw	0
  6936   00353A  6E22               	movwf	___fldiv@b^0,c
  6937   00353C  0E00               	movlw	0
  6938   00353E  6E23               	movwf	(___fldiv@b+1)^0,c
  6939   003540  0E00               	movlw	0
  6940   003542  6E24               	movwf	(___fldiv@b+2)^0,c
  6941   003544  0E00               	movlw	0
  6942   003546  6E25               	movwf	(___fldiv@b+3)^0,c
  6943   003548                     l3272:
  6944   003548  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6945   00354A  EFB1  F01A         	goto	u3210
  6946   00354E  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6947   003550  E106               	bnz	u3211
  6948   003552  0433               	decf	___fldiv@new_exp^0,w,c
  6949   003554  B0D8               	btfsc	status,0,c
  6950   003556  EFAF  F01A         	goto	u3211
  6951   00355A  EFB1  F01A         	goto	u3210
  6952   00355E                     u3211:
  6953   00355E  EFBF  F01A         	goto	l3276
  6954   003562                     u3210:
  6955   003562  0E00               	movlw	0
  6956   003564  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6957   003566  0E00               	movlw	0
  6958   003568  6E33               	movwf	___fldiv@new_exp^0,c
  6959   00356A  0E00               	movlw	0
  6960   00356C  6E22               	movwf	___fldiv@b^0,c
  6961   00356E  0E00               	movlw	0
  6962   003570  6E23               	movwf	(___fldiv@b+1)^0,c
  6963   003572  0E00               	movlw	0
  6964   003574  6E24               	movwf	(___fldiv@b+2)^0,c
  6965   003576  0E00               	movlw	0
  6966   003578  6E25               	movwf	(___fldiv@b+3)^0,c
  6967   00357A  0E00               	movlw	0
  6968   00357C  6E32               	movwf	___fldiv@sign^0,c
  6969   00357E                     l3276:
  6970   00357E  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  6971   003582  A039               	btfss	___fldiv@bexp^0,0,c
  6972   003584  EFC6  F01A         	goto	u3221
  6973   003588  EFC8  F01A         	goto	u3220
  6974   00358C                     u3221:
  6975   00358C  EFCB  F01A         	goto	l3282
  6976   003590                     u3220:
  6977   003590  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6978   003592  EFCC  F01A         	goto	l3284
  6979   003596                     l3282:
  6980   003596  9E24               	bcf	(___fldiv@b+2)^0,7,c
  6981   003598                     l3284:
  6982   003598  90D8               	bcf	status,0,c
  6983   00359A  3039               	rrcf	___fldiv@bexp^0,w,c
  6984   00359C  6E25               	movwf	(___fldiv@b+3)^0,c
  6985   00359E  EF82  F019         	goto	l3198
  6986   0035A2                     l1181:
  6987   0035A2  0012               	return		;funcret
  6988   0035A4                     __end_of___fldiv:
  6989                           	callstack 0
  6990                           
  6991 ;; *************** function ___flge *****************
  6992 ;; Defined at:
  6993 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  ff1             4    0[COMRAM] unsigned char 
  6996 ;;  ff2             4    4[COMRAM] unsigned char 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;		None
  6999 ;; Return value:  Size  Location     Type
  7000 ;;		None               void
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7008 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7010 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7011 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;Total ram usage:       12 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_RGB_to_HSV
  7018 ;;		_color_cardCheck
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text26
  7023   00443E                     __ptext26:
  7024                           	callstack 0
  7025   00443E                     ___flge:
  7026                           	callstack 28
  7027   00443E  0E00               	movlw	0
  7028   004440  1401               	andwf	___flge@ff1^0,w,c
  7029   004442  6E09               	movwf	??___flge^0,c
  7030   004444  0E00               	movlw	0
  7031   004446  1402               	andwf	(___flge@ff1+1)^0,w,c
  7032   004448  6E0A               	movwf	(??___flge+1)^0,c
  7033   00444A  0E80               	movlw	128
  7034   00444C  1403               	andwf	(___flge@ff1+2)^0,w,c
  7035   00444E  6E0B               	movwf	(??___flge+2)^0,c
  7036   004450  0E7F               	movlw	127
  7037   004452  1404               	andwf	(___flge@ff1+3)^0,w,c
  7038   004454  6E0C               	movwf	(??___flge+3)^0,c
  7039   004456  5009               	movf	??___flge^0,w,c
  7040   004458  100A               	iorwf	(??___flge+1)^0,w,c
  7041   00445A  100B               	iorwf	(??___flge+2)^0,w,c
  7042   00445C  100C               	iorwf	(??___flge+3)^0,w,c
  7043   00445E  A4D8               	btfss	status,2,c
  7044   004460  EF34  F022         	goto	u3651
  7045   004464  EF36  F022         	goto	u3650
  7046   004468                     u3651:
  7047   004468  EF3E  F022         	goto	l3588
  7048   00446C                     u3650:
  7049   00446C  0E00               	movlw	0
  7050   00446E  6E01               	movwf	___flge@ff1^0,c
  7051   004470  0E00               	movlw	0
  7052   004472  6E02               	movwf	(___flge@ff1+1)^0,c
  7053   004474  0E00               	movlw	0
  7054   004476  6E03               	movwf	(___flge@ff1+2)^0,c
  7055   004478  0E00               	movlw	0
  7056   00447A  6E04               	movwf	(___flge@ff1+3)^0,c
  7057   00447C                     l3588:
  7058   00447C  0E00               	movlw	0
  7059   00447E  1405               	andwf	___flge@ff2^0,w,c
  7060   004480  6E09               	movwf	??___flge^0,c
  7061   004482  0E00               	movlw	0
  7062   004484  1406               	andwf	(___flge@ff2+1)^0,w,c
  7063   004486  6E0A               	movwf	(??___flge+1)^0,c
  7064   004488  0E80               	movlw	128
  7065   00448A  1407               	andwf	(___flge@ff2+2)^0,w,c
  7066   00448C  6E0B               	movwf	(??___flge+2)^0,c
  7067   00448E  0E7F               	movlw	127
  7068   004490  1408               	andwf	(___flge@ff2+3)^0,w,c
  7069   004492  6E0C               	movwf	(??___flge+3)^0,c
  7070   004494  5009               	movf	??___flge^0,w,c
  7071   004496  100A               	iorwf	(??___flge+1)^0,w,c
  7072   004498  100B               	iorwf	(??___flge+2)^0,w,c
  7073   00449A  100C               	iorwf	(??___flge+3)^0,w,c
  7074   00449C  A4D8               	btfss	status,2,c
  7075   00449E  EF53  F022         	goto	u3661
  7076   0044A2  EF55  F022         	goto	u3660
  7077   0044A6                     u3661:
  7078   0044A6  EF5D  F022         	goto	l3592
  7079   0044AA                     u3660:
  7080   0044AA  0E00               	movlw	0
  7081   0044AC  6E05               	movwf	___flge@ff2^0,c
  7082   0044AE  0E00               	movlw	0
  7083   0044B0  6E06               	movwf	(___flge@ff2+1)^0,c
  7084   0044B2  0E00               	movlw	0
  7085   0044B4  6E07               	movwf	(___flge@ff2+2)^0,c
  7086   0044B6  0E00               	movlw	0
  7087   0044B8  6E08               	movwf	(___flge@ff2+3)^0,c
  7088   0044BA                     l3592:
  7089   0044BA  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7090   0044BC  EF62  F022         	goto	u3671
  7091   0044C0  EF64  F022         	goto	u3670
  7092   0044C4                     u3671:
  7093   0044C4  EF6D  F022         	goto	l3596
  7094   0044C8                     u3670:
  7095   0044C8  6C01               	negf	___flge@ff1^0,c
  7096   0044CA  1E02               	comf	(___flge@ff1+1)^0,f,c
  7097   0044CC  B0D8               	btfsc	status,0,c
  7098   0044CE  2A02               	incf	(___flge@ff1+1)^0,f,c
  7099   0044D0  1E03               	comf	(___flge@ff1+2)^0,f,c
  7100   0044D2  B0D8               	btfsc	status,0,c
  7101   0044D4  2A03               	incf	(___flge@ff1+2)^0,f,c
  7102   0044D6  0E80               	movlw	128
  7103   0044D8  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7104   0044DA                     l3596:
  7105   0044DA  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7106   0044DC  EF72  F022         	goto	u3681
  7107   0044E0  EF74  F022         	goto	u3680
  7108   0044E4                     u3681:
  7109   0044E4  EF7D  F022         	goto	l864
  7110   0044E8                     u3680:
  7111   0044E8  6C05               	negf	___flge@ff2^0,c
  7112   0044EA  1E06               	comf	(___flge@ff2+1)^0,f,c
  7113   0044EC  B0D8               	btfsc	status,0,c
  7114   0044EE  2A06               	incf	(___flge@ff2+1)^0,f,c
  7115   0044F0  1E07               	comf	(___flge@ff2+2)^0,f,c
  7116   0044F2  B0D8               	btfsc	status,0,c
  7117   0044F4  2A07               	incf	(___flge@ff2+2)^0,f,c
  7118   0044F6  0E80               	movlw	128
  7119   0044F8  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7120   0044FA                     l864:
  7121   0044FA  0E00               	movlw	0
  7122   0044FC  1A01               	xorwf	___flge@ff1^0,f,c
  7123   0044FE  0E00               	movlw	0
  7124   004500  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7125   004502  0E00               	movlw	0
  7126   004504  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7127   004506  0E80               	movlw	128
  7128   004508  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7129   00450A  0E00               	movlw	0
  7130   00450C  1A05               	xorwf	___flge@ff2^0,f,c
  7131   00450E  0E00               	movlw	0
  7132   004510  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7133   004512  0E00               	movlw	0
  7134   004514  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7135   004516  0E80               	movlw	128
  7136   004518  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7137   00451A  5005               	movf	___flge@ff2^0,w,c
  7138   00451C  5C01               	subwf	___flge@ff1^0,w,c
  7139   00451E  5006               	movf	(___flge@ff2+1)^0,w,c
  7140   004520  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7141   004522  5007               	movf	(___flge@ff2+2)^0,w,c
  7142   004524  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7143   004526  5008               	movf	(___flge@ff2+3)^0,w,c
  7144   004528  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7145   00452A  B0D8               	btfsc	status,0,c
  7146   00452C  EF9A  F022         	goto	u3691
  7147   004530  EF9C  F022         	goto	u3690
  7148   004534                     u3691:
  7149   004534  EF9F  F022         	goto	l3602
  7150   004538                     u3690:
  7151   004538  90D8               	bcf	status,0,c
  7152   00453A  EFA0  F022         	goto	l869
  7153   00453E                     l3602:
  7154   00453E  80D8               	bsf	status,0,c
  7155   004540                     l869:
  7156   004540  0012               	return		;funcret
  7157   004542                     __end_of___flge:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function _maze_return *****************
  7161 ;; Defined at:
  7162 ;;		line 126 in file "pathfinder.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  c               1   32[COMRAM] PTR struct calibration_s
  7165 ;;		 -> calibration(9), 
  7166 ;;  mL              1   33[COMRAM] PTR struct DC_motor
  7167 ;;		 -> motorL(9), 
  7168 ;;  mR              1   34[COMRAM] PTR struct DC_motor
  7169 ;;		 -> motorR(9), 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  j               2   38[COMRAM] int 
  7172 ;;  distance_bac    1   40[COMRAM] unsigned char 
  7173 ;;  i               2   41[COMRAM] int 
  7174 ;;  i               2   43[COMRAM] int 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7184 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;Total ram usage:       13 bytes
  7189 ;; Hardware stack levels used: 1
  7190 ;; Hardware stack levels required when called: 3
  7191 ;; This function calls:
  7192 ;;		_backward
  7193 ;;		_forward
  7194 ;;		_leftTURN
  7195 ;;		_rightTURN
  7196 ;; This function is called by:
  7197 ;;		_main
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text27
  7202   002456                     __ptext27:
  7203                           	callstack 0
  7204   002456                     _maze_return:
  7205                           	callstack 27
  7206   002456  0E00               	movlw	0
  7207   002458  6E2D               	movwf	(maze_return@i+1)^0,c
  7208   00245A  0E32               	movlw	50
  7209   00245C  6E2C               	movwf	maze_return@i^0,c
  7210   00245E                     l4402:
  7211                           
  7212                           ;pathfinder.c: 133:             if(Operation_History[i] > 10){
  7213   00245E  0E3C               	movlw	low _Operation_History
  7214   002460  242C               	addwf	maze_return@i^0,w,c
  7215   002462  6ED9               	movwf	fsr2l,c
  7216   002464  0E01               	movlw	high _Operation_History
  7217   002466  202D               	addwfc	(maze_return@i+1)^0,w,c
  7218   002468  6EDA               	movwf	fsr2h,c
  7219   00246A  0E0A               	movlw	10
  7220   00246C  64DF               	cpfsgt	indf2,c
  7221   00246E  EF3B  F012         	goto	u4921
  7222   002472  EF3D  F012         	goto	u4920
  7223   002476                     u4921:
  7224   002476  EF73  F012         	goto	l4414
  7225   00247A                     u4920:
  7226   00247A                     
  7227                           ;pathfinder.c: 134:                 unsigned char distance_back = Operation_History[i] -
      +                           10;
  7228   00247A  0E3C               	movlw	low _Operation_History
  7229   00247C  242C               	addwf	maze_return@i^0,w,c
  7230   00247E  6ED9               	movwf	fsr2l,c
  7231   002480  0E01               	movlw	high _Operation_History
  7232   002482  202D               	addwfc	(maze_return@i+1)^0,w,c
  7233   002484  6EDA               	movwf	fsr2h,c
  7234   002486  50DF               	movf	indf2,w,c
  7235   002488  0FF6               	addlw	246
  7236   00248A  6E29               	movwf	maze_return@distance_back^0,c
  7237   00248C                     
  7238                           ;pathfinder.c: 135:                 for (int j = 0; j < distance_back-1; j++) {
  7239   00248C  0E00               	movlw	0
  7240   00248E  6E28               	movwf	(maze_return@j+1)^0,c
  7241   002490  0E00               	movlw	0
  7242   002492  6E27               	movwf	maze_return@j^0,c
  7243   002494  EF5A  F012         	goto	l4412
  7244   002498                     l4408:
  7245                           
  7246                           ;pathfinder.c: 136:                     forward(c->forward_one, mL, mR);
  7247   002498  C022  F013         	movff	maze_return@mL,forward@mL
  7248   00249C  C023  F014         	movff	maze_return@mR,forward@mR
  7249   0024A0  5021               	movf	maze_return@c^0,w,c
  7250   0024A2  6ED9               	movwf	fsr2l,c
  7251   0024A4  6ADA               	clrf	fsr2h,c
  7252   0024A6  0E05               	movlw	5
  7253   0024A8  26D9               	addwf	fsr2l,f,c
  7254   0024AA  50DF               	movf	indf2,w,c
  7255   0024AC  ECC3  F01C         	call	_forward
  7256   0024B0                     
  7257                           ;pathfinder.c: 137:                 }
  7258   0024B0  4A27               	infsnz	maze_return@j^0,f,c
  7259   0024B2  2A28               	incf	(maze_return@j+1)^0,f,c
  7260   0024B4                     l4412:
  7261   0024B4  0EFF               	movlw	255
  7262   0024B6  2429               	addwf	maze_return@distance_back^0,w,c
  7263   0024B8  6E24               	movwf	??_maze_return^0,c
  7264   0024BA  6A25               	clrf	(??_maze_return+1)^0,c
  7265   0024BC  0EFF               	movlw	255
  7266   0024BE  2225               	addwfc	(??_maze_return+1)^0,f,c
  7267   0024C0  5024               	movf	??_maze_return^0,w,c
  7268   0024C2  5C27               	subwf	maze_return@j^0,w,c
  7269   0024C4  5028               	movf	(maze_return@j+1)^0,w,c
  7270   0024C6  0A80               	xorlw	128
  7271   0024C8  6E26               	movwf	(??_maze_return+2)^0,c
  7272   0024CA  5025               	movf	(??_maze_return+1)^0,w,c
  7273   0024CC  0A80               	xorlw	128
  7274   0024CE  5826               	subwfb	(??_maze_return+2)^0,w,c
  7275   0024D0  A0D8               	btfss	status,0,c
  7276   0024D2  EF6D  F012         	goto	u4931
  7277   0024D6  EF6F  F012         	goto	u4930
  7278   0024DA                     u4931:
  7279   0024DA  EF4C  F012         	goto	l4408
  7280   0024DE                     u4930:
  7281   0024DE  EF67  F014         	goto	l4442
  7282   0024E2                     l577:
  7283                           
  7284                           ;pathfinder.c: 140:             }
  7285   0024E2  EF67  F014         	goto	l4442
  7286   0024E6                     l4414:
  7287   0024E6  0E3C               	movlw	low _Operation_History
  7288   0024E8  242C               	addwf	maze_return@i^0,w,c
  7289   0024EA  6ED9               	movwf	fsr2l,c
  7290   0024EC  0E01               	movlw	high _Operation_History
  7291   0024EE  202D               	addwfc	(maze_return@i+1)^0,w,c
  7292   0024F0  6EDA               	movwf	fsr2h,c
  7293   0024F2  04DE               	decf	postinc2,w,c
  7294   0024F4  A4D8               	btfss	status,2,c
  7295   0024F6  EF7F  F012         	goto	u4941
  7296   0024FA  EF81  F012         	goto	u4940
  7297   0024FE                     u4941:
  7298   0024FE  EFA7  F012         	goto	l4418
  7299   002502                     u4940:
  7300   002502                     
  7301                           ;pathfinder.c: 143:                 leftTURN(c->left_90, mL, mR);
  7302   002502  C022  F013         	movff	maze_return@mL,leftTURN@mL
  7303   002506  C023  F014         	movff	maze_return@mR,leftTURN@mR
  7304   00250A  5021               	movf	maze_return@c^0,w,c
  7305   00250C  6ED9               	movwf	fsr2l,c
  7306   00250E  6ADA               	clrf	fsr2h,c
  7307   002510  0E02               	movlw	2
  7308   002512  26D9               	addwf	fsr2l,f,c
  7309   002514  50DF               	movf	indf2,w,c
  7310   002516  EC42  F01E         	call	_leftTURN
  7311                           
  7312                           ;pathfinder.c: 144:                 backward(c->backward_one, mL, mR);
  7313   00251A  C022  F013         	movff	maze_return@mL,backward@mL
  7314   00251E  C023  F014         	movff	maze_return@mR,backward@mR
  7315   002522  5021               	movf	maze_return@c^0,w,c
  7316   002524  6ED9               	movwf	fsr2l,c
  7317   002526  6ADA               	clrf	fsr2h,c
  7318   002528  0E06               	movlw	6
  7319   00252A  26D9               	addwf	fsr2l,f,c
  7320   00252C  50DF               	movf	indf2,w,c
  7321   00252E  EC01  F01F         	call	_backward
  7322                           
  7323                           ;pathfinder.c: 145:                 forward(c->forward_half, mL, mR);
  7324   002532  C022  F013         	movff	maze_return@mL,forward@mL
  7325   002536  C023  F014         	movff	maze_return@mR,forward@mR
  7326   00253A  5021               	movf	maze_return@c^0,w,c
  7327   00253C  6ED9               	movwf	fsr2l,c
  7328   00253E  6ADA               	clrf	fsr2h,c
  7329   002540  0E07               	movlw	7
  7330   002542  26D9               	addwf	fsr2l,f,c
  7331   002544  50DF               	movf	indf2,w,c
  7332   002546  ECC3  F01C         	call	_forward
  7333                           
  7334                           ;pathfinder.c: 146:             }
  7335   00254A  EF67  F014         	goto	l4442
  7336   00254E                     l4418:
  7337   00254E  0E3C               	movlw	low _Operation_History
  7338   002550  242C               	addwf	maze_return@i^0,w,c
  7339   002552  6ED9               	movwf	fsr2l,c
  7340   002554  0E01               	movlw	high _Operation_History
  7341   002556  202D               	addwfc	(maze_return@i+1)^0,w,c
  7342   002558  6EDA               	movwf	fsr2h,c
  7343   00255A  0E02               	movlw	2
  7344   00255C  18DE               	xorwf	postinc2,w,c
  7345   00255E  A4D8               	btfss	status,2,c
  7346   002560  EFB4  F012         	goto	u4951
  7347   002564  EFB6  F012         	goto	u4950
  7348   002568                     u4951:
  7349   002568  EFDC  F012         	goto	l4422
  7350   00256C                     u4950:
  7351   00256C                     
  7352                           ;pathfinder.c: 149:                 rightTURN(c->right_90, mL, mR);
  7353   00256C  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7354   002570  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7355   002574  5021               	movf	maze_return@c^0,w,c
  7356   002576  6ED9               	movwf	fsr2l,c
  7357   002578  6ADA               	clrf	fsr2h,c
  7358   00257A  0E01               	movlw	1
  7359   00257C  26D9               	addwf	fsr2l,f,c
  7360   00257E  50DF               	movf	indf2,w,c
  7361   002580  EC83  F01D         	call	_rightTURN
  7362                           
  7363                           ;pathfinder.c: 150:                 backward(c->backward_one, mL, mR);
  7364   002584  C022  F013         	movff	maze_return@mL,backward@mL
  7365   002588  C023  F014         	movff	maze_return@mR,backward@mR
  7366   00258C  5021               	movf	maze_return@c^0,w,c
  7367   00258E  6ED9               	movwf	fsr2l,c
  7368   002590  6ADA               	clrf	fsr2h,c
  7369   002592  0E06               	movlw	6
  7370   002594  26D9               	addwf	fsr2l,f,c
  7371   002596  50DF               	movf	indf2,w,c
  7372   002598  EC01  F01F         	call	_backward
  7373                           
  7374                           ;pathfinder.c: 151:                 forward(c->forward_half, mL, mR);
  7375   00259C  C022  F013         	movff	maze_return@mL,forward@mL
  7376   0025A0  C023  F014         	movff	maze_return@mR,forward@mR
  7377   0025A4  5021               	movf	maze_return@c^0,w,c
  7378   0025A6  6ED9               	movwf	fsr2l,c
  7379   0025A8  6ADA               	clrf	fsr2h,c
  7380   0025AA  0E07               	movlw	7
  7381   0025AC  26D9               	addwf	fsr2l,f,c
  7382   0025AE  50DF               	movf	indf2,w,c
  7383   0025B0  ECC3  F01C         	call	_forward
  7384                           
  7385                           ;pathfinder.c: 152:             }
  7386   0025B4  EF67  F014         	goto	l4442
  7387   0025B8                     l4422:
  7388   0025B8  0E3C               	movlw	low _Operation_History
  7389   0025BA  242C               	addwf	maze_return@i^0,w,c
  7390   0025BC  6ED9               	movwf	fsr2l,c
  7391   0025BE  0E01               	movlw	high _Operation_History
  7392   0025C0  202D               	addwfc	(maze_return@i+1)^0,w,c
  7393   0025C2  6EDA               	movwf	fsr2h,c
  7394   0025C4  0E03               	movlw	3
  7395   0025C6  18DE               	xorwf	postinc2,w,c
  7396   0025C8  A4D8               	btfss	status,2,c
  7397   0025CA  EFE9  F012         	goto	u4961
  7398   0025CE  EFEB  F012         	goto	u4960
  7399   0025D2                     u4961:
  7400   0025D2  EF1D  F013         	goto	l4426
  7401   0025D6                     u4960:
  7402   0025D6                     
  7403                           ;pathfinder.c: 155:                 rightTURN(c->right_90, mL, mR);
  7404   0025D6  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7405   0025DA  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7406   0025DE  5021               	movf	maze_return@c^0,w,c
  7407   0025E0  6ED9               	movwf	fsr2l,c
  7408   0025E2  6ADA               	clrf	fsr2h,c
  7409   0025E4  0E01               	movlw	1
  7410   0025E6  26D9               	addwf	fsr2l,f,c
  7411   0025E8  50DF               	movf	indf2,w,c
  7412   0025EA  EC83  F01D         	call	_rightTURN
  7413                           
  7414                           ;pathfinder.c: 156:                 rightTURN(c->right_90, mL, mR);
  7415   0025EE  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7416   0025F2  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7417   0025F6  5021               	movf	maze_return@c^0,w,c
  7418   0025F8  6ED9               	movwf	fsr2l,c
  7419   0025FA  6ADA               	clrf	fsr2h,c
  7420   0025FC  0E01               	movlw	1
  7421   0025FE  26D9               	addwf	fsr2l,f,c
  7422   002600  50DF               	movf	indf2,w,c
  7423   002602  EC83  F01D         	call	_rightTURN
  7424                           
  7425                           ;pathfinder.c: 157:                 backward(c->backward_one, mL, mR);
  7426   002606  C022  F013         	movff	maze_return@mL,backward@mL
  7427   00260A  C023  F014         	movff	maze_return@mR,backward@mR
  7428   00260E  5021               	movf	maze_return@c^0,w,c
  7429   002610  6ED9               	movwf	fsr2l,c
  7430   002612  6ADA               	clrf	fsr2h,c
  7431   002614  0E06               	movlw	6
  7432   002616  26D9               	addwf	fsr2l,f,c
  7433   002618  50DF               	movf	indf2,w,c
  7434   00261A  EC01  F01F         	call	_backward
  7435                           
  7436                           ;pathfinder.c: 158:                 forward(c->forward_half, mL, mR);
  7437   00261E  C022  F013         	movff	maze_return@mL,forward@mL
  7438   002622  C023  F014         	movff	maze_return@mR,forward@mR
  7439   002626  5021               	movf	maze_return@c^0,w,c
  7440   002628  6ED9               	movwf	fsr2l,c
  7441   00262A  6ADA               	clrf	fsr2h,c
  7442   00262C  0E07               	movlw	7
  7443   00262E  26D9               	addwf	fsr2l,f,c
  7444   002630  50DF               	movf	indf2,w,c
  7445   002632  ECC3  F01C         	call	_forward
  7446                           
  7447                           ;pathfinder.c: 159:             }
  7448   002636  EF67  F014         	goto	l4442
  7449   00263A                     l4426:
  7450   00263A  0E3C               	movlw	low _Operation_History
  7451   00263C  242C               	addwf	maze_return@i^0,w,c
  7452   00263E  6ED9               	movwf	fsr2l,c
  7453   002640  0E01               	movlw	high _Operation_History
  7454   002642  202D               	addwfc	(maze_return@i+1)^0,w,c
  7455   002644  6EDA               	movwf	fsr2h,c
  7456   002646  0E04               	movlw	4
  7457   002648  18DE               	xorwf	postinc2,w,c
  7458   00264A  A4D8               	btfss	status,2,c
  7459   00264C  EF2A  F013         	goto	u4971
  7460   002650  EF2C  F013         	goto	u4970
  7461   002654                     u4971:
  7462   002654  EF8E  F013         	goto	l4430
  7463   002658                     u4970:
  7464   002658                     
  7465                           ;pathfinder.c: 163:                 rightTURN(c->right_90, mL, mR);
  7466   002658  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7467   00265C  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7468   002660  5021               	movf	maze_return@c^0,w,c
  7469   002662  6ED9               	movwf	fsr2l,c
  7470   002664  6ADA               	clrf	fsr2h,c
  7471   002666  0E01               	movlw	1
  7472   002668  26D9               	addwf	fsr2l,f,c
  7473   00266A  50DF               	movf	indf2,w,c
  7474   00266C  EC83  F01D         	call	_rightTURN
  7475                           
  7476                           ;pathfinder.c: 164:                 forward(c->forward_one, mL, mR);
  7477   002670  C022  F013         	movff	maze_return@mL,forward@mL
  7478   002674  C023  F014         	movff	maze_return@mR,forward@mR
  7479   002678  5021               	movf	maze_return@c^0,w,c
  7480   00267A  6ED9               	movwf	fsr2l,c
  7481   00267C  6ADA               	clrf	fsr2h,c
  7482   00267E  0E05               	movlw	5
  7483   002680  26D9               	addwf	fsr2l,f,c
  7484   002682  50DF               	movf	indf2,w,c
  7485   002684  ECC3  F01C         	call	_forward
  7486                           
  7487                           ;pathfinder.c: 167:                 forward(c->forward_one, mL, mR);
  7488   002688  C022  F013         	movff	maze_return@mL,forward@mL
  7489   00268C  C023  F014         	movff	maze_return@mR,forward@mR
  7490   002690  5021               	movf	maze_return@c^0,w,c
  7491   002692  6ED9               	movwf	fsr2l,c
  7492   002694  6ADA               	clrf	fsr2h,c
  7493   002696  0E05               	movlw	5
  7494   002698  26D9               	addwf	fsr2l,f,c
  7495   00269A  50DF               	movf	indf2,w,c
  7496   00269C  ECC3  F01C         	call	_forward
  7497                           
  7498                           ;pathfinder.c: 168:                 backward(c->backward_half, mL, mR);
  7499   0026A0  C022  F013         	movff	maze_return@mL,backward@mL
  7500   0026A4  C023  F014         	movff	maze_return@mR,backward@mR
  7501   0026A8  5021               	movf	maze_return@c^0,w,c
  7502   0026AA  6ED9               	movwf	fsr2l,c
  7503   0026AC  6ADA               	clrf	fsr2h,c
  7504   0026AE  0E08               	movlw	8
  7505   0026B0  26D9               	addwf	fsr2l,f,c
  7506   0026B2  50DF               	movf	indf2,w,c
  7507   0026B4  EC01  F01F         	call	_backward
  7508                           
  7509                           ;pathfinder.c: 169:                 rightTURN(c->right_90, mL, mR);
  7510   0026B8  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7511   0026BC  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7512   0026C0  5021               	movf	maze_return@c^0,w,c
  7513   0026C2  6ED9               	movwf	fsr2l,c
  7514   0026C4  6ADA               	clrf	fsr2h,c
  7515   0026C6  0E01               	movlw	1
  7516   0026C8  26D9               	addwf	fsr2l,f,c
  7517   0026CA  50DF               	movf	indf2,w,c
  7518   0026CC  EC83  F01D         	call	_rightTURN
  7519                           
  7520                           ;pathfinder.c: 170:                 rightTURN(c->right_90, mL, mR);
  7521   0026D0  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7522   0026D4  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7523   0026D8  5021               	movf	maze_return@c^0,w,c
  7524   0026DA  6ED9               	movwf	fsr2l,c
  7525   0026DC  6ADA               	clrf	fsr2h,c
  7526   0026DE  0E01               	movlw	1
  7527   0026E0  26D9               	addwf	fsr2l,f,c
  7528   0026E2  50DF               	movf	indf2,w,c
  7529   0026E4  EC83  F01D         	call	_rightTURN
  7530                           
  7531                           ;pathfinder.c: 171:                 backward(c->backward_one, mL, mR);
  7532   0026E8  C022  F013         	movff	maze_return@mL,backward@mL
  7533   0026EC  C023  F014         	movff	maze_return@mR,backward@mR
  7534   0026F0  5021               	movf	maze_return@c^0,w,c
  7535   0026F2  6ED9               	movwf	fsr2l,c
  7536   0026F4  6ADA               	clrf	fsr2h,c
  7537   0026F6  0E06               	movlw	6
  7538   0026F8  26D9               	addwf	fsr2l,f,c
  7539   0026FA  50DF               	movf	indf2,w,c
  7540   0026FC  EC01  F01F         	call	_backward
  7541                           
  7542                           ;pathfinder.c: 172:                 forward(c->forward_half, mL, mR);
  7543   002700  C022  F013         	movff	maze_return@mL,forward@mL
  7544   002704  C023  F014         	movff	maze_return@mR,forward@mR
  7545   002708  5021               	movf	maze_return@c^0,w,c
  7546   00270A  6ED9               	movwf	fsr2l,c
  7547   00270C  6ADA               	clrf	fsr2h,c
  7548   00270E  0E07               	movlw	7
  7549   002710  26D9               	addwf	fsr2l,f,c
  7550   002712  50DF               	movf	indf2,w,c
  7551   002714  ECC3  F01C         	call	_forward
  7552                           
  7553                           ;pathfinder.c: 173:             }
  7554   002718  EF67  F014         	goto	l4442
  7555   00271C                     l4430:
  7556   00271C  0E3C               	movlw	low _Operation_History
  7557   00271E  242C               	addwf	maze_return@i^0,w,c
  7558   002720  6ED9               	movwf	fsr2l,c
  7559   002722  0E01               	movlw	high _Operation_History
  7560   002724  202D               	addwfc	(maze_return@i+1)^0,w,c
  7561   002726  6EDA               	movwf	fsr2h,c
  7562   002728  0E05               	movlw	5
  7563   00272A  18DE               	xorwf	postinc2,w,c
  7564   00272C  A4D8               	btfss	status,2,c
  7565   00272E  EF9B  F013         	goto	u4981
  7566   002732  EF9D  F013         	goto	u4980
  7567   002736                     u4981:
  7568   002736  EFFF  F013         	goto	l4434
  7569   00273A                     u4980:
  7570   00273A                     
  7571                           ;pathfinder.c: 176:                 leftTURN(c->left_90, mL, mR);
  7572   00273A  C022  F013         	movff	maze_return@mL,leftTURN@mL
  7573   00273E  C023  F014         	movff	maze_return@mR,leftTURN@mR
  7574   002742  5021               	movf	maze_return@c^0,w,c
  7575   002744  6ED9               	movwf	fsr2l,c
  7576   002746  6ADA               	clrf	fsr2h,c
  7577   002748  0E02               	movlw	2
  7578   00274A  26D9               	addwf	fsr2l,f,c
  7579   00274C  50DF               	movf	indf2,w,c
  7580   00274E  EC42  F01E         	call	_leftTURN
  7581                           
  7582                           ;pathfinder.c: 177:                 forward(c->forward_one, mL, mR);
  7583   002752  C022  F013         	movff	maze_return@mL,forward@mL
  7584   002756  C023  F014         	movff	maze_return@mR,forward@mR
  7585   00275A  5021               	movf	maze_return@c^0,w,c
  7586   00275C  6ED9               	movwf	fsr2l,c
  7587   00275E  6ADA               	clrf	fsr2h,c
  7588   002760  0E05               	movlw	5
  7589   002762  26D9               	addwf	fsr2l,f,c
  7590   002764  50DF               	movf	indf2,w,c
  7591   002766  ECC3  F01C         	call	_forward
  7592                           
  7593                           ;pathfinder.c: 180:                 forward(c->forward_one, mL, mR);
  7594   00276A  C022  F013         	movff	maze_return@mL,forward@mL
  7595   00276E  C023  F014         	movff	maze_return@mR,forward@mR
  7596   002772  5021               	movf	maze_return@c^0,w,c
  7597   002774  6ED9               	movwf	fsr2l,c
  7598   002776  6ADA               	clrf	fsr2h,c
  7599   002778  0E05               	movlw	5
  7600   00277A  26D9               	addwf	fsr2l,f,c
  7601   00277C  50DF               	movf	indf2,w,c
  7602   00277E  ECC3  F01C         	call	_forward
  7603                           
  7604                           ;pathfinder.c: 181:                 backward(c->backward_half, mL, mR);
  7605   002782  C022  F013         	movff	maze_return@mL,backward@mL
  7606   002786  C023  F014         	movff	maze_return@mR,backward@mR
  7607   00278A  5021               	movf	maze_return@c^0,w,c
  7608   00278C  6ED9               	movwf	fsr2l,c
  7609   00278E  6ADA               	clrf	fsr2h,c
  7610   002790  0E08               	movlw	8
  7611   002792  26D9               	addwf	fsr2l,f,c
  7612   002794  50DF               	movf	indf2,w,c
  7613   002796  EC01  F01F         	call	_backward
  7614                           
  7615                           ;pathfinder.c: 182:                 rightTURN(c->right_90, mL, mR);
  7616   00279A  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7617   00279E  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7618   0027A2  5021               	movf	maze_return@c^0,w,c
  7619   0027A4  6ED9               	movwf	fsr2l,c
  7620   0027A6  6ADA               	clrf	fsr2h,c
  7621   0027A8  0E01               	movlw	1
  7622   0027AA  26D9               	addwf	fsr2l,f,c
  7623   0027AC  50DF               	movf	indf2,w,c
  7624   0027AE  EC83  F01D         	call	_rightTURN
  7625                           
  7626                           ;pathfinder.c: 183:                 rightTURN(c->right_90, mL, mR);
  7627   0027B2  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7628   0027B6  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7629   0027BA  5021               	movf	maze_return@c^0,w,c
  7630   0027BC  6ED9               	movwf	fsr2l,c
  7631   0027BE  6ADA               	clrf	fsr2h,c
  7632   0027C0  0E01               	movlw	1
  7633   0027C2  26D9               	addwf	fsr2l,f,c
  7634   0027C4  50DF               	movf	indf2,w,c
  7635   0027C6  EC83  F01D         	call	_rightTURN
  7636                           
  7637                           ;pathfinder.c: 184:                 backward(c->backward_one, mL, mR);
  7638   0027CA  C022  F013         	movff	maze_return@mL,backward@mL
  7639   0027CE  C023  F014         	movff	maze_return@mR,backward@mR
  7640   0027D2  5021               	movf	maze_return@c^0,w,c
  7641   0027D4  6ED9               	movwf	fsr2l,c
  7642   0027D6  6ADA               	clrf	fsr2h,c
  7643   0027D8  0E06               	movlw	6
  7644   0027DA  26D9               	addwf	fsr2l,f,c
  7645   0027DC  50DF               	movf	indf2,w,c
  7646   0027DE  EC01  F01F         	call	_backward
  7647                           
  7648                           ;pathfinder.c: 185:                 forward(c->forward_half, mL, mR);
  7649   0027E2  C022  F013         	movff	maze_return@mL,forward@mL
  7650   0027E6  C023  F014         	movff	maze_return@mR,forward@mR
  7651   0027EA  5021               	movf	maze_return@c^0,w,c
  7652   0027EC  6ED9               	movwf	fsr2l,c
  7653   0027EE  6ADA               	clrf	fsr2h,c
  7654   0027F0  0E07               	movlw	7
  7655   0027F2  26D9               	addwf	fsr2l,f,c
  7656   0027F4  50DF               	movf	indf2,w,c
  7657   0027F6  ECC3  F01C         	call	_forward
  7658                           
  7659                           ;pathfinder.c: 187:             }
  7660   0027FA  EF67  F014         	goto	l4442
  7661   0027FE                     l4434:
  7662   0027FE  0E3C               	movlw	low _Operation_History
  7663   002800  242C               	addwf	maze_return@i^0,w,c
  7664   002802  6ED9               	movwf	fsr2l,c
  7665   002804  0E01               	movlw	high _Operation_History
  7666   002806  202D               	addwfc	(maze_return@i+1)^0,w,c
  7667   002808  6EDA               	movwf	fsr2h,c
  7668   00280A  0E06               	movlw	6
  7669   00280C  18DE               	xorwf	postinc2,w,c
  7670   00280E  A4D8               	btfss	status,2,c
  7671   002810  EF0C  F014         	goto	u4991
  7672   002814  EF0E  F014         	goto	u4990
  7673   002818                     u4991:
  7674   002818  EF34  F014         	goto	l4438
  7675   00281C                     u4990:
  7676   00281C                     
  7677                           ;pathfinder.c: 190:                 leftTURN(c->left_135, mL, mR);
  7678   00281C  C022  F013         	movff	maze_return@mL,leftTURN@mL
  7679   002820  C023  F014         	movff	maze_return@mR,leftTURN@mR
  7680   002824  5021               	movf	maze_return@c^0,w,c
  7681   002826  6ED9               	movwf	fsr2l,c
  7682   002828  6ADA               	clrf	fsr2h,c
  7683   00282A  0E04               	movlw	4
  7684   00282C  26D9               	addwf	fsr2l,f,c
  7685   00282E  50DF               	movf	indf2,w,c
  7686   002830  EC42  F01E         	call	_leftTURN
  7687                           
  7688                           ;pathfinder.c: 191:                 backward(c->backward_one, mL, mR);
  7689   002834  C022  F013         	movff	maze_return@mL,backward@mL
  7690   002838  C023  F014         	movff	maze_return@mR,backward@mR
  7691   00283C  5021               	movf	maze_return@c^0,w,c
  7692   00283E  6ED9               	movwf	fsr2l,c
  7693   002840  6ADA               	clrf	fsr2h,c
  7694   002842  0E06               	movlw	6
  7695   002844  26D9               	addwf	fsr2l,f,c
  7696   002846  50DF               	movf	indf2,w,c
  7697   002848  EC01  F01F         	call	_backward
  7698                           
  7699                           ;pathfinder.c: 192:                 forward(c->forward_half, mL, mR);
  7700   00284C  C022  F013         	movff	maze_return@mL,forward@mL
  7701   002850  C023  F014         	movff	maze_return@mR,forward@mR
  7702   002854  5021               	movf	maze_return@c^0,w,c
  7703   002856  6ED9               	movwf	fsr2l,c
  7704   002858  6ADA               	clrf	fsr2h,c
  7705   00285A  0E07               	movlw	7
  7706   00285C  26D9               	addwf	fsr2l,f,c
  7707   00285E  50DF               	movf	indf2,w,c
  7708   002860  ECC3  F01C         	call	_forward
  7709                           
  7710                           ;pathfinder.c: 193:             }
  7711   002864  EF67  F014         	goto	l4442
  7712   002868                     l4438:
  7713   002868  0E3C               	movlw	low _Operation_History
  7714   00286A  242C               	addwf	maze_return@i^0,w,c
  7715   00286C  6ED9               	movwf	fsr2l,c
  7716   00286E  0E01               	movlw	high _Operation_History
  7717   002870  202D               	addwfc	(maze_return@i+1)^0,w,c
  7718   002872  6EDA               	movwf	fsr2h,c
  7719   002874  0E07               	movlw	7
  7720   002876  18DE               	xorwf	postinc2,w,c
  7721   002878  A4D8               	btfss	status,2,c
  7722   00287A  EF41  F014         	goto	u5001
  7723   00287E  EF43  F014         	goto	u5000
  7724   002882                     u5001:
  7725   002882  EF71  F012         	goto	l577
  7726   002886                     u5000:
  7727   002886                     
  7728                           ;pathfinder.c: 196:                 rightTURN(c->right_135, mL, mR);
  7729   002886  C022  F013         	movff	maze_return@mL,rightTURN@mL
  7730   00288A  C023  F014         	movff	maze_return@mR,rightTURN@mR
  7731   00288E  5021               	movf	maze_return@c^0,w,c
  7732   002890  6ED9               	movwf	fsr2l,c
  7733   002892  6ADA               	clrf	fsr2h,c
  7734   002894  0E03               	movlw	3
  7735   002896  26D9               	addwf	fsr2l,f,c
  7736   002898  50DF               	movf	indf2,w,c
  7737   00289A  EC83  F01D         	call	_rightTURN
  7738                           
  7739                           ;pathfinder.c: 197:                 backward(c->backward_one, mL, mR);
  7740   00289E  C022  F013         	movff	maze_return@mL,backward@mL
  7741   0028A2  C023  F014         	movff	maze_return@mR,backward@mR
  7742   0028A6  5021               	movf	maze_return@c^0,w,c
  7743   0028A8  6ED9               	movwf	fsr2l,c
  7744   0028AA  6ADA               	clrf	fsr2h,c
  7745   0028AC  0E06               	movlw	6
  7746   0028AE  26D9               	addwf	fsr2l,f,c
  7747   0028B0  50DF               	movf	indf2,w,c
  7748   0028B2  EC01  F01F         	call	_backward
  7749                           
  7750                           ;pathfinder.c: 198:                 forward(c->forward_half, mL, mR);
  7751   0028B6  C022  F013         	movff	maze_return@mL,forward@mL
  7752   0028BA  C023  F014         	movff	maze_return@mR,forward@mR
  7753   0028BE  5021               	movf	maze_return@c^0,w,c
  7754   0028C0  6ED9               	movwf	fsr2l,c
  7755   0028C2  6ADA               	clrf	fsr2h,c
  7756   0028C4  0E07               	movlw	7
  7757   0028C6  26D9               	addwf	fsr2l,f,c
  7758   0028C8  50DF               	movf	indf2,w,c
  7759   0028CA  ECC3  F01C         	call	_forward
  7760   0028CE                     l4442:
  7761                           
  7762                           ;pathfinder.c: 200:         }
  7763   0028CE  062C               	decf	maze_return@i^0,f,c
  7764   0028D0  A0D8               	btfss	status,0,c
  7765   0028D2  062D               	decf	(maze_return@i+1)^0,f,c
  7766   0028D4  BE2D               	btfsc	(maze_return@i+1)^0,7,c
  7767   0028D6  EF71  F014         	goto	u5010
  7768   0028DA  EF6F  F014         	goto	u5011
  7769   0028DE                     u5011:
  7770   0028DE  EF2F  F012         	goto	l4402
  7771   0028E2                     u5010:
  7772   0028E2                     
  7773                           ;pathfinder.c: 203:         Operation_Count = 0;
  7774   0028E2  0E00               	movlw	0
  7775   0028E4  0100               	movlb	0	; () banked
  7776   0028E6  6FDB               	movwf	_Operation_Count& (0+255),b
  7777                           
  7778                           ;pathfinder.c: 204:         for (int i = 0; i < 50; ++i) {
  7779   0028E8  0E00               	movlw	0
  7780   0028EA  6E2B               	movwf	(maze_return@i_2039+1)^0,c
  7781   0028EC  0E00               	movlw	0
  7782   0028EE  6E2A               	movwf	maze_return@i_2039^0,c
  7783   0028F0                     l4452:
  7784                           
  7785                           ;pathfinder.c: 205:             Operation_History[i] = 0;
  7786   0028F0  0E3C               	movlw	low _Operation_History
  7787   0028F2  242A               	addwf	maze_return@i_2039^0,w,c
  7788   0028F4  6ED9               	movwf	fsr2l,c
  7789   0028F6  0E01               	movlw	high _Operation_History
  7790   0028F8  202B               	addwfc	(maze_return@i_2039+1)^0,w,c
  7791   0028FA  6EDA               	movwf	fsr2h,c
  7792   0028FC  6ADF               	clrf	indf2,c
  7793   0028FE                     
  7794                           ;pathfinder.c: 206:         }
  7795   0028FE  4A2A               	infsnz	maze_return@i_2039^0,f,c
  7796   002900  2A2B               	incf	(maze_return@i_2039+1)^0,f,c
  7797   002902  BE2B               	btfsc	(maze_return@i_2039+1)^0,7,c
  7798   002904  EF8D  F014         	goto	u5021
  7799   002908  502B               	movf	(maze_return@i_2039+1)^0,w,c
  7800   00290A  E109               	bnz	u5020
  7801   00290C  0E32               	movlw	50
  7802   00290E  5C2A               	subwf	maze_return@i_2039^0,w,c
  7803   002910  A0D8               	btfss	status,0,c
  7804   002912  EF8D  F014         	goto	u5021
  7805   002916  EF8F  F014         	goto	u5020
  7806   00291A                     u5021:
  7807   00291A  EF78  F014         	goto	l4452
  7808   00291E                     u5020:
  7809   00291E  0012               	return		;funcret
  7810   002920                     __end_of_maze_return:
  7811                           	callstack 0
  7812                           
  7813 ;; *************** function _initDCmotorsPWM *****************
  7814 ;; Defined at:
  7815 ;;		line 5 in file "dc_motor_v1.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;Total ram usage:        2 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_main
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text28
  7843   004828                     __ptext28:
  7844                           	callstack 0
  7845   004828                     _initDCmotorsPWM:
  7846                           	callstack 30
  7847   004828                     
  7848                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  7849   004828  9485               	bcf	133,2,c	;volatile
  7850                           
  7851                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  7852   00482A  9885               	bcf	133,4,c	;volatile
  7853                           
  7854                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  7855   00482C  9E83               	bcf	131,7,c	;volatile
  7856                           
  7857                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  7858   00482E  9C87               	bcf	135,6,c	;volatile
  7859                           
  7860                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  7861   004830  947D               	bcf	125,2,c	;volatile
  7862                           
  7863                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  7864   004832  987D               	bcf	125,4,c	;volatile
  7865                           
  7866                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  7867   004834  9E7B               	bcf	123,7,c	;volatile
  7868                           
  7869                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  7870   004836  9C7F               	bcf	127,6,c	;volatile
  7871   004838                     
  7872                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  7873   004838  0E05               	movlw	5
  7874   00483A  010E               	movlb	14	; () banked
  7875   00483C  6F74               	movwf	116,b	;volatile
  7876                           
  7877                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  7878   00483E  0E06               	movlw	6
  7879   004840  6F76               	movwf	118,b	;volatile
  7880                           
  7881                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  7882   004842  0E07               	movlw	7
  7883   004844  6F69               	movwf	105,b	;volatile
  7884                           
  7885                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  7886   004846  0E08               	movlw	8
  7887   004848  6F88               	movwf	136,b	;volatile
  7888                           
  7889                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  7890   00484A  50BD               	movf	189,w,c	;volatile
  7891   00484C  0B8F               	andlw	-113
  7892   00484E  0940               	iorlw	64
  7893   004850  6EBD               	movwf	189,c	;volatile
  7894                           
  7895                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  7896   004852  0EE0               	movlw	-32
  7897   004854  16BE               	andwf	190,f,c	;volatile
  7898                           
  7899                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  7900   004856  50BF               	movf	191,w,c	;volatile
  7901   004858  0BF0               	andlw	-16
  7902   00485A  0901               	iorlw	1
  7903   00485C  6EBF               	movwf	191,c	;volatile
  7904   00485E                     
  7905                           ; BSR set to: 14
  7906                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  7907   00485E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7908   004862                     
  7909                           ; BSR set to: 14
  7910                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  7911   004862  8EBD               	bsf	189,7,c	;volatile
  7912                           
  7913                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  7914   004864  0E00               	movlw	0
  7915   004866  6EAA               	movwf	170,c	;volatile
  7916                           
  7917                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  7918   004868  0E00               	movlw	0
  7919   00486A  6EA6               	movwf	166,c	;volatile
  7920                           
  7921                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  7922   00486C  0E00               	movlw	0
  7923   00486E  010F               	movlb	15	; () banked
  7924   004870  6F25               	movwf	37,b	;volatile
  7925                           
  7926                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  7927   004872  0E00               	movlw	0
  7928   004874  6F21               	movwf	33,b	;volatile
  7929                           
  7930                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7931   004876  0EFC               	movlw	-4
  7932   004878  16AD               	andwf	173,f,c	;volatile
  7933                           
  7934                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7935   00487A  0EF3               	movlw	-13
  7936   00487C  16AD               	andwf	173,f,c	;volatile
  7937                           
  7938                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7939   00487E  0ECF               	movlw	-49
  7940   004880  16AD               	andwf	173,f,c	;volatile
  7941                           
  7942                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7943   004882  0E3F               	movlw	-193
  7944   004884  16AD               	andwf	173,f,c	;volatile
  7945   004886                     
  7946                           ; BSR set to: 15
  7947                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  7948   004886  88AB               	bsf	171,4,c	;volatile
  7949                           
  7950                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7951   004888  50AB               	movf	171,w,c	;volatile
  7952   00488A  0BF0               	andlw	-16
  7953   00488C  090C               	iorlw	12
  7954   00488E  6EAB               	movwf	171,c	;volatile
  7955   004890                     
  7956                           ; BSR set to: 15
  7957                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  7958   004890  8EAB               	bsf	171,7,c	;volatile
  7959   004892                     
  7960                           ; BSR set to: 15
  7961                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  7962   004892  88A7               	bsf	167,4,c	;volatile
  7963                           
  7964                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7965   004894  50A7               	movf	167,w,c	;volatile
  7966   004896  0BF0               	andlw	-16
  7967   004898  090C               	iorlw	12
  7968   00489A  6EA7               	movwf	167,c	;volatile
  7969   00489C                     
  7970                           ; BSR set to: 15
  7971                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  7972   00489C  8EA7               	bsf	167,7,c	;volatile
  7973   00489E                     
  7974                           ; BSR set to: 15
  7975                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  7976   00489E  8926               	bsf	38,4,b	;volatile
  7977                           
  7978                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7979   0048A0  5126               	movf	38,w,b	;volatile
  7980   0048A2  0BF0               	andlw	-16
  7981   0048A4  090C               	iorlw	12
  7982   0048A6  6F26               	movwf	38,b	;volatile
  7983   0048A8                     
  7984                           ; BSR set to: 15
  7985                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  7986   0048A8  8F26               	bsf	38,7,b	;volatile
  7987   0048AA                     
  7988                           ; BSR set to: 15
  7989                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  7990   0048AA  8922               	bsf	34,4,b	;volatile
  7991                           
  7992                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7993   0048AC  5122               	movf	34,w,b	;volatile
  7994   0048AE  0BF0               	andlw	-16
  7995   0048B0  090C               	iorlw	12
  7996   0048B2  6F22               	movwf	34,b	;volatile
  7997   0048B4                     
  7998                           ; BSR set to: 15
  7999                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  8000   0048B4  8F22               	bsf	34,7,b	;volatile
  8001   0048B6                     
  8002                           ; BSR set to: 15
  8003                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  8004   0048B6  9688               	bcf	136,3,c	;volatile
  8005   0048B8                     
  8006                           ; BSR set to: 15
  8007                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  8008   0048B8  9680               	bcf	128,3,c	;volatile
  8009   0048BA                     
  8010                           ; BSR set to: 15
  8011   0048BA  0012               	return		;funcret
  8012   0048BC                     __end_of_initDCmotorsPWM:
  8013                           	callstack 0
  8014                           
  8015 ;; *************** function _calibration_routine *****************
  8016 ;; Defined at:
  8017 ;;		line 90 in file "calibration.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  c               1   32[COMRAM] PTR struct calibration_s
  8020 ;;		 -> calibration(9), 
  8021 ;;  mL              1   33[COMRAM] PTR struct DC_motor
  8022 ;;		 -> motorL(9), 
  8023 ;;  mR              1   34[COMRAM] PTR struct DC_motor
  8024 ;;		 -> motorR(9), 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;		None
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8036 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8040 ;;Total ram usage:        4 bytes
  8041 ;; Hardware stack levels used: 1
  8042 ;; Hardware stack levels required when called: 3
  8043 ;; This function calls:
  8044 ;;		_adjust_calibration
  8045 ;;		_backward
  8046 ;;		_forward
  8047 ;;		_leftTURN
  8048 ;;		_rightTURN
  8049 ;;		_switch_calibration
  8050 ;; This function is called by:
  8051 ;;		_main
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text29
  8056   0035A4                     __ptext29:
  8057                           	callstack 0
  8058   0035A4                     _calibration_routine:
  8059                           	callstack 27
  8060   0035A4                     l206:
  8061   0035A4                     
  8062                           ;calibration.c: 96:         if(c->index == 1){
  8063   0035A4  5021               	movf	calibration_routine@c^0,w,c
  8064   0035A6  6ED9               	movwf	fsr2l,c
  8065   0035A8  6ADA               	clrf	fsr2h,c
  8066   0035AA  04DE               	decf	postinc2,w,c
  8067   0035AC  A4D8               	btfss	status,2,c
  8068   0035AE  EFDB  F01A         	goto	u4721
  8069   0035B2  EFDD  F01A         	goto	u4720
  8070   0035B6                     u4721:
  8071   0035B6  EFF1  F01A         	goto	l4184
  8072   0035BA                     u4720:
  8073   0035BA                     
  8074                           ;calibration.c: 97:             adjust_calibration(&(c->right_90));
  8075   0035BA  2821               	incf	calibration_routine@c^0,w,c
  8076   0035BC  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8077   0035BE  EC69  F020         	call	_adjust_calibration	;wreg free
  8078   0035C2                     
  8079                           ;calibration.c: 98:             rightTURN(c->right_90, mL, mR);
  8080   0035C2  C022  F013         	movff	calibration_routine@mL,rightTURN@mL
  8081   0035C6  C023  F014         	movff	calibration_routine@mR,rightTURN@mR
  8082   0035CA  5021               	movf	calibration_routine@c^0,w,c
  8083   0035CC  6ED9               	movwf	fsr2l,c
  8084   0035CE  6ADA               	clrf	fsr2h,c
  8085   0035D0  0E01               	movlw	1
  8086   0035D2  26D9               	addwf	fsr2l,f,c
  8087   0035D4  50DF               	movf	indf2,w,c
  8088   0035D6  EC83  F01D         	call	_rightTURN
  8089   0035DA                     
  8090                           ;calibration.c: 99:             switch_calibration(&(c->index));
  8091   0035DA  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8092   0035DE  EC68  F023         	call	_switch_calibration	;wreg free
  8093   0035E2                     l4184:
  8094                           
  8095                           ;calibration.c: 102:         if(c->index == 2){
  8096   0035E2  5021               	movf	calibration_routine@c^0,w,c
  8097   0035E4  6ED9               	movwf	fsr2l,c
  8098   0035E6  6ADA               	clrf	fsr2h,c
  8099   0035E8  0E02               	movlw	2
  8100   0035EA  18DE               	xorwf	postinc2,w,c
  8101   0035EC  A4D8               	btfss	status,2,c
  8102   0035EE  EFFB  F01A         	goto	u4731
  8103   0035F2  EFFD  F01A         	goto	u4730
  8104   0035F6                     u4731:
  8105   0035F6  EF12  F01B         	goto	l4192
  8106   0035FA                     u4730:
  8107   0035FA                     
  8108                           ;calibration.c: 103:             adjust_calibration(&(c->left_90));
  8109   0035FA  5021               	movf	calibration_routine@c^0,w,c
  8110   0035FC  0F02               	addlw	2
  8111   0035FE  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8112   003600  EC69  F020         	call	_adjust_calibration	;wreg free
  8113   003604                     
  8114                           ;calibration.c: 104:             leftTURN(c->left_90, mL, mR);
  8115   003604  C022  F013         	movff	calibration_routine@mL,leftTURN@mL
  8116   003608  C023  F014         	movff	calibration_routine@mR,leftTURN@mR
  8117   00360C  5021               	movf	calibration_routine@c^0,w,c
  8118   00360E  6ED9               	movwf	fsr2l,c
  8119   003610  6ADA               	clrf	fsr2h,c
  8120   003612  0E02               	movlw	2
  8121   003614  26D9               	addwf	fsr2l,f,c
  8122   003616  50DF               	movf	indf2,w,c
  8123   003618  EC42  F01E         	call	_leftTURN
  8124   00361C                     
  8125                           ;calibration.c: 105:             switch_calibration(&(c->index));
  8126   00361C  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8127   003620  EC68  F023         	call	_switch_calibration	;wreg free
  8128   003624                     l4192:
  8129                           
  8130                           ;calibration.c: 108:         if(c->index == 3){
  8131   003624  5021               	movf	calibration_routine@c^0,w,c
  8132   003626  6ED9               	movwf	fsr2l,c
  8133   003628  6ADA               	clrf	fsr2h,c
  8134   00362A  0E03               	movlw	3
  8135   00362C  18DE               	xorwf	postinc2,w,c
  8136   00362E  A4D8               	btfss	status,2,c
  8137   003630  EF1C  F01B         	goto	u4741
  8138   003634  EF1E  F01B         	goto	u4740
  8139   003638                     u4741:
  8140   003638  EF33  F01B         	goto	l4200
  8141   00363C                     u4740:
  8142   00363C                     
  8143                           ;calibration.c: 109:             adjust_calibration(&(c->right_135));
  8144   00363C  5021               	movf	calibration_routine@c^0,w,c
  8145   00363E  0F03               	addlw	3
  8146   003640  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8147   003642  EC69  F020         	call	_adjust_calibration	;wreg free
  8148   003646                     
  8149                           ;calibration.c: 110:             rightTURN(c->right_135, mL, mR);
  8150   003646  C022  F013         	movff	calibration_routine@mL,rightTURN@mL
  8151   00364A  C023  F014         	movff	calibration_routine@mR,rightTURN@mR
  8152   00364E  5021               	movf	calibration_routine@c^0,w,c
  8153   003650  6ED9               	movwf	fsr2l,c
  8154   003652  6ADA               	clrf	fsr2h,c
  8155   003654  0E03               	movlw	3
  8156   003656  26D9               	addwf	fsr2l,f,c
  8157   003658  50DF               	movf	indf2,w,c
  8158   00365A  EC83  F01D         	call	_rightTURN
  8159   00365E                     
  8160                           ;calibration.c: 111:             switch_calibration(&(c->index));
  8161   00365E  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8162   003662  EC68  F023         	call	_switch_calibration	;wreg free
  8163   003666                     l4200:
  8164                           
  8165                           ;calibration.c: 113:         if(c->index == 4){
  8166   003666  5021               	movf	calibration_routine@c^0,w,c
  8167   003668  6ED9               	movwf	fsr2l,c
  8168   00366A  6ADA               	clrf	fsr2h,c
  8169   00366C  0E04               	movlw	4
  8170   00366E  18DE               	xorwf	postinc2,w,c
  8171   003670  A4D8               	btfss	status,2,c
  8172   003672  EF3D  F01B         	goto	u4751
  8173   003676  EF3F  F01B         	goto	u4750
  8174   00367A                     u4751:
  8175   00367A  EF54  F01B         	goto	l4208
  8176   00367E                     u4750:
  8177   00367E                     
  8178                           ;calibration.c: 114:             adjust_calibration(&(c->left_135));
  8179   00367E  5021               	movf	calibration_routine@c^0,w,c
  8180   003680  0F04               	addlw	4
  8181   003682  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8182   003684  EC69  F020         	call	_adjust_calibration	;wreg free
  8183   003688                     
  8184                           ;calibration.c: 115:             leftTURN(c->left_135, mL, mR);
  8185   003688  C022  F013         	movff	calibration_routine@mL,leftTURN@mL
  8186   00368C  C023  F014         	movff	calibration_routine@mR,leftTURN@mR
  8187   003690  5021               	movf	calibration_routine@c^0,w,c
  8188   003692  6ED9               	movwf	fsr2l,c
  8189   003694  6ADA               	clrf	fsr2h,c
  8190   003696  0E04               	movlw	4
  8191   003698  26D9               	addwf	fsr2l,f,c
  8192   00369A  50DF               	movf	indf2,w,c
  8193   00369C  EC42  F01E         	call	_leftTURN
  8194   0036A0                     
  8195                           ;calibration.c: 116:             switch_calibration(&(c->index));
  8196   0036A0  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8197   0036A4  EC68  F023         	call	_switch_calibration	;wreg free
  8198   0036A8                     l4208:
  8199                           
  8200                           ;calibration.c: 119:         if(c->index == 5 ){
  8201   0036A8  5021               	movf	calibration_routine@c^0,w,c
  8202   0036AA  6ED9               	movwf	fsr2l,c
  8203   0036AC  6ADA               	clrf	fsr2h,c
  8204   0036AE  0E05               	movlw	5
  8205   0036B0  18DE               	xorwf	postinc2,w,c
  8206   0036B2  A4D8               	btfss	status,2,c
  8207   0036B4  EF5E  F01B         	goto	u4761
  8208   0036B8  EF60  F01B         	goto	u4760
  8209   0036BC                     u4761:
  8210   0036BC  EF75  F01B         	goto	l4216
  8211   0036C0                     u4760:
  8212   0036C0                     
  8213                           ;calibration.c: 120:             adjust_calibration(&(c->forward_one));
  8214   0036C0  5021               	movf	calibration_routine@c^0,w,c
  8215   0036C2  0F05               	addlw	5
  8216   0036C4  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8217   0036C6  EC69  F020         	call	_adjust_calibration	;wreg free
  8218   0036CA                     
  8219                           ;calibration.c: 121:             forward(c->forward_one, mL, mR);
  8220   0036CA  C022  F013         	movff	calibration_routine@mL,forward@mL
  8221   0036CE  C023  F014         	movff	calibration_routine@mR,forward@mR
  8222   0036D2  5021               	movf	calibration_routine@c^0,w,c
  8223   0036D4  6ED9               	movwf	fsr2l,c
  8224   0036D6  6ADA               	clrf	fsr2h,c
  8225   0036D8  0E05               	movlw	5
  8226   0036DA  26D9               	addwf	fsr2l,f,c
  8227   0036DC  50DF               	movf	indf2,w,c
  8228   0036DE  ECC3  F01C         	call	_forward
  8229   0036E2                     
  8230                           ;calibration.c: 122:             switch_calibration(&(c->index));
  8231   0036E2  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8232   0036E6  EC68  F023         	call	_switch_calibration	;wreg free
  8233   0036EA                     l4216:
  8234                           
  8235                           ;calibration.c: 125:         if(c->index == 6){
  8236   0036EA  5021               	movf	calibration_routine@c^0,w,c
  8237   0036EC  6ED9               	movwf	fsr2l,c
  8238   0036EE  6ADA               	clrf	fsr2h,c
  8239   0036F0  0E06               	movlw	6
  8240   0036F2  18DE               	xorwf	postinc2,w,c
  8241   0036F4  A4D8               	btfss	status,2,c
  8242   0036F6  EF7F  F01B         	goto	u4771
  8243   0036FA  EF81  F01B         	goto	u4770
  8244   0036FE                     u4771:
  8245   0036FE  EF96  F01B         	goto	l4224
  8246   003702                     u4770:
  8247   003702                     
  8248                           ;calibration.c: 126:             adjust_calibration(&(c->backward_one));
  8249   003702  5021               	movf	calibration_routine@c^0,w,c
  8250   003704  0F06               	addlw	6
  8251   003706  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8252   003708  EC69  F020         	call	_adjust_calibration	;wreg free
  8253   00370C                     
  8254                           ;calibration.c: 127:             backward(c->backward_one, mL, mR);
  8255   00370C  C022  F013         	movff	calibration_routine@mL,backward@mL
  8256   003710  C023  F014         	movff	calibration_routine@mR,backward@mR
  8257   003714  5021               	movf	calibration_routine@c^0,w,c
  8258   003716  6ED9               	movwf	fsr2l,c
  8259   003718  6ADA               	clrf	fsr2h,c
  8260   00371A  0E06               	movlw	6
  8261   00371C  26D9               	addwf	fsr2l,f,c
  8262   00371E  50DF               	movf	indf2,w,c
  8263   003720  EC01  F01F         	call	_backward
  8264   003724                     
  8265                           ;calibration.c: 128:             switch_calibration(&(c->index));
  8266   003724  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8267   003728  EC68  F023         	call	_switch_calibration	;wreg free
  8268   00372C                     l4224:
  8269                           
  8270                           ;calibration.c: 131:         if(c->index == 7 ){
  8271   00372C  5021               	movf	calibration_routine@c^0,w,c
  8272   00372E  6ED9               	movwf	fsr2l,c
  8273   003730  6ADA               	clrf	fsr2h,c
  8274   003732  0E07               	movlw	7
  8275   003734  18DE               	xorwf	postinc2,w,c
  8276   003736  A4D8               	btfss	status,2,c
  8277   003738  EFA0  F01B         	goto	u4781
  8278   00373C  EFA2  F01B         	goto	u4780
  8279   003740                     u4781:
  8280   003740  EFB7  F01B         	goto	l4232
  8281   003744                     u4780:
  8282   003744                     
  8283                           ;calibration.c: 132:             adjust_calibration(&(c->forward_half));
  8284   003744  5021               	movf	calibration_routine@c^0,w,c
  8285   003746  0F07               	addlw	7
  8286   003748  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8287   00374A  EC69  F020         	call	_adjust_calibration	;wreg free
  8288   00374E                     
  8289                           ;calibration.c: 133:             forward(c->forward_half, mL, mR);
  8290   00374E  C022  F013         	movff	calibration_routine@mL,forward@mL
  8291   003752  C023  F014         	movff	calibration_routine@mR,forward@mR
  8292   003756  5021               	movf	calibration_routine@c^0,w,c
  8293   003758  6ED9               	movwf	fsr2l,c
  8294   00375A  6ADA               	clrf	fsr2h,c
  8295   00375C  0E07               	movlw	7
  8296   00375E  26D9               	addwf	fsr2l,f,c
  8297   003760  50DF               	movf	indf2,w,c
  8298   003762  ECC3  F01C         	call	_forward
  8299   003766                     
  8300                           ;calibration.c: 134:             switch_calibration(&(c->index));
  8301   003766  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8302   00376A  EC68  F023         	call	_switch_calibration	;wreg free
  8303   00376E                     l4232:
  8304                           
  8305                           ;calibration.c: 137:         if(c->index == 8){
  8306   00376E  5021               	movf	calibration_routine@c^0,w,c
  8307   003770  6ED9               	movwf	fsr2l,c
  8308   003772  6ADA               	clrf	fsr2h,c
  8309   003774  0E08               	movlw	8
  8310   003776  18DE               	xorwf	postinc2,w,c
  8311   003778  A4D8               	btfss	status,2,c
  8312   00377A  EFC1  F01B         	goto	u4791
  8313   00377E  EFC3  F01B         	goto	u4790
  8314   003782                     u4791:
  8315   003782  EFD8  F01B         	goto	l4240
  8316   003786                     u4790:
  8317   003786                     
  8318                           ;calibration.c: 138:             adjust_calibration(&(c->backward_half));
  8319   003786  5021               	movf	calibration_routine@c^0,w,c
  8320   003788  0F08               	addlw	8
  8321   00378A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8322   00378C  EC69  F020         	call	_adjust_calibration	;wreg free
  8323   003790                     
  8324                           ;calibration.c: 139:             backward(c->backward_half, mL, mR);
  8325   003790  C022  F013         	movff	calibration_routine@mL,backward@mL
  8326   003794  C023  F014         	movff	calibration_routine@mR,backward@mR
  8327   003798  5021               	movf	calibration_routine@c^0,w,c
  8328   00379A  6ED9               	movwf	fsr2l,c
  8329   00379C  6ADA               	clrf	fsr2h,c
  8330   00379E  0E08               	movlw	8
  8331   0037A0  26D9               	addwf	fsr2l,f,c
  8332   0037A2  50DF               	movf	indf2,w,c
  8333   0037A4  EC01  F01F         	call	_backward
  8334   0037A8                     
  8335                           ;calibration.c: 140:             switch_calibration(&(c->index));
  8336   0037A8  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8337   0037AC  EC68  F023         	call	_switch_calibration	;wreg free
  8338   0037B0                     l4240:
  8339                           
  8340                           ;calibration.c: 143:         if(c->index >= 9){
  8341   0037B0  5021               	movf	calibration_routine@c^0,w,c
  8342   0037B2  6ED9               	movwf	fsr2l,c
  8343   0037B4  6ADA               	clrf	fsr2h,c
  8344   0037B6  0E08               	movlw	8
  8345   0037B8  64DF               	cpfsgt	indf2,c
  8346   0037BA  EFE1  F01B         	goto	u4801
  8347   0037BE  EFE3  F01B         	goto	u4800
  8348   0037C2                     u4801:
  8349   0037C2  EFD2  F01A         	goto	l206
  8350   0037C6                     u4800:
  8351   0037C6                     
  8352                           ;calibration.c: 144:             c->index = 1;
  8353   0037C6  5021               	movf	calibration_routine@c^0,w,c
  8354   0037C8  6ED9               	movwf	fsr2l,c
  8355   0037CA  6ADA               	clrf	fsr2h,c
  8356   0037CC  0E01               	movlw	1
  8357   0037CE  6EDF               	movwf	indf2,c
  8358   0037D0  0012               	return		;funcret
  8359   0037D2                     __end_of_calibration_routine:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function _switch_calibration *****************
  8363 ;; Defined at:
  8364 ;;		line 65 in file "calibration.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  calibration_    1    0[COMRAM] PTR int 
  8367 ;;		 -> calibration(9), 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8379 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8383 ;;Total ram usage:        3 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_calibration_routine
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text30
  8393   0046D0                     __ptext30:
  8394                           	callstack 0
  8395   0046D0                     _switch_calibration:
  8396                           	callstack 29
  8397   0046D0                     l198:
  8398                           
  8399                           ;calibration.c: 71:         if(!PORTFbits.RF2){
  8400   0046D0  B48E               	btfsc	142,2,c	;volatile
  8401   0046D2  EF6D  F023         	goto	u4451
  8402   0046D6  EF6F  F023         	goto	u4450
  8403   0046DA                     u4451:
  8404   0046DA  EF9D  F023         	goto	l199
  8405   0046DE                     u4450:
  8406   0046DE                     
  8407                           ;calibration.c: 72:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8408   0046DE  0E11               	movlw	17
  8409   0046E0  6E03               	movwf	(??_switch_calibration+1)^0,c
  8410   0046E2  0E3C               	movlw	60
  8411   0046E4  6E02               	movwf	??_switch_calibration^0,c
  8412   0046E6  0ECB               	movlw	203
  8413   0046E8                     u5197:
  8414   0046E8  2EE8               	decfsz	wreg,f,c
  8415   0046EA  D7FE               	bra	u5197
  8416   0046EC  2E02               	decfsz	??_switch_calibration^0,f,c
  8417   0046EE  D7FC               	bra	u5197
  8418   0046F0  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8419   0046F2  D7FA               	bra	u5197
  8420   0046F4  0000               	nop	
  8421   0046F6                     
  8422                           ;calibration.c: 73:             *calibration_index = *calibration_index + 1;
  8423   0046F6  5001               	movf	switch_calibration@calibration_index^0,w,c
  8424   0046F8  6ED9               	movwf	fsr2l,c
  8425   0046FA  6ADA               	clrf	fsr2h,c
  8426   0046FC  CFDE F002          	movff	postinc2,??_switch_calibration
  8427   004700  CFDD F003          	movff	postdec2,??_switch_calibration+1
  8428   004704  0E01               	movlw	1
  8429   004706  2602               	addwf	??_switch_calibration^0,f,c
  8430   004708  0E00               	movlw	0
  8431   00470A  2203               	addwfc	(??_switch_calibration+1)^0,f,c
  8432   00470C  5001               	movf	switch_calibration@calibration_index^0,w,c
  8433   00470E  6ED9               	movwf	fsr2l,c
  8434   004710  6ADA               	clrf	fsr2h,c
  8435   004712  C002  FFDE         	movff	??_switch_calibration,postinc2
  8436   004716  C003  FFDD         	movff	??_switch_calibration+1,postdec2
  8437   00471A                     
  8438                           ;calibration.c: 74:             LATDbits.LATD7 = 1;
  8439   00471A  8E7C               	bsf	124,7,c	;volatile
  8440   00471C                     
  8441                           ;calibration.c: 75:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8442   00471C  0E11               	movlw	17
  8443   00471E  6E03               	movwf	(??_switch_calibration+1)^0,c
  8444   004720  0E3C               	movlw	60
  8445   004722  6E02               	movwf	??_switch_calibration^0,c
  8446   004724  0ECB               	movlw	203
  8447   004726                     u5207:
  8448   004726  2EE8               	decfsz	wreg,f,c
  8449   004728  D7FE               	bra	u5207
  8450   00472A  2E02               	decfsz	??_switch_calibration^0,f,c
  8451   00472C  D7FC               	bra	u5207
  8452   00472E  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8453   004730  D7FA               	bra	u5207
  8454   004732  0000               	nop	
  8455   004734                     
  8456                           ;calibration.c: 76:             LATDbits.LATD7 = 0;
  8457   004734  9E7C               	bcf	124,7,c	;volatile
  8458                           
  8459                           ;calibration.c: 77:             break;
  8460   004736  EFBE  F023         	goto	l203
  8461   00473A                     l199:
  8462                           
  8463                           ;calibration.c: 80:         if(!PORTFbits.RF3){
  8464   00473A  B68E               	btfsc	142,3,c	;volatile
  8465   00473C  EFA2  F023         	goto	u4461
  8466   004740  EFA4  F023         	goto	u4460
  8467   004744                     u4461:
  8468   004744  EF68  F023         	goto	l198
  8469   004748                     u4460:
  8470   004748                     
  8471                           ;calibration.c: 81:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8472   004748  0E11               	movlw	17
  8473   00474A  6E03               	movwf	(??_switch_calibration+1)^0,c
  8474   00474C  0E3C               	movlw	60
  8475   00474E  6E02               	movwf	??_switch_calibration^0,c
  8476   004750  0ECB               	movlw	203
  8477   004752                     u5217:
  8478   004752  2EE8               	decfsz	wreg,f,c
  8479   004754  D7FE               	bra	u5217
  8480   004756  2E02               	decfsz	??_switch_calibration^0,f,c
  8481   004758  D7FC               	bra	u5217
  8482   00475A  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8483   00475C  D7FA               	bra	u5217
  8484   00475E  0000               	nop	
  8485   004760                     
  8486                           ;calibration.c: 82:             LATHbits.LATH3 = 1;
  8487   004760  8680               	bsf	128,3,c	;volatile
  8488                           
  8489                           ;calibration.c: 83:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8490   004762  0E11               	movlw	17
  8491   004764  6E03               	movwf	(??_switch_calibration+1)^0,c
  8492   004766  0E3C               	movlw	60
  8493   004768  6E02               	movwf	??_switch_calibration^0,c
  8494   00476A  0ECB               	movlw	203
  8495   00476C                     u5227:
  8496   00476C  2EE8               	decfsz	wreg,f,c
  8497   00476E  D7FE               	bra	u5227
  8498   004770  2E02               	decfsz	??_switch_calibration^0,f,c
  8499   004772  D7FC               	bra	u5227
  8500   004774  2E03               	decfsz	(??_switch_calibration+1)^0,f,c
  8501   004776  D7FA               	bra	u5227
  8502   004778  0000               	nop	
  8503   00477A                     
  8504                           ;calibration.c: 84:             LATHbits.LATH3 = 0;
  8505   00477A  9680               	bcf	128,3,c	;volatile
  8506   00477C                     l203:
  8507   00477C  0012               	return		;funcret
  8508   00477E                     __end_of_switch_calibration:
  8509                           	callstack 0
  8510                           
  8511 ;; *************** function _rightTURN *****************
  8512 ;; Defined at:
  8513 ;;		line 254 in file "dc_motor_v1.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  rotation_cal    1    wreg     unsigned char 
  8516 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8517 ;;		 -> motorL(9), 
  8518 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8519 ;;		 -> motorR(9), 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8522 ;;  j               2   26[COMRAM] int 
  8523 ;;  i               2   24[COMRAM] int 
  8524 ;;  delay_time      2   30[COMRAM] int 
  8525 ;;  max_power       2   28[COMRAM] int 
  8526 ;;  acceleration    2    0        int 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8540 ;;Total ram usage:       14 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; Hardware stack levels required when called: 2
  8543 ;; This function calls:
  8544 ;;		___awdiv
  8545 ;;		_delay_ms_function
  8546 ;;		_setMotorPWM
  8547 ;; This function is called by:
  8548 ;;		_calibration_routine
  8549 ;;		_maze_search
  8550 ;;		_maze_return
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text31
  8555   003B06                     __ptext31:
  8556                           	callstack 0
  8557   003B06                     _rightTURN:
  8558                           	callstack 27
  8559                           
  8560                           ;incstack = 0
  8561                           ;rightTURN@rotation_calibration stored from wreg
  8562   003B06  6E18               	movwf	rightTURN@rotation_calibration^0,c
  8563   003B08                     
  8564                           ;dc_motor_v1.c: 255:     mL->direction = 1;
  8565   003B08  5013               	movf	rightTURN@mL^0,w,c
  8566   003B0A  6ED9               	movwf	fsr2l,c
  8567   003B0C  6ADA               	clrf	fsr2h,c
  8568   003B0E  0E01               	movlw	1
  8569   003B10  26D9               	addwf	fsr2l,f,c
  8570   003B12  0E01               	movlw	1
  8571   003B14  6EDF               	movwf	indf2,c
  8572                           
  8573                           ;dc_motor_v1.c: 256:     mR->direction = 0;
  8574   003B16  5014               	movf	rightTURN@mR^0,w,c
  8575   003B18  6ED9               	movwf	fsr2l,c
  8576   003B1A  6ADA               	clrf	fsr2h,c
  8577   003B1C  0E01               	movlw	1
  8578   003B1E  26D9               	addwf	fsr2l,f,c
  8579   003B20  6ADF               	clrf	indf2,c
  8580   003B22                     
  8581                           ;dc_motor_v1.c: 258:     int max_power = 40;
  8582   003B22  0E00               	movlw	0
  8583   003B24  6E1E               	movwf	(rightTURN@max_power+1)^0,c
  8584   003B26  0E28               	movlw	40
  8585   003B28  6E1D               	movwf	rightTURN@max_power^0,c
  8586   003B2A                     
  8587                           ;dc_motor_v1.c: 260:     int delay_time = acceleration_time/max_power;
  8588   003B2A  0E00               	movlw	0
  8589   003B2C  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8590   003B2E  0E64               	movlw	100
  8591   003B30  6E01               	movwf	___awdiv@dividend^0,c
  8592   003B32  0E00               	movlw	0
  8593   003B34  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8594   003B36  0E28               	movlw	40
  8595   003B38  6E03               	movwf	___awdiv@divisor^0,c
  8596   003B3A  EC06  F023         	call	___awdiv	;wreg free
  8597   003B3E  C001  F01F         	movff	?___awdiv,rightTURN@delay_time
  8598   003B42  C002  F020         	movff	?___awdiv+1,rightTURN@delay_time+1
  8599   003B46                     
  8600                           ;dc_motor_v1.c: 263:     for(int i=0; i< max_power; i++){
  8601   003B46  0E00               	movlw	0
  8602   003B48  6E1A               	movwf	(rightTURN@i+1)^0,c
  8603   003B4A  0E00               	movlw	0
  8604   003B4C  6E19               	movwf	rightTURN@i^0,c
  8605   003B4E  EFCD  F01D         	goto	l4002
  8606   003B52                     l3992:
  8607                           
  8608                           ;dc_motor_v1.c: 264:         mL->power = mL->power + 1;
  8609   003B52  5013               	movf	rightTURN@mL^0,w,c
  8610   003B54  6ED9               	movwf	fsr2l,c
  8611   003B56  6ADA               	clrf	fsr2h,c
  8612   003B58  5013               	movf	rightTURN@mL^0,w,c
  8613   003B5A  6EE1               	movwf	fsr1l,c
  8614   003B5C  6AE2               	clrf	fsr1h,c
  8615   003B5E  50E7               	movf	indf1,w,c
  8616   003B60  6E15               	movwf	??_rightTURN^0,c
  8617   003B62  2815               	incf	??_rightTURN^0,w,c
  8618   003B64  6EDF               	movwf	indf2,c
  8619                           
  8620                           ;dc_motor_v1.c: 265:         mR->power = mR->power + 1 ;
  8621   003B66  5014               	movf	rightTURN@mR^0,w,c
  8622   003B68  6ED9               	movwf	fsr2l,c
  8623   003B6A  6ADA               	clrf	fsr2h,c
  8624   003B6C  5014               	movf	rightTURN@mR^0,w,c
  8625   003B6E  6EE1               	movwf	fsr1l,c
  8626   003B70  6AE2               	clrf	fsr1h,c
  8627   003B72  50E7               	movf	indf1,w,c
  8628   003B74  6E15               	movwf	??_rightTURN^0,c
  8629   003B76  2815               	incf	??_rightTURN^0,w,c
  8630   003B78  6EDF               	movwf	indf2,c
  8631   003B7A                     
  8632                           ;dc_motor_v1.c: 266:         setMotorPWM(mR);
  8633   003B7A  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8634   003B7E  ECBF  F01F         	call	_setMotorPWM	;wreg free
  8635   003B82                     
  8636                           ;dc_motor_v1.c: 267:         setMotorPWM(mL);
  8637   003B82  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8638   003B86  ECBF  F01F         	call	_setMotorPWM	;wreg free
  8639   003B8A                     
  8640                           ;dc_motor_v1.c: 268:         delay_ms_function(delay_time);
  8641   003B8A  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8642   003B8E  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8643   003B92  ECE6  F025         	call	_delay_ms_function	;wreg free
  8644   003B96                     
  8645                           ;dc_motor_v1.c: 269:     }
  8646   003B96  4A19               	infsnz	rightTURN@i^0,f,c
  8647   003B98  2A1A               	incf	(rightTURN@i+1)^0,f,c
  8648   003B9A                     l4002:
  8649   003B9A  501D               	movf	rightTURN@max_power^0,w,c
  8650   003B9C  5C19               	subwf	rightTURN@i^0,w,c
  8651   003B9E  501A               	movf	(rightTURN@i+1)^0,w,c
  8652   003BA0  0A80               	xorlw	128
  8653   003BA2  6E15               	movwf	??_rightTURN^0,c
  8654   003BA4  501E               	movf	(rightTURN@max_power+1)^0,w,c
  8655   003BA6  0A80               	xorlw	128
  8656   003BA8  5815               	subwfb	??_rightTURN^0,w,c
  8657   003BAA  A0D8               	btfss	status,0,c
  8658   003BAC  EFDA  F01D         	goto	u4471
  8659   003BB0  EFDC  F01D         	goto	u4470
  8660   003BB4                     u4471:
  8661   003BB4  EFA9  F01D         	goto	l3992
  8662   003BB8                     u4470:
  8663   003BB8                     
  8664                           ;dc_motor_v1.c: 274:     for(int j=0; j<rotation_calibration; j++){
  8665   003BB8  0E00               	movlw	0
  8666   003BBA  6E1C               	movwf	(rightTURN@j+1)^0,c
  8667   003BBC  0E00               	movlw	0
  8668   003BBE  6E1B               	movwf	rightTURN@j^0,c
  8669   003BC0  EFEB  F01D         	goto	l346
  8670   003BC4                     l4006:
  8671                           
  8672                           ;dc_motor_v1.c: 275:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8673   003BC4  0ED0               	movlw	208
  8674   003BC6  6E15               	movwf	??_rightTURN^0,c
  8675   003BC8  0ECA               	movlw	202
  8676   003BCA                     u5237:
  8677   003BCA  2EE8               	decfsz	wreg,f,c
  8678   003BCC  D7FE               	bra	u5237
  8679   003BCE  2E15               	decfsz	??_rightTURN^0,f,c
  8680   003BD0  D7FC               	bra	u5237
  8681   003BD2                     
  8682                           ;dc_motor_v1.c: 276:     }
  8683   003BD2  4A1B               	infsnz	rightTURN@j^0,f,c
  8684   003BD4  2A1C               	incf	(rightTURN@j+1)^0,f,c
  8685   003BD6                     l346:
  8686   003BD6  5018               	movf	rightTURN@rotation_calibration^0,w,c
  8687   003BD8  6E15               	movwf	??_rightTURN^0,c
  8688   003BDA  6A16               	clrf	(??_rightTURN+1)^0,c
  8689   003BDC  5015               	movf	??_rightTURN^0,w,c
  8690   003BDE  5C1B               	subwf	rightTURN@j^0,w,c
  8691   003BE0  501C               	movf	(rightTURN@j+1)^0,w,c
  8692   003BE2  0A80               	xorlw	128
  8693   003BE4  6E17               	movwf	(??_rightTURN+2)^0,c
  8694   003BE6  5016               	movf	(??_rightTURN+1)^0,w,c
  8695   003BE8  0A80               	xorlw	128
  8696   003BEA  5817               	subwfb	(??_rightTURN+2)^0,w,c
  8697   003BEC  A0D8               	btfss	status,0,c
  8698   003BEE  EFFB  F01D         	goto	u4481
  8699   003BF2  EFFD  F01D         	goto	u4480
  8700   003BF6                     u4481:
  8701   003BF6  EFE2  F01D         	goto	l4006
  8702   003BFA                     u4480:
  8703   003BFA  EF2B  F01E         	goto	l4024
  8704   003BFE                     l4010:
  8705                           
  8706                           ;dc_motor_v1.c: 280:         if(mR->power > 0 ){
  8707   003BFE  5014               	movf	rightTURN@mR^0,w,c
  8708   003C00  6ED9               	movwf	fsr2l,c
  8709   003C02  6ADA               	clrf	fsr2h,c
  8710   003C04  50DF               	movf	indf2,w,c
  8711   003C06  B4D8               	btfsc	status,2,c
  8712   003C08  EF08  F01E         	goto	u4491
  8713   003C0C  EF0A  F01E         	goto	u4490
  8714   003C10                     u4491:
  8715   003C10  EF0E  F01E         	goto	l4014
  8716   003C14                     u4490:
  8717   003C14                     
  8718                           ;dc_motor_v1.c: 281:             mR->power--;
  8719   003C14  5014               	movf	rightTURN@mR^0,w,c
  8720   003C16  6ED9               	movwf	fsr2l,c
  8721   003C18  6ADA               	clrf	fsr2h,c
  8722   003C1A  06DF               	decf	indf2,f,c
  8723   003C1C                     l4014:
  8724                           
  8725                           ;dc_motor_v1.c: 283:         if(mL->power > 0 ){
  8726   003C1C  5013               	movf	rightTURN@mL^0,w,c
  8727   003C1E  6ED9               	movwf	fsr2l,c
  8728   003C20  6ADA               	clrf	fsr2h,c
  8729   003C22  50DF               	movf	indf2,w,c
  8730   003C24  B4D8               	btfsc	status,2,c
  8731   003C26  EF17  F01E         	goto	u4501
  8732   003C2A  EF19  F01E         	goto	u4500
  8733   003C2E                     u4501:
  8734   003C2E  EF1D  F01E         	goto	l4018
  8735   003C32                     u4500:
  8736   003C32                     
  8737                           ;dc_motor_v1.c: 284:             mL->power--;
  8738   003C32  5013               	movf	rightTURN@mL^0,w,c
  8739   003C34  6ED9               	movwf	fsr2l,c
  8740   003C36  6ADA               	clrf	fsr2h,c
  8741   003C38  06DF               	decf	indf2,f,c
  8742   003C3A                     l4018:
  8743                           
  8744                           ;dc_motor_v1.c: 286:         setMotorPWM(mR);
  8745   003C3A  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8746   003C3E  ECBF  F01F         	call	_setMotorPWM	;wreg free
  8747   003C42                     
  8748                           ;dc_motor_v1.c: 287:         setMotorPWM(mL);
  8749   003C42  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8750   003C46  ECBF  F01F         	call	_setMotorPWM	;wreg free
  8751   003C4A                     
  8752                           ;dc_motor_v1.c: 288:         delay_ms_function(delay_time);
  8753   003C4A  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8754   003C4E  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8755   003C52  ECE6  F025         	call	_delay_ms_function	;wreg free
  8756   003C56                     l4024:
  8757                           
  8758                           ;dc_motor_v1.c: 279:     while(mL->power || mR->power > 0){
  8759   003C56  5013               	movf	rightTURN@mL^0,w,c
  8760   003C58  6ED9               	movwf	fsr2l,c
  8761   003C5A  6ADA               	clrf	fsr2h,c
  8762   003C5C  50DF               	movf	indf2,w,c
  8763   003C5E  A4D8               	btfss	status,2,c
  8764   003C60  EF34  F01E         	goto	u4511
  8765   003C64  EF36  F01E         	goto	u4510
  8766   003C68                     u4511:
  8767   003C68  EFFF  F01D         	goto	l4010
  8768   003C6C                     u4510:
  8769   003C6C  5014               	movf	rightTURN@mR^0,w,c
  8770   003C6E  6ED9               	movwf	fsr2l,c
  8771   003C70  6ADA               	clrf	fsr2h,c
  8772   003C72  50DF               	movf	indf2,w,c
  8773   003C74  A4D8               	btfss	status,2,c
  8774   003C76  EF3F  F01E         	goto	u4521
  8775   003C7A  EF41  F01E         	goto	u4520
  8776   003C7E                     u4521:
  8777   003C7E  EFFF  F01D         	goto	l4010
  8778   003C82                     u4520:
  8779   003C82  0012               	return		;funcret
  8780   003C84                     __end_of_rightTURN:
  8781                           	callstack 0
  8782                           
  8783 ;; *************** function _leftTURN *****************
  8784 ;; Defined at:
  8785 ;;		line 213 in file "dc_motor_v1.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  rotation_cal    1    wreg     unsigned char 
  8788 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8789 ;;		 -> motorL(9), 
  8790 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8791 ;;		 -> motorR(9), 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8794 ;;  j               2   26[COMRAM] int 
  8795 ;;  i               2   24[COMRAM] int 
  8796 ;;  delay_time      2   30[COMRAM] int 
  8797 ;;  max_power       2   28[COMRAM] int 
  8798 ;;  acceleration    2    0        int 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8811 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8812 ;;Total ram usage:       14 bytes
  8813 ;; Hardware stack levels used: 1
  8814 ;; Hardware stack levels required when called: 2
  8815 ;; This function calls:
  8816 ;;		___awdiv
  8817 ;;		_delay_ms_function
  8818 ;;		_setMotorPWM
  8819 ;; This function is called by:
  8820 ;;		_calibration_routine
  8821 ;;		_maze_search
  8822 ;;		_maze_return
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text32
  8827   003C84                     __ptext32:
  8828                           	callstack 0
  8829   003C84                     _leftTURN:
  8830                           	callstack 27
  8831                           
  8832                           ;incstack = 0
  8833                           ;leftTURN@rotation_calibration stored from wreg
  8834   003C84  6E18               	movwf	leftTURN@rotation_calibration^0,c
  8835   003C86                     
  8836                           ;dc_motor_v1.c: 215:     mL->direction = 0;
  8837   003C86  5013               	movf	leftTURN@mL^0,w,c
  8838   003C88  6ED9               	movwf	fsr2l,c
  8839   003C8A  6ADA               	clrf	fsr2h,c
  8840   003C8C  0E01               	movlw	1
  8841   003C8E  26D9               	addwf	fsr2l,f,c
  8842   003C90  6ADF               	clrf	indf2,c
  8843                           
  8844                           ;dc_motor_v1.c: 216:     mR->direction = 1;
  8845   003C92  5014               	movf	leftTURN@mR^0,w,c
  8846   003C94  6ED9               	movwf	fsr2l,c
  8847   003C96  6ADA               	clrf	fsr2h,c
  8848   003C98  0E01               	movlw	1
  8849   003C9A  26D9               	addwf	fsr2l,f,c
  8850   003C9C  0E01               	movlw	1
  8851   003C9E  6EDF               	movwf	indf2,c
  8852   003CA0                     
  8853                           ;dc_motor_v1.c: 218:     int max_power = 40;
  8854   003CA0  0E00               	movlw	0
  8855   003CA2  6E1E               	movwf	(leftTURN@max_power+1)^0,c
  8856   003CA4  0E28               	movlw	40
  8857   003CA6  6E1D               	movwf	leftTURN@max_power^0,c
  8858   003CA8                     
  8859                           ;dc_motor_v1.c: 220:     int delay_time = acceleration_time/max_power;
  8860   003CA8  0E00               	movlw	0
  8861   003CAA  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8862   003CAC  0E64               	movlw	100
  8863   003CAE  6E01               	movwf	___awdiv@dividend^0,c
  8864   003CB0  0E00               	movlw	0
  8865   003CB2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8866   003CB4  0E28               	movlw	40
  8867   003CB6  6E03               	movwf	___awdiv@divisor^0,c
  8868   003CB8  EC06  F023         	call	___awdiv	;wreg free
  8869   003CBC  C001  F01F         	movff	?___awdiv,leftTURN@delay_time
  8870   003CC0  C002  F020         	movff	?___awdiv+1,leftTURN@delay_time+1
  8871   003CC4                     
  8872                           ;dc_motor_v1.c: 223:     for(int i=0; i< max_power; i++){
  8873   003CC4  0E00               	movlw	0
  8874   003CC6  6E1A               	movwf	(leftTURN@i+1)^0,c
  8875   003CC8  0E00               	movlw	0
  8876   003CCA  6E19               	movwf	leftTURN@i^0,c
  8877   003CCC  EF8C  F01E         	goto	l4048
  8878   003CD0                     l4038:
  8879                           
  8880                           ;dc_motor_v1.c: 224:         mL->power = mL->power + 1;
  8881   003CD0  5013               	movf	leftTURN@mL^0,w,c
  8882   003CD2  6ED9               	movwf	fsr2l,c
  8883   003CD4  6ADA               	clrf	fsr2h,c
  8884   003CD6  5013               	movf	leftTURN@mL^0,w,c
  8885   003CD8  6EE1               	movwf	fsr1l,c
  8886   003CDA  6AE2               	clrf	fsr1h,c
  8887   003CDC  50E7               	movf	indf1,w,c
  8888   003CDE  6E15               	movwf	??_leftTURN^0,c
  8889   003CE0  2815               	incf	??_leftTURN^0,w,c
  8890   003CE2  6EDF               	movwf	indf2,c
  8891                           
  8892                           ;dc_motor_v1.c: 225:         mR->power = mR->power + 1 ;
  8893   003CE4  5014               	movf	leftTURN@mR^0,w,c
  8894   003CE6  6ED9               	movwf	fsr2l,c
  8895   003CE8  6ADA               	clrf	fsr2h,c
  8896   003CEA  5014               	movf	leftTURN@mR^0,w,c
  8897   003CEC  6EE1               	movwf	fsr1l,c
  8898   003CEE  6AE2               	clrf	fsr1h,c
  8899   003CF0  50E7               	movf	indf1,w,c
  8900   003CF2  6E15               	movwf	??_leftTURN^0,c
  8901   003CF4  2815               	incf	??_leftTURN^0,w,c
  8902   003CF6  6EDF               	movwf	indf2,c
  8903   003CF8                     
  8904                           ;dc_motor_v1.c: 226:         setMotorPWM(mR);
  8905   003CF8  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8906   003CFC  ECBF  F01F         	call	_setMotorPWM	;wreg free
  8907   003D00                     
  8908                           ;dc_motor_v1.c: 227:         setMotorPWM(mL);
  8909   003D00  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8910   003D04  ECBF  F01F         	call	_setMotorPWM	;wreg free
  8911   003D08                     
  8912                           ;dc_motor_v1.c: 228:         delay_ms_function(delay_time);
  8913   003D08  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8914   003D0C  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  8915   003D10  ECE6  F025         	call	_delay_ms_function	;wreg free
  8916   003D14                     
  8917                           ;dc_motor_v1.c: 229:     }
  8918   003D14  4A19               	infsnz	leftTURN@i^0,f,c
  8919   003D16  2A1A               	incf	(leftTURN@i+1)^0,f,c
  8920   003D18                     l4048:
  8921   003D18  501D               	movf	leftTURN@max_power^0,w,c
  8922   003D1A  5C19               	subwf	leftTURN@i^0,w,c
  8923   003D1C  501A               	movf	(leftTURN@i+1)^0,w,c
  8924   003D1E  0A80               	xorlw	128
  8925   003D20  6E15               	movwf	??_leftTURN^0,c
  8926   003D22  501E               	movf	(leftTURN@max_power+1)^0,w,c
  8927   003D24  0A80               	xorlw	128
  8928   003D26  5815               	subwfb	??_leftTURN^0,w,c
  8929   003D28  A0D8               	btfss	status,0,c
  8930   003D2A  EF99  F01E         	goto	u4531
  8931   003D2E  EF9B  F01E         	goto	u4530
  8932   003D32                     u4531:
  8933   003D32  EF68  F01E         	goto	l4038
  8934   003D36                     u4530:
  8935   003D36                     
  8936                           ;dc_motor_v1.c: 234:     for(int j=0; j<rotation_calibration; j++){
  8937   003D36  0E00               	movlw	0
  8938   003D38  6E1C               	movwf	(leftTURN@j+1)^0,c
  8939   003D3A  0E00               	movlw	0
  8940   003D3C  6E1B               	movwf	leftTURN@j^0,c
  8941   003D3E  EFAA  F01E         	goto	l332
  8942   003D42                     l4052:
  8943                           
  8944                           ;dc_motor_v1.c: 235:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8945   003D42  0ED0               	movlw	208
  8946   003D44  6E15               	movwf	??_leftTURN^0,c
  8947   003D46  0ECA               	movlw	202
  8948   003D48                     u5247:
  8949   003D48  2EE8               	decfsz	wreg,f,c
  8950   003D4A  D7FE               	bra	u5247
  8951   003D4C  2E15               	decfsz	??_leftTURN^0,f,c
  8952   003D4E  D7FC               	bra	u5247
  8953   003D50                     
  8954                           ;dc_motor_v1.c: 236:     }
  8955   003D50  4A1B               	infsnz	leftTURN@j^0,f,c
  8956   003D52  2A1C               	incf	(leftTURN@j+1)^0,f,c
  8957   003D54                     l332:
  8958   003D54  5018               	movf	leftTURN@rotation_calibration^0,w,c
  8959   003D56  6E15               	movwf	??_leftTURN^0,c
  8960   003D58  6A16               	clrf	(??_leftTURN+1)^0,c
  8961   003D5A  5015               	movf	??_leftTURN^0,w,c
  8962   003D5C  5C1B               	subwf	leftTURN@j^0,w,c
  8963   003D5E  501C               	movf	(leftTURN@j+1)^0,w,c
  8964   003D60  0A80               	xorlw	128
  8965   003D62  6E17               	movwf	(??_leftTURN+2)^0,c
  8966   003D64  5016               	movf	(??_leftTURN+1)^0,w,c
  8967   003D66  0A80               	xorlw	128
  8968   003D68  5817               	subwfb	(??_leftTURN+2)^0,w,c
  8969   003D6A  A0D8               	btfss	status,0,c
  8970   003D6C  EFBA  F01E         	goto	u4541
  8971   003D70  EFBC  F01E         	goto	u4540
  8972   003D74                     u4541:
  8973   003D74  EFA1  F01E         	goto	l4052
  8974   003D78                     u4540:
  8975   003D78  EFEA  F01E         	goto	l4070
  8976   003D7C                     l4056:
  8977                           
  8978                           ;dc_motor_v1.c: 240:         if(mR->power > 0 ){
  8979   003D7C  5014               	movf	leftTURN@mR^0,w,c
  8980   003D7E  6ED9               	movwf	fsr2l,c
  8981   003D80  6ADA               	clrf	fsr2h,c
  8982   003D82  50DF               	movf	indf2,w,c
  8983   003D84  B4D8               	btfsc	status,2,c
  8984   003D86  EFC7  F01E         	goto	u4551
  8985   003D8A  EFC9  F01E         	goto	u4550
  8986   003D8E                     u4551:
  8987   003D8E  EFCD  F01E         	goto	l4060
  8988   003D92                     u4550:
  8989   003D92                     
  8990                           ;dc_motor_v1.c: 241:             mR->power--;
  8991   003D92  5014               	movf	leftTURN@mR^0,w,c
  8992   003D94  6ED9               	movwf	fsr2l,c
  8993   003D96  6ADA               	clrf	fsr2h,c
  8994   003D98  06DF               	decf	indf2,f,c
  8995   003D9A                     l4060:
  8996                           
  8997                           ;dc_motor_v1.c: 243:         if(mL->power > 0 ){
  8998   003D9A  5013               	movf	leftTURN@mL^0,w,c
  8999   003D9C  6ED9               	movwf	fsr2l,c
  9000   003D9E  6ADA               	clrf	fsr2h,c
  9001   003DA0  50DF               	movf	indf2,w,c
  9002   003DA2  B4D8               	btfsc	status,2,c
  9003   003DA4  EFD6  F01E         	goto	u4561
  9004   003DA8  EFD8  F01E         	goto	u4560
  9005   003DAC                     u4561:
  9006   003DAC  EFDC  F01E         	goto	l4064
  9007   003DB0                     u4560:
  9008   003DB0                     
  9009                           ;dc_motor_v1.c: 244:             mL->power--;
  9010   003DB0  5013               	movf	leftTURN@mL^0,w,c
  9011   003DB2  6ED9               	movwf	fsr2l,c
  9012   003DB4  6ADA               	clrf	fsr2h,c
  9013   003DB6  06DF               	decf	indf2,f,c
  9014   003DB8                     l4064:
  9015                           
  9016                           ;dc_motor_v1.c: 246:         setMotorPWM(mR);
  9017   003DB8  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  9018   003DBC  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9019   003DC0                     
  9020                           ;dc_motor_v1.c: 247:         setMotorPWM(mL);
  9021   003DC0  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  9022   003DC4  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9023   003DC8                     
  9024                           ;dc_motor_v1.c: 248:         delay_ms_function(delay_time);
  9025   003DC8  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  9026   003DCC  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  9027   003DD0  ECE6  F025         	call	_delay_ms_function	;wreg free
  9028   003DD4                     l4070:
  9029                           
  9030                           ;dc_motor_v1.c: 239:     while(mL->power || mR->power > 0){
  9031   003DD4  5013               	movf	leftTURN@mL^0,w,c
  9032   003DD6  6ED9               	movwf	fsr2l,c
  9033   003DD8  6ADA               	clrf	fsr2h,c
  9034   003DDA  50DF               	movf	indf2,w,c
  9035   003DDC  A4D8               	btfss	status,2,c
  9036   003DDE  EFF3  F01E         	goto	u4571
  9037   003DE2  EFF5  F01E         	goto	u4570
  9038   003DE6                     u4571:
  9039   003DE6  EFBE  F01E         	goto	l4056
  9040   003DEA                     u4570:
  9041   003DEA  5014               	movf	leftTURN@mR^0,w,c
  9042   003DEC  6ED9               	movwf	fsr2l,c
  9043   003DEE  6ADA               	clrf	fsr2h,c
  9044   003DF0  50DF               	movf	indf2,w,c
  9045   003DF2  A4D8               	btfss	status,2,c
  9046   003DF4  EFFE  F01E         	goto	u4581
  9047   003DF8  EF00  F01F         	goto	u4580
  9048   003DFC                     u4581:
  9049   003DFC  EFBE  F01E         	goto	l4056
  9050   003E00                     u4580:
  9051   003E00  0012               	return		;funcret
  9052   003E02                     __end_of_leftTURN:
  9053                           	callstack 0
  9054                           
  9055 ;; *************** function _forward *****************
  9056 ;; Defined at:
  9057 ;;		line 122 in file "dc_motor_v1.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  Distance_Cal    1    wreg     unsigned char 
  9060 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9061 ;;		 -> motorL(9), 
  9062 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9063 ;;		 -> motorR(9), 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9066 ;;  j               2   26[COMRAM] int 
  9067 ;;  i               2   24[COMRAM] int 
  9068 ;;  delay_time      2   30[COMRAM] int 
  9069 ;;  max_power       2   28[COMRAM] int 
  9070 ;;  acceleration    2    0        int 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;Total ram usage:       14 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 2
  9087 ;; This function calls:
  9088 ;;		___awdiv
  9089 ;;		_delay_ms_function
  9090 ;;		_setMotorPWM
  9091 ;; This function is called by:
  9092 ;;		_calibration_routine
  9093 ;;		_maze_search
  9094 ;;		_maze_return
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text33
  9099   003986                     __ptext33:
  9100                           	callstack 0
  9101   003986                     _forward:
  9102                           	callstack 27
  9103                           
  9104                           ;incstack = 0
  9105                           ;forward@Distance_Calibration stored from wreg
  9106   003986  6E18               	movwf	forward@Distance_Calibration^0,c
  9107   003988                     
  9108                           ;dc_motor_v1.c: 127:     mL->direction = 1;
  9109   003988  5013               	movf	forward@mL^0,w,c
  9110   00398A  6ED9               	movwf	fsr2l,c
  9111   00398C  6ADA               	clrf	fsr2h,c
  9112   00398E  0E01               	movlw	1
  9113   003990  26D9               	addwf	fsr2l,f,c
  9114   003992  0E01               	movlw	1
  9115   003994  6EDF               	movwf	indf2,c
  9116                           
  9117                           ;dc_motor_v1.c: 128:     mR->direction = 1;
  9118   003996  5014               	movf	forward@mR^0,w,c
  9119   003998  6ED9               	movwf	fsr2l,c
  9120   00399A  6ADA               	clrf	fsr2h,c
  9121   00399C  0E01               	movlw	1
  9122   00399E  26D9               	addwf	fsr2l,f,c
  9123   0039A0  0E01               	movlw	1
  9124   0039A2  6EDF               	movwf	indf2,c
  9125   0039A4                     
  9126                           ;dc_motor_v1.c: 131:     int max_power = 40;
  9127   0039A4  0E00               	movlw	0
  9128   0039A6  6E1E               	movwf	(forward@max_power+1)^0,c
  9129   0039A8  0E28               	movlw	40
  9130   0039AA  6E1D               	movwf	forward@max_power^0,c
  9131   0039AC                     
  9132                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  9133   0039AC  0E00               	movlw	0
  9134   0039AE  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9135   0039B0  0E64               	movlw	100
  9136   0039B2  6E01               	movwf	___awdiv@dividend^0,c
  9137   0039B4  0E00               	movlw	0
  9138   0039B6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9139   0039B8  0E28               	movlw	40
  9140   0039BA  6E03               	movwf	___awdiv@divisor^0,c
  9141   0039BC  EC06  F023         	call	___awdiv	;wreg free
  9142   0039C0  C001  F01F         	movff	?___awdiv,forward@delay_time
  9143   0039C4  C002  F020         	movff	?___awdiv+1,forward@delay_time+1
  9144   0039C8                     
  9145                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  9146   0039C8  0E00               	movlw	0
  9147   0039CA  6E1A               	movwf	(forward@i+1)^0,c
  9148   0039CC  0E00               	movlw	0
  9149   0039CE  6E19               	movwf	forward@i^0,c
  9150   0039D0  EF0E  F01D         	goto	l4094
  9151   0039D4                     l4084:
  9152                           
  9153                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  9154   0039D4  5013               	movf	forward@mL^0,w,c
  9155   0039D6  6ED9               	movwf	fsr2l,c
  9156   0039D8  6ADA               	clrf	fsr2h,c
  9157   0039DA  5013               	movf	forward@mL^0,w,c
  9158   0039DC  6EE1               	movwf	fsr1l,c
  9159   0039DE  6AE2               	clrf	fsr1h,c
  9160   0039E0  50E7               	movf	indf1,w,c
  9161   0039E2  6E15               	movwf	??_forward^0,c
  9162   0039E4  2815               	incf	??_forward^0,w,c
  9163   0039E6  6EDF               	movwf	indf2,c
  9164                           
  9165                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  9166   0039E8  5014               	movf	forward@mR^0,w,c
  9167   0039EA  6ED9               	movwf	fsr2l,c
  9168   0039EC  6ADA               	clrf	fsr2h,c
  9169   0039EE  5014               	movf	forward@mR^0,w,c
  9170   0039F0  6EE1               	movwf	fsr1l,c
  9171   0039F2  6AE2               	clrf	fsr1h,c
  9172   0039F4  50E7               	movf	indf1,w,c
  9173   0039F6  6E15               	movwf	??_forward^0,c
  9174   0039F8  2815               	incf	??_forward^0,w,c
  9175   0039FA  6EDF               	movwf	indf2,c
  9176   0039FC                     
  9177                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  9178   0039FC  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9179   003A00  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9180   003A04                     
  9181                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  9182   003A04  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9183   003A08  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9184   003A0C                     
  9185                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  9186   003A0C  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9187   003A10  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9188   003A14  ECE6  F025         	call	_delay_ms_function	;wreg free
  9189   003A18                     
  9190                           ;dc_motor_v1.c: 142:     }
  9191   003A18  4A19               	infsnz	forward@i^0,f,c
  9192   003A1A  2A1A               	incf	(forward@i+1)^0,f,c
  9193   003A1C                     l4094:
  9194   003A1C  501D               	movf	forward@max_power^0,w,c
  9195   003A1E  5C19               	subwf	forward@i^0,w,c
  9196   003A20  501A               	movf	(forward@i+1)^0,w,c
  9197   003A22  0A80               	xorlw	128
  9198   003A24  6E15               	movwf	??_forward^0,c
  9199   003A26  501E               	movf	(forward@max_power+1)^0,w,c
  9200   003A28  0A80               	xorlw	128
  9201   003A2A  5815               	subwfb	??_forward^0,w,c
  9202   003A2C  A0D8               	btfss	status,0,c
  9203   003A2E  EF1B  F01D         	goto	u4591
  9204   003A32  EF1D  F01D         	goto	u4590
  9205   003A36                     u4591:
  9206   003A36  EFEA  F01C         	goto	l4084
  9207   003A3A                     u4590:
  9208   003A3A                     
  9209                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  9210   003A3A  0E00               	movlw	0
  9211   003A3C  6E1C               	movwf	(forward@j+1)^0,c
  9212   003A3E  0E00               	movlw	0
  9213   003A40  6E1B               	movwf	forward@j^0,c
  9214   003A42  EF2C  F01D         	goto	l304
  9215   003A46                     l4098:
  9216                           
  9217                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9218   003A46  0ED0               	movlw	208
  9219   003A48  6E15               	movwf	??_forward^0,c
  9220   003A4A  0ECA               	movlw	202
  9221   003A4C                     u5257:
  9222   003A4C  2EE8               	decfsz	wreg,f,c
  9223   003A4E  D7FE               	bra	u5257
  9224   003A50  2E15               	decfsz	??_forward^0,f,c
  9225   003A52  D7FC               	bra	u5257
  9226   003A54                     
  9227                           ;dc_motor_v1.c: 149:     }
  9228   003A54  4A1B               	infsnz	forward@j^0,f,c
  9229   003A56  2A1C               	incf	(forward@j+1)^0,f,c
  9230   003A58                     l304:
  9231   003A58  5018               	movf	forward@Distance_Calibration^0,w,c
  9232   003A5A  6E15               	movwf	??_forward^0,c
  9233   003A5C  6A16               	clrf	(??_forward+1)^0,c
  9234   003A5E  5015               	movf	??_forward^0,w,c
  9235   003A60  5C1B               	subwf	forward@j^0,w,c
  9236   003A62  501C               	movf	(forward@j+1)^0,w,c
  9237   003A64  0A80               	xorlw	128
  9238   003A66  6E17               	movwf	(??_forward+2)^0,c
  9239   003A68  5016               	movf	(??_forward+1)^0,w,c
  9240   003A6A  0A80               	xorlw	128
  9241   003A6C  5817               	subwfb	(??_forward+2)^0,w,c
  9242   003A6E  A0D8               	btfss	status,0,c
  9243   003A70  EF3C  F01D         	goto	u4601
  9244   003A74  EF3E  F01D         	goto	u4600
  9245   003A78                     u4601:
  9246   003A78  EF23  F01D         	goto	l4098
  9247   003A7C                     u4600:
  9248   003A7C  EF6C  F01D         	goto	l4116
  9249   003A80                     l4102:
  9250                           
  9251                           ;dc_motor_v1.c: 153:         if(mR->power > 0 ){
  9252   003A80  5014               	movf	forward@mR^0,w,c
  9253   003A82  6ED9               	movwf	fsr2l,c
  9254   003A84  6ADA               	clrf	fsr2h,c
  9255   003A86  50DF               	movf	indf2,w,c
  9256   003A88  B4D8               	btfsc	status,2,c
  9257   003A8A  EF49  F01D         	goto	u4611
  9258   003A8E  EF4B  F01D         	goto	u4610
  9259   003A92                     u4611:
  9260   003A92  EF4F  F01D         	goto	l4106
  9261   003A96                     u4610:
  9262   003A96                     
  9263                           ;dc_motor_v1.c: 154:             mR->power--;
  9264   003A96  5014               	movf	forward@mR^0,w,c
  9265   003A98  6ED9               	movwf	fsr2l,c
  9266   003A9A  6ADA               	clrf	fsr2h,c
  9267   003A9C  06DF               	decf	indf2,f,c
  9268   003A9E                     l4106:
  9269                           
  9270                           ;dc_motor_v1.c: 156:         if(mL->power > 0 ){
  9271   003A9E  5013               	movf	forward@mL^0,w,c
  9272   003AA0  6ED9               	movwf	fsr2l,c
  9273   003AA2  6ADA               	clrf	fsr2h,c
  9274   003AA4  50DF               	movf	indf2,w,c
  9275   003AA6  B4D8               	btfsc	status,2,c
  9276   003AA8  EF58  F01D         	goto	u4621
  9277   003AAC  EF5A  F01D         	goto	u4620
  9278   003AB0                     u4621:
  9279   003AB0  EF5E  F01D         	goto	l4110
  9280   003AB4                     u4620:
  9281   003AB4                     
  9282                           ;dc_motor_v1.c: 157:             mL->power--;
  9283   003AB4  5013               	movf	forward@mL^0,w,c
  9284   003AB6  6ED9               	movwf	fsr2l,c
  9285   003AB8  6ADA               	clrf	fsr2h,c
  9286   003ABA  06DF               	decf	indf2,f,c
  9287   003ABC                     l4110:
  9288                           
  9289                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  9290   003ABC  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9291   003AC0  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9292   003AC4                     
  9293                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  9294   003AC4  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9295   003AC8  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9296   003ACC                     
  9297                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  9298   003ACC  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9299   003AD0  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9300   003AD4  ECE6  F025         	call	_delay_ms_function	;wreg free
  9301   003AD8                     l4116:
  9302                           
  9303                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  9304   003AD8  5013               	movf	forward@mL^0,w,c
  9305   003ADA  6ED9               	movwf	fsr2l,c
  9306   003ADC  6ADA               	clrf	fsr2h,c
  9307   003ADE  50DF               	movf	indf2,w,c
  9308   003AE0  A4D8               	btfss	status,2,c
  9309   003AE2  EF75  F01D         	goto	u4631
  9310   003AE6  EF77  F01D         	goto	u4630
  9311   003AEA                     u4631:
  9312   003AEA  EF40  F01D         	goto	l4102
  9313   003AEE                     u4630:
  9314   003AEE  5014               	movf	forward@mR^0,w,c
  9315   003AF0  6ED9               	movwf	fsr2l,c
  9316   003AF2  6ADA               	clrf	fsr2h,c
  9317   003AF4  50DF               	movf	indf2,w,c
  9318   003AF6  A4D8               	btfss	status,2,c
  9319   003AF8  EF80  F01D         	goto	u4641
  9320   003AFC  EF82  F01D         	goto	u4640
  9321   003B00                     u4641:
  9322   003B00  EF40  F01D         	goto	l4102
  9323   003B04                     u4640:
  9324   003B04  0012               	return		;funcret
  9325   003B06                     __end_of_forward:
  9326                           	callstack 0
  9327                           
  9328 ;; *************** function _backward *****************
  9329 ;; Defined at:
  9330 ;;		line 166 in file "dc_motor_v1.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  Distance_Cal    1    wreg     unsigned char 
  9333 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9334 ;;		 -> motorL(9), 
  9335 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9336 ;;		 -> motorR(9), 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9339 ;;  j               2   26[COMRAM] int 
  9340 ;;  i               2   24[COMRAM] int 
  9341 ;;  delay_time      2   30[COMRAM] int 
  9342 ;;  max_power       2   28[COMRAM] int 
  9343 ;;  acceleration    2    0        int 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  1    wreg      void 
  9346 ;; Registers used:
  9347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9354 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9355 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9356 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9357 ;;Total ram usage:       14 bytes
  9358 ;; Hardware stack levels used: 1
  9359 ;; Hardware stack levels required when called: 2
  9360 ;; This function calls:
  9361 ;;		___awdiv
  9362 ;;		_delay_ms_function
  9363 ;;		_setMotorPWM
  9364 ;; This function is called by:
  9365 ;;		_calibration_routine
  9366 ;;		_maze_search
  9367 ;;		_maze_return
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           	psect	text34
  9372   003E02                     __ptext34:
  9373                           	callstack 0
  9374   003E02                     _backward:
  9375                           	callstack 27
  9376                           
  9377                           ;incstack = 0
  9378                           ;backward@Distance_Calibration stored from wreg
  9379   003E02  6E18               	movwf	backward@Distance_Calibration^0,c
  9380   003E04                     
  9381                           ;dc_motor_v1.c: 172:     mL->direction = 0;
  9382   003E04  5013               	movf	backward@mL^0,w,c
  9383   003E06  6ED9               	movwf	fsr2l,c
  9384   003E08  6ADA               	clrf	fsr2h,c
  9385   003E0A  0E01               	movlw	1
  9386   003E0C  26D9               	addwf	fsr2l,f,c
  9387   003E0E  6ADF               	clrf	indf2,c
  9388                           
  9389                           ;dc_motor_v1.c: 173:     mR->direction = 0;
  9390   003E10  5014               	movf	backward@mR^0,w,c
  9391   003E12  6ED9               	movwf	fsr2l,c
  9392   003E14  6ADA               	clrf	fsr2h,c
  9393   003E16  0E01               	movlw	1
  9394   003E18  26D9               	addwf	fsr2l,f,c
  9395   003E1A  6ADF               	clrf	indf2,c
  9396   003E1C                     
  9397                           ;dc_motor_v1.c: 176:     int max_power = 40;
  9398   003E1C  0E00               	movlw	0
  9399   003E1E  6E1E               	movwf	(backward@max_power+1)^0,c
  9400   003E20  0E28               	movlw	40
  9401   003E22  6E1D               	movwf	backward@max_power^0,c
  9402   003E24                     
  9403                           ;dc_motor_v1.c: 178:     int delay_time = acceleration_time/max_power;
  9404   003E24  0E00               	movlw	0
  9405   003E26  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9406   003E28  0E64               	movlw	100
  9407   003E2A  6E01               	movwf	___awdiv@dividend^0,c
  9408   003E2C  0E00               	movlw	0
  9409   003E2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9410   003E30  0E28               	movlw	40
  9411   003E32  6E03               	movwf	___awdiv@divisor^0,c
  9412   003E34  EC06  F023         	call	___awdiv	;wreg free
  9413   003E38  C001  F01F         	movff	?___awdiv,backward@delay_time
  9414   003E3C  C002  F020         	movff	?___awdiv+1,backward@delay_time+1
  9415   003E40                     
  9416                           ;dc_motor_v1.c: 181:     for(int i=0; i< max_power; i++){
  9417   003E40  0E00               	movlw	0
  9418   003E42  6E1A               	movwf	(backward@i+1)^0,c
  9419   003E44  0E00               	movlw	0
  9420   003E46  6E19               	movwf	backward@i^0,c
  9421   003E48  EF4A  F01F         	goto	l4140
  9422   003E4C                     l4130:
  9423                           
  9424                           ;dc_motor_v1.c: 182:         mL->power = mL->power + 1;
  9425   003E4C  5013               	movf	backward@mL^0,w,c
  9426   003E4E  6ED9               	movwf	fsr2l,c
  9427   003E50  6ADA               	clrf	fsr2h,c
  9428   003E52  5013               	movf	backward@mL^0,w,c
  9429   003E54  6EE1               	movwf	fsr1l,c
  9430   003E56  6AE2               	clrf	fsr1h,c
  9431   003E58  50E7               	movf	indf1,w,c
  9432   003E5A  6E15               	movwf	??_backward^0,c
  9433   003E5C  2815               	incf	??_backward^0,w,c
  9434   003E5E  6EDF               	movwf	indf2,c
  9435                           
  9436                           ;dc_motor_v1.c: 183:         mR->power = mR->power + 1 ;
  9437   003E60  5014               	movf	backward@mR^0,w,c
  9438   003E62  6ED9               	movwf	fsr2l,c
  9439   003E64  6ADA               	clrf	fsr2h,c
  9440   003E66  5014               	movf	backward@mR^0,w,c
  9441   003E68  6EE1               	movwf	fsr1l,c
  9442   003E6A  6AE2               	clrf	fsr1h,c
  9443   003E6C  50E7               	movf	indf1,w,c
  9444   003E6E  6E15               	movwf	??_backward^0,c
  9445   003E70  2815               	incf	??_backward^0,w,c
  9446   003E72  6EDF               	movwf	indf2,c
  9447   003E74                     
  9448                           ;dc_motor_v1.c: 184:         setMotorPWM(mR);
  9449   003E74  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9450   003E78  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9451   003E7C                     
  9452                           ;dc_motor_v1.c: 185:         setMotorPWM(mL);
  9453   003E7C  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9454   003E80  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9455   003E84                     
  9456                           ;dc_motor_v1.c: 186:         delay_ms_function(delay_time);
  9457   003E84  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9458   003E88  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9459   003E8C  ECE6  F025         	call	_delay_ms_function	;wreg free
  9460   003E90                     
  9461                           ;dc_motor_v1.c: 187:     }
  9462   003E90  4A19               	infsnz	backward@i^0,f,c
  9463   003E92  2A1A               	incf	(backward@i+1)^0,f,c
  9464   003E94                     l4140:
  9465   003E94  501D               	movf	backward@max_power^0,w,c
  9466   003E96  5C19               	subwf	backward@i^0,w,c
  9467   003E98  501A               	movf	(backward@i+1)^0,w,c
  9468   003E9A  0A80               	xorlw	128
  9469   003E9C  6E15               	movwf	??_backward^0,c
  9470   003E9E  501E               	movf	(backward@max_power+1)^0,w,c
  9471   003EA0  0A80               	xorlw	128
  9472   003EA2  5815               	subwfb	??_backward^0,w,c
  9473   003EA4  A0D8               	btfss	status,0,c
  9474   003EA6  EF57  F01F         	goto	u4651
  9475   003EAA  EF59  F01F         	goto	u4650
  9476   003EAE                     u4651:
  9477   003EAE  EF26  F01F         	goto	l4130
  9478   003EB2                     u4650:
  9479   003EB2                     
  9480                           ;dc_motor_v1.c: 192:     for(int j=0; j<Distance_Calibration; j++){
  9481   003EB2  0E00               	movlw	0
  9482   003EB4  6E1C               	movwf	(backward@j+1)^0,c
  9483   003EB6  0E00               	movlw	0
  9484   003EB8  6E1B               	movwf	backward@j^0,c
  9485   003EBA  EF68  F01F         	goto	l318
  9486   003EBE                     l4144:
  9487                           
  9488                           ;dc_motor_v1.c: 193:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9489   003EBE  0ED0               	movlw	208
  9490   003EC0  6E15               	movwf	??_backward^0,c
  9491   003EC2  0ECA               	movlw	202
  9492   003EC4                     u5267:
  9493   003EC4  2EE8               	decfsz	wreg,f,c
  9494   003EC6  D7FE               	bra	u5267
  9495   003EC8  2E15               	decfsz	??_backward^0,f,c
  9496   003ECA  D7FC               	bra	u5267
  9497   003ECC                     
  9498                           ;dc_motor_v1.c: 194:     }
  9499   003ECC  4A1B               	infsnz	backward@j^0,f,c
  9500   003ECE  2A1C               	incf	(backward@j+1)^0,f,c
  9501   003ED0                     l318:
  9502   003ED0  5018               	movf	backward@Distance_Calibration^0,w,c
  9503   003ED2  6E15               	movwf	??_backward^0,c
  9504   003ED4  6A16               	clrf	(??_backward+1)^0,c
  9505   003ED6  5015               	movf	??_backward^0,w,c
  9506   003ED8  5C1B               	subwf	backward@j^0,w,c
  9507   003EDA  501C               	movf	(backward@j+1)^0,w,c
  9508   003EDC  0A80               	xorlw	128
  9509   003EDE  6E17               	movwf	(??_backward+2)^0,c
  9510   003EE0  5016               	movf	(??_backward+1)^0,w,c
  9511   003EE2  0A80               	xorlw	128
  9512   003EE4  5817               	subwfb	(??_backward+2)^0,w,c
  9513   003EE6  A0D8               	btfss	status,0,c
  9514   003EE8  EF78  F01F         	goto	u4661
  9515   003EEC  EF7A  F01F         	goto	u4660
  9516   003EF0                     u4661:
  9517   003EF0  EF5F  F01F         	goto	l4144
  9518   003EF4                     u4660:
  9519   003EF4  EFA8  F01F         	goto	l4162
  9520   003EF8                     l4148:
  9521                           
  9522                           ;dc_motor_v1.c: 198:         if(mR->power > 0 ){
  9523   003EF8  5014               	movf	backward@mR^0,w,c
  9524   003EFA  6ED9               	movwf	fsr2l,c
  9525   003EFC  6ADA               	clrf	fsr2h,c
  9526   003EFE  50DF               	movf	indf2,w,c
  9527   003F00  B4D8               	btfsc	status,2,c
  9528   003F02  EF85  F01F         	goto	u4671
  9529   003F06  EF87  F01F         	goto	u4670
  9530   003F0A                     u4671:
  9531   003F0A  EF8B  F01F         	goto	l4152
  9532   003F0E                     u4670:
  9533   003F0E                     
  9534                           ;dc_motor_v1.c: 199:             mR->power--;
  9535   003F0E  5014               	movf	backward@mR^0,w,c
  9536   003F10  6ED9               	movwf	fsr2l,c
  9537   003F12  6ADA               	clrf	fsr2h,c
  9538   003F14  06DF               	decf	indf2,f,c
  9539   003F16                     l4152:
  9540                           
  9541                           ;dc_motor_v1.c: 201:         if(mL->power > 0 ){
  9542   003F16  5013               	movf	backward@mL^0,w,c
  9543   003F18  6ED9               	movwf	fsr2l,c
  9544   003F1A  6ADA               	clrf	fsr2h,c
  9545   003F1C  50DF               	movf	indf2,w,c
  9546   003F1E  B4D8               	btfsc	status,2,c
  9547   003F20  EF94  F01F         	goto	u4681
  9548   003F24  EF96  F01F         	goto	u4680
  9549   003F28                     u4681:
  9550   003F28  EF9A  F01F         	goto	l4156
  9551   003F2C                     u4680:
  9552   003F2C                     
  9553                           ;dc_motor_v1.c: 202:             mL->power--;
  9554   003F2C  5013               	movf	backward@mL^0,w,c
  9555   003F2E  6ED9               	movwf	fsr2l,c
  9556   003F30  6ADA               	clrf	fsr2h,c
  9557   003F32  06DF               	decf	indf2,f,c
  9558   003F34                     l4156:
  9559                           
  9560                           ;dc_motor_v1.c: 204:         setMotorPWM(mR);
  9561   003F34  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9562   003F38  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9563   003F3C                     
  9564                           ;dc_motor_v1.c: 205:         setMotorPWM(mL);
  9565   003F3C  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9566   003F40  ECBF  F01F         	call	_setMotorPWM	;wreg free
  9567   003F44                     
  9568                           ;dc_motor_v1.c: 206:         delay_ms_function(delay_time);
  9569   003F44  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9570   003F48  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9571   003F4C  ECE6  F025         	call	_delay_ms_function	;wreg free
  9572   003F50                     l4162:
  9573                           
  9574                           ;dc_motor_v1.c: 197:     while(mL->power || mR->power > 0){
  9575   003F50  5013               	movf	backward@mL^0,w,c
  9576   003F52  6ED9               	movwf	fsr2l,c
  9577   003F54  6ADA               	clrf	fsr2h,c
  9578   003F56  50DF               	movf	indf2,w,c
  9579   003F58  A4D8               	btfss	status,2,c
  9580   003F5A  EFB1  F01F         	goto	u4691
  9581   003F5E  EFB3  F01F         	goto	u4690
  9582   003F62                     u4691:
  9583   003F62  EF7C  F01F         	goto	l4148
  9584   003F66                     u4690:
  9585   003F66  5014               	movf	backward@mR^0,w,c
  9586   003F68  6ED9               	movwf	fsr2l,c
  9587   003F6A  6ADA               	clrf	fsr2h,c
  9588   003F6C  50DF               	movf	indf2,w,c
  9589   003F6E  A4D8               	btfss	status,2,c
  9590   003F70  EFBC  F01F         	goto	u4701
  9591   003F74  EFBE  F01F         	goto	u4700
  9592   003F78                     u4701:
  9593   003F78  EF7C  F01F         	goto	l4148
  9594   003F7C                     u4700:
  9595   003F7C  0012               	return		;funcret
  9596   003F7E                     __end_of_backward:
  9597                           	callstack 0
  9598                           
  9599 ;; *************** function _setMotorPWM *****************
  9600 ;; Defined at:
  9601 ;;		line 76 in file "dc_motor_v1.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  m               1   13[COMRAM] PTR struct DC_motor
  9604 ;;		 -> motorR(9), motorL(9), 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  negDuty         1   17[COMRAM] unsigned char 
  9607 ;;  posDuty         1   16[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;Total ram usage:        5 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; Hardware stack levels required when called: 1
  9624 ;; This function calls:
  9625 ;;		___lwdiv
  9626 ;;		___wmul
  9627 ;; This function is called by:
  9628 ;;		_forward
  9629 ;;		_backward
  9630 ;;		_leftTURN
  9631 ;;		_rightTURN
  9632 ;;		_stop
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text35
  9637   003F7E                     __ptext35:
  9638                           	callstack 0
  9639   003F7E                     _setMotorPWM:
  9640                           	callstack 27
  9641   003F7E                     
  9642                           ;dc_motor_v1.c: 76: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 77: {;dc_motor_v1.c: 78
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 80:     if(m->brakemode) {
  9643   003F7E  500E               	movf	setMotorPWM@m^0,w,c
  9644   003F80  6ED9               	movwf	fsr2l,c
  9645   003F82  6ADA               	clrf	fsr2h,c
  9646   003F84  0E02               	movlw	2
  9647   003F86  26D9               	addwf	fsr2l,f,c
  9648   003F88  50DF               	movf	indf2,w,c
  9649   003F8A  B4D8               	btfsc	status,2,c
  9650   003F8C  EFCA  F01F         	goto	u3861
  9651   003F90  EFCC  F01F         	goto	u3860
  9652   003F94                     u3861:
  9653   003F94  EFFC  F01F         	goto	l3734
  9654   003F98                     u3860:
  9655   003F98                     
  9656                           ;dc_motor_v1.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9657   003F98  500E               	movf	setMotorPWM@m^0,w,c
  9658   003F9A  6ED9               	movwf	fsr2l,c
  9659   003F9C  6ADA               	clrf	fsr2h,c
  9660   003F9E  50DF               	movf	indf2,w,c
  9661   003FA0  6E0F               	movwf	??_setMotorPWM^0,c
  9662   003FA2  500F               	movf	??_setMotorPWM^0,w,c
  9663   003FA4  6E01               	movwf	___wmul@multiplier^0,c
  9664   003FA6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9665   003FA8  500E               	movf	setMotorPWM@m^0,w,c
  9666   003FAA  6ED9               	movwf	fsr2l,c
  9667   003FAC  6ADA               	clrf	fsr2h,c
  9668   003FAE  0E03               	movlw	3
  9669   003FB0  26D9               	addwf	fsr2l,f,c
  9670   003FB2  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9671   003FB6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9672   003FBA  EC26  F026         	call	___wmul	;wreg free
  9673   003FBE  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9674   003FC2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9675   003FC6  0E00               	movlw	0
  9676   003FC8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9677   003FCA  0E64               	movlw	100
  9678   003FCC  6E09               	movwf	___lwdiv@divisor^0,c
  9679   003FCE  EC5E  F024         	call	___lwdiv	;wreg free
  9680   003FD2  500E               	movf	setMotorPWM@m^0,w,c
  9681   003FD4  6ED9               	movwf	fsr2l,c
  9682   003FD6  6ADA               	clrf	fsr2h,c
  9683   003FD8  0E03               	movlw	3
  9684   003FDA  26D9               	addwf	fsr2l,f,c
  9685   003FDC  50DF               	movf	indf2,w,c
  9686   003FDE  6E10               	movwf	(??_setMotorPWM+1)^0,c
  9687   003FE0  5007               	movf	?___lwdiv^0,w,c
  9688   003FE2  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  9689   003FE4  6E11               	movwf	setMotorPWM@posDuty^0,c
  9690   003FE6                     
  9691                           ;dc_motor_v1.c: 82:         negDuty=m->PWMperiod;
  9692   003FE6  500E               	movf	setMotorPWM@m^0,w,c
  9693   003FE8  6ED9               	movwf	fsr2l,c
  9694   003FEA  6ADA               	clrf	fsr2h,c
  9695   003FEC  0E03               	movlw	3
  9696   003FEE  26D9               	addwf	fsr2l,f,c
  9697   003FF0  50DF               	movf	indf2,w,c
  9698   003FF2  6E12               	movwf	setMotorPWM@negDuty^0,c
  9699                           
  9700                           ;dc_motor_v1.c: 83:     }
  9701   003FF4  EF1D  F020         	goto	l3738
  9702   003FF8                     l3734:
  9703                           
  9704                           ;dc_motor_v1.c: 85:         posDuty=0;
  9705   003FF8  0E00               	movlw	0
  9706   003FFA  6E11               	movwf	setMotorPWM@posDuty^0,c
  9707   003FFC                     
  9708                           ;dc_motor_v1.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9709   003FFC  500E               	movf	setMotorPWM@m^0,w,c
  9710   003FFE  6ED9               	movwf	fsr2l,c
  9711   004000  6ADA               	clrf	fsr2h,c
  9712   004002  50DF               	movf	indf2,w,c
  9713   004004  6E0F               	movwf	??_setMotorPWM^0,c
  9714   004006  500F               	movf	??_setMotorPWM^0,w,c
  9715   004008  6E01               	movwf	___wmul@multiplier^0,c
  9716   00400A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9717   00400C  500E               	movf	setMotorPWM@m^0,w,c
  9718   00400E  6ED9               	movwf	fsr2l,c
  9719   004010  6ADA               	clrf	fsr2h,c
  9720   004012  0E03               	movlw	3
  9721   004014  26D9               	addwf	fsr2l,f,c
  9722   004016  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9723   00401A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9724   00401E  EC26  F026         	call	___wmul	;wreg free
  9725   004022  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9726   004026  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9727   00402A  0E00               	movlw	0
  9728   00402C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9729   00402E  0E64               	movlw	100
  9730   004030  6E09               	movwf	___lwdiv@divisor^0,c
  9731   004032  EC5E  F024         	call	___lwdiv	;wreg free
  9732   004036  5007               	movf	?___lwdiv^0,w,c
  9733   004038  6E12               	movwf	setMotorPWM@negDuty^0,c
  9734   00403A                     l3738:
  9735                           
  9736                           ;dc_motor_v1.c: 89:     if (m->direction) {
  9737   00403A  500E               	movf	setMotorPWM@m^0,w,c
  9738   00403C  6ED9               	movwf	fsr2l,c
  9739   00403E  6ADA               	clrf	fsr2h,c
  9740   004040  0E01               	movlw	1
  9741   004042  26D9               	addwf	fsr2l,f,c
  9742   004044  50DF               	movf	indf2,w,c
  9743   004046  B4D8               	btfsc	status,2,c
  9744   004048  EF28  F020         	goto	u3871
  9745   00404C  EF2A  F020         	goto	u3870
  9746   004050                     u3871:
  9747   004050  EF4A  F020         	goto	l3742
  9748   004054                     u3870:
  9749   004054                     
  9750                           ;dc_motor_v1.c: 90:         *(m->posDutyHighByte)=posDuty;
  9751   004054  500E               	movf	setMotorPWM@m^0,w,c
  9752   004056  6ED9               	movwf	fsr2l,c
  9753   004058  6ADA               	clrf	fsr2h,c
  9754   00405A  0E05               	movlw	5
  9755   00405C  26D9               	addwf	fsr2l,f,c
  9756   00405E  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9757   004062  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9758   004066  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9759   00406A  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9760   00406E  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9761                           
  9762                           ;dc_motor_v1.c: 91:         *(m->negDutyHighByte)=negDuty;
  9763   004072  500E               	movf	setMotorPWM@m^0,w,c
  9764   004074  6ED9               	movwf	fsr2l,c
  9765   004076  6ADA               	clrf	fsr2h,c
  9766   004078  0E07               	movlw	7
  9767   00407A  26D9               	addwf	fsr2l,f,c
  9768   00407C  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9769   004080  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9770   004084  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9771   004088  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9772   00408C  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9773                           
  9774                           ;dc_motor_v1.c: 92:     } else {
  9775   004090  EF68  F020         	goto	l290
  9776   004094                     l3742:
  9777                           
  9778                           ;dc_motor_v1.c: 93:         *(m->posDutyHighByte)=negDuty;
  9779   004094  500E               	movf	setMotorPWM@m^0,w,c
  9780   004096  6ED9               	movwf	fsr2l,c
  9781   004098  6ADA               	clrf	fsr2h,c
  9782   00409A  0E05               	movlw	5
  9783   00409C  26D9               	addwf	fsr2l,f,c
  9784   00409E  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9785   0040A2  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9786   0040A6  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9787   0040AA  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9788   0040AE  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9789                           
  9790                           ;dc_motor_v1.c: 94:         *(m->negDutyHighByte)=posDuty;
  9791   0040B2  500E               	movf	setMotorPWM@m^0,w,c
  9792   0040B4  6ED9               	movwf	fsr2l,c
  9793   0040B6  6ADA               	clrf	fsr2h,c
  9794   0040B8  0E07               	movlw	7
  9795   0040BA  26D9               	addwf	fsr2l,f,c
  9796   0040BC  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9797   0040C0  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9798   0040C4  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9799   0040C8  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9800   0040CC  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9801   0040D0                     l290:
  9802   0040D0  0012               	return		;funcret
  9803   0040D2                     __end_of_setMotorPWM:
  9804                           	callstack 0
  9805                           
  9806 ;; *************** function ___wmul *****************
  9807 ;; Defined at:
  9808 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  multiplier      2    0[COMRAM] unsigned int 
  9811 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  product         2    4[COMRAM] unsigned int 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  2    0[COMRAM] unsigned int 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0, prodl, prodh
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9826 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;Total ram usage:        6 bytes
  9828 ;; Hardware stack levels used: 1
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_setMotorPWM
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           	psect	text36
  9837   004C4C                     __ptext36:
  9838                           	callstack 0
  9839   004C4C                     ___wmul:
  9840                           	callstack 27
  9841   004C4C  5001               	movf	___wmul@multiplier^0,w,c
  9842   004C4E  0203               	mulwf	___wmul@multiplicand^0,c
  9843   004C50  CFF3 F005          	movff	prodl,___wmul@product
  9844   004C54  CFF4 F006          	movff	prodh,___wmul@product+1
  9845   004C58  5001               	movf	___wmul@multiplier^0,w,c
  9846   004C5A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9847   004C5C  50F3               	movf	243,w,c
  9848   004C5E  2606               	addwf	(___wmul@product+1)^0,f,c
  9849   004C60  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9850   004C62  0203               	mulwf	___wmul@multiplicand^0,c
  9851   004C64  50F3               	movf	243,w,c
  9852   004C66  2606               	addwf	(___wmul@product+1)^0,f,c
  9853   004C68  C005  F001         	movff	___wmul@product,?___wmul
  9854   004C6C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9855   004C70  0012               	return		;funcret
  9856   004C72                     __end_of___wmul:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function ___lwdiv *****************
  9860 ;; Defined at:
  9861 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  dividend        2    6[COMRAM] unsigned int 
  9864 ;;  divisor         2    8[COMRAM] unsigned int 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  quotient        2   10[COMRAM] unsigned int 
  9867 ;;  counter         1   12[COMRAM] unsigned char 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  2    6[COMRAM] unsigned int 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9880 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9881 ;;Total ram usage:        7 bytes
  9882 ;; Hardware stack levels used: 1
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_setMotorPWM
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text37
  9891   0048BC                     __ptext37:
  9892                           	callstack 0
  9893   0048BC                     ___lwdiv:
  9894                           	callstack 27
  9895   0048BC  0E00               	movlw	0
  9896   0048BE  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9897   0048C0  0E00               	movlw	0
  9898   0048C2  6E0B               	movwf	___lwdiv@quotient^0,c
  9899   0048C4  5009               	movf	___lwdiv@divisor^0,w,c
  9900   0048C6  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9901   0048C8  B4D8               	btfsc	status,2,c
  9902   0048CA  EF69  F024         	goto	u3701
  9903   0048CE  EF6B  F024         	goto	u3700
  9904   0048D2                     u3701:
  9905   0048D2  EF93  F024         	goto	l1090
  9906   0048D6                     u3700:
  9907   0048D6  0E01               	movlw	1
  9908   0048D8  6E0D               	movwf	___lwdiv@counter^0,c
  9909   0048DA  EF73  F024         	goto	l3614
  9910   0048DE                     l3612:
  9911   0048DE  90D8               	bcf	status,0,c
  9912   0048E0  3609               	rlcf	___lwdiv@divisor^0,f,c
  9913   0048E2  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9914   0048E4  2A0D               	incf	___lwdiv@counter^0,f,c
  9915   0048E6                     l3614:
  9916   0048E6  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9917   0048E8  EF78  F024         	goto	u3711
  9918   0048EC  EF7A  F024         	goto	u3710
  9919   0048F0                     u3711:
  9920   0048F0  EF6F  F024         	goto	l3612
  9921   0048F4                     u3710:
  9922   0048F4                     l3616:
  9923   0048F4  90D8               	bcf	status,0,c
  9924   0048F6  360B               	rlcf	___lwdiv@quotient^0,f,c
  9925   0048F8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9926   0048FA  5009               	movf	___lwdiv@divisor^0,w,c
  9927   0048FC  5C07               	subwf	___lwdiv@dividend^0,w,c
  9928   0048FE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9929   004900  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9930   004902  A0D8               	btfss	status,0,c
  9931   004904  EF86  F024         	goto	u3721
  9932   004908  EF88  F024         	goto	u3720
  9933   00490C                     u3721:
  9934   00490C  EF8D  F024         	goto	l3624
  9935   004910                     u3720:
  9936   004910  5009               	movf	___lwdiv@divisor^0,w,c
  9937   004912  5E07               	subwf	___lwdiv@dividend^0,f,c
  9938   004914  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9939   004916  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9940   004918  800B               	bsf	___lwdiv@quotient^0,0,c
  9941   00491A                     l3624:
  9942   00491A  90D8               	bcf	status,0,c
  9943   00491C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9944   00491E  3209               	rrcf	___lwdiv@divisor^0,f,c
  9945   004920  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9946   004922  EF7A  F024         	goto	l3616
  9947   004926                     l1090:
  9948   004926  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9949   00492A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9950   00492E  0012               	return		;funcret
  9951   004930                     __end_of___lwdiv:
  9952                           	callstack 0
  9953                           
  9954 ;; *************** function _delay_ms_function *****************
  9955 ;; Defined at:
  9956 ;;		line 68 in file "dc_motor_v1.c"
  9957 ;; Parameters:    Size  Location     Type
  9958 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;		None
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  1    wreg      void 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9972 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9973 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9974 ;;Total ram usage:        3 bytes
  9975 ;; Hardware stack levels used: 1
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_forward
  9980 ;;		_backward
  9981 ;;		_leftTURN
  9982 ;;		_rightTURN
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text38
  9987   004BCC                     __ptext38:
  9988                           	callstack 0
  9989   004BCC                     _delay_ms_function:
  9990                           	callstack 28
  9991   004BCC                     
  9992                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
  9993   004BCC  EFF3  F025         	goto	l280
  9994   004BD0                     l3724:
  9995                           
  9996                           ;dc_motor_v1.c: 70:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9997   004BD0  0E15               	movlw	21
  9998   004BD2  6E03               	movwf	??_delay_ms_function^0,c
  9999   004BD4  0EC6               	movlw	198
 10000   004BD6                     u5277:
 10001   004BD6  2EE8               	decfsz	wreg,f,c
 10002   004BD8  D7FE               	bra	u5277
 10003   004BDA  2E03               	decfsz	??_delay_ms_function^0,f,c
 10004   004BDC  D7FC               	bra	u5277
 10005   004BDE  D000               	nop2	
 10006   004BE0                     
 10007                           ;dc_motor_v1.c: 71:         milliseconds--;
 10008   004BE0  0601               	decf	delay_ms_function@milliseconds^0,f,c
 10009   004BE2  A0D8               	btfss	status,0,c
 10010   004BE4  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
 10011   004BE6                     l280:
 10012                           
 10013                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
 10014   004BE6  5001               	movf	delay_ms_function@milliseconds^0,w,c
 10015   004BE8  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
 10016   004BEA  A4D8               	btfss	status,2,c
 10017   004BEC  EFFA  F025         	goto	u3851
 10018   004BF0  EFFC  F025         	goto	u3850
 10019   004BF4                     u3851:
 10020   004BF4  EFE8  F025         	goto	l3724
 10021   004BF8                     u3850:
 10022   004BF8  0012               	return		;funcret
 10023   004BFA                     __end_of_delay_ms_function:
 10024                           	callstack 0
 10025                           
 10026 ;; *************** function ___awdiv *****************
 10027 ;; Defined at:
 10028 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  dividend        2    0[COMRAM] int 
 10031 ;;  divisor         2    2[COMRAM] int 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  quotient        2    6[COMRAM] int 
 10034 ;;  sign            1    5[COMRAM] unsigned char 
 10035 ;;  counter         1    4[COMRAM] unsigned char 
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  2    0[COMRAM] int 
 10038 ;; Registers used:
 10039 ;;		wreg, status,2, status,0
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10046 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10048 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10049 ;;Total ram usage:        8 bytes
 10050 ;; Hardware stack levels used: 1
 10051 ;; This function calls:
 10052 ;;		Nothing
 10053 ;; This function is called by:
 10054 ;;		_forward
 10055 ;;		_backward
 10056 ;;		_leftTURN
 10057 ;;		_rightTURN
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text39
 10062   00460C                     __ptext39:
 10063                           	callstack 0
 10064   00460C                     ___awdiv:
 10065                           	callstack 28
 10066   00460C  0E00               	movlw	0
 10067   00460E  6E06               	movwf	___awdiv@sign^0,c
 10068   004610  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10069   004612  EF0F  F023         	goto	u3880
 10070   004616  EF0D  F023         	goto	u3881
 10071   00461A                     u3881:
 10072   00461A  EF15  F023         	goto	l3752
 10073   00461E                     u3880:
 10074   00461E  6C03               	negf	___awdiv@divisor^0,c
 10075   004620  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10076   004622  B0D8               	btfsc	status,0,c
 10077   004624  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10078   004626  0E01               	movlw	1
 10079   004628  6E06               	movwf	___awdiv@sign^0,c
 10080   00462A                     l3752:
 10081   00462A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10082   00462C  EF1C  F023         	goto	u3890
 10083   004630  EF1A  F023         	goto	u3891
 10084   004634                     u3891:
 10085   004634  EF22  F023         	goto	l3758
 10086   004638                     u3890:
 10087   004638  6C01               	negf	___awdiv@dividend^0,c
 10088   00463A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10089   00463C  B0D8               	btfsc	status,0,c
 10090   00463E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10091   004640  0E01               	movlw	1
 10092   004642  1A06               	xorwf	___awdiv@sign^0,f,c
 10093   004644                     l3758:
 10094   004644  0E00               	movlw	0
 10095   004646  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10096   004648  0E00               	movlw	0
 10097   00464A  6E07               	movwf	___awdiv@quotient^0,c
 10098   00464C  5003               	movf	___awdiv@divisor^0,w,c
 10099   00464E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10100   004650  B4D8               	btfsc	status,2,c
 10101   004652  EF2D  F023         	goto	u3901
 10102   004656  EF2F  F023         	goto	u3900
 10103   00465A                     u3901:
 10104   00465A  EF57  F023         	goto	l3780
 10105   00465E                     u3900:
 10106   00465E  0E01               	movlw	1
 10107   004660  6E05               	movwf	___awdiv@counter^0,c
 10108   004662  EF37  F023         	goto	l3766
 10109   004666                     l3764:
 10110   004666  90D8               	bcf	status,0,c
 10111   004668  3603               	rlcf	___awdiv@divisor^0,f,c
 10112   00466A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10113   00466C  2A05               	incf	___awdiv@counter^0,f,c
 10114   00466E                     l3766:
 10115   00466E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10116   004670  EF3C  F023         	goto	u3911
 10117   004674  EF3E  F023         	goto	u3910
 10118   004678                     u3911:
 10119   004678  EF33  F023         	goto	l3764
 10120   00467C                     u3910:
 10121   00467C                     l3768:
 10122   00467C  90D8               	bcf	status,0,c
 10123   00467E  3607               	rlcf	___awdiv@quotient^0,f,c
 10124   004680  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10125   004682  5003               	movf	___awdiv@divisor^0,w,c
 10126   004684  5C01               	subwf	___awdiv@dividend^0,w,c
 10127   004686  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10128   004688  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10129   00468A  A0D8               	btfss	status,0,c
 10130   00468C  EF4A  F023         	goto	u3921
 10131   004690  EF4C  F023         	goto	u3920
 10132   004694                     u3921:
 10133   004694  EF51  F023         	goto	l3776
 10134   004698                     u3920:
 10135   004698  5003               	movf	___awdiv@divisor^0,w,c
 10136   00469A  5E01               	subwf	___awdiv@dividend^0,f,c
 10137   00469C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10138   00469E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10139   0046A0  8007               	bsf	___awdiv@quotient^0,0,c
 10140   0046A2                     l3776:
 10141   0046A2  90D8               	bcf	status,0,c
 10142   0046A4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10143   0046A6  3203               	rrcf	___awdiv@divisor^0,f,c
 10144   0046A8  2E05               	decfsz	___awdiv@counter^0,f,c
 10145   0046AA  EF3E  F023         	goto	l3768
 10146   0046AE                     l3780:
 10147   0046AE  5006               	movf	___awdiv@sign^0,w,c
 10148   0046B0  B4D8               	btfsc	status,2,c
 10149   0046B2  EF5D  F023         	goto	u3931
 10150   0046B6  EF5F  F023         	goto	u3930
 10151   0046BA                     u3931:
 10152   0046BA  EF63  F023         	goto	l3784
 10153   0046BE                     u3930:
 10154   0046BE  6C07               	negf	___awdiv@quotient^0,c
 10155   0046C0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10156   0046C2  B0D8               	btfsc	status,0,c
 10157   0046C4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10158   0046C6                     l3784:
 10159   0046C6  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10160   0046CA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10161   0046CE  0012               	return		;funcret
 10162   0046D0                     __end_of___awdiv:
 10163                           	callstack 0
 10164                           
 10165 ;; *************** function _adjust_calibration *****************
 10166 ;; Defined at:
 10167 ;;		line 26 in file "calibration.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  calibration_    1    0[COMRAM] PTR int 
 10170 ;;		 -> calibration(9), 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;		None
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10185 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10186 ;;Total ram usage:        5 bytes
 10187 ;; Hardware stack levels used: 1
 10188 ;; This function calls:
 10189 ;;		Nothing
 10190 ;; This function is called by:
 10191 ;;		_calibration_routine
 10192 ;; This function uses a non-reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text40
 10196   0040D2                     __ptext40:
 10197                           	callstack 0
 10198   0040D2                     _adjust_calibration:
 10199                           	callstack 29
 10200   0040D2                     l185:
 10201                           
 10202                           ;calibration.c: 32:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10203   0040D2  A68E               	btfss	142,3,c	;volatile
 10204   0040D4  EF6E  F020         	goto	u4391
 10205   0040D8  EF70  F020         	goto	u4390
 10206   0040DC                     u4391:
 10207   0040DC  EF77  F020         	goto	l3928
 10208   0040E0                     u4390:
 10209   0040E0  B48E               	btfsc	142,2,c	;volatile
 10210   0040E2  EF75  F020         	goto	u4401
 10211   0040E6  EF77  F020         	goto	u4400
 10212   0040EA                     u4401:
 10213   0040EA  EF69  F020         	goto	l185
 10214   0040EE                     u4400:
 10215   0040EE                     l3928:
 10216                           
 10217                           ;calibration.c: 33:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10218   0040EE  0E09               	movlw	9
 10219   0040F0  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10220   0040F2  0E1E               	movlw	30
 10221   0040F4  6E02               	movwf	??_adjust_calibration^0,c
 10222   0040F6  0EE4               	movlw	228
 10223   0040F8                     u5287:
 10224   0040F8  2EE8               	decfsz	wreg,f,c
 10225   0040FA  D7FE               	bra	u5287
 10226   0040FC  2E02               	decfsz	??_adjust_calibration^0,f,c
 10227   0040FE  D7FC               	bra	u5287
 10228   004100  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10229   004102  D7FA               	bra	u5287
 10230   004104  D000               	nop2	
 10231   004106                     
 10232                           ;calibration.c: 35:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10233   004106  B68E               	btfsc	142,3,c	;volatile
 10234   004108  EF88  F020         	goto	u4411
 10235   00410C  EF8A  F020         	goto	u4410
 10236   004110                     u4411:
 10237   004110  EFA3  F020         	goto	l189
 10238   004114                     u4410:
 10239   004114  B48E               	btfsc	142,2,c	;volatile
 10240   004116  EF8F  F020         	goto	u4421
 10241   00411A  EF91  F020         	goto	u4420
 10242   00411E                     u4421:
 10243   00411E  EFA3  F020         	goto	l189
 10244   004122                     u4420:
 10245   004122                     
 10246                           ;calibration.c: 37:                 LATHbits.LATH3 = 1;
 10247   004122  8680               	bsf	128,3,c	;volatile
 10248                           
 10249                           ;calibration.c: 38:                 LATDbits.LATD7 = 1;
 10250   004124  8E7C               	bsf	124,7,c	;volatile
 10251   004126                     
 10252                           ;calibration.c: 39:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10253   004126  0E52               	movlw	82
 10254   004128  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10255   00412A  0E2B               	movlw	43
 10256   00412C  6E02               	movwf	??_adjust_calibration^0,c
 10257   00412E  0E00               	movlw	0
 10258   004130                     u5297:
 10259   004130  2EE8               	decfsz	wreg,f,c
 10260   004132  D7FE               	bra	u5297
 10261   004134  2E02               	decfsz	??_adjust_calibration^0,f,c
 10262   004136  D7FC               	bra	u5297
 10263   004138  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10264   00413A  D7FA               	bra	u5297
 10265   00413C  D000               	nop2	
 10266   00413E                     
 10267                           ;calibration.c: 40:                 LATHbits.LATH3 = 0;
 10268   00413E  9680               	bcf	128,3,c	;volatile
 10269   004140                     
 10270                           ;calibration.c: 41:                 LATDbits.LATD7 = 0;
 10271   004140  9E7C               	bcf	124,7,c	;volatile
 10272                           
 10273                           ;calibration.c: 42:                 break;
 10274   004142  EF0F  F021         	goto	l195
 10275   004146                     l189:
 10276                           
 10277                           ;calibration.c: 45:                 if(!PORTFbits.RF2){
 10278   004146  B48E               	btfsc	142,2,c	;volatile
 10279   004148  EFA8  F020         	goto	u4431
 10280   00414C  EFAA  F020         	goto	u4430
 10281   004150                     u4431:
 10282   004150  EFD6  F020         	goto	l3954
 10283   004154                     u4430:
 10284   004154                     
 10285                           ;calibration.c: 46:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10286   004154  0E11               	movlw	17
 10287   004156  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10288   004158  0E3C               	movlw	60
 10289   00415A  6E02               	movwf	??_adjust_calibration^0,c
 10290   00415C  0ECB               	movlw	203
 10291   00415E                     u5307:
 10292   00415E  2EE8               	decfsz	wreg,f,c
 10293   004160  D7FE               	bra	u5307
 10294   004162  2E02               	decfsz	??_adjust_calibration^0,f,c
 10295   004164  D7FC               	bra	u5307
 10296   004166  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10297   004168  D7FA               	bra	u5307
 10298   00416A  0000               	nop	
 10299   00416C                     
 10300                           ;calibration.c: 47:                     *calibration_label = *calibration_label + 1;
 10301   00416C  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10302   00416E  6ED9               	movwf	fsr2l,c
 10303   004170  6ADA               	clrf	fsr2h,c
 10304   004172  CFDE F002          	movff	postinc2,??_adjust_calibration
 10305   004176  CFDD F003          	movff	postdec2,??_adjust_calibration+1
 10306   00417A  0E01               	movlw	1
 10307   00417C  2602               	addwf	??_adjust_calibration^0,f,c
 10308   00417E  0E00               	movlw	0
 10309   004180  2203               	addwfc	(??_adjust_calibration+1)^0,f,c
 10310   004182  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10311   004184  6ED9               	movwf	fsr2l,c
 10312   004186  6ADA               	clrf	fsr2h,c
 10313   004188  C002  FFDE         	movff	??_adjust_calibration,postinc2
 10314   00418C  C003  FFDD         	movff	??_adjust_calibration+1,postdec2
 10315   004190                     
 10316                           ;calibration.c: 48:                     LATDbits.LATD7 = 1;
 10317   004190  8E7C               	bsf	124,7,c	;volatile
 10318   004192                     
 10319                           ;calibration.c: 49:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10320   004192  0E11               	movlw	17
 10321   004194  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10322   004196  0E3C               	movlw	60
 10323   004198  6E02               	movwf	??_adjust_calibration^0,c
 10324   00419A  0ECB               	movlw	203
 10325   00419C                     u5317:
 10326   00419C  2EE8               	decfsz	wreg,f,c
 10327   00419E  D7FE               	bra	u5317
 10328   0041A0  2E02               	decfsz	??_adjust_calibration^0,f,c
 10329   0041A2  D7FC               	bra	u5317
 10330   0041A4  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10331   0041A6  D7FA               	bra	u5317
 10332   0041A8  0000               	nop	
 10333   0041AA                     
 10334                           ;calibration.c: 50:                     LATDbits.LATD7 = 0;
 10335   0041AA  9E7C               	bcf	124,7,c	;volatile
 10336   0041AC                     l3954:
 10337                           
 10338                           ;calibration.c: 53:                 if(!PORTFbits.RF3){
 10339   0041AC  B68E               	btfsc	142,3,c	;volatile
 10340   0041AE  EFDB  F020         	goto	u4441
 10341   0041B2  EFDD  F020         	goto	u4440
 10342   0041B6                     u4441:
 10343   0041B6  EF0D  F021         	goto	l186
 10344   0041BA                     u4440:
 10345   0041BA                     
 10346                           ;calibration.c: 54:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10347   0041BA  0E11               	movlw	17
 10348   0041BC  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10349   0041BE  0E3C               	movlw	60
 10350   0041C0  6E02               	movwf	??_adjust_calibration^0,c
 10351   0041C2  0ECB               	movlw	203
 10352   0041C4                     u5327:
 10353   0041C4  2EE8               	decfsz	wreg,f,c
 10354   0041C6  D7FE               	bra	u5327
 10355   0041C8  2E02               	decfsz	??_adjust_calibration^0,f,c
 10356   0041CA  D7FC               	bra	u5327
 10357   0041CC  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10358   0041CE  D7FA               	bra	u5327
 10359   0041D0  0000               	nop	
 10360   0041D2                     
 10361                           ;calibration.c: 55:                     *calibration_label = *calibration_label - 1;
 10362   0041D2  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10363   0041D4  6ED9               	movwf	fsr2l,c
 10364   0041D6  6ADA               	clrf	fsr2h,c
 10365   0041D8  CFDE F002          	movff	postinc2,??_adjust_calibration
 10366   0041DC  CFDD F003          	movff	postdec2,??_adjust_calibration+1
 10367   0041E0  0EFF               	movlw	255
 10368   0041E2  2402               	addwf	??_adjust_calibration^0,w,c
 10369   0041E4  6E04               	movwf	(??_adjust_calibration+2)^0,c
 10370   0041E6  0EFF               	movlw	255
 10371   0041E8  2003               	addwfc	(??_adjust_calibration+1)^0,w,c
 10372   0041EA  6E05               	movwf	(??_adjust_calibration+3)^0,c
 10373   0041EC  5001               	movf	adjust_calibration@calibration_label^0,w,c
 10374   0041EE  6ED9               	movwf	fsr2l,c
 10375   0041F0  6ADA               	clrf	fsr2h,c
 10376   0041F2  C004  FFDE         	movff	??_adjust_calibration+2,postinc2
 10377   0041F6  C005  FFDD         	movff	??_adjust_calibration+3,postdec2
 10378   0041FA                     
 10379                           ;calibration.c: 56:                     LATHbits.LATH3 = 1;
 10380   0041FA  8680               	bsf	128,3,c	;volatile
 10381   0041FC                     
 10382                           ;calibration.c: 57:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10383   0041FC  0E11               	movlw	17
 10384   0041FE  6E03               	movwf	(??_adjust_calibration+1)^0,c
 10385   004200  0E3C               	movlw	60
 10386   004202  6E02               	movwf	??_adjust_calibration^0,c
 10387   004204  0ECB               	movlw	203
 10388   004206                     u5337:
 10389   004206  2EE8               	decfsz	wreg,f,c
 10390   004208  D7FE               	bra	u5337
 10391   00420A  2E02               	decfsz	??_adjust_calibration^0,f,c
 10392   00420C  D7FC               	bra	u5337
 10393   00420E  2E03               	decfsz	(??_adjust_calibration+1)^0,f,c
 10394   004210  D7FA               	bra	u5337
 10395   004212  0000               	nop	
 10396   004214                     
 10397                           ;calibration.c: 58:                     LATHbits.LATH3 = 0;
 10398   004214  9680               	bcf	128,3,c	;volatile
 10399   004216  EF69  F020         	goto	l185
 10400   00421A                     l186:
 10401   00421A  EF69  F020         	goto	l185
 10402   00421E                     l195:
 10403   00421E  0012               	return		;funcret
 10404   004220                     __end_of_adjust_calibration:
 10405                           	callstack 0
 10406                           
 10407                           	psect	smallconst
 10408   000E00                     __psmallconst:
 10409                           	callstack 0
 10410   000E00  00                 	db	0
 10411   000E01  00                 	db	0	; dummy byte at the end
 10412   000000                     
 10413                           	psect	rparam
 10414   000000                     
 10415                           	psect	config
 10416                           
 10417                           ;Config register CONFIG1L @ 0x300000
 10418                           ;	External Oscillator mode Selection bits
 10419                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10420                           ;	Power-up default value for COSC bits
 10421                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10422   300000                     	org	3145728
 10423   300000  AA                 	db	170
 10424                           
 10425                           ;Config register CONFIG1H @ 0x300001
 10426                           ;	unspecified, using default values
 10427                           ;	Clock Out Enable bit
 10428                           ;	CLKOUTEN = 0x1, unprogrammed default
 10429                           ;	Clock Switch Enable bit
 10430                           ;	CSWEN = 0x1, unprogrammed default
 10431                           ;	Fail-Safe Clock Monitor Enable bit
 10432                           ;	FCMEN = 0x1, unprogrammed default
 10433   300001                     	org	3145729
 10434   300001  FF                 	db	255
 10435                           
 10436                           ;Config register CONFIG3L @ 0x300004
 10437                           ;	WDT Period Select bits
 10438                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10439                           ;	WDT operating mode
 10440                           ;	WDTE = OFF, WDT Disabled
 10441   300004                     	org	3145732
 10442   300004  9F                 	db	159
 10443                           
 10444                           ;Config register CONFIG3H @ 0x300005
 10445                           ;	unspecified, using default values
 10446                           ;	WDT Window Select bits
 10447                           ;	WDTCWS = 0x7, unprogrammed default
 10448                           ;	WDT input clock selector
 10449                           ;	WDTCCS = 0x7, unprogrammed default
 10450   300005                     	org	3145733
 10451   300005  FF                 	db	255
 10452                           tosu	equ	0xFFF
 10453                           tosh	equ	0xFFE
 10454                           tosl	equ	0xFFD
 10455                           stkptr	equ	0xFFC
 10456                           pclatu	equ	0xFFB
 10457                           pclath	equ	0xFFA
 10458                           pcl	equ	0xFF9
 10459                           tblptru	equ	0xFF8
 10460                           tblptrh	equ	0xFF7
 10461                           tblptrl	equ	0xFF6
 10462                           tablat	equ	0xFF5
 10463                           prodh	equ	0xFF4
 10464                           prodl	equ	0xFF3
 10465                           indf0	equ	0xFEF
 10466                           postinc0	equ	0xFEE
 10467                           postdec0	equ	0xFED
 10468                           preinc0	equ	0xFEC
 10469                           plusw0	equ	0xFEB
 10470                           fsr0h	equ	0xFEA
 10471                           fsr0l	equ	0xFE9
 10472                           wreg	equ	0xFE8
 10473                           indf1	equ	0xFE7
 10474                           postinc1	equ	0xFE6
 10475                           postdec1	equ	0xFE5
 10476                           preinc1	equ	0xFE4
 10477                           plusw1	equ	0xFE3
 10478                           fsr1h	equ	0xFE2
 10479                           fsr1l	equ	0xFE1
 10480                           bsr	equ	0xFE0
 10481                           indf2	equ	0xFDF
 10482                           postinc2	equ	0xFDE
 10483                           postdec2	equ	0xFDD
 10484                           preinc2	equ	0xFDC
 10485                           plusw2	equ	0xFDB
 10486                           fsr2h	equ	0xFDA
 10487                           fsr2l	equ	0xFD9
 10488                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    120     157
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    backward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    calibration_routine@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    calibration_routine@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    calibration_routine@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    maze_return@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    maze_return@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_return@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    maze_search@c	PTR struct calibration_structure size(1) Largest target is 9
		 -> calibration(BANK0[9]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    S551DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    S551DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    switch_calibration@calibration_index	PTR int  size(1) Largest target is 9
		 -> calibration(BANK0[9]), 


Critical Paths under _main in COMRAM

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _maze_return->_backward
    _maze_return->_forward
    _maze_return->_leftTURN
    _maze_return->_rightTURN
    _calibration_routine->_backward
    _calibration_routine->_forward
    _calibration_routine->_leftTURN
    _calibration_routine->_rightTURN
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  139110
                _calibration_routine
                    _initDCmotorsPWM
                        _maze_return
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          7     4      3   75528
                                             93 COMRAM     2     2      0
                                            115 BANK0      5     2      3
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   43948
                                             91 COMRAM     2     0      2
                                             85 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          75    56     19   33673
                                             10 BANK0     75    56     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   11208
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                             33 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _maze_return                                         13    10      3   31753
                                             32 COMRAM    13    10      3
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                  4     1      3   31664
                                             32 COMRAM     4     1      3
                 _adjust_calibration
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
                 _switch_calibration
 ---------------------------------------------------------------------------------
 (2) _switch_calibration                                   3     2      1     652
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                           16    14      2    7551
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                            16    14      2    5727
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                             16    14      2    7247
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _backward                                            16    14      2    8463
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    2437
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     631
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _adjust_calibration                                   5     4      1     696
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration_routine
     _adjust_calibration
     _backward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _forward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _switch_calibration
   _initDCmotorsPWM
   _maze_return
     _backward
     _forward
     _leftTURN
     _rightTURN
   _maze_search
     _backward
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _leftTURN
     _rightTURN
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhl     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     20      0       0      45        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17E      58        0.0%
DATA                 0      0     17E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 11:02:18 2024

                     _color_read_Red 498E                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4A7E                                   l31 4B94  
                                 l40 4A2C                                   l50 4336  
                                 l34 4C90                                   l43 4ACC  
                                 l60 195E                                   l37 49DC  
                                 l70 1A50                                   l62 19B8  
                                 l46 4A7C                                   l80 1E18  
                                 l72 1A60                                   l64 19C8  
                                 l74 1ABA                                   l58 194E  
                                 l76 1ACA                                   l86 1F22  
                                 l87 1F5E                                   l99 1830  
                       ___awdiv@sign 0006                  ___wmul@multiplicand 0003  
                   _color_read_Clear 4A2E                     _color_read_Green 49DE  
                                l105 1838                                  l203 477C  
                                l132 4C22                                  l141 4CB0  
                                l206 35A4                                  l150 4C9C  
                                l135 4C24                                  l312 3B04  
                                l304 3A58                                  l144 4CBA  
                                l153 4B54                                  l218 37D0  
                                l138 4C4A                                  l147 4CA6  
                                l340 3E00                                  l332 3D54  
                                l326 3F7C                                  l318 3ED0  
                                l182 498C                                  l280 4BE6  
                                l185 40D2                                  l186 421A  
                                l290 40D0                                  l354 3C82  
                                l346 3BD6                                  l178 4930  
                                l195 421E                                  l283 4BF8  
                                l189 4146                                  l277 48BA  
                                l198 46D0                                  l199 473A  
                                l561 2450                                  l571 2456  
                                l830 46CE                                  l568 2454  
                                l577 24E2                                  l596 291E  
                                l599 4C70                                  l864 44FA  
                                l858 4826                                  l869 4540  
                                l896 443C                                  wreg 0FE8  
                       ___flmul@aexp 004C                         ___flmul@bexp 004D  
                       ___flmul@sign 0047                         ___flmul@temp 0052  
                       ___flmul@prod 004E           __end_of_adjust_calibration 4220  
                       ___fltol@exp1 000A                                 l1220 309A  
                               l1213 2EA4                                 l1230 31CA  
                               l1222 3112                                 l1223 3100  
                               l1127 2B0E                                 l1144 2C28  
                               l1136 2DDE                                 l1128 2AFC  
                               l3000 2A2C                                 l1217 3208  
                               l1153 2CF8                                 l1129 2AC2  
                               l1090 4926                                 l1154 2CE6  
                               l3010 2A40                                 l3002 2A30  
                               l3100 2C92                                 l3020 2A54  
                               l3012 2A44                                 l3004 2A34  
                               l1181 35A2                                 l1261 38C0  
                               l3110 2CBA                                 l3102 2C96  
                               l3030 2A8E                                 l3022 2A58  
                               l3014 2A48                                 l3006 2A38  
                               l1254 3828                                 l1183 3402  
                               l4000 3B96                                 l1192 3448  
                               l3200 3308                                 l3120 2D14  
                               l3112 2CC8                                 l3104 2CA6  
                               l3040 2AE0                                 l3032 2AAA  
                               l3024 2A5C                                 l3016 2A4C  
                               l3008 2A3C                                 l1097 492E  
                               l1169 4B12                                 l1257 3984  
                               l4010 3BFE                                 l4002 3B9A  
                               l1194 34C0                                 l1186 33C6  
                               l3130 2D7E                                 l3122 2D22  
                               l3114 2CDE                                 l3106 2CA8  
                               l3050 2B2C                                 l3042 2AEE  
                               l3034 2ABA                                 l3018 2A50  
                               l3026 2A60                                 l1195 34AE  
                               l4100 3A54                                 l4020 3C42  
                               l4012 3C14                                 l4004 3BB8  
                               l3220 338A                                 l3212 3340  
                               l3204 331C                                 l3300 2E0C  
                               l3140 2DB8                                 l3132 2D9E  
                               l3124 2D5C                                 l3060 2B6C  
                               l3108 2CB6                                 l3044 2AF0  
                               l3036 2AD0                                 l3028 2A64  
                               l1268 391C                                 l4110 3ABC  
                               l4102 3A80                                 l4030 3CA0  
                               l4022 3C4A                                 l4014 3C1C  
                               l4006 3BC4                                 l3230 33D0  
                               l3222 3392                                 l3214 335A  
                               l3206 332C                                 l3310 2E48  
                               l3302 2E1C                                 l3142 2DBE  
                               l3134 2DA2                                 l3118 2D08  
                               l3126 2D5E                                 l3070 2B96  
                               l3062 2B78                                 l3054 2B40  
                               l3046 2AFA                                 l3038 2ADC  
                               l3150 4C24                                 l4120 3E04  
                               l4112 3AC4                                 l4104 3A96  
                               l4040 3CF8                                 l4032 3CA8  
                               l4016 3C32                                 l4024 3C56  
                               l4008 3BD2                                 l4200 3666  
                               l3240 3428                                 l3232 33EE  
                               l3224 33A2                                 l3216 336A  
                               l3208 332C                                 l3160 3226  
                               l3400 316A                                 l3320 2E7E  
                               l3312 2E4E                                 l3304 2E2C  
                               l3144 2DCC                                 l3136 2DB0  
                               l3128 2D6E                                 l3080 2C08  
                               l3064 2B7C                                 l3056 2B50  
                               l3048 2B1C                                 l3072 2B9C  
                               l3152 4C34                                 l4130 3E4C  
                               l4122 3E1C                                 l4114 3ACC  
                               l4106 3A9E                                 l4050 3D36  
                               l4042 3D00                                 l4034 3CA8  
                               l4026 3C6C                                 l4018 3C3A  
                               l4210 36C0                                 l4202 367E  
                               l3250 3466                                 l3242 342E  
                               l3234 33F0                                 l3226 33B6  
                               l3218 337A                                 l3162 3236  
                               l3170 3260                                 l3154 320A  
                               l3410 31DE                                 l3402 3184  
                               l3322 2E8E                                 l3314 2E5C  
                               l3306 2E32                                 l3146 2DCE  
                               l3138 2DB6                                 l3090 2C62  
                               l3074 2BC2                                 l3082 2C18  
                               l3066 2B8A                                 l3058 2B5E  
                               l4132 3E74                                 l4140 3E94  
                               l4124 3E24                                 l4108 3AB4  
                               l4116 3AD8                                 l4060 3D9A  
                               l4052 3D42                                 l4044 3D08  
                               l4036 3CC4                                 l4028 3C86  
                               l4220 370C                                 l4212 36CA  
                               l4204 3688                                 l3260 34D0  
                               l3252 346A                                 l3244 3438  
                               l3236 3400                                 l3228 33C4  
                               l3180 328C                                 l3172 3270  
                               l3164 3246                                 l3156 3216  
                               l3412 31EC                                 l3404 3198  
                               l3340 2F10                                 l3332 2ED8  
                               l3324 2E94                                 l3316 2E5E  
                               l3308 2E42                                 l3092 2C6C  
                               l3084 2C3E                                 l3076 2BF6  
                               l3068 2B8C                                 l3500 3862  
                               l4300 2052                                 l4150 3F0E  
                               l4142 3EB2                                 l4134 3E7C  
                               l4126 3E24                                 l4118 3AEE  
                               l4062 3DB0                                 l4070 3DD4  
                               l4054 3D50                                 l4046 3D14  
                               l4038 3CD0                                 l4230 3766  
                               l4222 3724                                 l4214 36E2  
                               l4206 36A0                                 l3270 3532  
                               l3262 34DC                                 l3254 3478  
                               l3246 3446                                 l3238 3412  
                               l3182 329C                                 l3190 32C6  
                               l3174 3276                                 l3166 3256  
                               l3158 3224                                 l3430 47AC  
                               l3414 31EE                                 l3406 31B2  
                               l3350 2F5A                                 l3342 2F28  
                               l3334 2EE4                                 l3326 2EB4  
                               l3318 2E6E                                 l3094 2C7A  
                               l3086 2C4E                                 l3078 2BF8  
                               l3422 4ACE                                 l3510 38B6  
                               l3502 386A                                 l4310 20B2  
                               l4302 206E                                 l4160 3F44  
                               l4152 3F16                                 l4144 3EBE  
                               l4136 3E84                                 l4128 3E40  
                               l4080 39AC                                 l4072 3DEA  
                               l4064 3DB8                                 l4056 3D7C  
                               l4048 3D18                                 l4240 37B0  
                               l4232 376E                                 l4224 372C  
                               l4216 36EA                                 l4208 36A8  
                               l3600 4538                                 l3280 3590  
                               l3272 3548                                 l3264 34EA  
                               l3256 34A6                                 l3248 3458  
                               l3192 32D6                                 l3184 32AC  
                               l3176 327C                                 l3168 3258  
                               l3440 4824                                 l3432 47BC  
                               l3408 31CE                                 l3416 31F4  
                               l3360 2FB0                                 l3352 2F6A  
                               l3344 2F34                                 l3336 2EEE  
                               l3328 2EC4                                 l3096 2C7C  
                               l3424 4ADE                                 l3520 392C  
                               l3512 38F2                                 l3504 3876  
                               l4320 20F0                                 l4312 20B4  
                               l4304 208A                                 l3610 48D6  
                               l4154 3F2C                                 l4162 3F50  
                               l4146 3ECC                                 l4138 3E90  
                               l4090 3A0C                                 l4082 39C8  
                               l4074 3988                                 l4066 3DC0  
                               l4058 3D92                                 l4242 37C6  
                               l4234 3786                                 l4226 3744  
                               l4218 3702                                 l4250 4862  
                               l4410 24B0                                 l4402 245E  
                               l3602 453E                                 l3282 3596  
                               l3274 3562                                 l3266 3514  
                               l3194 32EC                                 l3186 32BC  
                               l3178 328A                                 l3434 47EA  
                               l3418 31F8                                 l3370 3054  
                               l3362 2FCC                                 l3354 2F76  
                               l3346 2F40                                 l3338 2F04  
                               l3098 2C8A                                 l3450 4362  
                               l3530 3974                                 l3522 3930  
                               l3514 38FE                                 l3506 38A8  
                               l4330 214C                                 l4314 20C6  
                               l4322 210E                                 l4306 209C  
                               l4170 4964                                 l3620 4910  
                               l3612 48DE                                 l4164 3F66  
                               l4156 3F34                                 l4148 3EF8  
                               l4092 3A18                                 l4084 39D4  
                               l4076 39A4                                 l4068 3DC8  
                               l4236 3790                                 l4228 374E  
                               l4180 35C2                                 l4260 489E  
                               l4252 4886                                 l4244 4828  
                               l4420 256C                                 l4412 24B4  
                               l4404 247A                                 l3284 3598  
                               l3276 357E                                 l3268 3518  
                               l3196 32FC                                 l3188 32BE  
                               l3436 47FA                                 l3428 477E  
                               l3380 30AA                                 l3372 3062  
                               l3364 2FD8                                 l3356 2F86  
                               l3348 2F4E                                 l3292 2DE0  
                               l3460 43B0                                 l3452 438C  
                               l3444 4338                                 l3524 3954  
                               l3516 390C                                 l3508 38AA  
                               l3700 1C7E                                 l3540 4C98  
                               l4340 21A8                                 l4324 2122  
                               l4332 216A                                 l4316 20D6  
                               l4308 20AE                                 l4172 4972  
                               l4500 455E                                 l3622 4918  
                               l3614 48E6                                 l3606 48BC  
                               l4158 3F3C                                 l4086 39FC  
                               l4094 3A1C                                 l4078 39AC  
                               l4238 37A8                                 l4190 361C  
                               l4182 35DA                                 l4270 48B8  
                               l4262 48A8                                 l4254 4890  
                               l4246 4838                                 l4430 271C  
                               l4422 25B8                                 l4406 248C  
                               l4414 24E6                                 l3278 3582  
                               l3198 3304                                 l3438 481E  
                               l3382 30B8                                 l3374 3080  
                               l3366 2FF4                                 l3358 2FA0  
                               l3294 2DEC                                 l3470 43DC  
                               l3454 438E                                 l3446 434E  
                               l3526 3964                                 l3518 392A  
                               l3702 1CD6                                 l3710 1E18  
                               l3550 4B16                                 l3534 4CA8  
                               l3542 4C9E                                 l3630 4C04  
                               l4350 2228                                 l4342 21C2  
                               l4334 217E                                 l4326 2132  
                               l4318 20D8                                 l4174 498A  
                               l4166 4932                                 l4510 4576  
                               l4502 4560                                 l3624 491A  
                               l3616 48F4                                 l3608 48C4  
                               l4096 3A3A                                 l4088 3A04  
                               l4192 3624                                 l4184 35E2  
                               l4176 35A4                                 l4264 48AA  
                               l4256 4892                                 l4248 485E  
                               l4440 2886                                 l4432 273A  
                               l4424 25D6                                 l4416 2502  
                               l4408 2498                                 l3392 3122  
                               l3384 30BC                                 l3376 308A  
                               l3368 301E                                 l3296 2DFA  
                               l3480 440C                                 l3456 439E  
                               l3528 3972                                 l3720 1EC2  
                               l3712 1E28                                 l3704 1D32  
                               l3560 4B52                                 l3552 4B1A  
                               l3536 4CAC                                 l3544 4CA2  
                               l3632 4C0A                                 l3640 4C74  
                               l3800 4B8A                                 l4352 2238  
                               l4360 228A                                 l4344 21DC  
                               l4336 218E                                 l4328 2134  
                               l4280 1F80                                 l4272 1F60  
                               l4168 494A                                 l4520 4592  
                               l4512 457E                                 l4504 4566  
                               l3722 4BCC                                 l3626 4920  
                               l3618 48FA                                 l3730 3F98  
                               l4098 3A46                                 l4194 363C  
                               l4186 35FA                                 l4178 35BA  
                               l4266 48B4                                 l4258 489C  
                               l4434 27FE                                 l4426 263A  
                               l4418 254E                                 l4442 28CE  
                               l3394 312E                                 l3386 30CA  
                               l3378 3098                                 l3298 2DFC  
                               l3482 441C                                 l3466 43C8  
                               l3458 43A2                                 l3490 37E4  
                               l3570 4266                                 l3714 1E5C  
                               l3706 1D64                                 l3554 4B22  
                               l3546 4CB2                                 l3538 4C94  
                               l3650 4A24                                 l3642 498E  
                               l3810 0E02                                 l3634 4C0C  
                               l3802 4B8C                                 l4370 22E2  
                               l4362 229E                                 l4354 223A  
                               l4346 21F6                                 l4338 2190  
                               l4290 1FAE                                 l4282 1F9A  
                               l4274 1F64                                 l4530 45B2  
                               l4522 459A                                 l4514 4586  
                               l4506 456A                                 l3724 4BD0  
                               l3580 4C68                                 l3740 4054  
                               l3732 3FE6                                 l4196 3646  
                               l4188 3604                                 l4268 48B6  
                               l4452 28F0                                 l4444 28D4  
                               l4436 281C                                 l4428 2658  
                               l3396 313C                                 l3388 30F8  
                               l3484 442C                                 l3476 43F0  
                               l3468 43D2                                 l3492 37F2  
                               l3572 42B6                                 l3564 4220  
                               l3716 1E74                                 l3708 1DBC  
                               l3556 4B2A                                 l3548 4CB6  
                               l3660 4A2E                                 l3644 49D4  
                               l3900 1652                                 l3820 0F5A  
                               l3812 0E9A                                 l3636 4C0E  
                               l3628 4BFA                                 l3804 4B8E  
                               l4380 233E                                 l4364 22AE  
                               l4372 2300                                 l4356 2252  
                               l4348 2214                                 l4292 1FC0  
                               l4284 1F9E                                 l4276 1F7C  
                               l4540 45C6                                 l4532 45B6  
                               l4524 45A2                                 l4516 458A  
                               l4508 456E                                 l3750 4626  
                               l3726 4BE0                                 l3742 4094  
                               l3734 3FF8                                 l4198 365E  
                               l4454 28FE                                 l4446 28E2  
                               l4438 2868                                 l3590 44AA  
                               l3398 3166                                 l2950 292C  
                               l3478 43FC                                 l3494 3838  
                               l3574 4326                                 l3566 4252  
                               l3718 1EA6                                 l3670 193A  
                               l3558 4B50                                 l3654 4A7E  
                               l3662 4A74                                 l3910 1728  
                               l3902 1684                                 l3822 0F8C  
                               l3830 1030                                 l3814 0EEC  
                               l3638 4C10                                 l3806 4B90  
                               l4390 239A                                 l4374 2314  
                               l4382 235C                                 l4366 22B0  
                               l4358 226C                                 l4294 2026  
                               l4286 1FAA                                 l4278 1F7E  
                               l4550 45F4                                 l4542 45CA  
                               l4534 45BA                                 l4526 45AA  
                               l4518 458E                                 l3760 464C  
                               l3752 462A                                 l3744 460C  
                               l3736 3FFC                                 l3728 3F7E  
                               l4456 2902                                 l3592 44BA  
                               l3584 443E                                 l2960 296C  
                               l2952 293A                                 l3496 384E  
                               l3488 37D4                                 l3680 1A3C  
                               l3672 1972                                 l3656 4AC4  
                               l3648 49DE                                 l3920 1822  
                               l3912 175A                                 l3904 16B6  
                               l3840 112A                                 l3832 1062  
                               l3824 0FBE                                 l3816 0EF6  
                               l3808 4B92                                 l4384 2370  
                               l4392 23B8                                 l4376 2324  
                               l4368 22C8                                 l4296 2034  
                               l4288 1FAC                                 l4544 45CE  
                               l4536 45BE                                 l4528 45AE  
                               l3930 4106                                 l3770 4682  
                               l3762 465E                                 l3754 4638  
                               l3746 4610                                 l3578 4C4C  
                               l3738 403A                                 l3594 44C8  
                               l3586 446C                                 l2970 299E  
                               l2962 296E                                 l2954 293C  
                               l3690 1B56                                 l3682 1A74  
                               l3674 19A4                                 l3666 183A  
                               l3914 178C                                 l3906 16E8  
                               l3850 1200                                 l3842 115C  
                               l3834 1094                                 l3922 1830  
                               l3826 0FF0                                 l3818 0F28  
                               l4394 23CC                                 l4386 2380  
                               l4378 2326                                 l4298 204C  
                               l4546 45D2                                 l4538 45C2  
                               l4490 4552                                 l4482 4542  
                               l3940 4140                                 l3932 4114  
                               l3772 4698                                 l3764 4666  
                               l3780 46AE                                 l3756 4640  
                               l3748 461E                                 l4396 2456  
                               l3596 44DA                                 l3588 447C  
                               l2980 29C6                                 l2972 29A0  
                               l2956 294C                                 l2964 2976  
                               l2948 2920                                 l3692 1B88  
                               l3684 1AA6                                 l3676 19D8  
                               l3668 1908                                 l3916 17BE  
                               l3908 16F6                                 l3860 12D6  
                               l3852 120E                                 l3836 10C6  
                               l3844 116A                                 l3828 1022  
                               l4388 2382                                 l4548 45E2  
                               l4492 4554                                 l4484 4542  
                               l3950 4192                                 l3934 4122  
                               l3926 40E0                                 l3782 46BE  
                               l3774 46A0                                 l3766 466E  
                               l3758 4644                                 l3598 44E8  
                               l2990 2A00                                 l2982 29D6  
                               l2974 29A6                                 l2966 2986  
                               l2958 295C                                 l3694 1BE0  
                               l3686 1ADA                                 l3678 1A0A  
                               l3918 17F0                                 l3870 13AC  
                               l3862 1308                                 l3854 1240  
                               l3846 119C                                 l3838 10F8  
                               l3790 4B5A                                 l4494 4556  
                               l4486 454E                                 l3960 41FA  
                               l3952 41AA                                 l3944 4154  
                               l3936 4126                                 l3928 40EE  
                               l3784 46C6                                 l3776 46A2  
                               l3768 467C                                 l2992 2A12  
                               l2984 29E6                                 l2976 29B4  
                               l2968 298C                                 l3696 1C14  
                               l3688 1B40                                 l3872 13DE  
                               l3880 1482                                 l3864 133A  
                               l3856 1272                                 l3848 11CE  
                               l3792 4B64                                 l4496 4558  
                               l4488 4550                                 l3962 41FC  
                               l3946 416C                                 l3954 41AC  
                               l3938 413E                                 l3778 46A8  
                               l3970 471A                                 l2994 2A20  
                               l2986 29E8                                 l2978 29B6  
                               l3698 1C4C                                 l3890 157C  
                               l3882 14B4                                 l3874 1410  
                               l3858 12A4                                 l3866 1348  
                               l3794 4B74                                 l4498 455C  
                               l3964 4214                                 l3956 41BA  
                               l3948 4190                                 l3980 477A  
                               l3972 471C                                 l2996 2A24  
                               l2988 29F0                                 l3892 15AE  
                               l3884 14E6                                 l3876 1442  
                               l3868 137A                                 l3796 4B7E  
                               l3788 4B56                                 l3958 41D2  
                               l3990 3B46                                 l3982 3B08  
                               l3974 4734                                 l3966 46DE  
                               l2998 2A28                                 l3886 1518  
                               l3894 15BC                                 l3878 1474  
                               l3798 4B88                                 l3992 3B52  
                               l3984 3B22                                 l3976 4748  
                               l3968 46F6                                 l3896 15EE  
                               l3888 154A                                 l3994 3B7A  
                               l3986 3B2A                                 l3978 4760  
                               l3898 1620                                 l3996 3B82  
                               l3988 3B2A                                 l3998 3B8A  
                               u3000 3224                                 u3001 3220  
                               u3010 3236                                 u3011 3232  
                               u3100 33EE                                 u3020 3246  
                               u3101 33EA                                 u3021 3242  
                               u3110 3412                                 u3030 328A  
                               u3111 340E                                 u3031 3286  
                               u3200 3532                                 u3120 3428  
                               u3040 329C                                 u4000 1062  
                       _BAUD4CONbits 0EE9                                 u3201 352E  
                               u3121 3424                                 u3041 3298  
                               u4001 105E                                 u3210 3562  
                               u3130 3446                                 u3050 32AC  
                               u4010 1094                                 u3211 355E  
                               u3131 3442                                 u3051 32A8  
                               u4011 1090                                 u3220 3590  
                               u3140 3466                                 u3060 32EC  
                               u3300 2EC4                                 u4100 1272  
                               u4020 10C6                                 u3221 358C  
                               u3141 3462                                 u3061 32E8  
                               u3301 2EC0                                 u4101 126E  
                               u4021 10C2                                 u3150 3478  
                               u3070 332C                                 u3310 303E  
                               u3230 2DFA                                 u4110 12A4  
                               u4030 10F8                                 u3151 3474  
                               u3071 3328                                 u3231 2DF6  
                               u4111 12A0                                 u4031 10F4  
                               u5000 2886                                 u3160 34A6  
                               u3080 33A2                                 u3400 31B2  
                               u3320 3098                                 u3240 2E0C  
                               u2600 294C                                 u4200 1474  
                               u4120 12D6                                 u4040 112A  
                               u5001 2882                                 u3161 34A2  
                               u3081 339E                                 u3401 31AE  
                               u3321 3094                                 u3241 2E08  
                               u2601 2948                                 u4201 1470  
                               u4121 12D2                                 u4041 1126  
                               u5010 28E2                                 u3170 34BC  
                               u3090 33C4                                 u3410 31EC  
                               u3330 30B8                                 u3250 2E1C  
                               u2610 295C                                 u4210 14B4  
                               u4130 1308                                 u4050 115C  
                               _T2PR 0FBC                                 u5011 28DE  
                               u3171 34B8                                 u3091 33C0  
                               u3411 31E8                                 u3331 30B4  
                               u3315 3034                                 u3251 2E18  
                               u2611 2958                                 u4211 14B0  
                               u4131 1304                                 u4051 1158  
                               u5020 291E                                 u3180 34D0  
                               u3420 47AC                                 u3340 30CA  
                               u3260 2E5C                                 u2700 2AA8  
                               u2620 299E                                 u3500 440C  
                               u4300 1684                                 u4220 14E6  
                               u4140 133A                                 u4060 119C  
                               u5021 291A                                 u3181 34CC  
                               u3421 47A8                                 u3341 30C6  
                               u3261 2E58                                 u2621 299A  
                               u3501 4408                                 u4301 1680  
                               u4221 14E2                                 u4141 1336  
                               u4061 1198                                 u3190 34EA  
                               u3430 47EA                                 u3350 30F8  
                               u3270 2E6E                                 u2710 2AD0  
                               u2630 29B4                                 u3510 441C  
                               u4310 16B6                                 u4230 1518  
                               u4150 137A                                 u4070 11CE  
                               u3191 34E6                                 u3431 47E6  
                               u3351 30F4                                 u3271 2E6A  
                               u2711 2ACC                                 u2631 29B0  
                               u3511 4418                                 u4311 16B2  
                               u4231 1514                                 u4151 1376  
                               u4071 11CA                                 u4400 40EE  
                               u3440 481E                                 u3360 310E  
                               u3280 2E7E                                 u2800 2C08  
                               u2720 2AEE                                 u2640 29C6  
                               u3600 3964                                 u3520 37E4  
                               u4320 16E8                                 u4240 154A  
                               u4160 13AC                                 u4080 1200  
                               u4401 40EA                                 u3441 481A  
                               u3361 310A                                 u3281 2E7A  
                               u2801 2C04                                 u2721 2AEA  
                               u2641 29C2                                 u3601 3960  
                               u3521 37E0                                 u4321 16E4  
                               u4241 1546                                 u4161 13A8  
                               u4081 11FC                                 u4410 4114  
                               u3370 3122                                 u3290 2EB4  
                               u2810 2C3E                                 u2730 2B0E  
                               u2650 29D6                                 u3450 434E  
                               u3610 3972                                 u3530 37F2  
                               u4330 1728                                 u4250 157C  
                               u4170 13DE                                 u4090 1240  
                               u4411 4110                                 u3371 311E  
                               u3291 2EB0                                 u2811 2C3A  
                               u2731 2B0A                                 u2651 29D2  
                               u3451 434A                                 u3611 396E  
                               u3531 37EE                                 u4331 1724  
                               u4251 1578                                 u4171 13DA  
                               u4091 123C                                 u4420 4122  
                               u3700 48D6                                 u4500 3C32  
                               u3380 313C                                 u2900 2D08  
                               u2820 2C4E                                 u2740 2B1C  
                               u2660 2A12                                 u3460 4382  
                               u3540 384E                                 u3620 4B3E  
                               u4340 175A                                 u4260 15AE  
                               u4180 1410                                 u4421 411E  
                               u3701 48D2                                 u4501 3C2E  
                               u3381 3138                                 u2901 2D04  
                               u2821 2C4A                                 u2741 2B18  
                               u2661 2A0E                                 u3541 384A  
                               u3621 4B36                                 u4341 1756  
                               u4261 15AA                                 u4181 140C  
                               u4430 4154                                 u3710 48F4  
                               u4510 3C6C                                 u3390 3184  
                               u2910 2D22                                 u2830 2C7A  
                               u2750 2B2C                                 u2670 2A20  
                               u2590 293A                                 u3470 43B0  
                               u3550 38A4                                 u4350 178C  
                               u4270 15EE                                 u4190 1442  
                               u4431 4150                                 u3711 48F0  
                               u4511 3C68                                 u5207 4726  
                               u3391 3180                                 u2911 2D1E  
                               u2831 2C76                                 u2751 2B28  
                               u2671 2A1C                                 u2591 2936  
                               u3471 43AC                                 u3551 38A0  
                               u4351 1788                                 u4271 15EA  
                               u4191 143E                                 u4440 41BA  
                               u3720 4910                                 u4600 3A7C  
                               u4520 3C82                                 u2920 2D5C  
                               u2840 2C8A                                 u2760 2B5E  
                               u2680 2A8E                                 u3480 43C4  
                               u3560 38EE                                 u3640 4252  
                               u3800 1B88                                 u4360 17BE  
                               u4280 1620                                 u4441 41B6  
                               u3721 490C                                 u4601 3A78  
                               u4521 3C7E                                 u5217 4752  
                               u2921 2D58                                 u2841 2C86  
                               u2761 2B5A                                 u2681 2A8A  
                               u3481 43C0                                 u3465 4378  
                               u3561 38EA                                 u3641 424E  
                               u3801 1B84                                 u4361 17BA  
                               u4281 161C                                 u4610 3A96  
                               u4530 3D36                                 u4450 46DE  
                               u3650 446C                                 u2930 2D6E  
                               u2850 2CA6                                 u2770 2B6C  
                               u2690 2AA6                                 u3490 43EC  
                               u3570 390C                                 u3810 1C7E  
                               u3730 1908                                 u4370 17F0  
                               u4290 1652                                 u5307 415E  
                               u4611 3A92                                 u4531 3D32  
                               u5227 476C                                 u4451 46DA  
                               u3651 4468                                 u2931 2D6A  
                               u2851 2CA2                                 u2771 2B68  
                               u2691 2AA0                                 u3491 43E8  
                               u3571 3908                                 u3811 1C7A  
                               u3731 1904                                 u4371 17EC  
                               u4291 164E                                 u5147 493C  
                               u3900 465E                                 u4700 3F7C  
                               u4620 3AB4                                 u4540 3D78  
                               u4460 4748                                 u3660 44AA  
                               u2940 2D7E                                 u2860 2CB6  
                               u2780 2B8A                                 u3580 391C  
                               u3820 1D64                                 u3740 193A  
                               u4380 1822                                 u5317 419C  
                               u3901 465A                                 u4701 3F78  
                               u4621 3AB0                                 u4541 3D74  
                               u5237 3BCA                                 u4461 4744  
                               u3661 44A6                                 u2941 2D7A  
                               u2861 2CB2                                 u2781 2B86  
                               u3581 3918                                 u3821 1D60  
                               u3741 1936                                 u4381 181E  
                               u5157 4956                                 u4390 40E0  
                               u3910 467C                                 u4630 3AEE  
                               u4550 3D92                                 u4470 3BB8  
                               u3670 44C8                                 u2950 2D9E  
                               u2870 2CC8                                 u2790 2BC2  
                               u3590 392A                                 u3830 1E28  
                               u3750 19A4                                 u3638 4B40  
                               u4710 4972                                 u5327 41C4  
                               u4391 40DC                                 u3911 4678  
                               u4631 3AEA                                 u4551 3D8E  
                               u5247 3D48                                 u4471 3BB4  
                               u3671 44C4                                 u2951 2D9A  
                               u2871 2CC4                                 u2791 2BBE  
                               u3591 3926                                 u3831 1E24  
                               u3751 19A0                                 u5167 497C  
                               u4711 496E                                 u3920 4698  
                               u4640 3B04                                 u4560 3DB0  
                               u4480 3BFA                                 u4800 37C6  
                               u4720 35BA                                 u3680 44E8  
                               u2960 2DB0                                 u2880 2CDE  
                               u3840 1EA6                                 u3760 1A0A  
                               u5337 4206                                 u3921 4694  
                               u4641 3B00                                 u5257 3A4C  
                               u4561 3DAC                                 u4481 3BF6  
                               u4801 37C2                                 u4721 35B6  
                               u3681 44E4                                 u2961 2DAC  
                               u2881 2CDA                                 u3841 1EA2  
                               u3761 1A06                                 u5177 1F6E  
                               u3930 46BE                                 u3850 4BF8  
                               u4650 3EB2                                 u4570 3DEA  
                               u4490 3C14                                 u4730 35FA  
                               u3690 4538                                 u2970 2DCC  
                               u2890 2CF4                                 u3770 1A3C  
                               u4810 1FC0                                 u3931 46BA  
                               u3851 4BF4                                 u5267 3EC4  
                               u4651 3EAE                                 u4571 3DE6  
                               u4491 3C10                                 u4731 35F6  
                               u3691 4534                                 u2971 2DC8  
                               u2891 2CF0                                 u3771 1A38  
                               u5187 4B6A                                 u4811 1FBC  
                               u3860 3F98                                 u4660 3EF4  
                               u4580 3E00                                 u4740 363C  
                               u3780 1AA6                                 u2980 4C34  
                               u3940 0F28                                 u4900 2370  
                               u4820 206E                                 u5277 4BD6  
                               u3861 3F94                                 u4661 3EF0  
                               u4581 3DFC                                 u5197 46E8  
                               u4741 3638                                 u3781 1AA2  
                               u2981 4C30                                 u3941 0F24  
                               u4901 236C                                 u4821 206A  
                               u3870 4054                                 u4670 3F0E  
                               u4590 3A3A                                 u4750 367E  
                               u3790 1B40                                 u2990 4C4A  
                               u3950 0F5A                                 u4910 23CC  
                               u4830 209C                                 u5287 40F8  
                               u3871 4050                                 u4671 3F0A  
                               u4591 3A36                                 u4751 367A  
                               u3791 1B3C                                 u2991 4C46  
                               u3951 0F56                                 u4911 23C8  
                               u4831 2098                                 u3880 461E  
                               u4680 3F2C                                 u4760 36C0  
                               u4920 247A                                 u3960 0F8C  
                               u4840 20C6                                 u5297 4130  
                               u3881 461A                                 u4681 3F28  
                               u4761 36BC                                 u4921 2476  
                               u3961 0F88                                 u4841 20C2  
                               u3890 4638                                 u4690 3F66  
                               u4770 3702                                 u4930 24DE  
                               u3970 0FBE                                 u4850 2122  
                               u3891 4634                                 u4691 3F62  
                               u4771 36FE                                 u4931 24DA  
                               u3971 0FBA                                 u4851 211E  
                               u4780 3744                                 u4940 2502  
                               u3980 0FF0                                 u4860 217E  
                               u4781 3740                                 u4941 24FE  
                               u3981 0FEC                                 u4861 217A  
                               u4790 3786                                 u4950 256C  
                               u3990 1022                                 u4870 2228  
                               u4791 3782                                 u4951 2568  
                               u3991 101E                                 u4871 2224  
                               u4960 25D6                                 u4880 229E  
                               u4961 25D2                                 u4881 229A  
                               u4970 2658                                 u4890 2314  
                               u4971 2654                                 u4891 2310  
                               u4980 273A                                 u4981 2736  
                               u4990 281C                                 u4991 2818  
                               _main 4542                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                    ___fldiv@new_exp 0033               __end_of_color_read_Red 49DE  
                       ___param_bank 0000              __end_of_color_cardCheck 183A  
            _forward_reset_threshold 00FB                        ___fltol@sign1 0009  
                    __end_of___fladd 2DE0                                ?_main 0001  
                    __end_of___fldiv 35A4                      __end_of___awdiv 46D0  
                    __end_of___flmul 320A                      __end_of___flsub 4B14  
                    __end_of___fltol 443E                      ___awdiv@divisor 0003  
                        ?_RGB_to_HSV 006A                      __end_of___lwdiv 4930  
                    ___awdiv@counter 0005                         ?_maze_search 00D3  
                       ?_maze_return 0021           __end_of_I2C_2_Master_Start 4CB2  
         __end_of_I2C_2_Master_Write 4C9E                      __end_of_forward 3B06  
                              tablat 0FF5                                status 0FD8  
            __end_of_color_read_Blue 4ACE                _I2C_2_Master_RepStart 4CB2  
                 _switch_calibration 46D0                      ?_color_read_Red 0005  
                    __initialization 4B96                         __end_of_main 460C  
                ?_switch_calibration 0001                               ??_main 0060  
                      _Forward_Count 00DA                        __activetblptr 0000  
                       ?_setMotorPWM 000E                               _CCPR1H 0FAA  
                             _CCPR2H 0FA6                               _CCPR3H 0F25  
                             _CCPR4H 0F21                     ___awdiv@dividend 0001  
               ??_switch_calibration 0002                               _RC0PPS 0E62  
                             _RC4REG 0EE3                               _RE2PPS 0E74  
                             _RD5PPS 0E6F                               _RC7PPS 0E69  
                             _RE4PPS 0E76                               _RD6PPS 0E70  
                             _RG6PPS 0E88                     __end_of_backward 3F7E  
           __end_of_color_click_init 4B96                               _RX4PPS 0E15  
                   forward@max_power 001D                               _TX4REG 0EE4  
                   __end_of___xxtofl 3986                         _CCPTMRS0bits 0FAD  
                        _Color_Value 00D8                               ___flge 443E  
                             ___fleq 477E                     ?_color_cardCheck 005C  
                   __end_of_leftTURN 3E02                            ??___fladd 0009  
                             ___wmul 4C4C                            ??___fldiv 002A  
                          ??___awdiv 0005                            ??___flmul 0043  
                          ??___flsub 0022                            ??___fltol 0005  
                          ??___lwdiv 000B        delay_ms_function@milliseconds 0001  
                             _length 00FC                               clear_0 4BB4  
                             clear_1 4BC0                     ___awdiv@quotient 0007  
                             _motorL 00F2                               _motorR 00E9  
                             isa$std 0001                            ??_forward 0015  
      rightTURN@rotation_calibration 0018                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                      _Operation_Count 00DB  
                  ??_initDCmotorsPWM 0003                           ___flge@ff1 0001  
                         ___flge@ff2 0005                         ___xxtofl@arg 0016  
                       ___xxtofl@exp 0015                         ___xxtofl@val 000C  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 4BC6  
           __end_of_color_read_Clear 4A7E             __end_of_color_read_Green 4A2E  
             ?_I2C_2_Master_RepStart 0001                        ___rparam_used 0001  
                         ___fltol@f1 0001                     ?_color_read_Blue 0005  
                     __pcstackCOMRAM 0001                         __pidataBANK0 4CBC  
                  forward@delay_time 001F                       _RGB_to_HSV$320 0091  
                     _RGB_to_HSV$321 0095                       _RGB_to_HSV$317 0085  
                     _RGB_to_HSV$318 0089                   RGB_to_HSV@deltaRGB 00A1  
              calibration_routine@mL 0022                calibration_routine@mR 0023  
                         __pbssBANK0 00D8                           __pbssBANK1 0100  
                  _color_writetoaddr 4C72                         _T2CLKCONbits 0FBF  
                 _adjust_calibration 40D2                              ?___flge 0001  
                            ?___fleq 0001                   ?_color_writetoaddr 0003  
                            ?___wmul 0001                   backward@delay_time 001F  
                ?_adjust_calibration 0001                  ??_color_writetoaddr 0004  
                          ?_backward 0013                         ??_RGB_to_HSV 005C  
                  _delay_ms_function 4BCC                           backward@mL 0013  
                         backward@mR 0014                            ?___xxtofl 000C  
                 ?_delay_ms_function 0001                              _SP4BRGH 0EE6  
                            _SP4BRGL 0EE5                              _SSP2ADD 0ED6  
                            _SSP2BUF 0ED5                          rightTURN@mL 0013  
                        rightTURN@mR 0014                            ?_leftTURN 0013  
                ??_delay_ms_function 0003                 ??_adjust_calibration 0002  
             color_writetoaddr@value 0003                     ??_color_read_Red 0007  
          __end_of_color_writetoaddr 4C92                          RGB_to_HSV@B 0072  
                        RGB_to_HSV@C 0076                          RGB_to_HSV@G 006E  
                        RGB_to_HSV@H 007A                          RGB_to_HSV@R 006A  
                        RGB_to_HSV@S 007B                          RGB_to_HSV@V 007C  
                        RGB_to_HSV@b 00B1                          RGB_to_HSV@g 00AD  
                 _I2C_2_Master_Start 4CA8                          RGB_to_HSV@r 00A9  
                 _I2C_2_Master_Write 4C92                              __Hparam 0000  
                 __end_of_RGB_to_HSV 1F60                              __Lparam 0000  
                  color_read_Red@tmp 000A                              ___fladd 2920  
                            ___fldiv 320A                              ___awdiv 460C  
                            ___flmul 2DE0                              ___flsub 4ACE  
                            ___fltol 4338                  ?_I2C_2_Master_Start 0001  
                            ___lwdiv 48BC                  ?_I2C_2_Master_Write 0001  
                       __psmallconst 0E00            __end_of_delay_ms_function 4BFA  
                            __pcinit 4B96                              __ramtop 0E00  
                            __ptext0 4542                              __ptext1 4930  
                            __ptext2 1F60                              __ptext3 4B56  
                            __ptext4 4C72                              __ptext5 4BFA  
                            __ptext6 0E02                              __ptext7 498E  
                            __ptext8 49DE                              __ptext9 4A2E  
                         ??_backward 0015                            _T2CONbits 0FBD  
                            _forward 3986                           ??___xxtofl 0010  
                          _T2HLTbits 0FBE                        _RxBufWriteCnt 00DF  
               ??_I2C_2_Master_Start 0002                 ??_I2C_2_Master_Write 0002  
                       maze_search@c 00D3                         maze_search@i 00D6  
               end_of_initialization 4BC6                           ??_leftTURN 0015  
                  __end_of_rightTURN 3C84              _pause_until_RF2_pressed 4930  
                 leftTURN@delay_time 001F                    ?_color_click_init 0001  
                       maze_return@c 0021                         maze_return@i 002C  
                       maze_return@j 0027                   ??_color_click_init 0005  
           maze_return@distance_back 0029                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                    _initDCmotorsPWM 4828                            _PORTFbits 0F8E  
                 setMotorPWM@negDuty 0012                          ___fladd@grs 0010  
                      ___xxtofl@sign 0014                            _TRISAbits 0F81  
                 setMotorPWM@posDuty 0011                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 0001  
switch_calibration@calibration_index 0001                          ___fldiv@grs 0035  
                        ___fldiv@rem 002E             color_writetoaddr@address 0004  
            ??_I2C_2_Master_RepStart 0002                          ___flmul@grs 0048  
                        _CCP1CONbits 0FAB                  _calibration_routine 35A4  
                  ?_color_read_Clear 0005                         _EUSART4RXbuf 016E  
                       _EUSART4TXbuf 0100                          _CCP2CONbits 0FA7  
                  ?_color_read_Green 0005                          _CCP3CONbits 0F26  
        forward@Distance_Calibration 0018                          _CCP4CONbits 0F22  
                 ??_color_read_Clear 0007                   ??_color_read_Green 0007  
                 rightTURN@max_power 001D                    maze_return@i_2039 002A  
                         leftTURN@mL 0013                           leftTURN@mR 0014  
         __end_of_custom_floatmodulo 4338                       __end_of___flge 4542  
                     __end_of___fleq 4828                       __end_of___wmul 4C72  
          color_cardCheck@card_color 00C5                 ?_calibration_routine 0021  
                   RGB_to_HSV@H_temp 009D                  color_read_Clear@tmp 000A  
                start_initialization 4B96                        _TxBufWriteCnt 00DD  
       leftTURN@rotation_calibration 0018            ??_pause_until_RF2_pressed 0001  
                   RGB_to_HSV@maxRGB 00A5                     RGB_to_HSV@minRGB 008D  
                    _RGB_to_HSV$2715 007D                      _RGB_to_HSV$2716 0081  
                    _RGB_to_HSV$2717 0099                  color_read_Green@tmp 000A  
            __end_of_initDCmotorsPWM 48BC                             ??___flge 0009  
                           ??___fleq 0009                             ??___wmul 0005  
                custom_floatmodulo@x 0054                  custom_floatmodulo@y 0058  
                        __pdataBANK0 00FB                          _calibration 00E0  
              ??_calibration_routine 0024                            ___fladd@a 0005  
                          ___fladd@b 0001                        ??_maze_search 005E  
       backward@Distance_Calibration 0018                            ___fldiv@a 0026  
                          ___fldiv@b 0022                        ??_maze_return 0024  
                          ___flmul@a 003F                            ___flmul@b 003B  
                          ___flsub@a 001E                            ___flsub@b 001A  
                      __pcstackBANK0 0060                 calibration_routine@c 0021  
          custom_floatmodulo@intPart 0068                     ___lwdiv@dividend 0007  
    __end_of_pause_until_RF2_pressed 498E                             ?___fladd 0001  
                           ?___fldiv 0022                             ?___awdiv 0001  
                           ?___flmul 003B                             ?___flsub 001A  
                           ?___fltol 0001                             ?___lwdiv 0007  
                          backward@i 0019                            backward@j 001B  
                         rightTURN@i 0019                           rightTURN@j 001B  
               I2C_2_Master_Read@ack 0003                 I2C_2_Master_Read@tmp 0004  
                        __smallconst 0E00                             ?_forward 0013  
                  _I2C_2_Master_Idle 4C24                    _I2C_2_Master_Init 4BFA  
                  _I2C_2_Master_Read 4B14                    _I2C_2_Master_Stop 4C9E  
                       _RxBufReadCnt 00DE                   ?_I2C_2_Master_Idle 0001  
                 ?_I2C_2_Master_Init 0001                   ?_I2C_2_Master_Read 0001  
                      ??_setMotorPWM 000F                   ?_I2C_2_Master_Stop 0001  
                   ___lwdiv@quotient 000B             initDCmotorsPWM@PWMperiod 0001  
                  ??_color_cardCheck 005E                  __end_of_maze_search 2456  
                  backward@max_power 001D                  __end_of_maze_return 2920  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 0F79                  ??_I2C_2_Master_Stop 0002  
                           _LATCbits 0F7B                             _LATDbits 0F7C  
                           _LATEbits 0F7D                             _LATFbits 0F7E  
                           _LATGbits 0F7F                             _LATHbits 0F80  
                          _rightTURN 3B06                             _PIE4bits 0E2D  
                           _PIR4bits 0E37                     ?_initDCmotorsPWM 0001  
                           _SSP2CON2 0EDA                             _SSP2STAT 0ED8  
          __end_of_I2C_2_Master_Idle 4C4C            __end_of_I2C_2_Master_Init 4C24  
          __end_of_I2C_2_Master_Read 4B56                    ___wmul@multiplier 0001  
          __end_of_I2C_2_Master_Stop 4CA8                         setMotorPWM@m 000E  
        I2C_2_Master_Write@data_byte 0002                    ??_color_read_Blue 0007  
                  leftTURN@max_power 001D                         _TxBufReadCnt 00DC  
                          leftTURN@i 0019                            leftTURN@j 001B  
      __end_of_I2C_2_Master_RepStart 4CBC                   color_read_Blue@tmp 000A  
                __end_of_setMotorPWM 40D2                           ?_rightTURN 0013  
                           __Hrparam 0000                             __Lrparam 0000  
                          forward@mL 0013                            forward@mR 0014  
                           _backward 3E02                           _ANSELDbits 0EA7  
                         _ANSELFbits 0EB4                          _maze_search 1F60  
                           ___xxtofl 37D2                          _maze_return 2456  
                 _custom_floatmodulo 4220                      ___lwdiv@divisor 0009  
         __end_of_switch_calibration 477E                      ___lwdiv@counter 000D  
                           __ptext10 4A7E                             __ptext11 4C92  
                           __ptext20 4338                             __ptext12 4C9E  
                           __ptext21 4ACE                             __ptext13 4CA8  
                           __ptext30 46D0                             __ptext22 2920  
                           __ptext14 4CB2                             __ptext31 3B06  
                           __ptext23 2DE0                             __ptext15 4B14  
                           __ptext40 40D2                             __ptext32 3C84  
                           __ptext24 477E                             __ptext16 4C24  
                           __ptext33 3986                             __ptext25 320A  
                           __ptext17 183A                             __ptext34 3E02  
                           __ptext26 443E                             __ptext18 4220  
                           __ptext35 3F7E                             __ptext27 2456  
                           __ptext19 37D2                             __ptext36 4C4C  
                           __ptext28 4828                             __ptext37 48BC  
                           __ptext29 35A4                             __ptext38 4BCC  
                           __ptext39 460C          custom_floatmodulo@remainder 0064  
                       _SSP2CON1bits 0ED9                         _SSP2CON2bits 0EDA  
                           _leftTURN 3C84                  ?_custom_floatmodulo 0054  
                           isa$xinst 0000                           _RC4STAbits 0EE7  
               ??_custom_floatmodulo 005C                        maze_search@mL 00D4  
                      maze_search@mR 00D5                             forward@i 0019  
                           forward@j 001B                          _setMotorPWM 3F7E  
                      maze_return@mL 0022                        maze_return@mR 0023  
                        ??_rightTURN 0015          __end_of_calibration_routine 37D2  
         custom_floatmodulo@quotient 0060                     _color_click_init 4B56  
                    _color_cardCheck 0E02                           _RGB_to_HSV 183A  
                  _Operation_History 013C                           _SSP2DATPPS 0E1D  
                         _SSP2CLKPPS 0E1C             ?_pause_until_RF2_pressed 0001  
                   color_cardCheck@H 00C7                     color_cardCheck@S 00CB  
                   color_cardCheck@V 00CF                     color_cardCheck@b 00BD  
                   color_cardCheck@c 00C1                     color_cardCheck@g 00B9  
                   color_cardCheck@r 00B5                        ___fladd@signs 000D  
                         _TX4STAbits 0EE8                  rightTURN@delay_time 001F  
                       ___fladd@aexp 000E                         ___fladd@bexp 000F  
