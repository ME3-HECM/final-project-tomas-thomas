

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 21:15:21 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 21/07/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataBANK0
    95   004826                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _length
    99   004826  32                 	db	50
   100                           
   101                           ;initializer for _temp
   102   004827  07                 	db	7
   103   000000                     _TX4REG	set	3812
   104   000000                     _RC4STAbits	set	3815
   105   000000                     _SP4BRGH	set	3814
   106   000000                     _TRISDbits	set	3972
   107   000000                     _LATEbits	set	3965
   108   000000                     _LATHbits	set	3968
   109   000000                     _SSP2CON2bits	set	3802
   110   000000                     _RX4PPS	set	3605
   111   000000                     _SSP2CLKPPS	set	3612
   112   000000                     _SSP2DATPPS	set	3613
   113   000000                     _RC7PPS	set	3689
   114   000000                     _RE2PPS	set	3700
   115   000000                     _LATAbits	set	3961
   116   000000                     _LATGbits	set	3967
   117   000000                     _TRISAbits	set	3969
   118   000000                     _TRISGbits	set	3975
   119   000000                     _TRISHbits	set	3976
   120   000000                     _PORTFbits	set	3982
   121   000000                     _TRISCbits	set	3971
   122   000000                     _TRISEbits	set	3973
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATCbits	set	3963
   125   000000                     _LATDbits	set	3964
   126   000000                     _LATFbits	set	3966
   127   000000                     _T2PR	set	4028
   128   000000                     _T2CONbits	set	4029
   129   000000                     _CCPR2H	set	4006
   130   000000                     _CCPR1H	set	4010
   131   000000                     _RE4PPS	set	3702
   132   000000                     _RG6PPS	set	3720
   133   000000                     _RD5PPS	set	3695
   134   000000                     _ANSELDbits	set	3751
   135   000000                     _ANSELFbits	set	3764
   136   000000                     _CCPR4H	set	3873
   137   000000                     _CCPR3H	set	3877
   138   000000                     _T2CLKCONbits	set	4031
   139   000000                     _T2HLTbits	set	4030
   140   000000                     _CCP1CONbits	set	4011
   141   000000                     _CCPTMRS0bits	set	4013
   142   000000                     _CCP2CONbits	set	4007
   143   000000                     _CCP3CONbits	set	3878
   144   000000                     _CCP4CONbits	set	3874
   145   000000                     _SSP2BUF	set	3797
   146   000000                     _SSP2ADD	set	3798
   147   000000                     _SSP2CON1bits	set	3801
   148   000000                     _RC4REG	set	3811
   149   000000                     _SP4BRGL	set	3813
   150   000000                     _TX4STAbits	set	3816
   151   000000                     _BAUD4CONbits	set	3817
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _SSP2STAT	set	3800
   154   000000                     _PIE4bits	set	3629
   155   000000                     _PIR4bits	set	3639
   156   000000                     _RC0PPS	set	3682
   157   000000                     _RD6PPS	set	3696
   158                           
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162   0046FC                     __pcinit:
   163                           	callstack 0
   164   0046FC                     start_initialization:
   165                           	callstack 0
   166   0046FC                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to BANK0 (2 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171   0046FC  0E26               	movlw	low __pidataBANK0
   172   0046FE  6EF6               	movwf	tblptrl,c
   173   004700  0E48               	movlw	high __pidataBANK0
   174   004702  6EF7               	movwf	tblptrh,c
   175   004704  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176   004706  6EF8               	movwf	tblptru,c
   177   004708  0009               	tblrd		*+	;fetch initializer
   178   00470A  CFF5 F0FB          	movff	tablat,__pdataBANK0
   179   00470E  0009               	tblrd		*+	;fetch initializer
   180   004710  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   181                           
   182                           ; Clear objects allocated to BANK1 (187 bytes)
   183   004714  EE01  F000         	lfsr	0,__pbssBANK1
   184   004718  0EBB               	movlw	187
   185   00471A                     clear_0:
   186   00471A  6AEE               	clrf	postinc0,c
   187   00471C  06E8               	decf	wreg,f,c
   188   00471E  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to BANK0 (24 bytes)
   191   004720  EE00  F0E3         	lfsr	0,__pbssBANK0
   192   004724  0E18               	movlw	24
   193   004726                     clear_1:
   194   004726  6AEE               	clrf	postinc0,c
   195   004728  06E8               	decf	wreg,f,c
   196   00472A  E1FD               	bnz	clear_1
   197                           
   198                           ; Clear objects allocated to COMRAM (2 bytes)
   199   00472C  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   200   00472E  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   201   004730                     end_of_initialization:
   202                           	callstack 0
   203   004730                     __end_of__initialization:
   204                           	callstack 0
   205   004730  0100               	movlb	0
   206   004732  EF4F  F020         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	bssCOMRAM
   209   00005E                     __pbssCOMRAM:
   210                           	callstack 0
   211   00005E                     _TxBufReadCnt:
   212                           	callstack 0
   213   00005E                     	ds	1
   214   00005F                     _TxBufWriteCnt:
   215                           	callstack 0
   216   00005F                     	ds	1
   217                           
   218                           	psect	bssBANK0
   219   0000E3                     __pbssBANK0:
   220                           	callstack 0
   221   0000E3                     _Color_Value:
   222                           	callstack 0
   223   0000E3                     	ds	2
   224   0000E5                     _Forward_Count:
   225                           	callstack 0
   226   0000E5                     	ds	1
   227   0000E6                     _Operation_Count:
   228                           	callstack 0
   229   0000E6                     	ds	1
   230   0000E7                     _RxBufReadCnt:
   231                           	callstack 0
   232   0000E7                     	ds	1
   233   0000E8                     _RxBufWriteCnt:
   234                           	callstack 0
   235   0000E8                     	ds	1
   236   0000E9                     _motorR:
   237                           	callstack 0
   238   0000E9                     	ds	9
   239   0000F2                     _motorL:
   240                           	callstack 0
   241   0000F2                     	ds	9
   242                           
   243                           	psect	dataBANK0
   244   0000FB                     __pdataBANK0:
   245                           	callstack 0
   246   0000FB                     _length:
   247                           	callstack 0
   248   0000FB                     	ds	1
   249   0000FC                     _temp:
   250                           	callstack 0
   251   0000FC                     	ds	1
   252                           
   253                           	psect	bssBANK1
   254   000100                     __pbssBANK1:
   255                           	callstack 0
   256   000100                     _EUSART4TXbuf:
   257                           	callstack 0
   258   000100                     	ds	60
   259   00013C                     	ds	50
   260   00016E                     _Operation_History:
   261                           	callstack 0
   262   00016E                     	ds	50
   263   0001A0                     _EUSART4RXbuf:
   264                           	callstack 0
   265   0001A0                     	ds	20
   266   0001B4                     _calibration:
   267                           	callstack 0
   268   0001B4                     	ds	7
   269                           
   270                           	psect	cstackBANK0
   271   000060                     __pcstackBANK0:
   272                           	callstack 0
   273   000060                     custom_floatmodulo@quotient:
   274                           	callstack 0
   275   000060                     maze_return@Operation_History:
   276                           	callstack 0
   277                           
   278                           ; 50 bytes @ 0x0
   279   000060                     	ds	4
   280   000064                     custom_floatmodulo@remainder:
   281                           	callstack 0
   282                           
   283                           ; 4 bytes @ 0x4
   284   000064                     	ds	4
   285   000068                     custom_floatmodulo@intPart:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x8
   289   000068                     	ds	2
   290   00006A                     RGB_to_HSV@R:
   291                           	callstack 0
   292                           
   293                           ; 4 bytes @ 0xA
   294   00006A                     	ds	4
   295   00006E                     RGB_to_HSV@G:
   296                           	callstack 0
   297                           
   298                           ; 4 bytes @ 0xE
   299   00006E                     	ds	4
   300   000072                     RGB_to_HSV@B:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x12
   304   000072                     	ds	4
   305   000076                     RGB_to_HSV@C:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x16
   309   000076                     	ds	4
   310   00007A                     RGB_to_HSV@H:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x1A
   314   00007A                     	ds	1
   315   00007B                     RGB_to_HSV@S:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x1B
   319   00007B                     	ds	1
   320   00007C                     RGB_to_HSV@V:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x1C
   324   00007C                     	ds	1
   325   00007D                     RGB_to_HSV@c_norm:
   326                           	callstack 0
   327                           
   328                           ; 4 bytes @ 0x1D
   329   00007D                     	ds	4
   330   000081                     _RGB_to_HSV$2703:
   331                           	callstack 0
   332                           
   333                           ; 4 bytes @ 0x21
   334   000081                     	ds	4
   335   000085                     _RGB_to_HSV$2704:
   336                           	callstack 0
   337                           
   338                           ; 4 bytes @ 0x25
   339   000085                     	ds	4
   340   000089                     _RGB_to_HSV$2705:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x29
   344   000089                     	ds	4
   345   00008D                     _RGB_to_HSV$2707:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x2D
   349   00008D                     	ds	4
   350   000091                     _RGB_to_HSV$318:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x31
   354   000091                     	ds	1
   355   000092                     maze_return@distance_back:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x32
   359   000092                     	ds	1
   360   000093                     maze_return@j:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x33
   364   000093                     	ds	2
   365   000095                     maze_return@i:
   366                           	callstack 0
   367   000095                     _RGB_to_HSV$319:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x35
   371   000095                     	ds	4
   372   000099                     RGB_to_HSV@minRGB:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0x39
   376   000099                     	ds	4
   377   00009D                     _RGB_to_HSV$321:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x3D
   381   00009D                     	ds	4
   382   0000A1                     _RGB_to_HSV$322:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x41
   386   0000A1                     	ds	4
   387   0000A5                     _RGB_to_HSV$2706:
   388                           	callstack 0
   389                           
   390                           ; 4 bytes @ 0x45
   391   0000A5                     	ds	4
   392   0000A9                     RGB_to_HSV@H_temp:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x49
   396   0000A9                     	ds	4
   397   0000AD                     RGB_to_HSV@deltaRGB:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x4D
   401   0000AD                     	ds	4
   402   0000B1                     RGB_to_HSV@maxRGB:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x51
   406   0000B1                     	ds	4
   407   0000B5                     RGB_to_HSV@r:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x55
   411   0000B5                     	ds	4
   412   0000B9                     RGB_to_HSV@g:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x59
   416   0000B9                     	ds	4
   417   0000BD                     RGB_to_HSV@b:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x5D
   421   0000BD                     	ds	4
   422   0000C1                     color_cardCheck@r:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x61
   426   0000C1                     	ds	4
   427   0000C5                     color_cardCheck@g:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x65
   431   0000C5                     	ds	4
   432   0000C9                     color_cardCheck@b:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x69
   436   0000C9                     	ds	4
   437   0000CD                     color_cardCheck@c:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x6D
   441   0000CD                     	ds	4
   442   0000D1                     color_cardCheck@card_color:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x71
   446   0000D1                     	ds	2
   447   0000D3                     color_cardCheck@H:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x73
   451   0000D3                     	ds	4
   452   0000D7                     color_cardCheck@S:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x77
   456   0000D7                     	ds	4
   457   0000DB                     color_cardCheck@V:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x7B
   461   0000DB                     	ds	4
   462   0000DF                     maze_search@c:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x7F
   466   0000DF                     	ds	2
   467   0000E1                     maze_search@mL:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x81
   471   0000E1                     	ds	1
   472   0000E2                     maze_search@mR:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x82
   476   0000E2                     	ds	1
   477                           
   478                           	psect	cstackCOMRAM
   479   000001                     __pcstackCOMRAM:
   480                           	callstack 0
   481   000001                     ??_pause_until_RF2_pressed:
   482   000001                     ??_I2C_2_Master_Idle:
   483   000001                     ?___wmul:
   484                           	callstack 0
   485   000001                     ?___awdiv:
   486                           	callstack 0
   487   000001                     ?___fladd:
   488                           	callstack 0
   489   000001                     ?___fltol:
   490                           	callstack 0
   491   000001                     adjust_calibration@calibration_label:
   492                           	callstack 0
   493   000001                     switch_calibration@calibration_index:
   494                           	callstack 0
   495   000001                     initDCmotorsPWM@PWMperiod:
   496                           	callstack 0
   497   000001                     delay_ms_function@milliseconds:
   498                           	callstack 0
   499   000001                     ___wmul@multiplier:
   500                           	callstack 0
   501   000001                     ___awdiv@dividend:
   502                           	callstack 0
   503   000001                     ___fleq@ff1:
   504                           	callstack 0
   505   000001                     ___flge@ff1:
   506                           	callstack 0
   507   000001                     ___fltol@f1:
   508                           	callstack 0
   509   000001                     ___fladd@b:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x0
   513   000001                     	ds	1
   514   000002                     ??_I2C_2_Master_Read:
   515   000002                     I2C_2_Master_Write@data_byte:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x1
   519   000002                     	ds	1
   520   000003                     ??_adjust_calibration:
   521   000003                     ??_switch_calibration:
   522   000003                     ??_delay_ms_function:
   523   000003                     color_writetoaddr@value:
   524                           	callstack 0
   525   000003                     I2C_2_Master_Read@ack:
   526                           	callstack 0
   527   000003                     ___wmul@multiplicand:
   528                           	callstack 0
   529   000003                     ___awdiv@divisor:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x2
   533   000003                     	ds	1
   534   000004                     color_writetoaddr@address:
   535                           	callstack 0
   536   000004                     I2C_2_Master_Read@tmp:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x3
   540   000004                     	ds	1
   541   000005                     ??_color_click_init:
   542   000005                     ??___fltol:
   543   000005                     ?_color_read_Red:
   544                           	callstack 0
   545   000005                     ?_color_read_Green:
   546                           	callstack 0
   547   000005                     ?_color_read_Blue:
   548                           	callstack 0
   549   000005                     ?_color_read_Clear:
   550                           	callstack 0
   551   000005                     ___awdiv@counter:
   552                           	callstack 0
   553   000005                     ___wmul@product:
   554                           	callstack 0
   555   000005                     ___fleq@ff2:
   556                           	callstack 0
   557   000005                     ___flge@ff2:
   558                           	callstack 0
   559   000005                     ___fladd@a:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x4
   563   000005                     	ds	1
   564   000006                     ___awdiv@sign:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x5
   568   000006                     	ds	1
   569   000007                     ??_color_read_Red:
   570   000007                     ??_color_read_Green:
   571   000007                     ??_color_read_Blue:
   572   000007                     ??_color_read_Clear:
   573   000007                     ?___lwdiv:
   574                           	callstack 0
   575   000007                     ___awdiv@quotient:
   576                           	callstack 0
   577   000007                     ___lwdiv@dividend:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x6
   581   000007                     	ds	2
   582   000009                     ??___fladd:
   583   000009                     ??___fleq:
   584   000009                     ??___flge:
   585   000009                     ___fltol@sign1:
   586                           	callstack 0
   587   000009                     ___lwdiv@divisor:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x8
   591   000009                     	ds	1
   592   00000A                     ___fltol@exp1:
   593                           	callstack 0
   594   00000A                     color_read_Red@tmp:
   595                           	callstack 0
   596   00000A                     color_read_Green@tmp:
   597                           	callstack 0
   598   00000A                     color_read_Blue@tmp:
   599                           	callstack 0
   600   00000A                     color_read_Clear@tmp:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x9
   604   00000A                     	ds	1
   605   00000B                     ___lwdiv@counter:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0xA
   609   00000B                     	ds	1
   610   00000C                     ?___xxtofl:
   611                           	callstack 0
   612   00000C                     ___lwdiv@quotient:
   613                           	callstack 0
   614   00000C                     ___xxtofl@val:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0xB
   618   00000C                     	ds	1
   619   00000D                     ___fladd@signs:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0xC
   623   00000D                     	ds	1
   624   00000E                     setMotorPWM@m:
   625                           	callstack 0
   626   00000E                     ___fladd@aexp:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0xD
   630   00000E                     	ds	1
   631   00000F                     ??_setMotorPWM:
   632   00000F                     ___fladd@bexp:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0xE
   636   00000F                     	ds	1
   637   000010                     ??___xxtofl:
   638   000010                     ___fladd@grs:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0xF
   642   000010                     	ds	1
   643   000011                     setMotorPWM@posDuty:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x10
   647   000011                     	ds	1
   648   000012                     setMotorPWM@negDuty:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x11
   652   000012                     	ds	1
   653   000013                     forward@mL:
   654                           	callstack 0
   655   000013                     backward@mL:
   656                           	callstack 0
   657   000013                     leftTURN@mL:
   658                           	callstack 0
   659   000013                     rightTURN@mL:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x12
   663   000013                     	ds	1
   664   000014                     forward@mR:
   665                           	callstack 0
   666   000014                     backward@mR:
   667                           	callstack 0
   668   000014                     leftTURN@mR:
   669                           	callstack 0
   670   000014                     rightTURN@mR:
   671                           	callstack 0
   672   000014                     ___xxtofl@sign:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x13
   676   000014                     	ds	1
   677   000015                     ??_rightTURN:
   678   000015                     ??_leftTURN:
   679   000015                     ??_forward:
   680   000015                     ??_backward:
   681   000015                     ___xxtofl@exp:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x14
   685   000015                     	ds	1
   686   000016                     ___xxtofl@arg:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x15
   690   000016                     	ds	2
   691   000018                     forward@Distance_Calibration:
   692                           	callstack 0
   693   000018                     backward@Distance_Calibration:
   694                           	callstack 0
   695   000018                     leftTURN@rotation_calibration:
   696                           	callstack 0
   697   000018                     rightTURN@rotation_calibration:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x17
   701   000018                     	ds	1
   702   000019                     forward@i:
   703                           	callstack 0
   704   000019                     backward@i:
   705                           	callstack 0
   706   000019                     leftTURN@i:
   707                           	callstack 0
   708   000019                     rightTURN@i:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x18
   712   000019                     	ds	1
   713   00001A                     ?___flsub:
   714                           	callstack 0
   715   00001A                     ___flsub@b:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x19
   719   00001A                     	ds	1
   720   00001B                     forward@j:
   721                           	callstack 0
   722   00001B                     backward@j:
   723                           	callstack 0
   724   00001B                     leftTURN@j:
   725                           	callstack 0
   726   00001B                     rightTURN@j:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x1A
   730   00001B                     	ds	2
   731   00001D                     forward@max_power:
   732                           	callstack 0
   733   00001D                     backward@max_power:
   734                           	callstack 0
   735   00001D                     leftTURN@max_power:
   736                           	callstack 0
   737   00001D                     rightTURN@max_power:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x1C
   741   00001D                     	ds	1
   742   00001E                     ___flsub@a:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x1D
   746   00001E                     	ds	1
   747   00001F                     forward@delay_time:
   748                           	callstack 0
   749   00001F                     backward@delay_time:
   750                           	callstack 0
   751   00001F                     leftTURN@delay_time:
   752                           	callstack 0
   753   00001F                     rightTURN@delay_time:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x1E
   757   00001F                     	ds	2
   758   000021                     calibration_routine@c:
   759                           	callstack 0
   760   000021                     maze_return@c:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x20
   764   000021                     	ds	1
   765   000022                     ?___fldiv:
   766                           	callstack 0
   767   000022                     ___fldiv@b:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x21
   771   000022                     	ds	1
   772   000023                     calibration_routine@mL:
   773                           	callstack 0
   774   000023                     maze_return@mL:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x22
   778   000023                     	ds	1
   779   000024                     calibration_routine@mR:
   780                           	callstack 0
   781   000024                     maze_return@mR:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x23
   785   000024                     	ds	1
   786   000025                     ??_maze_return:
   787   000025                     
   788                           ; 1 bytes @ 0x24
   789   000025                     	ds	1
   790   000026                     ___fldiv@a:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x25
   794   000026                     	ds	4
   795   00002A                     ??___fldiv:
   796                           
   797                           ; 1 bytes @ 0x29
   798   00002A                     	ds	4
   799   00002E                     ___fldiv@rem:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x2D
   803   00002E                     	ds	4
   804   000032                     ___fldiv@sign:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x31
   808   000032                     	ds	1
   809   000033                     ___fldiv@new_exp:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x32
   813   000033                     	ds	2
   814   000035                     ___fldiv@grs:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x34
   818   000035                     	ds	4
   819   000039                     ___fldiv@bexp:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x38
   823   000039                     	ds	1
   824   00003A                     ___fldiv@aexp:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x39
   828   00003A                     	ds	1
   829   00003B                     ?___flmul:
   830                           	callstack 0
   831   00003B                     ___flmul@b:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x3A
   835   00003B                     	ds	4
   836   00003F                     ___flmul@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x3E
   840   00003F                     	ds	4
   841   000043                     ??___flmul:
   842                           
   843                           ; 1 bytes @ 0x42
   844   000043                     	ds	4
   845   000047                     ___flmul@sign:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x46
   849   000047                     	ds	1
   850   000048                     ___flmul@grs:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x47
   854   000048                     	ds	4
   855   00004C                     ___flmul@aexp:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x4B
   859   00004C                     	ds	1
   860   00004D                     ___flmul@bexp:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x4C
   864   00004D                     	ds	1
   865   00004E                     ___flmul@prod:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x4D
   869   00004E                     	ds	4
   870   000052                     ___flmul@temp:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x51
   874   000052                     	ds	2
   875   000054                     ?_custom_floatmodulo:
   876                           	callstack 0
   877   000054                     custom_floatmodulo@x:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x53
   881   000054                     	ds	4
   882   000058                     custom_floatmodulo@y:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x57
   886   000058                     	ds	4
   887   00005C                     ?_color_cardCheck:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x5B
   891   00005C                     	ds	2
   892   00005E                     
   893                           ; 1 bytes @ 0x5D
   894 ;;
   895 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   896 ;;
   897 ;; *************** function _main *****************
   898 ;; Defined at:
   899 ;;		line 19 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  PWMperiod       2    0        unsigned int 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels required when called: 6
   919 ;; This function calls:
   920 ;;		_calibration_routine
   921 ;;		_initDCmotorsPWM
   922 ;;		_maze_return
   923 ;;		_maze_search
   924 ;;		_pause_until_RF2_pressed
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931   00409E                     __ptext0:
   932                           	callstack 0
   933   00409E                     _main:
   934                           	callstack 25
   935   00409E                     
   936                           ;main.c: 21:     initDCmotorsPWM(PWMperiod);
   937   00409E  0E00               	movlw	0
   938   0040A0  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   939   0040A2  0E63               	movlw	99
   940   0040A4  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   941   0040A6  ECC7  F021         	call	_initDCmotorsPWM	;wreg free
   942   0040AA                     
   943                           ;main.c: 24:     motorL.power=0;
   944   0040AA  0E00               	movlw	0
   945   0040AC  0100               	movlb	0	; () banked
   946   0040AE  6FF2               	movwf	_motorL& (0+255),b
   947   0040B0                     
   948                           ; BSR set to: 0
   949                           ;main.c: 25:     motorL.direction=1;
   950   0040B0  0E01               	movlw	1
   951   0040B2  6FF3               	movwf	(_motorL+1)& (0+255),b
   952   0040B4                     
   953                           ; BSR set to: 0
   954                           ;main.c: 26:     motorL.brakemode=1;
   955   0040B4  0E01               	movlw	1
   956   0040B6  6FF4               	movwf	(_motorL+2)& (0+255),b
   957   0040B8                     
   958                           ; BSR set to: 0
   959                           ;main.c: 27:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   960   0040B8  0EAA               	movlw	170
   961   0040BA  6FF7               	movwf	(_motorL+5)& (0+255),b
   962   0040BC  0E0F               	movlw	15
   963   0040BE  6FF8               	movwf	(_motorL+6)& (0+255),b
   964   0040C0                     
   965                           ; BSR set to: 0
   966                           ;main.c: 28:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   967   0040C0  0EA6               	movlw	166
   968   0040C2  6FF9               	movwf	(_motorL+7)& (0+255),b
   969   0040C4  0E0F               	movlw	15
   970   0040C6  6FFA               	movwf	(_motorL+8)& (0+255),b
   971   0040C8                     
   972                           ; BSR set to: 0
   973                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
   974   0040C8  0E00               	movlw	0
   975   0040CA  6FF6               	movwf	(_motorL+4)& (0+255),b
   976   0040CC  0E63               	movlw	99
   977   0040CE  6FF5               	movwf	(_motorL+3)& (0+255),b
   978   0040D0                     
   979                           ; BSR set to: 0
   980                           ;main.c: 31:     motorR.power=0;
   981   0040D0  0E00               	movlw	0
   982   0040D2  6FE9               	movwf	_motorR& (0+255),b
   983   0040D4                     
   984                           ; BSR set to: 0
   985                           ;main.c: 32:     motorR.direction=1;
   986   0040D4  0E01               	movlw	1
   987   0040D6  6FEA               	movwf	(_motorR+1)& (0+255),b
   988   0040D8                     
   989                           ; BSR set to: 0
   990                           ;main.c: 33:     motorR.brakemode=1;
   991   0040D8  0E01               	movlw	1
   992   0040DA  6FEB               	movwf	(_motorR+2)& (0+255),b
   993   0040DC                     
   994                           ; BSR set to: 0
   995                           ;main.c: 34:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   996   0040DC  0E25               	movlw	37
   997   0040DE  6FEE               	movwf	(_motorR+5)& (0+255),b
   998   0040E0  0E0F               	movlw	15
   999   0040E2  6FEF               	movwf	(_motorR+6)& (0+255),b
  1000   0040E4                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 35:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1003   0040E4  0E21               	movlw	33
  1004   0040E6  6FF0               	movwf	(_motorR+7)& (0+255),b
  1005   0040E8  0E0F               	movlw	15
  1006   0040EA  6FF1               	movwf	(_motorR+8)& (0+255),b
  1007   0040EC                     
  1008                           ; BSR set to: 0
  1009                           ;main.c: 36:     motorR.PWMperiod=PWMperiod;
  1010   0040EC  0E00               	movlw	0
  1011   0040EE  6FED               	movwf	(_motorR+4)& (0+255),b
  1012   0040F0  0E63               	movlw	99
  1013   0040F2  6FEC               	movwf	(_motorR+3)& (0+255),b
  1014   0040F4                     
  1015                           ; BSR set to: 0
  1016                           ;main.c: 42:     TRISDbits.TRISD7 = 0;
  1017   0040F4  9E84               	bcf	132,7,c	;volatile
  1018   0040F6                     
  1019                           ; BSR set to: 0
  1020                           ;main.c: 43:     LATDbits.LATD7 = 0;
  1021   0040F6  9E7C               	bcf	124,7,c	;volatile
  1022   0040F8                     
  1023                           ; BSR set to: 0
  1024                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
  1025   0040F8  9688               	bcf	136,3,c	;volatile
  1026   0040FA                     
  1027                           ; BSR set to: 0
  1028                           ;main.c: 47:     LATHbits.LATH3 = 0;
  1029   0040FA  9680               	bcf	128,3,c	;volatile
  1030   0040FC                     
  1031                           ; BSR set to: 0
  1032                           ;main.c: 50:     TRISFbits.TRISF2=1;
  1033   0040FC  8486               	bsf	134,2,c	;volatile
  1034   0040FE                     
  1035                           ; BSR set to: 0
  1036                           ;main.c: 51:     ANSELFbits.ANSELF2=0;
  1037   0040FE  010E               	movlb	14	; () banked
  1038   004100  95B4               	bcf	180,2,b	;volatile
  1039   004102                     
  1040                           ; BSR set to: 14
  1041                           ;main.c: 54:     TRISFbits.TRISF3=1;
  1042   004102  8686               	bsf	134,3,c	;volatile
  1043   004104                     
  1044                           ; BSR set to: 14
  1045                           ;main.c: 55:     ANSELFbits.ANSELF3=0;
  1046   004104  97B4               	bcf	180,3,b	;volatile
  1047   004106                     
  1048                           ; BSR set to: 14
  1049                           ;main.c: 59:     calibration.index = 5;
  1050   004106  0E05               	movlw	5
  1051   004108  0101               	movlb	1	; () banked
  1052   00410A  6FB4               	movwf	_calibration& (0+255),b
  1053   00410C                     
  1054                           ; BSR set to: 1
  1055                           ;main.c: 61:     calibration.right_90 = 78;
  1056   00410C  0E4E               	movlw	78
  1057   00410E  6FB5               	movwf	(_calibration+1)& (0+255),b
  1058   004110                     
  1059                           ; BSR set to: 1
  1060                           ;main.c: 62:     calibration.left_90 = 77;
  1061   004110  0E4D               	movlw	77
  1062   004112  6FB6               	movwf	(_calibration+2)& (0+255),b
  1063   004114                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 64:     calibration.right_135 = 140;
  1066   004114  0E8C               	movlw	140
  1067   004116  6FB7               	movwf	(_calibration+3)& (0+255),b
  1068   004118                     
  1069                           ; BSR set to: 1
  1070                           ;main.c: 65:     calibration.left_135 = 140;
  1071   004118  0E8C               	movlw	140
  1072   00411A  6FB8               	movwf	(_calibration+4)& (0+255),b
  1073   00411C                     
  1074                           ; BSR set to: 1
  1075                           ;main.c: 67:     calibration.forward = 70;
  1076   00411C  0E46               	movlw	70
  1077   00411E  6FB9               	movwf	(_calibration+5)& (0+255),b
  1078   004120                     
  1079                           ; BSR set to: 1
  1080                           ;main.c: 68:     calibration.backward = 40;
  1081   004120  0E28               	movlw	40
  1082   004122  6FBA               	movwf	(_calibration+6)& (0+255),b
  1083   004124                     l4996:
  1084                           
  1085                           ;main.c: 74:         pause_until_RF2_pressed();
  1086   004124  EC4B  F022         	call	_pause_until_RF2_pressed	;wreg free
  1087   004128                     
  1088                           ;main.c: 76:         calibration_routine(&calibration, &motorL, &motorR);
  1089   004128  0EB4               	movlw	low _calibration
  1090   00412A  6E21               	movwf	calibration_routine@c^0,c
  1091   00412C  0E01               	movlw	high _calibration
  1092   00412E  6E22               	movwf	(calibration_routine@c+1)^0,c
  1093   004130  0EF2               	movlw	low _motorL
  1094   004132  6E23               	movwf	calibration_routine@mL^0,c
  1095   004134  0EE9               	movlw	low _motorR
  1096   004136  6E24               	movwf	calibration_routine@mR^0,c
  1097   004138  EC90  F018         	call	_calibration_routine	;wreg free
  1098   00413C                     
  1099                           ;main.c: 78:         maze_search(&calibration, &motorL, &motorR);
  1100   00413C  0EB4               	movlw	low _calibration
  1101   00413E  0100               	movlb	0	; () banked
  1102   004140  6FDF               	movwf	maze_search@c& (0+255),b
  1103   004142  0E01               	movlw	high _calibration
  1104   004144  6FE0               	movwf	(maze_search@c+1)& (0+255),b
  1105   004146  0EF2               	movlw	low _motorL
  1106   004148  6FE1               	movwf	maze_search@mL& (0+255),b
  1107   00414A  0EE9               	movlw	low _motorR
  1108   00414C  6FE2               	movwf	maze_search@mR& (0+255),b
  1109   00414E  EC6D  F017         	call	_maze_search	;wreg free
  1110   004152                     
  1111                           ;main.c: 80:         maze_return(&calibration, &motorL, &motorR);
  1112   004152  0EB4               	movlw	low _calibration
  1113   004154  6E21               	movwf	maze_return@c^0,c
  1114   004156  0E01               	movlw	high _calibration
  1115   004158  6E22               	movwf	(maze_return@c+1)^0,c
  1116   00415A  0EF2               	movlw	low _motorL
  1117   00415C  6E23               	movwf	maze_return@mL^0,c
  1118   00415E  0EE9               	movlw	low _motorR
  1119   004160  6E24               	movwf	maze_return@mR^0,c
  1120   004162  EC40  F016         	call	_maze_return	;wreg free
  1121   004166  EF92  F020         	goto	l4996
  1122   00416A  EF00  F000         	goto	start
  1123   00416E                     __end_of_main:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _pause_until_RF2_pressed *****************
  1127 ;; Defined at:
  1128 ;;		line 6 in file "calibration.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;Total ram usage:        2 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text1
  1156   004496                     __ptext1:
  1157                           	callstack 0
  1158   004496                     _pause_until_RF2_pressed:
  1159                           	callstack 30
  1160   004496                     l132:
  1161                           
  1162                           ;calibration.c: 9:         LATDbits.LATD7 = 1;
  1163   004496  8E7C               	bsf	124,7,c	;volatile
  1164   004498                     
  1165                           ;calibration.c: 10:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1166   004498  0E09               	movlw	9
  1167   00449A  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1168   00449C  0E1E               	movlw	30
  1169   00449E  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1170   0044A0  0EE4               	movlw	228
  1171   0044A2                     u5697:
  1172   0044A2  2EE8               	decfsz	wreg,f,c
  1173   0044A4  D7FE               	bra	u5697
  1174   0044A6  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1175   0044A8  D7FC               	bra	u5697
  1176   0044AA  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1177   0044AC  D7FA               	bra	u5697
  1178   0044AE  D000               	nop2	
  1179   0044B0                     
  1180                           ;calibration.c: 11:         LATDbits.LATD7 = 0;
  1181   0044B0  9E7C               	bcf	124,7,c	;volatile
  1182                           
  1183                           ;calibration.c: 12:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1184   0044B2  0E09               	movlw	9
  1185   0044B4  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1186   0044B6  0E1E               	movlw	30
  1187   0044B8  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1188   0044BA  0EE4               	movlw	228
  1189   0044BC                     u5707:
  1190   0044BC  2EE8               	decfsz	wreg,f,c
  1191   0044BE  D7FE               	bra	u5707
  1192   0044C0  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1193   0044C2  D7FC               	bra	u5707
  1194   0044C4  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1195   0044C6  D7FA               	bra	u5707
  1196   0044C8  D000               	nop2	
  1197   0044CA                     
  1198                           ;calibration.c: 14:         if(!PORTFbits.RF2){
  1199   0044CA  B48E               	btfsc	142,2,c	;volatile
  1200   0044CC  EF6A  F022         	goto	u4641
  1201   0044D0  EF6C  F022         	goto	u4640
  1202   0044D4                     u4641:
  1203   0044D4  EF4B  F022         	goto	l132
  1204   0044D8                     u4640:
  1205   0044D8                     
  1206                           ;calibration.c: 15:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1207   0044D8  0E11               	movlw	17
  1208   0044DA  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1209   0044DC  0E3C               	movlw	60
  1210   0044DE  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1211   0044E0  0ECB               	movlw	203
  1212   0044E2                     u5717:
  1213   0044E2  2EE8               	decfsz	wreg,f,c
  1214   0044E4  D7FE               	bra	u5717
  1215   0044E6  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1216   0044E8  D7FC               	bra	u5717
  1217   0044EA  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1218   0044EC  D7FA               	bra	u5717
  1219   0044EE  0000               	nop	
  1220   0044F0                     
  1221                           ;calibration.c: 16:         LATDbits.LATD7 = 0;
  1222   0044F0  9E7C               	bcf	124,7,c	;volatile
  1223   0044F2  0012               	return		;funcret
  1224   0044F4                     __end_of_pause_until_RF2_pressed:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _maze_search *****************
  1228 ;; Defined at:
  1229 ;;		line 8 in file "pathfinder_file.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  c               2  127[BANK0 ] PTR struct calibration_s
  1232 ;;		 -> calibration(7), 
  1233 ;;  mL              1  129[BANK0 ] PTR struct DC_motor
  1234 ;;		 -> motorL(9), 
  1235 ;;  mR              1  130[BANK0 ] PTR struct DC_motor
  1236 ;;		 -> motorR(9), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1248 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;Total ram usage:        4 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 5
  1255 ;; This function calls:
  1256 ;;		_backward
  1257 ;;		_color_cardCheck
  1258 ;;		_color_click_init
  1259 ;;		_forward
  1260 ;;		_leftTURN
  1261 ;;		_rightTURN
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text2
  1268   002EDA                     __ptext2:
  1269                           	callstack 0
  1270   002EDA                     _maze_search:
  1271                           	callstack 25
  1272   002EDA                     
  1273                           ;pathfinder_file.c: 9:     color_click_init();
  1274   002EDA  EC5E  F023         	call	_color_click_init	;wreg free
  1275   002EDE                     l4800:
  1276                           
  1277                           ;pathfinder_file.c: 12:         LATHbits.LATH3 = 1;
  1278   002EDE  8680               	bsf	128,3,c	;volatile
  1279   002EE0                     
  1280                           ;pathfinder_file.c: 13:         LATDbits.LATD7 = 1;
  1281   002EE0  8E7C               	bsf	124,7,c	;volatile
  1282   002EE2                     
  1283                           ;pathfinder_file.c: 15:         forward(c->forward, mL, mR);
  1284   002EE2  C0E1  F013         	movff	maze_search@mL,forward@mL
  1285   002EE6  C0E2  F014         	movff	maze_search@mR,forward@mR
  1286   002EEA  0100               	movlb	0	; () banked
  1287   002EEC  EE20 F005          	lfsr	2,5
  1288   002EF0  51DF               	movf	maze_search@c& (0+255),w,b
  1289   002EF2  26D9               	addwf	fsr2l,f,c
  1290   002EF4  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1291   002EF6  22DA               	addwfc	fsr2h,f,c
  1292   002EF8  50DF               	movf	indf2,w,c
  1293   002EFA  EC6D  F01A         	call	_forward
  1294   002EFE                     
  1295                           ;pathfinder_file.c: 16:         Forward_Count++;
  1296   002EFE  0100               	movlb	0	; () banked
  1297   002F00  2BE5               	incf	_Forward_Count& (0+255),f,b
  1298   002F02                     
  1299                           ; BSR set to: 0
  1300                           ;pathfinder_file.c: 17:         Color_Value = color_cardCheck();
  1301   002F02  EC01  F007         	call	_color_cardCheck	;wreg free
  1302   002F06  C05C  F0E3         	movff	?_color_cardCheck,_Color_Value
  1303   002F0A  C05D  F0E4         	movff	?_color_cardCheck+1,_Color_Value+1
  1304   002F0E                     
  1305                           ;pathfinder_file.c: 19:         LATHbits.LATH3 = 0;
  1306   002F0E  9680               	bcf	128,3,c	;volatile
  1307   002F10                     
  1308                           ;pathfinder_file.c: 20:         LATDbits.LATD7 = 0;
  1309   002F10  9E7C               	bcf	124,7,c	;volatile
  1310   002F12                     
  1311                           ;pathfinder_file.c: 23:         if(Color_Value != 0){
  1312   002F12  0100               	movlb	0	; () banked
  1313   002F14  51E3               	movf	_Color_Value& (0+255),w,b
  1314   002F16  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1315   002F18  B4D8               	btfsc	status,2,c
  1316   002F1A  EF91  F017         	goto	u5481
  1317   002F1E  EF93  F017         	goto	u5480
  1318   002F22                     u5481:
  1319   002F22  EF6F  F017         	goto	l4800
  1320   002F26                     u5480:
  1321   002F26                     
  1322                           ; BSR set to: 0
  1323                           ;pathfinder_file.c: 24:             Operation_History[Operation_Count] = Forward_Count +
      +                           10;
  1324   002F26  0E6E               	movlw	low _Operation_History
  1325   002F28  25E6               	addwf	_Operation_Count& (0+255),w,b
  1326   002F2A  6ED9               	movwf	fsr2l,c
  1327   002F2C  6ADA               	clrf	fsr2h,c
  1328   002F2E  0E01               	movlw	high _Operation_History
  1329   002F30  22DA               	addwfc	fsr2h,f,c
  1330   002F32  51E5               	movf	_Forward_Count& (0+255),w,b
  1331   002F34  0F0A               	addlw	10
  1332   002F36  6EDF               	movwf	indf2,c
  1333   002F38                     
  1334                           ; BSR set to: 0
  1335                           ;pathfinder_file.c: 25:             Forward_Count = 0;
  1336   002F38  0E00               	movlw	0
  1337   002F3A  6FE5               	movwf	_Forward_Count& (0+255),b
  1338   002F3C                     
  1339                           ; BSR set to: 0
  1340                           ;pathfinder_file.c: 26:             Operation_Count++;
  1341   002F3C  2BE6               	incf	_Operation_Count& (0+255),f,b
  1342   002F3E                     
  1343                           ; BSR set to: 0
  1344                           ;pathfinder_file.c: 28:             if(Color_Value == 1){
  1345   002F3E  05E3               	decf	_Color_Value& (0+255),w,b
  1346   002F40  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1347   002F42  A4D8               	btfss	status,2,c
  1348   002F44  EFA6  F017         	goto	u5491
  1349   002F48  EFA8  F017         	goto	u5490
  1350   002F4C                     u5491:
  1351   002F4C  EFCE  F017         	goto	l4832
  1352   002F50                     u5490:
  1353   002F50                     
  1354                           ; BSR set to: 0
  1355                           ;pathfinder_file.c: 29:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1356   002F50  0E6E               	movlw	low _Operation_History
  1357   002F52  25E6               	addwf	_Operation_Count& (0+255),w,b
  1358   002F54  6ED9               	movwf	fsr2l,c
  1359   002F56  6ADA               	clrf	fsr2h,c
  1360   002F58  0E01               	movlw	high _Operation_History
  1361   002F5A  22DA               	addwfc	fsr2h,f,c
  1362   002F5C  C0E3  FFDF         	movff	_Color_Value,indf2
  1363   002F60                     
  1364                           ; BSR set to: 0
  1365                           ;pathfinder_file.c: 30:                 Operation_Count++;
  1366   002F60  2BE6               	incf	_Operation_Count& (0+255),f,b
  1367   002F62                     
  1368                           ; BSR set to: 0
  1369                           ;pathfinder_file.c: 31:                 backward(c->backward, mL, mR);
  1370   002F62  C0E1  F013         	movff	maze_search@mL,backward@mL
  1371   002F66  C0E2  F014         	movff	maze_search@mR,backward@mR
  1372   002F6A  EE20 F006          	lfsr	2,6
  1373   002F6E  51DF               	movf	maze_search@c& (0+255),w,b
  1374   002F70  26D9               	addwf	fsr2l,f,c
  1375   002F72  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1376   002F74  22DA               	addwfc	fsr2h,f,c
  1377   002F76  50DF               	movf	indf2,w,c
  1378   002F78  ECAB  F01C         	call	_backward
  1379   002F7C                     
  1380                           ;pathfinder_file.c: 32:                 rightTURN(c->right_90, mL, mR);
  1381   002F7C  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1382   002F80  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1383   002F84  0100               	movlb	0	; () banked
  1384   002F86  EE20 F001          	lfsr	2,1
  1385   002F8A  51DF               	movf	maze_search@c& (0+255),w,b
  1386   002F8C  26D9               	addwf	fsr2l,f,c
  1387   002F8E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1388   002F90  22DA               	addwfc	fsr2h,f,c
  1389   002F92  50DF               	movf	indf2,w,c
  1390   002F94  EC2D  F01B         	call	_rightTURN
  1391                           
  1392                           ;pathfinder_file.c: 33:             }
  1393   002F98  EF6F  F017         	goto	l4800
  1394   002F9C                     l4832:
  1395                           
  1396                           ; BSR set to: 0
  1397   002F9C  0E02               	movlw	2
  1398   002F9E  19E3               	xorwf	_Color_Value& (0+255),w,b
  1399   002FA0  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1400   002FA2  A4D8               	btfss	status,2,c
  1401   002FA4  EFD6  F017         	goto	u5501
  1402   002FA8  EFD8  F017         	goto	u5500
  1403   002FAC                     u5501:
  1404   002FAC  EFFE  F017         	goto	l4842
  1405   002FB0                     u5500:
  1406   002FB0                     
  1407                           ; BSR set to: 0
  1408                           ;pathfinder_file.c: 36:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1409   002FB0  0E6E               	movlw	low _Operation_History
  1410   002FB2  25E6               	addwf	_Operation_Count& (0+255),w,b
  1411   002FB4  6ED9               	movwf	fsr2l,c
  1412   002FB6  6ADA               	clrf	fsr2h,c
  1413   002FB8  0E01               	movlw	high _Operation_History
  1414   002FBA  22DA               	addwfc	fsr2h,f,c
  1415   002FBC  C0E3  FFDF         	movff	_Color_Value,indf2
  1416   002FC0                     
  1417                           ; BSR set to: 0
  1418                           ;pathfinder_file.c: 37:                 Operation_Count++;
  1419   002FC0  2BE6               	incf	_Operation_Count& (0+255),f,b
  1420   002FC2                     
  1421                           ; BSR set to: 0
  1422                           ;pathfinder_file.c: 38:                 backward(c->backward, mL, mR);
  1423   002FC2  C0E1  F013         	movff	maze_search@mL,backward@mL
  1424   002FC6  C0E2  F014         	movff	maze_search@mR,backward@mR
  1425   002FCA  EE20 F006          	lfsr	2,6
  1426   002FCE  51DF               	movf	maze_search@c& (0+255),w,b
  1427   002FD0  26D9               	addwf	fsr2l,f,c
  1428   002FD2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1429   002FD4  22DA               	addwfc	fsr2h,f,c
  1430   002FD6  50DF               	movf	indf2,w,c
  1431   002FD8  ECAB  F01C         	call	_backward
  1432   002FDC                     
  1433                           ;pathfinder_file.c: 39:                 leftTURN(c->left_90, mL, mR);
  1434   002FDC  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1435   002FE0  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1436   002FE4  0100               	movlb	0	; () banked
  1437   002FE6  EE20 F002          	lfsr	2,2
  1438   002FEA  51DF               	movf	maze_search@c& (0+255),w,b
  1439   002FEC  26D9               	addwf	fsr2l,f,c
  1440   002FEE  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1441   002FF0  22DA               	addwfc	fsr2h,f,c
  1442   002FF2  50DF               	movf	indf2,w,c
  1443   002FF4  ECEC  F01B         	call	_leftTURN
  1444                           
  1445                           ;pathfinder_file.c: 40:             }
  1446   002FF8  EF6F  F017         	goto	l4800
  1447   002FFC                     l4842:
  1448                           
  1449                           ; BSR set to: 0
  1450   002FFC  0E03               	movlw	3
  1451   002FFE  19E3               	xorwf	_Color_Value& (0+255),w,b
  1452   003000  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1453   003002  A4D8               	btfss	status,2,c
  1454   003004  EF06  F018         	goto	u5511
  1455   003008  EF08  F018         	goto	u5510
  1456   00300C                     u5511:
  1457   00300C  EF3C  F018         	goto	l4854
  1458   003010                     u5510:
  1459   003010                     
  1460                           ; BSR set to: 0
  1461                           ;pathfinder_file.c: 44:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1462   003010  0E6E               	movlw	low _Operation_History
  1463   003012  25E6               	addwf	_Operation_Count& (0+255),w,b
  1464   003014  6ED9               	movwf	fsr2l,c
  1465   003016  6ADA               	clrf	fsr2h,c
  1466   003018  0E01               	movlw	high _Operation_History
  1467   00301A  22DA               	addwfc	fsr2h,f,c
  1468   00301C  C0E3  FFDF         	movff	_Color_Value,indf2
  1469   003020                     
  1470                           ; BSR set to: 0
  1471                           ;pathfinder_file.c: 45:                 Operation_Count++;
  1472   003020  2BE6               	incf	_Operation_Count& (0+255),f,b
  1473   003022                     
  1474                           ; BSR set to: 0
  1475                           ;pathfinder_file.c: 46:                 backward(c->backward, mL, mR);
  1476   003022  C0E1  F013         	movff	maze_search@mL,backward@mL
  1477   003026  C0E2  F014         	movff	maze_search@mR,backward@mR
  1478   00302A  EE20 F006          	lfsr	2,6
  1479   00302E  51DF               	movf	maze_search@c& (0+255),w,b
  1480   003030  26D9               	addwf	fsr2l,f,c
  1481   003032  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1482   003034  22DA               	addwfc	fsr2h,f,c
  1483   003036  50DF               	movf	indf2,w,c
  1484   003038  ECAB  F01C         	call	_backward
  1485   00303C                     
  1486                           ;pathfinder_file.c: 47:                 rightTURN(c->right_90, mL, mR);
  1487   00303C  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1488   003040  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1489   003044  0100               	movlb	0	; () banked
  1490   003046  EE20 F001          	lfsr	2,1
  1491   00304A  51DF               	movf	maze_search@c& (0+255),w,b
  1492   00304C  26D9               	addwf	fsr2l,f,c
  1493   00304E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1494   003050  22DA               	addwfc	fsr2h,f,c
  1495   003052  50DF               	movf	indf2,w,c
  1496   003054  EC2D  F01B         	call	_rightTURN
  1497   003058                     
  1498                           ;pathfinder_file.c: 48:                 rightTURN(c->right_90, mL, mR);
  1499   003058  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1500   00305C  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1501   003060  0100               	movlb	0	; () banked
  1502   003062  EE20 F001          	lfsr	2,1
  1503   003066  51DF               	movf	maze_search@c& (0+255),w,b
  1504   003068  26D9               	addwf	fsr2l,f,c
  1505   00306A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1506   00306C  22DA               	addwfc	fsr2h,f,c
  1507   00306E  50DF               	movf	indf2,w,c
  1508   003070  EC2D  F01B         	call	_rightTURN
  1509                           
  1510                           ;pathfinder_file.c: 49:             }
  1511   003074  EF6F  F017         	goto	l4800
  1512   003078                     l4854:
  1513                           
  1514                           ; BSR set to: 0
  1515   003078  0E08               	movlw	8
  1516   00307A  19E3               	xorwf	_Color_Value& (0+255),w,b
  1517   00307C  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1518   00307E  A4D8               	btfss	status,2,c
  1519   003080  EF44  F018         	goto	u5521
  1520   003084  EF46  F018         	goto	u5520
  1521   003088                     u5521:
  1522   003088  EF8D  F018         	goto	l548
  1523   00308C                     u5520:
  1524   00308C                     
  1525                           ; BSR set to: 0
  1526                           ;pathfinder_file.c: 53:                 backward(c->backward, mL, mR);
  1527   00308C  C0E1  F013         	movff	maze_search@mL,backward@mL
  1528   003090  C0E2  F014         	movff	maze_search@mR,backward@mR
  1529   003094  EE20 F006          	lfsr	2,6
  1530   003098  51DF               	movf	maze_search@c& (0+255),w,b
  1531   00309A  26D9               	addwf	fsr2l,f,c
  1532   00309C  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1533   00309E  22DA               	addwfc	fsr2h,f,c
  1534   0030A0  50DF               	movf	indf2,w,c
  1535   0030A2  ECAB  F01C         	call	_backward
  1536                           
  1537                           ;pathfinder_file.c: 55:                 rightTURN(c->right_90, mL, mR);
  1538   0030A6  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1539   0030AA  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1540   0030AE  0100               	movlb	0	; () banked
  1541   0030B0  EE20 F001          	lfsr	2,1
  1542   0030B4  51DF               	movf	maze_search@c& (0+255),w,b
  1543   0030B6  26D9               	addwf	fsr2l,f,c
  1544   0030B8  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1545   0030BA  22DA               	addwfc	fsr2h,f,c
  1546   0030BC  50DF               	movf	indf2,w,c
  1547   0030BE  EC2D  F01B         	call	_rightTURN
  1548                           
  1549                           ;pathfinder_file.c: 56:                 rightTURN(c->right_90, mL, mR);
  1550   0030C2  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1551   0030C6  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1552   0030CA  0100               	movlb	0	; () banked
  1553   0030CC  EE20 F001          	lfsr	2,1
  1554   0030D0  51DF               	movf	maze_search@c& (0+255),w,b
  1555   0030D2  26D9               	addwf	fsr2l,f,c
  1556   0030D4  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1557   0030D6  22DA               	addwfc	fsr2h,f,c
  1558   0030D8  50DF               	movf	indf2,w,c
  1559   0030DA  EC2D  F01B         	call	_rightTURN
  1560                           
  1561                           ;pathfinder_file.c: 57:                 backward(c->backward, mL, mR);
  1562   0030DE  C0E1  F013         	movff	maze_search@mL,backward@mL
  1563   0030E2  C0E2  F014         	movff	maze_search@mR,backward@mR
  1564   0030E6  0100               	movlb	0	; () banked
  1565   0030E8  EE20 F006          	lfsr	2,6
  1566   0030EC  51DF               	movf	maze_search@c& (0+255),w,b
  1567   0030EE  26D9               	addwf	fsr2l,f,c
  1568   0030F0  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1569   0030F2  22DA               	addwfc	fsr2h,f,c
  1570   0030F4  50DF               	movf	indf2,w,c
  1571   0030F6  ECAB  F01C         	call	_backward
  1572                           
  1573                           ;pathfinder_file.c: 58:                 backward(c->backward, mL, mR);
  1574   0030FA  C0E1  F013         	movff	maze_search@mL,backward@mL
  1575   0030FE  C0E2  F014         	movff	maze_search@mR,backward@mR
  1576   003102  0100               	movlb	0	; () banked
  1577   003104  EE20 F006          	lfsr	2,6
  1578   003108  51DF               	movf	maze_search@c& (0+255),w,b
  1579   00310A  26D9               	addwf	fsr2l,f,c
  1580   00310C  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1581   00310E  22DA               	addwfc	fsr2h,f,c
  1582   003110  50DF               	movf	indf2,w,c
  1583   003112  ECAB  F01C         	call	_backward
  1584                           
  1585                           ;pathfinder_file.c: 59:                 break;
  1586   003116  EF8F  F018         	goto	l556
  1587   00311A                     l548:
  1588                           
  1589                           ; BSR set to: 0
  1590   00311A  EF6F  F017         	goto	l4800
  1591   00311E                     l556:
  1592   00311E  0012               	return		;funcret
  1593   003120                     __end_of_maze_search:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _color_click_init *****************
  1597 ;; Defined at:
  1598 ;;		line 7 in file "color.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;Total ram usage:        1 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 3
  1619 ;; This function calls:
  1620 ;;		_I2C_2_Master_Init
  1621 ;;		_color_writetoaddr
  1622 ;; This function is called by:
  1623 ;;		_maze_search
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text3
  1628   0046BC                     __ptext3:
  1629                           	callstack 0
  1630   0046BC                     _color_click_init:
  1631                           	callstack 26
  1632   0046BC                     
  1633                           ;color.c: 10:     I2C_2_Master_Init();
  1634   0046BC  ECB2  F023         	call	_I2C_2_Master_Init	;wreg free
  1635   0046C0                     
  1636                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1637   0046C0  0E01               	movlw	1
  1638   0046C2  6E03               	movwf	color_writetoaddr@value^0,c
  1639   0046C4  0E00               	movlw	0
  1640   0046C6  ECEE  F023         	call	_color_writetoaddr
  1641   0046CA                     
  1642                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1643   0046CA  0E3F               	movlw	63
  1644   0046CC  6E05               	movwf	??_color_click_init^0,c
  1645   0046CE  0E55               	movlw	85
  1646   0046D0                     u5727:
  1647   0046D0  2EE8               	decfsz	wreg,f,c
  1648   0046D2  D7FE               	bra	u5727
  1649   0046D4  2E05               	decfsz	??_color_click_init^0,f,c
  1650   0046D6  D7FC               	bra	u5727
  1651   0046D8  0000               	nop	
  1652   0046DA                     
  1653                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1654   0046DA  0E03               	movlw	3
  1655   0046DC  6E03               	movwf	color_writetoaddr@value^0,c
  1656   0046DE  0E00               	movlw	0
  1657   0046E0  ECEE  F023         	call	_color_writetoaddr
  1658   0046E4                     
  1659                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1660   0046E4  0ED5               	movlw	213
  1661   0046E6  6E03               	movwf	color_writetoaddr@value^0,c
  1662   0046E8  0E01               	movlw	1
  1663   0046EA  ECEE  F023         	call	_color_writetoaddr
  1664   0046EE                     
  1665                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  1666   0046EE  9287               	bcf	135,1,c	;volatile
  1667   0046F0                     
  1668                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  1669   0046F0  9881               	bcf	129,4,c	;volatile
  1670   0046F2                     
  1671                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  1672   0046F2  9E86               	bcf	134,7,c	;volatile
  1673   0046F4                     
  1674                           ;color.c: 30:     LATGbits.LATG1 = 1;
  1675   0046F4  827F               	bsf	127,1,c	;volatile
  1676   0046F6                     
  1677                           ;color.c: 31:     LATAbits.LATA4 = 1;
  1678   0046F6  8879               	bsf	121,4,c	;volatile
  1679   0046F8                     
  1680                           ;color.c: 32:     LATFbits.LATF7 = 1;
  1681   0046F8  8E7E               	bsf	126,7,c	;volatile
  1682   0046FA  0012               	return		;funcret
  1683   0046FC                     __end_of_color_click_init:
  1684                           	callstack 0
  1685                           
  1686 ;; *************** function _color_writetoaddr *****************
  1687 ;; Defined at:
  1688 ;;		line 37 in file "color.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  address         1    wreg     unsigned char 
  1691 ;;  value           1    2[COMRAM] unsigned char 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  address         1    3[COMRAM] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1703 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;Total ram usage:        2 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 2
  1710 ;; This function calls:
  1711 ;;		_I2C_2_Master_Start
  1712 ;;		_I2C_2_Master_Stop
  1713 ;;		_I2C_2_Master_Write
  1714 ;; This function is called by:
  1715 ;;		_color_click_init
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text4
  1720   0047DC                     __ptext4:
  1721                           	callstack 0
  1722   0047DC                     _color_writetoaddr:
  1723                           	callstack 26
  1724                           
  1725                           ;incstack = 0
  1726                           ;color_writetoaddr@address stored from wreg
  1727   0047DC  6E04               	movwf	color_writetoaddr@address^0,c
  1728   0047DE                     
  1729                           ;color.c: 38:     I2C_2_Master_Start();
  1730   0047DE  EC09  F024         	call	_I2C_2_Master_Start	;wreg free
  1731                           
  1732                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  1733   0047E2  0E52               	movlw	82
  1734   0047E4  ECFE  F023         	call	_I2C_2_Master_Write
  1735                           
  1736                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  1737   0047E8  5004               	movf	color_writetoaddr@address^0,w,c
  1738   0047EA  0980               	iorlw	128
  1739   0047EC  ECFE  F023         	call	_I2C_2_Master_Write
  1740                           
  1741                           ;color.c: 41:     I2C_2_Master_Write(value);
  1742   0047F0  5003               	movf	color_writetoaddr@value^0,w,c
  1743   0047F2  ECFE  F023         	call	_I2C_2_Master_Write
  1744                           
  1745                           ;color.c: 42:     I2C_2_Master_Stop();
  1746   0047F6  EC04  F024         	call	_I2C_2_Master_Stop	;wreg free
  1747   0047FA  0012               	return		;funcret
  1748   0047FC                     __end_of_color_writetoaddr:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _I2C_2_Master_Init *****************
  1752 ;; Defined at:
  1753 ;;		line 4 in file "i2c.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_color_click_init
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text5
  1781   004764                     __ptext5:
  1782                           	callstack 0
  1783   004764                     _I2C_2_Master_Init:
  1784                           	callstack 28
  1785   004764                     
  1786                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1787   004764  010E               	movlb	14	; () banked
  1788   004766  51D9               	movf	217,w,b	;volatile
  1789   004768  0BF0               	andlw	-16
  1790   00476A  0908               	iorlw	8
  1791   00476C  6FD9               	movwf	217,b	;volatile
  1792   00476E                     
  1793                           ; BSR set to: 14
  1794                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1795   00476E  8BD9               	bsf	217,5,b	;volatile
  1796                           
  1797                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1798   004770  0E9F               	movlw	159
  1799   004772  6FD6               	movwf	214,b	;volatile
  1800   004774                     
  1801                           ; BSR set to: 14
  1802                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1803   004774  8A84               	bsf	132,5,c	;volatile
  1804   004776                     
  1805                           ; BSR set to: 14
  1806                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1807   004776  8C84               	bsf	132,6,c	;volatile
  1808   004778                     
  1809                           ; BSR set to: 14
  1810                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1811   004778  9BA7               	bcf	167,5,b	;volatile
  1812   00477A                     
  1813                           ; BSR set to: 14
  1814                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1815   00477A  9DA7               	bcf	167,6,b	;volatile
  1816                           
  1817                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1818   00477C  0E1D               	movlw	29
  1819   00477E  6F1D               	movwf	29,b	;volatile
  1820                           
  1821                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1822   004780  0E1E               	movlw	30
  1823   004782  6F1C               	movwf	28,b	;volatile
  1824                           
  1825                           ;i2c.c: 18:   RD5PPS=0x1C;
  1826   004784  0E1C               	movlw	28
  1827   004786  6F6F               	movwf	111,b	;volatile
  1828                           
  1829                           ;i2c.c: 19:   RD6PPS=0x1B;
  1830   004788  0E1B               	movlw	27
  1831   00478A  6F70               	movwf	112,b	;volatile
  1832   00478C                     
  1833                           ; BSR set to: 14
  1834   00478C  0012               	return		;funcret
  1835   00478E                     __end_of_I2C_2_Master_Init:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _color_cardCheck *****************
  1839 ;; Defined at:
  1840 ;;		line 171 in file "color.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  V               4  123[BANK0 ] float 
  1845 ;;  S               4  119[BANK0 ] float 
  1846 ;;  H               4  115[BANK0 ] float 
  1847 ;;  c               4  109[BANK0 ] float 
  1848 ;;  b               4  105[BANK0 ] float 
  1849 ;;  g               4  101[BANK0 ] float 
  1850 ;;  r               4   97[BANK0 ] float 
  1851 ;;  card_color      2  113[BANK0 ] unsigned int 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2   91[COMRAM] unsigned int 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1864 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;Total ram usage:       32 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 4
  1868 ;; This function calls:
  1869 ;;		_RGB_to_HSV
  1870 ;;		___flge
  1871 ;;		___xxtofl
  1872 ;;		_color_read_Blue
  1873 ;;		_color_read_Clear
  1874 ;;		_color_read_Green
  1875 ;;		_color_read_Red
  1876 ;; This function is called by:
  1877 ;;		_maze_search
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text6
  1882   000E02                     __ptext6:
  1883                           	callstack 0
  1884   000E02                     _color_cardCheck:
  1885                           	callstack 25
  1886   000E02                     
  1887                           ;color.c: 174:     float r = color_read_Red();
  1888   000E02  EC7A  F022         	call	_color_read_Red	;wreg free
  1889   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1890   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1891   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1892   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1893   000E12  0E00               	movlw	0
  1894   000E14  EC93  F019         	call	___xxtofl
  1895   000E18  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  1896   000E1C  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  1897   000E20  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  1898   000E24  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  1899                           
  1900                           ;color.c: 175:     float g = color_read_Green();
  1901   000E28  ECA2  F022         	call	_color_read_Green	;wreg free
  1902   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1903   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1904   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1905   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1906   000E38  0E00               	movlw	0
  1907   000E3A  EC93  F019         	call	___xxtofl
  1908   000E3E  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  1909   000E42  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  1910   000E46  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  1911   000E4A  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  1912                           
  1913                           ;color.c: 176:     float b = color_read_Blue();
  1914   000E4E  ECF2  F022         	call	_color_read_Blue	;wreg free
  1915   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1916   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1917   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1918   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1919   000E5E  0E00               	movlw	0
  1920   000E60  EC93  F019         	call	___xxtofl
  1921   000E64  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  1922   000E68  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  1923   000E6C  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  1924   000E70  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  1925                           
  1926                           ;color.c: 179:     float c = color_read_Clear();
  1927   000E74  ECCA  F022         	call	_color_read_Clear	;wreg free
  1928   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1929   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1930   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1931   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1932   000E84  0E00               	movlw	0
  1933   000E86  EC93  F019         	call	___xxtofl
  1934   000E8A  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  1935   000E8E  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  1936   000E92  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  1937   000E96  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  1938   000E9A                     
  1939                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  1940   000E9A  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  1941   000E9E  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  1942   000EA2  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  1943   000EA6  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  1944   000EAA  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  1945   000EAE  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  1946   000EB2  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  1947   000EB6  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  1948   000EBA  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  1949   000EBE  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  1950   000EC2  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  1951   000EC6  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  1952   000ECA  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  1953   000ECE  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  1954   000ED2  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  1955   000ED6  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  1956   000EDA  0ED3               	movlw	low color_cardCheck@H
  1957   000EDC  0100               	movlb	0	; () banked
  1958   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  1959   000EE0  0ED7               	movlw	low color_cardCheck@S
  1960   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  1961   000EE4  0EDB               	movlw	low color_cardCheck@V
  1962   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  1963   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  1964   000EEC                     
  1965                           ;color.c: 195:     unsigned int card_color = 0;
  1966   000EEC  0E00               	movlw	0
  1967   000EEE  0100               	movlb	0	; () banked
  1968   000EF0  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  1969   000EF2  0E00               	movlw	0
  1970   000EF4  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  1971   000EF6                     
  1972                           ; BSR set to: 0
  1973                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  1974   000EF6  0E00               	movlw	0
  1975   000EF8  6E01               	movwf	___flge@ff1^0,c
  1976   000EFA  0E80               	movlw	128
  1977   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  1978   000EFE  0EB1               	movlw	177
  1979   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  1980   000F02  0E43               	movlw	67
  1981   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  1982   000F06  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  1983   000F0A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  1984   000F0E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  1985   000F12  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  1986   000F16  ECCD  F01F         	call	___flge	;wreg free
  1987   000F1A  B0D8               	btfsc	status,0,c
  1988   000F1C  EF92  F007         	goto	u3871
  1989   000F20  EF94  F007         	goto	u3870
  1990   000F24                     u3871:
  1991   000F24  EF18  F008         	goto	l3744
  1992   000F28                     u3870:
  1993   000F28  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  1994   000F2C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  1995   000F30  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  1996   000F34  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  1997   000F38  0E00               	movlw	0
  1998   000F3A  6E05               	movwf	___flge@ff2^0,c
  1999   000F3C  0E00               	movlw	0
  2000   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  2001   000F40  0EB4               	movlw	180
  2002   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  2003   000F44  0E43               	movlw	67
  2004   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  2005   000F48  ECCD  F01F         	call	___flge	;wreg free
  2006   000F4C  B0D8               	btfsc	status,0,c
  2007   000F4E  EFAB  F007         	goto	u3881
  2008   000F52  EFAD  F007         	goto	u3880
  2009   000F56                     u3881:
  2010   000F56  EF18  F008         	goto	l3744
  2011   000F5A                     u3880:
  2012   000F5A  0E00               	movlw	0
  2013   000F5C  6E01               	movwf	___flge@ff1^0,c
  2014   000F5E  0E00               	movlw	0
  2015   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  2016   000F62  0EAA               	movlw	170
  2017   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  2018   000F66  0E42               	movlw	66
  2019   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  2020   000F6A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2021   000F6E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2022   000F72  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2023   000F76  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2024   000F7A  ECCD  F01F         	call	___flge	;wreg free
  2025   000F7E  B0D8               	btfsc	status,0,c
  2026   000F80  EFC4  F007         	goto	u3891
  2027   000F84  EFC6  F007         	goto	u3890
  2028   000F88                     u3891:
  2029   000F88  EF18  F008         	goto	l3744
  2030   000F8C                     u3890:
  2031   000F8C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2032   000F90  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2033   000F94  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2034   000F98  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2035   000F9C  0E00               	movlw	0
  2036   000F9E  6E05               	movwf	___flge@ff2^0,c
  2037   000FA0  0E00               	movlw	0
  2038   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  2039   000FA4  0EB4               	movlw	180
  2040   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  2041   000FA8  0E42               	movlw	66
  2042   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  2043   000FAC  ECCD  F01F         	call	___flge	;wreg free
  2044   000FB0  B0D8               	btfsc	status,0,c
  2045   000FB2  EFDD  F007         	goto	u3901
  2046   000FB6  EFDF  F007         	goto	u3900
  2047   000FBA                     u3901:
  2048   000FBA  EF18  F008         	goto	l3744
  2049   000FBE                     u3900:
  2050   000FBE  0E00               	movlw	0
  2051   000FC0  6E01               	movwf	___flge@ff1^0,c
  2052   000FC2  0E00               	movlw	0
  2053   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  2054   000FC6  0EA0               	movlw	160
  2055   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  2056   000FCA  0E42               	movlw	66
  2057   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  2058   000FCE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2059   000FD2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2060   000FD6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2061   000FDA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2062   000FDE  ECCD  F01F         	call	___flge	;wreg free
  2063   000FE2  B0D8               	btfsc	status,0,c
  2064   000FE4  EFF6  F007         	goto	u3911
  2065   000FE8  EFF8  F007         	goto	u3910
  2066   000FEC                     u3911:
  2067   000FEC  EF18  F008         	goto	l3744
  2068   000FF0                     u3910:
  2069   000FF0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2070   000FF4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2071   000FF8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2072   000FFC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2073   001000  0E00               	movlw	0
  2074   001002  6E05               	movwf	___flge@ff2^0,c
  2075   001004  0E00               	movlw	0
  2076   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  2077   001008  0EAA               	movlw	170
  2078   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  2079   00100C  0E42               	movlw	66
  2080   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  2081   001010  ECCD  F01F         	call	___flge	;wreg free
  2082   001014  B0D8               	btfsc	status,0,c
  2083   001016  EF0F  F008         	goto	u3921
  2084   00101A  EF11  F008         	goto	u3920
  2085   00101E                     u3921:
  2086   00101E  EF18  F008         	goto	l3744
  2087   001022                     u3920:
  2088   001022  0E00               	movlw	0
  2089   001024  0100               	movlb	0	; () banked
  2090   001026  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2091   001028  0E01               	movlw	1
  2092   00102A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2093   00102C  EF18  F00C         	goto	l3836
  2094   001030                     l3744:
  2095   001030  0E00               	movlw	0
  2096   001032  6E01               	movwf	___flge@ff1^0,c
  2097   001034  0E00               	movlw	0
  2098   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  2099   001038  0E86               	movlw	134
  2100   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  2101   00103C  0E42               	movlw	66
  2102   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  2103   001040  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2104   001044  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2105   001048  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2106   00104C  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2107   001050  ECCD  F01F         	call	___flge	;wreg free
  2108   001054  B0D8               	btfsc	status,0,c
  2109   001056  EF2F  F008         	goto	u3931
  2110   00105A  EF31  F008         	goto	u3930
  2111   00105E                     u3931:
  2112   00105E  EFB5  F008         	goto	l3758
  2113   001062                     u3930:
  2114   001062  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2115   001066  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2116   00106A  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2117   00106E  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2118   001072  0E00               	movlw	0
  2119   001074  6E05               	movwf	___flge@ff2^0,c
  2120   001076  0E00               	movlw	0
  2121   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  2122   00107A  0E9E               	movlw	158
  2123   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  2124   00107E  0E42               	movlw	66
  2125   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  2126   001082  ECCD  F01F         	call	___flge	;wreg free
  2127   001086  B0D8               	btfsc	status,0,c
  2128   001088  EF48  F008         	goto	u3941
  2129   00108C  EF4A  F008         	goto	u3940
  2130   001090                     u3941:
  2131   001090  EFB5  F008         	goto	l3758
  2132   001094                     u3940:
  2133   001094  0E00               	movlw	0
  2134   001096  6E01               	movwf	___flge@ff1^0,c
  2135   001098  0E00               	movlw	0
  2136   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  2137   00109C  0E48               	movlw	72
  2138   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  2139   0010A0  0E42               	movlw	66
  2140   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  2141   0010A4  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2142   0010A8  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2143   0010AC  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2144   0010B0  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2145   0010B4  ECCD  F01F         	call	___flge	;wreg free
  2146   0010B8  B0D8               	btfsc	status,0,c
  2147   0010BA  EF61  F008         	goto	u3951
  2148   0010BE  EF63  F008         	goto	u3950
  2149   0010C2                     u3951:
  2150   0010C2  EFB5  F008         	goto	l3758
  2151   0010C6                     u3950:
  2152   0010C6  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2153   0010CA  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2154   0010CE  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2155   0010D2  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2156   0010D6  0E00               	movlw	0
  2157   0010D8  6E05               	movwf	___flge@ff2^0,c
  2158   0010DA  0E00               	movlw	0
  2159   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  2160   0010DE  0E64               	movlw	100
  2161   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  2162   0010E2  0E42               	movlw	66
  2163   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  2164   0010E6  ECCD  F01F         	call	___flge	;wreg free
  2165   0010EA  B0D8               	btfsc	status,0,c
  2166   0010EC  EF7A  F008         	goto	u3961
  2167   0010F0  EF7C  F008         	goto	u3960
  2168   0010F4                     u3961:
  2169   0010F4  EFB5  F008         	goto	l3758
  2170   0010F8                     u3960:
  2171   0010F8  0E00               	movlw	0
  2172   0010FA  6E01               	movwf	___flge@ff1^0,c
  2173   0010FC  0E00               	movlw	0
  2174   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  2175   001100  0E20               	movlw	32
  2176   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  2177   001104  0E42               	movlw	66
  2178   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  2179   001108  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2180   00110C  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2181   001110  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2182   001114  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2183   001118  ECCD  F01F         	call	___flge	;wreg free
  2184   00111C  B0D8               	btfsc	status,0,c
  2185   00111E  EF93  F008         	goto	u3971
  2186   001122  EF95  F008         	goto	u3970
  2187   001126                     u3971:
  2188   001126  EFB5  F008         	goto	l3758
  2189   00112A                     u3970:
  2190   00112A  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2191   00112E  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2192   001132  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2193   001136  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2194   00113A  0E00               	movlw	0
  2195   00113C  6E05               	movwf	___flge@ff2^0,c
  2196   00113E  0E00               	movlw	0
  2197   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  2198   001142  0E38               	movlw	56
  2199   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  2200   001146  0E42               	movlw	66
  2201   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  2202   00114A  ECCD  F01F         	call	___flge	;wreg free
  2203   00114E  B0D8               	btfsc	status,0,c
  2204   001150  EFAC  F008         	goto	u3981
  2205   001154  EFAE  F008         	goto	u3980
  2206   001158                     u3981:
  2207   001158  EFB5  F008         	goto	l3758
  2208   00115C                     u3980:
  2209   00115C  0E00               	movlw	0
  2210   00115E  0100               	movlb	0	; () banked
  2211   001160  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2212   001162  0E02               	movlw	2
  2213   001164  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2214   001166  EF18  F00C         	goto	l3836
  2215   00116A                     l3758:
  2216   00116A  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2217   00116E  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2218   001172  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2219   001176  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2220   00117A  0E00               	movlw	0
  2221   00117C  6E05               	movwf	___flge@ff2^0,c
  2222   00117E  0E00               	movlw	0
  2223   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  2224   001182  0E20               	movlw	32
  2225   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  2226   001186  0E41               	movlw	65
  2227   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  2228   00118A  ECCD  F01F         	call	___flge	;wreg free
  2229   00118E  B0D8               	btfsc	status,0,c
  2230   001190  EFCC  F008         	goto	u3991
  2231   001194  EFCE  F008         	goto	u3990
  2232   001198                     u3991:
  2233   001198  EF07  F009         	goto	l3766
  2234   00119C                     u3990:
  2235   00119C  0E00               	movlw	0
  2236   00119E  6E01               	movwf	___flge@ff1^0,c
  2237   0011A0  0E00               	movlw	0
  2238   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  2239   0011A4  0EF0               	movlw	240
  2240   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  2241   0011A8  0E41               	movlw	65
  2242   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  2243   0011AC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2244   0011B0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2245   0011B4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2246   0011B8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2247   0011BC  ECCD  F01F         	call	___flge	;wreg free
  2248   0011C0  B0D8               	btfsc	status,0,c
  2249   0011C2  EFE5  F008         	goto	u4001
  2250   0011C6  EFE7  F008         	goto	u4000
  2251   0011CA                     u4001:
  2252   0011CA  EF07  F009         	goto	l3766
  2253   0011CE                     u4000:
  2254   0011CE  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2255   0011D2  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2256   0011D6  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2257   0011DA  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2258   0011DE  0E00               	movlw	0
  2259   0011E0  6E05               	movwf	___flge@ff2^0,c
  2260   0011E2  0E00               	movlw	0
  2261   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  2262   0011E6  0E0C               	movlw	12
  2263   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  2264   0011EA  0E42               	movlw	66
  2265   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  2266   0011EE  ECCD  F01F         	call	___flge	;wreg free
  2267   0011F2  B0D8               	btfsc	status,0,c
  2268   0011F4  EFFE  F008         	goto	u4011
  2269   0011F8  EF00  F009         	goto	u4010
  2270   0011FC                     u4011:
  2271   0011FC  EF07  F009         	goto	l3766
  2272   001200                     u4010:
  2273   001200  0E00               	movlw	0
  2274   001202  0100               	movlb	0	; () banked
  2275   001204  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2276   001206  0E03               	movlw	3
  2277   001208  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2278   00120A  EF18  F00C         	goto	l3836
  2279   00120E                     l3766:
  2280   00120E  0E00               	movlw	0
  2281   001210  6E01               	movwf	___flge@ff1^0,c
  2282   001212  0E00               	movlw	0
  2283   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  2284   001216  0EA0               	movlw	160
  2285   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  2286   00121A  0E41               	movlw	65
  2287   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  2288   00121E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2289   001222  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2290   001226  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2291   00122A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2292   00122E  ECCD  F01F         	call	___flge	;wreg free
  2293   001232  B0D8               	btfsc	status,0,c
  2294   001234  EF1E  F009         	goto	u4021
  2295   001238  EF20  F009         	goto	u4020
  2296   00123C                     u4021:
  2297   00123C  EFA4  F009         	goto	l3780
  2298   001240                     u4020:
  2299   001240  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2300   001244  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2301   001248  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2302   00124C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2303   001250  0E00               	movlw	0
  2304   001252  6E05               	movwf	___flge@ff2^0,c
  2305   001254  0E00               	movlw	0
  2306   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  2307   001258  0EC8               	movlw	200
  2308   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  2309   00125C  0E41               	movlw	65
  2310   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  2311   001260  ECCD  F01F         	call	___flge	;wreg free
  2312   001264  B0D8               	btfsc	status,0,c
  2313   001266  EF37  F009         	goto	u4031
  2314   00126A  EF39  F009         	goto	u4030
  2315   00126E                     u4031:
  2316   00126E  EFA4  F009         	goto	l3780
  2317   001272                     u4030:
  2318   001272  0E00               	movlw	0
  2319   001274  6E01               	movwf	___flge@ff1^0,c
  2320   001276  0E00               	movlw	0
  2321   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  2322   00127A  0E82               	movlw	130
  2323   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  2324   00127E  0E42               	movlw	66
  2325   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  2326   001282  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2327   001286  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2328   00128A  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2329   00128E  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2330   001292  ECCD  F01F         	call	___flge	;wreg free
  2331   001296  B0D8               	btfsc	status,0,c
  2332   001298  EF50  F009         	goto	u4041
  2333   00129C  EF52  F009         	goto	u4040
  2334   0012A0                     u4041:
  2335   0012A0  EFA4  F009         	goto	l3780
  2336   0012A4                     u4040:
  2337   0012A4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2338   0012A8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2339   0012AC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2340   0012B0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2341   0012B4  0E00               	movlw	0
  2342   0012B6  6E05               	movwf	___flge@ff2^0,c
  2343   0012B8  0E00               	movlw	0
  2344   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2345   0012BC  0E8C               	movlw	140
  2346   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2347   0012C0  0E42               	movlw	66
  2348   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2349   0012C4  ECCD  F01F         	call	___flge	;wreg free
  2350   0012C8  B0D8               	btfsc	status,0,c
  2351   0012CA  EF69  F009         	goto	u4051
  2352   0012CE  EF6B  F009         	goto	u4050
  2353   0012D2                     u4051:
  2354   0012D2  EFA4  F009         	goto	l3780
  2355   0012D6                     u4050:
  2356   0012D6  0E00               	movlw	0
  2357   0012D8  6E01               	movwf	___flge@ff1^0,c
  2358   0012DA  0E00               	movlw	0
  2359   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  2360   0012DE  0E58               	movlw	88
  2361   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  2362   0012E2  0E42               	movlw	66
  2363   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  2364   0012E6  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2365   0012EA  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2366   0012EE  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2367   0012F2  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2368   0012F6  ECCD  F01F         	call	___flge	;wreg free
  2369   0012FA  B0D8               	btfsc	status,0,c
  2370   0012FC  EF82  F009         	goto	u4061
  2371   001300  EF84  F009         	goto	u4060
  2372   001304                     u4061:
  2373   001304  EFA4  F009         	goto	l3780
  2374   001308                     u4060:
  2375   001308  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2376   00130C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2377   001310  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2378   001314  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2379   001318  0E00               	movlw	0
  2380   00131A  6E05               	movwf	___flge@ff2^0,c
  2381   00131C  0E00               	movlw	0
  2382   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  2383   001320  0E64               	movlw	100
  2384   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  2385   001324  0E42               	movlw	66
  2386   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  2387   001328  ECCD  F01F         	call	___flge	;wreg free
  2388   00132C  B0D8               	btfsc	status,0,c
  2389   00132E  EF9B  F009         	goto	u4071
  2390   001332  EF9D  F009         	goto	u4070
  2391   001336                     u4071:
  2392   001336  EFA4  F009         	goto	l3780
  2393   00133A                     u4070:
  2394   00133A  0E00               	movlw	0
  2395   00133C  0100               	movlb	0	; () banked
  2396   00133E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2397   001340  0E04               	movlw	4
  2398   001342  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2399   001344  EF18  F00C         	goto	l3836
  2400   001348                     l3780:
  2401   001348  0E00               	movlw	0
  2402   00134A  6E01               	movwf	___flge@ff1^0,c
  2403   00134C  0E00               	movlw	0
  2404   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  2405   001350  0E50               	movlw	80
  2406   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  2407   001354  0E41               	movlw	65
  2408   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  2409   001358  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2410   00135C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2411   001360  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2412   001364  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2413   001368  ECCD  F01F         	call	___flge	;wreg free
  2414   00136C  B0D8               	btfsc	status,0,c
  2415   00136E  EFBB  F009         	goto	u4081
  2416   001372  EFBD  F009         	goto	u4080
  2417   001376                     u4081:
  2418   001376  EF41  F00A         	goto	l3794
  2419   00137A                     u4080:
  2420   00137A  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2421   00137E  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2422   001382  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2423   001386  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2424   00138A  0E00               	movlw	0
  2425   00138C  6E05               	movwf	___flge@ff2^0,c
  2426   00138E  0E00               	movlw	0
  2427   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  2428   001392  0E90               	movlw	144
  2429   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  2430   001396  0E41               	movlw	65
  2431   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  2432   00139A  ECCD  F01F         	call	___flge	;wreg free
  2433   00139E  B0D8               	btfsc	status,0,c
  2434   0013A0  EFD4  F009         	goto	u4091
  2435   0013A4  EFD6  F009         	goto	u4090
  2436   0013A8                     u4091:
  2437   0013A8  EF41  F00A         	goto	l3794
  2438   0013AC                     u4090:
  2439   0013AC  0E00               	movlw	0
  2440   0013AE  6E01               	movwf	___flge@ff1^0,c
  2441   0013B0  0E00               	movlw	0
  2442   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  2443   0013B4  0E5C               	movlw	92
  2444   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  2445   0013B8  0E42               	movlw	66
  2446   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  2447   0013BC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2448   0013C0  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2449   0013C4  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2450   0013C8  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2451   0013CC  ECCD  F01F         	call	___flge	;wreg free
  2452   0013D0  B0D8               	btfsc	status,0,c
  2453   0013D2  EFED  F009         	goto	u4101
  2454   0013D6  EFEF  F009         	goto	u4100
  2455   0013DA                     u4101:
  2456   0013DA  EF41  F00A         	goto	l3794
  2457   0013DE                     u4100:
  2458   0013DE  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2459   0013E2  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2460   0013E6  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2461   0013EA  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2462   0013EE  0E00               	movlw	0
  2463   0013F0  6E05               	movwf	___flge@ff2^0,c
  2464   0013F2  0E00               	movlw	0
  2465   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  2466   0013F6  0E70               	movlw	112
  2467   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  2468   0013FA  0E42               	movlw	66
  2469   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  2470   0013FE  ECCD  F01F         	call	___flge	;wreg free
  2471   001402  B0D8               	btfsc	status,0,c
  2472   001404  EF06  F00A         	goto	u4111
  2473   001408  EF08  F00A         	goto	u4110
  2474   00140C                     u4111:
  2475   00140C  EF41  F00A         	goto	l3794
  2476   001410                     u4110:
  2477   001410  0E00               	movlw	0
  2478   001412  6E01               	movwf	___flge@ff1^0,c
  2479   001414  0E00               	movlw	0
  2480   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  2481   001418  0E48               	movlw	72
  2482   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  2483   00141C  0E42               	movlw	66
  2484   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  2485   001420  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2486   001424  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2487   001428  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2488   00142C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2489   001430  ECCD  F01F         	call	___flge	;wreg free
  2490   001434  B0D8               	btfsc	status,0,c
  2491   001436  EF1F  F00A         	goto	u4121
  2492   00143A  EF21  F00A         	goto	u4120
  2493   00143E                     u4121:
  2494   00143E  EF41  F00A         	goto	l3794
  2495   001442                     u4120:
  2496   001442  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2497   001446  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2498   00144A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2499   00144E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2500   001452  0E00               	movlw	0
  2501   001454  6E05               	movwf	___flge@ff2^0,c
  2502   001456  0E00               	movlw	0
  2503   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  2504   00145A  0E58               	movlw	88
  2505   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  2506   00145E  0E42               	movlw	66
  2507   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  2508   001462  ECCD  F01F         	call	___flge	;wreg free
  2509   001466  B0D8               	btfsc	status,0,c
  2510   001468  EF38  F00A         	goto	u4131
  2511   00146C  EF3A  F00A         	goto	u4130
  2512   001470                     u4131:
  2513   001470  EF41  F00A         	goto	l3794
  2514   001474                     u4130:
  2515   001474  0E00               	movlw	0
  2516   001476  0100               	movlb	0	; () banked
  2517   001478  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2518   00147A  0E05               	movlw	5
  2519   00147C  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2520   00147E  EF18  F00C         	goto	l3836
  2521   001482                     l3794:
  2522   001482  0E00               	movlw	0
  2523   001484  6E01               	movwf	___flge@ff1^0,c
  2524   001486  0E00               	movlw	0
  2525   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  2526   00148A  0EA0               	movlw	160
  2527   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  2528   00148E  0E40               	movlw	64
  2529   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  2530   001492  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2531   001496  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2532   00149A  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2533   00149E  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2534   0014A2  ECCD  F01F         	call	___flge	;wreg free
  2535   0014A6  B0D8               	btfsc	status,0,c
  2536   0014A8  EF58  F00A         	goto	u4141
  2537   0014AC  EF5A  F00A         	goto	u4140
  2538   0014B0                     u4141:
  2539   0014B0  EFDE  F00A         	goto	l3808
  2540   0014B4                     u4140:
  2541   0014B4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2542   0014B8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2543   0014BC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2544   0014C0  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2545   0014C4  0E00               	movlw	0
  2546   0014C6  6E05               	movwf	___flge@ff2^0,c
  2547   0014C8  0E00               	movlw	0
  2548   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  2549   0014CC  0E20               	movlw	32
  2550   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  2551   0014D0  0E41               	movlw	65
  2552   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  2553   0014D4  ECCD  F01F         	call	___flge	;wreg free
  2554   0014D8  B0D8               	btfsc	status,0,c
  2555   0014DA  EF71  F00A         	goto	u4151
  2556   0014DE  EF73  F00A         	goto	u4150
  2557   0014E2                     u4151:
  2558   0014E2  EFDE  F00A         	goto	l3808
  2559   0014E6                     u4150:
  2560   0014E6  0E00               	movlw	0
  2561   0014E8  6E01               	movwf	___flge@ff1^0,c
  2562   0014EA  0E00               	movlw	0
  2563   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  2564   0014EE  0E8C               	movlw	140
  2565   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  2566   0014F2  0E42               	movlw	66
  2567   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  2568   0014F6  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2569   0014FA  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2570   0014FE  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2571   001502  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2572   001506  ECCD  F01F         	call	___flge	;wreg free
  2573   00150A  B0D8               	btfsc	status,0,c
  2574   00150C  EF8A  F00A         	goto	u4161
  2575   001510  EF8C  F00A         	goto	u4160
  2576   001514                     u4161:
  2577   001514  EFDE  F00A         	goto	l3808
  2578   001518                     u4160:
  2579   001518  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2580   00151C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2581   001520  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2582   001524  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2583   001528  0E00               	movlw	0
  2584   00152A  6E05               	movwf	___flge@ff2^0,c
  2585   00152C  0E00               	movlw	0
  2586   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  2587   001530  0E96               	movlw	150
  2588   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  2589   001534  0E42               	movlw	66
  2590   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  2591   001538  ECCD  F01F         	call	___flge	;wreg free
  2592   00153C  B0D8               	btfsc	status,0,c
  2593   00153E  EFA3  F00A         	goto	u4171
  2594   001542  EFA5  F00A         	goto	u4170
  2595   001546                     u4171:
  2596   001546  EFDE  F00A         	goto	l3808
  2597   00154A                     u4170:
  2598   00154A  0E00               	movlw	0
  2599   00154C  6E01               	movwf	___flge@ff1^0,c
  2600   00154E  0E00               	movlw	0
  2601   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  2602   001552  0E78               	movlw	120
  2603   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  2604   001556  0E42               	movlw	66
  2605   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  2606   00155A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2607   00155E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2608   001562  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2609   001566  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2610   00156A  ECCD  F01F         	call	___flge	;wreg free
  2611   00156E  B0D8               	btfsc	status,0,c
  2612   001570  EFBC  F00A         	goto	u4181
  2613   001574  EFBE  F00A         	goto	u4180
  2614   001578                     u4181:
  2615   001578  EFDE  F00A         	goto	l3808
  2616   00157C                     u4180:
  2617   00157C  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2618   001580  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2619   001584  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2620   001588  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2621   00158C  0E00               	movlw	0
  2622   00158E  6E05               	movwf	___flge@ff2^0,c
  2623   001590  0E00               	movlw	0
  2624   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  2625   001594  0E86               	movlw	134
  2626   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  2627   001598  0E42               	movlw	66
  2628   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  2629   00159C  ECCD  F01F         	call	___flge	;wreg free
  2630   0015A0  B0D8               	btfsc	status,0,c
  2631   0015A2  EFD5  F00A         	goto	u4191
  2632   0015A6  EFD7  F00A         	goto	u4190
  2633   0015AA                     u4191:
  2634   0015AA  EFDE  F00A         	goto	l3808
  2635   0015AE                     u4190:
  2636   0015AE  0E00               	movlw	0
  2637   0015B0  0100               	movlb	0	; () banked
  2638   0015B2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2639   0015B4  0E06               	movlw	6
  2640   0015B6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2641   0015B8  EF18  F00C         	goto	l3836
  2642   0015BC                     l3808:
  2643   0015BC  0E00               	movlw	0
  2644   0015BE  6E01               	movwf	___flge@ff1^0,c
  2645   0015C0  0E00               	movlw	0
  2646   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  2647   0015C4  0E94               	movlw	148
  2648   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  2649   0015C8  0E42               	movlw	66
  2650   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  2651   0015CC  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2652   0015D0  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2653   0015D4  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2654   0015D8  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2655   0015DC  ECCD  F01F         	call	___flge	;wreg free
  2656   0015E0  B0D8               	btfsc	status,0,c
  2657   0015E2  EFF5  F00A         	goto	u4201
  2658   0015E6  EFF7  F00A         	goto	u4200
  2659   0015EA                     u4201:
  2660   0015EA  EF7B  F00B         	goto	l3822
  2661   0015EE                     u4200:
  2662   0015EE  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2663   0015F2  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2664   0015F6  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2665   0015FA  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2666   0015FE  0E00               	movlw	0
  2667   001600  6E05               	movwf	___flge@ff2^0,c
  2668   001602  0E00               	movlw	0
  2669   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  2670   001606  0EAA               	movlw	170
  2671   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  2672   00160A  0E42               	movlw	66
  2673   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  2674   00160E  ECCD  F01F         	call	___flge	;wreg free
  2675   001612  B0D8               	btfsc	status,0,c
  2676   001614  EF0E  F00B         	goto	u4211
  2677   001618  EF10  F00B         	goto	u4210
  2678   00161C                     u4211:
  2679   00161C  EF7B  F00B         	goto	l3822
  2680   001620                     u4210:
  2681   001620  0E00               	movlw	0
  2682   001622  6E01               	movwf	___flge@ff1^0,c
  2683   001624  0E00               	movlw	0
  2684   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  2685   001628  0EE0               	movlw	224
  2686   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  2687   00162C  0E41               	movlw	65
  2688   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  2689   001630  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2690   001634  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2691   001638  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2692   00163C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2693   001640  ECCD  F01F         	call	___flge	;wreg free
  2694   001644  B0D8               	btfsc	status,0,c
  2695   001646  EF27  F00B         	goto	u4221
  2696   00164A  EF29  F00B         	goto	u4220
  2697   00164E                     u4221:
  2698   00164E  EF7B  F00B         	goto	l3822
  2699   001652                     u4220:
  2700   001652  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2701   001656  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2702   00165A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2703   00165E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2704   001662  0E00               	movlw	0
  2705   001664  6E05               	movwf	___flge@ff2^0,c
  2706   001666  0E00               	movlw	0
  2707   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  2708   00166A  0E04               	movlw	4
  2709   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  2710   00166E  0E42               	movlw	66
  2711   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  2712   001672  ECCD  F01F         	call	___flge	;wreg free
  2713   001676  B0D8               	btfsc	status,0,c
  2714   001678  EF40  F00B         	goto	u4231
  2715   00167C  EF42  F00B         	goto	u4230
  2716   001680                     u4231:
  2717   001680  EF7B  F00B         	goto	l3822
  2718   001684                     u4230:
  2719   001684  0E00               	movlw	0
  2720   001686  6E01               	movwf	___flge@ff1^0,c
  2721   001688  0E00               	movlw	0
  2722   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  2723   00168C  0E14               	movlw	20
  2724   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  2725   001690  0E42               	movlw	66
  2726   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  2727   001694  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2728   001698  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2729   00169C  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2730   0016A0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2731   0016A4  ECCD  F01F         	call	___flge	;wreg free
  2732   0016A8  B0D8               	btfsc	status,0,c
  2733   0016AA  EF59  F00B         	goto	u4241
  2734   0016AE  EF5B  F00B         	goto	u4240
  2735   0016B2                     u4241:
  2736   0016B2  EF7B  F00B         	goto	l3822
  2737   0016B6                     u4240:
  2738   0016B6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2739   0016BA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2740   0016BE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2741   0016C2  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2742   0016C6  0E00               	movlw	0
  2743   0016C8  6E05               	movwf	___flge@ff2^0,c
  2744   0016CA  0E00               	movlw	0
  2745   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  2746   0016CE  0E28               	movlw	40
  2747   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  2748   0016D2  0E42               	movlw	66
  2749   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  2750   0016D6  ECCD  F01F         	call	___flge	;wreg free
  2751   0016DA  B0D8               	btfsc	status,0,c
  2752   0016DC  EF72  F00B         	goto	u4251
  2753   0016E0  EF74  F00B         	goto	u4250
  2754   0016E4                     u4251:
  2755   0016E4  EF7B  F00B         	goto	l3822
  2756   0016E8                     u4250:
  2757   0016E8  0E00               	movlw	0
  2758   0016EA  0100               	movlb	0	; () banked
  2759   0016EC  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2760   0016EE  0E07               	movlw	7
  2761   0016F0  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2762   0016F2  EF18  F00C         	goto	l3836
  2763   0016F6                     l3822:
  2764   0016F6  0E00               	movlw	0
  2765   0016F8  6E01               	movwf	___flge@ff1^0,c
  2766   0016FA  0E00               	movlw	0
  2767   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  2768   0016FE  0EB0               	movlw	176
  2769   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  2770   001702  0E41               	movlw	65
  2771   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  2772   001706  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2773   00170A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2774   00170E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2775   001712  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2776   001716  ECCD  F01F         	call	___flge	;wreg free
  2777   00171A  B0D8               	btfsc	status,0,c
  2778   00171C  EF92  F00B         	goto	u4261
  2779   001720  EF94  F00B         	goto	u4260
  2780   001724                     u4261:
  2781   001724  EF18  F00C         	goto	l99
  2782   001728                     u4260:
  2783   001728  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2784   00172C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2785   001730  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2786   001734  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2787   001738  0E00               	movlw	0
  2788   00173A  6E05               	movwf	___flge@ff2^0,c
  2789   00173C  0E00               	movlw	0
  2790   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  2791   001740  0ED8               	movlw	216
  2792   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  2793   001744  0E41               	movlw	65
  2794   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  2795   001748  ECCD  F01F         	call	___flge	;wreg free
  2796   00174C  B0D8               	btfsc	status,0,c
  2797   00174E  EFAB  F00B         	goto	u4271
  2798   001752  EFAD  F00B         	goto	u4270
  2799   001756                     u4271:
  2800   001756  EF18  F00C         	goto	l99
  2801   00175A                     u4270:
  2802   00175A  0E00               	movlw	0
  2803   00175C  6E01               	movwf	___flge@ff1^0,c
  2804   00175E  0E00               	movlw	0
  2805   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  2806   001762  0E40               	movlw	64
  2807   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  2808   001766  0E42               	movlw	66
  2809   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  2810   00176A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2811   00176E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2812   001772  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2813   001776  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2814   00177A  ECCD  F01F         	call	___flge	;wreg free
  2815   00177E  B0D8               	btfsc	status,0,c
  2816   001780  EFC4  F00B         	goto	u4281
  2817   001784  EFC6  F00B         	goto	u4280
  2818   001788                     u4281:
  2819   001788  EF18  F00C         	goto	l99
  2820   00178C                     u4280:
  2821   00178C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2822   001790  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2823   001794  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2824   001798  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2825   00179C  0E00               	movlw	0
  2826   00179E  6E05               	movwf	___flge@ff2^0,c
  2827   0017A0  0E00               	movlw	0
  2828   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  2829   0017A4  0E54               	movlw	84
  2830   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  2831   0017A8  0E42               	movlw	66
  2832   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  2833   0017AC  ECCD  F01F         	call	___flge	;wreg free
  2834   0017B0  B0D8               	btfsc	status,0,c
  2835   0017B2  EFDD  F00B         	goto	u4291
  2836   0017B6  EFDF  F00B         	goto	u4290
  2837   0017BA                     u4291:
  2838   0017BA  EF18  F00C         	goto	l99
  2839   0017BE                     u4290:
  2840   0017BE  0E00               	movlw	0
  2841   0017C0  6E01               	movwf	___flge@ff1^0,c
  2842   0017C2  0E00               	movlw	0
  2843   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  2844   0017C6  0E34               	movlw	52
  2845   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  2846   0017CA  0E42               	movlw	66
  2847   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  2848   0017CE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2849   0017D2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2850   0017D6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2851   0017DA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2852   0017DE  ECCD  F01F         	call	___flge	;wreg free
  2853   0017E2  B0D8               	btfsc	status,0,c
  2854   0017E4  EFF6  F00B         	goto	u4301
  2855   0017E8  EFF8  F00B         	goto	u4300
  2856   0017EC                     u4301:
  2857   0017EC  EF18  F00C         	goto	l99
  2858   0017F0                     u4300:
  2859   0017F0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2860   0017F4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2861   0017F8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2862   0017FC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2863   001800  0E00               	movlw	0
  2864   001802  6E05               	movwf	___flge@ff2^0,c
  2865   001804  0E00               	movlw	0
  2866   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  2867   001808  0E48               	movlw	72
  2868   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  2869   00180C  0E42               	movlw	66
  2870   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  2871   001810  ECCD  F01F         	call	___flge	;wreg free
  2872   001814  B0D8               	btfsc	status,0,c
  2873   001816  EF0F  F00C         	goto	u4311
  2874   00181A  EF11  F00C         	goto	u4310
  2875   00181E                     u4311:
  2876   00181E  EF18  F00C         	goto	l99
  2877   001822                     u4310:
  2878   001822  0E00               	movlw	0
  2879   001824  0100               	movlb	0	; () banked
  2880   001826  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2881   001828  0E08               	movlw	8
  2882   00182A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2883   00182C  EF18  F00C         	goto	l3836
  2884   001830                     l99:
  2885   001830                     l3836:
  2886                           
  2887                           ;color.c: 222:     return card_color;
  2888   001830  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  2889   001834  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  2890   001838  0012               	return		;funcret
  2891   00183A                     __end_of_color_cardCheck:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _color_read_Red *****************
  2895 ;; Defined at:
  2896 ;;		line 46 in file "color.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  tmp             2    9[COMRAM] unsigned int 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2    4[COMRAM] unsigned int 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;Total ram usage:        7 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; Hardware stack levels required when called: 2
  2917 ;; This function calls:
  2918 ;;		_I2C_2_Master_Read
  2919 ;;		_I2C_2_Master_RepStart
  2920 ;;		_I2C_2_Master_Start
  2921 ;;		_I2C_2_Master_Stop
  2922 ;;		_I2C_2_Master_Write
  2923 ;; This function is called by:
  2924 ;;		_color_cardCheck
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text7
  2929   0044F4                     __ptext7:
  2930                           	callstack 0
  2931   0044F4                     _color_read_Red:
  2932                           	callstack 26
  2933   0044F4                     
  2934                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  2935   0044F4  EC09  F024         	call	_I2C_2_Master_Start	;wreg free
  2936                           
  2937                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  2938   0044F8  0E52               	movlw	82
  2939   0044FA  ECFE  F023         	call	_I2C_2_Master_Write
  2940                           
  2941                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  2942   0044FE  0EB6               	movlw	182
  2943   004500  ECFE  F023         	call	_I2C_2_Master_Write
  2944                           
  2945                           ;color.c: 52:  I2C_2_Master_RepStart();
  2946   004504  EC0E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2947                           
  2948                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  2949   004508  0E53               	movlw	83
  2950   00450A  ECFE  F023         	call	_I2C_2_Master_Write
  2951                           
  2952                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  2953   00450E  0E01               	movlw	1
  2954   004510  EC3D  F023         	call	_I2C_2_Master_Read
  2955   004514  6E07               	movwf	??_color_read_Red^0,c
  2956   004516  5007               	movf	??_color_read_Red^0,w,c
  2957   004518  6E0A               	movwf	color_read_Red@tmp^0,c
  2958   00451A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2959                           
  2960                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2961   00451C  0E00               	movlw	0
  2962   00451E  EC3D  F023         	call	_I2C_2_Master_Read
  2963   004522  6E07               	movwf	??_color_read_Red^0,c
  2964   004524  5007               	movf	??_color_read_Red^0,w,c
  2965   004526  6E09               	movwf	(??_color_read_Red+2)^0,c
  2966   004528  6A08               	clrf	(??_color_read_Red+1)^0,c
  2967   00452A  500A               	movf	color_read_Red@tmp^0,w,c
  2968   00452C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2969   00452E  6E0A               	movwf	color_read_Red@tmp^0,c
  2970   004530  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2971   004532  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2972   004534  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2973                           
  2974                           ;color.c: 56:  I2C_2_Master_Stop();
  2975   004536  EC04  F024         	call	_I2C_2_Master_Stop	;wreg free
  2976   00453A                     
  2977                           ;color.c: 57:  return tmp;
  2978   00453A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2979   00453E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2980   004542  0012               	return		;funcret
  2981   004544                     __end_of_color_read_Red:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _color_read_Green *****************
  2985 ;; Defined at:
  2986 ;;		line 60 in file "color.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  tmp             2    9[COMRAM] unsigned int 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  2    4[COMRAM] unsigned int 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;Total ram usage:        7 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 2
  3007 ;; This function calls:
  3008 ;;		_I2C_2_Master_Read
  3009 ;;		_I2C_2_Master_RepStart
  3010 ;;		_I2C_2_Master_Start
  3011 ;;		_I2C_2_Master_Stop
  3012 ;;		_I2C_2_Master_Write
  3013 ;; This function is called by:
  3014 ;;		_color_cardCheck
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text8
  3019   004544                     __ptext8:
  3020                           	callstack 0
  3021   004544                     _color_read_Green:
  3022                           	callstack 26
  3023   004544                     
  3024                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  3025   004544  EC09  F024         	call	_I2C_2_Master_Start	;wreg free
  3026                           
  3027                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  3028   004548  0E52               	movlw	82
  3029   00454A  ECFE  F023         	call	_I2C_2_Master_Write
  3030                           
  3031                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  3032   00454E  0EB8               	movlw	184
  3033   004550  ECFE  F023         	call	_I2C_2_Master_Write
  3034                           
  3035                           ;color.c: 66:  I2C_2_Master_RepStart();
  3036   004554  EC0E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  3037                           
  3038                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  3039   004558  0E53               	movlw	83
  3040   00455A  ECFE  F023         	call	_I2C_2_Master_Write
  3041                           
  3042                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  3043   00455E  0E01               	movlw	1
  3044   004560  EC3D  F023         	call	_I2C_2_Master_Read
  3045   004564  6E07               	movwf	??_color_read_Green^0,c
  3046   004566  5007               	movf	??_color_read_Green^0,w,c
  3047   004568  6E0A               	movwf	color_read_Green@tmp^0,c
  3048   00456A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3049                           
  3050                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3051   00456C  0E00               	movlw	0
  3052   00456E  EC3D  F023         	call	_I2C_2_Master_Read
  3053   004572  6E07               	movwf	??_color_read_Green^0,c
  3054   004574  5007               	movf	??_color_read_Green^0,w,c
  3055   004576  6E09               	movwf	(??_color_read_Green+2)^0,c
  3056   004578  6A08               	clrf	(??_color_read_Green+1)^0,c
  3057   00457A  500A               	movf	color_read_Green@tmp^0,w,c
  3058   00457C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3059   00457E  6E0A               	movwf	color_read_Green@tmp^0,c
  3060   004580  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3061   004582  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3062   004584  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3063                           
  3064                           ;color.c: 70:  I2C_2_Master_Stop();
  3065   004586  EC04  F024         	call	_I2C_2_Master_Stop	;wreg free
  3066   00458A                     
  3067                           ;color.c: 71:  return tmp;
  3068   00458A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3069   00458E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3070   004592  0012               	return		;funcret
  3071   004594                     __end_of_color_read_Green:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function _color_read_Clear *****************
  3075 ;; Defined at:
  3076 ;;		line 88 in file "color.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  tmp             2    9[COMRAM] unsigned int 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2    4[COMRAM] unsigned int 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;Total ram usage:        7 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 2
  3097 ;; This function calls:
  3098 ;;		_I2C_2_Master_Read
  3099 ;;		_I2C_2_Master_RepStart
  3100 ;;		_I2C_2_Master_Start
  3101 ;;		_I2C_2_Master_Stop
  3102 ;;		_I2C_2_Master_Write
  3103 ;; This function is called by:
  3104 ;;		_color_cardCheck
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text9
  3109   004594                     __ptext9:
  3110                           	callstack 0
  3111   004594                     _color_read_Clear:
  3112                           	callstack 26
  3113   004594                     
  3114                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3115   004594  EC09  F024         	call	_I2C_2_Master_Start	;wreg free
  3116                           
  3117                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3118   004598  0E52               	movlw	82
  3119   00459A  ECFE  F023         	call	_I2C_2_Master_Write
  3120                           
  3121                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  3122   00459E  0EB4               	movlw	180
  3123   0045A0  ECFE  F023         	call	_I2C_2_Master_Write
  3124                           
  3125                           ;color.c: 96:  I2C_2_Master_RepStart();
  3126   0045A4  EC0E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  3127                           
  3128                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3129   0045A8  0E53               	movlw	83
  3130   0045AA  ECFE  F023         	call	_I2C_2_Master_Write
  3131                           
  3132                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3133   0045AE  0E01               	movlw	1
  3134   0045B0  EC3D  F023         	call	_I2C_2_Master_Read
  3135   0045B4  6E07               	movwf	??_color_read_Clear^0,c
  3136   0045B6  5007               	movf	??_color_read_Clear^0,w,c
  3137   0045B8  6E0A               	movwf	color_read_Clear@tmp^0,c
  3138   0045BA  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3139                           
  3140                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3141   0045BC  0E00               	movlw	0
  3142   0045BE  EC3D  F023         	call	_I2C_2_Master_Read
  3143   0045C2  6E07               	movwf	??_color_read_Clear^0,c
  3144   0045C4  5007               	movf	??_color_read_Clear^0,w,c
  3145   0045C6  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3146   0045C8  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3147   0045CA  500A               	movf	color_read_Clear@tmp^0,w,c
  3148   0045CC  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3149   0045CE  6E0A               	movwf	color_read_Clear@tmp^0,c
  3150   0045D0  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3151   0045D2  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3152   0045D4  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3153                           
  3154                           ;color.c: 100:  I2C_2_Master_Stop();
  3155   0045D6  EC04  F024         	call	_I2C_2_Master_Stop	;wreg free
  3156   0045DA                     
  3157                           ;color.c: 101:  return tmp;
  3158   0045DA  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3159   0045DE  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3160   0045E2  0012               	return		;funcret
  3161   0045E4                     __end_of_color_read_Clear:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _color_read_Blue *****************
  3165 ;; Defined at:
  3166 ;;		line 74 in file "color.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  tmp             2    9[COMRAM] unsigned int 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  2    4[COMRAM] unsigned int 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;Total ram usage:        7 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 2
  3187 ;; This function calls:
  3188 ;;		_I2C_2_Master_Read
  3189 ;;		_I2C_2_Master_RepStart
  3190 ;;		_I2C_2_Master_Start
  3191 ;;		_I2C_2_Master_Stop
  3192 ;;		_I2C_2_Master_Write
  3193 ;; This function is called by:
  3194 ;;		_color_cardCheck
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text10
  3199   0045E4                     __ptext10:
  3200                           	callstack 0
  3201   0045E4                     _color_read_Blue:
  3202                           	callstack 26
  3203   0045E4                     
  3204                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  3205   0045E4  EC09  F024         	call	_I2C_2_Master_Start	;wreg free
  3206                           
  3207                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  3208   0045E8  0E52               	movlw	82
  3209   0045EA  ECFE  F023         	call	_I2C_2_Master_Write
  3210                           
  3211                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  3212   0045EE  0EBA               	movlw	186
  3213   0045F0  ECFE  F023         	call	_I2C_2_Master_Write
  3214                           
  3215                           ;color.c: 80:  I2C_2_Master_RepStart();
  3216   0045F4  EC0E  F024         	call	_I2C_2_Master_RepStart	;wreg free
  3217                           
  3218                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3219   0045F8  0E53               	movlw	83
  3220   0045FA  ECFE  F023         	call	_I2C_2_Master_Write
  3221                           
  3222                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  3223   0045FE  0E01               	movlw	1
  3224   004600  EC3D  F023         	call	_I2C_2_Master_Read
  3225   004604  6E07               	movwf	??_color_read_Blue^0,c
  3226   004606  5007               	movf	??_color_read_Blue^0,w,c
  3227   004608  6E0A               	movwf	color_read_Blue@tmp^0,c
  3228   00460A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3229                           
  3230                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3231   00460C  0E00               	movlw	0
  3232   00460E  EC3D  F023         	call	_I2C_2_Master_Read
  3233   004612  6E07               	movwf	??_color_read_Blue^0,c
  3234   004614  5007               	movf	??_color_read_Blue^0,w,c
  3235   004616  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3236   004618  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3237   00461A  500A               	movf	color_read_Blue@tmp^0,w,c
  3238   00461C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3239   00461E  6E0A               	movwf	color_read_Blue@tmp^0,c
  3240   004620  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3241   004622  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3242   004624  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3243                           
  3244                           ;color.c: 84:  I2C_2_Master_Stop();
  3245   004626  EC04  F024         	call	_I2C_2_Master_Stop	;wreg free
  3246   00462A                     
  3247                           ;color.c: 85:  return tmp;
  3248   00462A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3249   00462E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3250   004632  0012               	return		;funcret
  3251   004634                     __end_of_color_read_Blue:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _I2C_2_Master_Write *****************
  3255 ;; Defined at:
  3256 ;;		line 45 in file "i2c.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  data_byte       1    wreg     unsigned char 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  data_byte       1    1[COMRAM] unsigned char 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;Total ram usage:        1 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 1
  3277 ;; This function calls:
  3278 ;;		_I2C_2_Master_Idle
  3279 ;; This function is called by:
  3280 ;;		_color_writetoaddr
  3281 ;;		_color_read_Red
  3282 ;;		_color_read_Green
  3283 ;;		_color_read_Blue
  3284 ;;		_color_read_Clear
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text11
  3289   0047FC                     __ptext11:
  3290                           	callstack 0
  3291   0047FC                     _I2C_2_Master_Write:
  3292                           	callstack 26
  3293                           
  3294                           ;incstack = 0
  3295                           ;I2C_2_Master_Write@data_byte stored from wreg
  3296   0047FC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3297   0047FE                     
  3298                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3299   0047FE  ECC7  F023         	call	_I2C_2_Master_Idle	;wreg free
  3300   004802                     
  3301                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3302   004802  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3303   004806  0012               	return		;funcret
  3304   004808                     __end_of_I2C_2_Master_Write:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _I2C_2_Master_Stop *****************
  3308 ;; Defined at:
  3309 ;;		line 39 in file "i2c.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 1
  3330 ;; This function calls:
  3331 ;;		_I2C_2_Master_Idle
  3332 ;; This function is called by:
  3333 ;;		_color_writetoaddr
  3334 ;;		_color_read_Red
  3335 ;;		_color_read_Green
  3336 ;;		_color_read_Blue
  3337 ;;		_color_read_Clear
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text12
  3342   004808                     __ptext12:
  3343                           	callstack 0
  3344   004808                     _I2C_2_Master_Stop:
  3345                           	callstack 26
  3346   004808                     
  3347                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3348   004808  ECC7  F023         	call	_I2C_2_Master_Idle	;wreg free
  3349   00480C                     
  3350                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3351   00480C  010E               	movlb	14	; () banked
  3352   00480E  85DA               	bsf	218,2,b	;volatile
  3353   004810                     
  3354                           ; BSR set to: 14
  3355   004810  0012               	return		;funcret
  3356   004812                     __end_of_I2C_2_Master_Stop:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _I2C_2_Master_Start *****************
  3360 ;; Defined at:
  3361 ;;		line 27 in file "i2c.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;Total ram usage:        0 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 1
  3382 ;; This function calls:
  3383 ;;		_I2C_2_Master_Idle
  3384 ;; This function is called by:
  3385 ;;		_color_writetoaddr
  3386 ;;		_color_read_Red
  3387 ;;		_color_read_Green
  3388 ;;		_color_read_Blue
  3389 ;;		_color_read_Clear
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text13
  3394   004812                     __ptext13:
  3395                           	callstack 0
  3396   004812                     _I2C_2_Master_Start:
  3397                           	callstack 26
  3398   004812                     
  3399                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3400   004812  ECC7  F023         	call	_I2C_2_Master_Idle	;wreg free
  3401   004816                     
  3402                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3403   004816  010E               	movlb	14	; () banked
  3404   004818  81DA               	bsf	218,0,b	;volatile
  3405   00481A                     
  3406                           ; BSR set to: 14
  3407   00481A  0012               	return		;funcret
  3408   00481C                     __end_of_I2C_2_Master_Start:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _I2C_2_Master_RepStart *****************
  3412 ;; Defined at:
  3413 ;;		line 33 in file "i2c.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 1
  3434 ;; This function calls:
  3435 ;;		_I2C_2_Master_Idle
  3436 ;; This function is called by:
  3437 ;;		_color_read_Red
  3438 ;;		_color_read_Green
  3439 ;;		_color_read_Blue
  3440 ;;		_color_read_Clear
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text14
  3445   00481C                     __ptext14:
  3446                           	callstack 0
  3447   00481C                     _I2C_2_Master_RepStart:
  3448                           	callstack 26
  3449   00481C                     
  3450                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3451   00481C  ECC7  F023         	call	_I2C_2_Master_Idle	;wreg free
  3452   004820                     
  3453                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3454   004820  010E               	movlb	14	; () banked
  3455   004822  83DA               	bsf	218,1,b	;volatile
  3456   004824                     
  3457                           ; BSR set to: 14
  3458   004824  0012               	return		;funcret
  3459   004826                     __end_of_I2C_2_Master_RepStart:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _I2C_2_Master_Read *****************
  3463 ;; Defined at:
  3464 ;;		line 51 in file "i2c.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  ack             1    wreg     unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  ack             1    2[COMRAM] unsigned char 
  3469 ;;  tmp             1    3[COMRAM] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      unsigned char 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;Total ram usage:        3 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 1
  3486 ;; This function calls:
  3487 ;;		_I2C_2_Master_Idle
  3488 ;; This function is called by:
  3489 ;;		_color_read_Red
  3490 ;;		_color_read_Green
  3491 ;;		_color_read_Blue
  3492 ;;		_color_read_Clear
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text15
  3497   00467A                     __ptext15:
  3498                           	callstack 0
  3499   00467A                     _I2C_2_Master_Read:
  3500                           	callstack 26
  3501                           
  3502                           ; BSR set to: 14
  3503                           ;incstack = 0
  3504                           ;I2C_2_Master_Read@ack stored from wreg
  3505   00467A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3506   00467C                     
  3507                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3508   00467C  ECC7  F023         	call	_I2C_2_Master_Idle	;wreg free
  3509   004680                     
  3510                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3511   004680  010E               	movlb	14	; () banked
  3512   004682  87DA               	bsf	218,3,b	;volatile
  3513                           
  3514                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3515   004684  ECC7  F023         	call	_I2C_2_Master_Idle	;wreg free
  3516   004688                     
  3517                           ;i2c.c: 57:   tmp = SSP2BUF;
  3518   004688  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3519                           
  3520                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3521   00468C  ECC7  F023         	call	_I2C_2_Master_Idle	;wreg free
  3522   004690                     
  3523                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3524   004690  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3525   004692  B4D8               	btfsc	status,2,c
  3526   004694  EF4E  F023         	goto	u3551
  3527   004698  EF52  F023         	goto	u3550
  3528   00469C                     u3551:
  3529   00469C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3530   00469E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3531   0046A0  EF53  F023         	goto	u3568
  3532   0046A4                     u3550:
  3533   0046A4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3534   0046A6                     u3568:
  3535   0046A6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3536   0046A8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3537   0046AA  010E               	movlb	14	; () banked
  3538   0046AC  51DA               	movf	218,w,b	;volatile
  3539   0046AE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3540   0046B0  0BDF               	andlw	-33
  3541   0046B2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3542   0046B4  6FDA               	movwf	218,b	;volatile
  3543   0046B6                     
  3544                           ; BSR set to: 14
  3545                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3546   0046B6  89DA               	bsf	218,4,b	;volatile
  3547   0046B8                     
  3548                           ; BSR set to: 14
  3549                           ;i2c.c: 61:   return tmp;
  3550   0046B8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3551   0046BA                     
  3552                           ; BSR set to: 14
  3553   0046BA  0012               	return		;funcret
  3554   0046BC                     __end_of_I2C_2_Master_Read:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function _I2C_2_Master_Idle *****************
  3558 ;; Defined at:
  3559 ;;		line 22 in file "i2c.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;		None
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3577 ;;Total ram usage:        1 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_I2C_2_Master_Start
  3583 ;;		_I2C_2_Master_RepStart
  3584 ;;		_I2C_2_Master_Stop
  3585 ;;		_I2C_2_Master_Write
  3586 ;;		_I2C_2_Master_Read
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text16
  3591   00478E                     __ptext16:
  3592                           	callstack 0
  3593   00478E                     _I2C_2_Master_Idle:
  3594                           	callstack 26
  3595   00478E                     l406:
  3596   00478E  010E               	movlb	14	; () banked
  3597   004790  B5D8               	btfsc	216,2,b	;volatile
  3598   004792  EFCD  F023         	goto	u2911
  3599   004796  EFCF  F023         	goto	u2910
  3600   00479A                     u2911:
  3601   00479A  EFC7  F023         	goto	l406
  3602   00479E                     u2910:
  3603   00479E                     
  3604                           ; BSR set to: 14
  3605   00479E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3606   0047A2  0E1F               	movlw	31
  3607   0047A4  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3608   0047A6  A4D8               	btfss	status,2,c
  3609   0047A8  EFD8  F023         	goto	u2921
  3610   0047AC  EFDA  F023         	goto	u2920
  3611   0047B0                     u2921:
  3612   0047B0  EFC7  F023         	goto	l406
  3613   0047B4                     u2920:
  3614   0047B4                     
  3615                           ; BSR set to: 14
  3616   0047B4  0012               	return		;funcret
  3617   0047B6                     __end_of_I2C_2_Master_Idle:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _RGB_to_HSV *****************
  3621 ;; Defined at:
  3622 ;;		line 125 in file "color.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  R               4   10[BANK0 ] float 
  3625 ;;  G               4   14[BANK0 ] float 
  3626 ;;  B               4   18[BANK0 ] float 
  3627 ;;  C               4   22[BANK0 ] float 
  3628 ;;  H               1   26[BANK0 ] PTR float 
  3629 ;;		 -> color_cardCheck@H(4), 
  3630 ;;  S               1   27[BANK0 ] PTR float 
  3631 ;;		 -> color_cardCheck@S(4), 
  3632 ;;  V               1   28[BANK0 ] PTR float 
  3633 ;;		 -> color_cardCheck@V(4), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  b               4   93[BANK0 ] float 
  3636 ;;  g               4   89[BANK0 ] float 
  3637 ;;  r               4   85[BANK0 ] float 
  3638 ;;  maxRGB          4   81[BANK0 ] float 
  3639 ;;  deltaRGB        4   77[BANK0 ] float 
  3640 ;;  H_temp          4   73[BANK0 ] float 
  3641 ;;  minRGB          4   57[BANK0 ] float 
  3642 ;;  c_norm          4   29[BANK0 ] float 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3652 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;Total ram usage:       87 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 3
  3659 ;; This function calls:
  3660 ;;		___fladd
  3661 ;;		___fldiv
  3662 ;;		___fleq
  3663 ;;		___flge
  3664 ;;		___flmul
  3665 ;;		___flsub
  3666 ;;		_custom_floatmodulo
  3667 ;; This function is called by:
  3668 ;;		_color_cardCheck
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text17
  3673   00183A                     __ptext17:
  3674                           	callstack 0
  3675   00183A                     _RGB_to_HSV:
  3676                           	callstack 25
  3677   00183A                     
  3678                           ;color.c: 128:     float r = R/65535.0;
  3679   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  3680   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  3681   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  3682   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  3683   00184A  0E00               	movlw	0
  3684   00184C  6E26               	movwf	___fldiv@a^0,c
  3685   00184E  0EFF               	movlw	255
  3686   001850  6E27               	movwf	(___fldiv@a+1)^0,c
  3687   001852  0E7F               	movlw	127
  3688   001854  6E28               	movwf	(___fldiv@a+2)^0,c
  3689   001856  0E47               	movlw	71
  3690   001858  6E29               	movwf	(___fldiv@a+3)^0,c
  3691   00185A  EC73  F014         	call	___fldiv	;wreg free
  3692   00185E  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  3693   001862  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  3694   001866  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  3695   00186A  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  3696                           
  3697                           ;color.c: 129:     float g = G/65535.0;
  3698   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  3699   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  3700   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  3701   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  3702   00187E  0E00               	movlw	0
  3703   001880  6E26               	movwf	___fldiv@a^0,c
  3704   001882  0EFF               	movlw	255
  3705   001884  6E27               	movwf	(___fldiv@a+1)^0,c
  3706   001886  0E7F               	movlw	127
  3707   001888  6E28               	movwf	(___fldiv@a+2)^0,c
  3708   00188A  0E47               	movlw	71
  3709   00188C  6E29               	movwf	(___fldiv@a+3)^0,c
  3710   00188E  EC73  F014         	call	___fldiv	;wreg free
  3711   001892  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  3712   001896  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  3713   00189A  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  3714   00189E  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  3715                           
  3716                           ;color.c: 130:     float b = B/65535.0;
  3717   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  3718   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  3719   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  3720   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  3721   0018B2  0E00               	movlw	0
  3722   0018B4  6E26               	movwf	___fldiv@a^0,c
  3723   0018B6  0EFF               	movlw	255
  3724   0018B8  6E27               	movwf	(___fldiv@a+1)^0,c
  3725   0018BA  0E7F               	movlw	127
  3726   0018BC  6E28               	movwf	(___fldiv@a+2)^0,c
  3727   0018BE  0E47               	movlw	71
  3728   0018C0  6E29               	movwf	(___fldiv@a+3)^0,c
  3729   0018C2  EC73  F014         	call	___fldiv	;wreg free
  3730   0018C6  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  3731   0018CA  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  3732   0018CE  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  3733   0018D2  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  3734                           
  3735                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  3736   0018D6  0E00               	movlw	0
  3737   0018D8  6E26               	movwf	___fldiv@a^0,c
  3738   0018DA  0EFF               	movlw	255
  3739   0018DC  6E27               	movwf	(___fldiv@a+1)^0,c
  3740   0018DE  0E7F               	movlw	127
  3741   0018E0  6E28               	movwf	(___fldiv@a+2)^0,c
  3742   0018E2  0E47               	movlw	71
  3743   0018E4  6E29               	movwf	(___fldiv@a+3)^0,c
  3744   0018E6  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  3745   0018EA  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  3746   0018EE  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  3747   0018F2  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  3748   0018F6  EC73  F014         	call	___fldiv	;wreg free
  3749   0018FA  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2703
  3750   0018FE  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2703+1
  3751   001902  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2703+2
  3752   001906  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2703+3
  3753                           
  3754                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  3755   00190A  0E00               	movlw	0
  3756   00190C  6E22               	movwf	___fldiv@b^0,c
  3757   00190E  0E00               	movlw	0
  3758   001910  6E23               	movwf	(___fldiv@b+1)^0,c
  3759   001912  0E80               	movlw	128
  3760   001914  6E24               	movwf	(___fldiv@b+2)^0,c
  3761   001916  0E3F               	movlw	63
  3762   001918  6E25               	movwf	(___fldiv@b+3)^0,c
  3763   00191A  C081  F026         	movff	_RGB_to_HSV$2703,___fldiv@a
  3764   00191E  C082  F027         	movff	_RGB_to_HSV$2703+1,___fldiv@a+1
  3765   001922  C083  F028         	movff	_RGB_to_HSV$2703+2,___fldiv@a+2
  3766   001926  C084  F029         	movff	_RGB_to_HSV$2703+3,___fldiv@a+3
  3767   00192A  EC73  F014         	call	___fldiv	;wreg free
  3768   00192E  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  3769   001932  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  3770   001936  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  3771   00193A  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  3772                           
  3773                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  3774   00193E  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  3775   001942  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  3776   001946  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  3777   00194A  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  3778   00194E  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  3779   001952  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  3780   001956  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  3781   00195A  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  3782   00195E  ECCD  F01F         	call	___flge	;wreg free
  3783   001962  A0D8               	btfss	status,0,c
  3784   001964  EFB6  F00C         	goto	u3661
  3785   001968  EFB8  F00C         	goto	u3660
  3786   00196C                     u3661:
  3787   00196C  EFED  F00C         	goto	l3582
  3788   001970                     u3660:
  3789   001970  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  3790   001974  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  3791   001978  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  3792   00197C  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  3793   001980  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  3794   001984  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  3795   001988  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  3796   00198C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  3797   001990  ECCD  F01F         	call	___flge	;wreg free
  3798   001994  A0D8               	btfss	status,0,c
  3799   001996  EFCF  F00C         	goto	u3671
  3800   00199A  EFD1  F00C         	goto	u3670
  3801   00199E                     u3671:
  3802   00199E  EFDB  F00C         	goto	l58
  3803   0019A2                     u3670:
  3804   0019A2  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  3805   0019A6  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  3806   0019AA  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  3807   0019AE  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  3808   0019B2  EFE3  F00C         	goto	l60
  3809   0019B6                     l58:
  3810   0019B6  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  3811   0019BA  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  3812   0019BE  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  3813   0019C2  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  3814   0019C6                     l60:
  3815   0019C6  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  3816   0019CA  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  3817   0019CE  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  3818   0019D2  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  3819   0019D6  EF20  F00D         	goto	l3586
  3820   0019DA                     l3582:
  3821   0019DA  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  3822   0019DE  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  3823   0019E2  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  3824   0019E6  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  3825   0019EA  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  3826   0019EE  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  3827   0019F2  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  3828   0019F6  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  3829   0019FA  ECCD  F01F         	call	___flge	;wreg free
  3830   0019FE  A0D8               	btfss	status,0,c
  3831   001A00  EF04  F00D         	goto	u3681
  3832   001A04  EF06  F00D         	goto	u3680
  3833   001A08                     u3681:
  3834   001A08  EF10  F00D         	goto	l62
  3835   001A0C                     u3680:
  3836   001A0C  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  3837   001A10  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  3838   001A14  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  3839   001A18  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  3840   001A1C  EF18  F00D         	goto	l64
  3841   001A20                     l62:
  3842   001A20  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  3843   001A24  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  3844   001A28  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  3845   001A2C  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  3846   001A30                     l64:
  3847   001A30  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  3848   001A34  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  3849   001A38  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  3850   001A3C  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  3851   001A40                     l3586:
  3852                           
  3853                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  3854   001A40  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  3855   001A44  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  3856   001A48  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  3857   001A4C  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  3858   001A50  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  3859   001A54  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  3860   001A58  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  3861   001A5C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  3862   001A60  ECCD  F01F         	call	___flge	;wreg free
  3863   001A64  A0D8               	btfss	status,0,c
  3864   001A66  EF37  F00D         	goto	u3691
  3865   001A6A  EF39  F00D         	goto	u3690
  3866   001A6E                     u3691:
  3867   001A6E  EF6E  F00D         	goto	l3592
  3868   001A72                     u3690:
  3869   001A72  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  3870   001A76  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  3871   001A7A  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  3872   001A7E  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  3873   001A82  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  3874   001A86  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  3875   001A8A  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  3876   001A8E  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  3877   001A92  ECCD  F01F         	call	___flge	;wreg free
  3878   001A96  A0D8               	btfss	status,0,c
  3879   001A98  EF50  F00D         	goto	u3701
  3880   001A9C  EF52  F00D         	goto	u3700
  3881   001AA0                     u3701:
  3882   001AA0  EF5C  F00D         	goto	l70
  3883   001AA4                     u3700:
  3884   001AA4  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  3885   001AA8  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  3886   001AAC  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  3887   001AB0  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  3888   001AB4  EF64  F00D         	goto	l72
  3889   001AB8                     l70:
  3890   001AB8  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  3891   001ABC  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  3892   001AC0  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  3893   001AC4  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  3894   001AC8                     l72:
  3895   001AC8  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  3896   001ACC  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  3897   001AD0  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  3898   001AD4  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  3899   001AD8  EFA1  F00D         	goto	l3596
  3900   001ADC                     l3592:
  3901   001ADC  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  3902   001AE0  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  3903   001AE4  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  3904   001AE8  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  3905   001AEC  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  3906   001AF0  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  3907   001AF4  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  3908   001AF8  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  3909   001AFC  ECCD  F01F         	call	___flge	;wreg free
  3910   001B00  A0D8               	btfss	status,0,c
  3911   001B02  EF85  F00D         	goto	u3711
  3912   001B06  EF87  F00D         	goto	u3710
  3913   001B0A                     u3711:
  3914   001B0A  EF91  F00D         	goto	l74
  3915   001B0E                     u3710:
  3916   001B0E  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  3917   001B12  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  3918   001B16  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  3919   001B1A  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  3920   001B1E  EF99  F00D         	goto	l76
  3921   001B22                     l74:
  3922   001B22  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  3923   001B26  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  3924   001B2A  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  3925   001B2E  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  3926   001B32                     l76:
  3927   001B32  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  3928   001B36  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  3929   001B3A  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  3930   001B3E  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  3931   001B42                     l3596:
  3932                           
  3933                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  3934   001B42  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  3935   001B46  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  3936   001B4A  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  3937   001B4E  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  3938   001B52  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  3939   001B56  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  3940   001B5A  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  3941   001B5E  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  3942   001B62  EC1A  F023         	call	___flsub	;wreg free
  3943   001B66  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  3944   001B6A  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  3945   001B6E  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  3946   001B72  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  3947                           
  3948                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  3949   001B76  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  3950   001B7A  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  3951   001B7E  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  3952   001B82  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  3953   001B86  0E00               	movlw	0
  3954   001B88  6E05               	movwf	___fleq@ff2^0,c
  3955   001B8A  0E00               	movlw	0
  3956   001B8C  6E06               	movwf	(___fleq@ff2+1)^0,c
  3957   001B8E  0E00               	movlw	0
  3958   001B90  6E07               	movwf	(___fleq@ff2+2)^0,c
  3959   001B92  0E00               	movlw	0
  3960   001B94  6E08               	movwf	(___fleq@ff2+3)^0,c
  3961   001B96  EC72  F021         	call	___fleq	;wreg free
  3962   001B9A  A0D8               	btfss	status,0,c
  3963   001B9C  EFD2  F00D         	goto	u3721
  3964   001BA0  EFD4  F00D         	goto	u3720
  3965   001BA4                     u3721:
  3966   001BA4  EFDF  F00D         	goto	l3600
  3967   001BA8                     u3720:
  3968   001BA8  0E00               	movlw	0
  3969   001BAA  0100               	movlb	0	; () banked
  3970   001BAC  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  3971   001BAE  0E00               	movlw	0
  3972   001BB0  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  3973   001BB2  0E00               	movlw	0
  3974   001BB4  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  3975   001BB6  0E00               	movlw	0
  3976   001BB8  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  3977   001BBA  EF40  F00F         	goto	l3620
  3978   001BBE                     l3600:
  3979   001BBE  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  3980   001BC2  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  3981   001BC6  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  3982   001BCA  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  3983   001BCE  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  3984   001BD2  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  3985   001BD6  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  3986   001BDA  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  3987   001BDE  EC72  F021         	call	___fleq	;wreg free
  3988   001BE2  A0D8               	btfss	status,0,c
  3989   001BE4  EFF6  F00D         	goto	u3731
  3990   001BE8  EFF8  F00D         	goto	u3730
  3991   001BEC                     u3731:
  3992   001BEC  EF5A  F00E         	goto	l3608
  3993   001BF0                     u3730:
  3994   001BF0  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  3995   001BF4  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  3996   001BF8  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  3997   001BFC  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  3998   001C00  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  3999   001C04  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  4000   001C08  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  4001   001C0C  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  4002   001C10  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  4003   001C14  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  4004   001C18  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  4005   001C1C  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  4006   001C20  EC1A  F023         	call	___flsub	;wreg free
  4007   001C24  C01A  F022         	movff	?___flsub,___fldiv@b
  4008   001C28  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4009   001C2C  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4010   001C30  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4011   001C34  EC73  F014         	call	___fldiv	;wreg free
  4012   001C38  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2704
  4013   001C3C  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2704+1
  4014   001C40  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2704+2
  4015   001C44  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2704+3
  4016   001C48  0E00               	movlw	0
  4017   001C4A  6E58               	movwf	custom_floatmodulo@y^0,c
  4018   001C4C  0E00               	movlw	0
  4019   001C4E  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  4020   001C50  0EC0               	movlw	192
  4021   001C52  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  4022   001C54  0E40               	movlw	64
  4023   001C56  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  4024   001C58  C085  F054         	movff	_RGB_to_HSV$2704,custom_floatmodulo@x
  4025   001C5C  C086  F055         	movff	_RGB_to_HSV$2704+1,custom_floatmodulo@x+1
  4026   001C60  C087  F056         	movff	_RGB_to_HSV$2704+2,custom_floatmodulo@x+2
  4027   001C64  C088  F057         	movff	_RGB_to_HSV$2704+3,custom_floatmodulo@x+3
  4028   001C68  ECBE  F01E         	call	_custom_floatmodulo	;wreg free
  4029   001C6C  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2705
  4030   001C70  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2705+1
  4031   001C74  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2705+2
  4032   001C78  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2705+3
  4033   001C7C  C089  F03B         	movff	_RGB_to_HSV$2705,___flmul@b
  4034   001C80  C08A  F03C         	movff	_RGB_to_HSV$2705+1,___flmul@b+1
  4035   001C84  C08B  F03D         	movff	_RGB_to_HSV$2705+2,___flmul@b+2
  4036   001C88  C08C  F03E         	movff	_RGB_to_HSV$2705+3,___flmul@b+3
  4037   001C8C  0E00               	movlw	0
  4038   001C8E  6E3F               	movwf	___flmul@a^0,c
  4039   001C90  0E00               	movlw	0
  4040   001C92  6E40               	movwf	(___flmul@a+1)^0,c
  4041   001C94  0E70               	movlw	112
  4042   001C96  6E41               	movwf	(___flmul@a+2)^0,c
  4043   001C98  0E42               	movlw	66
  4044   001C9A  6E42               	movwf	(___flmul@a+3)^0,c
  4045   001C9C  EC5E  F012         	call	___flmul	;wreg free
  4046   001CA0  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4047   001CA4  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4048   001CA8  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4049   001CAC  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4050   001CB0  EF40  F00F         	goto	l3620
  4051   001CB4                     l3608:
  4052   001CB4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4053   001CB8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4054   001CBC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4055   001CC0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4056   001CC4  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  4057   001CC8  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  4058   001CCC  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  4059   001CD0  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  4060   001CD4  EC72  F021         	call	___fleq	;wreg free
  4061   001CD8  A0D8               	btfss	status,0,c
  4062   001CDA  EF71  F00E         	goto	u3741
  4063   001CDE  EF73  F00E         	goto	u3740
  4064   001CE2                     u3741:
  4065   001CE2  EFCD  F00E         	goto	l3614
  4066   001CE6                     u3740:
  4067   001CE6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4068   001CEA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4069   001CEE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4070   001CF2  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4071   001CF6  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  4072   001CFA  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  4073   001CFE  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  4074   001D02  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  4075   001D06  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  4076   001D0A  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  4077   001D0E  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  4078   001D12  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  4079   001D16  EC1A  F023         	call	___flsub	;wreg free
  4080   001D1A  C01A  F022         	movff	?___flsub,___fldiv@b
  4081   001D1E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4082   001D22  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4083   001D26  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4084   001D2A  EC73  F014         	call	___fldiv	;wreg free
  4085   001D2E  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2706
  4086   001D32  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2706+1
  4087   001D36  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2706+2
  4088   001D3A  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2706+3
  4089   001D3E  0E00               	movlw	0
  4090   001D40  6E05               	movwf	___fladd@a^0,c
  4091   001D42  0E00               	movlw	0
  4092   001D44  6E06               	movwf	(___fladd@a+1)^0,c
  4093   001D46  0E00               	movlw	0
  4094   001D48  6E07               	movwf	(___fladd@a+2)^0,c
  4095   001D4A  0E40               	movlw	64
  4096   001D4C  6E08               	movwf	(___fladd@a+3)^0,c
  4097   001D4E  C0A5  F001         	movff	_RGB_to_HSV$2706,___fladd@b
  4098   001D52  C0A6  F002         	movff	_RGB_to_HSV$2706+1,___fladd@b+1
  4099   001D56  C0A7  F003         	movff	_RGB_to_HSV$2706+2,___fladd@b+2
  4100   001D5A  C0A8  F004         	movff	_RGB_to_HSV$2706+3,___fladd@b+3
  4101   001D5E  ECFE  F00F         	call	___fladd	;wreg free
  4102   001D62  C001  F03B         	movff	?___fladd,___flmul@b
  4103   001D66  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4104   001D6A  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4105   001D6E  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4106   001D72  0E00               	movlw	0
  4107   001D74  6E3F               	movwf	___flmul@a^0,c
  4108   001D76  0E00               	movlw	0
  4109   001D78  6E40               	movwf	(___flmul@a+1)^0,c
  4110   001D7A  0E70               	movlw	112
  4111   001D7C  6E41               	movwf	(___flmul@a+2)^0,c
  4112   001D7E  0E42               	movlw	66
  4113   001D80  6E42               	movwf	(___flmul@a+3)^0,c
  4114   001D82  EC5E  F012         	call	___flmul	;wreg free
  4115   001D86  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4116   001D8A  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4117   001D8E  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4118   001D92  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4119   001D96  EF40  F00F         	goto	l3620
  4120   001D9A                     l3614:
  4121   001D9A  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4122   001D9E  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4123   001DA2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4124   001DA6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4125   001DAA  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  4126   001DAE  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  4127   001DB2  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  4128   001DB6  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  4129   001DBA  EC72  F021         	call	___fleq	;wreg free
  4130   001DBE  A0D8               	btfss	status,0,c
  4131   001DC0  EFE4  F00E         	goto	u3751
  4132   001DC4  EFE6  F00E         	goto	u3750
  4133   001DC8                     u3751:
  4134   001DC8  EF40  F00F         	goto	l80
  4135   001DCC                     u3750:
  4136   001DCC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4137   001DD0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4138   001DD4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4139   001DD8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4140   001DDC  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  4141   001DE0  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  4142   001DE4  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  4143   001DE8  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  4144   001DEC  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  4145   001DF0  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  4146   001DF4  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  4147   001DF8  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  4148   001DFC  EC1A  F023         	call	___flsub	;wreg free
  4149   001E00  C01A  F022         	movff	?___flsub,___fldiv@b
  4150   001E04  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4151   001E08  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4152   001E0C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4153   001E10  EC73  F014         	call	___fldiv	;wreg free
  4154   001E14  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2706
  4155   001E18  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2706+1
  4156   001E1C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2706+2
  4157   001E20  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2706+3
  4158   001E24  0E00               	movlw	0
  4159   001E26  6E05               	movwf	___fladd@a^0,c
  4160   001E28  0E00               	movlw	0
  4161   001E2A  6E06               	movwf	(___fladd@a+1)^0,c
  4162   001E2C  0E80               	movlw	128
  4163   001E2E  6E07               	movwf	(___fladd@a+2)^0,c
  4164   001E30  0E40               	movlw	64
  4165   001E32  6E08               	movwf	(___fladd@a+3)^0,c
  4166   001E34  C0A5  F001         	movff	_RGB_to_HSV$2706,___fladd@b
  4167   001E38  C0A6  F002         	movff	_RGB_to_HSV$2706+1,___fladd@b+1
  4168   001E3C  C0A7  F003         	movff	_RGB_to_HSV$2706+2,___fladd@b+2
  4169   001E40  C0A8  F004         	movff	_RGB_to_HSV$2706+3,___fladd@b+3
  4170   001E44  ECFE  F00F         	call	___fladd	;wreg free
  4171   001E48  C001  F03B         	movff	?___fladd,___flmul@b
  4172   001E4C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4173   001E50  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4174   001E54  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4175   001E58  0E00               	movlw	0
  4176   001E5A  6E3F               	movwf	___flmul@a^0,c
  4177   001E5C  0E00               	movlw	0
  4178   001E5E  6E40               	movwf	(___flmul@a+1)^0,c
  4179   001E60  0E70               	movlw	112
  4180   001E62  6E41               	movwf	(___flmul@a+2)^0,c
  4181   001E64  0E42               	movlw	66
  4182   001E66  6E42               	movwf	(___flmul@a+3)^0,c
  4183   001E68  EC5E  F012         	call	___flmul	;wreg free
  4184   001E6C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4185   001E70  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4186   001E74  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4187   001E78  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4188   001E7C  EF40  F00F         	goto	l3620
  4189   001E80                     l80:
  4190   001E80                     l3620:
  4191                           
  4192                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  4193   001E80  0100               	movlb	0	; () banked
  4194   001E82  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  4195   001E84  EF48  F00F         	goto	u3760
  4196   001E88  EF46  F00F         	goto	u3761
  4197   001E8C                     u3761:
  4198   001E8C  EF62  F00F         	goto	l3624
  4199   001E90                     u3760:
  4200   001E90                     
  4201                           ; BSR set to: 0
  4202   001E90  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  4203   001E94  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  4204   001E98  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  4205   001E9C  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  4206   001EA0  0E00               	movlw	0
  4207   001EA2  6E05               	movwf	___fladd@a^0,c
  4208   001EA4  0E00               	movlw	0
  4209   001EA6  6E06               	movwf	(___fladd@a+1)^0,c
  4210   001EA8  0EB4               	movlw	180
  4211   001EAA  6E07               	movwf	(___fladd@a+2)^0,c
  4212   001EAC  0E43               	movlw	67
  4213   001EAE  6E08               	movwf	(___fladd@a+3)^0,c
  4214   001EB0  ECFE  F00F         	call	___fladd	;wreg free
  4215   001EB4  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  4216   001EB8  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  4217   001EBC  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  4218   001EC0  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  4219   001EC4                     l3624:
  4220                           
  4221                           ;color.c: 158:     *H = H_temp;
  4222   001EC4  0100               	movlb	0	; () banked
  4223   001EC6  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  4224   001EC8  6ED9               	movwf	fsr2l,c
  4225   001ECA  6ADA               	clrf	fsr2h,c
  4226   001ECC  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  4227   001ED0  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  4228   001ED4  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  4229   001ED8  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  4230   001EDC                     
  4231                           ; BSR set to: 0
  4232                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  4233   001EDC  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4234   001EE0  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4235   001EE4  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4236   001EE8  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4237   001EEC  0E00               	movlw	0
  4238   001EEE  6E05               	movwf	___fleq@ff2^0,c
  4239   001EF0  0E00               	movlw	0
  4240   001EF2  6E06               	movwf	(___fleq@ff2+1)^0,c
  4241   001EF4  0E00               	movlw	0
  4242   001EF6  6E07               	movwf	(___fleq@ff2+2)^0,c
  4243   001EF8  0E00               	movlw	0
  4244   001EFA  6E08               	movwf	(___fleq@ff2+3)^0,c
  4245   001EFC  EC72  F021         	call	___fleq	;wreg free
  4246   001F00  A0D8               	btfss	status,0,c
  4247   001F02  EF85  F00F         	goto	u3771
  4248   001F06  EF87  F00F         	goto	u3770
  4249   001F0A                     u3771:
  4250   001F0A  EF95  F00F         	goto	l3630
  4251   001F0E                     u3770:
  4252   001F0E  0100               	movlb	0	; () banked
  4253   001F10  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4254   001F12  6ED9               	movwf	fsr2l,c
  4255   001F14  6ADA               	clrf	fsr2h,c
  4256   001F16  0E00               	movlw	0
  4257   001F18  6EDE               	movwf	postinc2,c
  4258   001F1A  0E00               	movlw	0
  4259   001F1C  6EDE               	movwf	postinc2,c
  4260   001F1E  0E00               	movlw	0
  4261   001F20  6EDE               	movwf	postinc2,c
  4262   001F22  0E00               	movlw	0
  4263   001F24  6EDD               	movwf	postdec2,c
  4264   001F26  EFC5  F00F         	goto	l3632
  4265   001F2A                     l3630:
  4266                           
  4267                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  4268   001F2A  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  4269   001F2E  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  4270   001F32  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  4271   001F36  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  4272   001F3A  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  4273   001F3E  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  4274   001F42  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  4275   001F46  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  4276   001F4A  EC73  F014         	call	___fldiv	;wreg free
  4277   001F4E  C022  F03B         	movff	?___fldiv,___flmul@b
  4278   001F52  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  4279   001F56  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  4280   001F5A  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  4281   001F5E  0E00               	movlw	0
  4282   001F60  6E3F               	movwf	___flmul@a^0,c
  4283   001F62  0E00               	movlw	0
  4284   001F64  6E40               	movwf	(___flmul@a+1)^0,c
  4285   001F66  0EC8               	movlw	200
  4286   001F68  6E41               	movwf	(___flmul@a+2)^0,c
  4287   001F6A  0E42               	movlw	66
  4288   001F6C  6E42               	movwf	(___flmul@a+3)^0,c
  4289   001F6E  EC5E  F012         	call	___flmul	;wreg free
  4290   001F72  0100               	movlb	0	; () banked
  4291   001F74  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4292   001F76  6ED9               	movwf	fsr2l,c
  4293   001F78  6ADA               	clrf	fsr2h,c
  4294   001F7A  C03B  FFDE         	movff	?___flmul,postinc2
  4295   001F7E  C03C  FFDE         	movff	?___flmul+1,postinc2
  4296   001F82  C03D  FFDE         	movff	?___flmul+2,postinc2
  4297   001F86  C03E  FFDE         	movff	?___flmul+3,postinc2
  4298   001F8A                     l3632:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4302   001F8A  0E00               	movlw	0
  4303   001F8C  6E3F               	movwf	___flmul@a^0,c
  4304   001F8E  0E00               	movlw	0
  4305   001F90  6E40               	movwf	(___flmul@a+1)^0,c
  4306   001F92  0EC8               	movlw	200
  4307   001F94  6E41               	movwf	(___flmul@a+2)^0,c
  4308   001F96  0E42               	movlw	66
  4309   001F98  6E42               	movwf	(___flmul@a+3)^0,c
  4310   001F9A  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  4311   001F9E  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  4312   001FA2  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  4313   001FA6  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  4314   001FAA  EC5E  F012         	call	___flmul	;wreg free
  4315   001FAE  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2707
  4316   001FB2  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2707+1
  4317   001FB6  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2707+2
  4318   001FBA  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2707+3
  4319   001FBE                     
  4320                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4321   001FBE  C08D  F03B         	movff	_RGB_to_HSV$2707,___flmul@b
  4322   001FC2  C08E  F03C         	movff	_RGB_to_HSV$2707+1,___flmul@b+1
  4323   001FC6  C08F  F03D         	movff	_RGB_to_HSV$2707+2,___flmul@b+2
  4324   001FCA  C090  F03E         	movff	_RGB_to_HSV$2707+3,___flmul@b+3
  4325   001FCE  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  4326   001FD2  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  4327   001FD6  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  4328   001FDA  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  4329   001FDE  EC5E  F012         	call	___flmul	;wreg free
  4330   001FE2  0100               	movlb	0	; () banked
  4331   001FE4  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  4332   001FE6  6ED9               	movwf	fsr2l,c
  4333   001FE8  6ADA               	clrf	fsr2h,c
  4334   001FEA  C03B  FFDE         	movff	?___flmul,postinc2
  4335   001FEE  C03C  FFDE         	movff	?___flmul+1,postinc2
  4336   001FF2  C03D  FFDE         	movff	?___flmul+2,postinc2
  4337   001FF6  C03E  FFDE         	movff	?___flmul+3,postinc2
  4338   001FFA                     
  4339                           ; BSR set to: 0
  4340   001FFA  0012               	return		;funcret
  4341   001FFC                     __end_of_RGB_to_HSV:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _custom_floatmodulo *****************
  4345 ;; Defined at:
  4346 ;;		line 106 in file "color.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  x               4   83[COMRAM] float 
  4349 ;;  y               4   87[COMRAM] float 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  remainder       4    4[BANK0 ] float 
  4352 ;;  quotient        4    0[BANK0 ] float 
  4353 ;;  intPart         2    8[BANK0 ] int 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  4   83[COMRAM] float 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4363 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;Total ram usage:       18 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 2
  4370 ;; This function calls:
  4371 ;;		___fldiv
  4372 ;;		___fleq
  4373 ;;		___flmul
  4374 ;;		___flsub
  4375 ;;		___fltol
  4376 ;;		___xxtofl
  4377 ;; This function is called by:
  4378 ;;		_RGB_to_HSV
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text18
  4383   003D7C                     __ptext18:
  4384                           	callstack 0
  4385   003D7C                     _custom_floatmodulo:
  4386                           	callstack 25
  4387   003D7C                     
  4388                           ;color.c: 108:     if (y == 0.0) {
  4389   003D7C  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  4390   003D80  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  4391   003D84  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  4392   003D88  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  4393   003D8C  0E00               	movlw	0
  4394   003D8E  6E05               	movwf	___fleq@ff2^0,c
  4395   003D90  0E00               	movlw	0
  4396   003D92  6E06               	movwf	(___fleq@ff2+1)^0,c
  4397   003D94  0E00               	movlw	0
  4398   003D96  6E07               	movwf	(___fleq@ff2+2)^0,c
  4399   003D98  0E00               	movlw	0
  4400   003D9A  6E08               	movwf	(___fleq@ff2+3)^0,c
  4401   003D9C  EC72  F021         	call	___fleq	;wreg free
  4402   003DA0  A0D8               	btfss	status,0,c
  4403   003DA2  EFD5  F01E         	goto	u3571
  4404   003DA6  EFD7  F01E         	goto	u3570
  4405   003DAA                     u3571:
  4406   003DAA  EFE1  F01E         	goto	l3480
  4407   003DAE                     u3570:
  4408   003DAE                     
  4409                           ;color.c: 109:         return 0.0;
  4410   003DAE  0E00               	movlw	0
  4411   003DB0  6E54               	movwf	?_custom_floatmodulo^0,c
  4412   003DB2  0E00               	movlw	0
  4413   003DB4  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  4414   003DB6  0E00               	movlw	0
  4415   003DB8  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  4416   003DBA  0E00               	movlw	0
  4417   003DBC  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  4418   003DBE  EF49  F01F         	goto	l50
  4419   003DC2                     l3480:
  4420                           
  4421                           ;color.c: 113:     float quotient = x / y;
  4422   003DC2  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  4423   003DC6  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  4424   003DCA  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  4425   003DCE  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  4426   003DD2  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  4427   003DD6  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  4428   003DDA  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  4429   003DDE  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  4430   003DE2  EC73  F014         	call	___fldiv	;wreg free
  4431   003DE6  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  4432   003DEA  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  4433   003DEE  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  4434   003DF2  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  4435                           
  4436                           ;color.c: 116:     int intPart = (int)quotient;
  4437   003DF6  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  4438   003DFA  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  4439   003DFE  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  4440   003E02  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  4441   003E06  EC4A  F01F         	call	___fltol	;wreg free
  4442   003E0A  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  4443   003E0E  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  4444   003E12                     
  4445                           ;color.c: 119:     float remainder = x - intPart * y;
  4446   003E12  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  4447   003E16  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  4448   003E1A  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  4449   003E1E  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  4450   003E22  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  4451   003E26  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  4452   003E2A  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  4453   003E2E  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  4454   003E32  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  4455   003E36  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  4456   003E3A  0E00               	movlw	0
  4457   003E3C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  4458   003E3E  0EFF               	movlw	-1
  4459   003E40  6E0E               	movwf	(___xxtofl@val+2)^0,c
  4460   003E42  6E0F               	movwf	(___xxtofl@val+3)^0,c
  4461   003E44  0E01               	movlw	1
  4462   003E46  EC93  F019         	call	___xxtofl
  4463   003E4A  C00C  F03B         	movff	?___xxtofl,___flmul@b
  4464   003E4E  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  4465   003E52  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  4466   003E56  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  4467   003E5A  EC5E  F012         	call	___flmul	;wreg free
  4468   003E5E  C03B  F01E         	movff	?___flmul,___flsub@a
  4469   003E62  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  4470   003E66  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  4471   003E6A  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  4472   003E6E  EC1A  F023         	call	___flsub	;wreg free
  4473   003E72  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  4474   003E76  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  4475   003E7A  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  4476   003E7E  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  4477   003E82                     
  4478                           ;color.c: 121:     return remainder;
  4479   003E82  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  4480   003E86  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  4481   003E8A  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  4482   003E8E  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  4483   003E92                     l50:
  4484   003E92  0012               	return		;funcret
  4485   003E94                     __end_of_custom_floatmodulo:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function ___xxtofl *****************
  4489 ;; Defined at:
  4490 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  sign            1    wreg     unsigned char 
  4493 ;;  val             4   11[COMRAM] long 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  sign            1   19[COMRAM] unsigned char 
  4496 ;;  arg             4   21[COMRAM] unsigned long 
  4497 ;;  exp             1   20[COMRAM] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  4   11[COMRAM] unsigned char 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;Total ram usage:       14 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_custom_floatmodulo
  4517 ;;		_color_cardCheck
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text19
  4522   003326                     __ptext19:
  4523                           	callstack 0
  4524   003326                     ___xxtofl:
  4525                           	callstack 28
  4526                           
  4527                           ;incstack = 0
  4528                           ;___xxtofl@sign stored from wreg
  4529   003326  6E14               	movwf	___xxtofl@sign^0,c
  4530   003328  5014               	movf	___xxtofl@sign^0,w,c
  4531   00332A  B4D8               	btfsc	status,2,c
  4532   00332C  EF9A  F019         	goto	u3451
  4533   003330  EF9C  F019         	goto	u3450
  4534   003334                     u3451:
  4535   003334  EFBE  F019         	goto	l1246
  4536   003338                     u3450:
  4537   003338  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4538   00333A  EFA3  F019         	goto	u3460
  4539   00333E  EFA1  F019         	goto	u3461
  4540   003342                     u3461:
  4541   003342  EFBE  F019         	goto	l1246
  4542   003346                     u3460:
  4543   003346  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4544   00334A  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4545   00334E  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4546   003352  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4547   003356  1E10               	comf	??___xxtofl^0,f,c
  4548   003358  1E11               	comf	(??___xxtofl+1)^0,f,c
  4549   00335A  1E12               	comf	(??___xxtofl+2)^0,f,c
  4550   00335C  1E13               	comf	(??___xxtofl+3)^0,f,c
  4551   00335E  2A10               	incf	??___xxtofl^0,f,c
  4552   003360  0E00               	movlw	0
  4553   003362  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4554   003364  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4555   003366  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4556   003368  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4557   00336C  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4558   003370  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4559   003374  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4560   003378  EFC6  F019         	goto	l3404
  4561   00337C                     l1246:
  4562   00337C  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4563   003380  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4564   003384  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4565   003388  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4566   00338C                     l3404:
  4567   00338C  500C               	movf	___xxtofl@val^0,w,c
  4568   00338E  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4569   003390  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4570   003392  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4571   003394  A4D8               	btfss	status,2,c
  4572   003396  EFCF  F019         	goto	u3471
  4573   00339A  EFD1  F019         	goto	u3470
  4574   00339E                     u3471:
  4575   00339E  EFDB  F019         	goto	l3410
  4576   0033A2                     u3470:
  4577   0033A2  0E00               	movlw	0
  4578   0033A4  6E0C               	movwf	?___xxtofl^0,c
  4579   0033A6  0E00               	movlw	0
  4580   0033A8  6E0D               	movwf	(?___xxtofl+1)^0,c
  4581   0033AA  0E00               	movlw	0
  4582   0033AC  6E0E               	movwf	(?___xxtofl+2)^0,c
  4583   0033AE  0E00               	movlw	0
  4584   0033B0  6E0F               	movwf	(?___xxtofl+3)^0,c
  4585   0033B2  EF6C  F01A         	goto	l1249
  4586   0033B6                     l3410:
  4587   0033B6  0E96               	movlw	150
  4588   0033B8  6E15               	movwf	___xxtofl@exp^0,c
  4589   0033BA  EFE5  F019         	goto	l3414
  4590   0033BE                     l3412:
  4591   0033BE  2A15               	incf	___xxtofl@exp^0,f,c
  4592   0033C0  90D8               	bcf	status,0,c
  4593   0033C2  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4594   0033C4  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4595   0033C6  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4596   0033C8  3216               	rrcf	___xxtofl@arg^0,f,c
  4597   0033CA                     l3414:
  4598   0033CA  0E00               	movlw	0
  4599   0033CC  1416               	andwf	___xxtofl@arg^0,w,c
  4600   0033CE  6E10               	movwf	??___xxtofl^0,c
  4601   0033D0  0E00               	movlw	0
  4602   0033D2  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4603   0033D4  6E11               	movwf	(??___xxtofl+1)^0,c
  4604   0033D6  0E00               	movlw	0
  4605   0033D8  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4606   0033DA  6E12               	movwf	(??___xxtofl+2)^0,c
  4607   0033DC  0EFE               	movlw	254
  4608   0033DE  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4609   0033E0  6E13               	movwf	(??___xxtofl+3)^0,c
  4610   0033E2  5010               	movf	??___xxtofl^0,w,c
  4611   0033E4  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4612   0033E6  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4613   0033E8  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4614   0033EA  A4D8               	btfss	status,2,c
  4615   0033EC  EFFA  F019         	goto	u3481
  4616   0033F0  EFFC  F019         	goto	u3480
  4617   0033F4                     u3481:
  4618   0033F4  EFDF  F019         	goto	l3412
  4619   0033F8                     u3480:
  4620   0033F8  EF0A  F01A         	goto	l1253
  4621   0033FC                     l3416:
  4622   0033FC  2A15               	incf	___xxtofl@exp^0,f,c
  4623   0033FE  0E01               	movlw	1
  4624   003400  2616               	addwf	___xxtofl@arg^0,f,c
  4625   003402  0E00               	movlw	0
  4626   003404  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  4627   003406  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  4628   003408  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  4629   00340A  90D8               	bcf	status,0,c
  4630   00340C  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4631   00340E  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4632   003410  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4633   003412  3216               	rrcf	___xxtofl@arg^0,f,c
  4634   003414                     l1253:
  4635   003414  0E00               	movlw	0
  4636   003416  1416               	andwf	___xxtofl@arg^0,w,c
  4637   003418  6E10               	movwf	??___xxtofl^0,c
  4638   00341A  0E00               	movlw	0
  4639   00341C  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4640   00341E  6E11               	movwf	(??___xxtofl+1)^0,c
  4641   003420  0E00               	movlw	0
  4642   003422  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4643   003424  6E12               	movwf	(??___xxtofl+2)^0,c
  4644   003426  0EFF               	movlw	255
  4645   003428  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4646   00342A  6E13               	movwf	(??___xxtofl+3)^0,c
  4647   00342C  5010               	movf	??___xxtofl^0,w,c
  4648   00342E  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4649   003430  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4650   003432  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4651   003434  A4D8               	btfss	status,2,c
  4652   003436  EF1F  F01A         	goto	u3491
  4653   00343A  EF21  F01A         	goto	u3490
  4654   00343E                     u3491:
  4655   00343E  EFFE  F019         	goto	l3416
  4656   003442                     u3490:
  4657   003442  EF29  F01A         	goto	l3424
  4658   003446                     l3422:
  4659   003446  0615               	decf	___xxtofl@exp^0,f,c
  4660   003448  90D8               	bcf	status,0,c
  4661   00344A  3616               	rlcf	___xxtofl@arg^0,f,c
  4662   00344C  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  4663   00344E  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  4664   003450  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  4665   003452                     l3424:
  4666   003452  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  4667   003454  EF2E  F01A         	goto	u3501
  4668   003458  EF30  F01A         	goto	u3500
  4669   00345C                     u3501:
  4670   00345C  EF38  F01A         	goto	l1260
  4671   003460                     u3500:
  4672   003460  0E02               	movlw	2
  4673   003462  6015               	cpfslt	___xxtofl@exp^0,c
  4674   003464  EF36  F01A         	goto	u3511
  4675   003468  EF38  F01A         	goto	u3510
  4676   00346C                     u3511:
  4677   00346C  EF23  F01A         	goto	l3422
  4678   003470                     u3510:
  4679   003470                     l1260:
  4680   003470  B015               	btfsc	___xxtofl@exp^0,0,c
  4681   003472  EF3D  F01A         	goto	u3521
  4682   003476  EF3F  F01A         	goto	u3520
  4683   00347A                     u3521:
  4684   00347A  EF40  F01A         	goto	l3430
  4685   00347E                     u3520:
  4686   00347E  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  4687   003480                     l3430:
  4688   003480  90D8               	bcf	status,0,c
  4689   003482  3215               	rrcf	___xxtofl@exp^0,f,c
  4690   003484  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  4691   003488  6A11               	clrf	(??___xxtofl+1)^0,c
  4692   00348A  6A12               	clrf	(??___xxtofl+2)^0,c
  4693   00348C  6A13               	clrf	(??___xxtofl+3)^0,c
  4694   00348E  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  4695   003492  6A12               	clrf	(??___xxtofl+2)^0,c
  4696   003494  6A11               	clrf	(??___xxtofl+1)^0,c
  4697   003496  6A10               	clrf	??___xxtofl^0,c
  4698   003498  5010               	movf	??___xxtofl^0,w,c
  4699   00349A  1216               	iorwf	___xxtofl@arg^0,f,c
  4700   00349C  5011               	movf	(??___xxtofl+1)^0,w,c
  4701   00349E  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  4702   0034A0  5012               	movf	(??___xxtofl+2)^0,w,c
  4703   0034A2  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  4704   0034A4  5013               	movf	(??___xxtofl+3)^0,w,c
  4705   0034A6  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  4706   0034A8  5014               	movf	___xxtofl@sign^0,w,c
  4707   0034AA  B4D8               	btfsc	status,2,c
  4708   0034AC  EF5A  F01A         	goto	u3531
  4709   0034B0  EF5C  F01A         	goto	u3530
  4710   0034B4                     u3531:
  4711   0034B4  EF64  F01A         	goto	l3440
  4712   0034B8                     u3530:
  4713   0034B8  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4714   0034BA  EF63  F01A         	goto	u3540
  4715   0034BE  EF61  F01A         	goto	u3541
  4716   0034C2                     u3541:
  4717   0034C2  EF64  F01A         	goto	l3440
  4718   0034C6                     u3540:
  4719   0034C6  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  4720   0034C8                     l3440:
  4721   0034C8  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  4722   0034CC  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  4723   0034D0  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  4724   0034D4  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  4725   0034D8                     l1249:
  4726   0034D8  0012               	return		;funcret
  4727   0034DA                     __end_of___xxtofl:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function ___fltol *****************
  4731 ;; Defined at:
  4732 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  f1              4    0[COMRAM] unsigned char 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  exp1            1    9[COMRAM] unsigned char 
  4737 ;;  sign1           1    8[COMRAM] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  4    0[COMRAM] long 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;Total ram usage:       10 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_custom_floatmodulo
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text20
  4761   003E94                     __ptext20:
  4762                           	callstack 0
  4763   003E94                     ___fltol:
  4764                           	callstack 26
  4765   003E94  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4766   003E96  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4767   003E98  6E0A               	movwf	___fltol@exp1^0,c
  4768   003E9A  500A               	movf	___fltol@exp1^0,w,c
  4769   003E9C  A4D8               	btfss	status,2,c
  4770   003E9E  EF53  F01F         	goto	u3381
  4771   003EA2  EF55  F01F         	goto	u3380
  4772   003EA6                     u3381:
  4773   003EA6  EF5F  F01F         	goto	l3360
  4774   003EAA                     u3380:
  4775   003EAA                     l3356:
  4776   003EAA  0E00               	movlw	0
  4777   003EAC  6E01               	movwf	?___fltol^0,c
  4778   003EAE  0E00               	movlw	0
  4779   003EB0  6E02               	movwf	(?___fltol+1)^0,c
  4780   003EB2  0E00               	movlw	0
  4781   003EB4  6E03               	movwf	(?___fltol+2)^0,c
  4782   003EB6  0E00               	movlw	0
  4783   003EB8  6E04               	movwf	(?___fltol+3)^0,c
  4784   003EBA  EFCC  F01F         	goto	l888
  4785   003EBE                     l3360:
  4786   003EBE  C001  F005         	movff	___fltol@f1,??___fltol
  4787   003EC2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4788   003EC6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4789   003ECA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4790   003ECE  0E20               	movlw	32
  4791   003ED0  EF6F  F01F         	goto	u3390
  4792   003ED4                     u3395:
  4793   003ED4  90D8               	bcf	status,0,c
  4794   003ED6  3208               	rrcf	(??___fltol+3)^0,f,c
  4795   003ED8  3207               	rrcf	(??___fltol+2)^0,f,c
  4796   003EDA  3206               	rrcf	(??___fltol+1)^0,f,c
  4797   003EDC  3205               	rrcf	??___fltol^0,f,c
  4798   003EDE                     u3390:
  4799   003EDE  2EE8               	decfsz	wreg,f,c
  4800   003EE0  EF6A  F01F         	goto	u3395
  4801   003EE4  5005               	movf	??___fltol^0,w,c
  4802   003EE6  6E09               	movwf	___fltol@sign1^0,c
  4803   003EE8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4804   003EEA  0EFF               	movlw	255
  4805   003EEC  1601               	andwf	___fltol@f1^0,f,c
  4806   003EEE  0EFF               	movlw	255
  4807   003EF0  1602               	andwf	(___fltol@f1+1)^0,f,c
  4808   003EF2  0EFF               	movlw	255
  4809   003EF4  1603               	andwf	(___fltol@f1+2)^0,f,c
  4810   003EF6  0E00               	movlw	0
  4811   003EF8  1604               	andwf	(___fltol@f1+3)^0,f,c
  4812   003EFA  0E96               	movlw	150
  4813   003EFC  5E0A               	subwf	___fltol@exp1^0,f,c
  4814   003EFE  BE0A               	btfsc	___fltol@exp1^0,7,c
  4815   003F00  EF86  F01F         	goto	u3400
  4816   003F04  EF84  F01F         	goto	u3401
  4817   003F08                     u3401:
  4818   003F08  EF9C  F01F         	goto	l3380
  4819   003F0C                     u3400:
  4820   003F0C  500A               	movf	___fltol@exp1^0,w,c
  4821   003F0E  0A80               	xorlw	128
  4822   003F10  0F97               	addlw	151
  4823   003F12  B0D8               	btfsc	status,0,c
  4824   003F14  EF8E  F01F         	goto	u3411
  4825   003F18  EF90  F01F         	goto	u3410
  4826   003F1C                     u3411:
  4827   003F1C  EF92  F01F         	goto	l3376
  4828   003F20                     u3410:
  4829   003F20  EF55  F01F         	goto	l3356
  4830   003F24                     l3376:
  4831   003F24  90D8               	bcf	status,0,c
  4832   003F26  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4833   003F28  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4834   003F2A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4835   003F2C  3201               	rrcf	___fltol@f1^0,f,c
  4836   003F2E  3E0A               	incfsz	___fltol@exp1^0,f,c
  4837   003F30  EF92  F01F         	goto	l3376
  4838   003F34  EFB4  F01F         	goto	l3390
  4839   003F38                     l3380:
  4840   003F38  0E1F               	movlw	31
  4841   003F3A  640A               	cpfsgt	___fltol@exp1^0,c
  4842   003F3C  EFA2  F01F         	goto	u3421
  4843   003F40  EFA4  F01F         	goto	u3420
  4844   003F44                     u3421:
  4845   003F44  EFAC  F01F         	goto	l3388
  4846   003F48                     u3420:
  4847   003F48  EF55  F01F         	goto	l3356
  4848   003F4C                     l3386:
  4849   003F4C  90D8               	bcf	status,0,c
  4850   003F4E  3601               	rlcf	___fltol@f1^0,f,c
  4851   003F50  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4852   003F52  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4853   003F54  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4854   003F56  060A               	decf	___fltol@exp1^0,f,c
  4855   003F58                     l3388:
  4856   003F58  500A               	movf	___fltol@exp1^0,w,c
  4857   003F5A  A4D8               	btfss	status,2,c
  4858   003F5C  EFB2  F01F         	goto	u3431
  4859   003F60  EFB4  F01F         	goto	u3430
  4860   003F64                     u3431:
  4861   003F64  EFA6  F01F         	goto	l3386
  4862   003F68                     u3430:
  4863   003F68                     l3390:
  4864   003F68  5009               	movf	___fltol@sign1^0,w,c
  4865   003F6A  B4D8               	btfsc	status,2,c
  4866   003F6C  EFBA  F01F         	goto	u3441
  4867   003F70  EFBC  F01F         	goto	u3440
  4868   003F74                     u3441:
  4869   003F74  EFC4  F01F         	goto	l3394
  4870   003F78                     u3440:
  4871   003F78  1E04               	comf	(___fltol@f1+3)^0,f,c
  4872   003F7A  1E03               	comf	(___fltol@f1+2)^0,f,c
  4873   003F7C  1E02               	comf	(___fltol@f1+1)^0,f,c
  4874   003F7E  6C01               	negf	___fltol@f1^0,c
  4875   003F80  0E00               	movlw	0
  4876   003F82  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4877   003F84  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4878   003F86  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4879   003F88                     l3394:
  4880   003F88  C001  F001         	movff	___fltol@f1,?___fltol
  4881   003F8C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4882   003F90  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4883   003F94  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4884   003F98                     l888:
  4885   003F98  0012               	return		;funcret
  4886   003F9A                     __end_of___fltol:
  4887                           	callstack 0
  4888                           
  4889 ;; *************** function ___flsub *****************
  4890 ;; Defined at:
  4891 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  b               4   25[COMRAM] long 
  4894 ;;  a               4   29[COMRAM] long 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  4   25[COMRAM] long 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;Total ram usage:        8 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 1
  4913 ;; This function calls:
  4914 ;;		___fladd
  4915 ;; This function is called by:
  4916 ;;		_custom_floatmodulo
  4917 ;;		_RGB_to_HSV
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text21
  4922   004634                     __ptext21:
  4923                           	callstack 0
  4924   004634                     ___flsub:
  4925                           	callstack 25
  4926   004634  0E00               	movlw	0
  4927   004636  1A1E               	xorwf	___flsub@a^0,f,c
  4928   004638  0E00               	movlw	0
  4929   00463A  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4930   00463C  0E00               	movlw	0
  4931   00463E  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4932   004640  0E80               	movlw	128
  4933   004642  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4934   004644  C01A  F001         	movff	___flsub@b,___fladd@b
  4935   004648  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4936   00464C  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4937   004650  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4938   004654  C01E  F005         	movff	___flsub@a,___fladd@a
  4939   004658  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4940   00465C  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4941   004660  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4942   004664  ECFE  F00F         	call	___fladd	;wreg free
  4943   004668  C001  F01A         	movff	?___fladd,?___flsub
  4944   00466C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4945   004670  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4946   004674  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4947   004678  0012               	return		;funcret
  4948   00467A                     __end_of___flsub:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function ___fladd *****************
  4952 ;; Defined at:
  4953 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  b               4    0[COMRAM] long 
  4956 ;;  a               4    4[COMRAM] long 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  grs             1   15[COMRAM] unsigned char 
  4959 ;;  bexp            1   14[COMRAM] unsigned char 
  4960 ;;  aexp            1   13[COMRAM] unsigned char 
  4961 ;;  signs           1   12[COMRAM] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  4    0[COMRAM] unsigned char 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4971 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;Total ram usage:       16 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_RGB_to_HSV
  4981 ;;		___flsub
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text22
  4986   001FFC                     __ptext22:
  4987                           	callstack 0
  4988   001FFC                     ___fladd:
  4989                           	callstack 25
  4990   001FFC  5004               	movf	(___fladd@b+3)^0,w,c
  4991   001FFE  0B80               	andlw	128
  4992   002000  6E0D               	movwf	___fladd@signs^0,c
  4993   002002  5004               	movf	(___fladd@b+3)^0,w,c
  4994   002004  2404               	addwf	(___fladd@b+3)^0,w,c
  4995   002006  6E0F               	movwf	___fladd@bexp^0,c
  4996   002008  AE03               	btfss	(___fladd@b+2)^0,7,c
  4997   00200A  EF09  F010         	goto	u2521
  4998   00200E  EF0B  F010         	goto	u2520
  4999   002012                     u2521:
  5000   002012  EF0C  F010         	goto	l2864
  5001   002016                     u2520:
  5002   002016  800F               	bsf	___fladd@bexp^0,0,c
  5003   002018                     l2864:
  5004   002018  500F               	movf	___fladd@bexp^0,w,c
  5005   00201A  B4D8               	btfsc	status,2,c
  5006   00201C  EF12  F010         	goto	u2531
  5007   002020  EF14  F010         	goto	u2530
  5008   002024                     u2531:
  5009   002024  EF29  F010         	goto	l2874
  5010   002028                     u2530:
  5011   002028  280F               	incf	___fladd@bexp^0,w,c
  5012   00202A  A4D8               	btfss	status,2,c
  5013   00202C  EF1A  F010         	goto	u2541
  5014   002030  EF1C  F010         	goto	u2540
  5015   002034                     u2541:
  5016   002034  EF24  F010         	goto	l2870
  5017   002038                     u2540:
  5018   002038  0E00               	movlw	0
  5019   00203A  6E01               	movwf	___fladd@b^0,c
  5020   00203C  0E00               	movlw	0
  5021   00203E  6E02               	movwf	(___fladd@b+1)^0,c
  5022   002040  0E00               	movlw	0
  5023   002042  6E03               	movwf	(___fladd@b+2)^0,c
  5024   002044  0E00               	movlw	0
  5025   002046  6E04               	movwf	(___fladd@b+3)^0,c
  5026   002048                     l2870:
  5027   002048  8E03               	bsf	(___fladd@b+2)^0,7,c
  5028   00204A  0E00               	movlw	0
  5029   00204C  6E04               	movwf	(___fladd@b+3)^0,c
  5030   00204E  EF31  F010         	goto	l2876
  5031   002052                     l2874:
  5032   002052  0E00               	movlw	0
  5033   002054  6E01               	movwf	___fladd@b^0,c
  5034   002056  0E00               	movlw	0
  5035   002058  6E02               	movwf	(___fladd@b+1)^0,c
  5036   00205A  0E00               	movlw	0
  5037   00205C  6E03               	movwf	(___fladd@b+2)^0,c
  5038   00205E  0E00               	movlw	0
  5039   002060  6E04               	movwf	(___fladd@b+3)^0,c
  5040   002062                     l2876:
  5041   002062  5008               	movf	(___fladd@a+3)^0,w,c
  5042   002064  0B80               	andlw	128
  5043   002066  6E0E               	movwf	___fladd@aexp^0,c
  5044   002068  500D               	movf	___fladd@signs^0,w,c
  5045   00206A  180E               	xorwf	___fladd@aexp^0,w,c
  5046   00206C  B4D8               	btfsc	status,2,c
  5047   00206E  EF3B  F010         	goto	u2551
  5048   002072  EF3D  F010         	goto	u2550
  5049   002076                     u2551:
  5050   002076  EF3E  F010         	goto	l2882
  5051   00207A                     u2550:
  5052   00207A  8C0D               	bsf	___fladd@signs^0,6,c
  5053   00207C                     l2882:
  5054   00207C  5008               	movf	(___fladd@a+3)^0,w,c
  5055   00207E  2408               	addwf	(___fladd@a+3)^0,w,c
  5056   002080  6E0E               	movwf	___fladd@aexp^0,c
  5057   002082  AE07               	btfss	(___fladd@a+2)^0,7,c
  5058   002084  EF46  F010         	goto	u2561
  5059   002088  EF48  F010         	goto	u2560
  5060   00208C                     u2561:
  5061   00208C  EF49  F010         	goto	l2888
  5062   002090                     u2560:
  5063   002090  800E               	bsf	___fladd@aexp^0,0,c
  5064   002092                     l2888:
  5065   002092  500E               	movf	___fladd@aexp^0,w,c
  5066   002094  B4D8               	btfsc	status,2,c
  5067   002096  EF4F  F010         	goto	u2571
  5068   00209A  EF51  F010         	goto	u2570
  5069   00209E                     u2571:
  5070   00209E  EF66  F010         	goto	l2898
  5071   0020A2                     u2570:
  5072   0020A2  280E               	incf	___fladd@aexp^0,w,c
  5073   0020A4  A4D8               	btfss	status,2,c
  5074   0020A6  EF57  F010         	goto	u2581
  5075   0020AA  EF59  F010         	goto	u2580
  5076   0020AE                     u2581:
  5077   0020AE  EF61  F010         	goto	l2894
  5078   0020B2                     u2580:
  5079   0020B2  0E00               	movlw	0
  5080   0020B4  6E05               	movwf	___fladd@a^0,c
  5081   0020B6  0E00               	movlw	0
  5082   0020B8  6E06               	movwf	(___fladd@a+1)^0,c
  5083   0020BA  0E00               	movlw	0
  5084   0020BC  6E07               	movwf	(___fladd@a+2)^0,c
  5085   0020BE  0E00               	movlw	0
  5086   0020C0  6E08               	movwf	(___fladd@a+3)^0,c
  5087   0020C2                     l2894:
  5088   0020C2  8E07               	bsf	(___fladd@a+2)^0,7,c
  5089   0020C4  0E00               	movlw	0
  5090   0020C6  6E08               	movwf	(___fladd@a+3)^0,c
  5091   0020C8  EF6E  F010         	goto	l2900
  5092   0020CC                     l2898:
  5093   0020CC  0E00               	movlw	0
  5094   0020CE  6E05               	movwf	___fladd@a^0,c
  5095   0020D0  0E00               	movlw	0
  5096   0020D2  6E06               	movwf	(___fladd@a+1)^0,c
  5097   0020D4  0E00               	movlw	0
  5098   0020D6  6E07               	movwf	(___fladd@a+2)^0,c
  5099   0020D8  0E00               	movlw	0
  5100   0020DA  6E08               	movwf	(___fladd@a+3)^0,c
  5101   0020DC                     l2900:
  5102   0020DC  500F               	movf	___fladd@bexp^0,w,c
  5103   0020DE  5C0E               	subwf	___fladd@aexp^0,w,c
  5104   0020E0  B0D8               	btfsc	status,0,c
  5105   0020E2  EF75  F010         	goto	u2591
  5106   0020E6  EF77  F010         	goto	u2590
  5107   0020EA                     u2591:
  5108   0020EA  EF9E  F010         	goto	l2936
  5109   0020EE                     u2590:
  5110   0020EE  AC0D               	btfss	___fladd@signs^0,6,c
  5111   0020F0  EF7C  F010         	goto	u2601
  5112   0020F4  EF7E  F010         	goto	u2600
  5113   0020F8                     u2601:
  5114   0020F8  EF80  F010         	goto	l2906
  5115   0020FC                     u2600:
  5116   0020FC  0E80               	movlw	128
  5117   0020FE  1A0D               	xorwf	___fladd@signs^0,f,c
  5118   002100                     l2906:
  5119   002100  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5120   002104  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5121   002108  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5122   00210C  C001  F010         	movff	___fladd@b,___fladd@grs
  5123   002110  C005  F001         	movff	___fladd@a,___fladd@b
  5124   002114  C010  F005         	movff	___fladd@grs,___fladd@a
  5125   002118  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5126   00211C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5127   002120  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5128   002124  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5129   002128  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5130   00212C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5131   002130  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5132   002134  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5133   002138  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5134   00213C                     l2936:
  5135   00213C  0E00               	movlw	0
  5136   00213E  6E10               	movwf	___fladd@grs^0,c
  5137   002140  500F               	movf	___fladd@bexp^0,w,c
  5138   002142  C00E  F009         	movff	___fladd@aexp,??___fladd
  5139   002146  6A0A               	clrf	(??___fladd+1)^0,c
  5140   002148  5E09               	subwf	??___fladd^0,f,c
  5141   00214A  0E00               	movlw	0
  5142   00214C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5143   00214E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5144   002150  EFB3  F010         	goto	u2611
  5145   002154  500A               	movf	(??___fladd+1)^0,w,c
  5146   002156  E109               	bnz	u2610
  5147   002158  0E1A               	movlw	26
  5148   00215A  5C09               	subwf	??___fladd^0,w,c
  5149   00215C  A0D8               	btfss	status,0,c
  5150   00215E  EFB3  F010         	goto	u2611
  5151   002162  EFB5  F010         	goto	u2610
  5152   002166                     u2611:
  5153   002166  EFEC  F010         	goto	l1120
  5154   00216A                     u2610:
  5155   00216A  5001               	movf	___fladd@b^0,w,c
  5156   00216C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5157   00216E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5158   002170  1004               	iorwf	(___fladd@b+3)^0,w,c
  5159   002172  A4D8               	btfss	status,2,c
  5160   002174  EFBE  F010         	goto	u2621
  5161   002178  EFC1  F010         	goto	u2620
  5162   00217C                     u2621:
  5163   00217C  0E01               	movlw	1
  5164   00217E  EFC2  F010         	goto	u2630
  5165   002182                     u2620:
  5166   002182  0E00               	movlw	0
  5167   002184                     u2630:
  5168   002184  6E10               	movwf	___fladd@grs^0,c
  5169   002186  0E00               	movlw	0
  5170   002188  6E01               	movwf	___fladd@b^0,c
  5171   00218A  0E00               	movlw	0
  5172   00218C  6E02               	movwf	(___fladd@b+1)^0,c
  5173   00218E  0E00               	movlw	0
  5174   002190  6E03               	movwf	(___fladd@b+2)^0,c
  5175   002192  0E00               	movlw	0
  5176   002194  6E04               	movwf	(___fladd@b+3)^0,c
  5177   002196  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5178   00219A  EFF5  F010         	goto	l1119
  5179   00219E                     l1121:
  5180   00219E  A010               	btfss	___fladd@grs^0,0,c
  5181   0021A0  EFD4  F010         	goto	u2641
  5182   0021A4  EFD6  F010         	goto	u2640
  5183   0021A8                     u2641:
  5184   0021A8  EFDC  F010         	goto	l2948
  5185   0021AC                     u2640:
  5186   0021AC  90D8               	bcf	status,0,c
  5187   0021AE  3010               	rrcf	___fladd@grs^0,w,c
  5188   0021B0  0901               	iorlw	1
  5189   0021B2  6E10               	movwf	___fladd@grs^0,c
  5190   0021B4  EFDE  F010         	goto	l2950
  5191   0021B8                     l2948:
  5192   0021B8  90D8               	bcf	status,0,c
  5193   0021BA  3210               	rrcf	___fladd@grs^0,f,c
  5194   0021BC                     l2950:
  5195   0021BC  A001               	btfss	___fladd@b^0,0,c
  5196   0021BE  EFE3  F010         	goto	u2651
  5197   0021C2  EFE5  F010         	goto	u2650
  5198   0021C6                     u2651:
  5199   0021C6  EFE6  F010         	goto	l2954
  5200   0021CA                     u2650:
  5201   0021CA  8E10               	bsf	___fladd@grs^0,7,c
  5202   0021CC                     l2954:
  5203   0021CC  3404               	rlcf	(___fladd@b+3)^0,w,c
  5204   0021CE  3204               	rrcf	(___fladd@b+3)^0,f,c
  5205   0021D0  3203               	rrcf	(___fladd@b+2)^0,f,c
  5206   0021D2  3202               	rrcf	(___fladd@b+1)^0,f,c
  5207   0021D4  3201               	rrcf	___fladd@b^0,f,c
  5208   0021D6  2A0F               	incf	___fladd@bexp^0,f,c
  5209   0021D8                     l1120:
  5210   0021D8  500E               	movf	___fladd@aexp^0,w,c
  5211   0021DA  5C0F               	subwf	___fladd@bexp^0,w,c
  5212   0021DC  A0D8               	btfss	status,0,c
  5213   0021DE  EFF3  F010         	goto	u2661
  5214   0021E2  EFF5  F010         	goto	u2660
  5215   0021E6                     u2661:
  5216   0021E6  EFCF  F010         	goto	l1121
  5217   0021EA                     u2660:
  5218   0021EA                     l1119:
  5219   0021EA  BC0D               	btfsc	___fladd@signs^0,6,c
  5220   0021EC  EFFA  F010         	goto	u2671
  5221   0021F0  EFFC  F010         	goto	u2670
  5222   0021F4                     u2671:
  5223   0021F4  EF3C  F011         	goto	l2982
  5224   0021F8                     u2670:
  5225   0021F8  500F               	movf	___fladd@bexp^0,w,c
  5226   0021FA  A4D8               	btfss	status,2,c
  5227   0021FC  EF02  F011         	goto	u2681
  5228   002200  EF04  F011         	goto	u2680
  5229   002204                     u2681:
  5230   002204  EF0E  F011         	goto	l2964
  5231   002208                     u2680:
  5232   002208  0E00               	movlw	0
  5233   00220A  6E01               	movwf	?___fladd^0,c
  5234   00220C  0E00               	movlw	0
  5235   00220E  6E02               	movwf	(?___fladd+1)^0,c
  5236   002210  0E00               	movlw	0
  5237   002212  6E03               	movwf	(?___fladd+2)^0,c
  5238   002214  0E00               	movlw	0
  5239   002216  6E04               	movwf	(?___fladd+3)^0,c
  5240   002218  EF5D  F012         	goto	l1128
  5241   00221C                     l2964:
  5242   00221C  5005               	movf	___fladd@a^0,w,c
  5243   00221E  2601               	addwf	___fladd@b^0,f,c
  5244   002220  5006               	movf	(___fladd@a+1)^0,w,c
  5245   002222  2202               	addwfc	(___fladd@b+1)^0,f,c
  5246   002224  5007               	movf	(___fladd@a+2)^0,w,c
  5247   002226  2203               	addwfc	(___fladd@b+2)^0,f,c
  5248   002228  5008               	movf	(___fladd@a+3)^0,w,c
  5249   00222A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5250   00222C  A004               	btfss	(___fladd@b+3)^0,0,c
  5251   00222E  EF1B  F011         	goto	u2691
  5252   002232  EF1D  F011         	goto	u2690
  5253   002236                     u2691:
  5254   002236  EFC9  F011         	goto	l3018
  5255   00223A                     u2690:
  5256   00223A  A010               	btfss	___fladd@grs^0,0,c
  5257   00223C  EF22  F011         	goto	u2701
  5258   002240  EF24  F011         	goto	u2700
  5259   002244                     u2701:
  5260   002244  EF2A  F011         	goto	l2972
  5261   002248                     u2700:
  5262   002248  90D8               	bcf	status,0,c
  5263   00224A  3010               	rrcf	___fladd@grs^0,w,c
  5264   00224C  0901               	iorlw	1
  5265   00224E  6E10               	movwf	___fladd@grs^0,c
  5266   002250  EF2C  F011         	goto	l2974
  5267   002254                     l2972:
  5268   002254  90D8               	bcf	status,0,c
  5269   002256  3210               	rrcf	___fladd@grs^0,f,c
  5270   002258                     l2974:
  5271   002258  A001               	btfss	___fladd@b^0,0,c
  5272   00225A  EF31  F011         	goto	u2711
  5273   00225E  EF33  F011         	goto	u2710
  5274   002262                     u2711:
  5275   002262  EF34  F011         	goto	l2978
  5276   002266                     u2710:
  5277   002266  8E10               	bsf	___fladd@grs^0,7,c
  5278   002268                     l2978:
  5279   002268  3404               	rlcf	(___fladd@b+3)^0,w,c
  5280   00226A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5281   00226C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5282   00226E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5283   002270  3201               	rrcf	___fladd@b^0,f,c
  5284   002272  2A0F               	incf	___fladd@bexp^0,f,c
  5285   002274  EFC9  F011         	goto	l3018
  5286   002278                     l2982:
  5287   002278  5005               	movf	___fladd@a^0,w,c
  5288   00227A  5C01               	subwf	___fladd@b^0,w,c
  5289   00227C  5006               	movf	(___fladd@a+1)^0,w,c
  5290   00227E  5802               	subwfb	(___fladd@b+1)^0,w,c
  5291   002280  5007               	movf	(___fladd@a+2)^0,w,c
  5292   002282  5803               	subwfb	(___fladd@b+2)^0,w,c
  5293   002284  5004               	movf	(___fladd@b+3)^0,w,c
  5294   002286  0A80               	xorlw	128
  5295   002288  6E09               	movwf	??___fladd^0,c
  5296   00228A  5008               	movf	(___fladd@a+3)^0,w,c
  5297   00228C  0A80               	xorlw	128
  5298   00228E  5809               	subwfb	??___fladd^0,w,c
  5299   002290  B0D8               	btfsc	status,0,c
  5300   002292  EF4D  F011         	goto	u2721
  5301   002296  EF4F  F011         	goto	u2720
  5302   00229A                     u2721:
  5303   00229A  EF7A  F011         	goto	l2992
  5304   00229E                     u2720:
  5305   00229E  5001               	movf	___fladd@b^0,w,c
  5306   0022A0  5C05               	subwf	___fladd@a^0,w,c
  5307   0022A2  6E09               	movwf	??___fladd^0,c
  5308   0022A4  5002               	movf	(___fladd@b+1)^0,w,c
  5309   0022A6  5806               	subwfb	(___fladd@a+1)^0,w,c
  5310   0022A8  6E0A               	movwf	(??___fladd+1)^0,c
  5311   0022AA  5003               	movf	(___fladd@b+2)^0,w,c
  5312   0022AC  5807               	subwfb	(___fladd@a+2)^0,w,c
  5313   0022AE  6E0B               	movwf	(??___fladd+2)^0,c
  5314   0022B0  5004               	movf	(___fladd@b+3)^0,w,c
  5315   0022B2  5808               	subwfb	(___fladd@a+3)^0,w,c
  5316   0022B4  6E0C               	movwf	(??___fladd+3)^0,c
  5317   0022B6  0EFF               	movlw	255
  5318   0022B8  2409               	addwf	??___fladd^0,w,c
  5319   0022BA  6E01               	movwf	___fladd@b^0,c
  5320   0022BC  0EFF               	movlw	255
  5321   0022BE  200A               	addwfc	(??___fladd+1)^0,w,c
  5322   0022C0  6E02               	movwf	(___fladd@b+1)^0,c
  5323   0022C2  0EFF               	movlw	255
  5324   0022C4  200B               	addwfc	(??___fladd+2)^0,w,c
  5325   0022C6  6E03               	movwf	(___fladd@b+2)^0,c
  5326   0022C8  0EFF               	movlw	255
  5327   0022CA  200C               	addwfc	(??___fladd+3)^0,w,c
  5328   0022CC  6E04               	movwf	(___fladd@b+3)^0,c
  5329   0022CE  0E80               	movlw	128
  5330   0022D0  1A0D               	xorwf	___fladd@signs^0,f,c
  5331   0022D2  6C10               	negf	___fladd@grs^0,c
  5332   0022D4  5010               	movf	___fladd@grs^0,w,c
  5333   0022D6  A4D8               	btfss	status,2,c
  5334   0022D8  EF70  F011         	goto	u2731
  5335   0022DC  EF72  F011         	goto	u2730
  5336   0022E0                     u2731:
  5337   0022E0  EF82  F011         	goto	l1136
  5338   0022E4                     u2730:
  5339   0022E4  0E01               	movlw	1
  5340   0022E6  2601               	addwf	___fladd@b^0,f,c
  5341   0022E8  0E00               	movlw	0
  5342   0022EA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5343   0022EC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5344   0022EE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5345   0022F0  EF82  F011         	goto	l1136
  5346   0022F4                     l2992:
  5347   0022F4  5005               	movf	___fladd@a^0,w,c
  5348   0022F6  5E01               	subwf	___fladd@b^0,f,c
  5349   0022F8  5006               	movf	(___fladd@a+1)^0,w,c
  5350   0022FA  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5351   0022FC  5007               	movf	(___fladd@a+2)^0,w,c
  5352   0022FE  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5353   002300  5008               	movf	(___fladd@a+3)^0,w,c
  5354   002302  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5355   002304                     l1136:
  5356   002304  5001               	movf	___fladd@b^0,w,c
  5357   002306  1002               	iorwf	(___fladd@b+1)^0,w,c
  5358   002308  1003               	iorwf	(___fladd@b+2)^0,w,c
  5359   00230A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5360   00230C  A4D8               	btfss	status,2,c
  5361   00230E  EF8B  F011         	goto	u2741
  5362   002312  EF8D  F011         	goto	u2740
  5363   002316                     u2741:
  5364   002316  EFC2  F011         	goto	l3016
  5365   00231A                     u2740:
  5366   00231A  5010               	movf	___fladd@grs^0,w,c
  5367   00231C  A4D8               	btfss	status,2,c
  5368   00231E  EF93  F011         	goto	u2751
  5369   002322  EF95  F011         	goto	u2750
  5370   002326                     u2751:
  5371   002326  EFC2  F011         	goto	l3016
  5372   00232A                     u2750:
  5373   00232A  0E00               	movlw	0
  5374   00232C  6E01               	movwf	?___fladd^0,c
  5375   00232E  0E00               	movlw	0
  5376   002330  6E02               	movwf	(?___fladd+1)^0,c
  5377   002332  0E00               	movlw	0
  5378   002334  6E03               	movwf	(?___fladd+2)^0,c
  5379   002336  0E00               	movlw	0
  5380   002338  6E04               	movwf	(?___fladd+3)^0,c
  5381   00233A  EF5D  F012         	goto	l1128
  5382   00233E                     l3000:
  5383   00233E  90D8               	bcf	status,0,c
  5384   002340  3601               	rlcf	___fladd@b^0,f,c
  5385   002342  3602               	rlcf	(___fladd@b+1)^0,f,c
  5386   002344  3603               	rlcf	(___fladd@b+2)^0,f,c
  5387   002346  3604               	rlcf	(___fladd@b+3)^0,f,c
  5388   002348  AE10               	btfss	___fladd@grs^0,7,c
  5389   00234A  EFA9  F011         	goto	u2761
  5390   00234E  EFAB  F011         	goto	u2760
  5391   002352                     u2761:
  5392   002352  EFAC  F011         	goto	l3006
  5393   002356                     u2760:
  5394   002356  8001               	bsf	___fladd@b^0,0,c
  5395   002358                     l3006:
  5396   002358  A010               	btfss	___fladd@grs^0,0,c
  5397   00235A  EFB1  F011         	goto	u2771
  5398   00235E  EFB3  F011         	goto	u2770
  5399   002362                     u2771:
  5400   002362  EFB7  F011         	goto	l3010
  5401   002366                     u2770:
  5402   002366  80D8               	bsf	status,0,c
  5403   002368  3610               	rlcf	___fladd@grs^0,f,c
  5404   00236A  EFB9  F011         	goto	l3012
  5405   00236E                     l3010:
  5406   00236E  90D8               	bcf	status,0,c
  5407   002370  3610               	rlcf	___fladd@grs^0,f,c
  5408   002372                     l3012:
  5409   002372  500F               	movf	___fladd@bexp^0,w,c
  5410   002374  B4D8               	btfsc	status,2,c
  5411   002376  EFBF  F011         	goto	u2781
  5412   00237A  EFC1  F011         	goto	u2780
  5413   00237E                     u2781:
  5414   00237E  EFC2  F011         	goto	l3016
  5415   002382                     u2780:
  5416   002382  060F               	decf	___fladd@bexp^0,f,c
  5417   002384                     l3016:
  5418   002384  AE03               	btfss	(___fladd@b+2)^0,7,c
  5419   002386  EFC7  F011         	goto	u2791
  5420   00238A  EFC9  F011         	goto	u2790
  5421   00238E                     u2791:
  5422   00238E  EF9F  F011         	goto	l3000
  5423   002392                     u2790:
  5424   002392                     l3018:
  5425   002392  0E00               	movlw	0
  5426   002394  6E0E               	movwf	___fladd@aexp^0,c
  5427   002396  AE10               	btfss	___fladd@grs^0,7,c
  5428   002398  EFD0  F011         	goto	u2801
  5429   00239C  EFD2  F011         	goto	u2800
  5430   0023A0                     u2801:
  5431   0023A0  EFEA  F011         	goto	l1145
  5432   0023A4                     u2800:
  5433   0023A4  C010  F009         	movff	___fladd@grs,??___fladd
  5434   0023A8  0E7F               	movlw	127
  5435   0023AA  1609               	andwf	??___fladd^0,f,c
  5436   0023AC  B4D8               	btfsc	status,2,c
  5437   0023AE  EFDB  F011         	goto	u2811
  5438   0023B2  EFDD  F011         	goto	u2810
  5439   0023B6                     u2811:
  5440   0023B6  EFE1  F011         	goto	l1146
  5441   0023BA                     u2810:
  5442   0023BA                     l3024:
  5443   0023BA  0E01               	movlw	1
  5444   0023BC  6E0E               	movwf	___fladd@aexp^0,c
  5445   0023BE  EFEA  F011         	goto	l1145
  5446   0023C2                     l1146:
  5447   0023C2  A001               	btfss	___fladd@b^0,0,c
  5448   0023C4  EFE6  F011         	goto	u2821
  5449   0023C8  EFE8  F011         	goto	u2820
  5450   0023CC                     u2821:
  5451   0023CC  EFEA  F011         	goto	l1145
  5452   0023D0                     u2820:
  5453   0023D0  EFDD  F011         	goto	l3024
  5454   0023D4                     l1145:
  5455   0023D4  500E               	movf	___fladd@aexp^0,w,c
  5456   0023D6  B4D8               	btfsc	status,2,c
  5457   0023D8  EFF0  F011         	goto	u2831
  5458   0023DC  EFF2  F011         	goto	u2830
  5459   0023E0                     u2831:
  5460   0023E0  EF1D  F012         	goto	l3036
  5461   0023E4                     u2830:
  5462   0023E4  0E01               	movlw	1
  5463   0023E6  2601               	addwf	___fladd@b^0,f,c
  5464   0023E8  0E00               	movlw	0
  5465   0023EA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5466   0023EC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5467   0023EE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5468   0023F0  A004               	btfss	(___fladd@b+3)^0,0,c
  5469   0023F2  EFFD  F011         	goto	u2841
  5470   0023F6  EFFF  F011         	goto	u2840
  5471   0023FA                     u2841:
  5472   0023FA  EF1D  F012         	goto	l3036
  5473   0023FE                     u2840:
  5474   0023FE  C001  F009         	movff	___fladd@b,??___fladd
  5475   002402  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5476   002406  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5477   00240A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5478   00240E  340C               	rlcf	(??___fladd+3)^0,w,c
  5479   002410  320C               	rrcf	(??___fladd+3)^0,f,c
  5480   002412  320B               	rrcf	(??___fladd+2)^0,f,c
  5481   002414  320A               	rrcf	(??___fladd+1)^0,f,c
  5482   002416  3209               	rrcf	??___fladd^0,f,c
  5483   002418  C009  F001         	movff	??___fladd,___fladd@b
  5484   00241C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5485   002420  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5486   002424  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5487   002428  280F               	incf	___fladd@bexp^0,w,c
  5488   00242A  B4D8               	btfsc	status,2,c
  5489   00242C  EF1A  F012         	goto	u2851
  5490   002430  EF1C  F012         	goto	u2850
  5491   002434                     u2851:
  5492   002434  EF1D  F012         	goto	l3036
  5493   002438                     u2850:
  5494   002438  2A0F               	incf	___fladd@bexp^0,f,c
  5495   00243A                     l3036:
  5496   00243A  280F               	incf	___fladd@bexp^0,w,c
  5497   00243C  B4D8               	btfsc	status,2,c
  5498   00243E  EF23  F012         	goto	u2861
  5499   002442  EF25  F012         	goto	u2860
  5500   002446                     u2861:
  5501   002446  EF2D  F012         	goto	l3040
  5502   00244A                     u2860:
  5503   00244A  500F               	movf	___fladd@bexp^0,w,c
  5504   00244C  A4D8               	btfss	status,2,c
  5505   00244E  EF2B  F012         	goto	u2871
  5506   002452  EF2D  F012         	goto	u2870
  5507   002456                     u2871:
  5508   002456  EF3F  F012         	goto	l3044
  5509   00245A                     u2870:
  5510   00245A                     l3040:
  5511   00245A  0E00               	movlw	0
  5512   00245C  6E01               	movwf	___fladd@b^0,c
  5513   00245E  0E00               	movlw	0
  5514   002460  6E02               	movwf	(___fladd@b+1)^0,c
  5515   002462  0E00               	movlw	0
  5516   002464  6E03               	movwf	(___fladd@b+2)^0,c
  5517   002466  0E00               	movlw	0
  5518   002468  6E04               	movwf	(___fladd@b+3)^0,c
  5519   00246A  500F               	movf	___fladd@bexp^0,w,c
  5520   00246C  A4D8               	btfss	status,2,c
  5521   00246E  EF3B  F012         	goto	u2881
  5522   002472  EF3D  F012         	goto	u2880
  5523   002476                     u2881:
  5524   002476  EF3F  F012         	goto	l3044
  5525   00247A                     u2880:
  5526   00247A  0E00               	movlw	0
  5527   00247C  6E0D               	movwf	___fladd@signs^0,c
  5528   00247E                     l3044:
  5529   00247E  A00F               	btfss	___fladd@bexp^0,0,c
  5530   002480  EF44  F012         	goto	u2891
  5531   002484  EF46  F012         	goto	u2890
  5532   002488                     u2891:
  5533   002488  EF49  F012         	goto	l3048
  5534   00248C                     u2890:
  5535   00248C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5536   00248E  EF4A  F012         	goto	l3050
  5537   002492                     l3048:
  5538   002492  9E03               	bcf	(___fladd@b+2)^0,7,c
  5539   002494                     l3050:
  5540   002494  90D8               	bcf	status,0,c
  5541   002496  300F               	rrcf	___fladd@bexp^0,w,c
  5542   002498  6E04               	movwf	(___fladd@b+3)^0,c
  5543   00249A  AE0D               	btfss	___fladd@signs^0,7,c
  5544   00249C  EF52  F012         	goto	u2901
  5545   0024A0  EF54  F012         	goto	u2900
  5546   0024A4                     u2901:
  5547   0024A4  EF55  F012         	goto	l3056
  5548   0024A8                     u2900:
  5549   0024A8  8E04               	bsf	(___fladd@b+3)^0,7,c
  5550   0024AA                     l3056:
  5551   0024AA  C001  F001         	movff	___fladd@b,?___fladd
  5552   0024AE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5553   0024B2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5554   0024B6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5555   0024BA                     l1128:
  5556   0024BA  0012               	return		;funcret
  5557   0024BC                     __end_of___fladd:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function ___flmul *****************
  5561 ;; Defined at:
  5562 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  b               4   58[COMRAM] unsigned char 
  5565 ;;  a               4   62[COMRAM] unsigned char 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  prod            4   77[COMRAM] struct .
  5568 ;;  grs             4   71[COMRAM] unsigned long 
  5569 ;;  temp            2   81[COMRAM] struct .
  5570 ;;  bexp            1   76[COMRAM] unsigned char 
  5571 ;;  aexp            1   75[COMRAM] unsigned char 
  5572 ;;  sign            1   70[COMRAM] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  4   58[COMRAM] unsigned char 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, prodl, prodh
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5582 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;Total ram usage:       25 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_custom_floatmodulo
  5592 ;;		_RGB_to_HSV
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text23
  5597   0024BC                     __ptext23:
  5598                           	callstack 0
  5599   0024BC                     ___flmul:
  5600                           	callstack 26
  5601   0024BC  503E               	movf	(___flmul@b+3)^0,w,c
  5602   0024BE  0B80               	andlw	128
  5603   0024C0  6E47               	movwf	___flmul@sign^0,c
  5604   0024C2  503E               	movf	(___flmul@b+3)^0,w,c
  5605   0024C4  243E               	addwf	(___flmul@b+3)^0,w,c
  5606   0024C6  6E4D               	movwf	___flmul@bexp^0,c
  5607   0024C8  AE3D               	btfss	(___flmul@b+2)^0,7,c
  5608   0024CA  EF69  F012         	goto	u3161
  5609   0024CE  EF6B  F012         	goto	u3160
  5610   0024D2                     u3161:
  5611   0024D2  EF6C  F012         	goto	l3208
  5612   0024D6                     u3160:
  5613   0024D6  804D               	bsf	___flmul@bexp^0,0,c
  5614   0024D8                     l3208:
  5615   0024D8  504D               	movf	___flmul@bexp^0,w,c
  5616   0024DA  B4D8               	btfsc	status,2,c
  5617   0024DC  EF72  F012         	goto	u3171
  5618   0024E0  EF74  F012         	goto	u3170
  5619   0024E4                     u3171:
  5620   0024E4  EF87  F012         	goto	l3216
  5621   0024E8                     u3170:
  5622   0024E8  284D               	incf	___flmul@bexp^0,w,c
  5623   0024EA  A4D8               	btfss	status,2,c
  5624   0024EC  EF7A  F012         	goto	u3181
  5625   0024F0  EF7C  F012         	goto	u3180
  5626   0024F4                     u3181:
  5627   0024F4  EF84  F012         	goto	l3214
  5628   0024F8                     u3180:
  5629   0024F8  0E00               	movlw	0
  5630   0024FA  6E3B               	movwf	___flmul@b^0,c
  5631   0024FC  0E00               	movlw	0
  5632   0024FE  6E3C               	movwf	(___flmul@b+1)^0,c
  5633   002500  0E00               	movlw	0
  5634   002502  6E3D               	movwf	(___flmul@b+2)^0,c
  5635   002504  0E00               	movlw	0
  5636   002506  6E3E               	movwf	(___flmul@b+3)^0,c
  5637   002508                     l3214:
  5638   002508  8E3D               	bsf	(___flmul@b+2)^0,7,c
  5639   00250A  EF8F  F012         	goto	l3218
  5640   00250E                     l3216:
  5641   00250E  0E00               	movlw	0
  5642   002510  6E3B               	movwf	___flmul@b^0,c
  5643   002512  0E00               	movlw	0
  5644   002514  6E3C               	movwf	(___flmul@b+1)^0,c
  5645   002516  0E00               	movlw	0
  5646   002518  6E3D               	movwf	(___flmul@b+2)^0,c
  5647   00251A  0E00               	movlw	0
  5648   00251C  6E3E               	movwf	(___flmul@b+3)^0,c
  5649   00251E                     l3218:
  5650   00251E  5042               	movf	(___flmul@a+3)^0,w,c
  5651   002520  0B80               	andlw	128
  5652   002522  1A47               	xorwf	___flmul@sign^0,f,c
  5653   002524  5042               	movf	(___flmul@a+3)^0,w,c
  5654   002526  2442               	addwf	(___flmul@a+3)^0,w,c
  5655   002528  6E4C               	movwf	___flmul@aexp^0,c
  5656   00252A  AE41               	btfss	(___flmul@a+2)^0,7,c
  5657   00252C  EF9A  F012         	goto	u3191
  5658   002530  EF9C  F012         	goto	u3190
  5659   002534                     u3191:
  5660   002534  EF9D  F012         	goto	l3226
  5661   002538                     u3190:
  5662   002538  804C               	bsf	___flmul@aexp^0,0,c
  5663   00253A                     l3226:
  5664   00253A  504C               	movf	___flmul@aexp^0,w,c
  5665   00253C  B4D8               	btfsc	status,2,c
  5666   00253E  EFA3  F012         	goto	u3201
  5667   002542  EFA5  F012         	goto	u3200
  5668   002546                     u3201:
  5669   002546  EFB8  F012         	goto	l3234
  5670   00254A                     u3200:
  5671   00254A  284C               	incf	___flmul@aexp^0,w,c
  5672   00254C  A4D8               	btfss	status,2,c
  5673   00254E  EFAB  F012         	goto	u3211
  5674   002552  EFAD  F012         	goto	u3210
  5675   002556                     u3211:
  5676   002556  EFB5  F012         	goto	l3232
  5677   00255A                     u3210:
  5678   00255A  0E00               	movlw	0
  5679   00255C  6E3F               	movwf	___flmul@a^0,c
  5680   00255E  0E00               	movlw	0
  5681   002560  6E40               	movwf	(___flmul@a+1)^0,c
  5682   002562  0E00               	movlw	0
  5683   002564  6E41               	movwf	(___flmul@a+2)^0,c
  5684   002566  0E00               	movlw	0
  5685   002568  6E42               	movwf	(___flmul@a+3)^0,c
  5686   00256A                     l3232:
  5687   00256A  8E41               	bsf	(___flmul@a+2)^0,7,c
  5688   00256C  EFC0  F012         	goto	l1205
  5689   002570                     l3234:
  5690   002570  0E00               	movlw	0
  5691   002572  6E3F               	movwf	___flmul@a^0,c
  5692   002574  0E00               	movlw	0
  5693   002576  6E40               	movwf	(___flmul@a+1)^0,c
  5694   002578  0E00               	movlw	0
  5695   00257A  6E41               	movwf	(___flmul@a+2)^0,c
  5696   00257C  0E00               	movlw	0
  5697   00257E  6E42               	movwf	(___flmul@a+3)^0,c
  5698   002580                     l1205:
  5699   002580  504C               	movf	___flmul@aexp^0,w,c
  5700   002582  B4D8               	btfsc	status,2,c
  5701   002584  EFC6  F012         	goto	u3221
  5702   002588  EFC8  F012         	goto	u3220
  5703   00258C                     u3221:
  5704   00258C  EFD0  F012         	goto	l3238
  5705   002590                     u3220:
  5706   002590  504D               	movf	___flmul@bexp^0,w,c
  5707   002592  A4D8               	btfss	status,2,c
  5708   002594  EFCE  F012         	goto	u3231
  5709   002598  EFD0  F012         	goto	u3230
  5710   00259C                     u3231:
  5711   00259C  EFDA  F012         	goto	l3242
  5712   0025A0                     u3230:
  5713   0025A0                     l3238:
  5714   0025A0  0E00               	movlw	0
  5715   0025A2  6E3B               	movwf	?___flmul^0,c
  5716   0025A4  0E00               	movlw	0
  5717   0025A6  6E3C               	movwf	(?___flmul+1)^0,c
  5718   0025A8  0E00               	movlw	0
  5719   0025AA  6E3D               	movwf	(?___flmul+2)^0,c
  5720   0025AC  0E00               	movlw	0
  5721   0025AE  6E3E               	movwf	(?___flmul+3)^0,c
  5722   0025B0  EF72  F014         	goto	l1209
  5723   0025B4                     l3242:
  5724   0025B4  5041               	movf	(___flmul@a+2)^0,w,c
  5725   0025B6  023B               	mulwf	___flmul@b^0,c
  5726   0025B8  CFF3 F052          	movff	prodl,___flmul@temp
  5727   0025BC  CFF4 F053          	movff	prodh,___flmul@temp+1
  5728   0025C0  5052               	movf	___flmul@temp^0,w,c
  5729   0025C2  6E48               	movwf	___flmul@grs^0,c
  5730   0025C4  6A49               	clrf	(___flmul@grs+1)^0,c
  5731   0025C6  6A4A               	clrf	(___flmul@grs+2)^0,c
  5732   0025C8  6A4B               	clrf	(___flmul@grs+3)^0,c
  5733   0025CA  5053               	movf	(___flmul@temp+1)^0,w,c
  5734   0025CC  6E4E               	movwf	___flmul@prod^0,c
  5735   0025CE  6A4F               	clrf	(___flmul@prod+1)^0,c
  5736   0025D0  6A50               	clrf	(___flmul@prod+2)^0,c
  5737   0025D2  6A51               	clrf	(___flmul@prod+3)^0,c
  5738   0025D4  5040               	movf	(___flmul@a+1)^0,w,c
  5739   0025D6  023C               	mulwf	(___flmul@b+1)^0,c
  5740   0025D8  CFF3 F052          	movff	prodl,___flmul@temp
  5741   0025DC  CFF4 F053          	movff	prodh,___flmul@temp+1
  5742   0025E0  5052               	movf	___flmul@temp^0,w,c
  5743   0025E2  2648               	addwf	___flmul@grs^0,f,c
  5744   0025E4  0E00               	movlw	0
  5745   0025E6  2249               	addwfc	(___flmul@grs+1)^0,f,c
  5746   0025E8  224A               	addwfc	(___flmul@grs+2)^0,f,c
  5747   0025EA  224B               	addwfc	(___flmul@grs+3)^0,f,c
  5748   0025EC  5053               	movf	(___flmul@temp+1)^0,w,c
  5749   0025EE  264E               	addwf	___flmul@prod^0,f,c
  5750   0025F0  0E00               	movlw	0
  5751   0025F2  224F               	addwfc	(___flmul@prod+1)^0,f,c
  5752   0025F4  2250               	addwfc	(___flmul@prod+2)^0,f,c
  5753   0025F6  2251               	addwfc	(___flmul@prod+3)^0,f,c
  5754   0025F8  503F               	movf	___flmul@a^0,w,c
  5755   0025FA  023D               	mulwf	(___flmul@b+2)^0,c
  5756   0025FC  CFF3 F052          	movff	prodl,___flmul@temp
  5757   002600  CFF4 F053          	movff	prodh,___flmul@temp+1
  5758   002604  5052               	movf	___flmul@temp^0,w,c
  5759   002606  2648               	addwf	___flmul@grs^0,f,c
  5760   002608  0E00               	movlw	0
  5761   00260A  2249               	addwfc	(___flmul@grs+1)^0,f,c
  5762   00260C  224A               	addwfc	(___flmul@grs+2)^0,f,c
  5763   00260E  224B               	addwfc	(___flmul@grs+3)^0,f,c
  5764   002610  5053               	movf	(___flmul@temp+1)^0,w,c
  5765   002612  264E               	addwf	___flmul@prod^0,f,c
  5766   002614  0E00               	movlw	0
  5767   002616  224F               	addwfc	(___flmul@prod+1)^0,f,c
  5768   002618  2250               	addwfc	(___flmul@prod+2)^0,f,c
  5769   00261A  2251               	addwfc	(___flmul@prod+3)^0,f,c
  5770   00261C  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  5771   002620  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  5772   002624  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  5773   002628  6A48               	clrf	___flmul@grs^0,c
  5774   00262A  503F               	movf	___flmul@a^0,w,c
  5775   00262C  023C               	mulwf	(___flmul@b+1)^0,c
  5776   00262E  CFF3 F052          	movff	prodl,___flmul@temp
  5777   002632  CFF4 F053          	movff	prodh,___flmul@temp+1
  5778   002636  5052               	movf	___flmul@temp^0,w,c
  5779   002638  2648               	addwf	___flmul@grs^0,f,c
  5780   00263A  5053               	movf	(___flmul@temp+1)^0,w,c
  5781   00263C  2249               	addwfc	(___flmul@grs+1)^0,f,c
  5782   00263E  0E00               	movlw	0
  5783   002640  224A               	addwfc	(___flmul@grs+2)^0,f,c
  5784   002642  0E00               	movlw	0
  5785   002644  224B               	addwfc	(___flmul@grs+3)^0,f,c
  5786   002646  5040               	movf	(___flmul@a+1)^0,w,c
  5787   002648  023B               	mulwf	___flmul@b^0,c
  5788   00264A  CFF3 F052          	movff	prodl,___flmul@temp
  5789   00264E  CFF4 F053          	movff	prodh,___flmul@temp+1
  5790   002652  5052               	movf	___flmul@temp^0,w,c
  5791   002654  2648               	addwf	___flmul@grs^0,f,c
  5792   002656  5053               	movf	(___flmul@temp+1)^0,w,c
  5793   002658  2249               	addwfc	(___flmul@grs+1)^0,f,c
  5794   00265A  0E00               	movlw	0
  5795   00265C  224A               	addwfc	(___flmul@grs+2)^0,f,c
  5796   00265E  0E00               	movlw	0
  5797   002660  224B               	addwfc	(___flmul@grs+3)^0,f,c
  5798   002662  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  5799   002666  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  5800   00266A  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  5801   00266E  6A48               	clrf	___flmul@grs^0,c
  5802   002670  503F               	movf	___flmul@a^0,w,c
  5803   002672  023B               	mulwf	___flmul@b^0,c
  5804   002674  CFF3 F052          	movff	prodl,___flmul@temp
  5805   002678  CFF4 F053          	movff	prodh,___flmul@temp+1
  5806   00267C  5052               	movf	___flmul@temp^0,w,c
  5807   00267E  2648               	addwf	___flmul@grs^0,f,c
  5808   002680  5053               	movf	(___flmul@temp+1)^0,w,c
  5809   002682  2249               	addwfc	(___flmul@grs+1)^0,f,c
  5810   002684  0E00               	movlw	0
  5811   002686  224A               	addwfc	(___flmul@grs+2)^0,f,c
  5812   002688  0E00               	movlw	0
  5813   00268A  224B               	addwfc	(___flmul@grs+3)^0,f,c
  5814   00268C  5041               	movf	(___flmul@a+2)^0,w,c
  5815   00268E  023C               	mulwf	(___flmul@b+1)^0,c
  5816   002690  CFF3 F052          	movff	prodl,___flmul@temp
  5817   002694  CFF4 F053          	movff	prodh,___flmul@temp+1
  5818   002698  5052               	movf	___flmul@temp^0,w,c
  5819   00269A  264E               	addwf	___flmul@prod^0,f,c
  5820   00269C  5053               	movf	(___flmul@temp+1)^0,w,c
  5821   00269E  224F               	addwfc	(___flmul@prod+1)^0,f,c
  5822   0026A0  0E00               	movlw	0
  5823   0026A2  2250               	addwfc	(___flmul@prod+2)^0,f,c
  5824   0026A4  0E00               	movlw	0
  5825   0026A6  2251               	addwfc	(___flmul@prod+3)^0,f,c
  5826   0026A8  5040               	movf	(___flmul@a+1)^0,w,c
  5827   0026AA  023D               	mulwf	(___flmul@b+2)^0,c
  5828   0026AC  CFF3 F052          	movff	prodl,___flmul@temp
  5829   0026B0  CFF4 F053          	movff	prodh,___flmul@temp+1
  5830   0026B4  5052               	movf	___flmul@temp^0,w,c
  5831   0026B6  264E               	addwf	___flmul@prod^0,f,c
  5832   0026B8  5053               	movf	(___flmul@temp+1)^0,w,c
  5833   0026BA  224F               	addwfc	(___flmul@prod+1)^0,f,c
  5834   0026BC  0E00               	movlw	0
  5835   0026BE  2250               	addwfc	(___flmul@prod+2)^0,f,c
  5836   0026C0  0E00               	movlw	0
  5837   0026C2  2251               	addwfc	(___flmul@prod+3)^0,f,c
  5838   0026C4  5041               	movf	(___flmul@a+2)^0,w,c
  5839   0026C6  023D               	mulwf	(___flmul@b+2)^0,c
  5840   0026C8  CFF3 F052          	movff	prodl,___flmul@temp
  5841   0026CC  CFF4 F053          	movff	prodh,___flmul@temp+1
  5842   0026D0  5052               	movf	___flmul@temp^0,w,c
  5843   0026D2  6E43               	movwf	??___flmul^0,c
  5844   0026D4  5053               	movf	(___flmul@temp+1)^0,w,c
  5845   0026D6  6E44               	movwf	(??___flmul+1)^0,c
  5846   0026D8  6A45               	clrf	(??___flmul+2)^0,c
  5847   0026DA  6A46               	clrf	(??___flmul+3)^0,c
  5848   0026DC  C045  F046         	movff	??___flmul+2,??___flmul+3
  5849   0026E0  C044  F045         	movff	??___flmul+1,??___flmul+2
  5850   0026E4  C043  F044         	movff	??___flmul,??___flmul+1
  5851   0026E8  6A43               	clrf	??___flmul^0,c
  5852   0026EA  5043               	movf	??___flmul^0,w,c
  5853   0026EC  264E               	addwf	___flmul@prod^0,f,c
  5854   0026EE  5044               	movf	(??___flmul+1)^0,w,c
  5855   0026F0  224F               	addwfc	(___flmul@prod+1)^0,f,c
  5856   0026F2  5045               	movf	(??___flmul+2)^0,w,c
  5857   0026F4  2250               	addwfc	(___flmul@prod+2)^0,f,c
  5858   0026F6  5046               	movf	(??___flmul+3)^0,w,c
  5859   0026F8  2251               	addwfc	(___flmul@prod+3)^0,f,c
  5860   0026FA  C048  F043         	movff	___flmul@grs,??___flmul
  5861   0026FE  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  5862   002702  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  5863   002706  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  5864   00270A  0E19               	movlw	25
  5865   00270C  EF8D  F013         	goto	u3240
  5866   002710                     u3245:
  5867   002710  90D8               	bcf	status,0,c
  5868   002712  3246               	rrcf	(??___flmul+3)^0,f,c
  5869   002714  3245               	rrcf	(??___flmul+2)^0,f,c
  5870   002716  3244               	rrcf	(??___flmul+1)^0,f,c
  5871   002718  3243               	rrcf	??___flmul^0,f,c
  5872   00271A                     u3240:
  5873   00271A  2EE8               	decfsz	wreg,f,c
  5874   00271C  EF88  F013         	goto	u3245
  5875   002720  5043               	movf	??___flmul^0,w,c
  5876   002722  264E               	addwf	___flmul@prod^0,f,c
  5877   002724  5044               	movf	(??___flmul+1)^0,w,c
  5878   002726  224F               	addwfc	(___flmul@prod+1)^0,f,c
  5879   002728  5045               	movf	(??___flmul+2)^0,w,c
  5880   00272A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  5881   00272C  5046               	movf	(??___flmul+3)^0,w,c
  5882   00272E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  5883   002730  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  5884   002734  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  5885   002738  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  5886   00273C  6A48               	clrf	___flmul@grs^0,c
  5887   00273E  504C               	movf	___flmul@aexp^0,w,c
  5888   002740  C04D  F043         	movff	___flmul@bexp,??___flmul
  5889   002744  6A44               	clrf	(??___flmul+1)^0,c
  5890   002746  2643               	addwf	??___flmul^0,f,c
  5891   002748  0E00               	movlw	0
  5892   00274A  2244               	addwfc	(??___flmul+1)^0,f,c
  5893   00274C  0E82               	movlw	130
  5894   00274E  2443               	addwf	??___flmul^0,w,c
  5895   002750  6E52               	movwf	___flmul@temp^0,c
  5896   002752  0EFF               	movlw	255
  5897   002754  2044               	addwfc	(??___flmul+1)^0,w,c
  5898   002756  6E53               	movwf	(___flmul@temp+1)^0,c
  5899   002758  EFC3  F013         	goto	l3290
  5900   00275C                     l3284:
  5901   00275C  90D8               	bcf	status,0,c
  5902   00275E  364E               	rlcf	___flmul@prod^0,f,c
  5903   002760  364F               	rlcf	(___flmul@prod+1)^0,f,c
  5904   002762  3650               	rlcf	(___flmul@prod+2)^0,f,c
  5905   002764  3651               	rlcf	(___flmul@prod+3)^0,f,c
  5906   002766  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  5907   002768  EFB8  F013         	goto	u3251
  5908   00276C  EFBA  F013         	goto	u3250
  5909   002770                     u3251:
  5910   002770  EFBB  F013         	goto	l1212
  5911   002774                     u3250:
  5912   002774  804E               	bsf	___flmul@prod^0,0,c
  5913   002776                     l1212:
  5914   002776  90D8               	bcf	status,0,c
  5915   002778  3648               	rlcf	___flmul@grs^0,f,c
  5916   00277A  3649               	rlcf	(___flmul@grs+1)^0,f,c
  5917   00277C  364A               	rlcf	(___flmul@grs+2)^0,f,c
  5918   00277E  364B               	rlcf	(___flmul@grs+3)^0,f,c
  5919   002780  0652               	decf	___flmul@temp^0,f,c
  5920   002782  A0D8               	btfss	status,0,c
  5921   002784  0653               	decf	(___flmul@temp+1)^0,f,c
  5922   002786                     l3290:
  5923   002786  AE50               	btfss	(___flmul@prod+2)^0,7,c
  5924   002788  EFC8  F013         	goto	u3261
  5925   00278C  EFCA  F013         	goto	u3260
  5926   002790                     u3261:
  5927   002790  EFAE  F013         	goto	l3284
  5928   002794                     u3260:
  5929   002794  0E00               	movlw	0
  5930   002796  6E4C               	movwf	___flmul@aexp^0,c
  5931   002798  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  5932   00279A  EFD1  F013         	goto	u3271
  5933   00279E  EFD3  F013         	goto	u3270
  5934   0027A2                     u3271:
  5935   0027A2  EFF7  F013         	goto	l1214
  5936   0027A6                     u3270:
  5937   0027A6  0EFF               	movlw	255
  5938   0027A8  1448               	andwf	___flmul@grs^0,w,c
  5939   0027AA  6E43               	movwf	??___flmul^0,c
  5940   0027AC  0EFF               	movlw	255
  5941   0027AE  1449               	andwf	(___flmul@grs+1)^0,w,c
  5942   0027B0  6E44               	movwf	(??___flmul+1)^0,c
  5943   0027B2  0EFF               	movlw	255
  5944   0027B4  144A               	andwf	(___flmul@grs+2)^0,w,c
  5945   0027B6  6E45               	movwf	(??___flmul+2)^0,c
  5946   0027B8  0E7F               	movlw	127
  5947   0027BA  144B               	andwf	(___flmul@grs+3)^0,w,c
  5948   0027BC  6E46               	movwf	(??___flmul+3)^0,c
  5949   0027BE  5043               	movf	??___flmul^0,w,c
  5950   0027C0  1044               	iorwf	(??___flmul+1)^0,w,c
  5951   0027C2  1045               	iorwf	(??___flmul+2)^0,w,c
  5952   0027C4  1046               	iorwf	(??___flmul+3)^0,w,c
  5953   0027C6  B4D8               	btfsc	status,2,c
  5954   0027C8  EFE8  F013         	goto	u3281
  5955   0027CC  EFEA  F013         	goto	u3280
  5956   0027D0                     u3281:
  5957   0027D0  EFEE  F013         	goto	l1215
  5958   0027D4                     u3280:
  5959   0027D4                     l3298:
  5960   0027D4  0E01               	movlw	1
  5961   0027D6  6E4C               	movwf	___flmul@aexp^0,c
  5962   0027D8  EFF7  F013         	goto	l1214
  5963   0027DC                     l1215:
  5964   0027DC  A04E               	btfss	___flmul@prod^0,0,c
  5965   0027DE  EFF3  F013         	goto	u3291
  5966   0027E2  EFF5  F013         	goto	u3290
  5967   0027E6                     u3291:
  5968   0027E6  EFF7  F013         	goto	l1214
  5969   0027EA                     u3290:
  5970   0027EA  EFEA  F013         	goto	l3298
  5971   0027EE                     l1214:
  5972   0027EE  504C               	movf	___flmul@aexp^0,w,c
  5973   0027F0  B4D8               	btfsc	status,2,c
  5974   0027F2  EFFD  F013         	goto	u3301
  5975   0027F6  EFFF  F013         	goto	u3300
  5976   0027FA                     u3301:
  5977   0027FA  EF23  F014         	goto	l3310
  5978   0027FE                     u3300:
  5979   0027FE  0E01               	movlw	1
  5980   002800  264E               	addwf	___flmul@prod^0,f,c
  5981   002802  0E00               	movlw	0
  5982   002804  224F               	addwfc	(___flmul@prod+1)^0,f,c
  5983   002806  2250               	addwfc	(___flmul@prod+2)^0,f,c
  5984   002808  2251               	addwfc	(___flmul@prod+3)^0,f,c
  5985   00280A  A051               	btfss	(___flmul@prod+3)^0,0,c
  5986   00280C  EF0A  F014         	goto	u3311
  5987   002810  EF0C  F014         	goto	u3310
  5988   002814                     u3311:
  5989   002814  EF23  F014         	goto	l3310
  5990   002818                     u3310:
  5991   002818  C04E  F043         	movff	___flmul@prod,??___flmul
  5992   00281C  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  5993   002820  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  5994   002824  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  5995   002828  3446               	rlcf	(??___flmul+3)^0,w,c
  5996   00282A  3246               	rrcf	(??___flmul+3)^0,f,c
  5997   00282C  3245               	rrcf	(??___flmul+2)^0,f,c
  5998   00282E  3244               	rrcf	(??___flmul+1)^0,f,c
  5999   002830  3243               	rrcf	??___flmul^0,f,c
  6000   002832  C043  F04E         	movff	??___flmul,___flmul@prod
  6001   002836  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6002   00283A  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6003   00283E  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6004   002842  4A52               	infsnz	___flmul@temp^0,f,c
  6005   002844  2A53               	incf	(___flmul@temp+1)^0,f,c
  6006   002846                     l3310:
  6007   002846  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6008   002848  EF2E  F014         	goto	u3321
  6009   00284C  5053               	movf	(___flmul@temp+1)^0,w,c
  6010   00284E  E108               	bnz	u3320
  6011   002850  2852               	incf	___flmul@temp^0,w,c
  6012   002852  A0D8               	btfss	status,0,c
  6013   002854  EF2E  F014         	goto	u3321
  6014   002858  EF30  F014         	goto	u3320
  6015   00285C                     u3321:
  6016   00285C  EF3A  F014         	goto	l3314
  6017   002860                     u3320:
  6018   002860  0E00               	movlw	0
  6019   002862  6E4E               	movwf	___flmul@prod^0,c
  6020   002864  0E00               	movlw	0
  6021   002866  6E4F               	movwf	(___flmul@prod+1)^0,c
  6022   002868  0E80               	movlw	128
  6023   00286A  6E50               	movwf	(___flmul@prod+2)^0,c
  6024   00286C  0E7F               	movlw	127
  6025   00286E  6E51               	movwf	(___flmul@prod+3)^0,c
  6026   002870  EF68  F014         	goto	l3326
  6027   002874                     l3314:
  6028   002874  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6029   002876  EF47  F014         	goto	u3330
  6030   00287A  5053               	movf	(___flmul@temp+1)^0,w,c
  6031   00287C  E106               	bnz	u3331
  6032   00287E  0452               	decf	___flmul@temp^0,w,c
  6033   002880  B0D8               	btfsc	status,0,c
  6034   002882  EF45  F014         	goto	u3331
  6035   002886  EF47  F014         	goto	u3330
  6036   00288A                     u3331:
  6037   00288A  EF53  F014         	goto	l1222
  6038   00288E                     u3330:
  6039   00288E  0E00               	movlw	0
  6040   002890  6E4E               	movwf	___flmul@prod^0,c
  6041   002892  0E00               	movlw	0
  6042   002894  6E4F               	movwf	(___flmul@prod+1)^0,c
  6043   002896  0E00               	movlw	0
  6044   002898  6E50               	movwf	(___flmul@prod+2)^0,c
  6045   00289A  0E00               	movlw	0
  6046   00289C  6E51               	movwf	(___flmul@prod+3)^0,c
  6047   00289E  0E00               	movlw	0
  6048   0028A0  6E47               	movwf	___flmul@sign^0,c
  6049   0028A2  EF68  F014         	goto	l3326
  6050   0028A6                     l1222:
  6051   0028A6  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6052   0028AA  0EFF               	movlw	255
  6053   0028AC  164E               	andwf	___flmul@prod^0,f,c
  6054   0028AE  0EFF               	movlw	255
  6055   0028B0  164F               	andwf	(___flmul@prod+1)^0,f,c
  6056   0028B2  0E7F               	movlw	127
  6057   0028B4  1650               	andwf	(___flmul@prod+2)^0,f,c
  6058   0028B6  0E00               	movlw	0
  6059   0028B8  1651               	andwf	(___flmul@prod+3)^0,f,c
  6060   0028BA  A04D               	btfss	___flmul@bexp^0,0,c
  6061   0028BC  EF62  F014         	goto	u3341
  6062   0028C0  EF64  F014         	goto	u3340
  6063   0028C4                     u3341:
  6064   0028C4  EF65  F014         	goto	l3324
  6065   0028C8                     u3340:
  6066   0028C8  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6067   0028CA                     l3324:
  6068   0028CA  90D8               	bcf	status,0,c
  6069   0028CC  304D               	rrcf	___flmul@bexp^0,w,c
  6070   0028CE  6E51               	movwf	(___flmul@prod+3)^0,c
  6071   0028D0                     l3326:
  6072   0028D0  5047               	movf	___flmul@sign^0,w,c
  6073   0028D2  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6074   0028D4  C04E  F03B         	movff	___flmul@prod,?___flmul
  6075   0028D8  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6076   0028DC  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6077   0028E0  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6078   0028E4                     l1209:
  6079   0028E4  0012               	return		;funcret
  6080   0028E6                     __end_of___flmul:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function ___fleq *****************
  6084 ;; Defined at:
  6085 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  ff1             4    0[COMRAM] unsigned char 
  6088 ;;  ff2             4    4[COMRAM] unsigned char 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;		None               void
  6093 ;; Registers used:
  6094 ;;		wreg, status,2, status,0
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;Total ram usage:       12 bytes
  6105 ;; Hardware stack levels used: 1
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_custom_floatmodulo
  6110 ;;		_RGB_to_HSV
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text24
  6115   0042E4                     __ptext24:
  6116                           	callstack 0
  6117   0042E4                     ___fleq:
  6118                           	callstack 26
  6119   0042E4  0E00               	movlw	0
  6120   0042E6  1401               	andwf	___fleq@ff1^0,w,c
  6121   0042E8  6E09               	movwf	??___fleq^0,c
  6122   0042EA  0E00               	movlw	0
  6123   0042EC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6124   0042EE  6E0A               	movwf	(??___fleq+1)^0,c
  6125   0042F0  0E80               	movlw	128
  6126   0042F2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6127   0042F4  6E0B               	movwf	(??___fleq+2)^0,c
  6128   0042F6  0E7F               	movlw	127
  6129   0042F8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6130   0042FA  6E0C               	movwf	(??___fleq+3)^0,c
  6131   0042FC  5009               	movf	??___fleq^0,w,c
  6132   0042FE  100A               	iorwf	(??___fleq+1)^0,w,c
  6133   004300  100B               	iorwf	(??___fleq+2)^0,w,c
  6134   004302  100C               	iorwf	(??___fleq+3)^0,w,c
  6135   004304  A4D8               	btfss	status,2,c
  6136   004306  EF87  F021         	goto	u3351
  6137   00430A  EF89  F021         	goto	u3350
  6138   00430E                     u3351:
  6139   00430E  EF91  F021         	goto	l3342
  6140   004312                     u3350:
  6141   004312  0E00               	movlw	0
  6142   004314  6E01               	movwf	___fleq@ff1^0,c
  6143   004316  0E00               	movlw	0
  6144   004318  6E02               	movwf	(___fleq@ff1+1)^0,c
  6145   00431A  0E00               	movlw	0
  6146   00431C  6E03               	movwf	(___fleq@ff1+2)^0,c
  6147   00431E  0E00               	movlw	0
  6148   004320  6E04               	movwf	(___fleq@ff1+3)^0,c
  6149   004322                     l3342:
  6150   004322  0E00               	movlw	0
  6151   004324  1405               	andwf	___fleq@ff2^0,w,c
  6152   004326  6E09               	movwf	??___fleq^0,c
  6153   004328  0E00               	movlw	0
  6154   00432A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6155   00432C  6E0A               	movwf	(??___fleq+1)^0,c
  6156   00432E  0E80               	movlw	128
  6157   004330  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6158   004332  6E0B               	movwf	(??___fleq+2)^0,c
  6159   004334  0E7F               	movlw	127
  6160   004336  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6161   004338  6E0C               	movwf	(??___fleq+3)^0,c
  6162   00433A  5009               	movf	??___fleq^0,w,c
  6163   00433C  100A               	iorwf	(??___fleq+1)^0,w,c
  6164   00433E  100B               	iorwf	(??___fleq+2)^0,w,c
  6165   004340  100C               	iorwf	(??___fleq+3)^0,w,c
  6166   004342  A4D8               	btfss	status,2,c
  6167   004344  EFA6  F021         	goto	u3361
  6168   004348  EFA8  F021         	goto	u3360
  6169   00434C                     u3361:
  6170   00434C  EFB0  F021         	goto	l3346
  6171   004350                     u3360:
  6172   004350  0E00               	movlw	0
  6173   004352  6E05               	movwf	___fleq@ff2^0,c
  6174   004354  0E00               	movlw	0
  6175   004356  6E06               	movwf	(___fleq@ff2+1)^0,c
  6176   004358  0E00               	movlw	0
  6177   00435A  6E07               	movwf	(___fleq@ff2+2)^0,c
  6178   00435C  0E00               	movlw	0
  6179   00435E  6E08               	movwf	(___fleq@ff2+3)^0,c
  6180   004360                     l3346:
  6181   004360  5005               	movf	___fleq@ff2^0,w,c
  6182   004362  1801               	xorwf	___fleq@ff1^0,w,c
  6183   004364  E10F               	bnz	u3370
  6184   004366  5006               	movf	(___fleq@ff2+1)^0,w,c
  6185   004368  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6186   00436A  E10C               	bnz	u3370
  6187   00436C  5007               	movf	(___fleq@ff2+2)^0,w,c
  6188   00436E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6189   004370  E109               	bnz	u3370
  6190   004372  5008               	movf	(___fleq@ff2+3)^0,w,c
  6191   004374  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6192   004376  B4D8               	btfsc	status,2,c
  6193   004378  EFC0  F021         	goto	u3371
  6194   00437C  EFC2  F021         	goto	u3370
  6195   004380                     u3371:
  6196   004380  EFC5  F021         	goto	l3350
  6197   004384                     u3370:
  6198   004384  90D8               	bcf	status,0,c
  6199   004386  EFC6  F021         	goto	l850
  6200   00438A                     l3350:
  6201   00438A  80D8               	bsf	status,0,c
  6202   00438C                     l850:
  6203   00438C  0012               	return		;funcret
  6204   00438E                     __end_of___fleq:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function ___fldiv *****************
  6208 ;; Defined at:
  6209 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  b               4   33[COMRAM] unsigned char 
  6212 ;;  a               4   37[COMRAM] unsigned char 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  grs             4   52[COMRAM] unsigned long 
  6215 ;;  rem             4   45[COMRAM] unsigned long 
  6216 ;;  new_exp         2   50[COMRAM] short 
  6217 ;;  aexp            1   57[COMRAM] unsigned char 
  6218 ;;  bexp            1   56[COMRAM] unsigned char 
  6219 ;;  sign            1   49[COMRAM] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  4   33[COMRAM] unsigned char 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6232 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6233 ;;Total ram usage:       25 bytes
  6234 ;; Hardware stack levels used: 1
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_custom_floatmodulo
  6239 ;;		_RGB_to_HSV
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text25
  6244   0028E6                     __ptext25:
  6245                           	callstack 0
  6246   0028E6                     ___fldiv:
  6247                           	callstack 26
  6248   0028E6  5025               	movf	(___fldiv@b+3)^0,w,c
  6249   0028E8  0B80               	andlw	128
  6250   0028EA  6E32               	movwf	___fldiv@sign^0,c
  6251   0028EC  5025               	movf	(___fldiv@b+3)^0,w,c
  6252   0028EE  2425               	addwf	(___fldiv@b+3)^0,w,c
  6253   0028F0  6E39               	movwf	___fldiv@bexp^0,c
  6254   0028F2  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6255   0028F4  EF7E  F014         	goto	u2931
  6256   0028F8  EF80  F014         	goto	u2930
  6257   0028FC                     u2931:
  6258   0028FC  EF81  F014         	goto	l3070
  6259   002900                     u2930:
  6260   002900  8039               	bsf	___fldiv@bexp^0,0,c
  6261   002902                     l3070:
  6262   002902  5039               	movf	___fldiv@bexp^0,w,c
  6263   002904  B4D8               	btfsc	status,2,c
  6264   002906  EF87  F014         	goto	u2941
  6265   00290A  EF89  F014         	goto	u2940
  6266   00290E                     u2941:
  6267   00290E  EF9E  F014         	goto	l3080
  6268   002912                     u2940:
  6269   002912  2839               	incf	___fldiv@bexp^0,w,c
  6270   002914  A4D8               	btfss	status,2,c
  6271   002916  EF8F  F014         	goto	u2951
  6272   00291A  EF91  F014         	goto	u2950
  6273   00291E                     u2951:
  6274   00291E  EF99  F014         	goto	l3076
  6275   002922                     u2950:
  6276   002922  0E00               	movlw	0
  6277   002924  6E22               	movwf	___fldiv@b^0,c
  6278   002926  0E00               	movlw	0
  6279   002928  6E23               	movwf	(___fldiv@b+1)^0,c
  6280   00292A  0E00               	movlw	0
  6281   00292C  6E24               	movwf	(___fldiv@b+2)^0,c
  6282   00292E  0E00               	movlw	0
  6283   002930  6E25               	movwf	(___fldiv@b+3)^0,c
  6284   002932                     l3076:
  6285   002932  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6286   002934  0E00               	movlw	0
  6287   002936  6E25               	movwf	(___fldiv@b+3)^0,c
  6288   002938  EFA6  F014         	goto	l3082
  6289   00293C                     l3080:
  6290   00293C  0E00               	movlw	0
  6291   00293E  6E22               	movwf	___fldiv@b^0,c
  6292   002940  0E00               	movlw	0
  6293   002942  6E23               	movwf	(___fldiv@b+1)^0,c
  6294   002944  0E00               	movlw	0
  6295   002946  6E24               	movwf	(___fldiv@b+2)^0,c
  6296   002948  0E00               	movlw	0
  6297   00294A  6E25               	movwf	(___fldiv@b+3)^0,c
  6298   00294C                     l3082:
  6299   00294C  5029               	movf	(___fldiv@a+3)^0,w,c
  6300   00294E  0B80               	andlw	128
  6301   002950  1A32               	xorwf	___fldiv@sign^0,f,c
  6302   002952  5029               	movf	(___fldiv@a+3)^0,w,c
  6303   002954  2429               	addwf	(___fldiv@a+3)^0,w,c
  6304   002956  6E3A               	movwf	___fldiv@aexp^0,c
  6305   002958  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6306   00295A  EFB1  F014         	goto	u2961
  6307   00295E  EFB3  F014         	goto	u2960
  6308   002962                     u2961:
  6309   002962  EFB4  F014         	goto	l3090
  6310   002966                     u2960:
  6311   002966  803A               	bsf	___fldiv@aexp^0,0,c
  6312   002968                     l3090:
  6313   002968  503A               	movf	___fldiv@aexp^0,w,c
  6314   00296A  B4D8               	btfsc	status,2,c
  6315   00296C  EFBA  F014         	goto	u2971
  6316   002970  EFBC  F014         	goto	u2970
  6317   002974                     u2971:
  6318   002974  EFD1  F014         	goto	l3100
  6319   002978                     u2970:
  6320   002978  283A               	incf	___fldiv@aexp^0,w,c
  6321   00297A  A4D8               	btfss	status,2,c
  6322   00297C  EFC2  F014         	goto	u2981
  6323   002980  EFC4  F014         	goto	u2980
  6324   002984                     u2981:
  6325   002984  EFCC  F014         	goto	l3096
  6326   002988                     u2980:
  6327   002988  0E00               	movlw	0
  6328   00298A  6E26               	movwf	___fldiv@a^0,c
  6329   00298C  0E00               	movlw	0
  6330   00298E  6E27               	movwf	(___fldiv@a+1)^0,c
  6331   002990  0E00               	movlw	0
  6332   002992  6E28               	movwf	(___fldiv@a+2)^0,c
  6333   002994  0E00               	movlw	0
  6334   002996  6E29               	movwf	(___fldiv@a+3)^0,c
  6335   002998                     l3096:
  6336   002998  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6337   00299A  0E00               	movlw	0
  6338   00299C  6E29               	movwf	(___fldiv@a+3)^0,c
  6339   00299E  EFD9  F014         	goto	l3102
  6340   0029A2                     l3100:
  6341   0029A2  0E00               	movlw	0
  6342   0029A4  6E26               	movwf	___fldiv@a^0,c
  6343   0029A6  0E00               	movlw	0
  6344   0029A8  6E27               	movwf	(___fldiv@a+1)^0,c
  6345   0029AA  0E00               	movlw	0
  6346   0029AC  6E28               	movwf	(___fldiv@a+2)^0,c
  6347   0029AE  0E00               	movlw	0
  6348   0029B0  6E29               	movwf	(___fldiv@a+3)^0,c
  6349   0029B2                     l3102:
  6350   0029B2  5026               	movf	___fldiv@a^0,w,c
  6351   0029B4  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6352   0029B6  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6353   0029B8  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6354   0029BA  A4D8               	btfss	status,2,c
  6355   0029BC  EFE2  F014         	goto	u2991
  6356   0029C0  EFE4  F014         	goto	u2990
  6357   0029C4                     u2991:
  6358   0029C4  EFFC  F014         	goto	l3114
  6359   0029C8                     u2990:
  6360   0029C8  0E00               	movlw	0
  6361   0029CA  6E22               	movwf	___fldiv@b^0,c
  6362   0029CC  0E00               	movlw	0
  6363   0029CE  6E23               	movwf	(___fldiv@b+1)^0,c
  6364   0029D0  0E00               	movlw	0
  6365   0029D2  6E24               	movwf	(___fldiv@b+2)^0,c
  6366   0029D4  0E00               	movlw	0
  6367   0029D6  6E25               	movwf	(___fldiv@b+3)^0,c
  6368   0029D8  0E80               	movlw	128
  6369   0029DA  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6370   0029DC  0E7F               	movlw	127
  6371   0029DE  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6372   0029E0                     l3108:
  6373   0029E0  5032               	movf	___fldiv@sign^0,w,c
  6374   0029E2  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6375   0029E4  C022  F022         	movff	___fldiv@b,?___fldiv
  6376   0029E8  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6377   0029EC  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6378   0029F0  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6379   0029F4  EF3F  F016         	goto	l1173
  6380   0029F8                     l3114:
  6381   0029F8  5039               	movf	___fldiv@bexp^0,w,c
  6382   0029FA  A4D8               	btfss	status,2,c
  6383   0029FC  EF02  F015         	goto	u3001
  6384   002A00  EF04  F015         	goto	u3000
  6385   002A04                     u3001:
  6386   002A04  EF0E  F015         	goto	l3122
  6387   002A08                     u3000:
  6388   002A08  0E00               	movlw	0
  6389   002A0A  6E22               	movwf	?___fldiv^0,c
  6390   002A0C  0E00               	movlw	0
  6391   002A0E  6E23               	movwf	(?___fldiv+1)^0,c
  6392   002A10  0E00               	movlw	0
  6393   002A12  6E24               	movwf	(?___fldiv+2)^0,c
  6394   002A14  0E00               	movlw	0
  6395   002A16  6E25               	movwf	(?___fldiv+3)^0,c
  6396   002A18  EF3F  F016         	goto	l1173
  6397   002A1C                     l3122:
  6398   002A1C  503A               	movf	___fldiv@aexp^0,w,c
  6399   002A1E  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6400   002A22  6A2B               	clrf	(??___fldiv+1)^0,c
  6401   002A24  5E2A               	subwf	??___fldiv^0,f,c
  6402   002A26  0E00               	movlw	0
  6403   002A28  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6404   002A2A  0E7F               	movlw	127
  6405   002A2C  242A               	addwf	??___fldiv^0,w,c
  6406   002A2E  6E33               	movwf	___fldiv@new_exp^0,c
  6407   002A30  0E00               	movlw	0
  6408   002A32  202B               	addwfc	(??___fldiv+1)^0,w,c
  6409   002A34  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6410   002A36  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6411   002A3A  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6412   002A3E  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6413   002A42  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6414   002A46  0E00               	movlw	0
  6415   002A48  6E22               	movwf	___fldiv@b^0,c
  6416   002A4A  0E00               	movlw	0
  6417   002A4C  6E23               	movwf	(___fldiv@b+1)^0,c
  6418   002A4E  0E00               	movlw	0
  6419   002A50  6E24               	movwf	(___fldiv@b+2)^0,c
  6420   002A52  0E00               	movlw	0
  6421   002A54  6E25               	movwf	(___fldiv@b+3)^0,c
  6422   002A56  0E00               	movlw	0
  6423   002A58  6E35               	movwf	___fldiv@grs^0,c
  6424   002A5A  0E00               	movlw	0
  6425   002A5C  6E36               	movwf	(___fldiv@grs+1)^0,c
  6426   002A5E  0E00               	movlw	0
  6427   002A60  6E37               	movwf	(___fldiv@grs+2)^0,c
  6428   002A62  0E00               	movlw	0
  6429   002A64  6E38               	movwf	(___fldiv@grs+3)^0,c
  6430   002A66  0E00               	movlw	0
  6431   002A68  6E3A               	movwf	___fldiv@aexp^0,c
  6432   002A6A  EF6F  F015         	goto	l1175
  6433   002A6E                     l3132:
  6434   002A6E  503A               	movf	___fldiv@aexp^0,w,c
  6435   002A70  B4D8               	btfsc	status,2,c
  6436   002A72  EF3D  F015         	goto	u3011
  6437   002A76  EF3F  F015         	goto	u3010
  6438   002A7A                     u3011:
  6439   002A7A  EF56  F015         	goto	l3140
  6440   002A7E                     u3010:
  6441   002A7E  90D8               	bcf	status,0,c
  6442   002A80  362E               	rlcf	___fldiv@rem^0,f,c
  6443   002A82  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6444   002A84  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6445   002A86  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6446   002A88  90D8               	bcf	status,0,c
  6447   002A8A  3622               	rlcf	___fldiv@b^0,f,c
  6448   002A8C  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6449   002A8E  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6450   002A90  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6451   002A92  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6452   002A94  EF4E  F015         	goto	u3021
  6453   002A98  EF50  F015         	goto	u3020
  6454   002A9C                     u3021:
  6455   002A9C  EF51  F015         	goto	l1178
  6456   002AA0                     u3020:
  6457   002AA0  8022               	bsf	___fldiv@b^0,0,c
  6458   002AA2                     l1178:
  6459   002AA2  90D8               	bcf	status,0,c
  6460   002AA4  3635               	rlcf	___fldiv@grs^0,f,c
  6461   002AA6  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6462   002AA8  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6463   002AAA  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6464   002AAC                     l3140:
  6465   002AAC  5026               	movf	___fldiv@a^0,w,c
  6466   002AAE  5C2E               	subwf	___fldiv@rem^0,w,c
  6467   002AB0  5027               	movf	(___fldiv@a+1)^0,w,c
  6468   002AB2  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6469   002AB4  5028               	movf	(___fldiv@a+2)^0,w,c
  6470   002AB6  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6471   002AB8  5029               	movf	(___fldiv@a+3)^0,w,c
  6472   002ABA  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6473   002ABC  A0D8               	btfss	status,0,c
  6474   002ABE  EF63  F015         	goto	u3031
  6475   002AC2  EF65  F015         	goto	u3030
  6476   002AC6                     u3031:
  6477   002AC6  EF6E  F015         	goto	l3146
  6478   002ACA                     u3030:
  6479   002ACA  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6480   002ACC  5026               	movf	___fldiv@a^0,w,c
  6481   002ACE  5E2E               	subwf	___fldiv@rem^0,f,c
  6482   002AD0  5027               	movf	(___fldiv@a+1)^0,w,c
  6483   002AD2  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6484   002AD4  5028               	movf	(___fldiv@a+2)^0,w,c
  6485   002AD6  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6486   002AD8  5029               	movf	(___fldiv@a+3)^0,w,c
  6487   002ADA  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6488   002ADC                     l3146:
  6489   002ADC  2A3A               	incf	___fldiv@aexp^0,f,c
  6490   002ADE                     l1175:
  6491   002ADE  0E19               	movlw	25
  6492   002AE0  643A               	cpfsgt	___fldiv@aexp^0,c
  6493   002AE2  EF75  F015         	goto	u3041
  6494   002AE6  EF77  F015         	goto	u3040
  6495   002AEA                     u3041:
  6496   002AEA  EF37  F015         	goto	l3132
  6497   002AEE                     u3040:
  6498   002AEE  502E               	movf	___fldiv@rem^0,w,c
  6499   002AF0  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6500   002AF2  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6501   002AF4  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6502   002AF6  B4D8               	btfsc	status,2,c
  6503   002AF8  EF80  F015         	goto	u3051
  6504   002AFC  EF82  F015         	goto	u3050
  6505   002B00                     u3051:
  6506   002B00  EF9A  F015         	goto	l3158
  6507   002B04                     u3050:
  6508   002B04  8035               	bsf	___fldiv@grs^0,0,c
  6509   002B06  EF9A  F015         	goto	l3158
  6510   002B0A                     l3152:
  6511   002B0A  90D8               	bcf	status,0,c
  6512   002B0C  3622               	rlcf	___fldiv@b^0,f,c
  6513   002B0E  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6514   002B10  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6515   002B12  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6516   002B14  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6517   002B16  EF8F  F015         	goto	u3061
  6518   002B1A  EF91  F015         	goto	u3060
  6519   002B1E                     u3061:
  6520   002B1E  EF92  F015         	goto	l1184
  6521   002B22                     u3060:
  6522   002B22  8022               	bsf	___fldiv@b^0,0,c
  6523   002B24                     l1184:
  6524   002B24  90D8               	bcf	status,0,c
  6525   002B26  3635               	rlcf	___fldiv@grs^0,f,c
  6526   002B28  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6527   002B2A  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6528   002B2C  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6529   002B2E  0633               	decf	___fldiv@new_exp^0,f,c
  6530   002B30  A0D8               	btfss	status,0,c
  6531   002B32  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6532   002B34                     l3158:
  6533   002B34  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6534   002B36  EF9F  F015         	goto	u3071
  6535   002B3A  EFA1  F015         	goto	u3070
  6536   002B3E                     u3071:
  6537   002B3E  EF85  F015         	goto	l3152
  6538   002B42                     u3070:
  6539   002B42  0E00               	movlw	0
  6540   002B44  6E3A               	movwf	___fldiv@aexp^0,c
  6541   002B46  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6542   002B48  EFA8  F015         	goto	u3081
  6543   002B4C  EFAA  F015         	goto	u3080
  6544   002B50                     u3081:
  6545   002B50  EFCE  F015         	goto	l1186
  6546   002B54                     u3080:
  6547   002B54  0EFF               	movlw	255
  6548   002B56  1435               	andwf	___fldiv@grs^0,w,c
  6549   002B58  6E2A               	movwf	??___fldiv^0,c
  6550   002B5A  0EFF               	movlw	255
  6551   002B5C  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6552   002B5E  6E2B               	movwf	(??___fldiv+1)^0,c
  6553   002B60  0EFF               	movlw	255
  6554   002B62  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6555   002B64  6E2C               	movwf	(??___fldiv+2)^0,c
  6556   002B66  0E7F               	movlw	127
  6557   002B68  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6558   002B6A  6E2D               	movwf	(??___fldiv+3)^0,c
  6559   002B6C  502A               	movf	??___fldiv^0,w,c
  6560   002B6E  102B               	iorwf	(??___fldiv+1)^0,w,c
  6561   002B70  102C               	iorwf	(??___fldiv+2)^0,w,c
  6562   002B72  102D               	iorwf	(??___fldiv+3)^0,w,c
  6563   002B74  B4D8               	btfsc	status,2,c
  6564   002B76  EFBF  F015         	goto	u3091
  6565   002B7A  EFC1  F015         	goto	u3090
  6566   002B7E                     u3091:
  6567   002B7E  EFC5  F015         	goto	l1187
  6568   002B82                     u3090:
  6569   002B82                     l3166:
  6570   002B82  0E01               	movlw	1
  6571   002B84  6E3A               	movwf	___fldiv@aexp^0,c
  6572   002B86  EFCE  F015         	goto	l1186
  6573   002B8A                     l1187:
  6574   002B8A  A022               	btfss	___fldiv@b^0,0,c
  6575   002B8C  EFCA  F015         	goto	u3101
  6576   002B90  EFCC  F015         	goto	u3100
  6577   002B94                     u3101:
  6578   002B94  EFCE  F015         	goto	l1186
  6579   002B98                     u3100:
  6580   002B98  EFC1  F015         	goto	l3166
  6581   002B9C                     l1186:
  6582   002B9C  503A               	movf	___fldiv@aexp^0,w,c
  6583   002B9E  B4D8               	btfsc	status,2,c
  6584   002BA0  EFD4  F015         	goto	u3111
  6585   002BA4  EFD6  F015         	goto	u3110
  6586   002BA8                     u3111:
  6587   002BA8  EFFA  F015         	goto	l3178
  6588   002BAC                     u3110:
  6589   002BAC  0E01               	movlw	1
  6590   002BAE  2622               	addwf	___fldiv@b^0,f,c
  6591   002BB0  0E00               	movlw	0
  6592   002BB2  2223               	addwfc	(___fldiv@b+1)^0,f,c
  6593   002BB4  2224               	addwfc	(___fldiv@b+2)^0,f,c
  6594   002BB6  2225               	addwfc	(___fldiv@b+3)^0,f,c
  6595   002BB8  A025               	btfss	(___fldiv@b+3)^0,0,c
  6596   002BBA  EFE1  F015         	goto	u3121
  6597   002BBE  EFE3  F015         	goto	u3120
  6598   002BC2                     u3121:
  6599   002BC2  EFFA  F015         	goto	l3178
  6600   002BC6                     u3120:
  6601   002BC6  C022  F02A         	movff	___fldiv@b,??___fldiv
  6602   002BCA  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  6603   002BCE  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  6604   002BD2  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  6605   002BD6  342D               	rlcf	(??___fldiv+3)^0,w,c
  6606   002BD8  322D               	rrcf	(??___fldiv+3)^0,f,c
  6607   002BDA  322C               	rrcf	(??___fldiv+2)^0,f,c
  6608   002BDC  322B               	rrcf	(??___fldiv+1)^0,f,c
  6609   002BDE  322A               	rrcf	??___fldiv^0,f,c
  6610   002BE0  C02A  F022         	movff	??___fldiv,___fldiv@b
  6611   002BE4  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  6612   002BE8  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  6613   002BEC  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  6614   002BF0  4A33               	infsnz	___fldiv@new_exp^0,f,c
  6615   002BF2  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  6616   002BF4                     l3178:
  6617   002BF4  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6618   002BF6  EF05  F016         	goto	u3131
  6619   002BFA  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6620   002BFC  E108               	bnz	u3130
  6621   002BFE  2833               	incf	___fldiv@new_exp^0,w,c
  6622   002C00  A0D8               	btfss	status,0,c
  6623   002C02  EF05  F016         	goto	u3131
  6624   002C06  EF07  F016         	goto	u3130
  6625   002C0A                     u3131:
  6626   002C0A  EF12  F016         	goto	l3182
  6627   002C0E                     u3130:
  6628   002C0E  0E00               	movlw	0
  6629   002C10  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6630   002C12  6833               	setf	___fldiv@new_exp^0,c
  6631   002C14  0E00               	movlw	0
  6632   002C16  6E22               	movwf	___fldiv@b^0,c
  6633   002C18  0E00               	movlw	0
  6634   002C1A  6E23               	movwf	(___fldiv@b+1)^0,c
  6635   002C1C  0E00               	movlw	0
  6636   002C1E  6E24               	movwf	(___fldiv@b+2)^0,c
  6637   002C20  0E00               	movlw	0
  6638   002C22  6E25               	movwf	(___fldiv@b+3)^0,c
  6639   002C24                     l3182:
  6640   002C24  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6641   002C26  EF1F  F016         	goto	u3140
  6642   002C2A  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6643   002C2C  E106               	bnz	u3141
  6644   002C2E  0433               	decf	___fldiv@new_exp^0,w,c
  6645   002C30  B0D8               	btfsc	status,0,c
  6646   002C32  EF1D  F016         	goto	u3141
  6647   002C36  EF1F  F016         	goto	u3140
  6648   002C3A                     u3141:
  6649   002C3A  EF2D  F016         	goto	l3186
  6650   002C3E                     u3140:
  6651   002C3E  0E00               	movlw	0
  6652   002C40  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6653   002C42  0E00               	movlw	0
  6654   002C44  6E33               	movwf	___fldiv@new_exp^0,c
  6655   002C46  0E00               	movlw	0
  6656   002C48  6E22               	movwf	___fldiv@b^0,c
  6657   002C4A  0E00               	movlw	0
  6658   002C4C  6E23               	movwf	(___fldiv@b+1)^0,c
  6659   002C4E  0E00               	movlw	0
  6660   002C50  6E24               	movwf	(___fldiv@b+2)^0,c
  6661   002C52  0E00               	movlw	0
  6662   002C54  6E25               	movwf	(___fldiv@b+3)^0,c
  6663   002C56  0E00               	movlw	0
  6664   002C58  6E32               	movwf	___fldiv@sign^0,c
  6665   002C5A                     l3186:
  6666   002C5A  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  6667   002C5E  A039               	btfss	___fldiv@bexp^0,0,c
  6668   002C60  EF34  F016         	goto	u3151
  6669   002C64  EF36  F016         	goto	u3150
  6670   002C68                     u3151:
  6671   002C68  EF39  F016         	goto	l3192
  6672   002C6C                     u3150:
  6673   002C6C  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6674   002C6E  EF3A  F016         	goto	l3194
  6675   002C72                     l3192:
  6676   002C72  9E24               	bcf	(___fldiv@b+2)^0,7,c
  6677   002C74                     l3194:
  6678   002C74  90D8               	bcf	status,0,c
  6679   002C76  3039               	rrcf	___fldiv@bexp^0,w,c
  6680   002C78  6E25               	movwf	(___fldiv@b+3)^0,c
  6681   002C7A  EFF0  F014         	goto	l3108
  6682   002C7E                     l1173:
  6683   002C7E  0012               	return		;funcret
  6684   002C80                     __end_of___fldiv:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function ___flge *****************
  6688 ;; Defined at:
  6689 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  ff1             4    0[COMRAM] unsigned char 
  6692 ;;  ff2             4    4[COMRAM] unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;		None               void
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6706 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6707 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6708 ;;Total ram usage:       12 bytes
  6709 ;; Hardware stack levels used: 1
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		_RGB_to_HSV
  6714 ;;		_color_cardCheck
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           	psect	text26
  6719   003F9A                     __ptext26:
  6720                           	callstack 0
  6721   003F9A                     ___flge:
  6722                           	callstack 28
  6723   003F9A  0E00               	movlw	0
  6724   003F9C  1401               	andwf	___flge@ff1^0,w,c
  6725   003F9E  6E09               	movwf	??___flge^0,c
  6726   003FA0  0E00               	movlw	0
  6727   003FA2  1402               	andwf	(___flge@ff1+1)^0,w,c
  6728   003FA4  6E0A               	movwf	(??___flge+1)^0,c
  6729   003FA6  0E80               	movlw	128
  6730   003FA8  1403               	andwf	(___flge@ff1+2)^0,w,c
  6731   003FAA  6E0B               	movwf	(??___flge+2)^0,c
  6732   003FAC  0E7F               	movlw	127
  6733   003FAE  1404               	andwf	(___flge@ff1+3)^0,w,c
  6734   003FB0  6E0C               	movwf	(??___flge+3)^0,c
  6735   003FB2  5009               	movf	??___flge^0,w,c
  6736   003FB4  100A               	iorwf	(??___flge+1)^0,w,c
  6737   003FB6  100B               	iorwf	(??___flge+2)^0,w,c
  6738   003FB8  100C               	iorwf	(??___flge+3)^0,w,c
  6739   003FBA  A4D8               	btfss	status,2,c
  6740   003FBC  EFE2  F01F         	goto	u3581
  6741   003FC0  EFE4  F01F         	goto	u3580
  6742   003FC4                     u3581:
  6743   003FC4  EFEC  F01F         	goto	l3498
  6744   003FC8                     u3580:
  6745   003FC8  0E00               	movlw	0
  6746   003FCA  6E01               	movwf	___flge@ff1^0,c
  6747   003FCC  0E00               	movlw	0
  6748   003FCE  6E02               	movwf	(___flge@ff1+1)^0,c
  6749   003FD0  0E00               	movlw	0
  6750   003FD2  6E03               	movwf	(___flge@ff1+2)^0,c
  6751   003FD4  0E00               	movlw	0
  6752   003FD6  6E04               	movwf	(___flge@ff1+3)^0,c
  6753   003FD8                     l3498:
  6754   003FD8  0E00               	movlw	0
  6755   003FDA  1405               	andwf	___flge@ff2^0,w,c
  6756   003FDC  6E09               	movwf	??___flge^0,c
  6757   003FDE  0E00               	movlw	0
  6758   003FE0  1406               	andwf	(___flge@ff2+1)^0,w,c
  6759   003FE2  6E0A               	movwf	(??___flge+1)^0,c
  6760   003FE4  0E80               	movlw	128
  6761   003FE6  1407               	andwf	(___flge@ff2+2)^0,w,c
  6762   003FE8  6E0B               	movwf	(??___flge+2)^0,c
  6763   003FEA  0E7F               	movlw	127
  6764   003FEC  1408               	andwf	(___flge@ff2+3)^0,w,c
  6765   003FEE  6E0C               	movwf	(??___flge+3)^0,c
  6766   003FF0  5009               	movf	??___flge^0,w,c
  6767   003FF2  100A               	iorwf	(??___flge+1)^0,w,c
  6768   003FF4  100B               	iorwf	(??___flge+2)^0,w,c
  6769   003FF6  100C               	iorwf	(??___flge+3)^0,w,c
  6770   003FF8  A4D8               	btfss	status,2,c
  6771   003FFA  EF01  F020         	goto	u3591
  6772   003FFE  EF03  F020         	goto	u3590
  6773   004002                     u3591:
  6774   004002  EF0B  F020         	goto	l3502
  6775   004006                     u3590:
  6776   004006  0E00               	movlw	0
  6777   004008  6E05               	movwf	___flge@ff2^0,c
  6778   00400A  0E00               	movlw	0
  6779   00400C  6E06               	movwf	(___flge@ff2+1)^0,c
  6780   00400E  0E00               	movlw	0
  6781   004010  6E07               	movwf	(___flge@ff2+2)^0,c
  6782   004012  0E00               	movlw	0
  6783   004014  6E08               	movwf	(___flge@ff2+3)^0,c
  6784   004016                     l3502:
  6785   004016  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6786   004018  EF10  F020         	goto	u3601
  6787   00401C  EF12  F020         	goto	u3600
  6788   004020                     u3601:
  6789   004020  EF1B  F020         	goto	l3506
  6790   004024                     u3600:
  6791   004024  6C01               	negf	___flge@ff1^0,c
  6792   004026  1E02               	comf	(___flge@ff1+1)^0,f,c
  6793   004028  B0D8               	btfsc	status,0,c
  6794   00402A  2A02               	incf	(___flge@ff1+1)^0,f,c
  6795   00402C  1E03               	comf	(___flge@ff1+2)^0,f,c
  6796   00402E  B0D8               	btfsc	status,0,c
  6797   004030  2A03               	incf	(___flge@ff1+2)^0,f,c
  6798   004032  0E80               	movlw	128
  6799   004034  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6800   004036                     l3506:
  6801   004036  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6802   004038  EF20  F020         	goto	u3611
  6803   00403C  EF22  F020         	goto	u3610
  6804   004040                     u3611:
  6805   004040  EF2B  F020         	goto	l856
  6806   004044                     u3610:
  6807   004044  6C05               	negf	___flge@ff2^0,c
  6808   004046  1E06               	comf	(___flge@ff2+1)^0,f,c
  6809   004048  B0D8               	btfsc	status,0,c
  6810   00404A  2A06               	incf	(___flge@ff2+1)^0,f,c
  6811   00404C  1E07               	comf	(___flge@ff2+2)^0,f,c
  6812   00404E  B0D8               	btfsc	status,0,c
  6813   004050  2A07               	incf	(___flge@ff2+2)^0,f,c
  6814   004052  0E80               	movlw	128
  6815   004054  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6816   004056                     l856:
  6817   004056  0E00               	movlw	0
  6818   004058  1A01               	xorwf	___flge@ff1^0,f,c
  6819   00405A  0E00               	movlw	0
  6820   00405C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6821   00405E  0E00               	movlw	0
  6822   004060  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6823   004062  0E80               	movlw	128
  6824   004064  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6825   004066  0E00               	movlw	0
  6826   004068  1A05               	xorwf	___flge@ff2^0,f,c
  6827   00406A  0E00               	movlw	0
  6828   00406C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6829   00406E  0E00               	movlw	0
  6830   004070  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6831   004072  0E80               	movlw	128
  6832   004074  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6833   004076  5005               	movf	___flge@ff2^0,w,c
  6834   004078  5C01               	subwf	___flge@ff1^0,w,c
  6835   00407A  5006               	movf	(___flge@ff2+1)^0,w,c
  6836   00407C  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6837   00407E  5007               	movf	(___flge@ff2+2)^0,w,c
  6838   004080  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6839   004082  5008               	movf	(___flge@ff2+3)^0,w,c
  6840   004084  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6841   004086  B0D8               	btfsc	status,0,c
  6842   004088  EF48  F020         	goto	u3621
  6843   00408C  EF4A  F020         	goto	u3620
  6844   004090                     u3621:
  6845   004090  EF4D  F020         	goto	l3512
  6846   004094                     u3620:
  6847   004094  90D8               	bcf	status,0,c
  6848   004096  EF4E  F020         	goto	l861
  6849   00409A                     l3512:
  6850   00409A  80D8               	bsf	status,0,c
  6851   00409C                     l861:
  6852   00409C  0012               	return		;funcret
  6853   00409E                     __end_of___flge:
  6854                           	callstack 0
  6855                           
  6856 ;; *************** function _maze_return *****************
  6857 ;; Defined at:
  6858 ;;		line 65 in file "pathfinder_file.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  c               2   32[COMRAM] PTR struct calibration_s
  6861 ;;		 -> calibration(7), 
  6862 ;;  mL              1   34[COMRAM] PTR struct DC_motor
  6863 ;;		 -> motorL(9), 
  6864 ;;  mR              1   35[COMRAM] PTR struct DC_motor
  6865 ;;		 -> motorR(9), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  j               2   51[BANK0 ] int 
  6868 ;;  distance_bac    1   50[BANK0 ] unsigned char 
  6869 ;;  i               2   53[BANK0 ] int 
  6870 ;;  Operation_Hi   50    0[BANK0 ] unsigned char [50]
  6871 ;;  Operation_Co    1    0        unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6882 ;;      Locals:         0      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6883 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Totals:         7      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;Total ram usage:       62 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 3
  6888 ;; This function calls:
  6889 ;;		_backward
  6890 ;;		_forward
  6891 ;;		_leftTURN
  6892 ;;		_rightTURN
  6893 ;; This function is called by:
  6894 ;;		_main
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text27
  6899   002C80                     __ptext27:
  6900                           	callstack 0
  6901   002C80                     _maze_return:
  6902                           	callstack 27
  6903   002C80  0E00               	movlw	0
  6904   002C82  0100               	movlb	0	; () banked
  6905   002C84  6F96               	movwf	(maze_return@i+1)& (0+255),b
  6906   002C86  0E32               	movlw	50
  6907   002C88  6F95               	movwf	maze_return@i& (0+255),b
  6908   002C8A                     l4864:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;pathfinder_file.c: 71:             if(Operation_History[i] > 10){
  6912   002C8A  0E6E               	movlw	low _Operation_History
  6913   002C8C  2595               	addwf	maze_return@i& (0+255),w,b
  6914   002C8E  6ED9               	movwf	fsr2l,c
  6915   002C90  0E01               	movlw	high _Operation_History
  6916   002C92  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  6917   002C94  6EDA               	movwf	fsr2h,c
  6918   002C96  0E0A               	movlw	10
  6919   002C98  64DF               	cpfsgt	indf2,c
  6920   002C9A  EF51  F016         	goto	u5531
  6921   002C9E  EF53  F016         	goto	u5530
  6922   002CA2                     u5531:
  6923   002CA2  EF88  F016         	goto	l4876
  6924   002CA6                     u5530:
  6925   002CA6                     
  6926                           ; BSR set to: 0
  6927                           ;pathfinder_file.c: 72:                 unsigned char distance_back = Operation_History[
      +                          i] - 10;
  6928   002CA6  0E6E               	movlw	low _Operation_History
  6929   002CA8  2595               	addwf	maze_return@i& (0+255),w,b
  6930   002CAA  6ED9               	movwf	fsr2l,c
  6931   002CAC  0E01               	movlw	high _Operation_History
  6932   002CAE  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  6933   002CB0  6EDA               	movwf	fsr2h,c
  6934   002CB2  50DF               	movf	indf2,w,c
  6935   002CB4  0FF6               	addlw	246
  6936   002CB6  6F92               	movwf	maze_return@distance_back& (0+255),b
  6937   002CB8                     
  6938                           ; BSR set to: 0
  6939                           ;pathfinder_file.c: 73:                 for (int j = 0; j < distance_back; j++) {
  6940   002CB8  0E00               	movlw	0
  6941   002CBA  6F94               	movwf	(maze_return@j+1)& (0+255),b
  6942   002CBC  0E00               	movlw	0
  6943   002CBE  6F93               	movwf	maze_return@j& (0+255),b
  6944   002CC0  EF72  F016         	goto	l4874
  6945   002CC4                     l4870:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;pathfinder_file.c: 74:                     forward(c->forward, mL, mR);
  6949   002CC4  C023  F013         	movff	maze_return@mL,forward@mL
  6950   002CC8  C024  F014         	movff	maze_return@mR,forward@mR
  6951   002CCC  EE20 F005          	lfsr	2,5
  6952   002CD0  5021               	movf	maze_return@c^0,w,c
  6953   002CD2  26D9               	addwf	fsr2l,f,c
  6954   002CD4  5022               	movf	(maze_return@c+1)^0,w,c
  6955   002CD6  22DA               	addwfc	fsr2h,f,c
  6956   002CD8  50DF               	movf	indf2,w,c
  6957   002CDA  EC6D  F01A         	call	_forward
  6958   002CDE                     
  6959                           ;pathfinder_file.c: 75:                 }
  6960   002CDE  0100               	movlb	0	; () banked
  6961   002CE0  4B93               	infsnz	maze_return@j& (0+255),f,b
  6962   002CE2  2B94               	incf	(maze_return@j+1)& (0+255),f,b
  6963   002CE4                     l4874:
  6964                           
  6965                           ; BSR set to: 0
  6966   002CE4  5192               	movf	maze_return@distance_back& (0+255),w,b
  6967   002CE6  6E25               	movwf	??_maze_return^0,c
  6968   002CE8  6A26               	clrf	(??_maze_return+1)^0,c
  6969   002CEA  5025               	movf	??_maze_return^0,w,c
  6970   002CEC  5D93               	subwf	maze_return@j& (0+255),w,b
  6971   002CEE  5194               	movf	(maze_return@j+1)& (0+255),w,b
  6972   002CF0  0A80               	xorlw	128
  6973   002CF2  6E27               	movwf	(??_maze_return+2)^0,c
  6974   002CF4  5026               	movf	(??_maze_return+1)^0,w,c
  6975   002CF6  0A80               	xorlw	128
  6976   002CF8  5827               	subwfb	(??_maze_return+2)^0,w,c
  6977   002CFA  A0D8               	btfss	status,0,c
  6978   002CFC  EF82  F016         	goto	u5541
  6979   002D00  EF84  F016         	goto	u5540
  6980   002D04                     u5541:
  6981   002D04  EF62  F016         	goto	l4870
  6982   002D08                     u5540:
  6983   002D08  EF5B  F017         	goto	l4910
  6984   002D0C                     l565:
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;pathfinder_file.c: 77:             }
  6988   002D0C  EF5B  F017         	goto	l4910
  6989   002D10                     l4876:
  6990                           
  6991                           ; BSR set to: 0
  6992   002D10  0E6E               	movlw	low _Operation_History
  6993   002D12  2595               	addwf	maze_return@i& (0+255),w,b
  6994   002D14  6ED9               	movwf	fsr2l,c
  6995   002D16  0E01               	movlw	high _Operation_History
  6996   002D18  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  6997   002D1A  6EDA               	movwf	fsr2h,c
  6998   002D1C  04DE               	decf	postinc2,w,c
  6999   002D1E  A4D8               	btfss	status,2,c
  7000   002D20  EF94  F016         	goto	u5551
  7001   002D24  EF96  F016         	goto	u5550
  7002   002D28                     u5551:
  7003   002D28  EFB2  F016         	goto	l4880
  7004   002D2C                     u5550:
  7005   002D2C                     
  7006                           ; BSR set to: 0
  7007                           ;pathfinder_file.c: 80:                 leftTURN(c->left_90, mL, mR);
  7008   002D2C  C023  F013         	movff	maze_return@mL,leftTURN@mL
  7009   002D30  C024  F014         	movff	maze_return@mR,leftTURN@mR
  7010   002D34  EE20 F002          	lfsr	2,2
  7011   002D38  5021               	movf	maze_return@c^0,w,c
  7012   002D3A  26D9               	addwf	fsr2l,f,c
  7013   002D3C  5022               	movf	(maze_return@c+1)^0,w,c
  7014   002D3E  22DA               	addwfc	fsr2h,f,c
  7015   002D40  50DF               	movf	indf2,w,c
  7016   002D42  ECEC  F01B         	call	_leftTURN
  7017                           
  7018                           ;pathfinder_file.c: 81:                 backward(c->backward, mL, mR);
  7019   002D46  C023  F013         	movff	maze_return@mL,backward@mL
  7020   002D4A  C024  F014         	movff	maze_return@mR,backward@mR
  7021   002D4E  EE20 F006          	lfsr	2,6
  7022   002D52  5021               	movf	maze_return@c^0,w,c
  7023   002D54  26D9               	addwf	fsr2l,f,c
  7024   002D56  5022               	movf	(maze_return@c+1)^0,w,c
  7025   002D58  22DA               	addwfc	fsr2h,f,c
  7026   002D5A  50DF               	movf	indf2,w,c
  7027   002D5C  ECAB  F01C         	call	_backward
  7028                           
  7029                           ;pathfinder_file.c: 82:             }
  7030   002D60  EF5B  F017         	goto	l4910
  7031   002D64                     l4880:
  7032                           
  7033                           ; BSR set to: 0
  7034   002D64  0E6E               	movlw	low _Operation_History
  7035   002D66  2595               	addwf	maze_return@i& (0+255),w,b
  7036   002D68  6ED9               	movwf	fsr2l,c
  7037   002D6A  0E01               	movlw	high _Operation_History
  7038   002D6C  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  7039   002D6E  6EDA               	movwf	fsr2h,c
  7040   002D70  0E02               	movlw	2
  7041   002D72  18DE               	xorwf	postinc2,w,c
  7042   002D74  A4D8               	btfss	status,2,c
  7043   002D76  EFBF  F016         	goto	u5561
  7044   002D7A  EFC1  F016         	goto	u5560
  7045   002D7E                     u5561:
  7046   002D7E  EFDD  F016         	goto	l4884
  7047   002D82                     u5560:
  7048   002D82                     
  7049                           ; BSR set to: 0
  7050                           ;pathfinder_file.c: 85:                 rightTURN(c->right_90, mL, mR);
  7051   002D82  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7052   002D86  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7053   002D8A  EE20 F001          	lfsr	2,1
  7054   002D8E  5021               	movf	maze_return@c^0,w,c
  7055   002D90  26D9               	addwf	fsr2l,f,c
  7056   002D92  5022               	movf	(maze_return@c+1)^0,w,c
  7057   002D94  22DA               	addwfc	fsr2h,f,c
  7058   002D96  50DF               	movf	indf2,w,c
  7059   002D98  EC2D  F01B         	call	_rightTURN
  7060                           
  7061                           ;pathfinder_file.c: 86:                 backward(c->backward, mL, mR);
  7062   002D9C  C023  F013         	movff	maze_return@mL,backward@mL
  7063   002DA0  C024  F014         	movff	maze_return@mR,backward@mR
  7064   002DA4  EE20 F006          	lfsr	2,6
  7065   002DA8  5021               	movf	maze_return@c^0,w,c
  7066   002DAA  26D9               	addwf	fsr2l,f,c
  7067   002DAC  5022               	movf	(maze_return@c+1)^0,w,c
  7068   002DAE  22DA               	addwfc	fsr2h,f,c
  7069   002DB0  50DF               	movf	indf2,w,c
  7070   002DB2  ECAB  F01C         	call	_backward
  7071                           
  7072                           ;pathfinder_file.c: 87:             }
  7073   002DB6  EF5B  F017         	goto	l4910
  7074   002DBA                     l4884:
  7075                           
  7076                           ; BSR set to: 0
  7077   002DBA  0E6E               	movlw	low _Operation_History
  7078   002DBC  2595               	addwf	maze_return@i& (0+255),w,b
  7079   002DBE  6ED9               	movwf	fsr2l,c
  7080   002DC0  0E01               	movlw	high _Operation_History
  7081   002DC2  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  7082   002DC4  6EDA               	movwf	fsr2h,c
  7083   002DC6  0E03               	movlw	3
  7084   002DC8  18DE               	xorwf	postinc2,w,c
  7085   002DCA  A4D8               	btfss	status,2,c
  7086   002DCC  EFEA  F016         	goto	u5571
  7087   002DD0  EFEC  F016         	goto	u5570
  7088   002DD4                     u5571:
  7089   002DD4  EF08  F017         	goto	l4888
  7090   002DD8                     u5570:
  7091   002DD8                     
  7092                           ; BSR set to: 0
  7093                           ;pathfinder_file.c: 90:                 rightTURN(c->right_90, mL, mR);
  7094   002DD8  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7095   002DDC  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7096   002DE0  EE20 F001          	lfsr	2,1
  7097   002DE4  5021               	movf	maze_return@c^0,w,c
  7098   002DE6  26D9               	addwf	fsr2l,f,c
  7099   002DE8  5022               	movf	(maze_return@c+1)^0,w,c
  7100   002DEA  22DA               	addwfc	fsr2h,f,c
  7101   002DEC  50DF               	movf	indf2,w,c
  7102   002DEE  EC2D  F01B         	call	_rightTURN
  7103                           
  7104                           ;pathfinder_file.c: 91:                 rightTURN(c->right_90, mL, mR);
  7105   002DF2  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7106   002DF6  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7107   002DFA  EE20 F001          	lfsr	2,1
  7108   002DFE  5021               	movf	maze_return@c^0,w,c
  7109   002E00  26D9               	addwf	fsr2l,f,c
  7110   002E02  5022               	movf	(maze_return@c+1)^0,w,c
  7111   002E04  22DA               	addwfc	fsr2h,f,c
  7112   002E06  50DF               	movf	indf2,w,c
  7113   002E08  EC2D  F01B         	call	_rightTURN
  7114                           
  7115                           ;pathfinder_file.c: 92:             }
  7116   002E0C  EF5B  F017         	goto	l4910
  7117   002E10                     l4888:
  7118                           
  7119                           ; BSR set to: 0
  7120   002E10  0E6E               	movlw	low _Operation_History
  7121   002E12  2595               	addwf	maze_return@i& (0+255),w,b
  7122   002E14  6ED9               	movwf	fsr2l,c
  7123   002E16  0E01               	movlw	high _Operation_History
  7124   002E18  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  7125   002E1A  6EDA               	movwf	fsr2h,c
  7126   002E1C  0E04               	movlw	4
  7127   002E1E  18DE               	xorwf	postinc2,w,c
  7128   002E20  A4D8               	btfss	status,2,c
  7129   002E22  EF15  F017         	goto	u5581
  7130   002E26  EF17  F017         	goto	u5580
  7131   002E2A                     u5581:
  7132   002E2A  EF19  F017         	goto	l4892
  7133   002E2E                     u5580:
  7134   002E2E  EF5B  F017         	goto	l4910
  7135   002E32                     l4892:
  7136                           
  7137                           ; BSR set to: 0
  7138   002E32  0E6E               	movlw	low _Operation_History
  7139   002E34  2595               	addwf	maze_return@i& (0+255),w,b
  7140   002E36  6ED9               	movwf	fsr2l,c
  7141   002E38  0E01               	movlw	high _Operation_History
  7142   002E3A  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  7143   002E3C  6EDA               	movwf	fsr2h,c
  7144   002E3E  0E05               	movlw	5
  7145   002E40  18DE               	xorwf	postinc2,w,c
  7146   002E42  A4D8               	btfss	status,2,c
  7147   002E44  EF26  F017         	goto	u5591
  7148   002E48  EF28  F017         	goto	u5590
  7149   002E4C                     u5591:
  7150   002E4C  EF2A  F017         	goto	l4896
  7151   002E50                     u5590:
  7152   002E50  EF5B  F017         	goto	l4910
  7153   002E54                     l4896:
  7154                           
  7155                           ; BSR set to: 0
  7156   002E54  0E6E               	movlw	low _Operation_History
  7157   002E56  2595               	addwf	maze_return@i& (0+255),w,b
  7158   002E58  6ED9               	movwf	fsr2l,c
  7159   002E5A  0E01               	movlw	high _Operation_History
  7160   002E5C  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  7161   002E5E  6EDA               	movwf	fsr2h,c
  7162   002E60  0E06               	movlw	6
  7163   002E62  18DE               	xorwf	postinc2,w,c
  7164   002E64  A4D8               	btfss	status,2,c
  7165   002E66  EF37  F017         	goto	u5601
  7166   002E6A  EF39  F017         	goto	u5600
  7167   002E6E                     u5601:
  7168   002E6E  EF3B  F017         	goto	l4900
  7169   002E72                     u5600:
  7170   002E72  EF5B  F017         	goto	l4910
  7171   002E76                     l4900:
  7172                           
  7173                           ; BSR set to: 0
  7174   002E76  0E6E               	movlw	low _Operation_History
  7175   002E78  2595               	addwf	maze_return@i& (0+255),w,b
  7176   002E7A  6ED9               	movwf	fsr2l,c
  7177   002E7C  0E01               	movlw	high _Operation_History
  7178   002E7E  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  7179   002E80  6EDA               	movwf	fsr2h,c
  7180   002E82  0E07               	movlw	7
  7181   002E84  18DE               	xorwf	postinc2,w,c
  7182   002E86  A4D8               	btfss	status,2,c
  7183   002E88  EF48  F017         	goto	u5611
  7184   002E8C  EF4A  F017         	goto	u5610
  7185   002E90                     u5611:
  7186   002E90  EF4C  F017         	goto	l4904
  7187   002E94                     u5610:
  7188   002E94  EF5B  F017         	goto	l4910
  7189   002E98                     l4904:
  7190                           
  7191                           ; BSR set to: 0
  7192   002E98  0E6E               	movlw	low _Operation_History
  7193   002E9A  2595               	addwf	maze_return@i& (0+255),w,b
  7194   002E9C  6ED9               	movwf	fsr2l,c
  7195   002E9E  0E01               	movlw	high _Operation_History
  7196   002EA0  2196               	addwfc	(maze_return@i+1)& (0+255),w,b
  7197   002EA2  6EDA               	movwf	fsr2h,c
  7198   002EA4  0E08               	movlw	8
  7199   002EA6  18DE               	xorwf	postinc2,w,c
  7200   002EA8  A4D8               	btfss	status,2,c
  7201   002EAA  EF59  F017         	goto	u5621
  7202   002EAE  EF5B  F017         	goto	u5620
  7203   002EB2                     u5621:
  7204   002EB2  EF86  F016         	goto	l565
  7205   002EB6                     u5620:
  7206   002EB6                     l4910:
  7207                           
  7208                           ;pathfinder_file.c: 116:         }
  7209   002EB6  0100               	movlb	0	; () banked
  7210   002EB8  0795               	decf	maze_return@i& (0+255),f,b
  7211   002EBA  A0D8               	btfss	status,0,c
  7212   002EBC  0796               	decf	(maze_return@i+1)& (0+255),f,b
  7213   002EBE                     
  7214                           ; BSR set to: 0
  7215   002EBE  BF96               	btfsc	(maze_return@i+1)& (0+255),7,b
  7216   002EC0  EF66  F017         	goto	u5630
  7217   002EC4  EF64  F017         	goto	u5631
  7218   002EC8                     u5631:
  7219   002EC8  EF45  F016         	goto	l4864
  7220   002ECC                     u5630:
  7221   002ECC                     
  7222                           ; BSR set to: 0
  7223                           ;pathfinder_file.c: 118:         char Operation_History[50] = {0};
  7224   002ECC  EE20  F060         	lfsr	2,maze_return@Operation_History
  7225   002ED0  0E31               	movlw	49
  7226   002ED2                     u5641:
  7227   002ED2  6ADE               	clrf	postinc2,c
  7228   002ED4  06E8               	decf	wreg,f,c
  7229   002ED6  E2FD               	bc	u5641
  7230   002ED8                     
  7231                           ; BSR set to: 0
  7232   002ED8  0012               	return		;funcret
  7233   002EDA                     __end_of_maze_return:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function _initDCmotorsPWM *****************
  7237 ;; Defined at:
  7238 ;;		line 5 in file "dc_motor_v1.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;		None
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      void 
  7245 ;; Registers used:
  7246 ;;		wreg, status,2
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;Total ram usage:        2 bytes
  7257 ;; Hardware stack levels used: 1
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_main
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text28
  7266   00438E                     __ptext28:
  7267                           	callstack 0
  7268   00438E                     _initDCmotorsPWM:
  7269                           	callstack 30
  7270   00438E                     
  7271                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  7272   00438E  9485               	bcf	133,2,c	;volatile
  7273                           
  7274                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  7275   004390  9885               	bcf	133,4,c	;volatile
  7276                           
  7277                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  7278   004392  9E83               	bcf	131,7,c	;volatile
  7279                           
  7280                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  7281   004394  9C87               	bcf	135,6,c	;volatile
  7282                           
  7283                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  7284   004396  947D               	bcf	125,2,c	;volatile
  7285                           
  7286                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  7287   004398  987D               	bcf	125,4,c	;volatile
  7288                           
  7289                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  7290   00439A  9E7B               	bcf	123,7,c	;volatile
  7291                           
  7292                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  7293   00439C  9C7F               	bcf	127,6,c	;volatile
  7294   00439E                     
  7295                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  7296   00439E  0E05               	movlw	5
  7297   0043A0  010E               	movlb	14	; () banked
  7298   0043A2  6F74               	movwf	116,b	;volatile
  7299                           
  7300                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  7301   0043A4  0E06               	movlw	6
  7302   0043A6  6F76               	movwf	118,b	;volatile
  7303                           
  7304                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  7305   0043A8  0E07               	movlw	7
  7306   0043AA  6F69               	movwf	105,b	;volatile
  7307                           
  7308                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  7309   0043AC  0E08               	movlw	8
  7310   0043AE  6F88               	movwf	136,b	;volatile
  7311                           
  7312                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  7313   0043B0  50BD               	movf	189,w,c	;volatile
  7314   0043B2  0B8F               	andlw	-113
  7315   0043B4  0940               	iorlw	64
  7316   0043B6  6EBD               	movwf	189,c	;volatile
  7317                           
  7318                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  7319   0043B8  0EE0               	movlw	-32
  7320   0043BA  16BE               	andwf	190,f,c	;volatile
  7321                           
  7322                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  7323   0043BC  50BF               	movf	191,w,c	;volatile
  7324   0043BE  0BF0               	andlw	-16
  7325   0043C0  0901               	iorlw	1
  7326   0043C2  6EBF               	movwf	191,c	;volatile
  7327   0043C4                     
  7328                           ; BSR set to: 14
  7329                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  7330   0043C4  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7331   0043C8                     
  7332                           ; BSR set to: 14
  7333                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  7334   0043C8  8EBD               	bsf	189,7,c	;volatile
  7335                           
  7336                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  7337   0043CA  0E00               	movlw	0
  7338   0043CC  6EAA               	movwf	170,c	;volatile
  7339                           
  7340                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  7341   0043CE  0E00               	movlw	0
  7342   0043D0  6EA6               	movwf	166,c	;volatile
  7343                           
  7344                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  7345   0043D2  0E00               	movlw	0
  7346   0043D4  010F               	movlb	15	; () banked
  7347   0043D6  6F25               	movwf	37,b	;volatile
  7348                           
  7349                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  7350   0043D8  0E00               	movlw	0
  7351   0043DA  6F21               	movwf	33,b	;volatile
  7352                           
  7353                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7354   0043DC  0EFC               	movlw	-4
  7355   0043DE  16AD               	andwf	173,f,c	;volatile
  7356                           
  7357                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7358   0043E0  0EF3               	movlw	-13
  7359   0043E2  16AD               	andwf	173,f,c	;volatile
  7360                           
  7361                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7362   0043E4  0ECF               	movlw	-49
  7363   0043E6  16AD               	andwf	173,f,c	;volatile
  7364                           
  7365                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7366   0043E8  0E3F               	movlw	-193
  7367   0043EA  16AD               	andwf	173,f,c	;volatile
  7368   0043EC                     
  7369                           ; BSR set to: 15
  7370                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  7371   0043EC  88AB               	bsf	171,4,c	;volatile
  7372                           
  7373                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7374   0043EE  50AB               	movf	171,w,c	;volatile
  7375   0043F0  0BF0               	andlw	-16
  7376   0043F2  090C               	iorlw	12
  7377   0043F4  6EAB               	movwf	171,c	;volatile
  7378   0043F6                     
  7379                           ; BSR set to: 15
  7380                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  7381   0043F6  8EAB               	bsf	171,7,c	;volatile
  7382   0043F8                     
  7383                           ; BSR set to: 15
  7384                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  7385   0043F8  88A7               	bsf	167,4,c	;volatile
  7386                           
  7387                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7388   0043FA  50A7               	movf	167,w,c	;volatile
  7389   0043FC  0BF0               	andlw	-16
  7390   0043FE  090C               	iorlw	12
  7391   004400  6EA7               	movwf	167,c	;volatile
  7392   004402                     
  7393                           ; BSR set to: 15
  7394                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  7395   004402  8EA7               	bsf	167,7,c	;volatile
  7396   004404                     
  7397                           ; BSR set to: 15
  7398                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  7399   004404  8926               	bsf	38,4,b	;volatile
  7400                           
  7401                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7402   004406  5126               	movf	38,w,b	;volatile
  7403   004408  0BF0               	andlw	-16
  7404   00440A  090C               	iorlw	12
  7405   00440C  6F26               	movwf	38,b	;volatile
  7406   00440E                     
  7407                           ; BSR set to: 15
  7408                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  7409   00440E  8F26               	bsf	38,7,b	;volatile
  7410   004410                     
  7411                           ; BSR set to: 15
  7412                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  7413   004410  8922               	bsf	34,4,b	;volatile
  7414                           
  7415                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7416   004412  5122               	movf	34,w,b	;volatile
  7417   004414  0BF0               	andlw	-16
  7418   004416  090C               	iorlw	12
  7419   004418  6F22               	movwf	34,b	;volatile
  7420   00441A                     
  7421                           ; BSR set to: 15
  7422                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  7423   00441A  8F22               	bsf	34,7,b	;volatile
  7424   00441C                     
  7425                           ; BSR set to: 15
  7426                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  7427   00441C  9688               	bcf	136,3,c	;volatile
  7428   00441E                     
  7429                           ; BSR set to: 15
  7430                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  7431   00441E  9680               	bcf	128,3,c	;volatile
  7432   004420                     
  7433                           ; BSR set to: 15
  7434   004420  0012               	return		;funcret
  7435   004422                     __end_of_initDCmotorsPWM:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function _calibration_routine *****************
  7439 ;; Defined at:
  7440 ;;		line 81 in file "calibration.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  c               2   32[COMRAM] PTR struct calibration_s
  7443 ;;		 -> calibration(7), 
  7444 ;;  mL              1   34[COMRAM] PTR struct DC_motor
  7445 ;;		 -> motorL(9), 
  7446 ;;  mR              1   35[COMRAM] PTR struct DC_motor
  7447 ;;		 -> motorR(9), 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;Total ram usage:        5 bytes
  7464 ;; Hardware stack levels used: 1
  7465 ;; Hardware stack levels required when called: 3
  7466 ;; This function calls:
  7467 ;;		_adjust_calibration
  7468 ;;		_backward
  7469 ;;		_forward
  7470 ;;		_leftTURN
  7471 ;;		_rightTURN
  7472 ;;		_switch_calibration
  7473 ;; This function is called by:
  7474 ;;		_main
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text29
  7479   003120                     __ptext29:
  7480                           	callstack 0
  7481   003120                     _calibration_routine:
  7482                           	callstack 27
  7483   003120                     l160:
  7484   003120                     
  7485                           ;calibration.c: 85:         if(c->index == 5){
  7486   003120  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7487   003124  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7488   003128  0E05               	movlw	5
  7489   00312A  18DE               	xorwf	postinc2,w,c
  7490   00312C  A4D8               	btfss	status,2,c
  7491   00312E  EF9B  F018         	goto	u5411
  7492   003132  EF9D  F018         	goto	u5410
  7493   003136                     u5411:
  7494   003136  EFB8  F018         	goto	l4754
  7495   00313A                     u5410:
  7496   00313A                     
  7497                           ;calibration.c: 86:             adjust_calibration(&(c->right_90));
  7498   00313A  0E01               	movlw	1
  7499   00313C  2421               	addwf	calibration_routine@c^0,w,c
  7500   00313E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  7501   003140  0E00               	movlw	0
  7502   003142  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  7503   003144  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  7504   003146  EC69  F01D         	call	_adjust_calibration	;wreg free
  7505   00314A                     
  7506                           ;calibration.c: 87:             rightTURN(c->right_90, mL, mR);
  7507   00314A  C023  F013         	movff	calibration_routine@mL,rightTURN@mL
  7508   00314E  C024  F014         	movff	calibration_routine@mR,rightTURN@mR
  7509   003152  EE20 F001          	lfsr	2,1
  7510   003156  5021               	movf	calibration_routine@c^0,w,c
  7511   003158  26D9               	addwf	fsr2l,f,c
  7512   00315A  5022               	movf	(calibration_routine@c+1)^0,w,c
  7513   00315C  22DA               	addwfc	fsr2h,f,c
  7514   00315E  50DF               	movf	indf2,w,c
  7515   003160  EC2D  F01B         	call	_rightTURN
  7516   003164                     
  7517                           ;calibration.c: 88:             switch_calibration(&(c->index));
  7518   003164  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  7519   003168  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  7520   00316C  EC19  F021         	call	_switch_calibration	;wreg free
  7521   003170                     l4754:
  7522                           
  7523                           ;calibration.c: 91:         if(c->index == 6){
  7524   003170  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7525   003174  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7526   003178  0E06               	movlw	6
  7527   00317A  18DE               	xorwf	postinc2,w,c
  7528   00317C  A4D8               	btfss	status,2,c
  7529   00317E  EFC3  F018         	goto	u5421
  7530   003182  EFC5  F018         	goto	u5420
  7531   003186                     u5421:
  7532   003186  EFE0  F018         	goto	l4762
  7533   00318A                     u5420:
  7534   00318A                     
  7535                           ;calibration.c: 92:             adjust_calibration(&(c->left_90));
  7536   00318A  0E02               	movlw	2
  7537   00318C  2421               	addwf	calibration_routine@c^0,w,c
  7538   00318E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  7539   003190  0E00               	movlw	0
  7540   003192  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  7541   003194  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  7542   003196  EC69  F01D         	call	_adjust_calibration	;wreg free
  7543   00319A                     
  7544                           ;calibration.c: 93:             leftTURN(c->left_90, mL, mR);
  7545   00319A  C023  F013         	movff	calibration_routine@mL,leftTURN@mL
  7546   00319E  C024  F014         	movff	calibration_routine@mR,leftTURN@mR
  7547   0031A2  EE20 F002          	lfsr	2,2
  7548   0031A6  5021               	movf	calibration_routine@c^0,w,c
  7549   0031A8  26D9               	addwf	fsr2l,f,c
  7550   0031AA  5022               	movf	(calibration_routine@c+1)^0,w,c
  7551   0031AC  22DA               	addwfc	fsr2h,f,c
  7552   0031AE  50DF               	movf	indf2,w,c
  7553   0031B0  ECEC  F01B         	call	_leftTURN
  7554   0031B4                     
  7555                           ;calibration.c: 94:             switch_calibration(&(c->index));
  7556   0031B4  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  7557   0031B8  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  7558   0031BC  EC19  F021         	call	_switch_calibration	;wreg free
  7559   0031C0                     l4762:
  7560                           
  7561                           ;calibration.c: 97:         if(c->index == 3){
  7562   0031C0  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7563   0031C4  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7564   0031C8  0E03               	movlw	3
  7565   0031CA  18DE               	xorwf	postinc2,w,c
  7566   0031CC  A4D8               	btfss	status,2,c
  7567   0031CE  EFEB  F018         	goto	u5431
  7568   0031D2  EFED  F018         	goto	u5430
  7569   0031D6                     u5431:
  7570   0031D6  EF08  F019         	goto	l4770
  7571   0031DA                     u5430:
  7572   0031DA                     
  7573                           ;calibration.c: 98:             adjust_calibration(&(c->right_135));
  7574   0031DA  0E03               	movlw	3
  7575   0031DC  2421               	addwf	calibration_routine@c^0,w,c
  7576   0031DE  6E01               	movwf	adjust_calibration@calibration_label^0,c
  7577   0031E0  0E00               	movlw	0
  7578   0031E2  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  7579   0031E4  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  7580   0031E6  EC69  F01D         	call	_adjust_calibration	;wreg free
  7581   0031EA                     
  7582                           ;calibration.c: 99:             rightTURN(c->right_135, mL, mR);
  7583   0031EA  C023  F013         	movff	calibration_routine@mL,rightTURN@mL
  7584   0031EE  C024  F014         	movff	calibration_routine@mR,rightTURN@mR
  7585   0031F2  EE20 F003          	lfsr	2,3
  7586   0031F6  5021               	movf	calibration_routine@c^0,w,c
  7587   0031F8  26D9               	addwf	fsr2l,f,c
  7588   0031FA  5022               	movf	(calibration_routine@c+1)^0,w,c
  7589   0031FC  22DA               	addwfc	fsr2h,f,c
  7590   0031FE  50DF               	movf	indf2,w,c
  7591   003200  EC2D  F01B         	call	_rightTURN
  7592   003204                     
  7593                           ;calibration.c: 100:             switch_calibration(&(c->index));
  7594   003204  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  7595   003208  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  7596   00320C  EC19  F021         	call	_switch_calibration	;wreg free
  7597   003210                     l4770:
  7598                           
  7599                           ;calibration.c: 102:         if(c->index == 4){
  7600   003210  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7601   003214  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7602   003218  0E04               	movlw	4
  7603   00321A  18DE               	xorwf	postinc2,w,c
  7604   00321C  A4D8               	btfss	status,2,c
  7605   00321E  EF13  F019         	goto	u5441
  7606   003222  EF15  F019         	goto	u5440
  7607   003226                     u5441:
  7608   003226  EF30  F019         	goto	l4778
  7609   00322A                     u5440:
  7610   00322A                     
  7611                           ;calibration.c: 103:             adjust_calibration(&(c->left_135));
  7612   00322A  0E04               	movlw	4
  7613   00322C  2421               	addwf	calibration_routine@c^0,w,c
  7614   00322E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  7615   003230  0E00               	movlw	0
  7616   003232  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  7617   003234  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  7618   003236  EC69  F01D         	call	_adjust_calibration	;wreg free
  7619   00323A                     
  7620                           ;calibration.c: 104:             leftTURN(c->left_135, mL, mR);
  7621   00323A  C023  F013         	movff	calibration_routine@mL,leftTURN@mL
  7622   00323E  C024  F014         	movff	calibration_routine@mR,leftTURN@mR
  7623   003242  EE20 F004          	lfsr	2,4
  7624   003246  5021               	movf	calibration_routine@c^0,w,c
  7625   003248  26D9               	addwf	fsr2l,f,c
  7626   00324A  5022               	movf	(calibration_routine@c+1)^0,w,c
  7627   00324C  22DA               	addwfc	fsr2h,f,c
  7628   00324E  50DF               	movf	indf2,w,c
  7629   003250  ECEC  F01B         	call	_leftTURN
  7630   003254                     
  7631                           ;calibration.c: 105:             switch_calibration(&(c->index));
  7632   003254  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  7633   003258  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  7634   00325C  EC19  F021         	call	_switch_calibration	;wreg free
  7635   003260                     l4778:
  7636                           
  7637                           ;calibration.c: 108:         if(c->index == 1 ){
  7638   003260  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7639   003264  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7640   003268  04DE               	decf	postinc2,w,c
  7641   00326A  A4D8               	btfss	status,2,c
  7642   00326C  EF3A  F019         	goto	u5451
  7643   003270  EF3C  F019         	goto	u5450
  7644   003274                     u5451:
  7645   003274  EF57  F019         	goto	l4786
  7646   003278                     u5450:
  7647   003278                     
  7648                           ;calibration.c: 109:             adjust_calibration(&(c->forward));
  7649   003278  0E05               	movlw	5
  7650   00327A  2421               	addwf	calibration_routine@c^0,w,c
  7651   00327C  6E01               	movwf	adjust_calibration@calibration_label^0,c
  7652   00327E  0E00               	movlw	0
  7653   003280  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  7654   003282  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  7655   003284  EC69  F01D         	call	_adjust_calibration	;wreg free
  7656   003288                     
  7657                           ;calibration.c: 110:             forward(c->forward, mL, mR);
  7658   003288  C023  F013         	movff	calibration_routine@mL,forward@mL
  7659   00328C  C024  F014         	movff	calibration_routine@mR,forward@mR
  7660   003290  EE20 F005          	lfsr	2,5
  7661   003294  5021               	movf	calibration_routine@c^0,w,c
  7662   003296  26D9               	addwf	fsr2l,f,c
  7663   003298  5022               	movf	(calibration_routine@c+1)^0,w,c
  7664   00329A  22DA               	addwfc	fsr2h,f,c
  7665   00329C  50DF               	movf	indf2,w,c
  7666   00329E  EC6D  F01A         	call	_forward
  7667   0032A2                     
  7668                           ;calibration.c: 111:             switch_calibration(&(c->index));
  7669   0032A2  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  7670   0032A6  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  7671   0032AA  EC19  F021         	call	_switch_calibration	;wreg free
  7672   0032AE                     l4786:
  7673                           
  7674                           ;calibration.c: 113:         if(c->index == 2){
  7675   0032AE  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7676   0032B2  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7677   0032B6  0E02               	movlw	2
  7678   0032B8  18DE               	xorwf	postinc2,w,c
  7679   0032BA  A4D8               	btfss	status,2,c
  7680   0032BC  EF62  F019         	goto	u5461
  7681   0032C0  EF64  F019         	goto	u5460
  7682   0032C4                     u5461:
  7683   0032C4  EF7F  F019         	goto	l4794
  7684   0032C8                     u5460:
  7685   0032C8                     
  7686                           ;calibration.c: 114:             adjust_calibration(&(c->backward));
  7687   0032C8  0E06               	movlw	6
  7688   0032CA  2421               	addwf	calibration_routine@c^0,w,c
  7689   0032CC  6E01               	movwf	adjust_calibration@calibration_label^0,c
  7690   0032CE  0E00               	movlw	0
  7691   0032D0  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  7692   0032D2  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  7693   0032D4  EC69  F01D         	call	_adjust_calibration	;wreg free
  7694   0032D8                     
  7695                           ;calibration.c: 115:             backward(c->backward, mL, mR);
  7696   0032D8  C023  F013         	movff	calibration_routine@mL,backward@mL
  7697   0032DC  C024  F014         	movff	calibration_routine@mR,backward@mR
  7698   0032E0  EE20 F006          	lfsr	2,6
  7699   0032E4  5021               	movf	calibration_routine@c^0,w,c
  7700   0032E6  26D9               	addwf	fsr2l,f,c
  7701   0032E8  5022               	movf	(calibration_routine@c+1)^0,w,c
  7702   0032EA  22DA               	addwfc	fsr2h,f,c
  7703   0032EC  50DF               	movf	indf2,w,c
  7704   0032EE  ECAB  F01C         	call	_backward
  7705   0032F2                     
  7706                           ;calibration.c: 116:             switch_calibration(&(c->index));
  7707   0032F2  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  7708   0032F6  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  7709   0032FA  EC19  F021         	call	_switch_calibration	;wreg free
  7710   0032FE                     l4794:
  7711                           
  7712                           ;calibration.c: 119:         if(c->index == 7){
  7713   0032FE  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7714   003302  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7715   003306  0E07               	movlw	7
  7716   003308  18DE               	xorwf	postinc2,w,c
  7717   00330A  A4D8               	btfss	status,2,c
  7718   00330C  EF8A  F019         	goto	u5471
  7719   003310  EF8C  F019         	goto	u5470
  7720   003314                     u5471:
  7721   003314  EF90  F018         	goto	l160
  7722   003318                     u5470:
  7723   003318                     
  7724                           ;calibration.c: 120:             c->index = 5;
  7725   003318  C021  FFD9         	movff	calibration_routine@c,fsr2l
  7726   00331C  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  7727   003320  0E05               	movlw	5
  7728   003322  6EDF               	movwf	indf2,c
  7729   003324  0012               	return		;funcret
  7730   003326                     __end_of_calibration_routine:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function _switch_calibration *****************
  7734 ;; Defined at:
  7735 ;;		line 60 in file "calibration.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  calibration_    2    0[COMRAM] PTR int 
  7738 ;;		 -> calibration(7), 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7754 ;;Total ram usage:        4 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_calibration_routine
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text30
  7764   004232                     __ptext30:
  7765                           	callstack 0
  7766   004232                     _switch_calibration:
  7767                           	callstack 29
  7768   004232                     l152:
  7769                           
  7770                           ;calibration.c: 62:         if(!PORTFbits.RF2){
  7771   004232  B48E               	btfsc	142,2,c	;volatile
  7772   004234  EF1E  F021         	goto	u5151
  7773   004238  EF20  F021         	goto	u5150
  7774   00423C                     u5151:
  7775   00423C  EF50  F021         	goto	l153
  7776   004240                     u5150:
  7777   004240                     
  7778                           ;calibration.c: 63:             _delay((unsigned long)((200)*(64000000/4000.0)));
  7779   004240  0E11               	movlw	17
  7780   004242  6E04               	movwf	(??_switch_calibration+1)^0,c
  7781   004244  0E3C               	movlw	60
  7782   004246  6E03               	movwf	??_switch_calibration^0,c
  7783   004248  0ECB               	movlw	203
  7784   00424A                     u5737:
  7785   00424A  2EE8               	decfsz	wreg,f,c
  7786   00424C  D7FE               	bra	u5737
  7787   00424E  2E03               	decfsz	??_switch_calibration^0,f,c
  7788   004250  D7FC               	bra	u5737
  7789   004252  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  7790   004254  D7FA               	bra	u5737
  7791   004256  0000               	nop	
  7792   004258                     
  7793                           ;calibration.c: 64:             *calibration_index = *calibration_index + 1;
  7794   004258  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  7795   00425C  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  7796   004260  CFDE F003          	movff	postinc2,??_switch_calibration
  7797   004264  CFDD F004          	movff	postdec2,??_switch_calibration+1
  7798   004268  0E01               	movlw	1
  7799   00426A  2603               	addwf	??_switch_calibration^0,f,c
  7800   00426C  0E00               	movlw	0
  7801   00426E  2204               	addwfc	(??_switch_calibration+1)^0,f,c
  7802   004270  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  7803   004274  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  7804   004278  C003  FFDE         	movff	??_switch_calibration,postinc2
  7805   00427C  C004  FFDD         	movff	??_switch_calibration+1,postdec2
  7806   004280                     
  7807                           ;calibration.c: 65:             LATDbits.LATD7 = 1;
  7808   004280  8E7C               	bsf	124,7,c	;volatile
  7809   004282                     
  7810                           ;calibration.c: 66:             _delay((unsigned long)((200)*(64000000/4000.0)));
  7811   004282  0E11               	movlw	17
  7812   004284  6E04               	movwf	(??_switch_calibration+1)^0,c
  7813   004286  0E3C               	movlw	60
  7814   004288  6E03               	movwf	??_switch_calibration^0,c
  7815   00428A  0ECB               	movlw	203
  7816   00428C                     u5747:
  7817   00428C  2EE8               	decfsz	wreg,f,c
  7818   00428E  D7FE               	bra	u5747
  7819   004290  2E03               	decfsz	??_switch_calibration^0,f,c
  7820   004292  D7FC               	bra	u5747
  7821   004294  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  7822   004296  D7FA               	bra	u5747
  7823   004298  0000               	nop	
  7824   00429A                     
  7825                           ;calibration.c: 67:             LATDbits.LATD7 = 0;
  7826   00429A  9E7C               	bcf	124,7,c	;volatile
  7827                           
  7828                           ;calibration.c: 68:             break;
  7829   00429C  EF71  F021         	goto	l157
  7830   0042A0                     l153:
  7831                           
  7832                           ;calibration.c: 71:         if(!PORTFbits.RF3){
  7833   0042A0  B68E               	btfsc	142,3,c	;volatile
  7834   0042A2  EF55  F021         	goto	u5161
  7835   0042A6  EF57  F021         	goto	u5160
  7836   0042AA                     u5161:
  7837   0042AA  EF19  F021         	goto	l152
  7838   0042AE                     u5160:
  7839   0042AE                     
  7840                           ;calibration.c: 72:             _delay((unsigned long)((200)*(64000000/4000.0)));
  7841   0042AE  0E11               	movlw	17
  7842   0042B0  6E04               	movwf	(??_switch_calibration+1)^0,c
  7843   0042B2  0E3C               	movlw	60
  7844   0042B4  6E03               	movwf	??_switch_calibration^0,c
  7845   0042B6  0ECB               	movlw	203
  7846   0042B8                     u5757:
  7847   0042B8  2EE8               	decfsz	wreg,f,c
  7848   0042BA  D7FE               	bra	u5757
  7849   0042BC  2E03               	decfsz	??_switch_calibration^0,f,c
  7850   0042BE  D7FC               	bra	u5757
  7851   0042C0  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  7852   0042C2  D7FA               	bra	u5757
  7853   0042C4  0000               	nop	
  7854   0042C6                     
  7855                           ;calibration.c: 73:             LATHbits.LATH3 = 1;
  7856   0042C6  8680               	bsf	128,3,c	;volatile
  7857                           
  7858                           ;calibration.c: 74:             _delay((unsigned long)((200)*(64000000/4000.0)));
  7859   0042C8  0E11               	movlw	17
  7860   0042CA  6E04               	movwf	(??_switch_calibration+1)^0,c
  7861   0042CC  0E3C               	movlw	60
  7862   0042CE  6E03               	movwf	??_switch_calibration^0,c
  7863   0042D0  0ECB               	movlw	203
  7864   0042D2                     u5767:
  7865   0042D2  2EE8               	decfsz	wreg,f,c
  7866   0042D4  D7FE               	bra	u5767
  7867   0042D6  2E03               	decfsz	??_switch_calibration^0,f,c
  7868   0042D8  D7FC               	bra	u5767
  7869   0042DA  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  7870   0042DC  D7FA               	bra	u5767
  7871   0042DE  0000               	nop	
  7872   0042E0                     
  7873                           ;calibration.c: 75:             LATHbits.LATH3 = 0;
  7874   0042E0  9680               	bcf	128,3,c	;volatile
  7875   0042E2                     l157:
  7876   0042E2  0012               	return		;funcret
  7877   0042E4                     __end_of_switch_calibration:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _rightTURN *****************
  7881 ;; Defined at:
  7882 ;;		line 244 in file "dc_motor_v1.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  rotation_cal    1    wreg     unsigned char 
  7885 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  7886 ;;		 -> motorL(9), 
  7887 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  7888 ;;		 -> motorR(9), 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  7891 ;;  j               2   26[COMRAM] int 
  7892 ;;  i               2   24[COMRAM] int 
  7893 ;;  delay_time      2   30[COMRAM] int 
  7894 ;;  max_power       2   28[COMRAM] int 
  7895 ;;  acceleration    2    0        int 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;Total ram usage:       14 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 2
  7912 ;; This function calls:
  7913 ;;		___awdiv
  7914 ;;		_delay_ms_function
  7915 ;;		_setMotorPWM
  7916 ;; This function is called by:
  7917 ;;		_calibration_routine
  7918 ;;		_maze_search
  7919 ;;		_maze_return
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text31
  7924   00365A                     __ptext31:
  7925                           	callstack 0
  7926   00365A                     _rightTURN:
  7927                           	callstack 27
  7928                           
  7929                           ;incstack = 0
  7930                           ;rightTURN@rotation_calibration stored from wreg
  7931   00365A  6E18               	movwf	rightTURN@rotation_calibration^0,c
  7932   00365C                     
  7933                           ;dc_motor_v1.c: 245:     mL->direction = 1;
  7934   00365C  5013               	movf	rightTURN@mL^0,w,c
  7935   00365E  6ED9               	movwf	fsr2l,c
  7936   003660  6ADA               	clrf	fsr2h,c
  7937   003662  0E01               	movlw	1
  7938   003664  26D9               	addwf	fsr2l,f,c
  7939   003666  0E01               	movlw	1
  7940   003668  6EDF               	movwf	indf2,c
  7941                           
  7942                           ;dc_motor_v1.c: 246:     mR->direction = 0;
  7943   00366A  5014               	movf	rightTURN@mR^0,w,c
  7944   00366C  6ED9               	movwf	fsr2l,c
  7945   00366E  6ADA               	clrf	fsr2h,c
  7946   003670  0E01               	movlw	1
  7947   003672  26D9               	addwf	fsr2l,f,c
  7948   003674  6ADF               	clrf	indf2,c
  7949   003676                     
  7950                           ;dc_motor_v1.c: 248:    int max_power = 20;
  7951   003676  0E00               	movlw	0
  7952   003678  6E1E               	movwf	(rightTURN@max_power+1)^0,c
  7953   00367A  0E14               	movlw	20
  7954   00367C  6E1D               	movwf	rightTURN@max_power^0,c
  7955   00367E                     
  7956                           ;dc_motor_v1.c: 250:     int delay_time = acceleration_time/max_power;
  7957   00367E  0E00               	movlw	0
  7958   003680  6E02               	movwf	(___awdiv@dividend+1)^0,c
  7959   003682  0E64               	movlw	100
  7960   003684  6E01               	movwf	___awdiv@dividend^0,c
  7961   003686  0E00               	movlw	0
  7962   003688  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7963   00368A  0E14               	movlw	20
  7964   00368C  6E03               	movwf	___awdiv@divisor^0,c
  7965   00368E  ECB7  F020         	call	___awdiv	;wreg free
  7966   003692  C001  F01F         	movff	?___awdiv,rightTURN@delay_time
  7967   003696  C002  F020         	movff	?___awdiv+1,rightTURN@delay_time+1
  7968   00369A                     
  7969                           ;dc_motor_v1.c: 253:     for(int i=0; i< max_power; i++){
  7970   00369A  0E00               	movlw	0
  7971   00369C  6E1A               	movwf	(rightTURN@i+1)^0,c
  7972   00369E  0E00               	movlw	0
  7973   0036A0  6E19               	movwf	rightTURN@i^0,c
  7974   0036A2  EF77  F01B         	goto	l4582
  7975   0036A6                     l4572:
  7976                           
  7977                           ;dc_motor_v1.c: 254:         mL->power = mL->power + 1;
  7978   0036A6  5013               	movf	rightTURN@mL^0,w,c
  7979   0036A8  6ED9               	movwf	fsr2l,c
  7980   0036AA  6ADA               	clrf	fsr2h,c
  7981   0036AC  5013               	movf	rightTURN@mL^0,w,c
  7982   0036AE  6EE1               	movwf	fsr1l,c
  7983   0036B0  6AE2               	clrf	fsr1h,c
  7984   0036B2  50E7               	movf	indf1,w,c
  7985   0036B4  6E15               	movwf	??_rightTURN^0,c
  7986   0036B6  2815               	incf	??_rightTURN^0,w,c
  7987   0036B8  6EDF               	movwf	indf2,c
  7988                           
  7989                           ;dc_motor_v1.c: 255:         mR->power = mR->power + 1 ;
  7990   0036BA  5014               	movf	rightTURN@mR^0,w,c
  7991   0036BC  6ED9               	movwf	fsr2l,c
  7992   0036BE  6ADA               	clrf	fsr2h,c
  7993   0036C0  5014               	movf	rightTURN@mR^0,w,c
  7994   0036C2  6EE1               	movwf	fsr1l,c
  7995   0036C4  6AE2               	clrf	fsr1h,c
  7996   0036C6  50E7               	movf	indf1,w,c
  7997   0036C8  6E15               	movwf	??_rightTURN^0,c
  7998   0036CA  2815               	incf	??_rightTURN^0,w,c
  7999   0036CC  6EDF               	movwf	indf2,c
  8000   0036CE                     
  8001                           ;dc_motor_v1.c: 256:         setMotorPWM(mR);
  8002   0036CE  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8003   0036D2  EC14  F01E         	call	_setMotorPWM	;wreg free
  8004   0036D6                     
  8005                           ;dc_motor_v1.c: 257:         setMotorPWM(mL);
  8006   0036D6  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8007   0036DA  EC14  F01E         	call	_setMotorPWM	;wreg free
  8008   0036DE                     
  8009                           ;dc_motor_v1.c: 258:         delay_ms_function(delay_time);
  8010   0036DE  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8011   0036E2  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8012   0036E6  EC9B  F023         	call	_delay_ms_function	;wreg free
  8013   0036EA                     
  8014                           ;dc_motor_v1.c: 259:     }
  8015   0036EA  4A19               	infsnz	rightTURN@i^0,f,c
  8016   0036EC  2A1A               	incf	(rightTURN@i+1)^0,f,c
  8017   0036EE                     l4582:
  8018   0036EE  501D               	movf	rightTURN@max_power^0,w,c
  8019   0036F0  5C19               	subwf	rightTURN@i^0,w,c
  8020   0036F2  501A               	movf	(rightTURN@i+1)^0,w,c
  8021   0036F4  0A80               	xorlw	128
  8022   0036F6  6E15               	movwf	??_rightTURN^0,c
  8023   0036F8  501E               	movf	(rightTURN@max_power+1)^0,w,c
  8024   0036FA  0A80               	xorlw	128
  8025   0036FC  5815               	subwfb	??_rightTURN^0,w,c
  8026   0036FE  A0D8               	btfss	status,0,c
  8027   003700  EF84  F01B         	goto	u5171
  8028   003704  EF86  F01B         	goto	u5170
  8029   003708                     u5171:
  8030   003708  EF53  F01B         	goto	l4572
  8031   00370C                     u5170:
  8032   00370C                     
  8033                           ;dc_motor_v1.c: 262:     for(int j=0; j<rotation_calibration; j++){
  8034   00370C  0E00               	movlw	0
  8035   00370E  6E1C               	movwf	(rightTURN@j+1)^0,c
  8036   003710  0E00               	movlw	0
  8037   003712  6E1B               	movwf	rightTURN@j^0,c
  8038   003714  EF95  F01B         	goto	l300
  8039   003718                     l4586:
  8040                           
  8041                           ;dc_motor_v1.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8042   003718  0ED0               	movlw	208
  8043   00371A  6E15               	movwf	??_rightTURN^0,c
  8044   00371C  0ECA               	movlw	202
  8045   00371E                     u5777:
  8046   00371E  2EE8               	decfsz	wreg,f,c
  8047   003720  D7FE               	bra	u5777
  8048   003722  2E15               	decfsz	??_rightTURN^0,f,c
  8049   003724  D7FC               	bra	u5777
  8050   003726                     
  8051                           ;dc_motor_v1.c: 264:     }
  8052   003726  4A1B               	infsnz	rightTURN@j^0,f,c
  8053   003728  2A1C               	incf	(rightTURN@j+1)^0,f,c
  8054   00372A                     l300:
  8055   00372A  5018               	movf	rightTURN@rotation_calibration^0,w,c
  8056   00372C  6E15               	movwf	??_rightTURN^0,c
  8057   00372E  6A16               	clrf	(??_rightTURN+1)^0,c
  8058   003730  5015               	movf	??_rightTURN^0,w,c
  8059   003732  5C1B               	subwf	rightTURN@j^0,w,c
  8060   003734  501C               	movf	(rightTURN@j+1)^0,w,c
  8061   003736  0A80               	xorlw	128
  8062   003738  6E17               	movwf	(??_rightTURN+2)^0,c
  8063   00373A  5016               	movf	(??_rightTURN+1)^0,w,c
  8064   00373C  0A80               	xorlw	128
  8065   00373E  5817               	subwfb	(??_rightTURN+2)^0,w,c
  8066   003740  A0D8               	btfss	status,0,c
  8067   003742  EFA5  F01B         	goto	u5181
  8068   003746  EFA7  F01B         	goto	u5180
  8069   00374A                     u5181:
  8070   00374A  EF8C  F01B         	goto	l4586
  8071   00374E                     u5180:
  8072   00374E  EFD5  F01B         	goto	l4604
  8073   003752                     l4590:
  8074                           
  8075                           ;dc_motor_v1.c: 268:         if(mR->power> 0 ){
  8076   003752  5014               	movf	rightTURN@mR^0,w,c
  8077   003754  6ED9               	movwf	fsr2l,c
  8078   003756  6ADA               	clrf	fsr2h,c
  8079   003758  50DF               	movf	indf2,w,c
  8080   00375A  B4D8               	btfsc	status,2,c
  8081   00375C  EFB2  F01B         	goto	u5191
  8082   003760  EFB4  F01B         	goto	u5190
  8083   003764                     u5191:
  8084   003764  EFB8  F01B         	goto	l4594
  8085   003768                     u5190:
  8086   003768                     
  8087                           ;dc_motor_v1.c: 269:             mR->power--;
  8088   003768  5014               	movf	rightTURN@mR^0,w,c
  8089   00376A  6ED9               	movwf	fsr2l,c
  8090   00376C  6ADA               	clrf	fsr2h,c
  8091   00376E  06DF               	decf	indf2,f,c
  8092   003770                     l4594:
  8093                           
  8094                           ;dc_motor_v1.c: 271:         if(mL->power> 0 ){
  8095   003770  5013               	movf	rightTURN@mL^0,w,c
  8096   003772  6ED9               	movwf	fsr2l,c
  8097   003774  6ADA               	clrf	fsr2h,c
  8098   003776  50DF               	movf	indf2,w,c
  8099   003778  B4D8               	btfsc	status,2,c
  8100   00377A  EFC1  F01B         	goto	u5201
  8101   00377E  EFC3  F01B         	goto	u5200
  8102   003782                     u5201:
  8103   003782  EFC7  F01B         	goto	l4598
  8104   003786                     u5200:
  8105   003786                     
  8106                           ;dc_motor_v1.c: 272:             mL->power--;
  8107   003786  5013               	movf	rightTURN@mL^0,w,c
  8108   003788  6ED9               	movwf	fsr2l,c
  8109   00378A  6ADA               	clrf	fsr2h,c
  8110   00378C  06DF               	decf	indf2,f,c
  8111   00378E                     l4598:
  8112                           
  8113                           ;dc_motor_v1.c: 274:         setMotorPWM(mR);
  8114   00378E  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8115   003792  EC14  F01E         	call	_setMotorPWM	;wreg free
  8116   003796                     
  8117                           ;dc_motor_v1.c: 275:         setMotorPWM(mL);
  8118   003796  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8119   00379A  EC14  F01E         	call	_setMotorPWM	;wreg free
  8120   00379E                     
  8121                           ;dc_motor_v1.c: 276:         delay_ms_function(delay_time);
  8122   00379E  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8123   0037A2  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8124   0037A6  EC9B  F023         	call	_delay_ms_function	;wreg free
  8125   0037AA                     l4604:
  8126                           
  8127                           ;dc_motor_v1.c: 267:     while(mL->power || mR->power > 0){
  8128   0037AA  5013               	movf	rightTURN@mL^0,w,c
  8129   0037AC  6ED9               	movwf	fsr2l,c
  8130   0037AE  6ADA               	clrf	fsr2h,c
  8131   0037B0  50DF               	movf	indf2,w,c
  8132   0037B2  A4D8               	btfss	status,2,c
  8133   0037B4  EFDE  F01B         	goto	u5211
  8134   0037B8  EFE0  F01B         	goto	u5210
  8135   0037BC                     u5211:
  8136   0037BC  EFA9  F01B         	goto	l4590
  8137   0037C0                     u5210:
  8138   0037C0  5014               	movf	rightTURN@mR^0,w,c
  8139   0037C2  6ED9               	movwf	fsr2l,c
  8140   0037C4  6ADA               	clrf	fsr2h,c
  8141   0037C6  50DF               	movf	indf2,w,c
  8142   0037C8  A4D8               	btfss	status,2,c
  8143   0037CA  EFE9  F01B         	goto	u5221
  8144   0037CE  EFEB  F01B         	goto	u5220
  8145   0037D2                     u5221:
  8146   0037D2  EFA9  F01B         	goto	l4590
  8147   0037D6                     u5220:
  8148   0037D6  0012               	return		;funcret
  8149   0037D8                     __end_of_rightTURN:
  8150                           	callstack 0
  8151                           
  8152 ;; *************** function _leftTURN *****************
  8153 ;; Defined at:
  8154 ;;		line 206 in file "dc_motor_v1.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;  rotation_cal    1    wreg     unsigned char 
  8157 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8158 ;;		 -> motorL(9), 
  8159 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8160 ;;		 -> motorR(9), 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8163 ;;  j               2   26[COMRAM] int 
  8164 ;;  i               2   24[COMRAM] int 
  8165 ;;  delay_time      2   30[COMRAM] int 
  8166 ;;  max_power       2   28[COMRAM] int 
  8167 ;;  acceleration    2    0        int 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      void 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8179 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8180 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;Total ram usage:       14 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 2
  8184 ;; This function calls:
  8185 ;;		___awdiv
  8186 ;;		_delay_ms_function
  8187 ;;		_setMotorPWM
  8188 ;; This function is called by:
  8189 ;;		_calibration_routine
  8190 ;;		_maze_search
  8191 ;;		_maze_return
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text32
  8196   0037D8                     __ptext32:
  8197                           	callstack 0
  8198   0037D8                     _leftTURN:
  8199                           	callstack 27
  8200                           
  8201                           ;incstack = 0
  8202                           ;leftTURN@rotation_calibration stored from wreg
  8203   0037D8  6E18               	movwf	leftTURN@rotation_calibration^0,c
  8204   0037DA                     
  8205                           ;dc_motor_v1.c: 207:     mL->direction = 0;
  8206   0037DA  5013               	movf	leftTURN@mL^0,w,c
  8207   0037DC  6ED9               	movwf	fsr2l,c
  8208   0037DE  6ADA               	clrf	fsr2h,c
  8209   0037E0  0E01               	movlw	1
  8210   0037E2  26D9               	addwf	fsr2l,f,c
  8211   0037E4  6ADF               	clrf	indf2,c
  8212                           
  8213                           ;dc_motor_v1.c: 208:     mR->direction = 1;
  8214   0037E6  5014               	movf	leftTURN@mR^0,w,c
  8215   0037E8  6ED9               	movwf	fsr2l,c
  8216   0037EA  6ADA               	clrf	fsr2h,c
  8217   0037EC  0E01               	movlw	1
  8218   0037EE  26D9               	addwf	fsr2l,f,c
  8219   0037F0  0E01               	movlw	1
  8220   0037F2  6EDF               	movwf	indf2,c
  8221   0037F4                     
  8222                           ;dc_motor_v1.c: 210:     int max_power = 20;
  8223   0037F4  0E00               	movlw	0
  8224   0037F6  6E1E               	movwf	(leftTURN@max_power+1)^0,c
  8225   0037F8  0E14               	movlw	20
  8226   0037FA  6E1D               	movwf	leftTURN@max_power^0,c
  8227   0037FC                     
  8228                           ;dc_motor_v1.c: 212:     int delay_time = acceleration_time/max_power;
  8229   0037FC  0E00               	movlw	0
  8230   0037FE  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8231   003800  0E64               	movlw	100
  8232   003802  6E01               	movwf	___awdiv@dividend^0,c
  8233   003804  0E00               	movlw	0
  8234   003806  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8235   003808  0E14               	movlw	20
  8236   00380A  6E03               	movwf	___awdiv@divisor^0,c
  8237   00380C  ECB7  F020         	call	___awdiv	;wreg free
  8238   003810  C001  F01F         	movff	?___awdiv,leftTURN@delay_time
  8239   003814  C002  F020         	movff	?___awdiv+1,leftTURN@delay_time+1
  8240   003818                     
  8241                           ;dc_motor_v1.c: 215:     for(int i=0; i< max_power; i++){
  8242   003818  0E00               	movlw	0
  8243   00381A  6E1A               	movwf	(leftTURN@i+1)^0,c
  8244   00381C  0E00               	movlw	0
  8245   00381E  6E19               	movwf	leftTURN@i^0,c
  8246   003820  EF36  F01C         	goto	l4628
  8247   003824                     l4618:
  8248                           
  8249                           ;dc_motor_v1.c: 216:         mL->power = mL->power + 1;
  8250   003824  5013               	movf	leftTURN@mL^0,w,c
  8251   003826  6ED9               	movwf	fsr2l,c
  8252   003828  6ADA               	clrf	fsr2h,c
  8253   00382A  5013               	movf	leftTURN@mL^0,w,c
  8254   00382C  6EE1               	movwf	fsr1l,c
  8255   00382E  6AE2               	clrf	fsr1h,c
  8256   003830  50E7               	movf	indf1,w,c
  8257   003832  6E15               	movwf	??_leftTURN^0,c
  8258   003834  2815               	incf	??_leftTURN^0,w,c
  8259   003836  6EDF               	movwf	indf2,c
  8260                           
  8261                           ;dc_motor_v1.c: 217:         mR->power = mR->power + 1 ;
  8262   003838  5014               	movf	leftTURN@mR^0,w,c
  8263   00383A  6ED9               	movwf	fsr2l,c
  8264   00383C  6ADA               	clrf	fsr2h,c
  8265   00383E  5014               	movf	leftTURN@mR^0,w,c
  8266   003840  6EE1               	movwf	fsr1l,c
  8267   003842  6AE2               	clrf	fsr1h,c
  8268   003844  50E7               	movf	indf1,w,c
  8269   003846  6E15               	movwf	??_leftTURN^0,c
  8270   003848  2815               	incf	??_leftTURN^0,w,c
  8271   00384A  6EDF               	movwf	indf2,c
  8272   00384C                     
  8273                           ;dc_motor_v1.c: 218:         setMotorPWM(mR);
  8274   00384C  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8275   003850  EC14  F01E         	call	_setMotorPWM	;wreg free
  8276   003854                     
  8277                           ;dc_motor_v1.c: 219:         setMotorPWM(mL);
  8278   003854  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8279   003858  EC14  F01E         	call	_setMotorPWM	;wreg free
  8280   00385C                     
  8281                           ;dc_motor_v1.c: 220:         delay_ms_function(delay_time);
  8282   00385C  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8283   003860  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  8284   003864  EC9B  F023         	call	_delay_ms_function	;wreg free
  8285   003868                     
  8286                           ;dc_motor_v1.c: 221:     }
  8287   003868  4A19               	infsnz	leftTURN@i^0,f,c
  8288   00386A  2A1A               	incf	(leftTURN@i+1)^0,f,c
  8289   00386C                     l4628:
  8290   00386C  501D               	movf	leftTURN@max_power^0,w,c
  8291   00386E  5C19               	subwf	leftTURN@i^0,w,c
  8292   003870  501A               	movf	(leftTURN@i+1)^0,w,c
  8293   003872  0A80               	xorlw	128
  8294   003874  6E15               	movwf	??_leftTURN^0,c
  8295   003876  501E               	movf	(leftTURN@max_power+1)^0,w,c
  8296   003878  0A80               	xorlw	128
  8297   00387A  5815               	subwfb	??_leftTURN^0,w,c
  8298   00387C  A0D8               	btfss	status,0,c
  8299   00387E  EF43  F01C         	goto	u5231
  8300   003882  EF45  F01C         	goto	u5230
  8301   003886                     u5231:
  8302   003886  EF12  F01C         	goto	l4618
  8303   00388A                     u5230:
  8304   00388A                     
  8305                           ;dc_motor_v1.c: 224:     for(int j=0; j<rotation_calibration; j++){
  8306   00388A  0E00               	movlw	0
  8307   00388C  6E1C               	movwf	(leftTURN@j+1)^0,c
  8308   00388E  0E00               	movlw	0
  8309   003890  6E1B               	movwf	leftTURN@j^0,c
  8310   003892  EF54  F01C         	goto	l286
  8311   003896                     l4632:
  8312                           
  8313                           ;dc_motor_v1.c: 225:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8314   003896  0ED0               	movlw	208
  8315   003898  6E15               	movwf	??_leftTURN^0,c
  8316   00389A  0ECA               	movlw	202
  8317   00389C                     u5787:
  8318   00389C  2EE8               	decfsz	wreg,f,c
  8319   00389E  D7FE               	bra	u5787
  8320   0038A0  2E15               	decfsz	??_leftTURN^0,f,c
  8321   0038A2  D7FC               	bra	u5787
  8322   0038A4                     
  8323                           ;dc_motor_v1.c: 226:     }
  8324   0038A4  4A1B               	infsnz	leftTURN@j^0,f,c
  8325   0038A6  2A1C               	incf	(leftTURN@j+1)^0,f,c
  8326   0038A8                     l286:
  8327   0038A8  5018               	movf	leftTURN@rotation_calibration^0,w,c
  8328   0038AA  6E15               	movwf	??_leftTURN^0,c
  8329   0038AC  6A16               	clrf	(??_leftTURN+1)^0,c
  8330   0038AE  5015               	movf	??_leftTURN^0,w,c
  8331   0038B0  5C1B               	subwf	leftTURN@j^0,w,c
  8332   0038B2  501C               	movf	(leftTURN@j+1)^0,w,c
  8333   0038B4  0A80               	xorlw	128
  8334   0038B6  6E17               	movwf	(??_leftTURN+2)^0,c
  8335   0038B8  5016               	movf	(??_leftTURN+1)^0,w,c
  8336   0038BA  0A80               	xorlw	128
  8337   0038BC  5817               	subwfb	(??_leftTURN+2)^0,w,c
  8338   0038BE  A0D8               	btfss	status,0,c
  8339   0038C0  EF64  F01C         	goto	u5241
  8340   0038C4  EF66  F01C         	goto	u5240
  8341   0038C8                     u5241:
  8342   0038C8  EF4B  F01C         	goto	l4632
  8343   0038CC                     u5240:
  8344   0038CC  EF94  F01C         	goto	l4650
  8345   0038D0                     l4636:
  8346                           
  8347                           ;dc_motor_v1.c: 230:         if(mR->power> 0 ){
  8348   0038D0  5014               	movf	leftTURN@mR^0,w,c
  8349   0038D2  6ED9               	movwf	fsr2l,c
  8350   0038D4  6ADA               	clrf	fsr2h,c
  8351   0038D6  50DF               	movf	indf2,w,c
  8352   0038D8  B4D8               	btfsc	status,2,c
  8353   0038DA  EF71  F01C         	goto	u5251
  8354   0038DE  EF73  F01C         	goto	u5250
  8355   0038E2                     u5251:
  8356   0038E2  EF77  F01C         	goto	l4640
  8357   0038E6                     u5250:
  8358   0038E6                     
  8359                           ;dc_motor_v1.c: 231:             mR->power--;
  8360   0038E6  5014               	movf	leftTURN@mR^0,w,c
  8361   0038E8  6ED9               	movwf	fsr2l,c
  8362   0038EA  6ADA               	clrf	fsr2h,c
  8363   0038EC  06DF               	decf	indf2,f,c
  8364   0038EE                     l4640:
  8365                           
  8366                           ;dc_motor_v1.c: 233:         if(mL->power> 0 ){
  8367   0038EE  5013               	movf	leftTURN@mL^0,w,c
  8368   0038F0  6ED9               	movwf	fsr2l,c
  8369   0038F2  6ADA               	clrf	fsr2h,c
  8370   0038F4  50DF               	movf	indf2,w,c
  8371   0038F6  B4D8               	btfsc	status,2,c
  8372   0038F8  EF80  F01C         	goto	u5261
  8373   0038FC  EF82  F01C         	goto	u5260
  8374   003900                     u5261:
  8375   003900  EF86  F01C         	goto	l4644
  8376   003904                     u5260:
  8377   003904                     
  8378                           ;dc_motor_v1.c: 234:             mL->power--;
  8379   003904  5013               	movf	leftTURN@mL^0,w,c
  8380   003906  6ED9               	movwf	fsr2l,c
  8381   003908  6ADA               	clrf	fsr2h,c
  8382   00390A  06DF               	decf	indf2,f,c
  8383   00390C                     l4644:
  8384                           
  8385                           ;dc_motor_v1.c: 236:         setMotorPWM(mR);
  8386   00390C  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8387   003910  EC14  F01E         	call	_setMotorPWM	;wreg free
  8388   003914                     
  8389                           ;dc_motor_v1.c: 237:         setMotorPWM(mL);
  8390   003914  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8391   003918  EC14  F01E         	call	_setMotorPWM	;wreg free
  8392   00391C                     
  8393                           ;dc_motor_v1.c: 238:         delay_ms_function(delay_time);
  8394   00391C  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8395   003920  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  8396   003924  EC9B  F023         	call	_delay_ms_function	;wreg free
  8397   003928                     l4650:
  8398                           
  8399                           ;dc_motor_v1.c: 229:     while(mL->power || mR->power > 0){
  8400   003928  5013               	movf	leftTURN@mL^0,w,c
  8401   00392A  6ED9               	movwf	fsr2l,c
  8402   00392C  6ADA               	clrf	fsr2h,c
  8403   00392E  50DF               	movf	indf2,w,c
  8404   003930  A4D8               	btfss	status,2,c
  8405   003932  EF9D  F01C         	goto	u5271
  8406   003936  EF9F  F01C         	goto	u5270
  8407   00393A                     u5271:
  8408   00393A  EF68  F01C         	goto	l4636
  8409   00393E                     u5270:
  8410   00393E  5014               	movf	leftTURN@mR^0,w,c
  8411   003940  6ED9               	movwf	fsr2l,c
  8412   003942  6ADA               	clrf	fsr2h,c
  8413   003944  50DF               	movf	indf2,w,c
  8414   003946  A4D8               	btfss	status,2,c
  8415   003948  EFA8  F01C         	goto	u5281
  8416   00394C  EFAA  F01C         	goto	u5280
  8417   003950                     u5281:
  8418   003950  EF68  F01C         	goto	l4636
  8419   003954                     u5280:
  8420   003954  0012               	return		;funcret
  8421   003956                     __end_of_leftTURN:
  8422                           	callstack 0
  8423                           
  8424 ;; *************** function _forward *****************
  8425 ;; Defined at:
  8426 ;;		line 122 in file "dc_motor_v1.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  Distance_Cal    1    wreg     unsigned char 
  8429 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8430 ;;		 -> motorL(9), 
  8431 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8432 ;;		 -> motorR(9), 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  8435 ;;  j               2   26[COMRAM] int 
  8436 ;;  i               2   24[COMRAM] int 
  8437 ;;  delay_time      2   30[COMRAM] int 
  8438 ;;  max_power       2   28[COMRAM] int 
  8439 ;;  acceleration    2    0        int 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;Total ram usage:       14 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 2
  8456 ;; This function calls:
  8457 ;;		___awdiv
  8458 ;;		_delay_ms_function
  8459 ;;		_setMotorPWM
  8460 ;; This function is called by:
  8461 ;;		_calibration_routine
  8462 ;;		_maze_search
  8463 ;;		_maze_return
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text33
  8468   0034DA                     __ptext33:
  8469                           	callstack 0
  8470   0034DA                     _forward:
  8471                           	callstack 27
  8472                           
  8473                           ;incstack = 0
  8474                           ;forward@Distance_Calibration stored from wreg
  8475   0034DA  6E18               	movwf	forward@Distance_Calibration^0,c
  8476   0034DC                     
  8477                           ;dc_motor_v1.c: 123:     mL->direction = 1;
  8478   0034DC  5013               	movf	forward@mL^0,w,c
  8479   0034DE  6ED9               	movwf	fsr2l,c
  8480   0034E0  6ADA               	clrf	fsr2h,c
  8481   0034E2  0E01               	movlw	1
  8482   0034E4  26D9               	addwf	fsr2l,f,c
  8483   0034E6  0E01               	movlw	1
  8484   0034E8  6EDF               	movwf	indf2,c
  8485                           
  8486                           ;dc_motor_v1.c: 124:     mR->direction = 1;
  8487   0034EA  5014               	movf	forward@mR^0,w,c
  8488   0034EC  6ED9               	movwf	fsr2l,c
  8489   0034EE  6ADA               	clrf	fsr2h,c
  8490   0034F0  0E01               	movlw	1
  8491   0034F2  26D9               	addwf	fsr2l,f,c
  8492   0034F4  0E01               	movlw	1
  8493   0034F6  6EDF               	movwf	indf2,c
  8494   0034F8                     
  8495                           ;dc_motor_v1.c: 131:     int max_power = 20;
  8496   0034F8  0E00               	movlw	0
  8497   0034FA  6E1E               	movwf	(forward@max_power+1)^0,c
  8498   0034FC  0E14               	movlw	20
  8499   0034FE  6E1D               	movwf	forward@max_power^0,c
  8500   003500                     
  8501                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  8502   003500  0E00               	movlw	0
  8503   003502  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8504   003504  0E64               	movlw	100
  8505   003506  6E01               	movwf	___awdiv@dividend^0,c
  8506   003508  0E00               	movlw	0
  8507   00350A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8508   00350C  0E14               	movlw	20
  8509   00350E  6E03               	movwf	___awdiv@divisor^0,c
  8510   003510  ECB7  F020         	call	___awdiv	;wreg free
  8511   003514  C001  F01F         	movff	?___awdiv,forward@delay_time
  8512   003518  C002  F020         	movff	?___awdiv+1,forward@delay_time+1
  8513   00351C                     
  8514                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  8515   00351C  0E00               	movlw	0
  8516   00351E  6E1A               	movwf	(forward@i+1)^0,c
  8517   003520  0E00               	movlw	0
  8518   003522  6E19               	movwf	forward@i^0,c
  8519   003524  EFB8  F01A         	goto	l4674
  8520   003528                     l4664:
  8521                           
  8522                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  8523   003528  5013               	movf	forward@mL^0,w,c
  8524   00352A  6ED9               	movwf	fsr2l,c
  8525   00352C  6ADA               	clrf	fsr2h,c
  8526   00352E  5013               	movf	forward@mL^0,w,c
  8527   003530  6EE1               	movwf	fsr1l,c
  8528   003532  6AE2               	clrf	fsr1h,c
  8529   003534  50E7               	movf	indf1,w,c
  8530   003536  6E15               	movwf	??_forward^0,c
  8531   003538  2815               	incf	??_forward^0,w,c
  8532   00353A  6EDF               	movwf	indf2,c
  8533                           
  8534                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  8535   00353C  5014               	movf	forward@mR^0,w,c
  8536   00353E  6ED9               	movwf	fsr2l,c
  8537   003540  6ADA               	clrf	fsr2h,c
  8538   003542  5014               	movf	forward@mR^0,w,c
  8539   003544  6EE1               	movwf	fsr1l,c
  8540   003546  6AE2               	clrf	fsr1h,c
  8541   003548  50E7               	movf	indf1,w,c
  8542   00354A  6E15               	movwf	??_forward^0,c
  8543   00354C  2815               	incf	??_forward^0,w,c
  8544   00354E  6EDF               	movwf	indf2,c
  8545   003550                     
  8546                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  8547   003550  C014  F00E         	movff	forward@mR,setMotorPWM@m
  8548   003554  EC14  F01E         	call	_setMotorPWM	;wreg free
  8549   003558                     
  8550                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  8551   003558  C013  F00E         	movff	forward@mL,setMotorPWM@m
  8552   00355C  EC14  F01E         	call	_setMotorPWM	;wreg free
  8553   003560                     
  8554                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  8555   003560  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  8556   003564  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  8557   003568  EC9B  F023         	call	_delay_ms_function	;wreg free
  8558   00356C                     
  8559                           ;dc_motor_v1.c: 142:     }
  8560   00356C  4A19               	infsnz	forward@i^0,f,c
  8561   00356E  2A1A               	incf	(forward@i+1)^0,f,c
  8562   003570                     l4674:
  8563   003570  501D               	movf	forward@max_power^0,w,c
  8564   003572  5C19               	subwf	forward@i^0,w,c
  8565   003574  501A               	movf	(forward@i+1)^0,w,c
  8566   003576  0A80               	xorlw	128
  8567   003578  6E15               	movwf	??_forward^0,c
  8568   00357A  501E               	movf	(forward@max_power+1)^0,w,c
  8569   00357C  0A80               	xorlw	128
  8570   00357E  5815               	subwfb	??_forward^0,w,c
  8571   003580  A0D8               	btfss	status,0,c
  8572   003582  EFC5  F01A         	goto	u5291
  8573   003586  EFC7  F01A         	goto	u5290
  8574   00358A                     u5291:
  8575   00358A  EF94  F01A         	goto	l4664
  8576   00358E                     u5290:
  8577   00358E                     
  8578                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  8579   00358E  0E00               	movlw	0
  8580   003590  6E1C               	movwf	(forward@j+1)^0,c
  8581   003592  0E00               	movlw	0
  8582   003594  6E1B               	movwf	forward@j^0,c
  8583   003596  EFD6  F01A         	goto	l258
  8584   00359A                     l4678:
  8585                           
  8586                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8587   00359A  0ED0               	movlw	208
  8588   00359C  6E15               	movwf	??_forward^0,c
  8589   00359E  0ECA               	movlw	202
  8590   0035A0                     u5797:
  8591   0035A0  2EE8               	decfsz	wreg,f,c
  8592   0035A2  D7FE               	bra	u5797
  8593   0035A4  2E15               	decfsz	??_forward^0,f,c
  8594   0035A6  D7FC               	bra	u5797
  8595   0035A8                     
  8596                           ;dc_motor_v1.c: 149:     }
  8597   0035A8  4A1B               	infsnz	forward@j^0,f,c
  8598   0035AA  2A1C               	incf	(forward@j+1)^0,f,c
  8599   0035AC                     l258:
  8600   0035AC  5018               	movf	forward@Distance_Calibration^0,w,c
  8601   0035AE  6E15               	movwf	??_forward^0,c
  8602   0035B0  6A16               	clrf	(??_forward+1)^0,c
  8603   0035B2  5015               	movf	??_forward^0,w,c
  8604   0035B4  5C1B               	subwf	forward@j^0,w,c
  8605   0035B6  501C               	movf	(forward@j+1)^0,w,c
  8606   0035B8  0A80               	xorlw	128
  8607   0035BA  6E17               	movwf	(??_forward+2)^0,c
  8608   0035BC  5016               	movf	(??_forward+1)^0,w,c
  8609   0035BE  0A80               	xorlw	128
  8610   0035C0  5817               	subwfb	(??_forward+2)^0,w,c
  8611   0035C2  A0D8               	btfss	status,0,c
  8612   0035C4  EFE6  F01A         	goto	u5301
  8613   0035C8  EFE8  F01A         	goto	u5300
  8614   0035CC                     u5301:
  8615   0035CC  EFCD  F01A         	goto	l4678
  8616   0035D0                     u5300:
  8617   0035D0  EF16  F01B         	goto	l4696
  8618   0035D4                     l4682:
  8619                           
  8620                           ;dc_motor_v1.c: 153:         if(mR->power> 0 ){
  8621   0035D4  5014               	movf	forward@mR^0,w,c
  8622   0035D6  6ED9               	movwf	fsr2l,c
  8623   0035D8  6ADA               	clrf	fsr2h,c
  8624   0035DA  50DF               	movf	indf2,w,c
  8625   0035DC  B4D8               	btfsc	status,2,c
  8626   0035DE  EFF3  F01A         	goto	u5311
  8627   0035E2  EFF5  F01A         	goto	u5310
  8628   0035E6                     u5311:
  8629   0035E6  EFF9  F01A         	goto	l4686
  8630   0035EA                     u5310:
  8631   0035EA                     
  8632                           ;dc_motor_v1.c: 154:             mR->power--;
  8633   0035EA  5014               	movf	forward@mR^0,w,c
  8634   0035EC  6ED9               	movwf	fsr2l,c
  8635   0035EE  6ADA               	clrf	fsr2h,c
  8636   0035F0  06DF               	decf	indf2,f,c
  8637   0035F2                     l4686:
  8638                           
  8639                           ;dc_motor_v1.c: 156:         if(mL->power> 0 ){
  8640   0035F2  5013               	movf	forward@mL^0,w,c
  8641   0035F4  6ED9               	movwf	fsr2l,c
  8642   0035F6  6ADA               	clrf	fsr2h,c
  8643   0035F8  50DF               	movf	indf2,w,c
  8644   0035FA  B4D8               	btfsc	status,2,c
  8645   0035FC  EF02  F01B         	goto	u5321
  8646   003600  EF04  F01B         	goto	u5320
  8647   003604                     u5321:
  8648   003604  EF08  F01B         	goto	l4690
  8649   003608                     u5320:
  8650   003608                     
  8651                           ;dc_motor_v1.c: 157:             mL->power--;
  8652   003608  5013               	movf	forward@mL^0,w,c
  8653   00360A  6ED9               	movwf	fsr2l,c
  8654   00360C  6ADA               	clrf	fsr2h,c
  8655   00360E  06DF               	decf	indf2,f,c
  8656   003610                     l4690:
  8657                           
  8658                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  8659   003610  C014  F00E         	movff	forward@mR,setMotorPWM@m
  8660   003614  EC14  F01E         	call	_setMotorPWM	;wreg free
  8661   003618                     
  8662                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  8663   003618  C013  F00E         	movff	forward@mL,setMotorPWM@m
  8664   00361C  EC14  F01E         	call	_setMotorPWM	;wreg free
  8665   003620                     
  8666                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  8667   003620  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  8668   003624  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  8669   003628  EC9B  F023         	call	_delay_ms_function	;wreg free
  8670   00362C                     l4696:
  8671                           
  8672                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  8673   00362C  5013               	movf	forward@mL^0,w,c
  8674   00362E  6ED9               	movwf	fsr2l,c
  8675   003630  6ADA               	clrf	fsr2h,c
  8676   003632  50DF               	movf	indf2,w,c
  8677   003634  A4D8               	btfss	status,2,c
  8678   003636  EF1F  F01B         	goto	u5331
  8679   00363A  EF21  F01B         	goto	u5330
  8680   00363E                     u5331:
  8681   00363E  EFEA  F01A         	goto	l4682
  8682   003642                     u5330:
  8683   003642  5014               	movf	forward@mR^0,w,c
  8684   003644  6ED9               	movwf	fsr2l,c
  8685   003646  6ADA               	clrf	fsr2h,c
  8686   003648  50DF               	movf	indf2,w,c
  8687   00364A  A4D8               	btfss	status,2,c
  8688   00364C  EF2A  F01B         	goto	u5341
  8689   003650  EF2C  F01B         	goto	u5340
  8690   003654                     u5341:
  8691   003654  EFEA  F01A         	goto	l4682
  8692   003658                     u5340:
  8693   003658  0012               	return		;funcret
  8694   00365A                     __end_of_forward:
  8695                           	callstack 0
  8696                           
  8697 ;; *************** function _backward *****************
  8698 ;; Defined at:
  8699 ;;		line 166 in file "dc_motor_v1.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  Distance_Cal    1    wreg     unsigned char 
  8702 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8703 ;;		 -> motorL(9), 
  8704 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8705 ;;		 -> motorR(9), 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  8708 ;;  j               2   26[COMRAM] int 
  8709 ;;  i               2   24[COMRAM] int 
  8710 ;;  delay_time      2   30[COMRAM] int 
  8711 ;;  max_power       2   28[COMRAM] int 
  8712 ;;  acceleration    2    0        int 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;Total ram usage:       14 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 2
  8729 ;; This function calls:
  8730 ;;		___awdiv
  8731 ;;		_delay_ms_function
  8732 ;;		_setMotorPWM
  8733 ;; This function is called by:
  8734 ;;		_calibration_routine
  8735 ;;		_maze_search
  8736 ;;		_maze_return
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text34
  8741   003956                     __ptext34:
  8742                           	callstack 0
  8743   003956                     _backward:
  8744                           	callstack 27
  8745                           
  8746                           ;incstack = 0
  8747                           ;backward@Distance_Calibration stored from wreg
  8748   003956  6E18               	movwf	backward@Distance_Calibration^0,c
  8749   003958                     
  8750                           ;dc_motor_v1.c: 167:     mL->direction = 0;
  8751   003958  5013               	movf	backward@mL^0,w,c
  8752   00395A  6ED9               	movwf	fsr2l,c
  8753   00395C  6ADA               	clrf	fsr2h,c
  8754   00395E  0E01               	movlw	1
  8755   003960  26D9               	addwf	fsr2l,f,c
  8756   003962  6ADF               	clrf	indf2,c
  8757                           
  8758                           ;dc_motor_v1.c: 168:     mR->direction = 0;
  8759   003964  5014               	movf	backward@mR^0,w,c
  8760   003966  6ED9               	movwf	fsr2l,c
  8761   003968  6ADA               	clrf	fsr2h,c
  8762   00396A  0E01               	movlw	1
  8763   00396C  26D9               	addwf	fsr2l,f,c
  8764   00396E  6ADF               	clrf	indf2,c
  8765   003970                     
  8766                           ;dc_motor_v1.c: 171:     int max_power = 20;
  8767   003970  0E00               	movlw	0
  8768   003972  6E1E               	movwf	(backward@max_power+1)^0,c
  8769   003974  0E14               	movlw	20
  8770   003976  6E1D               	movwf	backward@max_power^0,c
  8771   003978                     
  8772                           ;dc_motor_v1.c: 173:     int delay_time = acceleration_time/max_power;
  8773   003978  0E00               	movlw	0
  8774   00397A  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8775   00397C  0E64               	movlw	100
  8776   00397E  6E01               	movwf	___awdiv@dividend^0,c
  8777   003980  0E00               	movlw	0
  8778   003982  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8779   003984  0E14               	movlw	20
  8780   003986  6E03               	movwf	___awdiv@divisor^0,c
  8781   003988  ECB7  F020         	call	___awdiv	;wreg free
  8782   00398C  C001  F01F         	movff	?___awdiv,backward@delay_time
  8783   003990  C002  F020         	movff	?___awdiv+1,backward@delay_time+1
  8784   003994                     
  8785                           ;dc_motor_v1.c: 176:     for(int i=0; i< max_power; i++){
  8786   003994  0E00               	movlw	0
  8787   003996  6E1A               	movwf	(backward@i+1)^0,c
  8788   003998  0E00               	movlw	0
  8789   00399A  6E19               	movwf	backward@i^0,c
  8790   00399C  EFF4  F01C         	goto	l4720
  8791   0039A0                     l4710:
  8792                           
  8793                           ;dc_motor_v1.c: 177:         mL->power = mL->power + 1;
  8794   0039A0  5013               	movf	backward@mL^0,w,c
  8795   0039A2  6ED9               	movwf	fsr2l,c
  8796   0039A4  6ADA               	clrf	fsr2h,c
  8797   0039A6  5013               	movf	backward@mL^0,w,c
  8798   0039A8  6EE1               	movwf	fsr1l,c
  8799   0039AA  6AE2               	clrf	fsr1h,c
  8800   0039AC  50E7               	movf	indf1,w,c
  8801   0039AE  6E15               	movwf	??_backward^0,c
  8802   0039B0  2815               	incf	??_backward^0,w,c
  8803   0039B2  6EDF               	movwf	indf2,c
  8804                           
  8805                           ;dc_motor_v1.c: 178:         mR->power = mR->power + 1 ;
  8806   0039B4  5014               	movf	backward@mR^0,w,c
  8807   0039B6  6ED9               	movwf	fsr2l,c
  8808   0039B8  6ADA               	clrf	fsr2h,c
  8809   0039BA  5014               	movf	backward@mR^0,w,c
  8810   0039BC  6EE1               	movwf	fsr1l,c
  8811   0039BE  6AE2               	clrf	fsr1h,c
  8812   0039C0  50E7               	movf	indf1,w,c
  8813   0039C2  6E15               	movwf	??_backward^0,c
  8814   0039C4  2815               	incf	??_backward^0,w,c
  8815   0039C6  6EDF               	movwf	indf2,c
  8816   0039C8                     
  8817                           ;dc_motor_v1.c: 179:         setMotorPWM(mR);
  8818   0039C8  C014  F00E         	movff	backward@mR,setMotorPWM@m
  8819   0039CC  EC14  F01E         	call	_setMotorPWM	;wreg free
  8820   0039D0                     
  8821                           ;dc_motor_v1.c: 180:         setMotorPWM(mL);
  8822   0039D0  C013  F00E         	movff	backward@mL,setMotorPWM@m
  8823   0039D4  EC14  F01E         	call	_setMotorPWM	;wreg free
  8824   0039D8                     
  8825                           ;dc_motor_v1.c: 181:         delay_ms_function(delay_time);
  8826   0039D8  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  8827   0039DC  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  8828   0039E0  EC9B  F023         	call	_delay_ms_function	;wreg free
  8829   0039E4                     
  8830                           ;dc_motor_v1.c: 182:     }
  8831   0039E4  4A19               	infsnz	backward@i^0,f,c
  8832   0039E6  2A1A               	incf	(backward@i+1)^0,f,c
  8833   0039E8                     l4720:
  8834   0039E8  501D               	movf	backward@max_power^0,w,c
  8835   0039EA  5C19               	subwf	backward@i^0,w,c
  8836   0039EC  501A               	movf	(backward@i+1)^0,w,c
  8837   0039EE  0A80               	xorlw	128
  8838   0039F0  6E15               	movwf	??_backward^0,c
  8839   0039F2  501E               	movf	(backward@max_power+1)^0,w,c
  8840   0039F4  0A80               	xorlw	128
  8841   0039F6  5815               	subwfb	??_backward^0,w,c
  8842   0039F8  A0D8               	btfss	status,0,c
  8843   0039FA  EF01  F01D         	goto	u5351
  8844   0039FE  EF03  F01D         	goto	u5350
  8845   003A02                     u5351:
  8846   003A02  EFD0  F01C         	goto	l4710
  8847   003A06                     u5350:
  8848   003A06                     
  8849                           ;dc_motor_v1.c: 185:     for(int j=0; j<Distance_Calibration; j++){
  8850   003A06  0E00               	movlw	0
  8851   003A08  6E1C               	movwf	(backward@j+1)^0,c
  8852   003A0A  0E00               	movlw	0
  8853   003A0C  6E1B               	movwf	backward@j^0,c
  8854   003A0E  EF12  F01D         	goto	l272
  8855   003A12                     l4724:
  8856                           
  8857                           ;dc_motor_v1.c: 186:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8858   003A12  0ED0               	movlw	208
  8859   003A14  6E15               	movwf	??_backward^0,c
  8860   003A16  0ECA               	movlw	202
  8861   003A18                     u5807:
  8862   003A18  2EE8               	decfsz	wreg,f,c
  8863   003A1A  D7FE               	bra	u5807
  8864   003A1C  2E15               	decfsz	??_backward^0,f,c
  8865   003A1E  D7FC               	bra	u5807
  8866   003A20                     
  8867                           ;dc_motor_v1.c: 187:     }
  8868   003A20  4A1B               	infsnz	backward@j^0,f,c
  8869   003A22  2A1C               	incf	(backward@j+1)^0,f,c
  8870   003A24                     l272:
  8871   003A24  5018               	movf	backward@Distance_Calibration^0,w,c
  8872   003A26  6E15               	movwf	??_backward^0,c
  8873   003A28  6A16               	clrf	(??_backward+1)^0,c
  8874   003A2A  5015               	movf	??_backward^0,w,c
  8875   003A2C  5C1B               	subwf	backward@j^0,w,c
  8876   003A2E  501C               	movf	(backward@j+1)^0,w,c
  8877   003A30  0A80               	xorlw	128
  8878   003A32  6E17               	movwf	(??_backward+2)^0,c
  8879   003A34  5016               	movf	(??_backward+1)^0,w,c
  8880   003A36  0A80               	xorlw	128
  8881   003A38  5817               	subwfb	(??_backward+2)^0,w,c
  8882   003A3A  A0D8               	btfss	status,0,c
  8883   003A3C  EF22  F01D         	goto	u5361
  8884   003A40  EF24  F01D         	goto	u5360
  8885   003A44                     u5361:
  8886   003A44  EF09  F01D         	goto	l4724
  8887   003A48                     u5360:
  8888   003A48  EF52  F01D         	goto	l4742
  8889   003A4C                     l4728:
  8890                           
  8891                           ;dc_motor_v1.c: 191:         if(mR->power> 0 ){
  8892   003A4C  5014               	movf	backward@mR^0,w,c
  8893   003A4E  6ED9               	movwf	fsr2l,c
  8894   003A50  6ADA               	clrf	fsr2h,c
  8895   003A52  50DF               	movf	indf2,w,c
  8896   003A54  B4D8               	btfsc	status,2,c
  8897   003A56  EF2F  F01D         	goto	u5371
  8898   003A5A  EF31  F01D         	goto	u5370
  8899   003A5E                     u5371:
  8900   003A5E  EF35  F01D         	goto	l4732
  8901   003A62                     u5370:
  8902   003A62                     
  8903                           ;dc_motor_v1.c: 192:             mR->power--;
  8904   003A62  5014               	movf	backward@mR^0,w,c
  8905   003A64  6ED9               	movwf	fsr2l,c
  8906   003A66  6ADA               	clrf	fsr2h,c
  8907   003A68  06DF               	decf	indf2,f,c
  8908   003A6A                     l4732:
  8909                           
  8910                           ;dc_motor_v1.c: 194:         if(mL->power> 0 ){
  8911   003A6A  5013               	movf	backward@mL^0,w,c
  8912   003A6C  6ED9               	movwf	fsr2l,c
  8913   003A6E  6ADA               	clrf	fsr2h,c
  8914   003A70  50DF               	movf	indf2,w,c
  8915   003A72  B4D8               	btfsc	status,2,c
  8916   003A74  EF3E  F01D         	goto	u5381
  8917   003A78  EF40  F01D         	goto	u5380
  8918   003A7C                     u5381:
  8919   003A7C  EF44  F01D         	goto	l4736
  8920   003A80                     u5380:
  8921   003A80                     
  8922                           ;dc_motor_v1.c: 195:             mL->power--;
  8923   003A80  5013               	movf	backward@mL^0,w,c
  8924   003A82  6ED9               	movwf	fsr2l,c
  8925   003A84  6ADA               	clrf	fsr2h,c
  8926   003A86  06DF               	decf	indf2,f,c
  8927   003A88                     l4736:
  8928                           
  8929                           ;dc_motor_v1.c: 197:         setMotorPWM(mR);
  8930   003A88  C014  F00E         	movff	backward@mR,setMotorPWM@m
  8931   003A8C  EC14  F01E         	call	_setMotorPWM	;wreg free
  8932   003A90                     
  8933                           ;dc_motor_v1.c: 198:         setMotorPWM(mL);
  8934   003A90  C013  F00E         	movff	backward@mL,setMotorPWM@m
  8935   003A94  EC14  F01E         	call	_setMotorPWM	;wreg free
  8936   003A98                     
  8937                           ;dc_motor_v1.c: 199:         delay_ms_function(delay_time);
  8938   003A98  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  8939   003A9C  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  8940   003AA0  EC9B  F023         	call	_delay_ms_function	;wreg free
  8941   003AA4                     l4742:
  8942                           
  8943                           ;dc_motor_v1.c: 190:     while(mL->power || mR->power > 0){
  8944   003AA4  5013               	movf	backward@mL^0,w,c
  8945   003AA6  6ED9               	movwf	fsr2l,c
  8946   003AA8  6ADA               	clrf	fsr2h,c
  8947   003AAA  50DF               	movf	indf2,w,c
  8948   003AAC  A4D8               	btfss	status,2,c
  8949   003AAE  EF5B  F01D         	goto	u5391
  8950   003AB2  EF5D  F01D         	goto	u5390
  8951   003AB6                     u5391:
  8952   003AB6  EF26  F01D         	goto	l4728
  8953   003ABA                     u5390:
  8954   003ABA  5014               	movf	backward@mR^0,w,c
  8955   003ABC  6ED9               	movwf	fsr2l,c
  8956   003ABE  6ADA               	clrf	fsr2h,c
  8957   003AC0  50DF               	movf	indf2,w,c
  8958   003AC2  A4D8               	btfss	status,2,c
  8959   003AC4  EF66  F01D         	goto	u5401
  8960   003AC8  EF68  F01D         	goto	u5400
  8961   003ACC                     u5401:
  8962   003ACC  EF26  F01D         	goto	l4728
  8963   003AD0                     u5400:
  8964   003AD0  0012               	return		;funcret
  8965   003AD2                     __end_of_backward:
  8966                           	callstack 0
  8967                           
  8968 ;; *************** function _setMotorPWM *****************
  8969 ;; Defined at:
  8970 ;;		line 75 in file "dc_motor_v1.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  m               1   13[COMRAM] PTR struct DC_motor
  8973 ;;		 -> motorR(9), motorL(9), 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  negDuty         1   17[COMRAM] unsigned char 
  8976 ;;  posDuty         1   16[COMRAM] unsigned char 
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8986 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8989 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;Total ram usage:        5 bytes
  8991 ;; Hardware stack levels used: 1
  8992 ;; Hardware stack levels required when called: 1
  8993 ;; This function calls:
  8994 ;;		___lwdiv
  8995 ;;		___wmul
  8996 ;; This function is called by:
  8997 ;;		_forward
  8998 ;;		_backward
  8999 ;;		_leftTURN
  9000 ;;		_rightTURN
  9001 ;;		_stop
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text35
  9006   003C28                     __ptext35:
  9007                           	callstack 0
  9008   003C28                     _setMotorPWM:
  9009                           	callstack 27
  9010   003C28                     
  9011                           ;dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 76: {;dc_motor_v1.c: 77
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 79:     if(m->brakemode) {
  9012   003C28  500E               	movf	setMotorPWM@m^0,w,c
  9013   003C2A  6ED9               	movwf	fsr2l,c
  9014   003C2C  6ADA               	clrf	fsr2h,c
  9015   003C2E  0E02               	movlw	2
  9016   003C30  26D9               	addwf	fsr2l,f,c
  9017   003C32  50DF               	movf	indf2,w,c
  9018   003C34  B4D8               	btfsc	status,2,c
  9019   003C36  EF1F  F01E         	goto	u5011
  9020   003C3A  EF21  F01E         	goto	u5010
  9021   003C3E                     u5011:
  9022   003C3E  EF51  F01E         	goto	l4452
  9023   003C42                     u5010:
  9024   003C42                     
  9025                           ;dc_motor_v1.c: 80:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9026   003C42  500E               	movf	setMotorPWM@m^0,w,c
  9027   003C44  6ED9               	movwf	fsr2l,c
  9028   003C46  6ADA               	clrf	fsr2h,c
  9029   003C48  50DF               	movf	indf2,w,c
  9030   003C4A  6E0F               	movwf	??_setMotorPWM^0,c
  9031   003C4C  500F               	movf	??_setMotorPWM^0,w,c
  9032   003C4E  6E01               	movwf	___wmul@multiplier^0,c
  9033   003C50  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9034   003C52  500E               	movf	setMotorPWM@m^0,w,c
  9035   003C54  6ED9               	movwf	fsr2l,c
  9036   003C56  6ADA               	clrf	fsr2h,c
  9037   003C58  0E03               	movlw	3
  9038   003C5A  26D9               	addwf	fsr2l,f,c
  9039   003C5C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9040   003C60  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9041   003C64  ECDB  F023         	call	___wmul	;wreg free
  9042   003C68  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9043   003C6C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9044   003C70  0E00               	movlw	0
  9045   003C72  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9046   003C74  0E64               	movlw	100
  9047   003C76  6E09               	movwf	___lwdiv@divisor^0,c
  9048   003C78  EC11  F022         	call	___lwdiv	;wreg free
  9049   003C7C  500E               	movf	setMotorPWM@m^0,w,c
  9050   003C7E  6ED9               	movwf	fsr2l,c
  9051   003C80  6ADA               	clrf	fsr2h,c
  9052   003C82  0E03               	movlw	3
  9053   003C84  26D9               	addwf	fsr2l,f,c
  9054   003C86  50DF               	movf	indf2,w,c
  9055   003C88  6E10               	movwf	(??_setMotorPWM+1)^0,c
  9056   003C8A  5007               	movf	?___lwdiv^0,w,c
  9057   003C8C  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  9058   003C8E  6E11               	movwf	setMotorPWM@posDuty^0,c
  9059   003C90                     
  9060                           ;dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  9061   003C90  500E               	movf	setMotorPWM@m^0,w,c
  9062   003C92  6ED9               	movwf	fsr2l,c
  9063   003C94  6ADA               	clrf	fsr2h,c
  9064   003C96  0E03               	movlw	3
  9065   003C98  26D9               	addwf	fsr2l,f,c
  9066   003C9A  50DF               	movf	indf2,w,c
  9067   003C9C  6E12               	movwf	setMotorPWM@negDuty^0,c
  9068                           
  9069                           ;dc_motor_v1.c: 82:     }
  9070   003C9E  EF72  F01E         	goto	l4456
  9071   003CA2                     l4452:
  9072                           
  9073                           ;dc_motor_v1.c: 84:         posDuty=0;
  9074   003CA2  0E00               	movlw	0
  9075   003CA4  6E11               	movwf	setMotorPWM@posDuty^0,c
  9076   003CA6                     
  9077                           ;dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9078   003CA6  500E               	movf	setMotorPWM@m^0,w,c
  9079   003CA8  6ED9               	movwf	fsr2l,c
  9080   003CAA  6ADA               	clrf	fsr2h,c
  9081   003CAC  50DF               	movf	indf2,w,c
  9082   003CAE  6E0F               	movwf	??_setMotorPWM^0,c
  9083   003CB0  500F               	movf	??_setMotorPWM^0,w,c
  9084   003CB2  6E01               	movwf	___wmul@multiplier^0,c
  9085   003CB4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9086   003CB6  500E               	movf	setMotorPWM@m^0,w,c
  9087   003CB8  6ED9               	movwf	fsr2l,c
  9088   003CBA  6ADA               	clrf	fsr2h,c
  9089   003CBC  0E03               	movlw	3
  9090   003CBE  26D9               	addwf	fsr2l,f,c
  9091   003CC0  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9092   003CC4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9093   003CC8  ECDB  F023         	call	___wmul	;wreg free
  9094   003CCC  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9095   003CD0  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9096   003CD4  0E00               	movlw	0
  9097   003CD6  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9098   003CD8  0E64               	movlw	100
  9099   003CDA  6E09               	movwf	___lwdiv@divisor^0,c
  9100   003CDC  EC11  F022         	call	___lwdiv	;wreg free
  9101   003CE0  5007               	movf	?___lwdiv^0,w,c
  9102   003CE2  6E12               	movwf	setMotorPWM@negDuty^0,c
  9103   003CE4                     l4456:
  9104                           
  9105                           ;dc_motor_v1.c: 88:     if (m->direction) {
  9106   003CE4  500E               	movf	setMotorPWM@m^0,w,c
  9107   003CE6  6ED9               	movwf	fsr2l,c
  9108   003CE8  6ADA               	clrf	fsr2h,c
  9109   003CEA  0E01               	movlw	1
  9110   003CEC  26D9               	addwf	fsr2l,f,c
  9111   003CEE  50DF               	movf	indf2,w,c
  9112   003CF0  B4D8               	btfsc	status,2,c
  9113   003CF2  EF7D  F01E         	goto	u5021
  9114   003CF6  EF7F  F01E         	goto	u5020
  9115   003CFA                     u5021:
  9116   003CFA  EF9F  F01E         	goto	l4460
  9117   003CFE                     u5020:
  9118   003CFE                     
  9119                           ;dc_motor_v1.c: 89:         *(m->posDutyHighByte)=posDuty;
  9120   003CFE  500E               	movf	setMotorPWM@m^0,w,c
  9121   003D00  6ED9               	movwf	fsr2l,c
  9122   003D02  6ADA               	clrf	fsr2h,c
  9123   003D04  0E05               	movlw	5
  9124   003D06  26D9               	addwf	fsr2l,f,c
  9125   003D08  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9126   003D0C  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9127   003D10  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9128   003D14  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9129   003D18  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9130                           
  9131                           ;dc_motor_v1.c: 90:         *(m->negDutyHighByte)=negDuty;
  9132   003D1C  500E               	movf	setMotorPWM@m^0,w,c
  9133   003D1E  6ED9               	movwf	fsr2l,c
  9134   003D20  6ADA               	clrf	fsr2h,c
  9135   003D22  0E07               	movlw	7
  9136   003D24  26D9               	addwf	fsr2l,f,c
  9137   003D26  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9138   003D2A  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9139   003D2E  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9140   003D32  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9141   003D36  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9142                           
  9143                           ;dc_motor_v1.c: 91:     } else {
  9144   003D3A  EFBD  F01E         	goto	l244
  9145   003D3E                     l4460:
  9146                           
  9147                           ;dc_motor_v1.c: 92:         *(m->posDutyHighByte)=negDuty;
  9148   003D3E  500E               	movf	setMotorPWM@m^0,w,c
  9149   003D40  6ED9               	movwf	fsr2l,c
  9150   003D42  6ADA               	clrf	fsr2h,c
  9151   003D44  0E05               	movlw	5
  9152   003D46  26D9               	addwf	fsr2l,f,c
  9153   003D48  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9154   003D4C  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9155   003D50  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9156   003D54  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9157   003D58  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9158                           
  9159                           ;dc_motor_v1.c: 93:         *(m->negDutyHighByte)=posDuty;
  9160   003D5C  500E               	movf	setMotorPWM@m^0,w,c
  9161   003D5E  6ED9               	movwf	fsr2l,c
  9162   003D60  6ADA               	clrf	fsr2h,c
  9163   003D62  0E07               	movlw	7
  9164   003D64  26D9               	addwf	fsr2l,f,c
  9165   003D66  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9166   003D6A  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9167   003D6E  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9168   003D72  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9169   003D76  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9170   003D7A                     l244:
  9171   003D7A  0012               	return		;funcret
  9172   003D7C                     __end_of_setMotorPWM:
  9173                           	callstack 0
  9174                           
  9175 ;; *************** function ___wmul *****************
  9176 ;; Defined at:
  9177 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  multiplier      2    0[COMRAM] unsigned int 
  9180 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  product         2    4[COMRAM] unsigned int 
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  2    0[COMRAM] unsigned int 
  9185 ;; Registers used:
  9186 ;;		wreg, status,2, status,0, prodl, prodh
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;Total ram usage:        6 bytes
  9197 ;; Hardware stack levels used: 1
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_setMotorPWM
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text36
  9206   0047B6                     __ptext36:
  9207                           	callstack 0
  9208   0047B6                     ___wmul:
  9209                           	callstack 27
  9210   0047B6  5001               	movf	___wmul@multiplier^0,w,c
  9211   0047B8  0203               	mulwf	___wmul@multiplicand^0,c
  9212   0047BA  CFF3 F005          	movff	prodl,___wmul@product
  9213   0047BE  CFF4 F006          	movff	prodh,___wmul@product+1
  9214   0047C2  5001               	movf	___wmul@multiplier^0,w,c
  9215   0047C4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9216   0047C6  50F3               	movf	243,w,c
  9217   0047C8  2606               	addwf	(___wmul@product+1)^0,f,c
  9218   0047CA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9219   0047CC  0203               	mulwf	___wmul@multiplicand^0,c
  9220   0047CE  50F3               	movf	243,w,c
  9221   0047D0  2606               	addwf	(___wmul@product+1)^0,f,c
  9222   0047D2  C005  F001         	movff	___wmul@product,?___wmul
  9223   0047D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9224   0047DA  0012               	return		;funcret
  9225   0047DC                     __end_of___wmul:
  9226                           	callstack 0
  9227                           
  9228 ;; *************** function ___lwdiv *****************
  9229 ;; Defined at:
  9230 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  dividend        2    6[COMRAM] unsigned int 
  9233 ;;  divisor         2    8[COMRAM] unsigned int 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;  quotient        2   11[COMRAM] unsigned int 
  9236 ;;  counter         1   10[COMRAM] unsigned char 
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  2    6[COMRAM] unsigned int 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2, status,0
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9247 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;Total ram usage:        7 bytes
  9251 ;; Hardware stack levels used: 1
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_setMotorPWM
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text37
  9260   004422                     __ptext37:
  9261                           	callstack 0
  9262   004422                     ___lwdiv:
  9263                           	callstack 27
  9264   004422  0E00               	movlw	0
  9265   004424  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  9266   004426  0E00               	movlw	0
  9267   004428  6E0C               	movwf	___lwdiv@quotient^0,c
  9268   00442A  5009               	movf	___lwdiv@divisor^0,w,c
  9269   00442C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9270   00442E  B4D8               	btfsc	status,2,c
  9271   004430  EF1C  F022         	goto	u4971
  9272   004434  EF1E  F022         	goto	u4970
  9273   004438                     u4971:
  9274   004438  EF46  F022         	goto	l1082
  9275   00443C                     u4970:
  9276   00443C  0E01               	movlw	1
  9277   00443E  6E0B               	movwf	___lwdiv@counter^0,c
  9278   004440  EF26  F022         	goto	l4426
  9279   004444                     l4424:
  9280   004444  90D8               	bcf	status,0,c
  9281   004446  3609               	rlcf	___lwdiv@divisor^0,f,c
  9282   004448  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9283   00444A  2A0B               	incf	___lwdiv@counter^0,f,c
  9284   00444C                     l4426:
  9285   00444C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9286   00444E  EF2B  F022         	goto	u4981
  9287   004452  EF2D  F022         	goto	u4980
  9288   004456                     u4981:
  9289   004456  EF22  F022         	goto	l4424
  9290   00445A                     u4980:
  9291   00445A                     l4428:
  9292   00445A  90D8               	bcf	status,0,c
  9293   00445C  360C               	rlcf	___lwdiv@quotient^0,f,c
  9294   00445E  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9295   004460  5009               	movf	___lwdiv@divisor^0,w,c
  9296   004462  5C07               	subwf	___lwdiv@dividend^0,w,c
  9297   004464  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9298   004466  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9299   004468  A0D8               	btfss	status,0,c
  9300   00446A  EF39  F022         	goto	u4991
  9301   00446E  EF3B  F022         	goto	u4990
  9302   004472                     u4991:
  9303   004472  EF40  F022         	goto	l4436
  9304   004476                     u4990:
  9305   004476  5009               	movf	___lwdiv@divisor^0,w,c
  9306   004478  5E07               	subwf	___lwdiv@dividend^0,f,c
  9307   00447A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9308   00447C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9309   00447E  800C               	bsf	___lwdiv@quotient^0,0,c
  9310   004480                     l4436:
  9311   004480  90D8               	bcf	status,0,c
  9312   004482  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9313   004484  3209               	rrcf	___lwdiv@divisor^0,f,c
  9314   004486  2E0B               	decfsz	___lwdiv@counter^0,f,c
  9315   004488  EF2D  F022         	goto	l4428
  9316   00448C                     l1082:
  9317   00448C  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
  9318   004490  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9319   004494  0012               	return		;funcret
  9320   004496                     __end_of___lwdiv:
  9321                           	callstack 0
  9322                           
  9323 ;; *************** function _delay_ms_function *****************
  9324 ;; Defined at:
  9325 ;;		line 67 in file "dc_motor_v1.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;		None
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1    wreg      void 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9343 ;;Total ram usage:        3 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_forward
  9349 ;;		_backward
  9350 ;;		_leftTURN
  9351 ;;		_rightTURN
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text38
  9356   004736                     __ptext38:
  9357                           	callstack 0
  9358   004736                     _delay_ms_function:
  9359                           	callstack 28
  9360   004736                     
  9361                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  9362   004736  EFA8  F023         	goto	l234
  9363   00473A                     l4442:
  9364                           
  9365                           ;dc_motor_v1.c: 69:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9366   00473A  0E15               	movlw	21
  9367   00473C  6E03               	movwf	??_delay_ms_function^0,c
  9368   00473E  0EC6               	movlw	198
  9369   004740                     u5817:
  9370   004740  2EE8               	decfsz	wreg,f,c
  9371   004742  D7FE               	bra	u5817
  9372   004744  2E03               	decfsz	??_delay_ms_function^0,f,c
  9373   004746  D7FC               	bra	u5817
  9374   004748  D000               	nop2	
  9375   00474A                     
  9376                           ;dc_motor_v1.c: 70:         milliseconds--;
  9377   00474A  0601               	decf	delay_ms_function@milliseconds^0,f,c
  9378   00474C  A0D8               	btfss	status,0,c
  9379   00474E  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  9380   004750                     l234:
  9381                           
  9382                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  9383   004750  5001               	movf	delay_ms_function@milliseconds^0,w,c
  9384   004752  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  9385   004754  A4D8               	btfss	status,2,c
  9386   004756  EFAF  F023         	goto	u5001
  9387   00475A  EFB1  F023         	goto	u5000
  9388   00475E                     u5001:
  9389   00475E  EF9D  F023         	goto	l4442
  9390   004762                     u5000:
  9391   004762  0012               	return		;funcret
  9392   004764                     __end_of_delay_ms_function:
  9393                           	callstack 0
  9394                           
  9395 ;; *************** function ___awdiv *****************
  9396 ;; Defined at:
  9397 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  dividend        2    0[COMRAM] int 
  9400 ;;  divisor         2    2[COMRAM] int 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;  quotient        2    6[COMRAM] int 
  9403 ;;  sign            1    5[COMRAM] unsigned char 
  9404 ;;  counter         1    4[COMRAM] unsigned char 
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  2    0[COMRAM] int 
  9407 ;; Registers used:
  9408 ;;		wreg, status,2, status,0
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9415 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9417 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9418 ;;Total ram usage:        8 bytes
  9419 ;; Hardware stack levels used: 1
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_forward
  9424 ;;		_backward
  9425 ;;		_leftTURN
  9426 ;;		_rightTURN
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text39
  9431   00416E                     __ptext39:
  9432                           	callstack 0
  9433   00416E                     ___awdiv:
  9434                           	callstack 28
  9435   00416E  0E00               	movlw	0
  9436   004170  6E06               	movwf	___awdiv@sign^0,c
  9437   004172  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9438   004174  EFC0  F020         	goto	u5030
  9439   004178  EFBE  F020         	goto	u5031
  9440   00417C                     u5031:
  9441   00417C  EFC6  F020         	goto	l4470
  9442   004180                     u5030:
  9443   004180  6C03               	negf	___awdiv@divisor^0,c
  9444   004182  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9445   004184  B0D8               	btfsc	status,0,c
  9446   004186  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9447   004188  0E01               	movlw	1
  9448   00418A  6E06               	movwf	___awdiv@sign^0,c
  9449   00418C                     l4470:
  9450   00418C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9451   00418E  EFCD  F020         	goto	u5040
  9452   004192  EFCB  F020         	goto	u5041
  9453   004196                     u5041:
  9454   004196  EFD3  F020         	goto	l4476
  9455   00419A                     u5040:
  9456   00419A  6C01               	negf	___awdiv@dividend^0,c
  9457   00419C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9458   00419E  B0D8               	btfsc	status,0,c
  9459   0041A0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9460   0041A2  0E01               	movlw	1
  9461   0041A4  1A06               	xorwf	___awdiv@sign^0,f,c
  9462   0041A6                     l4476:
  9463   0041A6  0E00               	movlw	0
  9464   0041A8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9465   0041AA  0E00               	movlw	0
  9466   0041AC  6E07               	movwf	___awdiv@quotient^0,c
  9467   0041AE  5003               	movf	___awdiv@divisor^0,w,c
  9468   0041B0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9469   0041B2  B4D8               	btfsc	status,2,c
  9470   0041B4  EFDE  F020         	goto	u5051
  9471   0041B8  EFE0  F020         	goto	u5050
  9472   0041BC                     u5051:
  9473   0041BC  EF08  F021         	goto	l4498
  9474   0041C0                     u5050:
  9475   0041C0  0E01               	movlw	1
  9476   0041C2  6E05               	movwf	___awdiv@counter^0,c
  9477   0041C4  EFE8  F020         	goto	l4484
  9478   0041C8                     l4482:
  9479   0041C8  90D8               	bcf	status,0,c
  9480   0041CA  3603               	rlcf	___awdiv@divisor^0,f,c
  9481   0041CC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9482   0041CE  2A05               	incf	___awdiv@counter^0,f,c
  9483   0041D0                     l4484:
  9484   0041D0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9485   0041D2  EFED  F020         	goto	u5061
  9486   0041D6  EFEF  F020         	goto	u5060
  9487   0041DA                     u5061:
  9488   0041DA  EFE4  F020         	goto	l4482
  9489   0041DE                     u5060:
  9490   0041DE                     l4486:
  9491   0041DE  90D8               	bcf	status,0,c
  9492   0041E0  3607               	rlcf	___awdiv@quotient^0,f,c
  9493   0041E2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9494   0041E4  5003               	movf	___awdiv@divisor^0,w,c
  9495   0041E6  5C01               	subwf	___awdiv@dividend^0,w,c
  9496   0041E8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9497   0041EA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9498   0041EC  A0D8               	btfss	status,0,c
  9499   0041EE  EFFB  F020         	goto	u5071
  9500   0041F2  EFFD  F020         	goto	u5070
  9501   0041F6                     u5071:
  9502   0041F6  EF02  F021         	goto	l4494
  9503   0041FA                     u5070:
  9504   0041FA  5003               	movf	___awdiv@divisor^0,w,c
  9505   0041FC  5E01               	subwf	___awdiv@dividend^0,f,c
  9506   0041FE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9507   004200  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9508   004202  8007               	bsf	___awdiv@quotient^0,0,c
  9509   004204                     l4494:
  9510   004204  90D8               	bcf	status,0,c
  9511   004206  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9512   004208  3203               	rrcf	___awdiv@divisor^0,f,c
  9513   00420A  2E05               	decfsz	___awdiv@counter^0,f,c
  9514   00420C  EFEF  F020         	goto	l4486
  9515   004210                     l4498:
  9516   004210  5006               	movf	___awdiv@sign^0,w,c
  9517   004212  B4D8               	btfsc	status,2,c
  9518   004214  EF0E  F021         	goto	u5081
  9519   004218  EF10  F021         	goto	u5080
  9520   00421C                     u5081:
  9521   00421C  EF14  F021         	goto	l4502
  9522   004220                     u5080:
  9523   004220  6C07               	negf	___awdiv@quotient^0,c
  9524   004222  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9525   004224  B0D8               	btfsc	status,0,c
  9526   004226  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9527   004228                     l4502:
  9528   004228  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9529   00422C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9530   004230  0012               	return		;funcret
  9531   004232                     __end_of___awdiv:
  9532                           	callstack 0
  9533                           
  9534 ;; *************** function _adjust_calibration *****************
  9535 ;; Defined at:
  9536 ;;		line 22 in file "calibration.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  calibration_    2    0[COMRAM] PTR int 
  9539 ;;		 -> calibration(7), 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;		None
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9554 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9555 ;;Total ram usage:        6 bytes
  9556 ;; Hardware stack levels used: 1
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		_calibration_routine
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text40
  9565   003AD2                     __ptext40:
  9566                           	callstack 0
  9567   003AD2                     _adjust_calibration:
  9568                           	callstack 29
  9569   003AD2                     l139:
  9570                           
  9571                           ;calibration.c: 27:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
  9572   003AD2  A68E               	btfss	142,3,c	;volatile
  9573   003AD4  EF6E  F01D         	goto	u5091
  9574   003AD8  EF70  F01D         	goto	u5090
  9575   003ADC                     u5091:
  9576   003ADC  EF77  F01D         	goto	l4508
  9577   003AE0                     u5090:
  9578   003AE0  B48E               	btfsc	142,2,c	;volatile
  9579   003AE2  EF75  F01D         	goto	u5101
  9580   003AE6  EF77  F01D         	goto	u5100
  9581   003AEA                     u5101:
  9582   003AEA  EF69  F01D         	goto	l139
  9583   003AEE                     u5100:
  9584   003AEE                     l4508:
  9585                           
  9586                           ;calibration.c: 28:             _delay((unsigned long)((100)*(64000000/4000.0)));
  9587   003AEE  0E09               	movlw	9
  9588   003AF0  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9589   003AF2  0E1E               	movlw	30
  9590   003AF4  6E03               	movwf	??_adjust_calibration^0,c
  9591   003AF6  0EE4               	movlw	228
  9592   003AF8                     u5827:
  9593   003AF8  2EE8               	decfsz	wreg,f,c
  9594   003AFA  D7FE               	bra	u5827
  9595   003AFC  2E03               	decfsz	??_adjust_calibration^0,f,c
  9596   003AFE  D7FC               	bra	u5827
  9597   003B00  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9598   003B02  D7FA               	bra	u5827
  9599   003B04  D000               	nop2	
  9600   003B06                     
  9601                           ;calibration.c: 30:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
  9602   003B06  B68E               	btfsc	142,3,c	;volatile
  9603   003B08  EF88  F01D         	goto	u5111
  9604   003B0C  EF8A  F01D         	goto	u5110
  9605   003B10                     u5111:
  9606   003B10  EFA3  F01D         	goto	l143
  9607   003B14                     u5110:
  9608   003B14  B48E               	btfsc	142,2,c	;volatile
  9609   003B16  EF8F  F01D         	goto	u5121
  9610   003B1A  EF91  F01D         	goto	u5120
  9611   003B1E                     u5121:
  9612   003B1E  EFA3  F01D         	goto	l143
  9613   003B22                     u5120:
  9614   003B22                     
  9615                           ;calibration.c: 32:                 LATHbits.LATH3 = 1;
  9616   003B22  8680               	bsf	128,3,c	;volatile
  9617                           
  9618                           ;calibration.c: 33:                 LATDbits.LATD7 = 1;
  9619   003B24  8E7C               	bsf	124,7,c	;volatile
  9620   003B26                     
  9621                           ;calibration.c: 34:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  9622   003B26  0E52               	movlw	82
  9623   003B28  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9624   003B2A  0E2B               	movlw	43
  9625   003B2C  6E03               	movwf	??_adjust_calibration^0,c
  9626   003B2E  0E00               	movlw	0
  9627   003B30                     u5837:
  9628   003B30  2EE8               	decfsz	wreg,f,c
  9629   003B32  D7FE               	bra	u5837
  9630   003B34  2E03               	decfsz	??_adjust_calibration^0,f,c
  9631   003B36  D7FC               	bra	u5837
  9632   003B38  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9633   003B3A  D7FA               	bra	u5837
  9634   003B3C  D000               	nop2	
  9635   003B3E                     
  9636                           ;calibration.c: 35:                 LATHbits.LATH3 = 0;
  9637   003B3E  9680               	bcf	128,3,c	;volatile
  9638   003B40                     
  9639                           ;calibration.c: 36:                 LATDbits.LATD7 = 0;
  9640   003B40  9E7C               	bcf	124,7,c	;volatile
  9641                           
  9642                           ;calibration.c: 37:                 break;
  9643   003B42  EF13  F01E         	goto	l149
  9644   003B46                     l143:
  9645                           
  9646                           ;calibration.c: 40:                 if(!PORTFbits.RF2){
  9647   003B46  B48E               	btfsc	142,2,c	;volatile
  9648   003B48  EFA8  F01D         	goto	u5131
  9649   003B4C  EFAA  F01D         	goto	u5130
  9650   003B50                     u5131:
  9651   003B50  EFD8  F01D         	goto	l4534
  9652   003B54                     u5130:
  9653   003B54                     
  9654                           ;calibration.c: 41:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9655   003B54  0E11               	movlw	17
  9656   003B56  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9657   003B58  0E3C               	movlw	60
  9658   003B5A  6E03               	movwf	??_adjust_calibration^0,c
  9659   003B5C  0ECB               	movlw	203
  9660   003B5E                     u5847:
  9661   003B5E  2EE8               	decfsz	wreg,f,c
  9662   003B60  D7FE               	bra	u5847
  9663   003B62  2E03               	decfsz	??_adjust_calibration^0,f,c
  9664   003B64  D7FC               	bra	u5847
  9665   003B66  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9666   003B68  D7FA               	bra	u5847
  9667   003B6A  0000               	nop	
  9668   003B6C                     
  9669                           ;calibration.c: 42:                     *calibration_label = *calibration_label + 2;
  9670   003B6C  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9671   003B70  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9672   003B74  CFDE F003          	movff	postinc2,??_adjust_calibration
  9673   003B78  CFDD F004          	movff	postdec2,??_adjust_calibration+1
  9674   003B7C  0E02               	movlw	2
  9675   003B7E  2603               	addwf	??_adjust_calibration^0,f,c
  9676   003B80  0E00               	movlw	0
  9677   003B82  2204               	addwfc	(??_adjust_calibration+1)^0,f,c
  9678   003B84  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9679   003B88  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9680   003B8C  C003  FFDE         	movff	??_adjust_calibration,postinc2
  9681   003B90  C004  FFDD         	movff	??_adjust_calibration+1,postdec2
  9682   003B94                     
  9683                           ;calibration.c: 43:                     LATDbits.LATD7 = 1;
  9684   003B94  8E7C               	bsf	124,7,c	;volatile
  9685   003B96                     
  9686                           ;calibration.c: 44:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9687   003B96  0E11               	movlw	17
  9688   003B98  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9689   003B9A  0E3C               	movlw	60
  9690   003B9C  6E03               	movwf	??_adjust_calibration^0,c
  9691   003B9E  0ECB               	movlw	203
  9692   003BA0                     u5857:
  9693   003BA0  2EE8               	decfsz	wreg,f,c
  9694   003BA2  D7FE               	bra	u5857
  9695   003BA4  2E03               	decfsz	??_adjust_calibration^0,f,c
  9696   003BA6  D7FC               	bra	u5857
  9697   003BA8  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9698   003BAA  D7FA               	bra	u5857
  9699   003BAC  0000               	nop	
  9700   003BAE                     
  9701                           ;calibration.c: 45:                     LATDbits.LATD7 = 0;
  9702   003BAE  9E7C               	bcf	124,7,c	;volatile
  9703   003BB0                     l4534:
  9704                           
  9705                           ;calibration.c: 48:                 if(!PORTFbits.RF3){
  9706   003BB0  B68E               	btfsc	142,3,c	;volatile
  9707   003BB2  EFDD  F01D         	goto	u5141
  9708   003BB6  EFDF  F01D         	goto	u5140
  9709   003BBA                     u5141:
  9710   003BBA  EF11  F01E         	goto	l140
  9711   003BBE                     u5140:
  9712   003BBE                     
  9713                           ;calibration.c: 49:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9714   003BBE  0E11               	movlw	17
  9715   003BC0  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9716   003BC2  0E3C               	movlw	60
  9717   003BC4  6E03               	movwf	??_adjust_calibration^0,c
  9718   003BC6  0ECB               	movlw	203
  9719   003BC8                     u5867:
  9720   003BC8  2EE8               	decfsz	wreg,f,c
  9721   003BCA  D7FE               	bra	u5867
  9722   003BCC  2E03               	decfsz	??_adjust_calibration^0,f,c
  9723   003BCE  D7FC               	bra	u5867
  9724   003BD0  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9725   003BD2  D7FA               	bra	u5867
  9726   003BD4  0000               	nop	
  9727   003BD6                     
  9728                           ;calibration.c: 50:                     *calibration_label = *calibration_label - 2;
  9729   003BD6  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9730   003BDA  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9731   003BDE  CFDE F003          	movff	postinc2,??_adjust_calibration
  9732   003BE2  CFDD F004          	movff	postdec2,??_adjust_calibration+1
  9733   003BE6  0EFE               	movlw	254
  9734   003BE8  2403               	addwf	??_adjust_calibration^0,w,c
  9735   003BEA  6E05               	movwf	(??_adjust_calibration+2)^0,c
  9736   003BEC  0EFF               	movlw	255
  9737   003BEE  2004               	addwfc	(??_adjust_calibration+1)^0,w,c
  9738   003BF0  6E06               	movwf	(??_adjust_calibration+3)^0,c
  9739   003BF2  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9740   003BF6  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9741   003BFA  C005  FFDE         	movff	??_adjust_calibration+2,postinc2
  9742   003BFE  C006  FFDD         	movff	??_adjust_calibration+3,postdec2
  9743   003C02                     
  9744                           ;calibration.c: 51:                     LATHbits.LATH3 = 1;
  9745   003C02  8680               	bsf	128,3,c	;volatile
  9746   003C04                     
  9747                           ;calibration.c: 52:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9748   003C04  0E11               	movlw	17
  9749   003C06  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9750   003C08  0E3C               	movlw	60
  9751   003C0A  6E03               	movwf	??_adjust_calibration^0,c
  9752   003C0C  0ECB               	movlw	203
  9753   003C0E                     u5877:
  9754   003C0E  2EE8               	decfsz	wreg,f,c
  9755   003C10  D7FE               	bra	u5877
  9756   003C12  2E03               	decfsz	??_adjust_calibration^0,f,c
  9757   003C14  D7FC               	bra	u5877
  9758   003C16  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9759   003C18  D7FA               	bra	u5877
  9760   003C1A  0000               	nop	
  9761   003C1C                     
  9762                           ;calibration.c: 53:                     LATHbits.LATH3 = 0;
  9763   003C1C  9680               	bcf	128,3,c	;volatile
  9764   003C1E  EF69  F01D         	goto	l139
  9765   003C22                     l140:
  9766   003C22  EF69  F01D         	goto	l139
  9767   003C26                     l149:
  9768   003C26  0012               	return		;funcret
  9769   003C28                     __end_of_adjust_calibration:
  9770                           	callstack 0
  9771                           
  9772                           	psect	smallconst
  9773   000E00                     __psmallconst:
  9774                           	callstack 0
  9775   000E00  00                 	db	0
  9776   000E01  00                 	db	0	; dummy byte at the end
  9777   000000                     
  9778                           	psect	rparam
  9779   000000                     
  9780                           	psect	config
  9781                           
  9782                           ;Config register CONFIG1L @ 0x300000
  9783                           ;	External Oscillator mode Selection bits
  9784                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9785                           ;	Power-up default value for COSC bits
  9786                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9787   300000                     	org	3145728
  9788   300000  AA                 	db	170
  9789                           
  9790                           ;Config register CONFIG1H @ 0x300001
  9791                           ;	unspecified, using default values
  9792                           ;	Clock Out Enable bit
  9793                           ;	CLKOUTEN = 0x1, unprogrammed default
  9794                           ;	Clock Switch Enable bit
  9795                           ;	CSWEN = 0x1, unprogrammed default
  9796                           ;	Fail-Safe Clock Monitor Enable bit
  9797                           ;	FCMEN = 0x1, unprogrammed default
  9798   300001                     	org	3145729
  9799   300001  FF                 	db	255
  9800                           
  9801                           ;Config register CONFIG3L @ 0x300004
  9802                           ;	WDT Period Select bits
  9803                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9804                           ;	WDT operating mode
  9805                           ;	WDTE = OFF, WDT Disabled
  9806   300004                     	org	3145732
  9807   300004  9F                 	db	159
  9808                           
  9809                           ;Config register CONFIG3H @ 0x300005
  9810                           ;	unspecified, using default values
  9811                           ;	WDT Window Select bits
  9812                           ;	WDTCWS = 0x7, unprogrammed default
  9813                           ;	WDT input clock selector
  9814                           ;	WDTCCS = 0x7, unprogrammed default
  9815   300005                     	org	3145733
  9816   300005  FF                 	db	255
  9817                           tosu	equ	0xFFF
  9818                           tosh	equ	0xFFE
  9819                           tosl	equ	0xFFD
  9820                           stkptr	equ	0xFFC
  9821                           pclatu	equ	0xFFB
  9822                           pclath	equ	0xFFA
  9823                           pcl	equ	0xFF9
  9824                           tblptru	equ	0xFF8
  9825                           tblptrh	equ	0xFF7
  9826                           tblptrl	equ	0xFF6
  9827                           tablat	equ	0xFF5
  9828                           prodh	equ	0xFF4
  9829                           prodl	equ	0xFF3
  9830                           indf0	equ	0xFEF
  9831                           postinc0	equ	0xFEE
  9832                           postdec0	equ	0xFED
  9833                           preinc0	equ	0xFEC
  9834                           plusw0	equ	0xFEB
  9835                           fsr0h	equ	0xFEA
  9836                           fsr0l	equ	0xFE9
  9837                           wreg	equ	0xFE8
  9838                           indf1	equ	0xFE7
  9839                           postinc1	equ	0xFE6
  9840                           postdec1	equ	0xFE5
  9841                           preinc1	equ	0xFE4
  9842                           plusw1	equ	0xFE3
  9843                           fsr1h	equ	0xFE2
  9844                           fsr1l	equ	0xFE1
  9845                           bsr	equ	0xFE0
  9846                           indf2	equ	0xFDF
  9847                           postinc2	equ	0xFDE
  9848                           postdec2	equ	0xFDD
  9849                           preinc2	equ	0xFDC
  9850                           plusw2	equ	0xFDB
  9851                           fsr2h	equ	0xFDA
  9852                           fsr2l	equ	0xFD9
  9853                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         213
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160    131     157
    BANK1           256      0     187
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(2) Largest target is 7
		 -> calibration(BANK1[7]), 

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    backward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    calibration_routine@c	PTR struct calibration_structure size(2) Largest target is 7
		 -> calibration(BANK1[7]), 

    calibration_routine@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    calibration_routine@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    maze_return@c	PTR struct calibration_structure size(2) Largest target is 7
		 -> calibration(BANK1[7]), 

    maze_return@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_return@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    maze_search@c	PTR struct calibration_structure size(2) Largest target is 7
		 -> calibration(BANK1[7]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    switch_calibration@calibration_index	PTR int  size(2) Largest target is 7
		 -> calibration(BANK1[7]), 


Critical Paths under _main in COMRAM

    _maze_search->_color_cardCheck
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _maze_return->_backward
    _maze_return->_forward
    _maze_return->_leftTURN
    _maze_return->_rightTURN
    _calibration_routine->_backward
    _calibration_routine->_forward
    _calibration_routine->_leftTURN
    _calibration_routine->_rightTURN
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  134193
                _calibration_routine
                    _initDCmotorsPWM
                        _maze_return
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          4     0      4   74398
                                            127 BANK0      4     0      4
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   44885
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          87    68     19   34610
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   11664
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2767
                                             33 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _maze_return                                         63    59      4   29147
                                             32 COMRAM     7     3      4
                                              0 BANK0     55    55      0
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                  5     1      4   30454
                                             32 COMRAM     5     1      4
                 _adjust_calibration
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
                 _switch_calibration
 ---------------------------------------------------------------------------------
 (2) _switch_calibration                                   4     2      2     602
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                           16    14      2    7565
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                            16    14      2    6485
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                             16    14      2    6305
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _backward                                            16    14      2    7385
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    3081
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     472
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     481
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     754
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1165
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _adjust_calibration                                   6     4      2     664
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration_routine
     _adjust_calibration
     _backward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _forward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _switch_calibration
   _initDCmotorsPWM
   _maze_return
     _backward
     _forward
     _leftTURN
     _rightTURN
   _maze_search
     _backward
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _leftTURN
     _rightTURN
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BB       7       73.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B7      58        0.0%
DATA                 0      0     1B7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 21:15:21 2024

                     _color_read_Red 44F4                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 45E4                                   l31 46FA  
                                 l40 4592                                   l50 3E92  
                                 l34 47FA                                   l43 4632  
                                 l60 19C6                                   l37 4542  
                                 l70 1AB8                                   l62 1A20  
                                 l46 45E2                                   l80 1E80  
                                 l72 1AC8                                   l64 1A30  
                                 l74 1B22                                   l58 19B6  
                                 l76 1B32                                   l87 1FFA  
                                 l99 1830                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                     _color_read_Clear 4594  
                   _color_read_Green 4544                                  l105 1838  
                                l140 3C22                                  l300 372A  
                                l132 4496                                  l143 3B46  
                                l231 4420                                  l152 4232  
                                l160 3120                                  l136 44F2  
                                l153 42A0                                  l234 4750  
                                l170 3324                                  l139 3AD2  
                                l403 478C                                  l244 3D7A  
                                l308 37D6                                  l412 481A  
                                l149 3C26                                  l237 4762  
                                l157 42E2                                  l421 4806  
                                l406 478E                                  l415 4824  
                                l280 3AD0                                  l272 3A24  
                                l424 46BA                                  l409 47B4  
                                l266 3658                                  l258 35AC  
                                l418 4810                                  l294 3954  
                                l286 38A8                                  l556 311E  
                                l548 311A                                  l565 2D0C  
                                l822 4230                                  l591 47DA  
                                l559 2C80                                  l850 438C  
                                l588 2ED8                                  l861 409C  
                                l856 4056                                  l888 3F98  
                                wreg 0FE8                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
         __end_of_adjust_calibration 3C28                         ___fltol@exp1 000A  
                               l1120 21D8                                 l1121 219E  
                               l1212 2776                                 l1205 2580  
                               l1222 28A6                                 l1214 27EE  
                               l1215 27DC                                 l1119 21EA  
                               l3000 233E                                 l1136 2304  
                               l1128 24BA                                 l1209 28E4  
                               l1145 23D4                                 l1161 4678  
                               l1082 448C                                 l1146 23C2  
                               l3010 236E                                 l3002 2348  
                               l3100 29A2                                 l3020 2396  
                               l3012 2372                                 l3004 2356  
                               l1260 3470                                 l1173 2C7E  
                               l1253 3414                                 l3110 29E4  
                               l3102 29B2                                 l3030 23F0  
                               l3022 23A4                                 l3014 2382  
                               l3006 2358                                 l1246 337C  
                               l1175 2ADE                                 l1184 2B24  
                               l3104 29C8                                 l3040 245A  
                               l3032 23FE                                 l3024 23BA  
                               l3008 2366                                 l3016 2384  
                               l1089 4494                                 l1249 34D8  
                               l1186 2B9C                                 l1178 2AA2  
                               l3130 2A66                                 l3122 2A1C  
                               l3106 29D8                                 l3114 29F8  
                               l3210 24E8                                 l3202 24BC  
                               l3050 2494                                 l3042 247A  
                               l3034 2438                                 l3018 2392  
                               l1187 2B8A                                 l3140 2AAC  
                               l3132 2A6E                                 l3124 2A36  
                               l3116 2A08                                 l3108 29E0  
                               l3220 2524                                 l3212 24F8  
                               l3204 24C8                                 l3052 249A  
                               l3044 247E                                 l3028 23E4  
                               l3036 243A                                 l3060 478E  
                               l3150 2B04                                 l3142 2ACA  
                               l3134 2A7E                                 l3126 2A46  
                               l3118 2A08                                 l3070 2902  
                               l3302 27FE                                 l3310 2846  
                               l3230 255A                                 l3222 252A  
                               l3214 2508                                 l3206 24D6  
                               l3054 24A8                                 l3046 248C  
                               l3038 244A                                 l3062 479E  
                               l3160 2B42                                 l3152 2B0A  
                               l3144 2ACC                                 l3136 2A92  
                               l3128 2A56                                 l3072 2912  
                               l3080 293C                                 l3064 28E6  
                               l3320 28BA                                 l3312 2860  
                               l3304 280A                                 l3232 256A  
                               l3224 2538                                 l3216 250E  
                               l3208 24D8                                 l3056 24AA  
                               l3048 2492                                 l3400 3338  
                               l5000 413C                                 l3170 2BAC  
                               l3162 2B46                                 l3154 2B14  
                               l3146 2ADC                                 l3138 2AA0  
                               l3090 2968                                 l3082 294C  
                               l3074 2922                                 l3066 28F2  
                               l3322 28C8                                 l3314 2874  
                               l3306 2818                                 l3250 25EC  
                               l3242 25B4                                 l3234 2570  
                               l3226 253A                                 l3218 251E  
                               l3410 33B6                                 l3402 3346  
                               l5002 4152                                 l3500 4006  
                               l3180 2C0E                                 l3172 2BB8  
                               l3164 2B54                                 l3156 2B22  
                               l3148 2AEE                                 l3092 2978  
                               l3084 2952                                 l3076 2932  
                               l3068 2900                                 l3340 4312  
                               l3324 28CA                                 l3316 288E  
                               l3308 2842                                 l3260 2636  
                               l3252 2604                                 l3244 25C0  
                               l3236 2590                                 l3228 254A  
                               l3332 4634                                 l3420 340A  
                               l3412 33BE                                 l3404 338C  
                               l4150 43EC                                 l4142 438E  
                               l3510 4094                                 l3502 4016  
                               l3190 2C6C                                 l3182 2C24  
                               l3174 2BC6                                 l3166 2B82  
                               l3158 2B34                                 l3094 2988  
                               l3086 2958                                 l3078 2934  
                               l3350 438A                                 l3342 4322  
                               l3318 28AA                                 l3326 28D0  
                               l3270 268C                                 l3262 2646  
                               l3254 2610                                 l3246 25CA  
                               l3238 25A0                                 l3334 4644  
                               l3430 3480                                 l3422 3446  
                               l3414 33CA                                 l3406 33A2  
                               l4160 440E                                 l4152 43F6  
                               l4144 439E                                 l3512 409A  
                               l3504 4024                                 l3192 2C72  
                               l3184 2C3E                                 l3176 2BF0  
                               l3096 2998                                 l3088 2966  
                               l3344 4350                                 l3328 28D4  
                               l3280 2730                                 l3272 26A8  
                               l3264 2652                                 l3256 261C  
                               l3248 25E0                                 l3360 3EBE  
                               l3440 34C8                                 l3432 3484  
                               l3424 3452                                 l3416 33FC  
                               l3600 1BBE                                 l4080 4498  
                               l4162 4410                                 l4154 43F8  
                               l4146 43C4                                 l3506 4036  
                               l3194 2C74                                 l3186 2C5A  
                               l3178 2BF4                                 l3098 299A  
                               l3346 4360                                 l3338 42E4  
                               l3290 2786                                 l3282 273E  
                               l3274 26B4                                 l3266 2662  
                               l3258 262A                                 l3370 3F0C  
                               l3362 3EE8                                 l3354 3E94  
                               l3434 34A8                                 l3426 3460  
                               l3418 33FE                                 l3610 1CE6  
                               l3602 1BF0                                 l3450 4802  
                               l4082 44B0                                 l4500 4220  
                               l4420 442A                                 l4412 47B6  
                               l4164 441A                                 l4156 4402  
                               l4148 43C8                                 l3508 4044  
                               l3188 2C5E                                 l3348 4384  
                               l3292 2794                                 l3284 275C  
                               l3276 26D0                                 l3268 267C  
                               l2900 20DC                                 l3380 3F38  
                               l3364 3EEA                                 l3356 3EAA  
                               l3436 34B8                                 l3428 347E  
                               l3612 1D3E                                 l3604 1C48  
                               l3620 1E80                                 l3460 467C  
                               l3444 4812                                 l3452 4808  
                               l3540 476E                                 l4084 44CA  
                               l4510 3B06                                 l4502 4228  
                               l4430 4460                                 l4422 443C  
                               l4414 47D2                                 l4166 441C  
                               l4158 4404                                 l3294 2798  
                               l3286 2766                                 l3278 26FA  
                               l2910 2108                                 l2902 20EE  
                               l3390 3F68                                 l3366 3EFA  
                               l3438 34C6                                 l3630 1F2A  
                               l3622 1E90                                 l3614 1D9A  
                               l3606 1C7C                                 l3470 46B8  
                               l3462 4680                                 l3446 4816  
                               l3454 480C                                 l3542 4774  
                               l3550 47DE                                 l3710 46E4  
                               l3702 46BC                                 l4086 44D8  
                               l4520 3B40                                 l4512 3B14  
                               l4440 4736                                 l4432 4476  
                               l4424 4444                                 l4600 3796  
                               l4168 441E                                 l3296 27A6  
                               l3288 2774                                 l2920 211C  
                               l2912 210C                                 l2904 20FC  
                               l3392 3F78                                 l3376 3F24  
                               l3368 3EFE                                 l3480 3DC2  
                               l3632 1F8A                                 l3624 1EC4  
                               l3616 1DCC                                 l3608 1CB4  
                               l3464 4688                                 l3456 481C  
                               l3448 47FE                                 l3560 458A  
                               l3552 44F4                                 l3800 1518  
                               l3544 4776                                 l3720 46F6  
                               l3712 46EE                                 l3704 46C0  
                               l4088 44F0                                 l4530 3B96  
                               l4514 3B22                                 l4506 3AE0  
                               l4442 473A                                 l4434 447E  
                               l4426 444C                                 l4418 4422  
                               l4450 3C90                                 l4610 37F4  
                               l4602 379E                                 l3298 27D4  
                               l2930 2130                                 l2922 2120  
                               l2914 2110                                 l2906 2100  
                               l3394 3F88                                 l3386 3F4C  
                               l3378 3F2E                                 l3482 3E12  
                               l3474 3D7C                                 l3634 1FBE  
                               l3626 1EDC                                 l3618 1E24  
                               l3466 4690                                 l3458 4820  
                               l3570 4594                                 l3554 453A  
                               l3810 15EE                                 l3802 154A  
                               l3730 0EF6                                 l3546 4778  
                               l3538 4764                                 l3722 46F8  
                               l3714 46F0                                 l3706 46CA  
                               l4540 3C02                                 l4532 3BAE  
                               l4524 3B54                                 l4516 3B26  
                               l4508 3AEE                                 l4444 474A  
                               l4436 4480                                 l4428 445A  
                               l4460 3D3E                                 l4452 3CA2  
                               l4700 3958                                 l4620 384C  
                               l4612 37FC                                 l4604 37AA  
                               l2940 216A                                 l2932 2134  
                               l2924 2124                                 l2916 2114  
                               l2908 2104                                 l2860 2008  
                               l3388 3F58                                 l3484 3E82  
                               l3476 3DAE                                 l3628 1F0E  
                               l3580 19A2                                 l3468 46B6  
                               l3564 45E4                                 l3572 45DA  
                               l3820 16E8                                 l3812 1620  
                               l3804 157C                                 l3740 0FF0  
                               l3732 0F28                                 l3724 0E02  
                               l3548 477A                                 l3716 46F2  
                               l3708 46DA                                 l4542 3C04  
                               l4526 3B6C                                 l4534 3BB0  
                               l4518 3B3E                                 l4470 418C  
                               l4462 416E                                 l4438 4486  
                               l4454 3CA6                                 l4446 3C28  
                               l4710 39A0                                 l4702 3970  
                               l4630 388A                                 l4622 3854  
                               l4614 37FC                                 l4606 37C0  
                               l4550 4280                                 l3494 3F9A  
                               l2950 21BC                                 l2942 2186  
                               l2934 2138                                 l2926 2128  
                               l2918 2118                                 l2870 2048  
                               l2862 2016                                 l3398 3328  
                               l3590 1AA4                                 l3582 19DA  
                               l3566 462A                                 l3558 4544  
                               l3830 17BE                                 l3814 1652  
                               l3822 16F6                                 l3806 15AE  
                               l3750 10C6                                 l3742 1022  
                               l3734 0F5A                                 l3726 0E9A  
                               l3718 46F4                                 l4544 3C1C  
                               l4536 3BBE                                 l4528 3B94  
                               l4480 41C0                                 l4472 419A  
                               l4464 4172                                 l4456 3CE4  
                               l4448 3C42                                 l4712 39C8  
                               l4720 39E8                                 l4704 3978  
                               l4640 38EE                                 l4632 3896  
                               l4624 385C                                 l4616 3818  
                               l4608 37DA                                 l4560 42E0  
                               l4552 4282                                 l3496 3FC8  
                               l2960 2208                                 l2952 21CA  
                               l2944 2196                                 l2928 212C  
                               l2936 213C                                 l2880 207A  
                               l2872 204A                                 l2864 2018  
                               l3592 1ADC                                 l3584 1A0C  
                               l3576 183A                                 l3832 17F0  
                               l3824 1728                                 l3816 1684  
                               l3808 15BC                                 l3760 119C  
                               l3752 10F8                                 l3736 0F8C  
                               l3744 1030                                 l3728 0EEC  
                               l4800 2EDE                                 l4538 3BD6  
                               l4490 41FA                                 l4482 41C8  
                               l4474 41A2                                 l4466 4180  
                               l4458 3CFE                                 l4730 3A62  
                               l4722 3A06                                 l4714 39D0  
                               l4706 3978                                 l4642 3904  
                               l4650 3928                                 l4634 38A4  
                               l4626 3868                                 l4618 3824  
                               l4570 369A                                 l4562 365C  
                               l4554 429A                                 l4546 4240  
                               l3498 3FD8                                 l2970 2248  
                               l2954 21CC                                 l2946 21AC  
                               l2938 2140                                 l2890 20A2  
                               l2882 207C                                 l2866 2028  
                               l2874 2052                                 l2858 1FFC  
                               l3594 1B0E                                 l3586 1A40  
                               l3578 1970                                 l3834 1822  
                               l3826 175A                                 l3818 16B6  
                               l3770 1272                                 l3762 11CE  
                               l3754 112A                                 l3746 1062  
                               l3738 0FBE                                 l4810 2F0E  
                               l4802 2EE0                                 l4492 4202  
                               l4484 41D0                                 l4476 41A6  
                               l4468 4188                                 l4740 3A98  
                               l4732 3A6A                                 l4724 3A12  
                               l4716 39D8                                 l4708 3994  
                               l4660 3500                                 l4652 393E  
                               l4644 390C                                 l4636 38D0  
                               l4628 386C                                 l4580 36EA  
                               l4572 36A6                                 l4564 3676  
                               l4556 42AE                                 l4548 4258  
                               l4900 2E76                                 l2980 2272  
                               l2972 2254                                 l2964 221C  
                               l2956 21D6                                 l2948 21B8  
                               l2892 20B2                                 l2884 2082  
                               l2876 2062                                 l2868 2038  
                               l3596 1B42                                 l3588 1A72  
                               l3828 178C                                 l3772 12A4  
                               l3780 1348                                 l3764 1200  
                               l3756 115C                                 l3748 1094  
                               l3836 1830                                 l4820 2F3C  
                               l4812 2F10                                 l4804 2EE2  
                               l4494 4204                                 l4486 41DE  
                               l4478 41AE                                 l4734 3A80  
                               l4742 3AA4                                 l4726 3A20  
                               l4718 39E4                                 l4670 3560  
                               l4662 351C                                 l4654 34DC  
                               l4646 3914                                 l4638 38E6  
                               l4590 3752                                 l4574 36CE  
                               l4582 36EE                                 l4566 367E  
                               l4558 42C6                                 l4750 314A  
                               l4910 2EB6                                 l2990 22E4  
                               l2974 2258                                 l2966 222C  
                               l2958 21F8                                 l2982 2278  
                               l2894 20C2                                 l2886 2090  
                               l2878 2068                                 l3598 1BA8  
                               l3790 1442                                 l3782 137A  
                               l3774 12D6                                 l3766 120E  
                               l3758 116A                                 l4830 2F7C  
                               l4822 2F3E                                 l4814 2F12  
                               l4806 2EFE                                 l4496 420A  
                               l4488 41E4                                 l4744 3ABA  
                               l4736 3A88                                 l4728 3A4C  
                               l4680 35A8                                 l4672 356C  
                               l4664 3528                                 l4656 34F8  
                               l4648 391C                                 l4592 3768  
                               l4584 370C                                 l4576 36D6  
                               l4568 367E                                 l4760 31B4  
                               l4752 3164                                 l4912 2EBE  
                               l4904 2E98                                 l2984 229E  
                               l2992 22F4                                 l2976 2266  
                               l2968 223A                                 l2896 20C4  
                               l2888 2092                                 l3792 1474  
                               l3784 13AC                                 l3776 1308  
                               l3768 1240                                 l4840 2FDC  
                               l4824 2F50                                 l4832 2F9C  
                               l4816 2F26                                 l4808 2F02  
                               l4498 4210                                 l4738 3A90  
                               l4690 3610                                 l4682 35D4  
                               l4666 3550                                 l4674 3570  
                               l4658 3500                                 l4594 3770  
                               l4586 3718                                 l4578 36DE  
                               l4770 3210                                 l4762 31C0  
                               l4754 3170                                 l4746 3120  
                               l4914 2ECC                                 l2994 231A  
                               l2986 22D2                                 l2978 2268  
                               l2898 20CC                                 l3786 13DE  
                               l3794 1482                                 l3778 133A  
                               l4850 303C                                 l4834 2FB0  
                               l4842 2FFC                                 l4826 2F60  
                               l4818 2F38                                 l4692 3618  
                               l4684 35EA                                 l4676 358E  
                               l4668 3558                                 l4596 3786  
                               l4588 3726                                 l4780 3278  
                               l4772 322A                                 l4764 31DA  
                               l4756 318A                                 l4748 313A  
                               l4916 2ECC                                 l2996 232A  
                               l2988 22D4                                 l3796 14B4  
                               l3788 1410                                 l4852 3058  
                               l4844 3010                                 l4836 2FC0  
                               l4828 2F62                                 l4940 409E  
                               l4694 3620                                 l4686 35F2  
                               l4678 359A                                 l4598 378E  
                               l4790 32D8                                 l4782 3288  
                               l4774 323A                                 l4766 31EA  
                               l4758 319A                                 l4870 2CC4  
                               l3798 14E6                                 l4846 3020  
                               l4854 3078                                 l4838 2FC2  
                               l4950 40C0                                 l4942 40AA  
                               l4688 3608                                 l4696 362C  
                               l4792 32F2                                 l4784 32A2  
                               l4776 3254                                 l4768 3204  
                               l4880 2D64                                 l4872 2CDE  
                               l4864 2C8A                                 l4856 308C  
                               l4848 3022                                 l4960 40DC  
                               l4952 40C8                                 l4944 40B0  
                               l4698 3642                                 l4794 32FE  
                               l4786 32AE                                 l4778 3260  
                               l4882 2D82                                 l4874 2CE4  
                               l4866 2CA6                                 l4858 2C80  
                               l4970 40F8                                 l4962 40E4  
                               l4954 40D0                                 l4946 40B4  
                               l4938 409E                                 l4796 3318  
                               l4788 32C8                                 l4892 2E32  
                               l4884 2DBA                                 l4868 2CB8  
                               l4876 2D10                                 l4980 4104  
                               l4972 40FA                                 l4964 40EC  
                               l4956 40D4                                 l4948 40B8  
                               l4886 2DD8                                 l4878 2D2C  
                               l4798 2EDA                                 l4990 4118  
                               l4982 4106                                 l4974 40FC  
                               l4966 40F4                                 l4958 40D8  
                               l4896 2E54                                 l4888 2E10  
                               l4992 411C                                 l4984 410C  
                               l4976 40FE                                 l4968 40F6  
                               l4994 4120                                 l4986 4110  
                               l4978 4102                                 l4996 4124  
                               l4988 4114                                 l4998 4128  
                               u3000 2A08                                 u3001 2A04  
                               u3010 2A7E                                 u3011 2A7A  
                               u3100 2B98                                 u3020 2AA0  
                               u3101 2B94                                 u3021 2A9C  
                               u3110 2BAC                                 u3030 2ACA  
                               u3111 2BA8                                 u3031 2AC6  
                               u3120 2BC6                                 u3040 2AEE  
                               u3200 254A                                 u4000 11CE  
                       _BAUD4CONbits 0EE9                                 u3121 2BC2  
                               u3041 2AEA                                 u3201 2546  
                               u4001 11CA                                 u3130 2C0E  
                               u3050 2B04                                 u3210 255A  
                               u4010 1200                                 u3131 2C0A  
                               u3051 2B00                                 u3211 2556  
                               u4011 11FC                                 u3140 2C3E  
                               u3060 2B22                                 u3300 27FE  
                               u3220 2590                                 u4100 13DE  
                               u4020 1240                                 u3141 2C3A  
                               u3061 2B1E                                 u3301 27FA  
                               u3221 258C                                 u4101 13DA  
                               u4021 123C                                 u3150 2C6C  
                               u3070 2B42                                 u3310 2818  
                               u3230 25A0                                 u4110 1410  
                               u4030 1272                                 u3151 2C68  
                               u3071 2B3E                                 u3311 2814  
                               u3231 259C                                 u4111 140C  
                               u4031 126E                                 u5000 4762  
                               u3080 2B54                                 u3320 2860  
                               u3240 271A                                 u3160 24D6  
                               u2600 20FC                                 u2520 2016  
                               u3400 3F0C                                 u4200 15EE  
                               u4120 1442                                 u4040 12A4  
                               u5001 475E                                 u3081 2B50  
                               u3321 285C                                 u3161 24D2  
                               u2601 20F8                                 u2521 2012  
                               u3401 3F08                                 u4201 15EA  
                               u4121 143E                                 u4041 12A0  
                               u5010 3C42                                 u3090 2B82  
                               u3330 288E                                 u3250 2774  
                               u3170 24E8                                 u2610 216A  
                               u2530 2028                                 u3410 3F20  
                               u4210 1620                                 u4130 1474  
                               u4050 12D6                                 _T2PR 0FBC  
                               u5011 3C3E                                 u3091 2B7E  
                               u3331 288A                                 u3251 2770  
                               u3171 24E4                                 u2611 2166  
                               u2531 2024                                 u3411 3F1C  
                               u4211 161C                                 u4131 1470  
                               u4051 12D2                                 u5100 3AEE  
                               u5020 3CFE                                 u3340 28C8  
                               u3260 2794                                 u3180 24F8  
                               u2700 2248                                 u2620 2182  
                               u2540 2038                                 u3420 3F48  
                               u3500 3460                                 u4300 17F0  
                               u4220 1652                                 u4140 14B4  
                               u4060 1308                                 u5101 3AEA  
                               u5021 3CFA                                 u3341 28C4  
                               u3261 2790                                 u3245 2710  
                               u3181 24F4                                 u2701 2244  
                               u2621 217C                                 u2541 2034  
                               u3421 3F44                                 u3501 345C  
                               u4301 17EC                                 u4221 164E  
                               u4141 14B0                                 u4061 1304  
                               u5110 3B14                                 u5030 4180  
                               u3350 4312                                 u3270 27A6  
                               u3190 2538                                 u2710 2266  
                               u2630 2184                                 u2550 207A  
                               u3430 3F68                                 u3510 3470  
                               u4310 1822                                 u4230 1684  
                               u4150 14E6                                 u4070 133A  
                               u5111 3B10                                 u5031 417C  
                               u3351 430E                                 u3271 27A2  
                               u3191 2534                                 u2711 2262  
                               u2551 2076                                 u3431 3F64  
                               u3511 346C                                 u4311 181E  
                               u4231 1680                                 u4151 14E2  
                               u4071 1336                                 u5120 3B22  
                               u5040 419A                                 u5200 3786  
                               u3600 4024                                 u3360 4350  
                               u3280 27D4                                 u2800 23A4  
                               u2720 229E                                 u2640 21AC  
                               u2560 2090                                 u3440 3F78  
                               u3520 347E                                 u4240 16B6  
                               u4160 1518                                 u4080 137A  
                               u5121 3B1E                                 u5041 4196  
                               u5201 3782                                 u3601 4020  
                               u3361 434C                                 u3281 27D0  
                               u2801 23A0                                 u2721 229A  
                               u2641 21A8                                 u2561 208C  
                               u3441 3F74                                 u3521 347A  
                               u4241 16B2                                 u4161 1514  
                               u4081 1376                                 u5130 3B54  
                               u5050 41C0                                 u5210 37C0  
                               u3610 4044                                 u3370 4384  
                               u3290 27EA                                 u2810 23BA  
                               u2730 22E4                                 u2650 21CA  
                               u2570 20A2                                 u3530 34B8  
                               u3450 3338                                 u4250 16E8  
                               u4170 154A                                 u4090 13AC  
                               u5131 3B50                                 u5051 41BC  
                               u5211 37BC                                 u3611 4040  
                               u3371 4380                                 u3291 27E6  
                               u2811 23B6                                 u2731 22E0  
                               u2651 21C6                                 u2571 209E  
                               u3531 34B4                                 u3451 3334  
                               u4251 16E4                                 u4171 1546  
                               u4091 13A8                                 u5140 3BBE  
                               u5060 41DE                                 u5300 35D0  
                               u5220 37D6                                 u3620 4094  
                               u2900 24A8                                 u2820 23D0  
                               u2740 231A                                 u2660 21EA  
                               u2580 20B2                                 u3380 3EAA  
                               u3540 34C6                                 u3460 3346  
                               u3700 1AA4                                 u4260 1728  
                               u4180 157C                                 u5141 3BBA  
                               u5061 41DA                                 u5301 35CC  
                               u5221 37D2                                 u3621 4090  
                               u2901 24A4                                 u2821 23CC  
                               u2741 2316                                 u2661 21E6  
                               u2581 20AE                                 u3381 3EA6  
                               u3541 34C2                                 u3461 3342  
                               u3701 1AA0                                 u4261 1724  
                               u4181 1578                                 u5070 41FA  
                               u5310 35EA                                 u5230 388A  
                               u5150 4240                                 u2830 23E4  
                               u2750 232A                                 u2670 21F8  
                               u2590 20EE                                 u3390 3EDE  
                               u3470 33A2                                 u3710 1B0E  
                               u2910 479E                                 u3550 46A4  
                               u4270 175A                                 u4190 15AE  
                               u5071 41F6                                 u5311 35E6  
                               u5231 3886                                 u5151 423C  
                               u2831 23E0                                 u2751 2326  
                               u2671 21F4                                 u2591 20EA  
                               u3471 339E                                 u3711 1B0A  
                               u2911 479A                                 u3551 469C  
                               u4271 1756                                 u4191 15AA  
                               u5080 4220                                 u5400 3AD0  
                               u5320 3608                                 u5240 38CC  
                               u5160 42AE                                 u2840 23FE  
                               u2760 2356                                 u2680 2208  
                               u3480 33F8                                 u3720 1BA8  
                               u2920 47B4                                 u4280 178C  
                               u5081 421C                                 u5401 3ACC  
                               u5321 3604                                 u5241 38C8  
                               u5161 42AA                                 u2841 23FA  
                               u2761 2352                                 u2681 2204  
                               u3481 33F4                                 u3721 1BA4  
                               u2921 47B0                                 u4281 1788  
                               u5090 3AE0                                 u5330 3642  
                               u5250 38E6                                 u5170 370C  
                               u5410 313A                                 u2930 2900  
                               u2850 2438                                 u2770 2366  
                               u2690 223A                                 u3490 3442  
                               u3570 3DAE                                 u3730 1BF0  
                               u4290 17BE                                 u5091 3ADC  
                               u5331 363E                                 u5251 38E2  
                               u5171 3708                                 u5411 3136  
                               u2931 28FC                                 u2851 2434  
                               u2771 2362                                 u2691 2236  
                               u3395 3ED4                                 u3491 343E  
                               u3571 3DAA                                 u3731 1BEC  
                               u4291 17BA                                 u5340 3658  
                               u5260 3904                                 u5180 374E  
                               u5420 318A                                 u3580 3FC8  
                               u2940 2912                                 u2860 244A  
                               u2780 2382                                 u3740 1CE6  
                               u3660 1970                                 u3900 0FBE  
                               u5500 2FB0                                 u5341 3654  
                               u5261 3900                                 u5181 374A  
                               u5421 3186                                 u3581 3FC4  
                               u2941 290E                                 u2861 2446  
                               u2781 237E                                 u3741 1CE2  
                               u3661 196C                                 u3901 0FBA  
                               u5501 2FAC                                 u5350 3A06  
                               u5270 393E                                 u5190 3768  
                               u5430 31DA                                 u3590 4006  
                               u2950 2922                                 u2870 245A  
                               u2790 2392                                 u3750 1DCC  
                               u3670 19A2                                 u3910 0FF0  
                               u5510 3010                                 u5351 3A02  
                               u5271 393A                                 u5191 3764  
                               u5431 31D6                                 u3591 4002  
                               u2951 291E                                 u2871 2456  
                               u2791 238E                                 u3751 1DC8  
                               u3671 199E                                 u3911 0FEC  
                               u5511 300C                                 u5360 3A48  
                               u5280 3954                                 u5440 322A  
                               u5600 2E72                                 u2960 2966  
                               u2880 247A                                 u3760 1E90  
                               u3680 1A0C                                 u3568 46A6  
                               u3920 1022                                 u5520 308C  
                               u4640 44D8                                 u5361 3A44  
                               u5281 3950                                 u5441 3226  
                               u5601 2E6E                                 u2961 2962  
                               u2881 2476                                 u3761 1E8C  
                               u3681 1A08                                 u3921 101E  
                               u5521 3088                                 u4641 44D4  
                               u5370 3A62                                 u5290 358E  
                               u5450 3278                                 u5610 2E94  
                               u5530 2CA6                                 u2970 2978  
                               u2890 248C                                 u3770 1F0E  
                               u3690 1A72                                 u3930 1062  
                               u5371 3A5E                                 u5291 358A  
                               u5451 3274                                 u5611 2E90  
                               u5531 2CA2                                 u2971 2974  
                               u2891 2488                                 u3771 1F0A  
                               u3691 1A6E                                 u3931 105E  
                               u5380 3A80                                 u5460 32C8  
                               u5620 2EB6                                 u5540 2D08  
                               u2980 2988                                 u3940 1094  
                               u5381 3A7C                                 u5461 32C4  
                               u5621 2EB2                                 u5541 2D04  
                               u2981 2984                                 u3941 1090  
                               u5390 3ABA                                 u5470 3318  
                               u5630 2ECC                                 u5550 2D2C  
                               u2990 29C8                                 u3950 10C6  
                               u3870 0F28                                 u5391 3AB6  
                               u5471 3314                                 u5631 2EC8  
                               u5551 2D28                                 u2991 29C4  
                               u3951 10C2                                 u3871 0F24  
                               u5560 2D82                                 u3960 10F8  
                               u3880 0F5A                                 u5480 2F26  
                               u5641 2ED2                                 u5561 2D7E  
                               u3961 10F4                                 u3881 0F56  
                               u5481 2F22                                 u5570 2DD8  
                               u3970 112A                                 u3890 0F8C  
                               u5490 2F50                                 u5571 2DD4  
                               u3971 1126                                 u3891 0F88  
                               u5491 2F4C                                 u5707 44BC  
                               u5580 2E2E                                 u3980 115C  
                               u5581 2E2A                                 u3981 1158  
                               u5717 44E2                                 u5590 2E50  
                               u3990 119C                                 u5807 3A18  
                               u5591 2E4C                                 u3991 1198  
                               u5727 46D0                                 u5817 4740  
                               u5737 424A                                 u4970 443C  
                               u5827 3AF8                                 u4971 4438  
                               u5747 428C                                 u4980 445A  
                               u5837 3B30                                 u4981 4456  
                               u5757 42B8                                 u4990 4476  
                               u5847 3B5E                                 u4991 4472  
                               u5767 42D2                                 u5857 3BA0  
                               u5777 371E                                 u5697 44A2  
                               u5867 3BC8                                 u5787 389C  
                               u5877 3C0E                                 u5797 35A0  
                               _main 409E                                 _temp 00FC  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               prodh 0FF4                                 prodl 0FF3  
                               start 0000                      ___fldiv@new_exp 0033  
             __end_of_color_read_Red 4544                         ___param_bank 0000  
            __end_of_color_cardCheck 183A                        ___fltol@sign1 0009  
                    __end_of___fladd 24BC                                ?_main 0001  
                    __end_of___fldiv 2C80                      __end_of___awdiv 4232  
                    __end_of___flmul 28E6                      __end_of___flsub 467A  
                    __end_of___fltol 3F9A                      ___awdiv@divisor 0003  
                        ?_RGB_to_HSV 006A                      __end_of___lwdiv 4496  
                    ___awdiv@counter 0005                         ?_maze_search 00DF  
                       ?_maze_return 0021           __end_of_I2C_2_Master_Start 481C  
         __end_of_I2C_2_Master_Write 4808                      __end_of_forward 365A  
                              tablat 0FF5                                status 0FD8  
            __end_of_color_read_Blue 4634                _I2C_2_Master_RepStart 481C  
                 _switch_calibration 4232                      ?_color_read_Red 0005  
                    __initialization 46FC                         __end_of_main 416E  
                ?_switch_calibration 0001                               ??_main 005E  
                      _Forward_Count 00E5                        __activetblptr 0000  
                       ?_setMotorPWM 000E                               _CCPR1H 0FAA  
                             _CCPR2H 0FA6                               _CCPR3H 0F25  
                             _CCPR4H 0F21                     ___awdiv@dividend 0001  
               ??_switch_calibration 0003                               _RC0PPS 0E62  
                             _RC4REG 0EE3                               _RE2PPS 0E74  
                             _RD5PPS 0E6F                               _RC7PPS 0E69  
                             _RD6PPS 0E70                               _RE4PPS 0E76  
                             _RG6PPS 0E88                     __end_of_backward 3AD2  
           __end_of_color_click_init 46FC                               _RX4PPS 0E15  
                   forward@max_power 001D                               _TX4REG 0EE4  
                   __end_of___xxtofl 34DA                         _CCPTMRS0bits 0FAD  
                        _Color_Value 00E3                               ___flge 3F9A  
                             ___fleq 42E4                     ?_color_cardCheck 005C  
                   __end_of_leftTURN 3956                            ??___fladd 0009  
                             ___wmul 47B6                            ??___fldiv 002A  
                          ??___awdiv 0005                            ??___flmul 0043  
                          ??___flsub 0022                            ??___fltol 0005  
                          ??___lwdiv 000B        delay_ms_function@milliseconds 0001  
                             _length 00FB                               clear_0 471A  
                             clear_1 4726                     ___awdiv@quotient 0007  
                             _motorL 00F2                               _motorR 00E9  
                             isa$std 0001                            ??_forward 0015  
      rightTURN@rotation_calibration 0018                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                      _Operation_Count 00E6  
                  ??_initDCmotorsPWM 0003                           ___flge@ff1 0001  
                         ___flge@ff2 0005                         ___xxtofl@arg 0016  
                       ___xxtofl@exp 0015                         ___xxtofl@val 000C  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 4730  
           __end_of_color_read_Clear 45E4             __end_of_color_read_Green 4594  
             ?_I2C_2_Master_RepStart 0001                        ___rparam_used 0001  
                         ___fltol@f1 0001                     ?_color_read_Blue 0005  
                     __pcstackCOMRAM 0001                         __pidataBANK0 4826  
                  forward@delay_time 001F                       _RGB_to_HSV$321 009D  
                     _RGB_to_HSV$322 00A1                       _RGB_to_HSV$318 0091  
                     _RGB_to_HSV$319 0095                   RGB_to_HSV@deltaRGB 00AD  
              calibration_routine@mL 0023                calibration_routine@mR 0024  
                         __pbssBANK0 00E3                           __pbssBANK1 0100  
                  _color_writetoaddr 47DC                         _T2CLKCONbits 0FBF  
                 _adjust_calibration 3AD2                              ?___flge 0001  
                            ?___fleq 0001                   ?_color_writetoaddr 0003  
                            ?___wmul 0001                   backward@delay_time 001F  
                ?_adjust_calibration 0001                  ??_color_writetoaddr 0004  
                          ?_backward 0013                         ??_RGB_to_HSV 005C  
                  _delay_ms_function 4736                           backward@mL 0013  
                         backward@mR 0014                            ?___xxtofl 000C  
                 ?_delay_ms_function 0001                              _SP4BRGH 0EE6  
                            _SP4BRGL 0EE5                              _SSP2ADD 0ED6  
                            _SSP2BUF 0ED5                          rightTURN@mL 0013  
                        rightTURN@mR 0014                            ?_leftTURN 0013  
                ??_delay_ms_function 0003                 ??_adjust_calibration 0003  
             color_writetoaddr@value 0003                     ??_color_read_Red 0007  
          __end_of_color_writetoaddr 47FC                          RGB_to_HSV@B 0072  
                        RGB_to_HSV@C 0076                          RGB_to_HSV@G 006E  
                        RGB_to_HSV@H 007A                          RGB_to_HSV@R 006A  
                        RGB_to_HSV@S 007B                          RGB_to_HSV@V 007C  
                        RGB_to_HSV@b 00BD                          RGB_to_HSV@g 00B9  
                 _I2C_2_Master_Start 4812                          RGB_to_HSV@r 00B5  
                 _I2C_2_Master_Write 47FC                              __Hparam 0000  
                 __end_of_RGB_to_HSV 1FFC                              __Lparam 0000  
                  color_read_Red@tmp 000A                              ___fladd 1FFC  
                            ___fldiv 28E6                              ___awdiv 416E  
                            ___flmul 24BC                              ___flsub 4634  
                            ___fltol 3E94                  ?_I2C_2_Master_Start 0001  
                            ___lwdiv 4422                  ?_I2C_2_Master_Write 0001  
                       __psmallconst 0E00            __end_of_delay_ms_function 4764  
                            __pcinit 46FC                              __ramtop 0E00  
                            __ptext0 409E                              __ptext1 4496  
                            __ptext2 2EDA                              __ptext3 46BC  
                            __ptext4 47DC                              __ptext5 4764  
                            __ptext6 0E02                              __ptext7 44F4  
                            __ptext8 4544                              __ptext9 4594  
                         ??_backward 0015                            _T2CONbits 0FBD  
                            _forward 34DA                           ??___xxtofl 0010  
                          _T2HLTbits 0FBE                        _RxBufWriteCnt 00E8  
               ??_I2C_2_Master_Start 0002                 ??_I2C_2_Master_Write 0002  
                       maze_search@c 00DF                 end_of_initialization 4730  
                         ??_leftTURN 0015                    __end_of_rightTURN 37D8  
            _pause_until_RF2_pressed 4496                   leftTURN@delay_time 001F  
                  ?_color_click_init 0001                         maze_return@c 0021  
                       maze_return@i 0095                         maze_return@j 0093  
                 ??_color_click_init 0005             maze_return@distance_back 0092  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc2 0FDE                      _initDCmotorsPWM 438E  
                          _PORTFbits 0F8E                   setMotorPWM@negDuty 0012  
       maze_return@Operation_History 0060                          ___fladd@grs 0010  
                      ___xxtofl@sign 0014                            _TRISAbits 0F81  
                 setMotorPWM@posDuty 0011                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 0001  
switch_calibration@calibration_index 0001                          ___fldiv@grs 0035  
                        ___fldiv@rem 002E                    maze_return@F14234 013C  
           color_writetoaddr@address 0004              ??_I2C_2_Master_RepStart 0002  
                        ___flmul@grs 0048                          _CCP1CONbits 0FAB  
                _calibration_routine 3120                    ?_color_read_Clear 0005  
                       _EUSART4RXbuf 01A0                         _EUSART4TXbuf 0100  
                        _CCP2CONbits 0FA7                    ?_color_read_Green 0005  
                        _CCP3CONbits 0F26          forward@Distance_Calibration 0018  
                        _CCP4CONbits 0F22                   ??_color_read_Clear 0007  
                 ??_color_read_Green 0007                   rightTURN@max_power 001D  
                         leftTURN@mL 0013                           leftTURN@mR 0014  
         __end_of_custom_floatmodulo 3E94                       __end_of___flge 409E  
                     __end_of___fleq 438E                       __end_of___wmul 47DC  
          color_cardCheck@card_color 00D1                 ?_calibration_routine 0021  
                   RGB_to_HSV@H_temp 00A9                  color_read_Clear@tmp 000A  
                start_initialization 46FC                        _TxBufWriteCnt 005F  
       leftTURN@rotation_calibration 0018                     RGB_to_HSV@c_norm 007D  
          ??_pause_until_RF2_pressed 0001                     RGB_to_HSV@maxRGB 00B1  
                   RGB_to_HSV@minRGB 0099                      _RGB_to_HSV$2703 0081  
                    _RGB_to_HSV$2704 0085                      _RGB_to_HSV$2705 0089  
                    _RGB_to_HSV$2706 00A5                      _RGB_to_HSV$2707 008D  
                color_read_Green@tmp 000A              __end_of_initDCmotorsPWM 4422  
                           ??___flge 0009                             ??___fleq 0009  
                           ??___wmul 0005                  custom_floatmodulo@x 0054  
                custom_floatmodulo@y 0058                          __pdataBANK0 00FB  
                        _calibration 01B4                ??_calibration_routine 0025  
                          ___fladd@a 0005                            ___fladd@b 0001  
                      ??_maze_search 005E         backward@Distance_Calibration 0018  
                          ___fldiv@a 0026                            ___fldiv@b 0022  
                      ??_maze_return 0025                            ___flmul@a 003F  
                          ___flmul@b 003B                          __pbssCOMRAM 005E  
                          ___flsub@a 001E                            ___flsub@b 001A  
                      __pcstackBANK0 0060                 calibration_routine@c 0021  
          custom_floatmodulo@intPart 0068                     ___lwdiv@dividend 0007  
    __end_of_pause_until_RF2_pressed 44F4                             ?___fladd 0001  
                           ?___fldiv 0022                             ?___awdiv 0001  
                           ?___flmul 003B                             ?___flsub 001A  
                           ?___fltol 0001                             ?___lwdiv 0007  
                          backward@i 0019                            backward@j 001B  
                         rightTURN@i 0019                           rightTURN@j 001B  
               I2C_2_Master_Read@ack 0003                 I2C_2_Master_Read@tmp 0004  
                        __smallconst 0E00                             ?_forward 0013  
                  _I2C_2_Master_Idle 478E                    _I2C_2_Master_Init 4764  
                  _I2C_2_Master_Read 467A                    _I2C_2_Master_Stop 4808  
                       _RxBufReadCnt 00E7                   ?_I2C_2_Master_Idle 0001  
                 ?_I2C_2_Master_Init 0001                   ?_I2C_2_Master_Read 0001  
                      ??_setMotorPWM 000F                   ?_I2C_2_Master_Stop 0001  
                   ___lwdiv@quotient 000C             initDCmotorsPWM@PWMperiod 0001  
                  ??_color_cardCheck 005E                  __end_of_maze_search 3120  
                  backward@max_power 001D                  __end_of_maze_return 2EDA  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 0F79                  ??_I2C_2_Master_Stop 0002  
                           _LATCbits 0F7B                             _LATDbits 0F7C  
                           _LATEbits 0F7D                             _LATFbits 0F7E  
                           _LATGbits 0F7F                             _LATHbits 0F80  
                          _rightTURN 365A                             _PIE4bits 0E2D  
                           _PIR4bits 0E37                     ?_initDCmotorsPWM 0001  
                           _SSP2CON2 0EDA                             _SSP2STAT 0ED8  
          __end_of_I2C_2_Master_Idle 47B6            __end_of_I2C_2_Master_Init 478E  
          __end_of_I2C_2_Master_Read 46BC                    ___wmul@multiplier 0001  
          __end_of_I2C_2_Master_Stop 4812                         setMotorPWM@m 000E  
        I2C_2_Master_Write@data_byte 0002                    ??_color_read_Blue 0007  
                  leftTURN@max_power 001D                         _TxBufReadCnt 005E  
                          leftTURN@i 0019                            leftTURN@j 001B  
      __end_of_I2C_2_Master_RepStart 4826                   color_read_Blue@tmp 000A  
                __end_of_setMotorPWM 3D7C                           ?_rightTURN 0013  
                           __Hrparam 0000                             __Lrparam 0000  
                          forward@mL 0013                            forward@mR 0014  
                           _backward 3956                           _ANSELDbits 0EA7  
                         _ANSELFbits 0EB4                          _maze_search 2EDA  
                           ___xxtofl 3326                          _maze_return 2C80  
                 _custom_floatmodulo 3D7C                      ___lwdiv@divisor 0009  
         __end_of_switch_calibration 42E4                      ___lwdiv@counter 000B  
                           __ptext10 45E4                             __ptext11 47FC  
                           __ptext20 3E94                             __ptext12 4808  
                           __ptext21 4634                             __ptext13 4812  
                           __ptext30 4232                             __ptext22 1FFC  
                           __ptext14 481C                             __ptext31 365A  
                           __ptext23 24BC                             __ptext15 467A  
                           __ptext40 3AD2                             __ptext32 37D8  
                           __ptext24 42E4                             __ptext16 478E  
                           __ptext33 34DA                             __ptext25 28E6  
                           __ptext17 183A                             __ptext34 3956  
                           __ptext26 3F9A                             __ptext18 3D7C  
                           __ptext35 3C28                             __ptext27 2C80  
                           __ptext19 3326                             __ptext36 47B6  
                           __ptext28 438E                             __ptext37 4422  
                           __ptext29 3120                             __ptext38 4736  
                           __ptext39 416E          custom_floatmodulo@remainder 0064  
                       _SSP2CON1bits 0ED9                         _SSP2CON2bits 0EDA  
                           _leftTURN 37D8                  ?_custom_floatmodulo 0054  
                           isa$xinst 0000                           _RC4STAbits 0EE7  
               ??_custom_floatmodulo 005C                        maze_search@mL 00E1  
                      maze_search@mR 00E2                             forward@i 0019  
                           forward@j 001B                          _setMotorPWM 3C28  
                      maze_return@mL 0023                        maze_return@mR 0024  
                        ??_rightTURN 0015          __end_of_calibration_routine 3326  
         custom_floatmodulo@quotient 0060                     _color_click_init 46BC  
                    _color_cardCheck 0E02                           _RGB_to_HSV 183A  
                  _Operation_History 016E                           _SSP2DATPPS 0E1D  
                         _SSP2CLKPPS 0E1C             ?_pause_until_RF2_pressed 0001  
                   color_cardCheck@H 00D3                     color_cardCheck@S 00D7  
                   color_cardCheck@V 00DB                     color_cardCheck@b 00C9  
                   color_cardCheck@c 00CD                     color_cardCheck@g 00C5  
                   color_cardCheck@r 00C1                        ___fladd@signs 000D  
                         _TX4STAbits 0EE8                  rightTURN@delay_time 001F  
                       ___fladd@aexp 000E                         ___fladd@bexp 000F  
