

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 23:42:43 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataBANK0
    94   004F7C                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _forward_reset_threshold
    98   004F7C  05                 	db	5
    99                           
   100                           ;initializer for _length
   101   004F7D  32                 	db	50
   102                           
   103                           ;initializer for _temp
   104   004F7E  07                 	db	7
   105   000000                     _TX4REG	set	3812
   106   000000                     _RC4STAbits	set	3815
   107   000000                     _SP4BRGH	set	3814
   108   000000                     _TRISDbits	set	3972
   109   000000                     _LATEbits	set	3965
   110   000000                     _LATHbits	set	3968
   111   000000                     _SSP2CON2bits	set	3802
   112   000000                     _RX4PPS	set	3605
   113   000000                     _SSP2CLKPPS	set	3612
   114   000000                     _SSP2DATPPS	set	3613
   115   000000                     _RC7PPS	set	3689
   116   000000                     _RE2PPS	set	3700
   117   000000                     _LATAbits	set	3961
   118   000000                     _LATGbits	set	3967
   119   000000                     _TRISAbits	set	3969
   120   000000                     _TRISGbits	set	3975
   121   000000                     _TRISHbits	set	3976
   122   000000                     _PORTFbits	set	3982
   123   000000                     _TRISCbits	set	3971
   124   000000                     _TRISEbits	set	3973
   125   000000                     _TRISFbits	set	3974
   126   000000                     _LATCbits	set	3963
   127   000000                     _LATDbits	set	3964
   128   000000                     _LATFbits	set	3966
   129   000000                     _T2PR	set	4028
   130   000000                     _T2CONbits	set	4029
   131   000000                     _CCPR2H	set	4006
   132   000000                     _CCPR1H	set	4010
   133   000000                     _RE4PPS	set	3702
   134   000000                     _RG6PPS	set	3720
   135   000000                     _RD5PPS	set	3695
   136   000000                     _ANSELDbits	set	3751
   137   000000                     _ANSELFbits	set	3764
   138   000000                     _CCPR4H	set	3873
   139   000000                     _CCPR3H	set	3877
   140   000000                     _T2CLKCONbits	set	4031
   141   000000                     _T2HLTbits	set	4030
   142   000000                     _CCP1CONbits	set	4011
   143   000000                     _CCPTMRS0bits	set	4013
   144   000000                     _CCP2CONbits	set	4007
   145   000000                     _CCP3CONbits	set	3878
   146   000000                     _CCP4CONbits	set	3874
   147   000000                     _SSP2BUF	set	3797
   148   000000                     _SSP2ADD	set	3798
   149   000000                     _SSP2CON1bits	set	3801
   150   000000                     _RC4REG	set	3811
   151   000000                     _SP4BRGL	set	3813
   152   000000                     _TX4STAbits	set	3816
   153   000000                     _BAUD4CONbits	set	3817
   154   000000                     _SSP2CON2	set	3802
   155   000000                     _SSP2STAT	set	3800
   156   000000                     _PIE4bits	set	3629
   157   000000                     _PIR4bits	set	3639
   158   000000                     _RC0PPS	set	3682
   159   000000                     _RD6PPS	set	3696
   160                           
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164   004E50                     __pcinit:
   165                           	callstack 0
   166   004E50                     start_initialization:
   167                           	callstack 0
   168   004E50                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Initialize objects allocated to BANK0 (3 bytes)
   172                           ; load TBLPTR registers with __pidataBANK0
   173   004E50  0E7C               	movlw	low __pidataBANK0
   174   004E52  6EF6               	movwf	tblptrl,c
   175   004E54  0E4F               	movlw	high __pidataBANK0
   176   004E56  6EF7               	movwf	tblptrh,c
   177   004E58  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   178   004E5A  6EF8               	movwf	tblptru,c
   179   004E5C  0009               	tblrd		*+	;fetch initializer
   180   004E5E  CFF5 F0F7          	movff	tablat,__pdataBANK0
   181   004E62  0009               	tblrd		*+	;fetch initializer
   182   004E64  CFF5 F0F8          	movff	tablat,__pdataBANK0+1
   183   004E68  0009               	tblrd		*+	;fetch initializer
   184   004E6A  CFF5 F0F9          	movff	tablat,__pdataBANK0+2
   185                           
   186                           ; Clear objects allocated to BANK1 (148 bytes)
   187   004E6E  EE01  F000         	lfsr	0,__pbssBANK1
   188   004E72  0E94               	movlw	148
   189   004E74                     clear_0:
   190   004E74  6AEE               	clrf	postinc0,c
   191   004E76  06E8               	decf	wreg,f,c
   192   004E78  E1FD               	bnz	clear_0
   193                           
   194                           ; Clear objects allocated to BANK0 (17 bytes)
   195   004E7A  EE00  F0E6         	lfsr	0,__pbssBANK0
   196   004E7E  0E11               	movlw	17
   197   004E80                     clear_1:
   198   004E80  6AEE               	clrf	postinc0,c
   199   004E82  06E8               	decf	wreg,f,c
   200   004E84  E1FD               	bnz	clear_1
   201   004E86                     end_of_initialization:
   202                           	callstack 0
   203   004E86                     __end_of__initialization:
   204                           	callstack 0
   205   004E86  0100               	movlb	0
   206   004E88  EFEE  F023         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	bssBANK0
   209   0000E6                     __pbssBANK0:
   210                           	callstack 0
   211   0000E6                     _Color_Value:
   212                           	callstack 0
   213   0000E6                     	ds	2
   214   0000E8                     _Forward_Count:
   215                           	callstack 0
   216   0000E8                     	ds	1
   217   0000E9                     _Operation_Count:
   218                           	callstack 0
   219   0000E9                     	ds	1
   220   0000EA                     _TxBufReadCnt:
   221                           	callstack 0
   222   0000EA                     	ds	1
   223   0000EB                     _TxBufWriteCnt:
   224                           	callstack 0
   225   0000EB                     	ds	1
   226   0000EC                     _RxBufReadCnt:
   227                           	callstack 0
   228   0000EC                     	ds	1
   229   0000ED                     _RxBufWriteCnt:
   230                           	callstack 0
   231   0000ED                     	ds	1
   232   0000EE                     _motorL:
   233                           	callstack 0
   234   0000EE                     	ds	9
   235                           
   236                           	psect	dataBANK0
   237   0000F7                     __pdataBANK0:
   238                           	callstack 0
   239   0000F7                     _forward_reset_threshold:
   240                           	callstack 0
   241   0000F7                     	ds	1
   242   0000F8                     _length:
   243                           	callstack 0
   244   0000F8                     	ds	1
   245   0000F9                     _temp:
   246                           	callstack 0
   247   0000F9                     	ds	1
   248                           
   249                           	psect	bssBANK1
   250   000100                     __pbssBANK1:
   251                           	callstack 0
   252   000100                     _EUSART4TXbuf:
   253                           	callstack 0
   254   000100                     	ds	60
   255   00013C                     _Operation_History:
   256                           	callstack 0
   257   00013C                     	ds	50
   258   00016E                     _EUSART4RXbuf:
   259                           	callstack 0
   260   00016E                     	ds	20
   261   000182                     _calibration:
   262                           	callstack 0
   263   000182                     	ds	9
   264   00018B                     _motorR:
   265                           	callstack 0
   266   00018B                     	ds	9
   267                           
   268                           	psect	cstackBANK0
   269   000060                     __pcstackBANK0:
   270                           	callstack 0
   271   000060                     custom_floatmodulo@quotient:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x0
   275   000060                     	ds	4
   276   000064                     custom_floatmodulo@remainder:
   277                           	callstack 0
   278                           
   279                           ; 4 bytes @ 0x4
   280   000064                     	ds	4
   281   000068                     custom_floatmodulo@intPart:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x8
   285   000068                     	ds	2
   286   00006A                     RGB_to_HSV@R:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0xA
   290   00006A                     	ds	4
   291   00006E                     RGB_to_HSV@G:
   292                           	callstack 0
   293                           
   294                           ; 4 bytes @ 0xE
   295   00006E                     	ds	4
   296   000072                     RGB_to_HSV@B:
   297                           	callstack 0
   298                           
   299                           ; 4 bytes @ 0x12
   300   000072                     	ds	4
   301   000076                     RGB_to_HSV@C:
   302                           	callstack 0
   303                           
   304                           ; 4 bytes @ 0x16
   305   000076                     	ds	4
   306   00007A                     RGB_to_HSV@H:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x1A
   310   00007A                     	ds	1
   311   00007B                     RGB_to_HSV@S:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x1B
   315   00007B                     	ds	1
   316   00007C                     RGB_to_HSV@V:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1C
   320   00007C                     	ds	1
   321   00007D                     RGB_to_HSV@c_norm:
   322                           	callstack 0
   323                           
   324                           ; 4 bytes @ 0x1D
   325   00007D                     	ds	4
   326   000081                     _RGB_to_HSV$2720:
   327                           	callstack 0
   328                           
   329                           ; 4 bytes @ 0x21
   330   000081                     	ds	4
   331   000085                     _RGB_to_HSV$2721:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0x25
   335   000085                     	ds	4
   336   000089                     _RGB_to_HSV$2722:
   337                           	callstack 0
   338                           
   339                           ; 4 bytes @ 0x29
   340   000089                     	ds	4
   341   00008D                     _RGB_to_HSV$2724:
   342                           	callstack 0
   343                           
   344                           ; 4 bytes @ 0x2D
   345   00008D                     	ds	4
   346   000091                     _RGB_to_HSV$318:
   347                           	callstack 0
   348                           
   349                           ; 4 bytes @ 0x31
   350   000091                     	ds	4
   351   000095                     _RGB_to_HSV$319:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x35
   355   000095                     	ds	4
   356   000099                     RGB_to_HSV@minRGB:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x39
   360   000099                     	ds	4
   361   00009D                     _RGB_to_HSV$321:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x3D
   365   00009D                     	ds	4
   366   0000A1                     _RGB_to_HSV$322:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0x41
   370   0000A1                     	ds	4
   371   0000A5                     _RGB_to_HSV$2723:
   372                           	callstack 0
   373                           
   374                           ; 4 bytes @ 0x45
   375   0000A5                     	ds	4
   376   0000A9                     RGB_to_HSV@H_temp:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0x49
   380   0000A9                     	ds	4
   381   0000AD                     RGB_to_HSV@deltaRGB:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x4D
   385   0000AD                     	ds	4
   386   0000B1                     RGB_to_HSV@maxRGB:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x51
   390   0000B1                     	ds	4
   391   0000B5                     RGB_to_HSV@r:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x55
   395   0000B5                     	ds	4
   396   0000B9                     RGB_to_HSV@g:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x59
   400   0000B9                     	ds	4
   401   0000BD                     RGB_to_HSV@b:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x5D
   405   0000BD                     	ds	4
   406   0000C1                     color_cardCheck@r:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0x61
   410   0000C1                     	ds	4
   411   0000C5                     color_cardCheck@g:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x65
   415   0000C5                     	ds	4
   416   0000C9                     color_cardCheck@b:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x69
   420   0000C9                     	ds	4
   421   0000CD                     color_cardCheck@c:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x6D
   425   0000CD                     	ds	4
   426   0000D1                     color_cardCheck@card_color:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x71
   430   0000D1                     	ds	2
   431   0000D3                     color_cardCheck@H:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x73
   435   0000D3                     	ds	4
   436   0000D7                     color_cardCheck@S:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x77
   440   0000D7                     	ds	4
   441   0000DB                     color_cardCheck@V:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x7B
   445   0000DB                     	ds	4
   446   0000DF                     maze_search@c:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x7F
   450   0000DF                     	ds	2
   451   0000E1                     maze_search@mL:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x81
   455   0000E1                     	ds	1
   456   0000E2                     maze_search@mR:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x82
   460   0000E2                     	ds	2
   461   0000E4                     maze_search@i:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x84
   465   0000E4                     	ds	2
   466                           
   467                           	psect	cstackCOMRAM
   468   000001                     __pcstackCOMRAM:
   469                           	callstack 0
   470   000001                     ??_pause_until_RF2_pressed:
   471   000001                     ??_I2C_2_Master_Idle:
   472   000001                     ?___wmul:
   473                           	callstack 0
   474   000001                     ?___awdiv:
   475                           	callstack 0
   476   000001                     ?___fladd:
   477                           	callstack 0
   478   000001                     ?___fltol:
   479                           	callstack 0
   480   000001                     adjust_calibration@calibration_label:
   481                           	callstack 0
   482   000001                     switch_calibration@calibration_index:
   483                           	callstack 0
   484   000001                     initDCmotorsPWM@PWMperiod:
   485                           	callstack 0
   486   000001                     delay_ms_function@milliseconds:
   487                           	callstack 0
   488   000001                     ___wmul@multiplier:
   489                           	callstack 0
   490   000001                     ___awdiv@dividend:
   491                           	callstack 0
   492   000001                     ___fleq@ff1:
   493                           	callstack 0
   494   000001                     ___flge@ff1:
   495                           	callstack 0
   496   000001                     ___fltol@f1:
   497                           	callstack 0
   498   000001                     ___fladd@b:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x0
   502   000001                     	ds	1
   503   000002                     ??_I2C_2_Master_Read:
   504   000002                     I2C_2_Master_Write@data_byte:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x1
   508   000002                     	ds	1
   509   000003                     ??_adjust_calibration:
   510   000003                     ??_switch_calibration:
   511   000003                     ??_delay_ms_function:
   512   000003                     color_writetoaddr@value:
   513                           	callstack 0
   514   000003                     I2C_2_Master_Read@ack:
   515                           	callstack 0
   516   000003                     ___wmul@multiplicand:
   517                           	callstack 0
   518   000003                     ___awdiv@divisor:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x2
   522   000003                     	ds	1
   523   000004                     color_writetoaddr@address:
   524                           	callstack 0
   525   000004                     I2C_2_Master_Read@tmp:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x3
   529   000004                     	ds	1
   530   000005                     ??_color_click_init:
   531   000005                     ??___fltol:
   532   000005                     ?_color_read_Red:
   533                           	callstack 0
   534   000005                     ?_color_read_Green:
   535                           	callstack 0
   536   000005                     ?_color_read_Blue:
   537                           	callstack 0
   538   000005                     ?_color_read_Clear:
   539                           	callstack 0
   540   000005                     ___awdiv@counter:
   541                           	callstack 0
   542   000005                     ___wmul@product:
   543                           	callstack 0
   544   000005                     ___fleq@ff2:
   545                           	callstack 0
   546   000005                     ___flge@ff2:
   547                           	callstack 0
   548   000005                     ___fladd@a:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x4
   552   000005                     	ds	1
   553   000006                     ___awdiv@sign:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x5
   557   000006                     	ds	1
   558   000007                     ??_color_read_Red:
   559   000007                     ??_color_read_Green:
   560   000007                     ??_color_read_Blue:
   561   000007                     ??_color_read_Clear:
   562   000007                     ?___lwdiv:
   563                           	callstack 0
   564   000007                     ___awdiv@quotient:
   565                           	callstack 0
   566   000007                     ___lwdiv@dividend:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x6
   570   000007                     	ds	2
   571   000009                     ??___fladd:
   572   000009                     ??___fleq:
   573   000009                     ??___flge:
   574   000009                     ___fltol@sign1:
   575                           	callstack 0
   576   000009                     ___lwdiv@divisor:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x8
   580   000009                     	ds	1
   581   00000A                     ___fltol@exp1:
   582                           	callstack 0
   583   00000A                     color_read_Red@tmp:
   584                           	callstack 0
   585   00000A                     color_read_Green@tmp:
   586                           	callstack 0
   587   00000A                     color_read_Blue@tmp:
   588                           	callstack 0
   589   00000A                     color_read_Clear@tmp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x9
   593   00000A                     	ds	1
   594   00000B                     ___lwdiv@quotient:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xA
   598   00000B                     	ds	1
   599   00000C                     ?___xxtofl:
   600                           	callstack 0
   601   00000C                     ___xxtofl@val:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0xB
   605   00000C                     	ds	1
   606   00000D                     ___lwdiv@counter:
   607                           	callstack 0
   608   00000D                     ___fladd@signs:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0xC
   612   00000D                     	ds	1
   613   00000E                     ___fladd@aexp:
   614                           	callstack 0
   615   00000E                     setMotorPWM@m:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0xD
   619   00000E                     	ds	1
   620   00000F                     ___fladd@bexp:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0xE
   624   00000F                     	ds	1
   625   000010                     ??_setMotorPWM:
   626   000010                     ??___xxtofl:
   627   000010                     ___fladd@grs:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0xF
   631   000010                     	ds	2
   632   000012                     setMotorPWM@posDuty:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x11
   636   000012                     	ds	1
   637   000013                     setMotorPWM@negDuty:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x12
   641   000013                     	ds	1
   642   000014                     forward@mL:
   643                           	callstack 0
   644   000014                     backward@mL:
   645                           	callstack 0
   646   000014                     leftTURN@mL:
   647                           	callstack 0
   648   000014                     rightTURN@mL:
   649                           	callstack 0
   650   000014                     ___xxtofl@sign:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x13
   654   000014                     	ds	1
   655   000015                     ___xxtofl@exp:
   656                           	callstack 0
   657   000015                     forward@mR:
   658                           	callstack 0
   659   000015                     backward@mR:
   660                           	callstack 0
   661   000015                     leftTURN@mR:
   662                           	callstack 0
   663   000015                     rightTURN@mR:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x14
   667   000015                     	ds	1
   668   000016                     ___xxtofl@arg:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x15
   672   000016                     	ds	1
   673   000017                     ??_rightTURN:
   674   000017                     ??_leftTURN:
   675   000017                     ??_forward:
   676   000017                     ??_backward:
   677                           
   678                           ; 1 bytes @ 0x16
   679   000017                     	ds	3
   680   00001A                     ?___flsub:
   681                           	callstack 0
   682   00001A                     forward@Distance_Calibration:
   683                           	callstack 0
   684   00001A                     backward@Distance_Calibration:
   685                           	callstack 0
   686   00001A                     leftTURN@rotation_calibration:
   687                           	callstack 0
   688   00001A                     rightTURN@rotation_calibration:
   689                           	callstack 0
   690   00001A                     ___flsub@b:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x19
   694   00001A                     	ds	1
   695   00001B                     forward@i:
   696                           	callstack 0
   697   00001B                     backward@i:
   698                           	callstack 0
   699   00001B                     leftTURN@i:
   700                           	callstack 0
   701   00001B                     rightTURN@i:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x1A
   705   00001B                     	ds	2
   706   00001D                     forward@j:
   707                           	callstack 0
   708   00001D                     backward@j:
   709                           	callstack 0
   710   00001D                     leftTURN@j:
   711                           	callstack 0
   712   00001D                     rightTURN@j:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x1C
   716   00001D                     	ds	1
   717   00001E                     ___flsub@a:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x1D
   721   00001E                     	ds	1
   722   00001F                     forward@max_power:
   723                           	callstack 0
   724   00001F                     backward@max_power:
   725                           	callstack 0
   726   00001F                     leftTURN@max_power:
   727                           	callstack 0
   728   00001F                     rightTURN@max_power:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1E
   732   00001F                     	ds	2
   733   000021                     forward@delay_time:
   734                           	callstack 0
   735   000021                     backward@delay_time:
   736                           	callstack 0
   737   000021                     leftTURN@delay_time:
   738                           	callstack 0
   739   000021                     rightTURN@delay_time:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x20
   743   000021                     	ds	1
   744   000022                     ?___fldiv:
   745                           	callstack 0
   746   000022                     ___fldiv@b:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x21
   750   000022                     	ds	1
   751   000023                     calibration_routine@c:
   752                           	callstack 0
   753   000023                     maze_return@c:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x22
   757   000023                     	ds	2
   758   000025                     calibration_routine@mL:
   759                           	callstack 0
   760   000025                     maze_return@mL:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x24
   764   000025                     	ds	1
   765   000026                     calibration_routine@mR:
   766                           	callstack 0
   767   000026                     maze_return@mR:
   768                           	callstack 0
   769   000026                     ___fldiv@a:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x25
   773   000026                     	ds	2
   774   000028                     ??_maze_return:
   775   000028                     
   776                           ; 1 bytes @ 0x27
   777   000028                     	ds	2
   778   00002A                     ??___fldiv:
   779                           
   780                           ; 1 bytes @ 0x29
   781   00002A                     	ds	1
   782   00002B                     maze_return@distance_back:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x2A
   786   00002B                     	ds	1
   787   00002C                     maze_return@j:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x2B
   791   00002C                     	ds	2
   792   00002E                     maze_return@i_2044:
   793                           	callstack 0
   794   00002E                     ___fldiv@rem:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x2D
   798   00002E                     	ds	2
   799   000030                     maze_return@i:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x2F
   803   000030                     	ds	2
   804   000032                     ___fldiv@sign:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x31
   808   000032                     	ds	1
   809   000033                     ___fldiv@new_exp:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x32
   813   000033                     	ds	2
   814   000035                     ___fldiv@grs:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x34
   818   000035                     	ds	4
   819   000039                     ___fldiv@bexp:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x38
   823   000039                     	ds	1
   824   00003A                     ___fldiv@aexp:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x39
   828   00003A                     	ds	1
   829   00003B                     ?___flmul:
   830                           	callstack 0
   831   00003B                     ___flmul@b:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x3A
   835   00003B                     	ds	4
   836   00003F                     ___flmul@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x3E
   840   00003F                     	ds	4
   841   000043                     ??___flmul:
   842                           
   843                           ; 1 bytes @ 0x42
   844   000043                     	ds	4
   845   000047                     ___flmul@sign:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x46
   849   000047                     	ds	1
   850   000048                     ___flmul@grs:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x47
   854   000048                     	ds	4
   855   00004C                     ___flmul@aexp:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x4B
   859   00004C                     	ds	1
   860   00004D                     ___flmul@bexp:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x4C
   864   00004D                     	ds	1
   865   00004E                     ___flmul@prod:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x4D
   869   00004E                     	ds	4
   870   000052                     ___flmul@temp:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x51
   874   000052                     	ds	2
   875   000054                     ?_custom_floatmodulo:
   876                           	callstack 0
   877   000054                     custom_floatmodulo@x:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x53
   881   000054                     	ds	4
   882   000058                     custom_floatmodulo@y:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x57
   886   000058                     	ds	4
   887   00005C                     ?_color_cardCheck:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x5B
   891   00005C                     	ds	2
   892   00005E                     ??_maze_search:
   893   00005E                     
   894                           ; 1 bytes @ 0x5D
   895   00005E                     	ds	2
   896   000060                     
   897                           ; 1 bytes @ 0x5F
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 19 in file "main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  PWMperiod       2    0        unsigned int 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels required when called: 6
   923 ;; This function calls:
   924 ;;		_calibration_routine
   925 ;;		_initDCmotorsPWM
   926 ;;		_maze_return
   927 ;;		_maze_search
   928 ;;		_pause_until_RF2_pressed
   929 ;; This function is called by:
   930 ;;		Startup code after reset
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text0
   935   0047DC                     __ptext0:
   936                           	callstack 0
   937   0047DC                     _main:
   938                           	callstack 25
   939   0047DC                     
   940                           ;main.c: 21:     initDCmotorsPWM(PWMperiod);
   941   0047DC  0E00               	movlw	0
   942   0047DE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   943   0047E0  0E63               	movlw	99
   944   0047E2  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   945   0047E4  EC71  F025         	call	_initDCmotorsPWM	;wreg free
   946   0047E8                     
   947                           ;main.c: 24:     motorL.power=0;
   948   0047E8  0E00               	movlw	0
   949   0047EA  0100               	movlb	0	; () banked
   950   0047EC  6FEE               	movwf	_motorL& (0+255),b
   951   0047EE                     
   952                           ; BSR set to: 0
   953                           ;main.c: 25:     motorL.direction=1;
   954   0047EE  0E01               	movlw	1
   955   0047F0  6FEF               	movwf	(_motorL+1)& (0+255),b
   956   0047F2                     
   957                           ; BSR set to: 0
   958                           ;main.c: 26:     motorL.brakemode=1;
   959   0047F2  0E01               	movlw	1
   960   0047F4  6FF0               	movwf	(_motorL+2)& (0+255),b
   961   0047F6                     
   962                           ; BSR set to: 0
   963                           ;main.c: 27:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   964   0047F6  0EAA               	movlw	170
   965   0047F8  6FF3               	movwf	(_motorL+5)& (0+255),b
   966   0047FA  0E0F               	movlw	15
   967   0047FC  6FF4               	movwf	(_motorL+6)& (0+255),b
   968   0047FE                     
   969                           ; BSR set to: 0
   970                           ;main.c: 28:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   971   0047FE  0EA6               	movlw	166
   972   004800  6FF5               	movwf	(_motorL+7)& (0+255),b
   973   004802  0E0F               	movlw	15
   974   004804  6FF6               	movwf	(_motorL+8)& (0+255),b
   975   004806                     
   976                           ; BSR set to: 0
   977                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
   978   004806  0E00               	movlw	0
   979   004808  6FF2               	movwf	(_motorL+4)& (0+255),b
   980   00480A  0E63               	movlw	99
   981   00480C  6FF1               	movwf	(_motorL+3)& (0+255),b
   982   00480E                     
   983                           ; BSR set to: 0
   984                           ;main.c: 31:     motorR.power=0;
   985   00480E  0E00               	movlw	0
   986   004810  0101               	movlb	1	; () banked
   987   004812  6F8B               	movwf	_motorR& (0+255),b
   988   004814                     
   989                           ; BSR set to: 1
   990                           ;main.c: 32:     motorR.direction=1;
   991   004814  0E01               	movlw	1
   992   004816  6F8C               	movwf	(_motorR+1)& (0+255),b
   993   004818                     
   994                           ; BSR set to: 1
   995                           ;main.c: 33:     motorR.brakemode=1;
   996   004818  0E01               	movlw	1
   997   00481A  6F8D               	movwf	(_motorR+2)& (0+255),b
   998   00481C                     
   999                           ; BSR set to: 1
  1000                           ;main.c: 34:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1001   00481C  0E25               	movlw	37
  1002   00481E  6F90               	movwf	(_motorR+5)& (0+255),b
  1003   004820  0E0F               	movlw	15
  1004   004822  6F91               	movwf	(_motorR+6)& (0+255),b
  1005   004824                     
  1006                           ; BSR set to: 1
  1007                           ;main.c: 35:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1008   004824  0E21               	movlw	33
  1009   004826  6F92               	movwf	(_motorR+7)& (0+255),b
  1010   004828  0E0F               	movlw	15
  1011   00482A  6F93               	movwf	(_motorR+8)& (0+255),b
  1012   00482C                     
  1013                           ; BSR set to: 1
  1014                           ;main.c: 36:     motorR.PWMperiod=PWMperiod;
  1015   00482C  0E00               	movlw	0
  1016   00482E  6F8F               	movwf	(_motorR+4)& (0+255),b
  1017   004830  0E63               	movlw	99
  1018   004832  6F8E               	movwf	(_motorR+3)& (0+255),b
  1019   004834                     
  1020                           ; BSR set to: 1
  1021                           ;main.c: 42:     TRISDbits.TRISD7 = 0;
  1022   004834  9E84               	bcf	132,7,c	;volatile
  1023   004836                     
  1024                           ; BSR set to: 1
  1025                           ;main.c: 43:     LATDbits.LATD7 = 0;
  1026   004836  9E7C               	bcf	124,7,c	;volatile
  1027   004838                     
  1028                           ; BSR set to: 1
  1029                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
  1030   004838  9688               	bcf	136,3,c	;volatile
  1031   00483A                     
  1032                           ; BSR set to: 1
  1033                           ;main.c: 47:     LATHbits.LATH3 = 0;
  1034   00483A  9680               	bcf	128,3,c	;volatile
  1035   00483C                     
  1036                           ; BSR set to: 1
  1037                           ;main.c: 50:     TRISFbits.TRISF2=1;
  1038   00483C  8486               	bsf	134,2,c	;volatile
  1039   00483E                     
  1040                           ; BSR set to: 1
  1041                           ;main.c: 51:     ANSELFbits.ANSELF2=0;
  1042   00483E  010E               	movlb	14	; () banked
  1043   004840  95B4               	bcf	180,2,b	;volatile
  1044   004842                     
  1045                           ; BSR set to: 14
  1046                           ;main.c: 54:     TRISFbits.TRISF3=1;
  1047   004842  8686               	bsf	134,3,c	;volatile
  1048   004844                     
  1049                           ; BSR set to: 14
  1050                           ;main.c: 55:     ANSELFbits.ANSELF3=0;
  1051   004844  97B4               	bcf	180,3,b	;volatile
  1052   004846                     
  1053                           ; BSR set to: 14
  1054                           ;main.c: 59:     calibration.index = 1;
  1055   004846  0E01               	movlw	1
  1056   004848  0101               	movlb	1	; () banked
  1057   00484A  6F82               	movwf	_calibration& (0+255),b
  1058   00484C                     
  1059                           ; BSR set to: 1
  1060                           ;main.c: 61:     calibration.right_90 = 25;
  1061   00484C  0E19               	movlw	25
  1062   00484E  6F83               	movwf	(_calibration+1)& (0+255),b
  1063   004850                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 62:     calibration.left_90 = 25;
  1066   004850  0E19               	movlw	25
  1067   004852  6F84               	movwf	(_calibration+2)& (0+255),b
  1068   004854                     
  1069                           ; BSR set to: 1
  1070                           ;main.c: 64:     calibration.right_135 = 40;
  1071   004854  0E28               	movlw	40
  1072   004856  6F85               	movwf	(_calibration+3)& (0+255),b
  1073   004858                     
  1074                           ; BSR set to: 1
  1075                           ;main.c: 65:     calibration.left_135 = 40;
  1076   004858  0E28               	movlw	40
  1077   00485A  6F86               	movwf	(_calibration+4)& (0+255),b
  1078   00485C                     
  1079                           ; BSR set to: 1
  1080                           ;main.c: 67:     calibration.forward_one = 100;
  1081   00485C  0E64               	movlw	100
  1082   00485E  6F87               	movwf	(_calibration+5)& (0+255),b
  1083   004860                     
  1084                           ; BSR set to: 1
  1085                           ;main.c: 68:     calibration.backward_one = 100;
  1086   004860  0E64               	movlw	100
  1087   004862  6F88               	movwf	(_calibration+6)& (0+255),b
  1088   004864                     
  1089                           ; BSR set to: 1
  1090                           ;main.c: 70:     calibration.forward_half = 33;
  1091   004864  0E21               	movlw	33
  1092   004866  6F89               	movwf	(_calibration+7)& (0+255),b
  1093   004868                     
  1094                           ; BSR set to: 1
  1095                           ;main.c: 71:     calibration.backward_half = 33;
  1096   004868  0E21               	movlw	33
  1097   00486A  6F8A               	movwf	(_calibration+8)& (0+255),b
  1098   00486C                     l5210:
  1099                           
  1100                           ;main.c: 78:         pause_until_RF2_pressed();
  1101   00486C  ECF5  F025         	call	_pause_until_RF2_pressed	;wreg free
  1102   004870                     
  1103                           ;main.c: 80:         calibration_routine(&calibration, &motorL, &motorR);
  1104   004870  0E82               	movlw	low _calibration
  1105   004872  6E23               	movwf	calibration_routine@c^0,c
  1106   004874  0E01               	movlw	high _calibration
  1107   004876  6E24               	movwf	(calibration_routine@c+1)^0,c
  1108   004878  0EEE               	movlw	low _motorL
  1109   00487A  6E25               	movwf	calibration_routine@mL^0,c
  1110   00487C  0E8B               	movlw	low _motorR
  1111   00487E  6E26               	movwf	calibration_routine@mR^0,c
  1112   004880  0E01               	movlw	high _motorR
  1113   004882  6E27               	movwf	(calibration_routine@mR+1)^0,c
  1114   004884  EC93  F01B         	call	_calibration_routine	;wreg free
  1115   004888                     
  1116                           ;main.c: 82:         maze_search(&calibration, &motorL, &motorR);
  1117   004888  0E82               	movlw	low _calibration
  1118   00488A  0100               	movlb	0	; () banked
  1119   00488C  6FDF               	movwf	maze_search@c& (0+255),b
  1120   00488E  0E01               	movlw	high _calibration
  1121   004890  6FE0               	movwf	(maze_search@c+1)& (0+255),b
  1122   004892  0EEE               	movlw	low _motorL
  1123   004894  6FE1               	movwf	maze_search@mL& (0+255),b
  1124   004896  0E8B               	movlw	low _motorR
  1125   004898  6FE2               	movwf	maze_search@mR& (0+255),b
  1126   00489A  0E01               	movlw	high _motorR
  1127   00489C  6FE3               	movwf	(maze_search@mR+1)& (0+255),b
  1128   00489E  ECFE  F00F         	call	_maze_search	;wreg free
  1129   0048A2                     
  1130                           ;main.c: 84:         maze_return(&calibration, &motorL, &motorR);
  1131   0048A2  0E82               	movlw	low _calibration
  1132   0048A4  6E23               	movwf	maze_return@c^0,c
  1133   0048A6  0E01               	movlw	high _calibration
  1134   0048A8  6E24               	movwf	(maze_return@c+1)^0,c
  1135   0048AA  0EEE               	movlw	low _motorL
  1136   0048AC  6E25               	movwf	maze_return@mL^0,c
  1137   0048AE  0E8B               	movlw	low _motorR
  1138   0048B0  6E26               	movwf	maze_return@mR^0,c
  1139   0048B2  0E01               	movlw	high _motorR
  1140   0048B4  6E27               	movwf	(maze_return@mR+1)^0,c
  1141   0048B6  ECB6  F012         	call	_maze_return	;wreg free
  1142   0048BA  EF36  F024         	goto	l5210
  1143   0048BE  EF00  F000         	goto	start
  1144   0048C2                     __end_of_main:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _pause_until_RF2_pressed *****************
  1148 ;; Defined at:
  1149 ;;		line 6 in file "calibration.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;Total ram usage:        2 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text1
  1177   004BEA                     __ptext1:
  1178                           	callstack 0
  1179   004BEA                     _pause_until_RF2_pressed:
  1180                           	callstack 30
  1181   004BEA                     l132:
  1182                           
  1183                           ;calibration.c: 9:         LATDbits.LATD7 = 1;
  1184   004BEA  8E7C               	bsf	124,7,c	;volatile
  1185   004BEC                     
  1186                           ;calibration.c: 10:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1187   004BEC  0E09               	movlw	9
  1188   004BEE  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1189   004BF0  0E1E               	movlw	30
  1190   004BF2  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1191   004BF4  0EE4               	movlw	228
  1192   004BF6                     u5837:
  1193   004BF6  2EE8               	decfsz	wreg,f,c
  1194   004BF8  D7FE               	bra	u5837
  1195   004BFA  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1196   004BFC  D7FC               	bra	u5837
  1197   004BFE  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1198   004C00  D7FA               	bra	u5837
  1199   004C02  D000               	nop2	
  1200   004C04                     
  1201                           ;calibration.c: 11:         LATDbits.LATD7 = 0;
  1202   004C04  9E7C               	bcf	124,7,c	;volatile
  1203                           
  1204                           ;calibration.c: 12:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1205   004C06  0E09               	movlw	9
  1206   004C08  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1207   004C0A  0E1E               	movlw	30
  1208   004C0C  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1209   004C0E  0EE4               	movlw	228
  1210   004C10                     u5847:
  1211   004C10  2EE8               	decfsz	wreg,f,c
  1212   004C12  D7FE               	bra	u5847
  1213   004C14  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1214   004C16  D7FC               	bra	u5847
  1215   004C18  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1216   004C1A  D7FA               	bra	u5847
  1217   004C1C  D000               	nop2	
  1218   004C1E                     
  1219                           ;calibration.c: 14:         if(!PORTFbits.RF2){
  1220   004C1E  B48E               	btfsc	142,2,c	;volatile
  1221   004C20  EF14  F026         	goto	u4711
  1222   004C24  EF16  F026         	goto	u4710
  1223   004C28                     u4711:
  1224   004C28  EFF5  F025         	goto	l132
  1225   004C2C                     u4710:
  1226   004C2C                     
  1227                           ;calibration.c: 15:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1228   004C2C  0E11               	movlw	17
  1229   004C2E  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1230   004C30  0E3C               	movlw	60
  1231   004C32  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1232   004C34  0ECB               	movlw	203
  1233   004C36                     u5857:
  1234   004C36  2EE8               	decfsz	wreg,f,c
  1235   004C38  D7FE               	bra	u5857
  1236   004C3A  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1237   004C3C  D7FC               	bra	u5857
  1238   004C3E  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1239   004C40  D7FA               	bra	u5857
  1240   004C42  0000               	nop	
  1241   004C44                     
  1242                           ;calibration.c: 16:         LATDbits.LATD7 = 0;
  1243   004C44  9E7C               	bcf	124,7,c	;volatile
  1244   004C46  0012               	return		;funcret
  1245   004C48                     __end_of_pause_until_RF2_pressed:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _maze_search *****************
  1249 ;; Defined at:
  1250 ;;		line 8 in file "pathfinder_file.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  c               2  127[BANK0 ] PTR struct calibration_s
  1253 ;;		 -> calibration(9), 
  1254 ;;  mL              1  129[BANK0 ] PTR struct DC_motor
  1255 ;;		 -> motorL(9), 
  1256 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  1257 ;;		 -> motorR(9), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  i               2  132[BANK0 ] int 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1269 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;Total ram usage:        9 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 5
  1276 ;; This function calls:
  1277 ;;		_backward
  1278 ;;		_color_cardCheck
  1279 ;;		_color_click_init
  1280 ;;		_forward
  1281 ;;		_leftTURN
  1282 ;;		_rightTURN
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text2
  1289   001FFC                     __ptext2:
  1290                           	callstack 0
  1291   001FFC                     _maze_search:
  1292                           	callstack 25
  1293   001FFC                     
  1294                           ;pathfinder_file.c: 9:     color_click_init();
  1295   001FFC  EC08  F027         	call	_color_click_init	;wreg free
  1296   002000                     l4946:
  1297                           
  1298                           ;pathfinder_file.c: 12:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1299   002000  0E29               	movlw	41
  1300   002002  6E5F               	movwf	(??_maze_search+1)^0,c
  1301   002004  0E96               	movlw	150
  1302   002006  6E5E               	movwf	??_maze_search^0,c
  1303   002008  0E7F               	movlw	127
  1304   00200A                     u5867:
  1305   00200A  2EE8               	decfsz	wreg,f,c
  1306   00200C  D7FE               	bra	u5867
  1307   00200E  2E5E               	decfsz	??_maze_search^0,f,c
  1308   002010  D7FC               	bra	u5867
  1309   002012  2E5F               	decfsz	(??_maze_search+1)^0,f,c
  1310   002014  D7FA               	bra	u5867
  1311   002016  0000               	nop	
  1312   002018                     
  1313                           ;pathfinder_file.c: 13:         LATHbits.LATH3 = 1;
  1314   002018  8680               	bsf	128,3,c	;volatile
  1315   00201A                     
  1316                           ;pathfinder_file.c: 14:         LATDbits.LATD7 = 1;
  1317   00201A  8E7C               	bsf	124,7,c	;volatile
  1318   00201C                     
  1319                           ;pathfinder_file.c: 16:         forward(c->forward_one, mL, mR);
  1320   00201C  C0E1  F014         	movff	maze_search@mL,forward@mL
  1321   002020  C0E2  F015         	movff	maze_search@mR,forward@mR
  1322   002024  C0E3  F016         	movff	maze_search@mR+1,forward@mR+1
  1323   002028  0100               	movlb	0	; () banked
  1324   00202A  EE20 F005          	lfsr	2,5
  1325   00202E  51DF               	movf	maze_search@c& (0+255),w,b
  1326   002030  26D9               	addwf	fsr2l,f,c
  1327   002032  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1328   002034  22DA               	addwfc	fsr2h,f,c
  1329   002036  50DF               	movf	indf2,w,c
  1330   002038  ECD0  F01D         	call	_forward
  1331   00203C                     
  1332                           ;pathfinder_file.c: 17:         Forward_Count++;
  1333   00203C  0100               	movlb	0	; () banked
  1334   00203E  2BE8               	incf	_Forward_Count& (0+255),f,b
  1335   002040                     
  1336                           ; BSR set to: 0
  1337                           ;pathfinder_file.c: 18:         Color_Value = color_cardCheck();
  1338   002040  EC01  F007         	call	_color_cardCheck	;wreg free
  1339   002044  C05C  F0E6         	movff	?_color_cardCheck,_Color_Value
  1340   002048  C05D  F0E7         	movff	?_color_cardCheck+1,_Color_Value+1
  1341   00204C                     
  1342                           ;pathfinder_file.c: 20:         LATHbits.LATH3 = 0;
  1343   00204C  9680               	bcf	128,3,c	;volatile
  1344   00204E                     
  1345                           ;pathfinder_file.c: 21:         LATDbits.LATD7 = 0;
  1346   00204E  9E7C               	bcf	124,7,c	;volatile
  1347   002050  0E05               	movlw	5
  1348   002052  0100               	movlb	0	; () banked
  1349   002054  65E8               	cpfsgt	_Forward_Count& (0+255),b
  1350   002056  EF2F  F010         	goto	u5571
  1351   00205A  EF31  F010         	goto	u5570
  1352   00205E                     u5571:
  1353   00205E  EFA8  F010         	goto	l4976
  1354   002062                     u5570:
  1355   002062                     
  1356                           ; BSR set to: 0
  1357                           ;pathfinder_file.c: 27:             backward(c->backward_half, mL, mR);
  1358   002062  C0E1  F014         	movff	maze_search@mL,backward@mL
  1359   002066  C0E2  F015         	movff	maze_search@mR,backward@mR
  1360   00206A  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1361   00206E  EE20 F008          	lfsr	2,8
  1362   002072  51DF               	movf	maze_search@c& (0+255),w,b
  1363   002074  26D9               	addwf	fsr2l,f,c
  1364   002076  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1365   002078  22DA               	addwfc	fsr2h,f,c
  1366   00207A  50DF               	movf	indf2,w,c
  1367   00207C  EC32  F020         	call	_backward
  1368                           
  1369                           ;pathfinder_file.c: 28:             rightTURN(c->right_90, mL, mR);
  1370   002080  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1371   002084  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1372   002088  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1373   00208C  0100               	movlb	0	; () banked
  1374   00208E  EE20 F001          	lfsr	2,1
  1375   002092  51DF               	movf	maze_search@c& (0+255),w,b
  1376   002094  26D9               	addwf	fsr2l,f,c
  1377   002096  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1378   002098  22DA               	addwfc	fsr2h,f,c
  1379   00209A  50DF               	movf	indf2,w,c
  1380   00209C  EC9C  F01E         	call	_rightTURN
  1381                           
  1382                           ;pathfinder_file.c: 29:             rightTURN(c->right_90, mL, mR);
  1383   0020A0  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1384   0020A4  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1385   0020A8  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1386   0020AC  0100               	movlb	0	; () banked
  1387   0020AE  EE20 F001          	lfsr	2,1
  1388   0020B2  51DF               	movf	maze_search@c& (0+255),w,b
  1389   0020B4  26D9               	addwf	fsr2l,f,c
  1390   0020B6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1391   0020B8  22DA               	addwfc	fsr2h,f,c
  1392   0020BA  50DF               	movf	indf2,w,c
  1393   0020BC  EC9C  F01E         	call	_rightTURN
  1394                           
  1395                           ;pathfinder_file.c: 30:             backward(c->backward_one, mL, mR);
  1396   0020C0  C0E1  F014         	movff	maze_search@mL,backward@mL
  1397   0020C4  C0E2  F015         	movff	maze_search@mR,backward@mR
  1398   0020C8  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1399   0020CC  0100               	movlb	0	; () banked
  1400   0020CE  EE20 F006          	lfsr	2,6
  1401   0020D2  51DF               	movf	maze_search@c& (0+255),w,b
  1402   0020D4  26D9               	addwf	fsr2l,f,c
  1403   0020D6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1404   0020D8  22DA               	addwfc	fsr2h,f,c
  1405   0020DA  50DF               	movf	indf2,w,c
  1406   0020DC  EC32  F020         	call	_backward
  1407   0020E0                     
  1408                           ;pathfinder_file.c: 31:             for (int i = 0; i < forward_reset_threshold; i++) {
  1409   0020E0  0E00               	movlw	0
  1410   0020E2  0100               	movlb	0	; () banked
  1411   0020E4  6FE5               	movwf	(maze_search@i+1)& (0+255),b
  1412   0020E6  0E00               	movlw	0
  1413   0020E8  6FE4               	movwf	maze_search@i& (0+255),b
  1414   0020EA  EF89  F010         	goto	l4972
  1415   0020EE                     l4968:
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;pathfinder_file.c: 32:                  forward(c->forward_one, mL, mR);
  1419   0020EE  C0E1  F014         	movff	maze_search@mL,forward@mL
  1420   0020F2  C0E2  F015         	movff	maze_search@mR,forward@mR
  1421   0020F6  C0E3  F016         	movff	maze_search@mR+1,forward@mR+1
  1422   0020FA  EE20 F005          	lfsr	2,5
  1423   0020FE  51DF               	movf	maze_search@c& (0+255),w,b
  1424   002100  26D9               	addwf	fsr2l,f,c
  1425   002102  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1426   002104  22DA               	addwfc	fsr2h,f,c
  1427   002106  50DF               	movf	indf2,w,c
  1428   002108  ECD0  F01D         	call	_forward
  1429   00210C                     
  1430                           ;pathfinder_file.c: 33:             }
  1431   00210C  0100               	movlb	0	; () banked
  1432   00210E  4BE4               	infsnz	maze_search@i& (0+255),f,b
  1433   002110  2BE5               	incf	(maze_search@i+1)& (0+255),f,b
  1434   002112                     l4972:
  1435                           
  1436                           ; BSR set to: 0
  1437   002112  BFE5               	btfsc	(maze_search@i+1)& (0+255),7,b
  1438   002114  EF95  F010         	goto	u5581
  1439   002118  51E5               	movf	(maze_search@i+1)& (0+255),w,b
  1440   00211A  E109               	bnz	u5580
  1441   00211C  0E05               	movlw	5
  1442   00211E  5DE4               	subwf	maze_search@i& (0+255),w,b
  1443   002120  A0D8               	btfss	status,0,c
  1444   002122  EF95  F010         	goto	u5581
  1445   002126  EF97  F010         	goto	u5580
  1446   00212A                     u5581:
  1447   00212A  EF77  F010         	goto	l4968
  1448   00212E                     u5580:
  1449   00212E                     
  1450                           ; BSR set to: 0
  1451                           ;pathfinder_file.c: 34:             backward(c->backward_half, mL, mR);
  1452   00212E  C0E1  F014         	movff	maze_search@mL,backward@mL
  1453   002132  C0E2  F015         	movff	maze_search@mR,backward@mR
  1454   002136  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1455   00213A  EE20 F008          	lfsr	2,8
  1456   00213E  51DF               	movf	maze_search@c& (0+255),w,b
  1457   002140  26D9               	addwf	fsr2l,f,c
  1458   002142  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1459   002144  22DA               	addwfc	fsr2h,f,c
  1460   002146  50DF               	movf	indf2,w,c
  1461   002148  EC32  F020         	call	_backward
  1462                           
  1463                           ;pathfinder_file.c: 35:             break;
  1464   00214C  EFB5  F012         	goto	l576
  1465   002150                     l4976:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;pathfinder_file.c: 38:         if(Color_Value != 0){
  1469   002150  51E6               	movf	_Color_Value& (0+255),w,b
  1470   002152  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1471   002154  B4D8               	btfsc	status,2,c
  1472   002156  EFAF  F010         	goto	u5591
  1473   00215A  EFB1  F010         	goto	u5590
  1474   00215E                     u5591:
  1475   00215E  EF00  F010         	goto	l4946
  1476   002162                     u5590:
  1477   002162                     
  1478                           ; BSR set to: 0
  1479                           ;pathfinder_file.c: 40:             Operation_History[Operation_Count] = Forward_Count +
      +                           10;
  1480   002162  0E3C               	movlw	low _Operation_History
  1481   002164  25E9               	addwf	_Operation_Count& (0+255),w,b
  1482   002166  6ED9               	movwf	fsr2l,c
  1483   002168  6ADA               	clrf	fsr2h,c
  1484   00216A  0E01               	movlw	high _Operation_History
  1485   00216C  22DA               	addwfc	fsr2h,f,c
  1486   00216E  51E8               	movf	_Forward_Count& (0+255),w,b
  1487   002170  0F0A               	addlw	10
  1488   002172  6EDF               	movwf	indf2,c
  1489   002174                     
  1490                           ; BSR set to: 0
  1491                           ;pathfinder_file.c: 41:             Forward_Count = 0;
  1492   002174  0E00               	movlw	0
  1493   002176  6FE8               	movwf	_Forward_Count& (0+255),b
  1494   002178                     
  1495                           ; BSR set to: 0
  1496                           ;pathfinder_file.c: 42:             Operation_Count++;
  1497   002178  2BE9               	incf	_Operation_Count& (0+255),f,b
  1498   00217A                     
  1499                           ; BSR set to: 0
  1500                           ;pathfinder_file.c: 44:             if(Color_Value == 1){
  1501   00217A  05E6               	decf	_Color_Value& (0+255),w,b
  1502   00217C  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1503   00217E  A4D8               	btfss	status,2,c
  1504   002180  EFC4  F010         	goto	u5601
  1505   002184  EFC6  F010         	goto	u5600
  1506   002188                     u5601:
  1507   002188  EFF0  F010         	goto	l4994
  1508   00218C                     u5600:
  1509   00218C                     
  1510                           ; BSR set to: 0
  1511                           ;pathfinder_file.c: 45:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1512   00218C  0E3C               	movlw	low _Operation_History
  1513   00218E  25E9               	addwf	_Operation_Count& (0+255),w,b
  1514   002190  6ED9               	movwf	fsr2l,c
  1515   002192  6ADA               	clrf	fsr2h,c
  1516   002194  0E01               	movlw	high _Operation_History
  1517   002196  22DA               	addwfc	fsr2h,f,c
  1518   002198  C0E6  FFDF         	movff	_Color_Value,indf2
  1519   00219C                     
  1520                           ; BSR set to: 0
  1521                           ;pathfinder_file.c: 46:                 Operation_Count++;
  1522   00219C  2BE9               	incf	_Operation_Count& (0+255),f,b
  1523   00219E                     
  1524                           ; BSR set to: 0
  1525                           ;pathfinder_file.c: 47:                 backward(c->backward_half, mL, mR);
  1526   00219E  C0E1  F014         	movff	maze_search@mL,backward@mL
  1527   0021A2  C0E2  F015         	movff	maze_search@mR,backward@mR
  1528   0021A6  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1529   0021AA  EE20 F008          	lfsr	2,8
  1530   0021AE  51DF               	movf	maze_search@c& (0+255),w,b
  1531   0021B0  26D9               	addwf	fsr2l,f,c
  1532   0021B2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1533   0021B4  22DA               	addwfc	fsr2h,f,c
  1534   0021B6  50DF               	movf	indf2,w,c
  1535   0021B8  EC32  F020         	call	_backward
  1536   0021BC                     
  1537                           ;pathfinder_file.c: 48:                 rightTURN(c->right_90, mL, mR);
  1538   0021BC  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1539   0021C0  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1540   0021C4  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1541   0021C8  0100               	movlb	0	; () banked
  1542   0021CA  EE20 F001          	lfsr	2,1
  1543   0021CE  51DF               	movf	maze_search@c& (0+255),w,b
  1544   0021D0  26D9               	addwf	fsr2l,f,c
  1545   0021D2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1546   0021D4  22DA               	addwfc	fsr2h,f,c
  1547   0021D6  50DF               	movf	indf2,w,c
  1548   0021D8  EC9C  F01E         	call	_rightTURN
  1549                           
  1550                           ;pathfinder_file.c: 49:             }
  1551   0021DC  EF00  F010         	goto	l4946
  1552   0021E0                     l4994:
  1553                           
  1554                           ; BSR set to: 0
  1555   0021E0  0E02               	movlw	2
  1556   0021E2  19E6               	xorwf	_Color_Value& (0+255),w,b
  1557   0021E4  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1558   0021E6  A4D8               	btfss	status,2,c
  1559   0021E8  EFF8  F010         	goto	u5611
  1560   0021EC  EFFA  F010         	goto	u5610
  1561   0021F0                     u5611:
  1562   0021F0  EF24  F011         	goto	l5004
  1563   0021F4                     u5610:
  1564   0021F4                     
  1565                           ; BSR set to: 0
  1566                           ;pathfinder_file.c: 52:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1567   0021F4  0E3C               	movlw	low _Operation_History
  1568   0021F6  25E9               	addwf	_Operation_Count& (0+255),w,b
  1569   0021F8  6ED9               	movwf	fsr2l,c
  1570   0021FA  6ADA               	clrf	fsr2h,c
  1571   0021FC  0E01               	movlw	high _Operation_History
  1572   0021FE  22DA               	addwfc	fsr2h,f,c
  1573   002200  C0E6  FFDF         	movff	_Color_Value,indf2
  1574   002204                     
  1575                           ; BSR set to: 0
  1576                           ;pathfinder_file.c: 53:                 Operation_Count++;
  1577   002204  2BE9               	incf	_Operation_Count& (0+255),f,b
  1578   002206                     
  1579                           ; BSR set to: 0
  1580                           ;pathfinder_file.c: 54:                 backward(c->backward_half, mL, mR);
  1581   002206  C0E1  F014         	movff	maze_search@mL,backward@mL
  1582   00220A  C0E2  F015         	movff	maze_search@mR,backward@mR
  1583   00220E  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1584   002212  EE20 F008          	lfsr	2,8
  1585   002216  51DF               	movf	maze_search@c& (0+255),w,b
  1586   002218  26D9               	addwf	fsr2l,f,c
  1587   00221A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1588   00221C  22DA               	addwfc	fsr2h,f,c
  1589   00221E  50DF               	movf	indf2,w,c
  1590   002220  EC32  F020         	call	_backward
  1591   002224                     
  1592                           ;pathfinder_file.c: 55:                 leftTURN(c->left_90, mL, mR);
  1593   002224  C0E1  F014         	movff	maze_search@mL,leftTURN@mL
  1594   002228  C0E2  F015         	movff	maze_search@mR,leftTURN@mR
  1595   00222C  C0E3  F016         	movff	maze_search@mR+1,leftTURN@mR+1
  1596   002230  0100               	movlb	0	; () banked
  1597   002232  EE20 F002          	lfsr	2,2
  1598   002236  51DF               	movf	maze_search@c& (0+255),w,b
  1599   002238  26D9               	addwf	fsr2l,f,c
  1600   00223A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1601   00223C  22DA               	addwfc	fsr2h,f,c
  1602   00223E  50DF               	movf	indf2,w,c
  1603   002240  EC67  F01F         	call	_leftTURN
  1604                           
  1605                           ;pathfinder_file.c: 56:             }
  1606   002244  EF00  F010         	goto	l4946
  1607   002248                     l5004:
  1608                           
  1609                           ; BSR set to: 0
  1610   002248  0E03               	movlw	3
  1611   00224A  19E6               	xorwf	_Color_Value& (0+255),w,b
  1612   00224C  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1613   00224E  A4D8               	btfss	status,2,c
  1614   002250  EF2C  F011         	goto	u5621
  1615   002254  EF2E  F011         	goto	u5620
  1616   002258                     u5621:
  1617   002258  EF68  F011         	goto	l5016
  1618   00225C                     u5620:
  1619   00225C                     
  1620                           ; BSR set to: 0
  1621                           ;pathfinder_file.c: 59:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1622   00225C  0E3C               	movlw	low _Operation_History
  1623   00225E  25E9               	addwf	_Operation_Count& (0+255),w,b
  1624   002260  6ED9               	movwf	fsr2l,c
  1625   002262  6ADA               	clrf	fsr2h,c
  1626   002264  0E01               	movlw	high _Operation_History
  1627   002266  22DA               	addwfc	fsr2h,f,c
  1628   002268  C0E6  FFDF         	movff	_Color_Value,indf2
  1629   00226C                     
  1630                           ; BSR set to: 0
  1631                           ;pathfinder_file.c: 60:                 Operation_Count++;
  1632   00226C  2BE9               	incf	_Operation_Count& (0+255),f,b
  1633   00226E                     
  1634                           ; BSR set to: 0
  1635                           ;pathfinder_file.c: 61:                 backward(c->backward_half, mL, mR);
  1636   00226E  C0E1  F014         	movff	maze_search@mL,backward@mL
  1637   002272  C0E2  F015         	movff	maze_search@mR,backward@mR
  1638   002276  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1639   00227A  EE20 F008          	lfsr	2,8
  1640   00227E  51DF               	movf	maze_search@c& (0+255),w,b
  1641   002280  26D9               	addwf	fsr2l,f,c
  1642   002282  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1643   002284  22DA               	addwfc	fsr2h,f,c
  1644   002286  50DF               	movf	indf2,w,c
  1645   002288  EC32  F020         	call	_backward
  1646   00228C                     
  1647                           ;pathfinder_file.c: 62:                 rightTURN(c->right_90, mL, mR);
  1648   00228C  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1649   002290  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1650   002294  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1651   002298  0100               	movlb	0	; () banked
  1652   00229A  EE20 F001          	lfsr	2,1
  1653   00229E  51DF               	movf	maze_search@c& (0+255),w,b
  1654   0022A0  26D9               	addwf	fsr2l,f,c
  1655   0022A2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1656   0022A4  22DA               	addwfc	fsr2h,f,c
  1657   0022A6  50DF               	movf	indf2,w,c
  1658   0022A8  EC9C  F01E         	call	_rightTURN
  1659   0022AC                     
  1660                           ;pathfinder_file.c: 63:                 rightTURN(c->right_90, mL, mR);
  1661   0022AC  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1662   0022B0  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1663   0022B4  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1664   0022B8  0100               	movlb	0	; () banked
  1665   0022BA  EE20 F001          	lfsr	2,1
  1666   0022BE  51DF               	movf	maze_search@c& (0+255),w,b
  1667   0022C0  26D9               	addwf	fsr2l,f,c
  1668   0022C2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1669   0022C4  22DA               	addwfc	fsr2h,f,c
  1670   0022C6  50DF               	movf	indf2,w,c
  1671   0022C8  EC9C  F01E         	call	_rightTURN
  1672                           
  1673                           ;pathfinder_file.c: 64:             }
  1674   0022CC  EF00  F010         	goto	l4946
  1675   0022D0                     l5016:
  1676                           
  1677                           ; BSR set to: 0
  1678   0022D0  0E04               	movlw	4
  1679   0022D2  19E6               	xorwf	_Color_Value& (0+255),w,b
  1680   0022D4  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1681   0022D6  A4D8               	btfss	status,2,c
  1682   0022D8  EF70  F011         	goto	u5631
  1683   0022DC  EF72  F011         	goto	u5630
  1684   0022E0                     u5631:
  1685   0022E0  EFAC  F011         	goto	l5028
  1686   0022E4                     u5630:
  1687   0022E4                     
  1688                           ; BSR set to: 0
  1689                           ;pathfinder_file.c: 67:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1690   0022E4  0E3C               	movlw	low _Operation_History
  1691   0022E6  25E9               	addwf	_Operation_Count& (0+255),w,b
  1692   0022E8  6ED9               	movwf	fsr2l,c
  1693   0022EA  6ADA               	clrf	fsr2h,c
  1694   0022EC  0E01               	movlw	high _Operation_History
  1695   0022EE  22DA               	addwfc	fsr2h,f,c
  1696   0022F0  C0E6  FFDF         	movff	_Color_Value,indf2
  1697   0022F4                     
  1698                           ; BSR set to: 0
  1699                           ;pathfinder_file.c: 68:                 Operation_Count++;
  1700   0022F4  2BE9               	incf	_Operation_Count& (0+255),f,b
  1701   0022F6                     
  1702                           ; BSR set to: 0
  1703                           ;pathfinder_file.c: 69:                 backward(c->backward_half, mL, mR);
  1704   0022F6  C0E1  F014         	movff	maze_search@mL,backward@mL
  1705   0022FA  C0E2  F015         	movff	maze_search@mR,backward@mR
  1706   0022FE  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1707   002302  EE20 F008          	lfsr	2,8
  1708   002306  51DF               	movf	maze_search@c& (0+255),w,b
  1709   002308  26D9               	addwf	fsr2l,f,c
  1710   00230A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1711   00230C  22DA               	addwfc	fsr2h,f,c
  1712   00230E  50DF               	movf	indf2,w,c
  1713   002310  EC32  F020         	call	_backward
  1714   002314                     
  1715                           ;pathfinder_file.c: 70:                 backward(c->backward_one, mL, mR);
  1716   002314  C0E1  F014         	movff	maze_search@mL,backward@mL
  1717   002318  C0E2  F015         	movff	maze_search@mR,backward@mR
  1718   00231C  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1719   002320  0100               	movlb	0	; () banked
  1720   002322  EE20 F006          	lfsr	2,6
  1721   002326  51DF               	movf	maze_search@c& (0+255),w,b
  1722   002328  26D9               	addwf	fsr2l,f,c
  1723   00232A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1724   00232C  22DA               	addwfc	fsr2h,f,c
  1725   00232E  50DF               	movf	indf2,w,c
  1726   002330  EC32  F020         	call	_backward
  1727   002334                     
  1728                           ;pathfinder_file.c: 71:                 rightTURN(c->right_90, mL, mR);
  1729   002334  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1730   002338  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1731   00233C  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1732   002340  0100               	movlb	0	; () banked
  1733   002342  EE20 F001          	lfsr	2,1
  1734   002346  51DF               	movf	maze_search@c& (0+255),w,b
  1735   002348  26D9               	addwf	fsr2l,f,c
  1736   00234A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1737   00234C  22DA               	addwfc	fsr2h,f,c
  1738   00234E  50DF               	movf	indf2,w,c
  1739   002350  EC9C  F01E         	call	_rightTURN
  1740                           
  1741                           ;pathfinder_file.c: 72:             }
  1742   002354  EF00  F010         	goto	l4946
  1743   002358                     l5028:
  1744                           
  1745                           ; BSR set to: 0
  1746   002358  0E05               	movlw	5
  1747   00235A  19E6               	xorwf	_Color_Value& (0+255),w,b
  1748   00235C  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1749   00235E  A4D8               	btfss	status,2,c
  1750   002360  EFB4  F011         	goto	u5641
  1751   002364  EFB6  F011         	goto	u5640
  1752   002368                     u5641:
  1753   002368  EFF0  F011         	goto	l5040
  1754   00236C                     u5640:
  1755   00236C                     
  1756                           ; BSR set to: 0
  1757                           ;pathfinder_file.c: 75:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1758   00236C  0E3C               	movlw	low _Operation_History
  1759   00236E  25E9               	addwf	_Operation_Count& (0+255),w,b
  1760   002370  6ED9               	movwf	fsr2l,c
  1761   002372  6ADA               	clrf	fsr2h,c
  1762   002374  0E01               	movlw	high _Operation_History
  1763   002376  22DA               	addwfc	fsr2h,f,c
  1764   002378  C0E6  FFDF         	movff	_Color_Value,indf2
  1765   00237C                     
  1766                           ; BSR set to: 0
  1767                           ;pathfinder_file.c: 76:                 Operation_Count++;
  1768   00237C  2BE9               	incf	_Operation_Count& (0+255),f,b
  1769   00237E                     
  1770                           ; BSR set to: 0
  1771                           ;pathfinder_file.c: 77:                 backward(c->backward_half, mL, mR);
  1772   00237E  C0E1  F014         	movff	maze_search@mL,backward@mL
  1773   002382  C0E2  F015         	movff	maze_search@mR,backward@mR
  1774   002386  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1775   00238A  EE20 F008          	lfsr	2,8
  1776   00238E  51DF               	movf	maze_search@c& (0+255),w,b
  1777   002390  26D9               	addwf	fsr2l,f,c
  1778   002392  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1779   002394  22DA               	addwfc	fsr2h,f,c
  1780   002396  50DF               	movf	indf2,w,c
  1781   002398  EC32  F020         	call	_backward
  1782   00239C                     
  1783                           ;pathfinder_file.c: 78:                 backward(c->backward_one, mL, mR);
  1784   00239C  C0E1  F014         	movff	maze_search@mL,backward@mL
  1785   0023A0  C0E2  F015         	movff	maze_search@mR,backward@mR
  1786   0023A4  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1787   0023A8  0100               	movlb	0	; () banked
  1788   0023AA  EE20 F006          	lfsr	2,6
  1789   0023AE  51DF               	movf	maze_search@c& (0+255),w,b
  1790   0023B0  26D9               	addwf	fsr2l,f,c
  1791   0023B2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1792   0023B4  22DA               	addwfc	fsr2h,f,c
  1793   0023B6  50DF               	movf	indf2,w,c
  1794   0023B8  EC32  F020         	call	_backward
  1795   0023BC                     
  1796                           ;pathfinder_file.c: 79:                 leftTURN(c->left_90, mL, mR);
  1797   0023BC  C0E1  F014         	movff	maze_search@mL,leftTURN@mL
  1798   0023C0  C0E2  F015         	movff	maze_search@mR,leftTURN@mR
  1799   0023C4  C0E3  F016         	movff	maze_search@mR+1,leftTURN@mR+1
  1800   0023C8  0100               	movlb	0	; () banked
  1801   0023CA  EE20 F002          	lfsr	2,2
  1802   0023CE  51DF               	movf	maze_search@c& (0+255),w,b
  1803   0023D0  26D9               	addwf	fsr2l,f,c
  1804   0023D2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1805   0023D4  22DA               	addwfc	fsr2h,f,c
  1806   0023D6  50DF               	movf	indf2,w,c
  1807   0023D8  EC67  F01F         	call	_leftTURN
  1808                           
  1809                           ;pathfinder_file.c: 80:             }
  1810   0023DC  EF00  F010         	goto	l4946
  1811   0023E0                     l5040:
  1812                           
  1813                           ; BSR set to: 0
  1814   0023E0  0E06               	movlw	6
  1815   0023E2  19E6               	xorwf	_Color_Value& (0+255),w,b
  1816   0023E4  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1817   0023E6  A4D8               	btfss	status,2,c
  1818   0023E8  EFF8  F011         	goto	u5651
  1819   0023EC  EFFA  F011         	goto	u5650
  1820   0023F0                     u5651:
  1821   0023F0  EF24  F012         	goto	l5050
  1822   0023F4                     u5650:
  1823   0023F4                     
  1824                           ; BSR set to: 0
  1825                           ;pathfinder_file.c: 83:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1826   0023F4  0E3C               	movlw	low _Operation_History
  1827   0023F6  25E9               	addwf	_Operation_Count& (0+255),w,b
  1828   0023F8  6ED9               	movwf	fsr2l,c
  1829   0023FA  6ADA               	clrf	fsr2h,c
  1830   0023FC  0E01               	movlw	high _Operation_History
  1831   0023FE  22DA               	addwfc	fsr2h,f,c
  1832   002400  C0E6  FFDF         	movff	_Color_Value,indf2
  1833   002404                     
  1834                           ; BSR set to: 0
  1835                           ;pathfinder_file.c: 84:                 Operation_Count++;
  1836   002404  2BE9               	incf	_Operation_Count& (0+255),f,b
  1837   002406                     
  1838                           ; BSR set to: 0
  1839                           ;pathfinder_file.c: 85:                 backward(c->backward_half, mL, mR);
  1840   002406  C0E1  F014         	movff	maze_search@mL,backward@mL
  1841   00240A  C0E2  F015         	movff	maze_search@mR,backward@mR
  1842   00240E  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1843   002412  EE20 F008          	lfsr	2,8
  1844   002416  51DF               	movf	maze_search@c& (0+255),w,b
  1845   002418  26D9               	addwf	fsr2l,f,c
  1846   00241A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1847   00241C  22DA               	addwfc	fsr2h,f,c
  1848   00241E  50DF               	movf	indf2,w,c
  1849   002420  EC32  F020         	call	_backward
  1850   002424                     
  1851                           ;pathfinder_file.c: 86:                 rightTURN(c->right_135, mL, mR);
  1852   002424  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1853   002428  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1854   00242C  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1855   002430  0100               	movlb	0	; () banked
  1856   002432  EE20 F003          	lfsr	2,3
  1857   002436  51DF               	movf	maze_search@c& (0+255),w,b
  1858   002438  26D9               	addwf	fsr2l,f,c
  1859   00243A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1860   00243C  22DA               	addwfc	fsr2h,f,c
  1861   00243E  50DF               	movf	indf2,w,c
  1862   002440  EC9C  F01E         	call	_rightTURN
  1863                           
  1864                           ;pathfinder_file.c: 87:             }
  1865   002444  EF00  F010         	goto	l4946
  1866   002448                     l5050:
  1867                           
  1868                           ; BSR set to: 0
  1869   002448  0E07               	movlw	7
  1870   00244A  19E6               	xorwf	_Color_Value& (0+255),w,b
  1871   00244C  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1872   00244E  A4D8               	btfss	status,2,c
  1873   002450  EF2C  F012         	goto	u5661
  1874   002454  EF2E  F012         	goto	u5660
  1875   002458                     u5661:
  1876   002458  EF58  F012         	goto	l5060
  1877   00245C                     u5660:
  1878   00245C                     
  1879                           ; BSR set to: 0
  1880                           ;pathfinder_file.c: 90:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1881   00245C  0E3C               	movlw	low _Operation_History
  1882   00245E  25E9               	addwf	_Operation_Count& (0+255),w,b
  1883   002460  6ED9               	movwf	fsr2l,c
  1884   002462  6ADA               	clrf	fsr2h,c
  1885   002464  0E01               	movlw	high _Operation_History
  1886   002466  22DA               	addwfc	fsr2h,f,c
  1887   002468  C0E6  FFDF         	movff	_Color_Value,indf2
  1888   00246C                     
  1889                           ; BSR set to: 0
  1890                           ;pathfinder_file.c: 91:                 Operation_Count++;
  1891   00246C  2BE9               	incf	_Operation_Count& (0+255),f,b
  1892   00246E                     
  1893                           ; BSR set to: 0
  1894                           ;pathfinder_file.c: 92:                 backward(c->backward_half, mL, mR);
  1895   00246E  C0E1  F014         	movff	maze_search@mL,backward@mL
  1896   002472  C0E2  F015         	movff	maze_search@mR,backward@mR
  1897   002476  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1898   00247A  EE20 F008          	lfsr	2,8
  1899   00247E  51DF               	movf	maze_search@c& (0+255),w,b
  1900   002480  26D9               	addwf	fsr2l,f,c
  1901   002482  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1902   002484  22DA               	addwfc	fsr2h,f,c
  1903   002486  50DF               	movf	indf2,w,c
  1904   002488  EC32  F020         	call	_backward
  1905   00248C                     
  1906                           ;pathfinder_file.c: 93:                 leftTURN(c->left_135, mL, mR);
  1907   00248C  C0E1  F014         	movff	maze_search@mL,leftTURN@mL
  1908   002490  C0E2  F015         	movff	maze_search@mR,leftTURN@mR
  1909   002494  C0E3  F016         	movff	maze_search@mR+1,leftTURN@mR+1
  1910   002498  0100               	movlb	0	; () banked
  1911   00249A  EE20 F004          	lfsr	2,4
  1912   00249E  51DF               	movf	maze_search@c& (0+255),w,b
  1913   0024A0  26D9               	addwf	fsr2l,f,c
  1914   0024A2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1915   0024A4  22DA               	addwfc	fsr2h,f,c
  1916   0024A6  50DF               	movf	indf2,w,c
  1917   0024A8  EC67  F01F         	call	_leftTURN
  1918                           
  1919                           ;pathfinder_file.c: 94:             }
  1920   0024AC  EF00  F010         	goto	l4946
  1921   0024B0                     l5060:
  1922                           
  1923                           ; BSR set to: 0
  1924   0024B0  0E08               	movlw	8
  1925   0024B2  19E6               	xorwf	_Color_Value& (0+255),w,b
  1926   0024B4  11E7               	iorwf	(_Color_Value+1)& (0+255),w,b
  1927   0024B6  A4D8               	btfss	status,2,c
  1928   0024B8  EF60  F012         	goto	u5671
  1929   0024BC  EF62  F012         	goto	u5670
  1930   0024C0                     u5671:
  1931   0024C0  EFB3  F012         	goto	l569
  1932   0024C4                     u5670:
  1933   0024C4                     
  1934                           ; BSR set to: 0
  1935                           ;pathfinder_file.c: 98:                 backward(c->backward_half, mL, mR);
  1936   0024C4  C0E1  F014         	movff	maze_search@mL,backward@mL
  1937   0024C8  C0E2  F015         	movff	maze_search@mR,backward@mR
  1938   0024CC  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1939   0024D0  EE20 F008          	lfsr	2,8
  1940   0024D4  51DF               	movf	maze_search@c& (0+255),w,b
  1941   0024D6  26D9               	addwf	fsr2l,f,c
  1942   0024D8  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1943   0024DA  22DA               	addwfc	fsr2h,f,c
  1944   0024DC  50DF               	movf	indf2,w,c
  1945   0024DE  EC32  F020         	call	_backward
  1946                           
  1947                           ;pathfinder_file.c: 100:                 rightTURN(c->right_90, mL, mR);
  1948   0024E2  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1949   0024E6  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1950   0024EA  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1951   0024EE  0100               	movlb	0	; () banked
  1952   0024F0  EE20 F001          	lfsr	2,1
  1953   0024F4  51DF               	movf	maze_search@c& (0+255),w,b
  1954   0024F6  26D9               	addwf	fsr2l,f,c
  1955   0024F8  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1956   0024FA  22DA               	addwfc	fsr2h,f,c
  1957   0024FC  50DF               	movf	indf2,w,c
  1958   0024FE  EC9C  F01E         	call	_rightTURN
  1959                           
  1960                           ;pathfinder_file.c: 101:                 rightTURN(c->right_90, mL, mR);
  1961   002502  C0E1  F014         	movff	maze_search@mL,rightTURN@mL
  1962   002506  C0E2  F015         	movff	maze_search@mR,rightTURN@mR
  1963   00250A  C0E3  F016         	movff	maze_search@mR+1,rightTURN@mR+1
  1964   00250E  0100               	movlb	0	; () banked
  1965   002510  EE20 F001          	lfsr	2,1
  1966   002514  51DF               	movf	maze_search@c& (0+255),w,b
  1967   002516  26D9               	addwf	fsr2l,f,c
  1968   002518  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1969   00251A  22DA               	addwfc	fsr2h,f,c
  1970   00251C  50DF               	movf	indf2,w,c
  1971   00251E  EC9C  F01E         	call	_rightTURN
  1972                           
  1973                           ;pathfinder_file.c: 102:                 backward(c->backward_one, mL, mR);
  1974   002522  C0E1  F014         	movff	maze_search@mL,backward@mL
  1975   002526  C0E2  F015         	movff	maze_search@mR,backward@mR
  1976   00252A  C0E3  F016         	movff	maze_search@mR+1,backward@mR+1
  1977   00252E  0100               	movlb	0	; () banked
  1978   002530  EE20 F006          	lfsr	2,6
  1979   002534  51DF               	movf	maze_search@c& (0+255),w,b
  1980   002536  26D9               	addwf	fsr2l,f,c
  1981   002538  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1982   00253A  22DA               	addwfc	fsr2h,f,c
  1983   00253C  50DF               	movf	indf2,w,c
  1984   00253E  EC32  F020         	call	_backward
  1985                           
  1986                           ;pathfinder_file.c: 103:                 forward(c->forward_half, mL, mR);
  1987   002542  C0E1  F014         	movff	maze_search@mL,forward@mL
  1988   002546  C0E2  F015         	movff	maze_search@mR,forward@mR
  1989   00254A  C0E3  F016         	movff	maze_search@mR+1,forward@mR+1
  1990   00254E  0100               	movlb	0	; () banked
  1991   002550  EE20 F007          	lfsr	2,7
  1992   002554  51DF               	movf	maze_search@c& (0+255),w,b
  1993   002556  26D9               	addwf	fsr2l,f,c
  1994   002558  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1995   00255A  22DA               	addwfc	fsr2h,f,c
  1996   00255C  50DF               	movf	indf2,w,c
  1997   00255E  ECD0  F01D         	call	_forward
  1998                           
  1999                           ;pathfinder_file.c: 104:                 break;
  2000   002562  EFB5  F012         	goto	l576
  2001   002566                     l569:
  2002                           
  2003                           ; BSR set to: 0
  2004   002566  EF00  F010         	goto	l4946
  2005   00256A                     l576:
  2006   00256A  0012               	return		;funcret
  2007   00256C                     __end_of_maze_search:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _color_click_init *****************
  2011 ;; Defined at:
  2012 ;;		line 7 in file "color.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 3
  2033 ;; This function calls:
  2034 ;;		_I2C_2_Master_Init
  2035 ;;		_color_writetoaddr
  2036 ;; This function is called by:
  2037 ;;		_maze_search
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text3
  2042   004E10                     __ptext3:
  2043                           	callstack 0
  2044   004E10                     _color_click_init:
  2045                           	callstack 26
  2046   004E10                     
  2047                           ;color.c: 10:     I2C_2_Master_Init();
  2048   004E10  EC5D  F027         	call	_I2C_2_Master_Init	;wreg free
  2049   004E14                     
  2050                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  2051   004E14  0E01               	movlw	1
  2052   004E16  6E03               	movwf	color_writetoaddr@value^0,c
  2053   004E18  0E00               	movlw	0
  2054   004E1A  EC99  F027         	call	_color_writetoaddr
  2055   004E1E                     
  2056                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2057   004E1E  0E3F               	movlw	63
  2058   004E20  6E05               	movwf	??_color_click_init^0,c
  2059   004E22  0E55               	movlw	85
  2060   004E24                     u5877:
  2061   004E24  2EE8               	decfsz	wreg,f,c
  2062   004E26  D7FE               	bra	u5877
  2063   004E28  2E05               	decfsz	??_color_click_init^0,f,c
  2064   004E2A  D7FC               	bra	u5877
  2065   004E2C  0000               	nop	
  2066   004E2E                     
  2067                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  2068   004E2E  0E03               	movlw	3
  2069   004E30  6E03               	movwf	color_writetoaddr@value^0,c
  2070   004E32  0E00               	movlw	0
  2071   004E34  EC99  F027         	call	_color_writetoaddr
  2072   004E38                     
  2073                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  2074   004E38  0ED5               	movlw	213
  2075   004E3A  6E03               	movwf	color_writetoaddr@value^0,c
  2076   004E3C  0E01               	movlw	1
  2077   004E3E  EC99  F027         	call	_color_writetoaddr
  2078   004E42                     
  2079                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  2080   004E42  9287               	bcf	135,1,c	;volatile
  2081   004E44                     
  2082                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  2083   004E44  9881               	bcf	129,4,c	;volatile
  2084   004E46                     
  2085                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  2086   004E46  9E86               	bcf	134,7,c	;volatile
  2087   004E48                     
  2088                           ;color.c: 30:     LATGbits.LATG1 = 1;
  2089   004E48  827F               	bsf	127,1,c	;volatile
  2090   004E4A                     
  2091                           ;color.c: 31:     LATAbits.LATA4 = 1;
  2092   004E4A  8879               	bsf	121,4,c	;volatile
  2093   004E4C                     
  2094                           ;color.c: 32:     LATFbits.LATF7 = 1;
  2095   004E4C  8E7E               	bsf	126,7,c	;volatile
  2096   004E4E  0012               	return		;funcret
  2097   004E50                     __end_of_color_click_init:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _color_writetoaddr *****************
  2101 ;; Defined at:
  2102 ;;		line 37 in file "color.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  address         1    wreg     unsigned char 
  2105 ;;  value           1    2[COMRAM] unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  address         1    3[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2117 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;Total ram usage:        2 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 2
  2124 ;; This function calls:
  2125 ;;		_I2C_2_Master_Start
  2126 ;;		_I2C_2_Master_Stop
  2127 ;;		_I2C_2_Master_Write
  2128 ;; This function is called by:
  2129 ;;		_color_click_init
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text4
  2134   004F32                     __ptext4:
  2135                           	callstack 0
  2136   004F32                     _color_writetoaddr:
  2137                           	callstack 26
  2138                           
  2139                           ;incstack = 0
  2140                           ;color_writetoaddr@address stored from wreg
  2141   004F32  6E04               	movwf	color_writetoaddr@address^0,c
  2142   004F34                     
  2143                           ;color.c: 38:     I2C_2_Master_Start();
  2144   004F34  ECB4  F027         	call	_I2C_2_Master_Start	;wreg free
  2145                           
  2146                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2147   004F38  0E52               	movlw	82
  2148   004F3A  ECA9  F027         	call	_I2C_2_Master_Write
  2149                           
  2150                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  2151   004F3E  5004               	movf	color_writetoaddr@address^0,w,c
  2152   004F40  0980               	iorlw	128
  2153   004F42  ECA9  F027         	call	_I2C_2_Master_Write
  2154                           
  2155                           ;color.c: 41:     I2C_2_Master_Write(value);
  2156   004F46  5003               	movf	color_writetoaddr@value^0,w,c
  2157   004F48  ECA9  F027         	call	_I2C_2_Master_Write
  2158                           
  2159                           ;color.c: 42:     I2C_2_Master_Stop();
  2160   004F4C  ECAF  F027         	call	_I2C_2_Master_Stop	;wreg free
  2161   004F50  0012               	return		;funcret
  2162   004F52                     __end_of_color_writetoaddr:
  2163                           	callstack 0
  2164                           
  2165 ;; *************** function _I2C_2_Master_Init *****************
  2166 ;; Defined at:
  2167 ;;		line 4 in file "i2c.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_color_click_init
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text5
  2195   004EBA                     __ptext5:
  2196                           	callstack 0
  2197   004EBA                     _I2C_2_Master_Init:
  2198                           	callstack 28
  2199   004EBA                     
  2200                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2201   004EBA  010E               	movlb	14	; () banked
  2202   004EBC  51D9               	movf	217,w,b	;volatile
  2203   004EBE  0BF0               	andlw	-16
  2204   004EC0  0908               	iorlw	8
  2205   004EC2  6FD9               	movwf	217,b	;volatile
  2206   004EC4                     
  2207                           ; BSR set to: 14
  2208                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2209   004EC4  8BD9               	bsf	217,5,b	;volatile
  2210                           
  2211                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2212   004EC6  0E9F               	movlw	159
  2213   004EC8  6FD6               	movwf	214,b	;volatile
  2214   004ECA                     
  2215                           ; BSR set to: 14
  2216                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2217   004ECA  8A84               	bsf	132,5,c	;volatile
  2218   004ECC                     
  2219                           ; BSR set to: 14
  2220                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2221   004ECC  8C84               	bsf	132,6,c	;volatile
  2222   004ECE                     
  2223                           ; BSR set to: 14
  2224                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2225   004ECE  9BA7               	bcf	167,5,b	;volatile
  2226   004ED0                     
  2227                           ; BSR set to: 14
  2228                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2229   004ED0  9DA7               	bcf	167,6,b	;volatile
  2230                           
  2231                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2232   004ED2  0E1D               	movlw	29
  2233   004ED4  6F1D               	movwf	29,b	;volatile
  2234                           
  2235                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2236   004ED6  0E1E               	movlw	30
  2237   004ED8  6F1C               	movwf	28,b	;volatile
  2238                           
  2239                           ;i2c.c: 18:   RD5PPS=0x1C;
  2240   004EDA  0E1C               	movlw	28
  2241   004EDC  6F6F               	movwf	111,b	;volatile
  2242                           
  2243                           ;i2c.c: 19:   RD6PPS=0x1B;
  2244   004EDE  0E1B               	movlw	27
  2245   004EE0  6F70               	movwf	112,b	;volatile
  2246   004EE2                     
  2247                           ; BSR set to: 14
  2248   004EE2  0012               	return		;funcret
  2249   004EE4                     __end_of_I2C_2_Master_Init:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _color_cardCheck *****************
  2253 ;; Defined at:
  2254 ;;		line 171 in file "color.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  V               4  123[BANK0 ] float 
  2259 ;;  S               4  119[BANK0 ] float 
  2260 ;;  H               4  115[BANK0 ] float 
  2261 ;;  c               4  109[BANK0 ] float 
  2262 ;;  b               4  105[BANK0 ] float 
  2263 ;;  g               4  101[BANK0 ] float 
  2264 ;;  r               4   97[BANK0 ] float 
  2265 ;;  card_color      2  113[BANK0 ] unsigned int 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   91[COMRAM] unsigned int 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2279 ;;Total ram usage:       32 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 4
  2282 ;; This function calls:
  2283 ;;		_RGB_to_HSV
  2284 ;;		___flge
  2285 ;;		___xxtofl
  2286 ;;		_color_read_Blue
  2287 ;;		_color_read_Clear
  2288 ;;		_color_read_Green
  2289 ;;		_color_read_Red
  2290 ;; This function is called by:
  2291 ;;		_maze_search
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text6
  2296   000E02                     __ptext6:
  2297                           	callstack 0
  2298   000E02                     _color_cardCheck:
  2299                           	callstack 25
  2300   000E02                     
  2301                           ;color.c: 174:     float r = color_read_Red();
  2302   000E02  EC24  F026         	call	_color_read_Red	;wreg free
  2303   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2304   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2305   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2306   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2307   000E12  0E00               	movlw	0
  2308   000E14  ECF6  F01C         	call	___xxtofl
  2309   000E18  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  2310   000E1C  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  2311   000E20  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  2312   000E24  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  2313                           
  2314                           ;color.c: 175:     float g = color_read_Green();
  2315   000E28  EC4C  F026         	call	_color_read_Green	;wreg free
  2316   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2317   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2318   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2319   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2320   000E38  0E00               	movlw	0
  2321   000E3A  ECF6  F01C         	call	___xxtofl
  2322   000E3E  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  2323   000E42  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  2324   000E46  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  2325   000E4A  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  2326                           
  2327                           ;color.c: 176:     float b = color_read_Blue();
  2328   000E4E  EC9C  F026         	call	_color_read_Blue	;wreg free
  2329   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2330   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2331   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2332   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2333   000E5E  0E00               	movlw	0
  2334   000E60  ECF6  F01C         	call	___xxtofl
  2335   000E64  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  2336   000E68  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  2337   000E6C  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  2338   000E70  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  2339                           
  2340                           ;color.c: 179:     float c = color_read_Clear();
  2341   000E74  EC74  F026         	call	_color_read_Clear	;wreg free
  2342   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2343   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2344   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2345   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2346   000E84  0E00               	movlw	0
  2347   000E86  ECF6  F01C         	call	___xxtofl
  2348   000E8A  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  2349   000E8E  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  2350   000E92  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  2351   000E96  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  2352   000E9A                     
  2353                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  2354   000E9A  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  2355   000E9E  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  2356   000EA2  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  2357   000EA6  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  2358   000EAA  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  2359   000EAE  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  2360   000EB2  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  2361   000EB6  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  2362   000EBA  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  2363   000EBE  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  2364   000EC2  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  2365   000EC6  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  2366   000ECA  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  2367   000ECE  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  2368   000ED2  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  2369   000ED6  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  2370   000EDA  0ED3               	movlw	low color_cardCheck@H
  2371   000EDC  0100               	movlb	0	; () banked
  2372   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  2373   000EE0  0ED7               	movlw	low color_cardCheck@S
  2374   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  2375   000EE4  0EDB               	movlw	low color_cardCheck@V
  2376   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  2377   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  2378   000EEC                     
  2379                           ;color.c: 195:     unsigned int card_color = 0;
  2380   000EEC  0E00               	movlw	0
  2381   000EEE  0100               	movlb	0	; () banked
  2382   000EF0  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2383   000EF2  0E00               	movlw	0
  2384   000EF4  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2385   000EF6                     
  2386                           ; BSR set to: 0
  2387                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  2388   000EF6  0E00               	movlw	0
  2389   000EF8  6E01               	movwf	___flge@ff1^0,c
  2390   000EFA  0E80               	movlw	128
  2391   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  2392   000EFE  0EB1               	movlw	177
  2393   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  2394   000F02  0E43               	movlw	67
  2395   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  2396   000F06  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2397   000F0A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2398   000F0E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2399   000F12  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2400   000F16  EC6C  F023         	call	___flge	;wreg free
  2401   000F1A  B0D8               	btfsc	status,0,c
  2402   000F1C  EF92  F007         	goto	u3941
  2403   000F20  EF94  F007         	goto	u3940
  2404   000F24                     u3941:
  2405   000F24  EF18  F008         	goto	l3844
  2406   000F28                     u3940:
  2407   000F28  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2408   000F2C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2409   000F30  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2410   000F34  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2411   000F38  0E00               	movlw	0
  2412   000F3A  6E05               	movwf	___flge@ff2^0,c
  2413   000F3C  0E00               	movlw	0
  2414   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  2415   000F40  0EB4               	movlw	180
  2416   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  2417   000F44  0E43               	movlw	67
  2418   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  2419   000F48  EC6C  F023         	call	___flge	;wreg free
  2420   000F4C  B0D8               	btfsc	status,0,c
  2421   000F4E  EFAB  F007         	goto	u3951
  2422   000F52  EFAD  F007         	goto	u3950
  2423   000F56                     u3951:
  2424   000F56  EF18  F008         	goto	l3844
  2425   000F5A                     u3950:
  2426   000F5A  0E00               	movlw	0
  2427   000F5C  6E01               	movwf	___flge@ff1^0,c
  2428   000F5E  0E00               	movlw	0
  2429   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  2430   000F62  0EAA               	movlw	170
  2431   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  2432   000F66  0E42               	movlw	66
  2433   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  2434   000F6A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2435   000F6E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2436   000F72  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2437   000F76  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2438   000F7A  EC6C  F023         	call	___flge	;wreg free
  2439   000F7E  B0D8               	btfsc	status,0,c
  2440   000F80  EFC4  F007         	goto	u3961
  2441   000F84  EFC6  F007         	goto	u3960
  2442   000F88                     u3961:
  2443   000F88  EF18  F008         	goto	l3844
  2444   000F8C                     u3960:
  2445   000F8C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2446   000F90  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2447   000F94  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2448   000F98  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2449   000F9C  0E00               	movlw	0
  2450   000F9E  6E05               	movwf	___flge@ff2^0,c
  2451   000FA0  0E00               	movlw	0
  2452   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  2453   000FA4  0EB4               	movlw	180
  2454   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  2455   000FA8  0E42               	movlw	66
  2456   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  2457   000FAC  EC6C  F023         	call	___flge	;wreg free
  2458   000FB0  B0D8               	btfsc	status,0,c
  2459   000FB2  EFDD  F007         	goto	u3971
  2460   000FB6  EFDF  F007         	goto	u3970
  2461   000FBA                     u3971:
  2462   000FBA  EF18  F008         	goto	l3844
  2463   000FBE                     u3970:
  2464   000FBE  0E00               	movlw	0
  2465   000FC0  6E01               	movwf	___flge@ff1^0,c
  2466   000FC2  0E00               	movlw	0
  2467   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  2468   000FC6  0EA0               	movlw	160
  2469   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  2470   000FCA  0E42               	movlw	66
  2471   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  2472   000FCE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2473   000FD2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2474   000FD6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2475   000FDA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2476   000FDE  EC6C  F023         	call	___flge	;wreg free
  2477   000FE2  B0D8               	btfsc	status,0,c
  2478   000FE4  EFF6  F007         	goto	u3981
  2479   000FE8  EFF8  F007         	goto	u3980
  2480   000FEC                     u3981:
  2481   000FEC  EF18  F008         	goto	l3844
  2482   000FF0                     u3980:
  2483   000FF0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2484   000FF4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2485   000FF8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2486   000FFC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2487   001000  0E00               	movlw	0
  2488   001002  6E05               	movwf	___flge@ff2^0,c
  2489   001004  0E00               	movlw	0
  2490   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  2491   001008  0EAA               	movlw	170
  2492   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  2493   00100C  0E42               	movlw	66
  2494   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  2495   001010  EC6C  F023         	call	___flge	;wreg free
  2496   001014  B0D8               	btfsc	status,0,c
  2497   001016  EF0F  F008         	goto	u3991
  2498   00101A  EF11  F008         	goto	u3990
  2499   00101E                     u3991:
  2500   00101E  EF18  F008         	goto	l3844
  2501   001022                     u3990:
  2502   001022  0E00               	movlw	0
  2503   001024  0100               	movlb	0	; () banked
  2504   001026  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2505   001028  0E01               	movlw	1
  2506   00102A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2507   00102C  EF18  F00C         	goto	l3936
  2508   001030                     l3844:
  2509   001030  0E00               	movlw	0
  2510   001032  6E01               	movwf	___flge@ff1^0,c
  2511   001034  0E00               	movlw	0
  2512   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  2513   001038  0E86               	movlw	134
  2514   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  2515   00103C  0E42               	movlw	66
  2516   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  2517   001040  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2518   001044  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2519   001048  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2520   00104C  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2521   001050  EC6C  F023         	call	___flge	;wreg free
  2522   001054  B0D8               	btfsc	status,0,c
  2523   001056  EF2F  F008         	goto	u4001
  2524   00105A  EF31  F008         	goto	u4000
  2525   00105E                     u4001:
  2526   00105E  EFB5  F008         	goto	l3858
  2527   001062                     u4000:
  2528   001062  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2529   001066  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2530   00106A  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2531   00106E  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2532   001072  0E00               	movlw	0
  2533   001074  6E05               	movwf	___flge@ff2^0,c
  2534   001076  0E00               	movlw	0
  2535   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  2536   00107A  0E9E               	movlw	158
  2537   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  2538   00107E  0E42               	movlw	66
  2539   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  2540   001082  EC6C  F023         	call	___flge	;wreg free
  2541   001086  B0D8               	btfsc	status,0,c
  2542   001088  EF48  F008         	goto	u4011
  2543   00108C  EF4A  F008         	goto	u4010
  2544   001090                     u4011:
  2545   001090  EFB5  F008         	goto	l3858
  2546   001094                     u4010:
  2547   001094  0E00               	movlw	0
  2548   001096  6E01               	movwf	___flge@ff1^0,c
  2549   001098  0E00               	movlw	0
  2550   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  2551   00109C  0E48               	movlw	72
  2552   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  2553   0010A0  0E42               	movlw	66
  2554   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  2555   0010A4  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2556   0010A8  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2557   0010AC  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2558   0010B0  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2559   0010B4  EC6C  F023         	call	___flge	;wreg free
  2560   0010B8  B0D8               	btfsc	status,0,c
  2561   0010BA  EF61  F008         	goto	u4021
  2562   0010BE  EF63  F008         	goto	u4020
  2563   0010C2                     u4021:
  2564   0010C2  EFB5  F008         	goto	l3858
  2565   0010C6                     u4020:
  2566   0010C6  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2567   0010CA  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2568   0010CE  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2569   0010D2  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2570   0010D6  0E00               	movlw	0
  2571   0010D8  6E05               	movwf	___flge@ff2^0,c
  2572   0010DA  0E00               	movlw	0
  2573   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  2574   0010DE  0E64               	movlw	100
  2575   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  2576   0010E2  0E42               	movlw	66
  2577   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  2578   0010E6  EC6C  F023         	call	___flge	;wreg free
  2579   0010EA  B0D8               	btfsc	status,0,c
  2580   0010EC  EF7A  F008         	goto	u4031
  2581   0010F0  EF7C  F008         	goto	u4030
  2582   0010F4                     u4031:
  2583   0010F4  EFB5  F008         	goto	l3858
  2584   0010F8                     u4030:
  2585   0010F8  0E00               	movlw	0
  2586   0010FA  6E01               	movwf	___flge@ff1^0,c
  2587   0010FC  0E00               	movlw	0
  2588   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  2589   001100  0E20               	movlw	32
  2590   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  2591   001104  0E42               	movlw	66
  2592   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  2593   001108  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2594   00110C  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2595   001110  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2596   001114  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2597   001118  EC6C  F023         	call	___flge	;wreg free
  2598   00111C  B0D8               	btfsc	status,0,c
  2599   00111E  EF93  F008         	goto	u4041
  2600   001122  EF95  F008         	goto	u4040
  2601   001126                     u4041:
  2602   001126  EFB5  F008         	goto	l3858
  2603   00112A                     u4040:
  2604   00112A  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2605   00112E  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2606   001132  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2607   001136  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2608   00113A  0E00               	movlw	0
  2609   00113C  6E05               	movwf	___flge@ff2^0,c
  2610   00113E  0E00               	movlw	0
  2611   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  2612   001142  0E38               	movlw	56
  2613   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  2614   001146  0E42               	movlw	66
  2615   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  2616   00114A  EC6C  F023         	call	___flge	;wreg free
  2617   00114E  B0D8               	btfsc	status,0,c
  2618   001150  EFAC  F008         	goto	u4051
  2619   001154  EFAE  F008         	goto	u4050
  2620   001158                     u4051:
  2621   001158  EFB5  F008         	goto	l3858
  2622   00115C                     u4050:
  2623   00115C  0E00               	movlw	0
  2624   00115E  0100               	movlb	0	; () banked
  2625   001160  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2626   001162  0E02               	movlw	2
  2627   001164  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2628   001166  EF18  F00C         	goto	l3936
  2629   00116A                     l3858:
  2630   00116A  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2631   00116E  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2632   001172  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2633   001176  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2634   00117A  0E00               	movlw	0
  2635   00117C  6E05               	movwf	___flge@ff2^0,c
  2636   00117E  0E00               	movlw	0
  2637   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  2638   001182  0E20               	movlw	32
  2639   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  2640   001186  0E41               	movlw	65
  2641   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  2642   00118A  EC6C  F023         	call	___flge	;wreg free
  2643   00118E  B0D8               	btfsc	status,0,c
  2644   001190  EFCC  F008         	goto	u4061
  2645   001194  EFCE  F008         	goto	u4060
  2646   001198                     u4061:
  2647   001198  EF07  F009         	goto	l3866
  2648   00119C                     u4060:
  2649   00119C  0E00               	movlw	0
  2650   00119E  6E01               	movwf	___flge@ff1^0,c
  2651   0011A0  0E00               	movlw	0
  2652   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  2653   0011A4  0EF0               	movlw	240
  2654   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  2655   0011A8  0E41               	movlw	65
  2656   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  2657   0011AC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2658   0011B0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2659   0011B4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2660   0011B8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2661   0011BC  EC6C  F023         	call	___flge	;wreg free
  2662   0011C0  B0D8               	btfsc	status,0,c
  2663   0011C2  EFE5  F008         	goto	u4071
  2664   0011C6  EFE7  F008         	goto	u4070
  2665   0011CA                     u4071:
  2666   0011CA  EF07  F009         	goto	l3866
  2667   0011CE                     u4070:
  2668   0011CE  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2669   0011D2  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2670   0011D6  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2671   0011DA  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2672   0011DE  0E00               	movlw	0
  2673   0011E0  6E05               	movwf	___flge@ff2^0,c
  2674   0011E2  0E00               	movlw	0
  2675   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  2676   0011E6  0E0C               	movlw	12
  2677   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  2678   0011EA  0E42               	movlw	66
  2679   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  2680   0011EE  EC6C  F023         	call	___flge	;wreg free
  2681   0011F2  B0D8               	btfsc	status,0,c
  2682   0011F4  EFFE  F008         	goto	u4081
  2683   0011F8  EF00  F009         	goto	u4080
  2684   0011FC                     u4081:
  2685   0011FC  EF07  F009         	goto	l3866
  2686   001200                     u4080:
  2687   001200  0E00               	movlw	0
  2688   001202  0100               	movlb	0	; () banked
  2689   001204  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2690   001206  0E03               	movlw	3
  2691   001208  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2692   00120A  EF18  F00C         	goto	l3936
  2693   00120E                     l3866:
  2694   00120E  0E00               	movlw	0
  2695   001210  6E01               	movwf	___flge@ff1^0,c
  2696   001212  0E00               	movlw	0
  2697   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  2698   001216  0EA0               	movlw	160
  2699   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  2700   00121A  0E41               	movlw	65
  2701   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  2702   00121E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2703   001222  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2704   001226  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2705   00122A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2706   00122E  EC6C  F023         	call	___flge	;wreg free
  2707   001232  B0D8               	btfsc	status,0,c
  2708   001234  EF1E  F009         	goto	u4091
  2709   001238  EF20  F009         	goto	u4090
  2710   00123C                     u4091:
  2711   00123C  EFA4  F009         	goto	l3880
  2712   001240                     u4090:
  2713   001240  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2714   001244  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2715   001248  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2716   00124C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2717   001250  0E00               	movlw	0
  2718   001252  6E05               	movwf	___flge@ff2^0,c
  2719   001254  0E00               	movlw	0
  2720   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  2721   001258  0EC8               	movlw	200
  2722   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  2723   00125C  0E41               	movlw	65
  2724   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  2725   001260  EC6C  F023         	call	___flge	;wreg free
  2726   001264  B0D8               	btfsc	status,0,c
  2727   001266  EF37  F009         	goto	u4101
  2728   00126A  EF39  F009         	goto	u4100
  2729   00126E                     u4101:
  2730   00126E  EFA4  F009         	goto	l3880
  2731   001272                     u4100:
  2732   001272  0E00               	movlw	0
  2733   001274  6E01               	movwf	___flge@ff1^0,c
  2734   001276  0E00               	movlw	0
  2735   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  2736   00127A  0E82               	movlw	130
  2737   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  2738   00127E  0E42               	movlw	66
  2739   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  2740   001282  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2741   001286  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2742   00128A  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2743   00128E  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2744   001292  EC6C  F023         	call	___flge	;wreg free
  2745   001296  B0D8               	btfsc	status,0,c
  2746   001298  EF50  F009         	goto	u4111
  2747   00129C  EF52  F009         	goto	u4110
  2748   0012A0                     u4111:
  2749   0012A0  EFA4  F009         	goto	l3880
  2750   0012A4                     u4110:
  2751   0012A4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2752   0012A8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2753   0012AC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2754   0012B0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2755   0012B4  0E00               	movlw	0
  2756   0012B6  6E05               	movwf	___flge@ff2^0,c
  2757   0012B8  0E00               	movlw	0
  2758   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2759   0012BC  0E8C               	movlw	140
  2760   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2761   0012C0  0E42               	movlw	66
  2762   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2763   0012C4  EC6C  F023         	call	___flge	;wreg free
  2764   0012C8  B0D8               	btfsc	status,0,c
  2765   0012CA  EF69  F009         	goto	u4121
  2766   0012CE  EF6B  F009         	goto	u4120
  2767   0012D2                     u4121:
  2768   0012D2  EFA4  F009         	goto	l3880
  2769   0012D6                     u4120:
  2770   0012D6  0E00               	movlw	0
  2771   0012D8  6E01               	movwf	___flge@ff1^0,c
  2772   0012DA  0E00               	movlw	0
  2773   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  2774   0012DE  0E58               	movlw	88
  2775   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  2776   0012E2  0E42               	movlw	66
  2777   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  2778   0012E6  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2779   0012EA  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2780   0012EE  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2781   0012F2  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2782   0012F6  EC6C  F023         	call	___flge	;wreg free
  2783   0012FA  B0D8               	btfsc	status,0,c
  2784   0012FC  EF82  F009         	goto	u4131
  2785   001300  EF84  F009         	goto	u4130
  2786   001304                     u4131:
  2787   001304  EFA4  F009         	goto	l3880
  2788   001308                     u4130:
  2789   001308  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2790   00130C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2791   001310  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2792   001314  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2793   001318  0E00               	movlw	0
  2794   00131A  6E05               	movwf	___flge@ff2^0,c
  2795   00131C  0E00               	movlw	0
  2796   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  2797   001320  0E64               	movlw	100
  2798   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  2799   001324  0E42               	movlw	66
  2800   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  2801   001328  EC6C  F023         	call	___flge	;wreg free
  2802   00132C  B0D8               	btfsc	status,0,c
  2803   00132E  EF9B  F009         	goto	u4141
  2804   001332  EF9D  F009         	goto	u4140
  2805   001336                     u4141:
  2806   001336  EFA4  F009         	goto	l3880
  2807   00133A                     u4140:
  2808   00133A  0E00               	movlw	0
  2809   00133C  0100               	movlb	0	; () banked
  2810   00133E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2811   001340  0E04               	movlw	4
  2812   001342  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2813   001344  EF18  F00C         	goto	l3936
  2814   001348                     l3880:
  2815   001348  0E00               	movlw	0
  2816   00134A  6E01               	movwf	___flge@ff1^0,c
  2817   00134C  0E00               	movlw	0
  2818   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  2819   001350  0E50               	movlw	80
  2820   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  2821   001354  0E41               	movlw	65
  2822   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  2823   001358  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2824   00135C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2825   001360  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2826   001364  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2827   001368  EC6C  F023         	call	___flge	;wreg free
  2828   00136C  B0D8               	btfsc	status,0,c
  2829   00136E  EFBB  F009         	goto	u4151
  2830   001372  EFBD  F009         	goto	u4150
  2831   001376                     u4151:
  2832   001376  EF41  F00A         	goto	l3894
  2833   00137A                     u4150:
  2834   00137A  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2835   00137E  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2836   001382  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2837   001386  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2838   00138A  0E00               	movlw	0
  2839   00138C  6E05               	movwf	___flge@ff2^0,c
  2840   00138E  0E00               	movlw	0
  2841   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  2842   001392  0E90               	movlw	144
  2843   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  2844   001396  0E41               	movlw	65
  2845   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  2846   00139A  EC6C  F023         	call	___flge	;wreg free
  2847   00139E  B0D8               	btfsc	status,0,c
  2848   0013A0  EFD4  F009         	goto	u4161
  2849   0013A4  EFD6  F009         	goto	u4160
  2850   0013A8                     u4161:
  2851   0013A8  EF41  F00A         	goto	l3894
  2852   0013AC                     u4160:
  2853   0013AC  0E00               	movlw	0
  2854   0013AE  6E01               	movwf	___flge@ff1^0,c
  2855   0013B0  0E00               	movlw	0
  2856   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  2857   0013B4  0E5C               	movlw	92
  2858   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  2859   0013B8  0E42               	movlw	66
  2860   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  2861   0013BC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2862   0013C0  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2863   0013C4  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2864   0013C8  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2865   0013CC  EC6C  F023         	call	___flge	;wreg free
  2866   0013D0  B0D8               	btfsc	status,0,c
  2867   0013D2  EFED  F009         	goto	u4171
  2868   0013D6  EFEF  F009         	goto	u4170
  2869   0013DA                     u4171:
  2870   0013DA  EF41  F00A         	goto	l3894
  2871   0013DE                     u4170:
  2872   0013DE  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2873   0013E2  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2874   0013E6  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2875   0013EA  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2876   0013EE  0E00               	movlw	0
  2877   0013F0  6E05               	movwf	___flge@ff2^0,c
  2878   0013F2  0E00               	movlw	0
  2879   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  2880   0013F6  0E70               	movlw	112
  2881   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  2882   0013FA  0E42               	movlw	66
  2883   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  2884   0013FE  EC6C  F023         	call	___flge	;wreg free
  2885   001402  B0D8               	btfsc	status,0,c
  2886   001404  EF06  F00A         	goto	u4181
  2887   001408  EF08  F00A         	goto	u4180
  2888   00140C                     u4181:
  2889   00140C  EF41  F00A         	goto	l3894
  2890   001410                     u4180:
  2891   001410  0E00               	movlw	0
  2892   001412  6E01               	movwf	___flge@ff1^0,c
  2893   001414  0E00               	movlw	0
  2894   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  2895   001418  0E48               	movlw	72
  2896   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  2897   00141C  0E42               	movlw	66
  2898   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  2899   001420  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2900   001424  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2901   001428  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2902   00142C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2903   001430  EC6C  F023         	call	___flge	;wreg free
  2904   001434  B0D8               	btfsc	status,0,c
  2905   001436  EF1F  F00A         	goto	u4191
  2906   00143A  EF21  F00A         	goto	u4190
  2907   00143E                     u4191:
  2908   00143E  EF41  F00A         	goto	l3894
  2909   001442                     u4190:
  2910   001442  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2911   001446  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2912   00144A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2913   00144E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2914   001452  0E00               	movlw	0
  2915   001454  6E05               	movwf	___flge@ff2^0,c
  2916   001456  0E00               	movlw	0
  2917   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  2918   00145A  0E58               	movlw	88
  2919   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  2920   00145E  0E42               	movlw	66
  2921   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  2922   001462  EC6C  F023         	call	___flge	;wreg free
  2923   001466  B0D8               	btfsc	status,0,c
  2924   001468  EF38  F00A         	goto	u4201
  2925   00146C  EF3A  F00A         	goto	u4200
  2926   001470                     u4201:
  2927   001470  EF41  F00A         	goto	l3894
  2928   001474                     u4200:
  2929   001474  0E00               	movlw	0
  2930   001476  0100               	movlb	0	; () banked
  2931   001478  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2932   00147A  0E05               	movlw	5
  2933   00147C  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2934   00147E  EF18  F00C         	goto	l3936
  2935   001482                     l3894:
  2936   001482  0E00               	movlw	0
  2937   001484  6E01               	movwf	___flge@ff1^0,c
  2938   001486  0E00               	movlw	0
  2939   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  2940   00148A  0EA0               	movlw	160
  2941   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  2942   00148E  0E40               	movlw	64
  2943   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  2944   001492  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2945   001496  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2946   00149A  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2947   00149E  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2948   0014A2  EC6C  F023         	call	___flge	;wreg free
  2949   0014A6  B0D8               	btfsc	status,0,c
  2950   0014A8  EF58  F00A         	goto	u4211
  2951   0014AC  EF5A  F00A         	goto	u4210
  2952   0014B0                     u4211:
  2953   0014B0  EFDE  F00A         	goto	l3908
  2954   0014B4                     u4210:
  2955   0014B4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2956   0014B8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2957   0014BC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2958   0014C0  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2959   0014C4  0E00               	movlw	0
  2960   0014C6  6E05               	movwf	___flge@ff2^0,c
  2961   0014C8  0E00               	movlw	0
  2962   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  2963   0014CC  0E20               	movlw	32
  2964   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  2965   0014D0  0E41               	movlw	65
  2966   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  2967   0014D4  EC6C  F023         	call	___flge	;wreg free
  2968   0014D8  B0D8               	btfsc	status,0,c
  2969   0014DA  EF71  F00A         	goto	u4221
  2970   0014DE  EF73  F00A         	goto	u4220
  2971   0014E2                     u4221:
  2972   0014E2  EFDE  F00A         	goto	l3908
  2973   0014E6                     u4220:
  2974   0014E6  0E00               	movlw	0
  2975   0014E8  6E01               	movwf	___flge@ff1^0,c
  2976   0014EA  0E00               	movlw	0
  2977   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  2978   0014EE  0E8C               	movlw	140
  2979   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  2980   0014F2  0E42               	movlw	66
  2981   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  2982   0014F6  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2983   0014FA  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2984   0014FE  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2985   001502  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2986   001506  EC6C  F023         	call	___flge	;wreg free
  2987   00150A  B0D8               	btfsc	status,0,c
  2988   00150C  EF8A  F00A         	goto	u4231
  2989   001510  EF8C  F00A         	goto	u4230
  2990   001514                     u4231:
  2991   001514  EFDE  F00A         	goto	l3908
  2992   001518                     u4230:
  2993   001518  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2994   00151C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2995   001520  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2996   001524  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2997   001528  0E00               	movlw	0
  2998   00152A  6E05               	movwf	___flge@ff2^0,c
  2999   00152C  0E00               	movlw	0
  3000   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  3001   001530  0E96               	movlw	150
  3002   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  3003   001534  0E42               	movlw	66
  3004   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  3005   001538  EC6C  F023         	call	___flge	;wreg free
  3006   00153C  B0D8               	btfsc	status,0,c
  3007   00153E  EFA3  F00A         	goto	u4241
  3008   001542  EFA5  F00A         	goto	u4240
  3009   001546                     u4241:
  3010   001546  EFDE  F00A         	goto	l3908
  3011   00154A                     u4240:
  3012   00154A  0E00               	movlw	0
  3013   00154C  6E01               	movwf	___flge@ff1^0,c
  3014   00154E  0E00               	movlw	0
  3015   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  3016   001552  0E78               	movlw	120
  3017   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  3018   001556  0E42               	movlw	66
  3019   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  3020   00155A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3021   00155E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3022   001562  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3023   001566  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3024   00156A  EC6C  F023         	call	___flge	;wreg free
  3025   00156E  B0D8               	btfsc	status,0,c
  3026   001570  EFBC  F00A         	goto	u4251
  3027   001574  EFBE  F00A         	goto	u4250
  3028   001578                     u4251:
  3029   001578  EFDE  F00A         	goto	l3908
  3030   00157C                     u4250:
  3031   00157C  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3032   001580  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3033   001584  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3034   001588  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3035   00158C  0E00               	movlw	0
  3036   00158E  6E05               	movwf	___flge@ff2^0,c
  3037   001590  0E00               	movlw	0
  3038   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  3039   001594  0E86               	movlw	134
  3040   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  3041   001598  0E42               	movlw	66
  3042   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  3043   00159C  EC6C  F023         	call	___flge	;wreg free
  3044   0015A0  B0D8               	btfsc	status,0,c
  3045   0015A2  EFD5  F00A         	goto	u4261
  3046   0015A6  EFD7  F00A         	goto	u4260
  3047   0015AA                     u4261:
  3048   0015AA  EFDE  F00A         	goto	l3908
  3049   0015AE                     u4260:
  3050   0015AE  0E00               	movlw	0
  3051   0015B0  0100               	movlb	0	; () banked
  3052   0015B2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3053   0015B4  0E06               	movlw	6
  3054   0015B6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3055   0015B8  EF18  F00C         	goto	l3936
  3056   0015BC                     l3908:
  3057   0015BC  0E00               	movlw	0
  3058   0015BE  6E01               	movwf	___flge@ff1^0,c
  3059   0015C0  0E00               	movlw	0
  3060   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  3061   0015C4  0E94               	movlw	148
  3062   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  3063   0015C8  0E42               	movlw	66
  3064   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  3065   0015CC  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3066   0015D0  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3067   0015D4  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3068   0015D8  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3069   0015DC  EC6C  F023         	call	___flge	;wreg free
  3070   0015E0  B0D8               	btfsc	status,0,c
  3071   0015E2  EFF5  F00A         	goto	u4271
  3072   0015E6  EFF7  F00A         	goto	u4270
  3073   0015EA                     u4271:
  3074   0015EA  EF7B  F00B         	goto	l3922
  3075   0015EE                     u4270:
  3076   0015EE  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3077   0015F2  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3078   0015F6  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3079   0015FA  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3080   0015FE  0E00               	movlw	0
  3081   001600  6E05               	movwf	___flge@ff2^0,c
  3082   001602  0E00               	movlw	0
  3083   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  3084   001606  0EAA               	movlw	170
  3085   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  3086   00160A  0E42               	movlw	66
  3087   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  3088   00160E  EC6C  F023         	call	___flge	;wreg free
  3089   001612  B0D8               	btfsc	status,0,c
  3090   001614  EF0E  F00B         	goto	u4281
  3091   001618  EF10  F00B         	goto	u4280
  3092   00161C                     u4281:
  3093   00161C  EF7B  F00B         	goto	l3922
  3094   001620                     u4280:
  3095   001620  0E00               	movlw	0
  3096   001622  6E01               	movwf	___flge@ff1^0,c
  3097   001624  0E00               	movlw	0
  3098   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  3099   001628  0EE0               	movlw	224
  3100   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  3101   00162C  0E41               	movlw	65
  3102   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  3103   001630  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3104   001634  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3105   001638  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3106   00163C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3107   001640  EC6C  F023         	call	___flge	;wreg free
  3108   001644  B0D8               	btfsc	status,0,c
  3109   001646  EF27  F00B         	goto	u4291
  3110   00164A  EF29  F00B         	goto	u4290
  3111   00164E                     u4291:
  3112   00164E  EF7B  F00B         	goto	l3922
  3113   001652                     u4290:
  3114   001652  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3115   001656  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3116   00165A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3117   00165E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3118   001662  0E00               	movlw	0
  3119   001664  6E05               	movwf	___flge@ff2^0,c
  3120   001666  0E00               	movlw	0
  3121   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  3122   00166A  0E04               	movlw	4
  3123   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  3124   00166E  0E42               	movlw	66
  3125   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  3126   001672  EC6C  F023         	call	___flge	;wreg free
  3127   001676  B0D8               	btfsc	status,0,c
  3128   001678  EF40  F00B         	goto	u4301
  3129   00167C  EF42  F00B         	goto	u4300
  3130   001680                     u4301:
  3131   001680  EF7B  F00B         	goto	l3922
  3132   001684                     u4300:
  3133   001684  0E00               	movlw	0
  3134   001686  6E01               	movwf	___flge@ff1^0,c
  3135   001688  0E00               	movlw	0
  3136   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  3137   00168C  0E14               	movlw	20
  3138   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  3139   001690  0E42               	movlw	66
  3140   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  3141   001694  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3142   001698  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3143   00169C  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3144   0016A0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3145   0016A4  EC6C  F023         	call	___flge	;wreg free
  3146   0016A8  B0D8               	btfsc	status,0,c
  3147   0016AA  EF59  F00B         	goto	u4311
  3148   0016AE  EF5B  F00B         	goto	u4310
  3149   0016B2                     u4311:
  3150   0016B2  EF7B  F00B         	goto	l3922
  3151   0016B6                     u4310:
  3152   0016B6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3153   0016BA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3154   0016BE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3155   0016C2  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3156   0016C6  0E00               	movlw	0
  3157   0016C8  6E05               	movwf	___flge@ff2^0,c
  3158   0016CA  0E00               	movlw	0
  3159   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  3160   0016CE  0E28               	movlw	40
  3161   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  3162   0016D2  0E42               	movlw	66
  3163   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  3164   0016D6  EC6C  F023         	call	___flge	;wreg free
  3165   0016DA  B0D8               	btfsc	status,0,c
  3166   0016DC  EF72  F00B         	goto	u4321
  3167   0016E0  EF74  F00B         	goto	u4320
  3168   0016E4                     u4321:
  3169   0016E4  EF7B  F00B         	goto	l3922
  3170   0016E8                     u4320:
  3171   0016E8  0E00               	movlw	0
  3172   0016EA  0100               	movlb	0	; () banked
  3173   0016EC  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3174   0016EE  0E07               	movlw	7
  3175   0016F0  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3176   0016F2  EF18  F00C         	goto	l3936
  3177   0016F6                     l3922:
  3178   0016F6  0E00               	movlw	0
  3179   0016F8  6E01               	movwf	___flge@ff1^0,c
  3180   0016FA  0E00               	movlw	0
  3181   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  3182   0016FE  0EB0               	movlw	176
  3183   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  3184   001702  0E41               	movlw	65
  3185   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  3186   001706  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3187   00170A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3188   00170E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3189   001712  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3190   001716  EC6C  F023         	call	___flge	;wreg free
  3191   00171A  B0D8               	btfsc	status,0,c
  3192   00171C  EF92  F00B         	goto	u4331
  3193   001720  EF94  F00B         	goto	u4330
  3194   001724                     u4331:
  3195   001724  EF18  F00C         	goto	l99
  3196   001728                     u4330:
  3197   001728  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3198   00172C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3199   001730  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3200   001734  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3201   001738  0E00               	movlw	0
  3202   00173A  6E05               	movwf	___flge@ff2^0,c
  3203   00173C  0E00               	movlw	0
  3204   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  3205   001740  0ED8               	movlw	216
  3206   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  3207   001744  0E41               	movlw	65
  3208   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  3209   001748  EC6C  F023         	call	___flge	;wreg free
  3210   00174C  B0D8               	btfsc	status,0,c
  3211   00174E  EFAB  F00B         	goto	u4341
  3212   001752  EFAD  F00B         	goto	u4340
  3213   001756                     u4341:
  3214   001756  EF18  F00C         	goto	l99
  3215   00175A                     u4340:
  3216   00175A  0E00               	movlw	0
  3217   00175C  6E01               	movwf	___flge@ff1^0,c
  3218   00175E  0E00               	movlw	0
  3219   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  3220   001762  0E40               	movlw	64
  3221   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  3222   001766  0E42               	movlw	66
  3223   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  3224   00176A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3225   00176E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3226   001772  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3227   001776  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3228   00177A  EC6C  F023         	call	___flge	;wreg free
  3229   00177E  B0D8               	btfsc	status,0,c
  3230   001780  EFC4  F00B         	goto	u4351
  3231   001784  EFC6  F00B         	goto	u4350
  3232   001788                     u4351:
  3233   001788  EF18  F00C         	goto	l99
  3234   00178C                     u4350:
  3235   00178C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3236   001790  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3237   001794  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3238   001798  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3239   00179C  0E00               	movlw	0
  3240   00179E  6E05               	movwf	___flge@ff2^0,c
  3241   0017A0  0E00               	movlw	0
  3242   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  3243   0017A4  0E54               	movlw	84
  3244   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  3245   0017A8  0E42               	movlw	66
  3246   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  3247   0017AC  EC6C  F023         	call	___flge	;wreg free
  3248   0017B0  B0D8               	btfsc	status,0,c
  3249   0017B2  EFDD  F00B         	goto	u4361
  3250   0017B6  EFDF  F00B         	goto	u4360
  3251   0017BA                     u4361:
  3252   0017BA  EF18  F00C         	goto	l99
  3253   0017BE                     u4360:
  3254   0017BE  0E00               	movlw	0
  3255   0017C0  6E01               	movwf	___flge@ff1^0,c
  3256   0017C2  0E00               	movlw	0
  3257   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  3258   0017C6  0E34               	movlw	52
  3259   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  3260   0017CA  0E42               	movlw	66
  3261   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  3262   0017CE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3263   0017D2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3264   0017D6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3265   0017DA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3266   0017DE  EC6C  F023         	call	___flge	;wreg free
  3267   0017E2  B0D8               	btfsc	status,0,c
  3268   0017E4  EFF6  F00B         	goto	u4371
  3269   0017E8  EFF8  F00B         	goto	u4370
  3270   0017EC                     u4371:
  3271   0017EC  EF18  F00C         	goto	l99
  3272   0017F0                     u4370:
  3273   0017F0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3274   0017F4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3275   0017F8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3276   0017FC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3277   001800  0E00               	movlw	0
  3278   001802  6E05               	movwf	___flge@ff2^0,c
  3279   001804  0E00               	movlw	0
  3280   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  3281   001808  0E48               	movlw	72
  3282   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  3283   00180C  0E42               	movlw	66
  3284   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  3285   001810  EC6C  F023         	call	___flge	;wreg free
  3286   001814  B0D8               	btfsc	status,0,c
  3287   001816  EF0F  F00C         	goto	u4381
  3288   00181A  EF11  F00C         	goto	u4380
  3289   00181E                     u4381:
  3290   00181E  EF18  F00C         	goto	l99
  3291   001822                     u4380:
  3292   001822  0E00               	movlw	0
  3293   001824  0100               	movlb	0	; () banked
  3294   001826  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3295   001828  0E08               	movlw	8
  3296   00182A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3297   00182C  EF18  F00C         	goto	l3936
  3298   001830                     l99:
  3299   001830                     l3936:
  3300                           
  3301                           ;color.c: 222:     return card_color;
  3302   001830  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  3303   001834  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  3304   001838  0012               	return		;funcret
  3305   00183A                     __end_of_color_cardCheck:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _color_read_Red *****************
  3309 ;; Defined at:
  3310 ;;		line 46 in file "color.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  tmp             2    9[COMRAM] unsigned int 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2    4[COMRAM] unsigned int 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;Total ram usage:        7 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 2
  3331 ;; This function calls:
  3332 ;;		_I2C_2_Master_Read
  3333 ;;		_I2C_2_Master_RepStart
  3334 ;;		_I2C_2_Master_Start
  3335 ;;		_I2C_2_Master_Stop
  3336 ;;		_I2C_2_Master_Write
  3337 ;; This function is called by:
  3338 ;;		_color_cardCheck
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text7
  3343   004C48                     __ptext7:
  3344                           	callstack 0
  3345   004C48                     _color_read_Red:
  3346                           	callstack 26
  3347   004C48                     
  3348                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  3349   004C48  ECB4  F027         	call	_I2C_2_Master_Start	;wreg free
  3350                           
  3351                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  3352   004C4C  0E52               	movlw	82
  3353   004C4E  ECA9  F027         	call	_I2C_2_Master_Write
  3354                           
  3355                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  3356   004C52  0EB6               	movlw	182
  3357   004C54  ECA9  F027         	call	_I2C_2_Master_Write
  3358                           
  3359                           ;color.c: 52:  I2C_2_Master_RepStart();
  3360   004C58  ECB9  F027         	call	_I2C_2_Master_RepStart	;wreg free
  3361                           
  3362                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  3363   004C5C  0E53               	movlw	83
  3364   004C5E  ECA9  F027         	call	_I2C_2_Master_Write
  3365                           
  3366                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  3367   004C62  0E01               	movlw	1
  3368   004C64  ECE7  F026         	call	_I2C_2_Master_Read
  3369   004C68  6E07               	movwf	??_color_read_Red^0,c
  3370   004C6A  5007               	movf	??_color_read_Red^0,w,c
  3371   004C6C  6E0A               	movwf	color_read_Red@tmp^0,c
  3372   004C6E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3373                           
  3374                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3375   004C70  0E00               	movlw	0
  3376   004C72  ECE7  F026         	call	_I2C_2_Master_Read
  3377   004C76  6E07               	movwf	??_color_read_Red^0,c
  3378   004C78  5007               	movf	??_color_read_Red^0,w,c
  3379   004C7A  6E09               	movwf	(??_color_read_Red+2)^0,c
  3380   004C7C  6A08               	clrf	(??_color_read_Red+1)^0,c
  3381   004C7E  500A               	movf	color_read_Red@tmp^0,w,c
  3382   004C80  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3383   004C82  6E0A               	movwf	color_read_Red@tmp^0,c
  3384   004C84  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3385   004C86  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3386   004C88  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3387                           
  3388                           ;color.c: 56:  I2C_2_Master_Stop();
  3389   004C8A  ECAF  F027         	call	_I2C_2_Master_Stop	;wreg free
  3390   004C8E                     
  3391                           ;color.c: 57:  return tmp;
  3392   004C8E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3393   004C92  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3394   004C96  0012               	return		;funcret
  3395   004C98                     __end_of_color_read_Red:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _color_read_Green *****************
  3399 ;; Defined at:
  3400 ;;		line 60 in file "color.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  tmp             2    9[COMRAM] unsigned int 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2    4[COMRAM] unsigned int 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3416 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3417 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3418 ;;Total ram usage:        7 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 2
  3421 ;; This function calls:
  3422 ;;		_I2C_2_Master_Read
  3423 ;;		_I2C_2_Master_RepStart
  3424 ;;		_I2C_2_Master_Start
  3425 ;;		_I2C_2_Master_Stop
  3426 ;;		_I2C_2_Master_Write
  3427 ;; This function is called by:
  3428 ;;		_color_cardCheck
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text8
  3433   004C98                     __ptext8:
  3434                           	callstack 0
  3435   004C98                     _color_read_Green:
  3436                           	callstack 26
  3437   004C98                     
  3438                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  3439   004C98  ECB4  F027         	call	_I2C_2_Master_Start	;wreg free
  3440                           
  3441                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  3442   004C9C  0E52               	movlw	82
  3443   004C9E  ECA9  F027         	call	_I2C_2_Master_Write
  3444                           
  3445                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  3446   004CA2  0EB8               	movlw	184
  3447   004CA4  ECA9  F027         	call	_I2C_2_Master_Write
  3448                           
  3449                           ;color.c: 66:  I2C_2_Master_RepStart();
  3450   004CA8  ECB9  F027         	call	_I2C_2_Master_RepStart	;wreg free
  3451                           
  3452                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  3453   004CAC  0E53               	movlw	83
  3454   004CAE  ECA9  F027         	call	_I2C_2_Master_Write
  3455                           
  3456                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  3457   004CB2  0E01               	movlw	1
  3458   004CB4  ECE7  F026         	call	_I2C_2_Master_Read
  3459   004CB8  6E07               	movwf	??_color_read_Green^0,c
  3460   004CBA  5007               	movf	??_color_read_Green^0,w,c
  3461   004CBC  6E0A               	movwf	color_read_Green@tmp^0,c
  3462   004CBE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3463                           
  3464                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3465   004CC0  0E00               	movlw	0
  3466   004CC2  ECE7  F026         	call	_I2C_2_Master_Read
  3467   004CC6  6E07               	movwf	??_color_read_Green^0,c
  3468   004CC8  5007               	movf	??_color_read_Green^0,w,c
  3469   004CCA  6E09               	movwf	(??_color_read_Green+2)^0,c
  3470   004CCC  6A08               	clrf	(??_color_read_Green+1)^0,c
  3471   004CCE  500A               	movf	color_read_Green@tmp^0,w,c
  3472   004CD0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3473   004CD2  6E0A               	movwf	color_read_Green@tmp^0,c
  3474   004CD4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3475   004CD6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3476   004CD8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3477                           
  3478                           ;color.c: 70:  I2C_2_Master_Stop();
  3479   004CDA  ECAF  F027         	call	_I2C_2_Master_Stop	;wreg free
  3480   004CDE                     
  3481                           ;color.c: 71:  return tmp;
  3482   004CDE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3483   004CE2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3484   004CE6  0012               	return		;funcret
  3485   004CE8                     __end_of_color_read_Green:
  3486                           	callstack 0
  3487                           
  3488 ;; *************** function _color_read_Clear *****************
  3489 ;; Defined at:
  3490 ;;		line 88 in file "color.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  tmp             2    9[COMRAM] unsigned int 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  2    4[COMRAM] unsigned int 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3505 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3506 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3507 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3508 ;;Total ram usage:        7 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 2
  3511 ;; This function calls:
  3512 ;;		_I2C_2_Master_Read
  3513 ;;		_I2C_2_Master_RepStart
  3514 ;;		_I2C_2_Master_Start
  3515 ;;		_I2C_2_Master_Stop
  3516 ;;		_I2C_2_Master_Write
  3517 ;; This function is called by:
  3518 ;;		_color_cardCheck
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text9
  3523   004CE8                     __ptext9:
  3524                           	callstack 0
  3525   004CE8                     _color_read_Clear:
  3526                           	callstack 26
  3527   004CE8                     
  3528                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3529   004CE8  ECB4  F027         	call	_I2C_2_Master_Start	;wreg free
  3530                           
  3531                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3532   004CEC  0E52               	movlw	82
  3533   004CEE  ECA9  F027         	call	_I2C_2_Master_Write
  3534                           
  3535                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  3536   004CF2  0EB4               	movlw	180
  3537   004CF4  ECA9  F027         	call	_I2C_2_Master_Write
  3538                           
  3539                           ;color.c: 96:  I2C_2_Master_RepStart();
  3540   004CF8  ECB9  F027         	call	_I2C_2_Master_RepStart	;wreg free
  3541                           
  3542                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3543   004CFC  0E53               	movlw	83
  3544   004CFE  ECA9  F027         	call	_I2C_2_Master_Write
  3545                           
  3546                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3547   004D02  0E01               	movlw	1
  3548   004D04  ECE7  F026         	call	_I2C_2_Master_Read
  3549   004D08  6E07               	movwf	??_color_read_Clear^0,c
  3550   004D0A  5007               	movf	??_color_read_Clear^0,w,c
  3551   004D0C  6E0A               	movwf	color_read_Clear@tmp^0,c
  3552   004D0E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3553                           
  3554                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3555   004D10  0E00               	movlw	0
  3556   004D12  ECE7  F026         	call	_I2C_2_Master_Read
  3557   004D16  6E07               	movwf	??_color_read_Clear^0,c
  3558   004D18  5007               	movf	??_color_read_Clear^0,w,c
  3559   004D1A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3560   004D1C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3561   004D1E  500A               	movf	color_read_Clear@tmp^0,w,c
  3562   004D20  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3563   004D22  6E0A               	movwf	color_read_Clear@tmp^0,c
  3564   004D24  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3565   004D26  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3566   004D28  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3567                           
  3568                           ;color.c: 100:  I2C_2_Master_Stop();
  3569   004D2A  ECAF  F027         	call	_I2C_2_Master_Stop	;wreg free
  3570   004D2E                     
  3571                           ;color.c: 101:  return tmp;
  3572   004D2E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3573   004D32  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3574   004D36  0012               	return		;funcret
  3575   004D38                     __end_of_color_read_Clear:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _color_read_Blue *****************
  3579 ;; Defined at:
  3580 ;;		line 74 in file "color.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  tmp             2    9[COMRAM] unsigned int 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  2    4[COMRAM] unsigned int 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3595 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3596 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;Total ram usage:        7 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 2
  3601 ;; This function calls:
  3602 ;;		_I2C_2_Master_Read
  3603 ;;		_I2C_2_Master_RepStart
  3604 ;;		_I2C_2_Master_Start
  3605 ;;		_I2C_2_Master_Stop
  3606 ;;		_I2C_2_Master_Write
  3607 ;; This function is called by:
  3608 ;;		_color_cardCheck
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text10
  3613   004D38                     __ptext10:
  3614                           	callstack 0
  3615   004D38                     _color_read_Blue:
  3616                           	callstack 26
  3617   004D38                     
  3618                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  3619   004D38  ECB4  F027         	call	_I2C_2_Master_Start	;wreg free
  3620                           
  3621                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  3622   004D3C  0E52               	movlw	82
  3623   004D3E  ECA9  F027         	call	_I2C_2_Master_Write
  3624                           
  3625                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  3626   004D42  0EBA               	movlw	186
  3627   004D44  ECA9  F027         	call	_I2C_2_Master_Write
  3628                           
  3629                           ;color.c: 80:  I2C_2_Master_RepStart();
  3630   004D48  ECB9  F027         	call	_I2C_2_Master_RepStart	;wreg free
  3631                           
  3632                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3633   004D4C  0E53               	movlw	83
  3634   004D4E  ECA9  F027         	call	_I2C_2_Master_Write
  3635                           
  3636                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  3637   004D52  0E01               	movlw	1
  3638   004D54  ECE7  F026         	call	_I2C_2_Master_Read
  3639   004D58  6E07               	movwf	??_color_read_Blue^0,c
  3640   004D5A  5007               	movf	??_color_read_Blue^0,w,c
  3641   004D5C  6E0A               	movwf	color_read_Blue@tmp^0,c
  3642   004D5E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3643                           
  3644                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3645   004D60  0E00               	movlw	0
  3646   004D62  ECE7  F026         	call	_I2C_2_Master_Read
  3647   004D66  6E07               	movwf	??_color_read_Blue^0,c
  3648   004D68  5007               	movf	??_color_read_Blue^0,w,c
  3649   004D6A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3650   004D6C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3651   004D6E  500A               	movf	color_read_Blue@tmp^0,w,c
  3652   004D70  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3653   004D72  6E0A               	movwf	color_read_Blue@tmp^0,c
  3654   004D74  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3655   004D76  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3656   004D78  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3657                           
  3658                           ;color.c: 84:  I2C_2_Master_Stop();
  3659   004D7A  ECAF  F027         	call	_I2C_2_Master_Stop	;wreg free
  3660   004D7E                     
  3661                           ;color.c: 85:  return tmp;
  3662   004D7E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3663   004D82  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3664   004D86  0012               	return		;funcret
  3665   004D88                     __end_of_color_read_Blue:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _I2C_2_Master_Write *****************
  3669 ;; Defined at:
  3670 ;;		line 45 in file "i2c.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  data_byte       1    wreg     unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  data_byte       1    1[COMRAM] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;Total ram usage:        1 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 1
  3691 ;; This function calls:
  3692 ;;		_I2C_2_Master_Idle
  3693 ;; This function is called by:
  3694 ;;		_color_writetoaddr
  3695 ;;		_color_read_Red
  3696 ;;		_color_read_Green
  3697 ;;		_color_read_Blue
  3698 ;;		_color_read_Clear
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text11
  3703   004F52                     __ptext11:
  3704                           	callstack 0
  3705   004F52                     _I2C_2_Master_Write:
  3706                           	callstack 26
  3707                           
  3708                           ;incstack = 0
  3709                           ;I2C_2_Master_Write@data_byte stored from wreg
  3710   004F52  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3711   004F54                     
  3712                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3713   004F54  EC72  F027         	call	_I2C_2_Master_Idle	;wreg free
  3714   004F58                     
  3715                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3716   004F58  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3717   004F5C  0012               	return		;funcret
  3718   004F5E                     __end_of_I2C_2_Master_Write:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _I2C_2_Master_Stop *****************
  3722 ;; Defined at:
  3723 ;;		line 39 in file "i2c.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 1
  3744 ;; This function calls:
  3745 ;;		_I2C_2_Master_Idle
  3746 ;; This function is called by:
  3747 ;;		_color_writetoaddr
  3748 ;;		_color_read_Red
  3749 ;;		_color_read_Green
  3750 ;;		_color_read_Blue
  3751 ;;		_color_read_Clear
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text12
  3756   004F5E                     __ptext12:
  3757                           	callstack 0
  3758   004F5E                     _I2C_2_Master_Stop:
  3759                           	callstack 26
  3760   004F5E                     
  3761                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3762   004F5E  EC72  F027         	call	_I2C_2_Master_Idle	;wreg free
  3763   004F62                     
  3764                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3765   004F62  010E               	movlb	14	; () banked
  3766   004F64  85DA               	bsf	218,2,b	;volatile
  3767   004F66                     
  3768                           ; BSR set to: 14
  3769   004F66  0012               	return		;funcret
  3770   004F68                     __end_of_I2C_2_Master_Stop:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _I2C_2_Master_Start *****************
  3774 ;; Defined at:
  3775 ;;		line 27 in file "i2c.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used: 1
  3795 ;; Hardware stack levels required when called: 1
  3796 ;; This function calls:
  3797 ;;		_I2C_2_Master_Idle
  3798 ;; This function is called by:
  3799 ;;		_color_writetoaddr
  3800 ;;		_color_read_Red
  3801 ;;		_color_read_Green
  3802 ;;		_color_read_Blue
  3803 ;;		_color_read_Clear
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text13
  3808   004F68                     __ptext13:
  3809                           	callstack 0
  3810   004F68                     _I2C_2_Master_Start:
  3811                           	callstack 26
  3812   004F68                     
  3813                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3814   004F68  EC72  F027         	call	_I2C_2_Master_Idle	;wreg free
  3815   004F6C                     
  3816                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3817   004F6C  010E               	movlb	14	; () banked
  3818   004F6E  81DA               	bsf	218,0,b	;volatile
  3819   004F70                     
  3820                           ; BSR set to: 14
  3821   004F70  0012               	return		;funcret
  3822   004F72                     __end_of_I2C_2_Master_Start:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _I2C_2_Master_RepStart *****************
  3826 ;; Defined at:
  3827 ;;		line 33 in file "i2c.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 1
  3848 ;; This function calls:
  3849 ;;		_I2C_2_Master_Idle
  3850 ;; This function is called by:
  3851 ;;		_color_read_Red
  3852 ;;		_color_read_Green
  3853 ;;		_color_read_Blue
  3854 ;;		_color_read_Clear
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text14
  3859   004F72                     __ptext14:
  3860                           	callstack 0
  3861   004F72                     _I2C_2_Master_RepStart:
  3862                           	callstack 26
  3863   004F72                     
  3864                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3865   004F72  EC72  F027         	call	_I2C_2_Master_Idle	;wreg free
  3866   004F76                     
  3867                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3868   004F76  010E               	movlb	14	; () banked
  3869   004F78  83DA               	bsf	218,1,b	;volatile
  3870   004F7A                     
  3871                           ; BSR set to: 14
  3872   004F7A  0012               	return		;funcret
  3873   004F7C                     __end_of_I2C_2_Master_RepStart:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _I2C_2_Master_Read *****************
  3877 ;; Defined at:
  3878 ;;		line 51 in file "i2c.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  ack             1    wreg     unsigned char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  ack             1    2[COMRAM] unsigned char 
  3883 ;;  tmp             1    3[COMRAM] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      unsigned char 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0, cstack
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;Total ram usage:        3 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 1
  3900 ;; This function calls:
  3901 ;;		_I2C_2_Master_Idle
  3902 ;; This function is called by:
  3903 ;;		_color_read_Red
  3904 ;;		_color_read_Green
  3905 ;;		_color_read_Blue
  3906 ;;		_color_read_Clear
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text15
  3911   004DCE                     __ptext15:
  3912                           	callstack 0
  3913   004DCE                     _I2C_2_Master_Read:
  3914                           	callstack 26
  3915                           
  3916                           ; BSR set to: 14
  3917                           ;incstack = 0
  3918                           ;I2C_2_Master_Read@ack stored from wreg
  3919   004DCE  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3920   004DD0                     
  3921                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3922   004DD0  EC72  F027         	call	_I2C_2_Master_Idle	;wreg free
  3923   004DD4                     
  3924                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3925   004DD4  010E               	movlb	14	; () banked
  3926   004DD6  87DA               	bsf	218,3,b	;volatile
  3927                           
  3928                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3929   004DD8  EC72  F027         	call	_I2C_2_Master_Idle	;wreg free
  3930   004DDC                     
  3931                           ;i2c.c: 57:   tmp = SSP2BUF;
  3932   004DDC  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3933                           
  3934                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3935   004DE0  EC72  F027         	call	_I2C_2_Master_Idle	;wreg free
  3936   004DE4                     
  3937                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3938   004DE4  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3939   004DE6  B4D8               	btfsc	status,2,c
  3940   004DE8  EFF8  F026         	goto	u3621
  3941   004DEC  EFFC  F026         	goto	u3620
  3942   004DF0                     u3621:
  3943   004DF0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3944   004DF2  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3945   004DF4  EFFD  F026         	goto	u3638
  3946   004DF8                     u3620:
  3947   004DF8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3948   004DFA                     u3638:
  3949   004DFA  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3950   004DFC  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3951   004DFE  010E               	movlb	14	; () banked
  3952   004E00  51DA               	movf	218,w,b	;volatile
  3953   004E02  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3954   004E04  0BDF               	andlw	-33
  3955   004E06  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3956   004E08  6FDA               	movwf	218,b	;volatile
  3957   004E0A                     
  3958                           ; BSR set to: 14
  3959                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3960   004E0A  89DA               	bsf	218,4,b	;volatile
  3961   004E0C                     
  3962                           ; BSR set to: 14
  3963                           ;i2c.c: 61:   return tmp;
  3964   004E0C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3965   004E0E                     
  3966                           ; BSR set to: 14
  3967   004E0E  0012               	return		;funcret
  3968   004E10                     __end_of_I2C_2_Master_Read:
  3969                           	callstack 0
  3970                           
  3971 ;; *************** function _I2C_2_Master_Idle *****************
  3972 ;; Defined at:
  3973 ;;		line 22 in file "i2c.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;		None
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;Total ram usage:        1 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_I2C_2_Master_Start
  3997 ;;		_I2C_2_Master_RepStart
  3998 ;;		_I2C_2_Master_Stop
  3999 ;;		_I2C_2_Master_Write
  4000 ;;		_I2C_2_Master_Read
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text16
  4005   004EE4                     __ptext16:
  4006                           	callstack 0
  4007   004EE4                     _I2C_2_Master_Idle:
  4008                           	callstack 26
  4009   004EE4                     l410:
  4010   004EE4  010E               	movlb	14	; () banked
  4011   004EE6  B5D8               	btfsc	216,2,b	;volatile
  4012   004EE8  EF78  F027         	goto	u2981
  4013   004EEC  EF7A  F027         	goto	u2980
  4014   004EF0                     u2981:
  4015   004EF0  EF72  F027         	goto	l410
  4016   004EF4                     u2980:
  4017   004EF4                     
  4018                           ; BSR set to: 14
  4019   004EF4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4020   004EF8  0E1F               	movlw	31
  4021   004EFA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4022   004EFC  A4D8               	btfss	status,2,c
  4023   004EFE  EF83  F027         	goto	u2991
  4024   004F02  EF85  F027         	goto	u2990
  4025   004F06                     u2991:
  4026   004F06  EF72  F027         	goto	l410
  4027   004F0A                     u2990:
  4028   004F0A                     
  4029                           ; BSR set to: 14
  4030   004F0A  0012               	return		;funcret
  4031   004F0C                     __end_of_I2C_2_Master_Idle:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _RGB_to_HSV *****************
  4035 ;; Defined at:
  4036 ;;		line 125 in file "color.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  R               4   10[BANK0 ] float 
  4039 ;;  G               4   14[BANK0 ] float 
  4040 ;;  B               4   18[BANK0 ] float 
  4041 ;;  C               4   22[BANK0 ] float 
  4042 ;;  H               1   26[BANK0 ] PTR float 
  4043 ;;		 -> color_cardCheck@H(4), 
  4044 ;;  S               1   27[BANK0 ] PTR float 
  4045 ;;		 -> color_cardCheck@S(4), 
  4046 ;;  V               1   28[BANK0 ] PTR float 
  4047 ;;		 -> color_cardCheck@V(4), 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  b               4   93[BANK0 ] float 
  4050 ;;  g               4   89[BANK0 ] float 
  4051 ;;  r               4   85[BANK0 ] float 
  4052 ;;  maxRGB          4   81[BANK0 ] float 
  4053 ;;  deltaRGB        4   77[BANK0 ] float 
  4054 ;;  H_temp          4   73[BANK0 ] float 
  4055 ;;  minRGB          4   57[BANK0 ] float 
  4056 ;;  c_norm          4   29[BANK0 ] float 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4066 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4067 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;Total ram usage:       87 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 3
  4073 ;; This function calls:
  4074 ;;		___fladd
  4075 ;;		___fldiv
  4076 ;;		___fleq
  4077 ;;		___flge
  4078 ;;		___flmul
  4079 ;;		___flsub
  4080 ;;		_custom_floatmodulo
  4081 ;; This function is called by:
  4082 ;;		_color_cardCheck
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text17
  4087   00183A                     __ptext17:
  4088                           	callstack 0
  4089   00183A                     _RGB_to_HSV:
  4090                           	callstack 25
  4091   00183A                     
  4092                           ;color.c: 128:     float r = R/65535.0;
  4093   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  4094   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  4095   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  4096   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  4097   00184A  0E00               	movlw	0
  4098   00184C  6E26               	movwf	___fldiv@a^0,c
  4099   00184E  0EFF               	movlw	255
  4100   001850  6E27               	movwf	(___fldiv@a+1)^0,c
  4101   001852  0E7F               	movlw	127
  4102   001854  6E28               	movwf	(___fldiv@a+2)^0,c
  4103   001856  0E47               	movlw	71
  4104   001858  6E29               	movwf	(___fldiv@a+3)^0,c
  4105   00185A  ECC6  F019         	call	___fldiv	;wreg free
  4106   00185E  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  4107   001862  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  4108   001866  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  4109   00186A  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  4110                           
  4111                           ;color.c: 129:     float g = G/65535.0;
  4112   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  4113   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  4114   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  4115   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  4116   00187E  0E00               	movlw	0
  4117   001880  6E26               	movwf	___fldiv@a^0,c
  4118   001882  0EFF               	movlw	255
  4119   001884  6E27               	movwf	(___fldiv@a+1)^0,c
  4120   001886  0E7F               	movlw	127
  4121   001888  6E28               	movwf	(___fldiv@a+2)^0,c
  4122   00188A  0E47               	movlw	71
  4123   00188C  6E29               	movwf	(___fldiv@a+3)^0,c
  4124   00188E  ECC6  F019         	call	___fldiv	;wreg free
  4125   001892  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  4126   001896  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  4127   00189A  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  4128   00189E  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  4129                           
  4130                           ;color.c: 130:     float b = B/65535.0;
  4131   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  4132   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  4133   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  4134   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  4135   0018B2  0E00               	movlw	0
  4136   0018B4  6E26               	movwf	___fldiv@a^0,c
  4137   0018B6  0EFF               	movlw	255
  4138   0018B8  6E27               	movwf	(___fldiv@a+1)^0,c
  4139   0018BA  0E7F               	movlw	127
  4140   0018BC  6E28               	movwf	(___fldiv@a+2)^0,c
  4141   0018BE  0E47               	movlw	71
  4142   0018C0  6E29               	movwf	(___fldiv@a+3)^0,c
  4143   0018C2  ECC6  F019         	call	___fldiv	;wreg free
  4144   0018C6  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  4145   0018CA  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  4146   0018CE  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  4147   0018D2  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  4148                           
  4149                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  4150   0018D6  0E00               	movlw	0
  4151   0018D8  6E26               	movwf	___fldiv@a^0,c
  4152   0018DA  0EFF               	movlw	255
  4153   0018DC  6E27               	movwf	(___fldiv@a+1)^0,c
  4154   0018DE  0E7F               	movlw	127
  4155   0018E0  6E28               	movwf	(___fldiv@a+2)^0,c
  4156   0018E2  0E47               	movlw	71
  4157   0018E4  6E29               	movwf	(___fldiv@a+3)^0,c
  4158   0018E6  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  4159   0018EA  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  4160   0018EE  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  4161   0018F2  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  4162   0018F6  ECC6  F019         	call	___fldiv	;wreg free
  4163   0018FA  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2720
  4164   0018FE  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2720+1
  4165   001902  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2720+2
  4166   001906  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2720+3
  4167                           
  4168                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  4169   00190A  0E00               	movlw	0
  4170   00190C  6E22               	movwf	___fldiv@b^0,c
  4171   00190E  0E00               	movlw	0
  4172   001910  6E23               	movwf	(___fldiv@b+1)^0,c
  4173   001912  0E80               	movlw	128
  4174   001914  6E24               	movwf	(___fldiv@b+2)^0,c
  4175   001916  0E3F               	movlw	63
  4176   001918  6E25               	movwf	(___fldiv@b+3)^0,c
  4177   00191A  C081  F026         	movff	_RGB_to_HSV$2720,___fldiv@a
  4178   00191E  C082  F027         	movff	_RGB_to_HSV$2720+1,___fldiv@a+1
  4179   001922  C083  F028         	movff	_RGB_to_HSV$2720+2,___fldiv@a+2
  4180   001926  C084  F029         	movff	_RGB_to_HSV$2720+3,___fldiv@a+3
  4181   00192A  ECC6  F019         	call	___fldiv	;wreg free
  4182   00192E  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  4183   001932  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  4184   001936  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  4185   00193A  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  4186                           
  4187                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  4188   00193E  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4189   001942  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4190   001946  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4191   00194A  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4192   00194E  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4193   001952  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4194   001956  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4195   00195A  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4196   00195E  EC6C  F023         	call	___flge	;wreg free
  4197   001962  A0D8               	btfss	status,0,c
  4198   001964  EFB6  F00C         	goto	u3731
  4199   001968  EFB8  F00C         	goto	u3730
  4200   00196C                     u3731:
  4201   00196C  EFED  F00C         	goto	l3682
  4202   001970                     u3730:
  4203   001970  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4204   001974  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4205   001978  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4206   00197C  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4207   001980  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4208   001984  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4209   001988  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4210   00198C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4211   001990  EC6C  F023         	call	___flge	;wreg free
  4212   001994  A0D8               	btfss	status,0,c
  4213   001996  EFCF  F00C         	goto	u3741
  4214   00199A  EFD1  F00C         	goto	u3740
  4215   00199E                     u3741:
  4216   00199E  EFDB  F00C         	goto	l58
  4217   0019A2                     u3740:
  4218   0019A2  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  4219   0019A6  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  4220   0019AA  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  4221   0019AE  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  4222   0019B2  EFE3  F00C         	goto	l60
  4223   0019B6                     l58:
  4224   0019B6  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  4225   0019BA  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  4226   0019BE  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  4227   0019C2  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  4228   0019C6                     l60:
  4229   0019C6  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  4230   0019CA  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  4231   0019CE  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  4232   0019D2  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  4233   0019D6  EF20  F00D         	goto	l3686
  4234   0019DA                     l3682:
  4235   0019DA  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4236   0019DE  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4237   0019E2  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4238   0019E6  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4239   0019EA  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4240   0019EE  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4241   0019F2  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4242   0019F6  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4243   0019FA  EC6C  F023         	call	___flge	;wreg free
  4244   0019FE  A0D8               	btfss	status,0,c
  4245   001A00  EF04  F00D         	goto	u3751
  4246   001A04  EF06  F00D         	goto	u3750
  4247   001A08                     u3751:
  4248   001A08  EF10  F00D         	goto	l62
  4249   001A0C                     u3750:
  4250   001A0C  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  4251   001A10  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  4252   001A14  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  4253   001A18  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  4254   001A1C  EF18  F00D         	goto	l64
  4255   001A20                     l62:
  4256   001A20  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  4257   001A24  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  4258   001A28  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  4259   001A2C  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  4260   001A30                     l64:
  4261   001A30  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  4262   001A34  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  4263   001A38  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  4264   001A3C  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  4265   001A40                     l3686:
  4266                           
  4267                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  4268   001A40  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4269   001A44  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4270   001A48  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4271   001A4C  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4272   001A50  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4273   001A54  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4274   001A58  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4275   001A5C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4276   001A60  EC6C  F023         	call	___flge	;wreg free
  4277   001A64  A0D8               	btfss	status,0,c
  4278   001A66  EF37  F00D         	goto	u3761
  4279   001A6A  EF39  F00D         	goto	u3760
  4280   001A6E                     u3761:
  4281   001A6E  EF6E  F00D         	goto	l3692
  4282   001A72                     u3760:
  4283   001A72  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4284   001A76  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4285   001A7A  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4286   001A7E  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4287   001A82  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4288   001A86  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4289   001A8A  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4290   001A8E  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4291   001A92  EC6C  F023         	call	___flge	;wreg free
  4292   001A96  A0D8               	btfss	status,0,c
  4293   001A98  EF50  F00D         	goto	u3771
  4294   001A9C  EF52  F00D         	goto	u3770
  4295   001AA0                     u3771:
  4296   001AA0  EF5C  F00D         	goto	l70
  4297   001AA4                     u3770:
  4298   001AA4  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  4299   001AA8  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  4300   001AAC  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  4301   001AB0  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  4302   001AB4  EF64  F00D         	goto	l72
  4303   001AB8                     l70:
  4304   001AB8  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  4305   001ABC  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  4306   001AC0  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  4307   001AC4  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  4308   001AC8                     l72:
  4309   001AC8  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  4310   001ACC  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  4311   001AD0  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  4312   001AD4  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  4313   001AD8  EFA1  F00D         	goto	l3696
  4314   001ADC                     l3692:
  4315   001ADC  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4316   001AE0  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4317   001AE4  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4318   001AE8  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4319   001AEC  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4320   001AF0  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4321   001AF4  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4322   001AF8  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4323   001AFC  EC6C  F023         	call	___flge	;wreg free
  4324   001B00  A0D8               	btfss	status,0,c
  4325   001B02  EF85  F00D         	goto	u3781
  4326   001B06  EF87  F00D         	goto	u3780
  4327   001B0A                     u3781:
  4328   001B0A  EF91  F00D         	goto	l74
  4329   001B0E                     u3780:
  4330   001B0E  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  4331   001B12  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  4332   001B16  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  4333   001B1A  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  4334   001B1E  EF99  F00D         	goto	l76
  4335   001B22                     l74:
  4336   001B22  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  4337   001B26  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  4338   001B2A  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  4339   001B2E  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  4340   001B32                     l76:
  4341   001B32  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  4342   001B36  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  4343   001B3A  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  4344   001B3E  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  4345   001B42                     l3696:
  4346                           
  4347                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  4348   001B42  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  4349   001B46  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  4350   001B4A  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  4351   001B4E  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  4352   001B52  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  4353   001B56  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  4354   001B5A  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  4355   001B5E  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  4356   001B62  ECC4  F026         	call	___flsub	;wreg free
  4357   001B66  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  4358   001B6A  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  4359   001B6E  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  4360   001B72  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  4361                           
  4362                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  4363   001B76  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  4364   001B7A  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  4365   001B7E  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  4366   001B82  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  4367   001B86  0E00               	movlw	0
  4368   001B88  6E05               	movwf	___fleq@ff2^0,c
  4369   001B8A  0E00               	movlw	0
  4370   001B8C  6E06               	movwf	(___fleq@ff2+1)^0,c
  4371   001B8E  0E00               	movlw	0
  4372   001B90  6E07               	movwf	(___fleq@ff2+2)^0,c
  4373   001B92  0E00               	movlw	0
  4374   001B94  6E08               	movwf	(___fleq@ff2+3)^0,c
  4375   001B96  EC1C  F025         	call	___fleq	;wreg free
  4376   001B9A  A0D8               	btfss	status,0,c
  4377   001B9C  EFD2  F00D         	goto	u3791
  4378   001BA0  EFD4  F00D         	goto	u3790
  4379   001BA4                     u3791:
  4380   001BA4  EFDF  F00D         	goto	l3700
  4381   001BA8                     u3790:
  4382   001BA8  0E00               	movlw	0
  4383   001BAA  0100               	movlb	0	; () banked
  4384   001BAC  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  4385   001BAE  0E00               	movlw	0
  4386   001BB0  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  4387   001BB2  0E00               	movlw	0
  4388   001BB4  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  4389   001BB6  0E00               	movlw	0
  4390   001BB8  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  4391   001BBA  EF40  F00F         	goto	l3720
  4392   001BBE                     l3700:
  4393   001BBE  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4394   001BC2  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4395   001BC6  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4396   001BCA  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4397   001BCE  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  4398   001BD2  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  4399   001BD6  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  4400   001BDA  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  4401   001BDE  EC1C  F025         	call	___fleq	;wreg free
  4402   001BE2  A0D8               	btfss	status,0,c
  4403   001BE4  EFF6  F00D         	goto	u3801
  4404   001BE8  EFF8  F00D         	goto	u3800
  4405   001BEC                     u3801:
  4406   001BEC  EF5A  F00E         	goto	l3708
  4407   001BF0                     u3800:
  4408   001BF0  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4409   001BF4  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4410   001BF8  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4411   001BFC  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4412   001C00  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  4413   001C04  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  4414   001C08  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  4415   001C0C  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  4416   001C10  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  4417   001C14  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  4418   001C18  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  4419   001C1C  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  4420   001C20  ECC4  F026         	call	___flsub	;wreg free
  4421   001C24  C01A  F022         	movff	?___flsub,___fldiv@b
  4422   001C28  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4423   001C2C  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4424   001C30  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4425   001C34  ECC6  F019         	call	___fldiv	;wreg free
  4426   001C38  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2721
  4427   001C3C  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2721+1
  4428   001C40  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2721+2
  4429   001C44  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2721+3
  4430   001C48  0E00               	movlw	0
  4431   001C4A  6E58               	movwf	custom_floatmodulo@y^0,c
  4432   001C4C  0E00               	movlw	0
  4433   001C4E  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  4434   001C50  0EC0               	movlw	192
  4435   001C52  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  4436   001C54  0E40               	movlw	64
  4437   001C56  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  4438   001C58  C085  F054         	movff	_RGB_to_HSV$2721,custom_floatmodulo@x
  4439   001C5C  C086  F055         	movff	_RGB_to_HSV$2721+1,custom_floatmodulo@x+1
  4440   001C60  C087  F056         	movff	_RGB_to_HSV$2721+2,custom_floatmodulo@x+2
  4441   001C64  C088  F057         	movff	_RGB_to_HSV$2721+3,custom_floatmodulo@x+3
  4442   001C68  EC5D  F022         	call	_custom_floatmodulo	;wreg free
  4443   001C6C  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2722
  4444   001C70  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2722+1
  4445   001C74  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2722+2
  4446   001C78  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2722+3
  4447   001C7C  C089  F03B         	movff	_RGB_to_HSV$2722,___flmul@b
  4448   001C80  C08A  F03C         	movff	_RGB_to_HSV$2722+1,___flmul@b+1
  4449   001C84  C08B  F03D         	movff	_RGB_to_HSV$2722+2,___flmul@b+2
  4450   001C88  C08C  F03E         	movff	_RGB_to_HSV$2722+3,___flmul@b+3
  4451   001C8C  0E00               	movlw	0
  4452   001C8E  6E3F               	movwf	___flmul@a^0,c
  4453   001C90  0E00               	movlw	0
  4454   001C92  6E40               	movwf	(___flmul@a+1)^0,c
  4455   001C94  0E70               	movlw	112
  4456   001C96  6E41               	movwf	(___flmul@a+2)^0,c
  4457   001C98  0E42               	movlw	66
  4458   001C9A  6E42               	movwf	(___flmul@a+3)^0,c
  4459   001C9C  ECB1  F017         	call	___flmul	;wreg free
  4460   001CA0  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4461   001CA4  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4462   001CA8  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4463   001CAC  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4464   001CB0  EF40  F00F         	goto	l3720
  4465   001CB4                     l3708:
  4466   001CB4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4467   001CB8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4468   001CBC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4469   001CC0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4470   001CC4  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  4471   001CC8  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  4472   001CCC  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  4473   001CD0  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  4474   001CD4  EC1C  F025         	call	___fleq	;wreg free
  4475   001CD8  A0D8               	btfss	status,0,c
  4476   001CDA  EF71  F00E         	goto	u3811
  4477   001CDE  EF73  F00E         	goto	u3810
  4478   001CE2                     u3811:
  4479   001CE2  EFCD  F00E         	goto	l3714
  4480   001CE6                     u3810:
  4481   001CE6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4482   001CEA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4483   001CEE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4484   001CF2  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4485   001CF6  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  4486   001CFA  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  4487   001CFE  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  4488   001D02  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  4489   001D06  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  4490   001D0A  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  4491   001D0E  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  4492   001D12  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  4493   001D16  ECC4  F026         	call	___flsub	;wreg free
  4494   001D1A  C01A  F022         	movff	?___flsub,___fldiv@b
  4495   001D1E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4496   001D22  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4497   001D26  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4498   001D2A  ECC6  F019         	call	___fldiv	;wreg free
  4499   001D2E  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2723
  4500   001D32  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2723+1
  4501   001D36  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2723+2
  4502   001D3A  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2723+3
  4503   001D3E  0E00               	movlw	0
  4504   001D40  6E05               	movwf	___fladd@a^0,c
  4505   001D42  0E00               	movlw	0
  4506   001D44  6E06               	movwf	(___fladd@a+1)^0,c
  4507   001D46  0E00               	movlw	0
  4508   001D48  6E07               	movwf	(___fladd@a+2)^0,c
  4509   001D4A  0E40               	movlw	64
  4510   001D4C  6E08               	movwf	(___fladd@a+3)^0,c
  4511   001D4E  C0A5  F001         	movff	_RGB_to_HSV$2723,___fladd@b
  4512   001D52  C0A6  F002         	movff	_RGB_to_HSV$2723+1,___fladd@b+1
  4513   001D56  C0A7  F003         	movff	_RGB_to_HSV$2723+2,___fladd@b+2
  4514   001D5A  C0A8  F004         	movff	_RGB_to_HSV$2723+3,___fladd@b+3
  4515   001D5E  EC51  F015         	call	___fladd	;wreg free
  4516   001D62  C001  F03B         	movff	?___fladd,___flmul@b
  4517   001D66  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4518   001D6A  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4519   001D6E  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4520   001D72  0E00               	movlw	0
  4521   001D74  6E3F               	movwf	___flmul@a^0,c
  4522   001D76  0E00               	movlw	0
  4523   001D78  6E40               	movwf	(___flmul@a+1)^0,c
  4524   001D7A  0E70               	movlw	112
  4525   001D7C  6E41               	movwf	(___flmul@a+2)^0,c
  4526   001D7E  0E42               	movlw	66
  4527   001D80  6E42               	movwf	(___flmul@a+3)^0,c
  4528   001D82  ECB1  F017         	call	___flmul	;wreg free
  4529   001D86  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4530   001D8A  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4531   001D8E  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4532   001D92  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4533   001D96  EF40  F00F         	goto	l3720
  4534   001D9A                     l3714:
  4535   001D9A  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4536   001D9E  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4537   001DA2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4538   001DA6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4539   001DAA  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  4540   001DAE  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  4541   001DB2  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  4542   001DB6  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  4543   001DBA  EC1C  F025         	call	___fleq	;wreg free
  4544   001DBE  A0D8               	btfss	status,0,c
  4545   001DC0  EFE4  F00E         	goto	u3821
  4546   001DC4  EFE6  F00E         	goto	u3820
  4547   001DC8                     u3821:
  4548   001DC8  EF40  F00F         	goto	l80
  4549   001DCC                     u3820:
  4550   001DCC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4551   001DD0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4552   001DD4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4553   001DD8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4554   001DDC  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  4555   001DE0  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  4556   001DE4  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  4557   001DE8  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  4558   001DEC  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  4559   001DF0  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  4560   001DF4  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  4561   001DF8  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  4562   001DFC  ECC4  F026         	call	___flsub	;wreg free
  4563   001E00  C01A  F022         	movff	?___flsub,___fldiv@b
  4564   001E04  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4565   001E08  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4566   001E0C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4567   001E10  ECC6  F019         	call	___fldiv	;wreg free
  4568   001E14  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2723
  4569   001E18  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2723+1
  4570   001E1C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2723+2
  4571   001E20  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2723+3
  4572   001E24  0E00               	movlw	0
  4573   001E26  6E05               	movwf	___fladd@a^0,c
  4574   001E28  0E00               	movlw	0
  4575   001E2A  6E06               	movwf	(___fladd@a+1)^0,c
  4576   001E2C  0E80               	movlw	128
  4577   001E2E  6E07               	movwf	(___fladd@a+2)^0,c
  4578   001E30  0E40               	movlw	64
  4579   001E32  6E08               	movwf	(___fladd@a+3)^0,c
  4580   001E34  C0A5  F001         	movff	_RGB_to_HSV$2723,___fladd@b
  4581   001E38  C0A6  F002         	movff	_RGB_to_HSV$2723+1,___fladd@b+1
  4582   001E3C  C0A7  F003         	movff	_RGB_to_HSV$2723+2,___fladd@b+2
  4583   001E40  C0A8  F004         	movff	_RGB_to_HSV$2723+3,___fladd@b+3
  4584   001E44  EC51  F015         	call	___fladd	;wreg free
  4585   001E48  C001  F03B         	movff	?___fladd,___flmul@b
  4586   001E4C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4587   001E50  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4588   001E54  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4589   001E58  0E00               	movlw	0
  4590   001E5A  6E3F               	movwf	___flmul@a^0,c
  4591   001E5C  0E00               	movlw	0
  4592   001E5E  6E40               	movwf	(___flmul@a+1)^0,c
  4593   001E60  0E70               	movlw	112
  4594   001E62  6E41               	movwf	(___flmul@a+2)^0,c
  4595   001E64  0E42               	movlw	66
  4596   001E66  6E42               	movwf	(___flmul@a+3)^0,c
  4597   001E68  ECB1  F017         	call	___flmul	;wreg free
  4598   001E6C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4599   001E70  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4600   001E74  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4601   001E78  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4602   001E7C  EF40  F00F         	goto	l3720
  4603   001E80                     l80:
  4604   001E80                     l3720:
  4605                           
  4606                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  4607   001E80  0100               	movlb	0	; () banked
  4608   001E82  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  4609   001E84  EF48  F00F         	goto	u3830
  4610   001E88  EF46  F00F         	goto	u3831
  4611   001E8C                     u3831:
  4612   001E8C  EF62  F00F         	goto	l3724
  4613   001E90                     u3830:
  4614   001E90                     
  4615                           ; BSR set to: 0
  4616   001E90  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  4617   001E94  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  4618   001E98  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  4619   001E9C  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  4620   001EA0  0E00               	movlw	0
  4621   001EA2  6E05               	movwf	___fladd@a^0,c
  4622   001EA4  0E00               	movlw	0
  4623   001EA6  6E06               	movwf	(___fladd@a+1)^0,c
  4624   001EA8  0EB4               	movlw	180
  4625   001EAA  6E07               	movwf	(___fladd@a+2)^0,c
  4626   001EAC  0E43               	movlw	67
  4627   001EAE  6E08               	movwf	(___fladd@a+3)^0,c
  4628   001EB0  EC51  F015         	call	___fladd	;wreg free
  4629   001EB4  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  4630   001EB8  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  4631   001EBC  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  4632   001EC0  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  4633   001EC4                     l3724:
  4634                           
  4635                           ;color.c: 158:     *H = H_temp;
  4636   001EC4  0100               	movlb	0	; () banked
  4637   001EC6  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  4638   001EC8  6ED9               	movwf	fsr2l,c
  4639   001ECA  6ADA               	clrf	fsr2h,c
  4640   001ECC  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  4641   001ED0  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  4642   001ED4  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  4643   001ED8  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  4644   001EDC                     
  4645                           ; BSR set to: 0
  4646                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  4647   001EDC  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4648   001EE0  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4649   001EE4  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4650   001EE8  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4651   001EEC  0E00               	movlw	0
  4652   001EEE  6E05               	movwf	___fleq@ff2^0,c
  4653   001EF0  0E00               	movlw	0
  4654   001EF2  6E06               	movwf	(___fleq@ff2+1)^0,c
  4655   001EF4  0E00               	movlw	0
  4656   001EF6  6E07               	movwf	(___fleq@ff2+2)^0,c
  4657   001EF8  0E00               	movlw	0
  4658   001EFA  6E08               	movwf	(___fleq@ff2+3)^0,c
  4659   001EFC  EC1C  F025         	call	___fleq	;wreg free
  4660   001F00  A0D8               	btfss	status,0,c
  4661   001F02  EF85  F00F         	goto	u3841
  4662   001F06  EF87  F00F         	goto	u3840
  4663   001F0A                     u3841:
  4664   001F0A  EF95  F00F         	goto	l3730
  4665   001F0E                     u3840:
  4666   001F0E  0100               	movlb	0	; () banked
  4667   001F10  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4668   001F12  6ED9               	movwf	fsr2l,c
  4669   001F14  6ADA               	clrf	fsr2h,c
  4670   001F16  0E00               	movlw	0
  4671   001F18  6EDE               	movwf	postinc2,c
  4672   001F1A  0E00               	movlw	0
  4673   001F1C  6EDE               	movwf	postinc2,c
  4674   001F1E  0E00               	movlw	0
  4675   001F20  6EDE               	movwf	postinc2,c
  4676   001F22  0E00               	movlw	0
  4677   001F24  6EDD               	movwf	postdec2,c
  4678   001F26  EFC5  F00F         	goto	l3732
  4679   001F2A                     l3730:
  4680                           
  4681                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  4682   001F2A  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  4683   001F2E  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  4684   001F32  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  4685   001F36  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  4686   001F3A  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  4687   001F3E  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  4688   001F42  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  4689   001F46  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  4690   001F4A  ECC6  F019         	call	___fldiv	;wreg free
  4691   001F4E  C022  F03B         	movff	?___fldiv,___flmul@b
  4692   001F52  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  4693   001F56  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  4694   001F5A  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  4695   001F5E  0E00               	movlw	0
  4696   001F60  6E3F               	movwf	___flmul@a^0,c
  4697   001F62  0E00               	movlw	0
  4698   001F64  6E40               	movwf	(___flmul@a+1)^0,c
  4699   001F66  0EC8               	movlw	200
  4700   001F68  6E41               	movwf	(___flmul@a+2)^0,c
  4701   001F6A  0E42               	movlw	66
  4702   001F6C  6E42               	movwf	(___flmul@a+3)^0,c
  4703   001F6E  ECB1  F017         	call	___flmul	;wreg free
  4704   001F72  0100               	movlb	0	; () banked
  4705   001F74  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4706   001F76  6ED9               	movwf	fsr2l,c
  4707   001F78  6ADA               	clrf	fsr2h,c
  4708   001F7A  C03B  FFDE         	movff	?___flmul,postinc2
  4709   001F7E  C03C  FFDE         	movff	?___flmul+1,postinc2
  4710   001F82  C03D  FFDE         	movff	?___flmul+2,postinc2
  4711   001F86  C03E  FFDE         	movff	?___flmul+3,postinc2
  4712   001F8A                     l3732:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4716   001F8A  0E00               	movlw	0
  4717   001F8C  6E3F               	movwf	___flmul@a^0,c
  4718   001F8E  0E00               	movlw	0
  4719   001F90  6E40               	movwf	(___flmul@a+1)^0,c
  4720   001F92  0EC8               	movlw	200
  4721   001F94  6E41               	movwf	(___flmul@a+2)^0,c
  4722   001F96  0E42               	movlw	66
  4723   001F98  6E42               	movwf	(___flmul@a+3)^0,c
  4724   001F9A  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  4725   001F9E  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  4726   001FA2  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  4727   001FA6  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  4728   001FAA  ECB1  F017         	call	___flmul	;wreg free
  4729   001FAE  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2724
  4730   001FB2  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2724+1
  4731   001FB6  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2724+2
  4732   001FBA  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2724+3
  4733   001FBE                     
  4734                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4735   001FBE  C08D  F03B         	movff	_RGB_to_HSV$2724,___flmul@b
  4736   001FC2  C08E  F03C         	movff	_RGB_to_HSV$2724+1,___flmul@b+1
  4737   001FC6  C08F  F03D         	movff	_RGB_to_HSV$2724+2,___flmul@b+2
  4738   001FCA  C090  F03E         	movff	_RGB_to_HSV$2724+3,___flmul@b+3
  4739   001FCE  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  4740   001FD2  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  4741   001FD6  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  4742   001FDA  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  4743   001FDE  ECB1  F017         	call	___flmul	;wreg free
  4744   001FE2  0100               	movlb	0	; () banked
  4745   001FE4  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  4746   001FE6  6ED9               	movwf	fsr2l,c
  4747   001FE8  6ADA               	clrf	fsr2h,c
  4748   001FEA  C03B  FFDE         	movff	?___flmul,postinc2
  4749   001FEE  C03C  FFDE         	movff	?___flmul+1,postinc2
  4750   001FF2  C03D  FFDE         	movff	?___flmul+2,postinc2
  4751   001FF6  C03E  FFDE         	movff	?___flmul+3,postinc2
  4752   001FFA                     
  4753                           ; BSR set to: 0
  4754   001FFA  0012               	return		;funcret
  4755   001FFC                     __end_of_RGB_to_HSV:
  4756                           	callstack 0
  4757                           
  4758 ;; *************** function _custom_floatmodulo *****************
  4759 ;; Defined at:
  4760 ;;		line 106 in file "color.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  x               4   83[COMRAM] float 
  4763 ;;  y               4   87[COMRAM] float 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  remainder       4    4[BANK0 ] float 
  4766 ;;  quotient        4    0[BANK0 ] float 
  4767 ;;  intPart         2    8[BANK0 ] int 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  4   83[COMRAM] float 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4777 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;Total ram usage:       18 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; Hardware stack levels required when called: 2
  4784 ;; This function calls:
  4785 ;;		___fldiv
  4786 ;;		___fleq
  4787 ;;		___flmul
  4788 ;;		___flsub
  4789 ;;		___fltol
  4790 ;;		___xxtofl
  4791 ;; This function is called by:
  4792 ;;		_RGB_to_HSV
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text18
  4797   0044BA                     __ptext18:
  4798                           	callstack 0
  4799   0044BA                     _custom_floatmodulo:
  4800                           	callstack 25
  4801   0044BA                     
  4802                           ;color.c: 108:     if (y == 0.0) {
  4803   0044BA  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  4804   0044BE  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  4805   0044C2  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  4806   0044C6  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  4807   0044CA  0E00               	movlw	0
  4808   0044CC  6E05               	movwf	___fleq@ff2^0,c
  4809   0044CE  0E00               	movlw	0
  4810   0044D0  6E06               	movwf	(___fleq@ff2+1)^0,c
  4811   0044D2  0E00               	movlw	0
  4812   0044D4  6E07               	movwf	(___fleq@ff2+2)^0,c
  4813   0044D6  0E00               	movlw	0
  4814   0044D8  6E08               	movwf	(___fleq@ff2+3)^0,c
  4815   0044DA  EC1C  F025         	call	___fleq	;wreg free
  4816   0044DE  A0D8               	btfss	status,0,c
  4817   0044E0  EF74  F022         	goto	u3641
  4818   0044E4  EF76  F022         	goto	u3640
  4819   0044E8                     u3641:
  4820   0044E8  EF80  F022         	goto	l3580
  4821   0044EC                     u3640:
  4822   0044EC                     
  4823                           ;color.c: 109:         return 0.0;
  4824   0044EC  0E00               	movlw	0
  4825   0044EE  6E54               	movwf	?_custom_floatmodulo^0,c
  4826   0044F0  0E00               	movlw	0
  4827   0044F2  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  4828   0044F4  0E00               	movlw	0
  4829   0044F6  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  4830   0044F8  0E00               	movlw	0
  4831   0044FA  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  4832   0044FC  EFE8  F022         	goto	l50
  4833   004500                     l3580:
  4834                           
  4835                           ;color.c: 113:     float quotient = x / y;
  4836   004500  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  4837   004504  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  4838   004508  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  4839   00450C  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  4840   004510  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  4841   004514  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  4842   004518  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  4843   00451C  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  4844   004520  ECC6  F019         	call	___fldiv	;wreg free
  4845   004524  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  4846   004528  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  4847   00452C  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  4848   004530  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  4849                           
  4850                           ;color.c: 116:     int intPart = (int)quotient;
  4851   004534  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  4852   004538  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  4853   00453C  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  4854   004540  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  4855   004544  ECE9  F022         	call	___fltol	;wreg free
  4856   004548  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  4857   00454C  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  4858   004550                     
  4859                           ;color.c: 119:     float remainder = x - intPart * y;
  4860   004550  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  4861   004554  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  4862   004558  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  4863   00455C  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  4864   004560  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  4865   004564  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  4866   004568  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  4867   00456C  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  4868   004570  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  4869   004574  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  4870   004578  0E00               	movlw	0
  4871   00457A  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  4872   00457C  0EFF               	movlw	-1
  4873   00457E  6E0E               	movwf	(___xxtofl@val+2)^0,c
  4874   004580  6E0F               	movwf	(___xxtofl@val+3)^0,c
  4875   004582  0E01               	movlw	1
  4876   004584  ECF6  F01C         	call	___xxtofl
  4877   004588  C00C  F03B         	movff	?___xxtofl,___flmul@b
  4878   00458C  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  4879   004590  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  4880   004594  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  4881   004598  ECB1  F017         	call	___flmul	;wreg free
  4882   00459C  C03B  F01E         	movff	?___flmul,___flsub@a
  4883   0045A0  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  4884   0045A4  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  4885   0045A8  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  4886   0045AC  ECC4  F026         	call	___flsub	;wreg free
  4887   0045B0  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  4888   0045B4  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  4889   0045B8  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  4890   0045BC  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  4891   0045C0                     
  4892                           ;color.c: 121:     return remainder;
  4893   0045C0  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  4894   0045C4  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  4895   0045C8  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  4896   0045CC  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  4897   0045D0                     l50:
  4898   0045D0  0012               	return		;funcret
  4899   0045D2                     __end_of_custom_floatmodulo:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function ___xxtofl *****************
  4903 ;; Defined at:
  4904 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  sign            1    wreg     unsigned char 
  4907 ;;  val             4   11[COMRAM] long 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  sign            1   19[COMRAM] unsigned char 
  4910 ;;  arg             4   21[COMRAM] unsigned long 
  4911 ;;  exp             1   20[COMRAM] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  4   11[COMRAM] unsigned char 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;Total ram usage:       14 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_custom_floatmodulo
  4931 ;;		_color_cardCheck
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text19
  4936   0039EC                     __ptext19:
  4937                           	callstack 0
  4938   0039EC                     ___xxtofl:
  4939                           	callstack 28
  4940                           
  4941                           ;incstack = 0
  4942                           ;___xxtofl@sign stored from wreg
  4943   0039EC  6E14               	movwf	___xxtofl@sign^0,c
  4944   0039EE  5014               	movf	___xxtofl@sign^0,w,c
  4945   0039F0  B4D8               	btfsc	status,2,c
  4946   0039F2  EFFD  F01C         	goto	u3521
  4947   0039F6  EFFF  F01C         	goto	u3520
  4948   0039FA                     u3521:
  4949   0039FA  EF21  F01D         	goto	l1262
  4950   0039FE                     u3520:
  4951   0039FE  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4952   003A00  EF06  F01D         	goto	u3530
  4953   003A04  EF04  F01D         	goto	u3531
  4954   003A08                     u3531:
  4955   003A08  EF21  F01D         	goto	l1262
  4956   003A0C                     u3530:
  4957   003A0C  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4958   003A10  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4959   003A14  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4960   003A18  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4961   003A1C  1E10               	comf	??___xxtofl^0,f,c
  4962   003A1E  1E11               	comf	(??___xxtofl+1)^0,f,c
  4963   003A20  1E12               	comf	(??___xxtofl+2)^0,f,c
  4964   003A22  1E13               	comf	(??___xxtofl+3)^0,f,c
  4965   003A24  2A10               	incf	??___xxtofl^0,f,c
  4966   003A26  0E00               	movlw	0
  4967   003A28  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4968   003A2A  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4969   003A2C  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4970   003A2E  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4971   003A32  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4972   003A36  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4973   003A3A  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4974   003A3E  EF29  F01D         	goto	l3504
  4975   003A42                     l1262:
  4976   003A42  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4977   003A46  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4978   003A4A  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4979   003A4E  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4980   003A52                     l3504:
  4981   003A52  500C               	movf	___xxtofl@val^0,w,c
  4982   003A54  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4983   003A56  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4984   003A58  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4985   003A5A  A4D8               	btfss	status,2,c
  4986   003A5C  EF32  F01D         	goto	u3541
  4987   003A60  EF34  F01D         	goto	u3540
  4988   003A64                     u3541:
  4989   003A64  EF3E  F01D         	goto	l3510
  4990   003A68                     u3540:
  4991   003A68  0E00               	movlw	0
  4992   003A6A  6E0C               	movwf	?___xxtofl^0,c
  4993   003A6C  0E00               	movlw	0
  4994   003A6E  6E0D               	movwf	(?___xxtofl+1)^0,c
  4995   003A70  0E00               	movlw	0
  4996   003A72  6E0E               	movwf	(?___xxtofl+2)^0,c
  4997   003A74  0E00               	movlw	0
  4998   003A76  6E0F               	movwf	(?___xxtofl+3)^0,c
  4999   003A78  EFCF  F01D         	goto	l1265
  5000   003A7C                     l3510:
  5001   003A7C  0E96               	movlw	150
  5002   003A7E  6E15               	movwf	___xxtofl@exp^0,c
  5003   003A80  EF48  F01D         	goto	l3514
  5004   003A84                     l3512:
  5005   003A84  2A15               	incf	___xxtofl@exp^0,f,c
  5006   003A86  90D8               	bcf	status,0,c
  5007   003A88  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  5008   003A8A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  5009   003A8C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  5010   003A8E  3216               	rrcf	___xxtofl@arg^0,f,c
  5011   003A90                     l3514:
  5012   003A90  0E00               	movlw	0
  5013   003A92  1416               	andwf	___xxtofl@arg^0,w,c
  5014   003A94  6E10               	movwf	??___xxtofl^0,c
  5015   003A96  0E00               	movlw	0
  5016   003A98  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  5017   003A9A  6E11               	movwf	(??___xxtofl+1)^0,c
  5018   003A9C  0E00               	movlw	0
  5019   003A9E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  5020   003AA0  6E12               	movwf	(??___xxtofl+2)^0,c
  5021   003AA2  0EFE               	movlw	254
  5022   003AA4  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  5023   003AA6  6E13               	movwf	(??___xxtofl+3)^0,c
  5024   003AA8  5010               	movf	??___xxtofl^0,w,c
  5025   003AAA  1011               	iorwf	(??___xxtofl+1)^0,w,c
  5026   003AAC  1012               	iorwf	(??___xxtofl+2)^0,w,c
  5027   003AAE  1013               	iorwf	(??___xxtofl+3)^0,w,c
  5028   003AB0  A4D8               	btfss	status,2,c
  5029   003AB2  EF5D  F01D         	goto	u3551
  5030   003AB6  EF5F  F01D         	goto	u3550
  5031   003ABA                     u3551:
  5032   003ABA  EF42  F01D         	goto	l3512
  5033   003ABE                     u3550:
  5034   003ABE  EF6D  F01D         	goto	l1269
  5035   003AC2                     l3516:
  5036   003AC2  2A15               	incf	___xxtofl@exp^0,f,c
  5037   003AC4  0E01               	movlw	1
  5038   003AC6  2616               	addwf	___xxtofl@arg^0,f,c
  5039   003AC8  0E00               	movlw	0
  5040   003ACA  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  5041   003ACC  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  5042   003ACE  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  5043   003AD0  90D8               	bcf	status,0,c
  5044   003AD2  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  5045   003AD4  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  5046   003AD6  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  5047   003AD8  3216               	rrcf	___xxtofl@arg^0,f,c
  5048   003ADA                     l1269:
  5049   003ADA  0E00               	movlw	0
  5050   003ADC  1416               	andwf	___xxtofl@arg^0,w,c
  5051   003ADE  6E10               	movwf	??___xxtofl^0,c
  5052   003AE0  0E00               	movlw	0
  5053   003AE2  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  5054   003AE4  6E11               	movwf	(??___xxtofl+1)^0,c
  5055   003AE6  0E00               	movlw	0
  5056   003AE8  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  5057   003AEA  6E12               	movwf	(??___xxtofl+2)^0,c
  5058   003AEC  0EFF               	movlw	255
  5059   003AEE  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  5060   003AF0  6E13               	movwf	(??___xxtofl+3)^0,c
  5061   003AF2  5010               	movf	??___xxtofl^0,w,c
  5062   003AF4  1011               	iorwf	(??___xxtofl+1)^0,w,c
  5063   003AF6  1012               	iorwf	(??___xxtofl+2)^0,w,c
  5064   003AF8  1013               	iorwf	(??___xxtofl+3)^0,w,c
  5065   003AFA  A4D8               	btfss	status,2,c
  5066   003AFC  EF82  F01D         	goto	u3561
  5067   003B00  EF84  F01D         	goto	u3560
  5068   003B04                     u3561:
  5069   003B04  EF61  F01D         	goto	l3516
  5070   003B08                     u3560:
  5071   003B08  EF8C  F01D         	goto	l3524
  5072   003B0C                     l3522:
  5073   003B0C  0615               	decf	___xxtofl@exp^0,f,c
  5074   003B0E  90D8               	bcf	status,0,c
  5075   003B10  3616               	rlcf	___xxtofl@arg^0,f,c
  5076   003B12  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  5077   003B14  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  5078   003B16  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  5079   003B18                     l3524:
  5080   003B18  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  5081   003B1A  EF91  F01D         	goto	u3571
  5082   003B1E  EF93  F01D         	goto	u3570
  5083   003B22                     u3571:
  5084   003B22  EF9B  F01D         	goto	l1276
  5085   003B26                     u3570:
  5086   003B26  0E02               	movlw	2
  5087   003B28  6015               	cpfslt	___xxtofl@exp^0,c
  5088   003B2A  EF99  F01D         	goto	u3581
  5089   003B2E  EF9B  F01D         	goto	u3580
  5090   003B32                     u3581:
  5091   003B32  EF86  F01D         	goto	l3522
  5092   003B36                     u3580:
  5093   003B36                     l1276:
  5094   003B36  B015               	btfsc	___xxtofl@exp^0,0,c
  5095   003B38  EFA0  F01D         	goto	u3591
  5096   003B3C  EFA2  F01D         	goto	u3590
  5097   003B40                     u3591:
  5098   003B40  EFA3  F01D         	goto	l3530
  5099   003B44                     u3590:
  5100   003B44  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  5101   003B46                     l3530:
  5102   003B46  90D8               	bcf	status,0,c
  5103   003B48  3215               	rrcf	___xxtofl@exp^0,f,c
  5104   003B4A  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  5105   003B4E  6A11               	clrf	(??___xxtofl+1)^0,c
  5106   003B50  6A12               	clrf	(??___xxtofl+2)^0,c
  5107   003B52  6A13               	clrf	(??___xxtofl+3)^0,c
  5108   003B54  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  5109   003B58  6A12               	clrf	(??___xxtofl+2)^0,c
  5110   003B5A  6A11               	clrf	(??___xxtofl+1)^0,c
  5111   003B5C  6A10               	clrf	??___xxtofl^0,c
  5112   003B5E  5010               	movf	??___xxtofl^0,w,c
  5113   003B60  1216               	iorwf	___xxtofl@arg^0,f,c
  5114   003B62  5011               	movf	(??___xxtofl+1)^0,w,c
  5115   003B64  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  5116   003B66  5012               	movf	(??___xxtofl+2)^0,w,c
  5117   003B68  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  5118   003B6A  5013               	movf	(??___xxtofl+3)^0,w,c
  5119   003B6C  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  5120   003B6E  5014               	movf	___xxtofl@sign^0,w,c
  5121   003B70  B4D8               	btfsc	status,2,c
  5122   003B72  EFBD  F01D         	goto	u3601
  5123   003B76  EFBF  F01D         	goto	u3600
  5124   003B7A                     u3601:
  5125   003B7A  EFC7  F01D         	goto	l3540
  5126   003B7E                     u3600:
  5127   003B7E  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5128   003B80  EFC6  F01D         	goto	u3610
  5129   003B84  EFC4  F01D         	goto	u3611
  5130   003B88                     u3611:
  5131   003B88  EFC7  F01D         	goto	l3540
  5132   003B8C                     u3610:
  5133   003B8C  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  5134   003B8E                     l3540:
  5135   003B8E  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  5136   003B92  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5137   003B96  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5138   003B9A  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5139   003B9E                     l1265:
  5140   003B9E  0012               	return		;funcret
  5141   003BA0                     __end_of___xxtofl:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function ___fltol *****************
  5145 ;; Defined at:
  5146 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  f1              4    0[COMRAM] unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  exp1            1    9[COMRAM] unsigned char 
  5151 ;;  sign1           1    8[COMRAM] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  4    0[COMRAM] long 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;Total ram usage:       10 bytes
  5166 ;; Hardware stack levels used: 1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_custom_floatmodulo
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text20
  5175   0045D2                     __ptext20:
  5176                           	callstack 0
  5177   0045D2                     ___fltol:
  5178                           	callstack 26
  5179   0045D2  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5180   0045D4  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5181   0045D6  6E0A               	movwf	___fltol@exp1^0,c
  5182   0045D8  500A               	movf	___fltol@exp1^0,w,c
  5183   0045DA  A4D8               	btfss	status,2,c
  5184   0045DC  EFF2  F022         	goto	u3451
  5185   0045E0  EFF4  F022         	goto	u3450
  5186   0045E4                     u3451:
  5187   0045E4  EFFE  F022         	goto	l3460
  5188   0045E8                     u3450:
  5189   0045E8                     l3456:
  5190   0045E8  0E00               	movlw	0
  5191   0045EA  6E01               	movwf	?___fltol^0,c
  5192   0045EC  0E00               	movlw	0
  5193   0045EE  6E02               	movwf	(?___fltol+1)^0,c
  5194   0045F0  0E00               	movlw	0
  5195   0045F2  6E03               	movwf	(?___fltol+2)^0,c
  5196   0045F4  0E00               	movlw	0
  5197   0045F6  6E04               	movwf	(?___fltol+3)^0,c
  5198   0045F8  EF6B  F023         	goto	l904
  5199   0045FC                     l3460:
  5200   0045FC  C001  F005         	movff	___fltol@f1,??___fltol
  5201   004600  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5202   004604  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5203   004608  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5204   00460C  0E20               	movlw	32
  5205   00460E  EF0E  F023         	goto	u3460
  5206   004612                     u3465:
  5207   004612  90D8               	bcf	status,0,c
  5208   004614  3208               	rrcf	(??___fltol+3)^0,f,c
  5209   004616  3207               	rrcf	(??___fltol+2)^0,f,c
  5210   004618  3206               	rrcf	(??___fltol+1)^0,f,c
  5211   00461A  3205               	rrcf	??___fltol^0,f,c
  5212   00461C                     u3460:
  5213   00461C  2EE8               	decfsz	wreg,f,c
  5214   00461E  EF09  F023         	goto	u3465
  5215   004622  5005               	movf	??___fltol^0,w,c
  5216   004624  6E09               	movwf	___fltol@sign1^0,c
  5217   004626  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5218   004628  0EFF               	movlw	255
  5219   00462A  1601               	andwf	___fltol@f1^0,f,c
  5220   00462C  0EFF               	movlw	255
  5221   00462E  1602               	andwf	(___fltol@f1+1)^0,f,c
  5222   004630  0EFF               	movlw	255
  5223   004632  1603               	andwf	(___fltol@f1+2)^0,f,c
  5224   004634  0E00               	movlw	0
  5225   004636  1604               	andwf	(___fltol@f1+3)^0,f,c
  5226   004638  0E96               	movlw	150
  5227   00463A  5E0A               	subwf	___fltol@exp1^0,f,c
  5228   00463C  BE0A               	btfsc	___fltol@exp1^0,7,c
  5229   00463E  EF25  F023         	goto	u3470
  5230   004642  EF23  F023         	goto	u3471
  5231   004646                     u3471:
  5232   004646  EF3B  F023         	goto	l3480
  5233   00464A                     u3470:
  5234   00464A  500A               	movf	___fltol@exp1^0,w,c
  5235   00464C  0A80               	xorlw	128
  5236   00464E  0F97               	addlw	151
  5237   004650  B0D8               	btfsc	status,0,c
  5238   004652  EF2D  F023         	goto	u3481
  5239   004656  EF2F  F023         	goto	u3480
  5240   00465A                     u3481:
  5241   00465A  EF31  F023         	goto	l3476
  5242   00465E                     u3480:
  5243   00465E  EFF4  F022         	goto	l3456
  5244   004662                     l3476:
  5245   004662  90D8               	bcf	status,0,c
  5246   004664  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5247   004666  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5248   004668  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5249   00466A  3201               	rrcf	___fltol@f1^0,f,c
  5250   00466C  3E0A               	incfsz	___fltol@exp1^0,f,c
  5251   00466E  EF31  F023         	goto	l3476
  5252   004672  EF53  F023         	goto	l3490
  5253   004676                     l3480:
  5254   004676  0E1F               	movlw	31
  5255   004678  640A               	cpfsgt	___fltol@exp1^0,c
  5256   00467A  EF41  F023         	goto	u3491
  5257   00467E  EF43  F023         	goto	u3490
  5258   004682                     u3491:
  5259   004682  EF4B  F023         	goto	l3488
  5260   004686                     u3490:
  5261   004686  EFF4  F022         	goto	l3456
  5262   00468A                     l3486:
  5263   00468A  90D8               	bcf	status,0,c
  5264   00468C  3601               	rlcf	___fltol@f1^0,f,c
  5265   00468E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5266   004690  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5267   004692  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5268   004694  060A               	decf	___fltol@exp1^0,f,c
  5269   004696                     l3488:
  5270   004696  500A               	movf	___fltol@exp1^0,w,c
  5271   004698  A4D8               	btfss	status,2,c
  5272   00469A  EF51  F023         	goto	u3501
  5273   00469E  EF53  F023         	goto	u3500
  5274   0046A2                     u3501:
  5275   0046A2  EF45  F023         	goto	l3486
  5276   0046A6                     u3500:
  5277   0046A6                     l3490:
  5278   0046A6  5009               	movf	___fltol@sign1^0,w,c
  5279   0046A8  B4D8               	btfsc	status,2,c
  5280   0046AA  EF59  F023         	goto	u3511
  5281   0046AE  EF5B  F023         	goto	u3510
  5282   0046B2                     u3511:
  5283   0046B2  EF63  F023         	goto	l3494
  5284   0046B6                     u3510:
  5285   0046B6  1E04               	comf	(___fltol@f1+3)^0,f,c
  5286   0046B8  1E03               	comf	(___fltol@f1+2)^0,f,c
  5287   0046BA  1E02               	comf	(___fltol@f1+1)^0,f,c
  5288   0046BC  6C01               	negf	___fltol@f1^0,c
  5289   0046BE  0E00               	movlw	0
  5290   0046C0  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5291   0046C2  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5292   0046C4  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5293   0046C6                     l3494:
  5294   0046C6  C001  F001         	movff	___fltol@f1,?___fltol
  5295   0046CA  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5296   0046CE  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5297   0046D2  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5298   0046D6                     l904:
  5299   0046D6  0012               	return		;funcret
  5300   0046D8                     __end_of___fltol:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function ___flsub *****************
  5304 ;; Defined at:
  5305 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  b               4   25[COMRAM] long 
  5308 ;;  a               4   29[COMRAM] long 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  4   25[COMRAM] long 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5320 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5323 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5324 ;;Total ram usage:        8 bytes
  5325 ;; Hardware stack levels used: 1
  5326 ;; Hardware stack levels required when called: 1
  5327 ;; This function calls:
  5328 ;;		___fladd
  5329 ;; This function is called by:
  5330 ;;		_custom_floatmodulo
  5331 ;;		_RGB_to_HSV
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text21
  5336   004D88                     __ptext21:
  5337                           	callstack 0
  5338   004D88                     ___flsub:
  5339                           	callstack 25
  5340   004D88  0E00               	movlw	0
  5341   004D8A  1A1E               	xorwf	___flsub@a^0,f,c
  5342   004D8C  0E00               	movlw	0
  5343   004D8E  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5344   004D90  0E00               	movlw	0
  5345   004D92  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5346   004D94  0E80               	movlw	128
  5347   004D96  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5348   004D98  C01A  F001         	movff	___flsub@b,___fladd@b
  5349   004D9C  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5350   004DA0  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5351   004DA4  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5352   004DA8  C01E  F005         	movff	___flsub@a,___fladd@a
  5353   004DAC  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5354   004DB0  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5355   004DB4  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5356   004DB8  EC51  F015         	call	___fladd	;wreg free
  5357   004DBC  C001  F01A         	movff	?___fladd,?___flsub
  5358   004DC0  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5359   004DC4  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5360   004DC8  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5361   004DCC  0012               	return		;funcret
  5362   004DCE                     __end_of___flsub:
  5363                           	callstack 0
  5364                           
  5365 ;; *************** function ___fladd *****************
  5366 ;; Defined at:
  5367 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  b               4    0[COMRAM] long 
  5370 ;;  a               4    4[COMRAM] long 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  grs             1   15[COMRAM] unsigned char 
  5373 ;;  bexp            1   14[COMRAM] unsigned char 
  5374 ;;  aexp            1   13[COMRAM] unsigned char 
  5375 ;;  signs           1   12[COMRAM] unsigned char 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  4    0[COMRAM] unsigned char 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, status,0
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5385 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5388 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5389 ;;Total ram usage:       16 bytes
  5390 ;; Hardware stack levels used: 1
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_RGB_to_HSV
  5395 ;;		___flsub
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text22
  5400   002AA2                     __ptext22:
  5401                           	callstack 0
  5402   002AA2                     ___fladd:
  5403                           	callstack 25
  5404   002AA2  5004               	movf	(___fladd@b+3)^0,w,c
  5405   002AA4  0B80               	andlw	128
  5406   002AA6  6E0D               	movwf	___fladd@signs^0,c
  5407   002AA8  5004               	movf	(___fladd@b+3)^0,w,c
  5408   002AAA  2404               	addwf	(___fladd@b+3)^0,w,c
  5409   002AAC  6E0F               	movwf	___fladd@bexp^0,c
  5410   002AAE  AE03               	btfss	(___fladd@b+2)^0,7,c
  5411   002AB0  EF5C  F015         	goto	u2591
  5412   002AB4  EF5E  F015         	goto	u2590
  5413   002AB8                     u2591:
  5414   002AB8  EF5F  F015         	goto	l2964
  5415   002ABC                     u2590:
  5416   002ABC  800F               	bsf	___fladd@bexp^0,0,c
  5417   002ABE                     l2964:
  5418   002ABE  500F               	movf	___fladd@bexp^0,w,c
  5419   002AC0  B4D8               	btfsc	status,2,c
  5420   002AC2  EF65  F015         	goto	u2601
  5421   002AC6  EF67  F015         	goto	u2600
  5422   002ACA                     u2601:
  5423   002ACA  EF7C  F015         	goto	l2974
  5424   002ACE                     u2600:
  5425   002ACE  280F               	incf	___fladd@bexp^0,w,c
  5426   002AD0  A4D8               	btfss	status,2,c
  5427   002AD2  EF6D  F015         	goto	u2611
  5428   002AD6  EF6F  F015         	goto	u2610
  5429   002ADA                     u2611:
  5430   002ADA  EF77  F015         	goto	l2970
  5431   002ADE                     u2610:
  5432   002ADE  0E00               	movlw	0
  5433   002AE0  6E01               	movwf	___fladd@b^0,c
  5434   002AE2  0E00               	movlw	0
  5435   002AE4  6E02               	movwf	(___fladd@b+1)^0,c
  5436   002AE6  0E00               	movlw	0
  5437   002AE8  6E03               	movwf	(___fladd@b+2)^0,c
  5438   002AEA  0E00               	movlw	0
  5439   002AEC  6E04               	movwf	(___fladd@b+3)^0,c
  5440   002AEE                     l2970:
  5441   002AEE  8E03               	bsf	(___fladd@b+2)^0,7,c
  5442   002AF0  0E00               	movlw	0
  5443   002AF2  6E04               	movwf	(___fladd@b+3)^0,c
  5444   002AF4  EF84  F015         	goto	l2976
  5445   002AF8                     l2974:
  5446   002AF8  0E00               	movlw	0
  5447   002AFA  6E01               	movwf	___fladd@b^0,c
  5448   002AFC  0E00               	movlw	0
  5449   002AFE  6E02               	movwf	(___fladd@b+1)^0,c
  5450   002B00  0E00               	movlw	0
  5451   002B02  6E03               	movwf	(___fladd@b+2)^0,c
  5452   002B04  0E00               	movlw	0
  5453   002B06  6E04               	movwf	(___fladd@b+3)^0,c
  5454   002B08                     l2976:
  5455   002B08  5008               	movf	(___fladd@a+3)^0,w,c
  5456   002B0A  0B80               	andlw	128
  5457   002B0C  6E0E               	movwf	___fladd@aexp^0,c
  5458   002B0E  500D               	movf	___fladd@signs^0,w,c
  5459   002B10  180E               	xorwf	___fladd@aexp^0,w,c
  5460   002B12  B4D8               	btfsc	status,2,c
  5461   002B14  EF8E  F015         	goto	u2621
  5462   002B18  EF90  F015         	goto	u2620
  5463   002B1C                     u2621:
  5464   002B1C  EF91  F015         	goto	l2982
  5465   002B20                     u2620:
  5466   002B20  8C0D               	bsf	___fladd@signs^0,6,c
  5467   002B22                     l2982:
  5468   002B22  5008               	movf	(___fladd@a+3)^0,w,c
  5469   002B24  2408               	addwf	(___fladd@a+3)^0,w,c
  5470   002B26  6E0E               	movwf	___fladd@aexp^0,c
  5471   002B28  AE07               	btfss	(___fladd@a+2)^0,7,c
  5472   002B2A  EF99  F015         	goto	u2631
  5473   002B2E  EF9B  F015         	goto	u2630
  5474   002B32                     u2631:
  5475   002B32  EF9C  F015         	goto	l2988
  5476   002B36                     u2630:
  5477   002B36  800E               	bsf	___fladd@aexp^0,0,c
  5478   002B38                     l2988:
  5479   002B38  500E               	movf	___fladd@aexp^0,w,c
  5480   002B3A  B4D8               	btfsc	status,2,c
  5481   002B3C  EFA2  F015         	goto	u2641
  5482   002B40  EFA4  F015         	goto	u2640
  5483   002B44                     u2641:
  5484   002B44  EFB9  F015         	goto	l2998
  5485   002B48                     u2640:
  5486   002B48  280E               	incf	___fladd@aexp^0,w,c
  5487   002B4A  A4D8               	btfss	status,2,c
  5488   002B4C  EFAA  F015         	goto	u2651
  5489   002B50  EFAC  F015         	goto	u2650
  5490   002B54                     u2651:
  5491   002B54  EFB4  F015         	goto	l2994
  5492   002B58                     u2650:
  5493   002B58  0E00               	movlw	0
  5494   002B5A  6E05               	movwf	___fladd@a^0,c
  5495   002B5C  0E00               	movlw	0
  5496   002B5E  6E06               	movwf	(___fladd@a+1)^0,c
  5497   002B60  0E00               	movlw	0
  5498   002B62  6E07               	movwf	(___fladd@a+2)^0,c
  5499   002B64  0E00               	movlw	0
  5500   002B66  6E08               	movwf	(___fladd@a+3)^0,c
  5501   002B68                     l2994:
  5502   002B68  8E07               	bsf	(___fladd@a+2)^0,7,c
  5503   002B6A  0E00               	movlw	0
  5504   002B6C  6E08               	movwf	(___fladd@a+3)^0,c
  5505   002B6E  EFC1  F015         	goto	l3000
  5506   002B72                     l2998:
  5507   002B72  0E00               	movlw	0
  5508   002B74  6E05               	movwf	___fladd@a^0,c
  5509   002B76  0E00               	movlw	0
  5510   002B78  6E06               	movwf	(___fladd@a+1)^0,c
  5511   002B7A  0E00               	movlw	0
  5512   002B7C  6E07               	movwf	(___fladd@a+2)^0,c
  5513   002B7E  0E00               	movlw	0
  5514   002B80  6E08               	movwf	(___fladd@a+3)^0,c
  5515   002B82                     l3000:
  5516   002B82  500F               	movf	___fladd@bexp^0,w,c
  5517   002B84  5C0E               	subwf	___fladd@aexp^0,w,c
  5518   002B86  B0D8               	btfsc	status,0,c
  5519   002B88  EFC8  F015         	goto	u2661
  5520   002B8C  EFCA  F015         	goto	u2660
  5521   002B90                     u2661:
  5522   002B90  EFF1  F015         	goto	l3036
  5523   002B94                     u2660:
  5524   002B94  AC0D               	btfss	___fladd@signs^0,6,c
  5525   002B96  EFCF  F015         	goto	u2671
  5526   002B9A  EFD1  F015         	goto	u2670
  5527   002B9E                     u2671:
  5528   002B9E  EFD3  F015         	goto	l3006
  5529   002BA2                     u2670:
  5530   002BA2  0E80               	movlw	128
  5531   002BA4  1A0D               	xorwf	___fladd@signs^0,f,c
  5532   002BA6                     l3006:
  5533   002BA6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5534   002BAA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5535   002BAE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5536   002BB2  C001  F010         	movff	___fladd@b,___fladd@grs
  5537   002BB6  C005  F001         	movff	___fladd@a,___fladd@b
  5538   002BBA  C010  F005         	movff	___fladd@grs,___fladd@a
  5539   002BBE  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5540   002BC2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5541   002BC6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5542   002BCA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5543   002BCE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5544   002BD2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5545   002BD6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5546   002BDA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5547   002BDE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5548   002BE2                     l3036:
  5549   002BE2  0E00               	movlw	0
  5550   002BE4  6E10               	movwf	___fladd@grs^0,c
  5551   002BE6  500F               	movf	___fladd@bexp^0,w,c
  5552   002BE8  C00E  F009         	movff	___fladd@aexp,??___fladd
  5553   002BEC  6A0A               	clrf	(??___fladd+1)^0,c
  5554   002BEE  5E09               	subwf	??___fladd^0,f,c
  5555   002BF0  0E00               	movlw	0
  5556   002BF2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5557   002BF4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5558   002BF6  EF06  F016         	goto	u2681
  5559   002BFA  500A               	movf	(??___fladd+1)^0,w,c
  5560   002BFC  E109               	bnz	u2680
  5561   002BFE  0E1A               	movlw	26
  5562   002C00  5C09               	subwf	??___fladd^0,w,c
  5563   002C02  A0D8               	btfss	status,0,c
  5564   002C04  EF06  F016         	goto	u2681
  5565   002C08  EF08  F016         	goto	u2680
  5566   002C0C                     u2681:
  5567   002C0C  EF3F  F016         	goto	l1136
  5568   002C10                     u2680:
  5569   002C10  5001               	movf	___fladd@b^0,w,c
  5570   002C12  1002               	iorwf	(___fladd@b+1)^0,w,c
  5571   002C14  1003               	iorwf	(___fladd@b+2)^0,w,c
  5572   002C16  1004               	iorwf	(___fladd@b+3)^0,w,c
  5573   002C18  A4D8               	btfss	status,2,c
  5574   002C1A  EF11  F016         	goto	u2691
  5575   002C1E  EF14  F016         	goto	u2690
  5576   002C22                     u2691:
  5577   002C22  0E01               	movlw	1
  5578   002C24  EF15  F016         	goto	u2700
  5579   002C28                     u2690:
  5580   002C28  0E00               	movlw	0
  5581   002C2A                     u2700:
  5582   002C2A  6E10               	movwf	___fladd@grs^0,c
  5583   002C2C  0E00               	movlw	0
  5584   002C2E  6E01               	movwf	___fladd@b^0,c
  5585   002C30  0E00               	movlw	0
  5586   002C32  6E02               	movwf	(___fladd@b+1)^0,c
  5587   002C34  0E00               	movlw	0
  5588   002C36  6E03               	movwf	(___fladd@b+2)^0,c
  5589   002C38  0E00               	movlw	0
  5590   002C3A  6E04               	movwf	(___fladd@b+3)^0,c
  5591   002C3C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5592   002C40  EF48  F016         	goto	l1135
  5593   002C44                     l1137:
  5594   002C44  A010               	btfss	___fladd@grs^0,0,c
  5595   002C46  EF27  F016         	goto	u2711
  5596   002C4A  EF29  F016         	goto	u2710
  5597   002C4E                     u2711:
  5598   002C4E  EF2F  F016         	goto	l3048
  5599   002C52                     u2710:
  5600   002C52  90D8               	bcf	status,0,c
  5601   002C54  3010               	rrcf	___fladd@grs^0,w,c
  5602   002C56  0901               	iorlw	1
  5603   002C58  6E10               	movwf	___fladd@grs^0,c
  5604   002C5A  EF31  F016         	goto	l3050
  5605   002C5E                     l3048:
  5606   002C5E  90D8               	bcf	status,0,c
  5607   002C60  3210               	rrcf	___fladd@grs^0,f,c
  5608   002C62                     l3050:
  5609   002C62  A001               	btfss	___fladd@b^0,0,c
  5610   002C64  EF36  F016         	goto	u2721
  5611   002C68  EF38  F016         	goto	u2720
  5612   002C6C                     u2721:
  5613   002C6C  EF39  F016         	goto	l3054
  5614   002C70                     u2720:
  5615   002C70  8E10               	bsf	___fladd@grs^0,7,c
  5616   002C72                     l3054:
  5617   002C72  3404               	rlcf	(___fladd@b+3)^0,w,c
  5618   002C74  3204               	rrcf	(___fladd@b+3)^0,f,c
  5619   002C76  3203               	rrcf	(___fladd@b+2)^0,f,c
  5620   002C78  3202               	rrcf	(___fladd@b+1)^0,f,c
  5621   002C7A  3201               	rrcf	___fladd@b^0,f,c
  5622   002C7C  2A0F               	incf	___fladd@bexp^0,f,c
  5623   002C7E                     l1136:
  5624   002C7E  500E               	movf	___fladd@aexp^0,w,c
  5625   002C80  5C0F               	subwf	___fladd@bexp^0,w,c
  5626   002C82  A0D8               	btfss	status,0,c
  5627   002C84  EF46  F016         	goto	u2731
  5628   002C88  EF48  F016         	goto	u2730
  5629   002C8C                     u2731:
  5630   002C8C  EF22  F016         	goto	l1137
  5631   002C90                     u2730:
  5632   002C90                     l1135:
  5633   002C90  BC0D               	btfsc	___fladd@signs^0,6,c
  5634   002C92  EF4D  F016         	goto	u2741
  5635   002C96  EF4F  F016         	goto	u2740
  5636   002C9A                     u2741:
  5637   002C9A  EF8F  F016         	goto	l3082
  5638   002C9E                     u2740:
  5639   002C9E  500F               	movf	___fladd@bexp^0,w,c
  5640   002CA0  A4D8               	btfss	status,2,c
  5641   002CA2  EF55  F016         	goto	u2751
  5642   002CA6  EF57  F016         	goto	u2750
  5643   002CAA                     u2751:
  5644   002CAA  EF61  F016         	goto	l3064
  5645   002CAE                     u2750:
  5646   002CAE  0E00               	movlw	0
  5647   002CB0  6E01               	movwf	?___fladd^0,c
  5648   002CB2  0E00               	movlw	0
  5649   002CB4  6E02               	movwf	(?___fladd+1)^0,c
  5650   002CB6  0E00               	movlw	0
  5651   002CB8  6E03               	movwf	(?___fladd+2)^0,c
  5652   002CBA  0E00               	movlw	0
  5653   002CBC  6E04               	movwf	(?___fladd+3)^0,c
  5654   002CBE  EFB0  F017         	goto	l1144
  5655   002CC2                     l3064:
  5656   002CC2  5005               	movf	___fladd@a^0,w,c
  5657   002CC4  2601               	addwf	___fladd@b^0,f,c
  5658   002CC6  5006               	movf	(___fladd@a+1)^0,w,c
  5659   002CC8  2202               	addwfc	(___fladd@b+1)^0,f,c
  5660   002CCA  5007               	movf	(___fladd@a+2)^0,w,c
  5661   002CCC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5662   002CCE  5008               	movf	(___fladd@a+3)^0,w,c
  5663   002CD0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5664   002CD2  A004               	btfss	(___fladd@b+3)^0,0,c
  5665   002CD4  EF6E  F016         	goto	u2761
  5666   002CD8  EF70  F016         	goto	u2760
  5667   002CDC                     u2761:
  5668   002CDC  EF1C  F017         	goto	l3118
  5669   002CE0                     u2760:
  5670   002CE0  A010               	btfss	___fladd@grs^0,0,c
  5671   002CE2  EF75  F016         	goto	u2771
  5672   002CE6  EF77  F016         	goto	u2770
  5673   002CEA                     u2771:
  5674   002CEA  EF7D  F016         	goto	l3072
  5675   002CEE                     u2770:
  5676   002CEE  90D8               	bcf	status,0,c
  5677   002CF0  3010               	rrcf	___fladd@grs^0,w,c
  5678   002CF2  0901               	iorlw	1
  5679   002CF4  6E10               	movwf	___fladd@grs^0,c
  5680   002CF6  EF7F  F016         	goto	l3074
  5681   002CFA                     l3072:
  5682   002CFA  90D8               	bcf	status,0,c
  5683   002CFC  3210               	rrcf	___fladd@grs^0,f,c
  5684   002CFE                     l3074:
  5685   002CFE  A001               	btfss	___fladd@b^0,0,c
  5686   002D00  EF84  F016         	goto	u2781
  5687   002D04  EF86  F016         	goto	u2780
  5688   002D08                     u2781:
  5689   002D08  EF87  F016         	goto	l3078
  5690   002D0C                     u2780:
  5691   002D0C  8E10               	bsf	___fladd@grs^0,7,c
  5692   002D0E                     l3078:
  5693   002D0E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5694   002D10  3204               	rrcf	(___fladd@b+3)^0,f,c
  5695   002D12  3203               	rrcf	(___fladd@b+2)^0,f,c
  5696   002D14  3202               	rrcf	(___fladd@b+1)^0,f,c
  5697   002D16  3201               	rrcf	___fladd@b^0,f,c
  5698   002D18  2A0F               	incf	___fladd@bexp^0,f,c
  5699   002D1A  EF1C  F017         	goto	l3118
  5700   002D1E                     l3082:
  5701   002D1E  5005               	movf	___fladd@a^0,w,c
  5702   002D20  5C01               	subwf	___fladd@b^0,w,c
  5703   002D22  5006               	movf	(___fladd@a+1)^0,w,c
  5704   002D24  5802               	subwfb	(___fladd@b+1)^0,w,c
  5705   002D26  5007               	movf	(___fladd@a+2)^0,w,c
  5706   002D28  5803               	subwfb	(___fladd@b+2)^0,w,c
  5707   002D2A  5004               	movf	(___fladd@b+3)^0,w,c
  5708   002D2C  0A80               	xorlw	128
  5709   002D2E  6E09               	movwf	??___fladd^0,c
  5710   002D30  5008               	movf	(___fladd@a+3)^0,w,c
  5711   002D32  0A80               	xorlw	128
  5712   002D34  5809               	subwfb	??___fladd^0,w,c
  5713   002D36  B0D8               	btfsc	status,0,c
  5714   002D38  EFA0  F016         	goto	u2791
  5715   002D3C  EFA2  F016         	goto	u2790
  5716   002D40                     u2791:
  5717   002D40  EFCD  F016         	goto	l3092
  5718   002D44                     u2790:
  5719   002D44  5001               	movf	___fladd@b^0,w,c
  5720   002D46  5C05               	subwf	___fladd@a^0,w,c
  5721   002D48  6E09               	movwf	??___fladd^0,c
  5722   002D4A  5002               	movf	(___fladd@b+1)^0,w,c
  5723   002D4C  5806               	subwfb	(___fladd@a+1)^0,w,c
  5724   002D4E  6E0A               	movwf	(??___fladd+1)^0,c
  5725   002D50  5003               	movf	(___fladd@b+2)^0,w,c
  5726   002D52  5807               	subwfb	(___fladd@a+2)^0,w,c
  5727   002D54  6E0B               	movwf	(??___fladd+2)^0,c
  5728   002D56  5004               	movf	(___fladd@b+3)^0,w,c
  5729   002D58  5808               	subwfb	(___fladd@a+3)^0,w,c
  5730   002D5A  6E0C               	movwf	(??___fladd+3)^0,c
  5731   002D5C  0EFF               	movlw	255
  5732   002D5E  2409               	addwf	??___fladd^0,w,c
  5733   002D60  6E01               	movwf	___fladd@b^0,c
  5734   002D62  0EFF               	movlw	255
  5735   002D64  200A               	addwfc	(??___fladd+1)^0,w,c
  5736   002D66  6E02               	movwf	(___fladd@b+1)^0,c
  5737   002D68  0EFF               	movlw	255
  5738   002D6A  200B               	addwfc	(??___fladd+2)^0,w,c
  5739   002D6C  6E03               	movwf	(___fladd@b+2)^0,c
  5740   002D6E  0EFF               	movlw	255
  5741   002D70  200C               	addwfc	(??___fladd+3)^0,w,c
  5742   002D72  6E04               	movwf	(___fladd@b+3)^0,c
  5743   002D74  0E80               	movlw	128
  5744   002D76  1A0D               	xorwf	___fladd@signs^0,f,c
  5745   002D78  6C10               	negf	___fladd@grs^0,c
  5746   002D7A  5010               	movf	___fladd@grs^0,w,c
  5747   002D7C  A4D8               	btfss	status,2,c
  5748   002D7E  EFC3  F016         	goto	u2801
  5749   002D82  EFC5  F016         	goto	u2800
  5750   002D86                     u2801:
  5751   002D86  EFD5  F016         	goto	l1152
  5752   002D8A                     u2800:
  5753   002D8A  0E01               	movlw	1
  5754   002D8C  2601               	addwf	___fladd@b^0,f,c
  5755   002D8E  0E00               	movlw	0
  5756   002D90  2202               	addwfc	(___fladd@b+1)^0,f,c
  5757   002D92  2203               	addwfc	(___fladd@b+2)^0,f,c
  5758   002D94  2204               	addwfc	(___fladd@b+3)^0,f,c
  5759   002D96  EFD5  F016         	goto	l1152
  5760   002D9A                     l3092:
  5761   002D9A  5005               	movf	___fladd@a^0,w,c
  5762   002D9C  5E01               	subwf	___fladd@b^0,f,c
  5763   002D9E  5006               	movf	(___fladd@a+1)^0,w,c
  5764   002DA0  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5765   002DA2  5007               	movf	(___fladd@a+2)^0,w,c
  5766   002DA4  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5767   002DA6  5008               	movf	(___fladd@a+3)^0,w,c
  5768   002DA8  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5769   002DAA                     l1152:
  5770   002DAA  5001               	movf	___fladd@b^0,w,c
  5771   002DAC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5772   002DAE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5773   002DB0  1004               	iorwf	(___fladd@b+3)^0,w,c
  5774   002DB2  A4D8               	btfss	status,2,c
  5775   002DB4  EFDE  F016         	goto	u2811
  5776   002DB8  EFE0  F016         	goto	u2810
  5777   002DBC                     u2811:
  5778   002DBC  EF15  F017         	goto	l3116
  5779   002DC0                     u2810:
  5780   002DC0  5010               	movf	___fladd@grs^0,w,c
  5781   002DC2  A4D8               	btfss	status,2,c
  5782   002DC4  EFE6  F016         	goto	u2821
  5783   002DC8  EFE8  F016         	goto	u2820
  5784   002DCC                     u2821:
  5785   002DCC  EF15  F017         	goto	l3116
  5786   002DD0                     u2820:
  5787   002DD0  0E00               	movlw	0
  5788   002DD2  6E01               	movwf	?___fladd^0,c
  5789   002DD4  0E00               	movlw	0
  5790   002DD6  6E02               	movwf	(?___fladd+1)^0,c
  5791   002DD8  0E00               	movlw	0
  5792   002DDA  6E03               	movwf	(?___fladd+2)^0,c
  5793   002DDC  0E00               	movlw	0
  5794   002DDE  6E04               	movwf	(?___fladd+3)^0,c
  5795   002DE0  EFB0  F017         	goto	l1144
  5796   002DE4                     l3100:
  5797   002DE4  90D8               	bcf	status,0,c
  5798   002DE6  3601               	rlcf	___fladd@b^0,f,c
  5799   002DE8  3602               	rlcf	(___fladd@b+1)^0,f,c
  5800   002DEA  3603               	rlcf	(___fladd@b+2)^0,f,c
  5801   002DEC  3604               	rlcf	(___fladd@b+3)^0,f,c
  5802   002DEE  AE10               	btfss	___fladd@grs^0,7,c
  5803   002DF0  EFFC  F016         	goto	u2831
  5804   002DF4  EFFE  F016         	goto	u2830
  5805   002DF8                     u2831:
  5806   002DF8  EFFF  F016         	goto	l3106
  5807   002DFC                     u2830:
  5808   002DFC  8001               	bsf	___fladd@b^0,0,c
  5809   002DFE                     l3106:
  5810   002DFE  A010               	btfss	___fladd@grs^0,0,c
  5811   002E00  EF04  F017         	goto	u2841
  5812   002E04  EF06  F017         	goto	u2840
  5813   002E08                     u2841:
  5814   002E08  EF0A  F017         	goto	l3110
  5815   002E0C                     u2840:
  5816   002E0C  80D8               	bsf	status,0,c
  5817   002E0E  3610               	rlcf	___fladd@grs^0,f,c
  5818   002E10  EF0C  F017         	goto	l3112
  5819   002E14                     l3110:
  5820   002E14  90D8               	bcf	status,0,c
  5821   002E16  3610               	rlcf	___fladd@grs^0,f,c
  5822   002E18                     l3112:
  5823   002E18  500F               	movf	___fladd@bexp^0,w,c
  5824   002E1A  B4D8               	btfsc	status,2,c
  5825   002E1C  EF12  F017         	goto	u2851
  5826   002E20  EF14  F017         	goto	u2850
  5827   002E24                     u2851:
  5828   002E24  EF15  F017         	goto	l3116
  5829   002E28                     u2850:
  5830   002E28  060F               	decf	___fladd@bexp^0,f,c
  5831   002E2A                     l3116:
  5832   002E2A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5833   002E2C  EF1A  F017         	goto	u2861
  5834   002E30  EF1C  F017         	goto	u2860
  5835   002E34                     u2861:
  5836   002E34  EFF2  F016         	goto	l3100
  5837   002E38                     u2860:
  5838   002E38                     l3118:
  5839   002E38  0E00               	movlw	0
  5840   002E3A  6E0E               	movwf	___fladd@aexp^0,c
  5841   002E3C  AE10               	btfss	___fladd@grs^0,7,c
  5842   002E3E  EF23  F017         	goto	u2871
  5843   002E42  EF25  F017         	goto	u2870
  5844   002E46                     u2871:
  5845   002E46  EF3D  F017         	goto	l1161
  5846   002E4A                     u2870:
  5847   002E4A  C010  F009         	movff	___fladd@grs,??___fladd
  5848   002E4E  0E7F               	movlw	127
  5849   002E50  1609               	andwf	??___fladd^0,f,c
  5850   002E52  B4D8               	btfsc	status,2,c
  5851   002E54  EF2E  F017         	goto	u2881
  5852   002E58  EF30  F017         	goto	u2880
  5853   002E5C                     u2881:
  5854   002E5C  EF34  F017         	goto	l1162
  5855   002E60                     u2880:
  5856   002E60                     l3124:
  5857   002E60  0E01               	movlw	1
  5858   002E62  6E0E               	movwf	___fladd@aexp^0,c
  5859   002E64  EF3D  F017         	goto	l1161
  5860   002E68                     l1162:
  5861   002E68  A001               	btfss	___fladd@b^0,0,c
  5862   002E6A  EF39  F017         	goto	u2891
  5863   002E6E  EF3B  F017         	goto	u2890
  5864   002E72                     u2891:
  5865   002E72  EF3D  F017         	goto	l1161
  5866   002E76                     u2890:
  5867   002E76  EF30  F017         	goto	l3124
  5868   002E7A                     l1161:
  5869   002E7A  500E               	movf	___fladd@aexp^0,w,c
  5870   002E7C  B4D8               	btfsc	status,2,c
  5871   002E7E  EF43  F017         	goto	u2901
  5872   002E82  EF45  F017         	goto	u2900
  5873   002E86                     u2901:
  5874   002E86  EF70  F017         	goto	l3136
  5875   002E8A                     u2900:
  5876   002E8A  0E01               	movlw	1
  5877   002E8C  2601               	addwf	___fladd@b^0,f,c
  5878   002E8E  0E00               	movlw	0
  5879   002E90  2202               	addwfc	(___fladd@b+1)^0,f,c
  5880   002E92  2203               	addwfc	(___fladd@b+2)^0,f,c
  5881   002E94  2204               	addwfc	(___fladd@b+3)^0,f,c
  5882   002E96  A004               	btfss	(___fladd@b+3)^0,0,c
  5883   002E98  EF50  F017         	goto	u2911
  5884   002E9C  EF52  F017         	goto	u2910
  5885   002EA0                     u2911:
  5886   002EA0  EF70  F017         	goto	l3136
  5887   002EA4                     u2910:
  5888   002EA4  C001  F009         	movff	___fladd@b,??___fladd
  5889   002EA8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5890   002EAC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5891   002EB0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5892   002EB4  340C               	rlcf	(??___fladd+3)^0,w,c
  5893   002EB6  320C               	rrcf	(??___fladd+3)^0,f,c
  5894   002EB8  320B               	rrcf	(??___fladd+2)^0,f,c
  5895   002EBA  320A               	rrcf	(??___fladd+1)^0,f,c
  5896   002EBC  3209               	rrcf	??___fladd^0,f,c
  5897   002EBE  C009  F001         	movff	??___fladd,___fladd@b
  5898   002EC2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5899   002EC6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5900   002ECA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5901   002ECE  280F               	incf	___fladd@bexp^0,w,c
  5902   002ED0  B4D8               	btfsc	status,2,c
  5903   002ED2  EF6D  F017         	goto	u2921
  5904   002ED6  EF6F  F017         	goto	u2920
  5905   002EDA                     u2921:
  5906   002EDA  EF70  F017         	goto	l3136
  5907   002EDE                     u2920:
  5908   002EDE  2A0F               	incf	___fladd@bexp^0,f,c
  5909   002EE0                     l3136:
  5910   002EE0  280F               	incf	___fladd@bexp^0,w,c
  5911   002EE2  B4D8               	btfsc	status,2,c
  5912   002EE4  EF76  F017         	goto	u2931
  5913   002EE8  EF78  F017         	goto	u2930
  5914   002EEC                     u2931:
  5915   002EEC  EF80  F017         	goto	l3140
  5916   002EF0                     u2930:
  5917   002EF0  500F               	movf	___fladd@bexp^0,w,c
  5918   002EF2  A4D8               	btfss	status,2,c
  5919   002EF4  EF7E  F017         	goto	u2941
  5920   002EF8  EF80  F017         	goto	u2940
  5921   002EFC                     u2941:
  5922   002EFC  EF92  F017         	goto	l3144
  5923   002F00                     u2940:
  5924   002F00                     l3140:
  5925   002F00  0E00               	movlw	0
  5926   002F02  6E01               	movwf	___fladd@b^0,c
  5927   002F04  0E00               	movlw	0
  5928   002F06  6E02               	movwf	(___fladd@b+1)^0,c
  5929   002F08  0E00               	movlw	0
  5930   002F0A  6E03               	movwf	(___fladd@b+2)^0,c
  5931   002F0C  0E00               	movlw	0
  5932   002F0E  6E04               	movwf	(___fladd@b+3)^0,c
  5933   002F10  500F               	movf	___fladd@bexp^0,w,c
  5934   002F12  A4D8               	btfss	status,2,c
  5935   002F14  EF8E  F017         	goto	u2951
  5936   002F18  EF90  F017         	goto	u2950
  5937   002F1C                     u2951:
  5938   002F1C  EF92  F017         	goto	l3144
  5939   002F20                     u2950:
  5940   002F20  0E00               	movlw	0
  5941   002F22  6E0D               	movwf	___fladd@signs^0,c
  5942   002F24                     l3144:
  5943   002F24  A00F               	btfss	___fladd@bexp^0,0,c
  5944   002F26  EF97  F017         	goto	u2961
  5945   002F2A  EF99  F017         	goto	u2960
  5946   002F2E                     u2961:
  5947   002F2E  EF9C  F017         	goto	l3148
  5948   002F32                     u2960:
  5949   002F32  8E03               	bsf	(___fladd@b+2)^0,7,c
  5950   002F34  EF9D  F017         	goto	l3150
  5951   002F38                     l3148:
  5952   002F38  9E03               	bcf	(___fladd@b+2)^0,7,c
  5953   002F3A                     l3150:
  5954   002F3A  90D8               	bcf	status,0,c
  5955   002F3C  300F               	rrcf	___fladd@bexp^0,w,c
  5956   002F3E  6E04               	movwf	(___fladd@b+3)^0,c
  5957   002F40  AE0D               	btfss	___fladd@signs^0,7,c
  5958   002F42  EFA5  F017         	goto	u2971
  5959   002F46  EFA7  F017         	goto	u2970
  5960   002F4A                     u2971:
  5961   002F4A  EFA8  F017         	goto	l3156
  5962   002F4E                     u2970:
  5963   002F4E  8E04               	bsf	(___fladd@b+3)^0,7,c
  5964   002F50                     l3156:
  5965   002F50  C001  F001         	movff	___fladd@b,?___fladd
  5966   002F54  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5967   002F58  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5968   002F5C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5969   002F60                     l1144:
  5970   002F60  0012               	return		;funcret
  5971   002F62                     __end_of___fladd:
  5972                           	callstack 0
  5973                           
  5974 ;; *************** function ___flmul *****************
  5975 ;; Defined at:
  5976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  b               4   58[COMRAM] unsigned char 
  5979 ;;  a               4   62[COMRAM] unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  prod            4   77[COMRAM] struct .
  5982 ;;  grs             4   71[COMRAM] unsigned long 
  5983 ;;  temp            2   81[COMRAM] struct .
  5984 ;;  bexp            1   76[COMRAM] unsigned char 
  5985 ;;  aexp            1   75[COMRAM] unsigned char 
  5986 ;;  sign            1   70[COMRAM] unsigned char 
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  4   58[COMRAM] unsigned char 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0, prodl, prodh
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5996 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6000 ;;Total ram usage:       25 bytes
  6001 ;; Hardware stack levels used: 1
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_custom_floatmodulo
  6006 ;;		_RGB_to_HSV
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text23
  6011   002F62                     __ptext23:
  6012                           	callstack 0
  6013   002F62                     ___flmul:
  6014                           	callstack 26
  6015   002F62  503E               	movf	(___flmul@b+3)^0,w,c
  6016   002F64  0B80               	andlw	128
  6017   002F66  6E47               	movwf	___flmul@sign^0,c
  6018   002F68  503E               	movf	(___flmul@b+3)^0,w,c
  6019   002F6A  243E               	addwf	(___flmul@b+3)^0,w,c
  6020   002F6C  6E4D               	movwf	___flmul@bexp^0,c
  6021   002F6E  AE3D               	btfss	(___flmul@b+2)^0,7,c
  6022   002F70  EFBC  F017         	goto	u3231
  6023   002F74  EFBE  F017         	goto	u3230
  6024   002F78                     u3231:
  6025   002F78  EFBF  F017         	goto	l3308
  6026   002F7C                     u3230:
  6027   002F7C  804D               	bsf	___flmul@bexp^0,0,c
  6028   002F7E                     l3308:
  6029   002F7E  504D               	movf	___flmul@bexp^0,w,c
  6030   002F80  B4D8               	btfsc	status,2,c
  6031   002F82  EFC5  F017         	goto	u3241
  6032   002F86  EFC7  F017         	goto	u3240
  6033   002F8A                     u3241:
  6034   002F8A  EFDA  F017         	goto	l3316
  6035   002F8E                     u3240:
  6036   002F8E  284D               	incf	___flmul@bexp^0,w,c
  6037   002F90  A4D8               	btfss	status,2,c
  6038   002F92  EFCD  F017         	goto	u3251
  6039   002F96  EFCF  F017         	goto	u3250
  6040   002F9A                     u3251:
  6041   002F9A  EFD7  F017         	goto	l3314
  6042   002F9E                     u3250:
  6043   002F9E  0E00               	movlw	0
  6044   002FA0  6E3B               	movwf	___flmul@b^0,c
  6045   002FA2  0E00               	movlw	0
  6046   002FA4  6E3C               	movwf	(___flmul@b+1)^0,c
  6047   002FA6  0E00               	movlw	0
  6048   002FA8  6E3D               	movwf	(___flmul@b+2)^0,c
  6049   002FAA  0E00               	movlw	0
  6050   002FAC  6E3E               	movwf	(___flmul@b+3)^0,c
  6051   002FAE                     l3314:
  6052   002FAE  8E3D               	bsf	(___flmul@b+2)^0,7,c
  6053   002FB0  EFE2  F017         	goto	l3318
  6054   002FB4                     l3316:
  6055   002FB4  0E00               	movlw	0
  6056   002FB6  6E3B               	movwf	___flmul@b^0,c
  6057   002FB8  0E00               	movlw	0
  6058   002FBA  6E3C               	movwf	(___flmul@b+1)^0,c
  6059   002FBC  0E00               	movlw	0
  6060   002FBE  6E3D               	movwf	(___flmul@b+2)^0,c
  6061   002FC0  0E00               	movlw	0
  6062   002FC2  6E3E               	movwf	(___flmul@b+3)^0,c
  6063   002FC4                     l3318:
  6064   002FC4  5042               	movf	(___flmul@a+3)^0,w,c
  6065   002FC6  0B80               	andlw	128
  6066   002FC8  1A47               	xorwf	___flmul@sign^0,f,c
  6067   002FCA  5042               	movf	(___flmul@a+3)^0,w,c
  6068   002FCC  2442               	addwf	(___flmul@a+3)^0,w,c
  6069   002FCE  6E4C               	movwf	___flmul@aexp^0,c
  6070   002FD0  AE41               	btfss	(___flmul@a+2)^0,7,c
  6071   002FD2  EFED  F017         	goto	u3261
  6072   002FD6  EFEF  F017         	goto	u3260
  6073   002FDA                     u3261:
  6074   002FDA  EFF0  F017         	goto	l3326
  6075   002FDE                     u3260:
  6076   002FDE  804C               	bsf	___flmul@aexp^0,0,c
  6077   002FE0                     l3326:
  6078   002FE0  504C               	movf	___flmul@aexp^0,w,c
  6079   002FE2  B4D8               	btfsc	status,2,c
  6080   002FE4  EFF6  F017         	goto	u3271
  6081   002FE8  EFF8  F017         	goto	u3270
  6082   002FEC                     u3271:
  6083   002FEC  EF0B  F018         	goto	l3334
  6084   002FF0                     u3270:
  6085   002FF0  284C               	incf	___flmul@aexp^0,w,c
  6086   002FF2  A4D8               	btfss	status,2,c
  6087   002FF4  EFFE  F017         	goto	u3281
  6088   002FF8  EF00  F018         	goto	u3280
  6089   002FFC                     u3281:
  6090   002FFC  EF08  F018         	goto	l3332
  6091   003000                     u3280:
  6092   003000  0E00               	movlw	0
  6093   003002  6E3F               	movwf	___flmul@a^0,c
  6094   003004  0E00               	movlw	0
  6095   003006  6E40               	movwf	(___flmul@a+1)^0,c
  6096   003008  0E00               	movlw	0
  6097   00300A  6E41               	movwf	(___flmul@a+2)^0,c
  6098   00300C  0E00               	movlw	0
  6099   00300E  6E42               	movwf	(___flmul@a+3)^0,c
  6100   003010                     l3332:
  6101   003010  8E41               	bsf	(___flmul@a+2)^0,7,c
  6102   003012  EF13  F018         	goto	l1221
  6103   003016                     l3334:
  6104   003016  0E00               	movlw	0
  6105   003018  6E3F               	movwf	___flmul@a^0,c
  6106   00301A  0E00               	movlw	0
  6107   00301C  6E40               	movwf	(___flmul@a+1)^0,c
  6108   00301E  0E00               	movlw	0
  6109   003020  6E41               	movwf	(___flmul@a+2)^0,c
  6110   003022  0E00               	movlw	0
  6111   003024  6E42               	movwf	(___flmul@a+3)^0,c
  6112   003026                     l1221:
  6113   003026  504C               	movf	___flmul@aexp^0,w,c
  6114   003028  B4D8               	btfsc	status,2,c
  6115   00302A  EF19  F018         	goto	u3291
  6116   00302E  EF1B  F018         	goto	u3290
  6117   003032                     u3291:
  6118   003032  EF23  F018         	goto	l3338
  6119   003036                     u3290:
  6120   003036  504D               	movf	___flmul@bexp^0,w,c
  6121   003038  A4D8               	btfss	status,2,c
  6122   00303A  EF21  F018         	goto	u3301
  6123   00303E  EF23  F018         	goto	u3300
  6124   003042                     u3301:
  6125   003042  EF2D  F018         	goto	l3342
  6126   003046                     u3300:
  6127   003046                     l3338:
  6128   003046  0E00               	movlw	0
  6129   003048  6E3B               	movwf	?___flmul^0,c
  6130   00304A  0E00               	movlw	0
  6131   00304C  6E3C               	movwf	(?___flmul+1)^0,c
  6132   00304E  0E00               	movlw	0
  6133   003050  6E3D               	movwf	(?___flmul+2)^0,c
  6134   003052  0E00               	movlw	0
  6135   003054  6E3E               	movwf	(?___flmul+3)^0,c
  6136   003056  EFC5  F019         	goto	l1225
  6137   00305A                     l3342:
  6138   00305A  5041               	movf	(___flmul@a+2)^0,w,c
  6139   00305C  023B               	mulwf	___flmul@b^0,c
  6140   00305E  CFF3 F052          	movff	prodl,___flmul@temp
  6141   003062  CFF4 F053          	movff	prodh,___flmul@temp+1
  6142   003066  5052               	movf	___flmul@temp^0,w,c
  6143   003068  6E48               	movwf	___flmul@grs^0,c
  6144   00306A  6A49               	clrf	(___flmul@grs+1)^0,c
  6145   00306C  6A4A               	clrf	(___flmul@grs+2)^0,c
  6146   00306E  6A4B               	clrf	(___flmul@grs+3)^0,c
  6147   003070  5053               	movf	(___flmul@temp+1)^0,w,c
  6148   003072  6E4E               	movwf	___flmul@prod^0,c
  6149   003074  6A4F               	clrf	(___flmul@prod+1)^0,c
  6150   003076  6A50               	clrf	(___flmul@prod+2)^0,c
  6151   003078  6A51               	clrf	(___flmul@prod+3)^0,c
  6152   00307A  5040               	movf	(___flmul@a+1)^0,w,c
  6153   00307C  023C               	mulwf	(___flmul@b+1)^0,c
  6154   00307E  CFF3 F052          	movff	prodl,___flmul@temp
  6155   003082  CFF4 F053          	movff	prodh,___flmul@temp+1
  6156   003086  5052               	movf	___flmul@temp^0,w,c
  6157   003088  2648               	addwf	___flmul@grs^0,f,c
  6158   00308A  0E00               	movlw	0
  6159   00308C  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6160   00308E  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6161   003090  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6162   003092  5053               	movf	(___flmul@temp+1)^0,w,c
  6163   003094  264E               	addwf	___flmul@prod^0,f,c
  6164   003096  0E00               	movlw	0
  6165   003098  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6166   00309A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6167   00309C  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6168   00309E  503F               	movf	___flmul@a^0,w,c
  6169   0030A0  023D               	mulwf	(___flmul@b+2)^0,c
  6170   0030A2  CFF3 F052          	movff	prodl,___flmul@temp
  6171   0030A6  CFF4 F053          	movff	prodh,___flmul@temp+1
  6172   0030AA  5052               	movf	___flmul@temp^0,w,c
  6173   0030AC  2648               	addwf	___flmul@grs^0,f,c
  6174   0030AE  0E00               	movlw	0
  6175   0030B0  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6176   0030B2  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6177   0030B4  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6178   0030B6  5053               	movf	(___flmul@temp+1)^0,w,c
  6179   0030B8  264E               	addwf	___flmul@prod^0,f,c
  6180   0030BA  0E00               	movlw	0
  6181   0030BC  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6182   0030BE  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6183   0030C0  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6184   0030C2  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6185   0030C6  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6186   0030CA  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6187   0030CE  6A48               	clrf	___flmul@grs^0,c
  6188   0030D0  503F               	movf	___flmul@a^0,w,c
  6189   0030D2  023C               	mulwf	(___flmul@b+1)^0,c
  6190   0030D4  CFF3 F052          	movff	prodl,___flmul@temp
  6191   0030D8  CFF4 F053          	movff	prodh,___flmul@temp+1
  6192   0030DC  5052               	movf	___flmul@temp^0,w,c
  6193   0030DE  2648               	addwf	___flmul@grs^0,f,c
  6194   0030E0  5053               	movf	(___flmul@temp+1)^0,w,c
  6195   0030E2  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6196   0030E4  0E00               	movlw	0
  6197   0030E6  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6198   0030E8  0E00               	movlw	0
  6199   0030EA  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6200   0030EC  5040               	movf	(___flmul@a+1)^0,w,c
  6201   0030EE  023B               	mulwf	___flmul@b^0,c
  6202   0030F0  CFF3 F052          	movff	prodl,___flmul@temp
  6203   0030F4  CFF4 F053          	movff	prodh,___flmul@temp+1
  6204   0030F8  5052               	movf	___flmul@temp^0,w,c
  6205   0030FA  2648               	addwf	___flmul@grs^0,f,c
  6206   0030FC  5053               	movf	(___flmul@temp+1)^0,w,c
  6207   0030FE  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6208   003100  0E00               	movlw	0
  6209   003102  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6210   003104  0E00               	movlw	0
  6211   003106  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6212   003108  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6213   00310C  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6214   003110  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6215   003114  6A48               	clrf	___flmul@grs^0,c
  6216   003116  503F               	movf	___flmul@a^0,w,c
  6217   003118  023B               	mulwf	___flmul@b^0,c
  6218   00311A  CFF3 F052          	movff	prodl,___flmul@temp
  6219   00311E  CFF4 F053          	movff	prodh,___flmul@temp+1
  6220   003122  5052               	movf	___flmul@temp^0,w,c
  6221   003124  2648               	addwf	___flmul@grs^0,f,c
  6222   003126  5053               	movf	(___flmul@temp+1)^0,w,c
  6223   003128  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6224   00312A  0E00               	movlw	0
  6225   00312C  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6226   00312E  0E00               	movlw	0
  6227   003130  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6228   003132  5041               	movf	(___flmul@a+2)^0,w,c
  6229   003134  023C               	mulwf	(___flmul@b+1)^0,c
  6230   003136  CFF3 F052          	movff	prodl,___flmul@temp
  6231   00313A  CFF4 F053          	movff	prodh,___flmul@temp+1
  6232   00313E  5052               	movf	___flmul@temp^0,w,c
  6233   003140  264E               	addwf	___flmul@prod^0,f,c
  6234   003142  5053               	movf	(___flmul@temp+1)^0,w,c
  6235   003144  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6236   003146  0E00               	movlw	0
  6237   003148  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6238   00314A  0E00               	movlw	0
  6239   00314C  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6240   00314E  5040               	movf	(___flmul@a+1)^0,w,c
  6241   003150  023D               	mulwf	(___flmul@b+2)^0,c
  6242   003152  CFF3 F052          	movff	prodl,___flmul@temp
  6243   003156  CFF4 F053          	movff	prodh,___flmul@temp+1
  6244   00315A  5052               	movf	___flmul@temp^0,w,c
  6245   00315C  264E               	addwf	___flmul@prod^0,f,c
  6246   00315E  5053               	movf	(___flmul@temp+1)^0,w,c
  6247   003160  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6248   003162  0E00               	movlw	0
  6249   003164  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6250   003166  0E00               	movlw	0
  6251   003168  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6252   00316A  5041               	movf	(___flmul@a+2)^0,w,c
  6253   00316C  023D               	mulwf	(___flmul@b+2)^0,c
  6254   00316E  CFF3 F052          	movff	prodl,___flmul@temp
  6255   003172  CFF4 F053          	movff	prodh,___flmul@temp+1
  6256   003176  5052               	movf	___flmul@temp^0,w,c
  6257   003178  6E43               	movwf	??___flmul^0,c
  6258   00317A  5053               	movf	(___flmul@temp+1)^0,w,c
  6259   00317C  6E44               	movwf	(??___flmul+1)^0,c
  6260   00317E  6A45               	clrf	(??___flmul+2)^0,c
  6261   003180  6A46               	clrf	(??___flmul+3)^0,c
  6262   003182  C045  F046         	movff	??___flmul+2,??___flmul+3
  6263   003186  C044  F045         	movff	??___flmul+1,??___flmul+2
  6264   00318A  C043  F044         	movff	??___flmul,??___flmul+1
  6265   00318E  6A43               	clrf	??___flmul^0,c
  6266   003190  5043               	movf	??___flmul^0,w,c
  6267   003192  264E               	addwf	___flmul@prod^0,f,c
  6268   003194  5044               	movf	(??___flmul+1)^0,w,c
  6269   003196  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6270   003198  5045               	movf	(??___flmul+2)^0,w,c
  6271   00319A  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6272   00319C  5046               	movf	(??___flmul+3)^0,w,c
  6273   00319E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6274   0031A0  C048  F043         	movff	___flmul@grs,??___flmul
  6275   0031A4  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  6276   0031A8  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  6277   0031AC  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  6278   0031B0  0E19               	movlw	25
  6279   0031B2  EFE0  F018         	goto	u3310
  6280   0031B6                     u3315:
  6281   0031B6  90D8               	bcf	status,0,c
  6282   0031B8  3246               	rrcf	(??___flmul+3)^0,f,c
  6283   0031BA  3245               	rrcf	(??___flmul+2)^0,f,c
  6284   0031BC  3244               	rrcf	(??___flmul+1)^0,f,c
  6285   0031BE  3243               	rrcf	??___flmul^0,f,c
  6286   0031C0                     u3310:
  6287   0031C0  2EE8               	decfsz	wreg,f,c
  6288   0031C2  EFDB  F018         	goto	u3315
  6289   0031C6  5043               	movf	??___flmul^0,w,c
  6290   0031C8  264E               	addwf	___flmul@prod^0,f,c
  6291   0031CA  5044               	movf	(??___flmul+1)^0,w,c
  6292   0031CC  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6293   0031CE  5045               	movf	(??___flmul+2)^0,w,c
  6294   0031D0  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6295   0031D2  5046               	movf	(??___flmul+3)^0,w,c
  6296   0031D4  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6297   0031D6  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6298   0031DA  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6299   0031DE  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6300   0031E2  6A48               	clrf	___flmul@grs^0,c
  6301   0031E4  504C               	movf	___flmul@aexp^0,w,c
  6302   0031E6  C04D  F043         	movff	___flmul@bexp,??___flmul
  6303   0031EA  6A44               	clrf	(??___flmul+1)^0,c
  6304   0031EC  2643               	addwf	??___flmul^0,f,c
  6305   0031EE  0E00               	movlw	0
  6306   0031F0  2244               	addwfc	(??___flmul+1)^0,f,c
  6307   0031F2  0E82               	movlw	130
  6308   0031F4  2443               	addwf	??___flmul^0,w,c
  6309   0031F6  6E52               	movwf	___flmul@temp^0,c
  6310   0031F8  0EFF               	movlw	255
  6311   0031FA  2044               	addwfc	(??___flmul+1)^0,w,c
  6312   0031FC  6E53               	movwf	(___flmul@temp+1)^0,c
  6313   0031FE  EF16  F019         	goto	l3390
  6314   003202                     l3384:
  6315   003202  90D8               	bcf	status,0,c
  6316   003204  364E               	rlcf	___flmul@prod^0,f,c
  6317   003206  364F               	rlcf	(___flmul@prod+1)^0,f,c
  6318   003208  3650               	rlcf	(___flmul@prod+2)^0,f,c
  6319   00320A  3651               	rlcf	(___flmul@prod+3)^0,f,c
  6320   00320C  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6321   00320E  EF0B  F019         	goto	u3321
  6322   003212  EF0D  F019         	goto	u3320
  6323   003216                     u3321:
  6324   003216  EF0E  F019         	goto	l1228
  6325   00321A                     u3320:
  6326   00321A  804E               	bsf	___flmul@prod^0,0,c
  6327   00321C                     l1228:
  6328   00321C  90D8               	bcf	status,0,c
  6329   00321E  3648               	rlcf	___flmul@grs^0,f,c
  6330   003220  3649               	rlcf	(___flmul@grs+1)^0,f,c
  6331   003222  364A               	rlcf	(___flmul@grs+2)^0,f,c
  6332   003224  364B               	rlcf	(___flmul@grs+3)^0,f,c
  6333   003226  0652               	decf	___flmul@temp^0,f,c
  6334   003228  A0D8               	btfss	status,0,c
  6335   00322A  0653               	decf	(___flmul@temp+1)^0,f,c
  6336   00322C                     l3390:
  6337   00322C  AE50               	btfss	(___flmul@prod+2)^0,7,c
  6338   00322E  EF1B  F019         	goto	u3331
  6339   003232  EF1D  F019         	goto	u3330
  6340   003236                     u3331:
  6341   003236  EF01  F019         	goto	l3384
  6342   00323A                     u3330:
  6343   00323A  0E00               	movlw	0
  6344   00323C  6E4C               	movwf	___flmul@aexp^0,c
  6345   00323E  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6346   003240  EF24  F019         	goto	u3341
  6347   003244  EF26  F019         	goto	u3340
  6348   003248                     u3341:
  6349   003248  EF4A  F019         	goto	l1230
  6350   00324C                     u3340:
  6351   00324C  0EFF               	movlw	255
  6352   00324E  1448               	andwf	___flmul@grs^0,w,c
  6353   003250  6E43               	movwf	??___flmul^0,c
  6354   003252  0EFF               	movlw	255
  6355   003254  1449               	andwf	(___flmul@grs+1)^0,w,c
  6356   003256  6E44               	movwf	(??___flmul+1)^0,c
  6357   003258  0EFF               	movlw	255
  6358   00325A  144A               	andwf	(___flmul@grs+2)^0,w,c
  6359   00325C  6E45               	movwf	(??___flmul+2)^0,c
  6360   00325E  0E7F               	movlw	127
  6361   003260  144B               	andwf	(___flmul@grs+3)^0,w,c
  6362   003262  6E46               	movwf	(??___flmul+3)^0,c
  6363   003264  5043               	movf	??___flmul^0,w,c
  6364   003266  1044               	iorwf	(??___flmul+1)^0,w,c
  6365   003268  1045               	iorwf	(??___flmul+2)^0,w,c
  6366   00326A  1046               	iorwf	(??___flmul+3)^0,w,c
  6367   00326C  B4D8               	btfsc	status,2,c
  6368   00326E  EF3B  F019         	goto	u3351
  6369   003272  EF3D  F019         	goto	u3350
  6370   003276                     u3351:
  6371   003276  EF41  F019         	goto	l1231
  6372   00327A                     u3350:
  6373   00327A                     l3398:
  6374   00327A  0E01               	movlw	1
  6375   00327C  6E4C               	movwf	___flmul@aexp^0,c
  6376   00327E  EF4A  F019         	goto	l1230
  6377   003282                     l1231:
  6378   003282  A04E               	btfss	___flmul@prod^0,0,c
  6379   003284  EF46  F019         	goto	u3361
  6380   003288  EF48  F019         	goto	u3360
  6381   00328C                     u3361:
  6382   00328C  EF4A  F019         	goto	l1230
  6383   003290                     u3360:
  6384   003290  EF3D  F019         	goto	l3398
  6385   003294                     l1230:
  6386   003294  504C               	movf	___flmul@aexp^0,w,c
  6387   003296  B4D8               	btfsc	status,2,c
  6388   003298  EF50  F019         	goto	u3371
  6389   00329C  EF52  F019         	goto	u3370
  6390   0032A0                     u3371:
  6391   0032A0  EF76  F019         	goto	l3410
  6392   0032A4                     u3370:
  6393   0032A4  0E01               	movlw	1
  6394   0032A6  264E               	addwf	___flmul@prod^0,f,c
  6395   0032A8  0E00               	movlw	0
  6396   0032AA  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6397   0032AC  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6398   0032AE  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6399   0032B0  A051               	btfss	(___flmul@prod+3)^0,0,c
  6400   0032B2  EF5D  F019         	goto	u3381
  6401   0032B6  EF5F  F019         	goto	u3380
  6402   0032BA                     u3381:
  6403   0032BA  EF76  F019         	goto	l3410
  6404   0032BE                     u3380:
  6405   0032BE  C04E  F043         	movff	___flmul@prod,??___flmul
  6406   0032C2  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  6407   0032C6  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  6408   0032CA  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  6409   0032CE  3446               	rlcf	(??___flmul+3)^0,w,c
  6410   0032D0  3246               	rrcf	(??___flmul+3)^0,f,c
  6411   0032D2  3245               	rrcf	(??___flmul+2)^0,f,c
  6412   0032D4  3244               	rrcf	(??___flmul+1)^0,f,c
  6413   0032D6  3243               	rrcf	??___flmul^0,f,c
  6414   0032D8  C043  F04E         	movff	??___flmul,___flmul@prod
  6415   0032DC  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6416   0032E0  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6417   0032E4  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6418   0032E8  4A52               	infsnz	___flmul@temp^0,f,c
  6419   0032EA  2A53               	incf	(___flmul@temp+1)^0,f,c
  6420   0032EC                     l3410:
  6421   0032EC  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6422   0032EE  EF81  F019         	goto	u3391
  6423   0032F2  5053               	movf	(___flmul@temp+1)^0,w,c
  6424   0032F4  E108               	bnz	u3390
  6425   0032F6  2852               	incf	___flmul@temp^0,w,c
  6426   0032F8  A0D8               	btfss	status,0,c
  6427   0032FA  EF81  F019         	goto	u3391
  6428   0032FE  EF83  F019         	goto	u3390
  6429   003302                     u3391:
  6430   003302  EF8D  F019         	goto	l3414
  6431   003306                     u3390:
  6432   003306  0E00               	movlw	0
  6433   003308  6E4E               	movwf	___flmul@prod^0,c
  6434   00330A  0E00               	movlw	0
  6435   00330C  6E4F               	movwf	(___flmul@prod+1)^0,c
  6436   00330E  0E80               	movlw	128
  6437   003310  6E50               	movwf	(___flmul@prod+2)^0,c
  6438   003312  0E7F               	movlw	127
  6439   003314  6E51               	movwf	(___flmul@prod+3)^0,c
  6440   003316  EFBB  F019         	goto	l3426
  6441   00331A                     l3414:
  6442   00331A  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6443   00331C  EF9A  F019         	goto	u3400
  6444   003320  5053               	movf	(___flmul@temp+1)^0,w,c
  6445   003322  E106               	bnz	u3401
  6446   003324  0452               	decf	___flmul@temp^0,w,c
  6447   003326  B0D8               	btfsc	status,0,c
  6448   003328  EF98  F019         	goto	u3401
  6449   00332C  EF9A  F019         	goto	u3400
  6450   003330                     u3401:
  6451   003330  EFA6  F019         	goto	l1238
  6452   003334                     u3400:
  6453   003334  0E00               	movlw	0
  6454   003336  6E4E               	movwf	___flmul@prod^0,c
  6455   003338  0E00               	movlw	0
  6456   00333A  6E4F               	movwf	(___flmul@prod+1)^0,c
  6457   00333C  0E00               	movlw	0
  6458   00333E  6E50               	movwf	(___flmul@prod+2)^0,c
  6459   003340  0E00               	movlw	0
  6460   003342  6E51               	movwf	(___flmul@prod+3)^0,c
  6461   003344  0E00               	movlw	0
  6462   003346  6E47               	movwf	___flmul@sign^0,c
  6463   003348  EFBB  F019         	goto	l3426
  6464   00334C                     l1238:
  6465   00334C  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6466   003350  0EFF               	movlw	255
  6467   003352  164E               	andwf	___flmul@prod^0,f,c
  6468   003354  0EFF               	movlw	255
  6469   003356  164F               	andwf	(___flmul@prod+1)^0,f,c
  6470   003358  0E7F               	movlw	127
  6471   00335A  1650               	andwf	(___flmul@prod+2)^0,f,c
  6472   00335C  0E00               	movlw	0
  6473   00335E  1651               	andwf	(___flmul@prod+3)^0,f,c
  6474   003360  A04D               	btfss	___flmul@bexp^0,0,c
  6475   003362  EFB5  F019         	goto	u3411
  6476   003366  EFB7  F019         	goto	u3410
  6477   00336A                     u3411:
  6478   00336A  EFB8  F019         	goto	l3424
  6479   00336E                     u3410:
  6480   00336E  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6481   003370                     l3424:
  6482   003370  90D8               	bcf	status,0,c
  6483   003372  304D               	rrcf	___flmul@bexp^0,w,c
  6484   003374  6E51               	movwf	(___flmul@prod+3)^0,c
  6485   003376                     l3426:
  6486   003376  5047               	movf	___flmul@sign^0,w,c
  6487   003378  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6488   00337A  C04E  F03B         	movff	___flmul@prod,?___flmul
  6489   00337E  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6490   003382  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6491   003386  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6492   00338A                     l1225:
  6493   00338A  0012               	return		;funcret
  6494   00338C                     __end_of___flmul:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function ___fleq *****************
  6498 ;; Defined at:
  6499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  ff1             4    0[COMRAM] unsigned char 
  6502 ;;  ff2             4    4[COMRAM] unsigned char 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;		None               void
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6514 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6518 ;;Total ram usage:       12 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; This function calls:
  6521 ;;		Nothing
  6522 ;; This function is called by:
  6523 ;;		_custom_floatmodulo
  6524 ;;		_RGB_to_HSV
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text24
  6529   004A38                     __ptext24:
  6530                           	callstack 0
  6531   004A38                     ___fleq:
  6532                           	callstack 26
  6533   004A38  0E00               	movlw	0
  6534   004A3A  1401               	andwf	___fleq@ff1^0,w,c
  6535   004A3C  6E09               	movwf	??___fleq^0,c
  6536   004A3E  0E00               	movlw	0
  6537   004A40  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6538   004A42  6E0A               	movwf	(??___fleq+1)^0,c
  6539   004A44  0E80               	movlw	128
  6540   004A46  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6541   004A48  6E0B               	movwf	(??___fleq+2)^0,c
  6542   004A4A  0E7F               	movlw	127
  6543   004A4C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6544   004A4E  6E0C               	movwf	(??___fleq+3)^0,c
  6545   004A50  5009               	movf	??___fleq^0,w,c
  6546   004A52  100A               	iorwf	(??___fleq+1)^0,w,c
  6547   004A54  100B               	iorwf	(??___fleq+2)^0,w,c
  6548   004A56  100C               	iorwf	(??___fleq+3)^0,w,c
  6549   004A58  A4D8               	btfss	status,2,c
  6550   004A5A  EF31  F025         	goto	u3421
  6551   004A5E  EF33  F025         	goto	u3420
  6552   004A62                     u3421:
  6553   004A62  EF3B  F025         	goto	l3442
  6554   004A66                     u3420:
  6555   004A66  0E00               	movlw	0
  6556   004A68  6E01               	movwf	___fleq@ff1^0,c
  6557   004A6A  0E00               	movlw	0
  6558   004A6C  6E02               	movwf	(___fleq@ff1+1)^0,c
  6559   004A6E  0E00               	movlw	0
  6560   004A70  6E03               	movwf	(___fleq@ff1+2)^0,c
  6561   004A72  0E00               	movlw	0
  6562   004A74  6E04               	movwf	(___fleq@ff1+3)^0,c
  6563   004A76                     l3442:
  6564   004A76  0E00               	movlw	0
  6565   004A78  1405               	andwf	___fleq@ff2^0,w,c
  6566   004A7A  6E09               	movwf	??___fleq^0,c
  6567   004A7C  0E00               	movlw	0
  6568   004A7E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6569   004A80  6E0A               	movwf	(??___fleq+1)^0,c
  6570   004A82  0E80               	movlw	128
  6571   004A84  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6572   004A86  6E0B               	movwf	(??___fleq+2)^0,c
  6573   004A88  0E7F               	movlw	127
  6574   004A8A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6575   004A8C  6E0C               	movwf	(??___fleq+3)^0,c
  6576   004A8E  5009               	movf	??___fleq^0,w,c
  6577   004A90  100A               	iorwf	(??___fleq+1)^0,w,c
  6578   004A92  100B               	iorwf	(??___fleq+2)^0,w,c
  6579   004A94  100C               	iorwf	(??___fleq+3)^0,w,c
  6580   004A96  A4D8               	btfss	status,2,c
  6581   004A98  EF50  F025         	goto	u3431
  6582   004A9C  EF52  F025         	goto	u3430
  6583   004AA0                     u3431:
  6584   004AA0  EF5A  F025         	goto	l3446
  6585   004AA4                     u3430:
  6586   004AA4  0E00               	movlw	0
  6587   004AA6  6E05               	movwf	___fleq@ff2^0,c
  6588   004AA8  0E00               	movlw	0
  6589   004AAA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6590   004AAC  0E00               	movlw	0
  6591   004AAE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6592   004AB0  0E00               	movlw	0
  6593   004AB2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6594   004AB4                     l3446:
  6595   004AB4  5005               	movf	___fleq@ff2^0,w,c
  6596   004AB6  1801               	xorwf	___fleq@ff1^0,w,c
  6597   004AB8  E10F               	bnz	u3440
  6598   004ABA  5006               	movf	(___fleq@ff2+1)^0,w,c
  6599   004ABC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6600   004ABE  E10C               	bnz	u3440
  6601   004AC0  5007               	movf	(___fleq@ff2+2)^0,w,c
  6602   004AC2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6603   004AC4  E109               	bnz	u3440
  6604   004AC6  5008               	movf	(___fleq@ff2+3)^0,w,c
  6605   004AC8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6606   004ACA  B4D8               	btfsc	status,2,c
  6607   004ACC  EF6A  F025         	goto	u3441
  6608   004AD0  EF6C  F025         	goto	u3440
  6609   004AD4                     u3441:
  6610   004AD4  EF6F  F025         	goto	l3450
  6611   004AD8                     u3440:
  6612   004AD8  90D8               	bcf	status,0,c
  6613   004ADA  EF70  F025         	goto	l866
  6614   004ADE                     l3450:
  6615   004ADE  80D8               	bsf	status,0,c
  6616   004AE0                     l866:
  6617   004AE0  0012               	return		;funcret
  6618   004AE2                     __end_of___fleq:
  6619                           	callstack 0
  6620                           
  6621 ;; *************** function ___fldiv *****************
  6622 ;; Defined at:
  6623 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  b               4   33[COMRAM] unsigned char 
  6626 ;;  a               4   37[COMRAM] unsigned char 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  grs             4   52[COMRAM] unsigned long 
  6629 ;;  rem             4   45[COMRAM] unsigned long 
  6630 ;;  new_exp         2   50[COMRAM] short 
  6631 ;;  aexp            1   57[COMRAM] unsigned char 
  6632 ;;  bexp            1   56[COMRAM] unsigned char 
  6633 ;;  sign            1   49[COMRAM] unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  4   33[COMRAM] unsigned char 
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6643 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;Total ram usage:       25 bytes
  6648 ;; Hardware stack levels used: 1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_custom_floatmodulo
  6653 ;;		_RGB_to_HSV
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text25
  6658   00338C                     __ptext25:
  6659                           	callstack 0
  6660   00338C                     ___fldiv:
  6661                           	callstack 26
  6662   00338C  5025               	movf	(___fldiv@b+3)^0,w,c
  6663   00338E  0B80               	andlw	128
  6664   003390  6E32               	movwf	___fldiv@sign^0,c
  6665   003392  5025               	movf	(___fldiv@b+3)^0,w,c
  6666   003394  2425               	addwf	(___fldiv@b+3)^0,w,c
  6667   003396  6E39               	movwf	___fldiv@bexp^0,c
  6668   003398  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6669   00339A  EFD1  F019         	goto	u3001
  6670   00339E  EFD3  F019         	goto	u3000
  6671   0033A2                     u3001:
  6672   0033A2  EFD4  F019         	goto	l3170
  6673   0033A6                     u3000:
  6674   0033A6  8039               	bsf	___fldiv@bexp^0,0,c
  6675   0033A8                     l3170:
  6676   0033A8  5039               	movf	___fldiv@bexp^0,w,c
  6677   0033AA  B4D8               	btfsc	status,2,c
  6678   0033AC  EFDA  F019         	goto	u3011
  6679   0033B0  EFDC  F019         	goto	u3010
  6680   0033B4                     u3011:
  6681   0033B4  EFF1  F019         	goto	l3180
  6682   0033B8                     u3010:
  6683   0033B8  2839               	incf	___fldiv@bexp^0,w,c
  6684   0033BA  A4D8               	btfss	status,2,c
  6685   0033BC  EFE2  F019         	goto	u3021
  6686   0033C0  EFE4  F019         	goto	u3020
  6687   0033C4                     u3021:
  6688   0033C4  EFEC  F019         	goto	l3176
  6689   0033C8                     u3020:
  6690   0033C8  0E00               	movlw	0
  6691   0033CA  6E22               	movwf	___fldiv@b^0,c
  6692   0033CC  0E00               	movlw	0
  6693   0033CE  6E23               	movwf	(___fldiv@b+1)^0,c
  6694   0033D0  0E00               	movlw	0
  6695   0033D2  6E24               	movwf	(___fldiv@b+2)^0,c
  6696   0033D4  0E00               	movlw	0
  6697   0033D6  6E25               	movwf	(___fldiv@b+3)^0,c
  6698   0033D8                     l3176:
  6699   0033D8  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6700   0033DA  0E00               	movlw	0
  6701   0033DC  6E25               	movwf	(___fldiv@b+3)^0,c
  6702   0033DE  EFF9  F019         	goto	l3182
  6703   0033E2                     l3180:
  6704   0033E2  0E00               	movlw	0
  6705   0033E4  6E22               	movwf	___fldiv@b^0,c
  6706   0033E6  0E00               	movlw	0
  6707   0033E8  6E23               	movwf	(___fldiv@b+1)^0,c
  6708   0033EA  0E00               	movlw	0
  6709   0033EC  6E24               	movwf	(___fldiv@b+2)^0,c
  6710   0033EE  0E00               	movlw	0
  6711   0033F0  6E25               	movwf	(___fldiv@b+3)^0,c
  6712   0033F2                     l3182:
  6713   0033F2  5029               	movf	(___fldiv@a+3)^0,w,c
  6714   0033F4  0B80               	andlw	128
  6715   0033F6  1A32               	xorwf	___fldiv@sign^0,f,c
  6716   0033F8  5029               	movf	(___fldiv@a+3)^0,w,c
  6717   0033FA  2429               	addwf	(___fldiv@a+3)^0,w,c
  6718   0033FC  6E3A               	movwf	___fldiv@aexp^0,c
  6719   0033FE  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6720   003400  EF04  F01A         	goto	u3031
  6721   003404  EF06  F01A         	goto	u3030
  6722   003408                     u3031:
  6723   003408  EF07  F01A         	goto	l3190
  6724   00340C                     u3030:
  6725   00340C  803A               	bsf	___fldiv@aexp^0,0,c
  6726   00340E                     l3190:
  6727   00340E  503A               	movf	___fldiv@aexp^0,w,c
  6728   003410  B4D8               	btfsc	status,2,c
  6729   003412  EF0D  F01A         	goto	u3041
  6730   003416  EF0F  F01A         	goto	u3040
  6731   00341A                     u3041:
  6732   00341A  EF24  F01A         	goto	l3200
  6733   00341E                     u3040:
  6734   00341E  283A               	incf	___fldiv@aexp^0,w,c
  6735   003420  A4D8               	btfss	status,2,c
  6736   003422  EF15  F01A         	goto	u3051
  6737   003426  EF17  F01A         	goto	u3050
  6738   00342A                     u3051:
  6739   00342A  EF1F  F01A         	goto	l3196
  6740   00342E                     u3050:
  6741   00342E  0E00               	movlw	0
  6742   003430  6E26               	movwf	___fldiv@a^0,c
  6743   003432  0E00               	movlw	0
  6744   003434  6E27               	movwf	(___fldiv@a+1)^0,c
  6745   003436  0E00               	movlw	0
  6746   003438  6E28               	movwf	(___fldiv@a+2)^0,c
  6747   00343A  0E00               	movlw	0
  6748   00343C  6E29               	movwf	(___fldiv@a+3)^0,c
  6749   00343E                     l3196:
  6750   00343E  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6751   003440  0E00               	movlw	0
  6752   003442  6E29               	movwf	(___fldiv@a+3)^0,c
  6753   003444  EF2C  F01A         	goto	l3202
  6754   003448                     l3200:
  6755   003448  0E00               	movlw	0
  6756   00344A  6E26               	movwf	___fldiv@a^0,c
  6757   00344C  0E00               	movlw	0
  6758   00344E  6E27               	movwf	(___fldiv@a+1)^0,c
  6759   003450  0E00               	movlw	0
  6760   003452  6E28               	movwf	(___fldiv@a+2)^0,c
  6761   003454  0E00               	movlw	0
  6762   003456  6E29               	movwf	(___fldiv@a+3)^0,c
  6763   003458                     l3202:
  6764   003458  5026               	movf	___fldiv@a^0,w,c
  6765   00345A  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6766   00345C  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6767   00345E  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6768   003460  A4D8               	btfss	status,2,c
  6769   003462  EF35  F01A         	goto	u3061
  6770   003466  EF37  F01A         	goto	u3060
  6771   00346A                     u3061:
  6772   00346A  EF4F  F01A         	goto	l3214
  6773   00346E                     u3060:
  6774   00346E  0E00               	movlw	0
  6775   003470  6E22               	movwf	___fldiv@b^0,c
  6776   003472  0E00               	movlw	0
  6777   003474  6E23               	movwf	(___fldiv@b+1)^0,c
  6778   003476  0E00               	movlw	0
  6779   003478  6E24               	movwf	(___fldiv@b+2)^0,c
  6780   00347A  0E00               	movlw	0
  6781   00347C  6E25               	movwf	(___fldiv@b+3)^0,c
  6782   00347E  0E80               	movlw	128
  6783   003480  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6784   003482  0E7F               	movlw	127
  6785   003484  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6786   003486                     l3208:
  6787   003486  5032               	movf	___fldiv@sign^0,w,c
  6788   003488  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6789   00348A  C022  F022         	movff	___fldiv@b,?___fldiv
  6790   00348E  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6791   003492  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6792   003496  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6793   00349A  EF92  F01B         	goto	l1189
  6794   00349E                     l3214:
  6795   00349E  5039               	movf	___fldiv@bexp^0,w,c
  6796   0034A0  A4D8               	btfss	status,2,c
  6797   0034A2  EF55  F01A         	goto	u3071
  6798   0034A6  EF57  F01A         	goto	u3070
  6799   0034AA                     u3071:
  6800   0034AA  EF61  F01A         	goto	l3222
  6801   0034AE                     u3070:
  6802   0034AE  0E00               	movlw	0
  6803   0034B0  6E22               	movwf	?___fldiv^0,c
  6804   0034B2  0E00               	movlw	0
  6805   0034B4  6E23               	movwf	(?___fldiv+1)^0,c
  6806   0034B6  0E00               	movlw	0
  6807   0034B8  6E24               	movwf	(?___fldiv+2)^0,c
  6808   0034BA  0E00               	movlw	0
  6809   0034BC  6E25               	movwf	(?___fldiv+3)^0,c
  6810   0034BE  EF92  F01B         	goto	l1189
  6811   0034C2                     l3222:
  6812   0034C2  503A               	movf	___fldiv@aexp^0,w,c
  6813   0034C4  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6814   0034C8  6A2B               	clrf	(??___fldiv+1)^0,c
  6815   0034CA  5E2A               	subwf	??___fldiv^0,f,c
  6816   0034CC  0E00               	movlw	0
  6817   0034CE  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6818   0034D0  0E7F               	movlw	127
  6819   0034D2  242A               	addwf	??___fldiv^0,w,c
  6820   0034D4  6E33               	movwf	___fldiv@new_exp^0,c
  6821   0034D6  0E00               	movlw	0
  6822   0034D8  202B               	addwfc	(??___fldiv+1)^0,w,c
  6823   0034DA  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6824   0034DC  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6825   0034E0  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6826   0034E4  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6827   0034E8  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6828   0034EC  0E00               	movlw	0
  6829   0034EE  6E22               	movwf	___fldiv@b^0,c
  6830   0034F0  0E00               	movlw	0
  6831   0034F2  6E23               	movwf	(___fldiv@b+1)^0,c
  6832   0034F4  0E00               	movlw	0
  6833   0034F6  6E24               	movwf	(___fldiv@b+2)^0,c
  6834   0034F8  0E00               	movlw	0
  6835   0034FA  6E25               	movwf	(___fldiv@b+3)^0,c
  6836   0034FC  0E00               	movlw	0
  6837   0034FE  6E35               	movwf	___fldiv@grs^0,c
  6838   003500  0E00               	movlw	0
  6839   003502  6E36               	movwf	(___fldiv@grs+1)^0,c
  6840   003504  0E00               	movlw	0
  6841   003506  6E37               	movwf	(___fldiv@grs+2)^0,c
  6842   003508  0E00               	movlw	0
  6843   00350A  6E38               	movwf	(___fldiv@grs+3)^0,c
  6844   00350C  0E00               	movlw	0
  6845   00350E  6E3A               	movwf	___fldiv@aexp^0,c
  6846   003510  EFC2  F01A         	goto	l1191
  6847   003514                     l3232:
  6848   003514  503A               	movf	___fldiv@aexp^0,w,c
  6849   003516  B4D8               	btfsc	status,2,c
  6850   003518  EF90  F01A         	goto	u3081
  6851   00351C  EF92  F01A         	goto	u3080
  6852   003520                     u3081:
  6853   003520  EFA9  F01A         	goto	l3240
  6854   003524                     u3080:
  6855   003524  90D8               	bcf	status,0,c
  6856   003526  362E               	rlcf	___fldiv@rem^0,f,c
  6857   003528  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6858   00352A  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6859   00352C  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6860   00352E  90D8               	bcf	status,0,c
  6861   003530  3622               	rlcf	___fldiv@b^0,f,c
  6862   003532  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6863   003534  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6864   003536  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6865   003538  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6866   00353A  EFA1  F01A         	goto	u3091
  6867   00353E  EFA3  F01A         	goto	u3090
  6868   003542                     u3091:
  6869   003542  EFA4  F01A         	goto	l1194
  6870   003546                     u3090:
  6871   003546  8022               	bsf	___fldiv@b^0,0,c
  6872   003548                     l1194:
  6873   003548  90D8               	bcf	status,0,c
  6874   00354A  3635               	rlcf	___fldiv@grs^0,f,c
  6875   00354C  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6876   00354E  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6877   003550  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6878   003552                     l3240:
  6879   003552  5026               	movf	___fldiv@a^0,w,c
  6880   003554  5C2E               	subwf	___fldiv@rem^0,w,c
  6881   003556  5027               	movf	(___fldiv@a+1)^0,w,c
  6882   003558  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6883   00355A  5028               	movf	(___fldiv@a+2)^0,w,c
  6884   00355C  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6885   00355E  5029               	movf	(___fldiv@a+3)^0,w,c
  6886   003560  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6887   003562  A0D8               	btfss	status,0,c
  6888   003564  EFB6  F01A         	goto	u3101
  6889   003568  EFB8  F01A         	goto	u3100
  6890   00356C                     u3101:
  6891   00356C  EFC1  F01A         	goto	l3246
  6892   003570                     u3100:
  6893   003570  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6894   003572  5026               	movf	___fldiv@a^0,w,c
  6895   003574  5E2E               	subwf	___fldiv@rem^0,f,c
  6896   003576  5027               	movf	(___fldiv@a+1)^0,w,c
  6897   003578  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6898   00357A  5028               	movf	(___fldiv@a+2)^0,w,c
  6899   00357C  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6900   00357E  5029               	movf	(___fldiv@a+3)^0,w,c
  6901   003580  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6902   003582                     l3246:
  6903   003582  2A3A               	incf	___fldiv@aexp^0,f,c
  6904   003584                     l1191:
  6905   003584  0E19               	movlw	25
  6906   003586  643A               	cpfsgt	___fldiv@aexp^0,c
  6907   003588  EFC8  F01A         	goto	u3111
  6908   00358C  EFCA  F01A         	goto	u3110
  6909   003590                     u3111:
  6910   003590  EF8A  F01A         	goto	l3232
  6911   003594                     u3110:
  6912   003594  502E               	movf	___fldiv@rem^0,w,c
  6913   003596  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6914   003598  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6915   00359A  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6916   00359C  B4D8               	btfsc	status,2,c
  6917   00359E  EFD3  F01A         	goto	u3121
  6918   0035A2  EFD5  F01A         	goto	u3120
  6919   0035A6                     u3121:
  6920   0035A6  EFED  F01A         	goto	l3258
  6921   0035AA                     u3120:
  6922   0035AA  8035               	bsf	___fldiv@grs^0,0,c
  6923   0035AC  EFED  F01A         	goto	l3258
  6924   0035B0                     l3252:
  6925   0035B0  90D8               	bcf	status,0,c
  6926   0035B2  3622               	rlcf	___fldiv@b^0,f,c
  6927   0035B4  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6928   0035B6  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6929   0035B8  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6930   0035BA  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6931   0035BC  EFE2  F01A         	goto	u3131
  6932   0035C0  EFE4  F01A         	goto	u3130
  6933   0035C4                     u3131:
  6934   0035C4  EFE5  F01A         	goto	l1200
  6935   0035C8                     u3130:
  6936   0035C8  8022               	bsf	___fldiv@b^0,0,c
  6937   0035CA                     l1200:
  6938   0035CA  90D8               	bcf	status,0,c
  6939   0035CC  3635               	rlcf	___fldiv@grs^0,f,c
  6940   0035CE  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6941   0035D0  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6942   0035D2  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6943   0035D4  0633               	decf	___fldiv@new_exp^0,f,c
  6944   0035D6  A0D8               	btfss	status,0,c
  6945   0035D8  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6946   0035DA                     l3258:
  6947   0035DA  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6948   0035DC  EFF2  F01A         	goto	u3141
  6949   0035E0  EFF4  F01A         	goto	u3140
  6950   0035E4                     u3141:
  6951   0035E4  EFD8  F01A         	goto	l3252
  6952   0035E8                     u3140:
  6953   0035E8  0E00               	movlw	0
  6954   0035EA  6E3A               	movwf	___fldiv@aexp^0,c
  6955   0035EC  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6956   0035EE  EFFB  F01A         	goto	u3151
  6957   0035F2  EFFD  F01A         	goto	u3150
  6958   0035F6                     u3151:
  6959   0035F6  EF21  F01B         	goto	l1202
  6960   0035FA                     u3150:
  6961   0035FA  0EFF               	movlw	255
  6962   0035FC  1435               	andwf	___fldiv@grs^0,w,c
  6963   0035FE  6E2A               	movwf	??___fldiv^0,c
  6964   003600  0EFF               	movlw	255
  6965   003602  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6966   003604  6E2B               	movwf	(??___fldiv+1)^0,c
  6967   003606  0EFF               	movlw	255
  6968   003608  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6969   00360A  6E2C               	movwf	(??___fldiv+2)^0,c
  6970   00360C  0E7F               	movlw	127
  6971   00360E  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6972   003610  6E2D               	movwf	(??___fldiv+3)^0,c
  6973   003612  502A               	movf	??___fldiv^0,w,c
  6974   003614  102B               	iorwf	(??___fldiv+1)^0,w,c
  6975   003616  102C               	iorwf	(??___fldiv+2)^0,w,c
  6976   003618  102D               	iorwf	(??___fldiv+3)^0,w,c
  6977   00361A  B4D8               	btfsc	status,2,c
  6978   00361C  EF12  F01B         	goto	u3161
  6979   003620  EF14  F01B         	goto	u3160
  6980   003624                     u3161:
  6981   003624  EF18  F01B         	goto	l1203
  6982   003628                     u3160:
  6983   003628                     l3266:
  6984   003628  0E01               	movlw	1
  6985   00362A  6E3A               	movwf	___fldiv@aexp^0,c
  6986   00362C  EF21  F01B         	goto	l1202
  6987   003630                     l1203:
  6988   003630  A022               	btfss	___fldiv@b^0,0,c
  6989   003632  EF1D  F01B         	goto	u3171
  6990   003636  EF1F  F01B         	goto	u3170
  6991   00363A                     u3171:
  6992   00363A  EF21  F01B         	goto	l1202
  6993   00363E                     u3170:
  6994   00363E  EF14  F01B         	goto	l3266
  6995   003642                     l1202:
  6996   003642  503A               	movf	___fldiv@aexp^0,w,c
  6997   003644  B4D8               	btfsc	status,2,c
  6998   003646  EF27  F01B         	goto	u3181
  6999   00364A  EF29  F01B         	goto	u3180
  7000   00364E                     u3181:
  7001   00364E  EF4D  F01B         	goto	l3278
  7002   003652                     u3180:
  7003   003652  0E01               	movlw	1
  7004   003654  2622               	addwf	___fldiv@b^0,f,c
  7005   003656  0E00               	movlw	0
  7006   003658  2223               	addwfc	(___fldiv@b+1)^0,f,c
  7007   00365A  2224               	addwfc	(___fldiv@b+2)^0,f,c
  7008   00365C  2225               	addwfc	(___fldiv@b+3)^0,f,c
  7009   00365E  A025               	btfss	(___fldiv@b+3)^0,0,c
  7010   003660  EF34  F01B         	goto	u3191
  7011   003664  EF36  F01B         	goto	u3190
  7012   003668                     u3191:
  7013   003668  EF4D  F01B         	goto	l3278
  7014   00366C                     u3190:
  7015   00366C  C022  F02A         	movff	___fldiv@b,??___fldiv
  7016   003670  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  7017   003674  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  7018   003678  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  7019   00367C  342D               	rlcf	(??___fldiv+3)^0,w,c
  7020   00367E  322D               	rrcf	(??___fldiv+3)^0,f,c
  7021   003680  322C               	rrcf	(??___fldiv+2)^0,f,c
  7022   003682  322B               	rrcf	(??___fldiv+1)^0,f,c
  7023   003684  322A               	rrcf	??___fldiv^0,f,c
  7024   003686  C02A  F022         	movff	??___fldiv,___fldiv@b
  7025   00368A  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  7026   00368E  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  7027   003692  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  7028   003696  4A33               	infsnz	___fldiv@new_exp^0,f,c
  7029   003698  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  7030   00369A                     l3278:
  7031   00369A  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7032   00369C  EF58  F01B         	goto	u3201
  7033   0036A0  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  7034   0036A2  E108               	bnz	u3200
  7035   0036A4  2833               	incf	___fldiv@new_exp^0,w,c
  7036   0036A6  A0D8               	btfss	status,0,c
  7037   0036A8  EF58  F01B         	goto	u3201
  7038   0036AC  EF5A  F01B         	goto	u3200
  7039   0036B0                     u3201:
  7040   0036B0  EF65  F01B         	goto	l3282
  7041   0036B4                     u3200:
  7042   0036B4  0E00               	movlw	0
  7043   0036B6  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  7044   0036B8  6833               	setf	___fldiv@new_exp^0,c
  7045   0036BA  0E00               	movlw	0
  7046   0036BC  6E22               	movwf	___fldiv@b^0,c
  7047   0036BE  0E00               	movlw	0
  7048   0036C0  6E23               	movwf	(___fldiv@b+1)^0,c
  7049   0036C2  0E00               	movlw	0
  7050   0036C4  6E24               	movwf	(___fldiv@b+2)^0,c
  7051   0036C6  0E00               	movlw	0
  7052   0036C8  6E25               	movwf	(___fldiv@b+3)^0,c
  7053   0036CA                     l3282:
  7054   0036CA  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7055   0036CC  EF72  F01B         	goto	u3210
  7056   0036D0  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  7057   0036D2  E106               	bnz	u3211
  7058   0036D4  0433               	decf	___fldiv@new_exp^0,w,c
  7059   0036D6  B0D8               	btfsc	status,0,c
  7060   0036D8  EF70  F01B         	goto	u3211
  7061   0036DC  EF72  F01B         	goto	u3210
  7062   0036E0                     u3211:
  7063   0036E0  EF80  F01B         	goto	l3286
  7064   0036E4                     u3210:
  7065   0036E4  0E00               	movlw	0
  7066   0036E6  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  7067   0036E8  0E00               	movlw	0
  7068   0036EA  6E33               	movwf	___fldiv@new_exp^0,c
  7069   0036EC  0E00               	movlw	0
  7070   0036EE  6E22               	movwf	___fldiv@b^0,c
  7071   0036F0  0E00               	movlw	0
  7072   0036F2  6E23               	movwf	(___fldiv@b+1)^0,c
  7073   0036F4  0E00               	movlw	0
  7074   0036F6  6E24               	movwf	(___fldiv@b+2)^0,c
  7075   0036F8  0E00               	movlw	0
  7076   0036FA  6E25               	movwf	(___fldiv@b+3)^0,c
  7077   0036FC  0E00               	movlw	0
  7078   0036FE  6E32               	movwf	___fldiv@sign^0,c
  7079   003700                     l3286:
  7080   003700  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  7081   003704  A039               	btfss	___fldiv@bexp^0,0,c
  7082   003706  EF87  F01B         	goto	u3221
  7083   00370A  EF89  F01B         	goto	u3220
  7084   00370E                     u3221:
  7085   00370E  EF8C  F01B         	goto	l3292
  7086   003712                     u3220:
  7087   003712  8E24               	bsf	(___fldiv@b+2)^0,7,c
  7088   003714  EF8D  F01B         	goto	l3294
  7089   003718                     l3292:
  7090   003718  9E24               	bcf	(___fldiv@b+2)^0,7,c
  7091   00371A                     l3294:
  7092   00371A  90D8               	bcf	status,0,c
  7093   00371C  3039               	rrcf	___fldiv@bexp^0,w,c
  7094   00371E  6E25               	movwf	(___fldiv@b+3)^0,c
  7095   003720  EF43  F01A         	goto	l3208
  7096   003724                     l1189:
  7097   003724  0012               	return		;funcret
  7098   003726                     __end_of___fldiv:
  7099                           	callstack 0
  7100                           
  7101 ;; *************** function ___flge *****************
  7102 ;; Defined at:
  7103 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  ff1             4    0[COMRAM] unsigned char 
  7106 ;;  ff2             4    4[COMRAM] unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;		None               void
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7118 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;Total ram usage:       12 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_RGB_to_HSV
  7128 ;;		_color_cardCheck
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text26
  7133   0046D8                     __ptext26:
  7134                           	callstack 0
  7135   0046D8                     ___flge:
  7136                           	callstack 28
  7137   0046D8  0E00               	movlw	0
  7138   0046DA  1401               	andwf	___flge@ff1^0,w,c
  7139   0046DC  6E09               	movwf	??___flge^0,c
  7140   0046DE  0E00               	movlw	0
  7141   0046E0  1402               	andwf	(___flge@ff1+1)^0,w,c
  7142   0046E2  6E0A               	movwf	(??___flge+1)^0,c
  7143   0046E4  0E80               	movlw	128
  7144   0046E6  1403               	andwf	(___flge@ff1+2)^0,w,c
  7145   0046E8  6E0B               	movwf	(??___flge+2)^0,c
  7146   0046EA  0E7F               	movlw	127
  7147   0046EC  1404               	andwf	(___flge@ff1+3)^0,w,c
  7148   0046EE  6E0C               	movwf	(??___flge+3)^0,c
  7149   0046F0  5009               	movf	??___flge^0,w,c
  7150   0046F2  100A               	iorwf	(??___flge+1)^0,w,c
  7151   0046F4  100B               	iorwf	(??___flge+2)^0,w,c
  7152   0046F6  100C               	iorwf	(??___flge+3)^0,w,c
  7153   0046F8  A4D8               	btfss	status,2,c
  7154   0046FA  EF81  F023         	goto	u3651
  7155   0046FE  EF83  F023         	goto	u3650
  7156   004702                     u3651:
  7157   004702  EF8B  F023         	goto	l3598
  7158   004706                     u3650:
  7159   004706  0E00               	movlw	0
  7160   004708  6E01               	movwf	___flge@ff1^0,c
  7161   00470A  0E00               	movlw	0
  7162   00470C  6E02               	movwf	(___flge@ff1+1)^0,c
  7163   00470E  0E00               	movlw	0
  7164   004710  6E03               	movwf	(___flge@ff1+2)^0,c
  7165   004712  0E00               	movlw	0
  7166   004714  6E04               	movwf	(___flge@ff1+3)^0,c
  7167   004716                     l3598:
  7168   004716  0E00               	movlw	0
  7169   004718  1405               	andwf	___flge@ff2^0,w,c
  7170   00471A  6E09               	movwf	??___flge^0,c
  7171   00471C  0E00               	movlw	0
  7172   00471E  1406               	andwf	(___flge@ff2+1)^0,w,c
  7173   004720  6E0A               	movwf	(??___flge+1)^0,c
  7174   004722  0E80               	movlw	128
  7175   004724  1407               	andwf	(___flge@ff2+2)^0,w,c
  7176   004726  6E0B               	movwf	(??___flge+2)^0,c
  7177   004728  0E7F               	movlw	127
  7178   00472A  1408               	andwf	(___flge@ff2+3)^0,w,c
  7179   00472C  6E0C               	movwf	(??___flge+3)^0,c
  7180   00472E  5009               	movf	??___flge^0,w,c
  7181   004730  100A               	iorwf	(??___flge+1)^0,w,c
  7182   004732  100B               	iorwf	(??___flge+2)^0,w,c
  7183   004734  100C               	iorwf	(??___flge+3)^0,w,c
  7184   004736  A4D8               	btfss	status,2,c
  7185   004738  EFA0  F023         	goto	u3661
  7186   00473C  EFA2  F023         	goto	u3660
  7187   004740                     u3661:
  7188   004740  EFAA  F023         	goto	l3602
  7189   004744                     u3660:
  7190   004744  0E00               	movlw	0
  7191   004746  6E05               	movwf	___flge@ff2^0,c
  7192   004748  0E00               	movlw	0
  7193   00474A  6E06               	movwf	(___flge@ff2+1)^0,c
  7194   00474C  0E00               	movlw	0
  7195   00474E  6E07               	movwf	(___flge@ff2+2)^0,c
  7196   004750  0E00               	movlw	0
  7197   004752  6E08               	movwf	(___flge@ff2+3)^0,c
  7198   004754                     l3602:
  7199   004754  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7200   004756  EFAF  F023         	goto	u3671
  7201   00475A  EFB1  F023         	goto	u3670
  7202   00475E                     u3671:
  7203   00475E  EFBA  F023         	goto	l3606
  7204   004762                     u3670:
  7205   004762  6C01               	negf	___flge@ff1^0,c
  7206   004764  1E02               	comf	(___flge@ff1+1)^0,f,c
  7207   004766  B0D8               	btfsc	status,0,c
  7208   004768  2A02               	incf	(___flge@ff1+1)^0,f,c
  7209   00476A  1E03               	comf	(___flge@ff1+2)^0,f,c
  7210   00476C  B0D8               	btfsc	status,0,c
  7211   00476E  2A03               	incf	(___flge@ff1+2)^0,f,c
  7212   004770  0E80               	movlw	128
  7213   004772  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7214   004774                     l3606:
  7215   004774  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7216   004776  EFBF  F023         	goto	u3681
  7217   00477A  EFC1  F023         	goto	u3680
  7218   00477E                     u3681:
  7219   00477E  EFCA  F023         	goto	l872
  7220   004782                     u3680:
  7221   004782  6C05               	negf	___flge@ff2^0,c
  7222   004784  1E06               	comf	(___flge@ff2+1)^0,f,c
  7223   004786  B0D8               	btfsc	status,0,c
  7224   004788  2A06               	incf	(___flge@ff2+1)^0,f,c
  7225   00478A  1E07               	comf	(___flge@ff2+2)^0,f,c
  7226   00478C  B0D8               	btfsc	status,0,c
  7227   00478E  2A07               	incf	(___flge@ff2+2)^0,f,c
  7228   004790  0E80               	movlw	128
  7229   004792  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7230   004794                     l872:
  7231   004794  0E00               	movlw	0
  7232   004796  1A01               	xorwf	___flge@ff1^0,f,c
  7233   004798  0E00               	movlw	0
  7234   00479A  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7235   00479C  0E00               	movlw	0
  7236   00479E  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7237   0047A0  0E80               	movlw	128
  7238   0047A2  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7239   0047A4  0E00               	movlw	0
  7240   0047A6  1A05               	xorwf	___flge@ff2^0,f,c
  7241   0047A8  0E00               	movlw	0
  7242   0047AA  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7243   0047AC  0E00               	movlw	0
  7244   0047AE  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7245   0047B0  0E80               	movlw	128
  7246   0047B2  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7247   0047B4  5005               	movf	___flge@ff2^0,w,c
  7248   0047B6  5C01               	subwf	___flge@ff1^0,w,c
  7249   0047B8  5006               	movf	(___flge@ff2+1)^0,w,c
  7250   0047BA  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7251   0047BC  5007               	movf	(___flge@ff2+2)^0,w,c
  7252   0047BE  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7253   0047C0  5008               	movf	(___flge@ff2+3)^0,w,c
  7254   0047C2  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7255   0047C4  B0D8               	btfsc	status,0,c
  7256   0047C6  EFE7  F023         	goto	u3691
  7257   0047CA  EFE9  F023         	goto	u3690
  7258   0047CE                     u3691:
  7259   0047CE  EFEC  F023         	goto	l3612
  7260   0047D2                     u3690:
  7261   0047D2  90D8               	bcf	status,0,c
  7262   0047D4  EFED  F023         	goto	l877
  7263   0047D8                     l3612:
  7264   0047D8  80D8               	bsf	status,0,c
  7265   0047DA                     l877:
  7266   0047DA  0012               	return		;funcret
  7267   0047DC                     __end_of___flge:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _maze_return *****************
  7271 ;; Defined at:
  7272 ;;		line 110 in file "pathfinder_file.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  c               2   34[COMRAM] PTR struct calibration_s
  7275 ;;		 -> calibration(9), 
  7276 ;;  mL              1   36[COMRAM] PTR struct DC_motor
  7277 ;;		 -> motorL(9), 
  7278 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  7279 ;;		 -> motorR(9), 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;  j               2   43[COMRAM] int 
  7282 ;;  distance_bac    1   42[COMRAM] unsigned char 
  7283 ;;  i               2   45[COMRAM] int 
  7284 ;;  i               2   47[COMRAM] int 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7294 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7295 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7297 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7298 ;;Total ram usage:       15 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; Hardware stack levels required when called: 3
  7301 ;; This function calls:
  7302 ;;		_backward
  7303 ;;		_forward
  7304 ;;		_leftTURN
  7305 ;;		_rightTURN
  7306 ;; This function is called by:
  7307 ;;		_main
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text27
  7312   00256C                     __ptext27:
  7313                           	callstack 0
  7314   00256C                     _maze_return:
  7315                           	callstack 27
  7316   00256C  0E00               	movlw	0
  7317   00256E  6E31               	movwf	(maze_return@i+1)^0,c
  7318   002570  0E32               	movlw	50
  7319   002572  6E30               	movwf	maze_return@i^0,c
  7320   002574                     l5070:
  7321                           
  7322                           ;pathfinder_file.c: 116:             if(Operation_History[i] > 10){
  7323   002574  0E3C               	movlw	low _Operation_History
  7324   002576  2430               	addwf	maze_return@i^0,w,c
  7325   002578  6ED9               	movwf	fsr2l,c
  7326   00257A  0E01               	movlw	high _Operation_History
  7327   00257C  2031               	addwfc	(maze_return@i+1)^0,w,c
  7328   00257E  6EDA               	movwf	fsr2h,c
  7329   002580  0E0A               	movlw	10
  7330   002582  64DF               	cpfsgt	indf2,c
  7331   002584  EFC6  F012         	goto	u5681
  7332   002588  EFC8  F012         	goto	u5680
  7333   00258C                     u5681:
  7334   00258C  EF0E  F013         	goto	l5084
  7335   002590                     u5680:
  7336   002590                     
  7337                           ;pathfinder_file.c: 117:                 unsigned char distance_back = Operation_History
      +                          [i] - 10;
  7338   002590  0E3C               	movlw	low _Operation_History
  7339   002592  2430               	addwf	maze_return@i^0,w,c
  7340   002594  6ED9               	movwf	fsr2l,c
  7341   002596  0E01               	movlw	high _Operation_History
  7342   002598  2031               	addwfc	(maze_return@i+1)^0,w,c
  7343   00259A  6EDA               	movwf	fsr2h,c
  7344   00259C  50DF               	movf	indf2,w,c
  7345   00259E  0FF6               	addlw	246
  7346   0025A0  6E2B               	movwf	maze_return@distance_back^0,c
  7347   0025A2                     
  7348                           ;pathfinder_file.c: 118:                 for (int j = 0; j < distance_back-1; j++) {
  7349   0025A2  0E00               	movlw	0
  7350   0025A4  6E2D               	movwf	(maze_return@j+1)^0,c
  7351   0025A6  0E00               	movlw	0
  7352   0025A8  6E2C               	movwf	maze_return@j^0,c
  7353   0025AA  EFE8  F012         	goto	l5080
  7354   0025AE                     l5076:
  7355                           
  7356                           ;pathfinder_file.c: 119:                     forward(c->forward_one, mL, mR);
  7357   0025AE  C025  F014         	movff	maze_return@mL,forward@mL
  7358   0025B2  C026  F015         	movff	maze_return@mR,forward@mR
  7359   0025B6  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7360   0025BA  EE20 F005          	lfsr	2,5
  7361   0025BE  5023               	movf	maze_return@c^0,w,c
  7362   0025C0  26D9               	addwf	fsr2l,f,c
  7363   0025C2  5024               	movf	(maze_return@c+1)^0,w,c
  7364   0025C4  22DA               	addwfc	fsr2h,f,c
  7365   0025C6  50DF               	movf	indf2,w,c
  7366   0025C8  ECD0  F01D         	call	_forward
  7367   0025CC                     
  7368                           ;pathfinder_file.c: 120:                 }
  7369   0025CC  4A2C               	infsnz	maze_return@j^0,f,c
  7370   0025CE  2A2D               	incf	(maze_return@j+1)^0,f,c
  7371   0025D0                     l5080:
  7372   0025D0  0EFF               	movlw	255
  7373   0025D2  242B               	addwf	maze_return@distance_back^0,w,c
  7374   0025D4  6E28               	movwf	??_maze_return^0,c
  7375   0025D6  6A29               	clrf	(??_maze_return+1)^0,c
  7376   0025D8  0EFF               	movlw	255
  7377   0025DA  2229               	addwfc	(??_maze_return+1)^0,f,c
  7378   0025DC  5028               	movf	??_maze_return^0,w,c
  7379   0025DE  5C2C               	subwf	maze_return@j^0,w,c
  7380   0025E0  502D               	movf	(maze_return@j+1)^0,w,c
  7381   0025E2  0A80               	xorlw	128
  7382   0025E4  6E2A               	movwf	(??_maze_return+2)^0,c
  7383   0025E6  5029               	movf	(??_maze_return+1)^0,w,c
  7384   0025E8  0A80               	xorlw	128
  7385   0025EA  582A               	subwfb	(??_maze_return+2)^0,w,c
  7386   0025EC  A0D8               	btfss	status,0,c
  7387   0025EE  EFFB  F012         	goto	u5691
  7388   0025F2  EFFD  F012         	goto	u5690
  7389   0025F6                     u5691:
  7390   0025F6  EFD7  F012         	goto	l5076
  7391   0025FA                     u5690:
  7392   0025FA                     
  7393                           ;pathfinder_file.c: 121:                 forward(c->forward_half, mL, mR);
  7394   0025FA  C025  F014         	movff	maze_return@mL,forward@mL
  7395   0025FE  C026  F015         	movff	maze_return@mR,forward@mR
  7396   002602  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7397   002606  EE20 F007          	lfsr	2,7
  7398   00260A  5023               	movf	maze_return@c^0,w,c
  7399   00260C  26D9               	addwf	fsr2l,f,c
  7400   00260E  5024               	movf	(maze_return@c+1)^0,w,c
  7401   002610  22DA               	addwfc	fsr2h,f,c
  7402   002612  50DF               	movf	indf2,w,c
  7403   002614  ECD0  F01D         	call	_forward
  7404                           
  7405                           ;pathfinder_file.c: 123:             }
  7406   002618  EF28  F015         	goto	l5112
  7407   00261C                     l5084:
  7408   00261C  0E3C               	movlw	low _Operation_History
  7409   00261E  2430               	addwf	maze_return@i^0,w,c
  7410   002620  6ED9               	movwf	fsr2l,c
  7411   002622  0E01               	movlw	high _Operation_History
  7412   002624  2031               	addwfc	(maze_return@i+1)^0,w,c
  7413   002626  6EDA               	movwf	fsr2h,c
  7414   002628  04DE               	decf	postinc2,w,c
  7415   00262A  A4D8               	btfss	status,2,c
  7416   00262C  EF1A  F013         	goto	u5701
  7417   002630  EF1C  F013         	goto	u5700
  7418   002634                     u5701:
  7419   002634  EF3C  F013         	goto	l5088
  7420   002638                     u5700:
  7421   002638                     
  7422                           ;pathfinder_file.c: 126:                 leftTURN(c->left_90, mL, mR);
  7423   002638  C025  F014         	movff	maze_return@mL,leftTURN@mL
  7424   00263C  C026  F015         	movff	maze_return@mR,leftTURN@mR
  7425   002640  C027  F016         	movff	maze_return@mR+1,leftTURN@mR+1
  7426   002644  EE20 F002          	lfsr	2,2
  7427   002648  5023               	movf	maze_return@c^0,w,c
  7428   00264A  26D9               	addwf	fsr2l,f,c
  7429   00264C  5024               	movf	(maze_return@c+1)^0,w,c
  7430   00264E  22DA               	addwfc	fsr2h,f,c
  7431   002650  50DF               	movf	indf2,w,c
  7432   002652  EC67  F01F         	call	_leftTURN
  7433                           
  7434                           ;pathfinder_file.c: 127:                 backward(c->backward_one, mL, mR);
  7435   002656  C025  F014         	movff	maze_return@mL,backward@mL
  7436   00265A  C026  F015         	movff	maze_return@mR,backward@mR
  7437   00265E  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7438   002662  EE20 F006          	lfsr	2,6
  7439   002666  5023               	movf	maze_return@c^0,w,c
  7440   002668  26D9               	addwf	fsr2l,f,c
  7441   00266A  5024               	movf	(maze_return@c+1)^0,w,c
  7442   00266C  22DA               	addwfc	fsr2h,f,c
  7443   00266E  50DF               	movf	indf2,w,c
  7444   002670  EC32  F020         	call	_backward
  7445                           
  7446                           ;pathfinder_file.c: 128:             }
  7447   002674  EF28  F015         	goto	l5112
  7448   002678                     l5088:
  7449   002678  0E3C               	movlw	low _Operation_History
  7450   00267A  2430               	addwf	maze_return@i^0,w,c
  7451   00267C  6ED9               	movwf	fsr2l,c
  7452   00267E  0E01               	movlw	high _Operation_History
  7453   002680  2031               	addwfc	(maze_return@i+1)^0,w,c
  7454   002682  6EDA               	movwf	fsr2h,c
  7455   002684  0E02               	movlw	2
  7456   002686  18DE               	xorwf	postinc2,w,c
  7457   002688  A4D8               	btfss	status,2,c
  7458   00268A  EF49  F013         	goto	u5711
  7459   00268E  EF4B  F013         	goto	u5710
  7460   002692                     u5711:
  7461   002692  EF6B  F013         	goto	l5092
  7462   002696                     u5710:
  7463   002696                     
  7464                           ;pathfinder_file.c: 131:                 rightTURN(c->right_90, mL, mR);
  7465   002696  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7466   00269A  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7467   00269E  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7468   0026A2  EE20 F001          	lfsr	2,1
  7469   0026A6  5023               	movf	maze_return@c^0,w,c
  7470   0026A8  26D9               	addwf	fsr2l,f,c
  7471   0026AA  5024               	movf	(maze_return@c+1)^0,w,c
  7472   0026AC  22DA               	addwfc	fsr2h,f,c
  7473   0026AE  50DF               	movf	indf2,w,c
  7474   0026B0  EC9C  F01E         	call	_rightTURN
  7475                           
  7476                           ;pathfinder_file.c: 132:                 backward(c->backward_one, mL, mR);
  7477   0026B4  C025  F014         	movff	maze_return@mL,backward@mL
  7478   0026B8  C026  F015         	movff	maze_return@mR,backward@mR
  7479   0026BC  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7480   0026C0  EE20 F006          	lfsr	2,6
  7481   0026C4  5023               	movf	maze_return@c^0,w,c
  7482   0026C6  26D9               	addwf	fsr2l,f,c
  7483   0026C8  5024               	movf	(maze_return@c+1)^0,w,c
  7484   0026CA  22DA               	addwfc	fsr2h,f,c
  7485   0026CC  50DF               	movf	indf2,w,c
  7486   0026CE  EC32  F020         	call	_backward
  7487                           
  7488                           ;pathfinder_file.c: 133:             }
  7489   0026D2  EF28  F015         	goto	l5112
  7490   0026D6                     l5092:
  7491   0026D6  0E3C               	movlw	low _Operation_History
  7492   0026D8  2430               	addwf	maze_return@i^0,w,c
  7493   0026DA  6ED9               	movwf	fsr2l,c
  7494   0026DC  0E01               	movlw	high _Operation_History
  7495   0026DE  2031               	addwfc	(maze_return@i+1)^0,w,c
  7496   0026E0  6EDA               	movwf	fsr2h,c
  7497   0026E2  0E03               	movlw	3
  7498   0026E4  18DE               	xorwf	postinc2,w,c
  7499   0026E6  A4D8               	btfss	status,2,c
  7500   0026E8  EF78  F013         	goto	u5721
  7501   0026EC  EF7A  F013         	goto	u5720
  7502   0026F0                     u5721:
  7503   0026F0  EF9A  F013         	goto	l5096
  7504   0026F4                     u5720:
  7505   0026F4                     
  7506                           ;pathfinder_file.c: 136:                 rightTURN(c->right_90, mL, mR);
  7507   0026F4  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7508   0026F8  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7509   0026FC  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7510   002700  EE20 F001          	lfsr	2,1
  7511   002704  5023               	movf	maze_return@c^0,w,c
  7512   002706  26D9               	addwf	fsr2l,f,c
  7513   002708  5024               	movf	(maze_return@c+1)^0,w,c
  7514   00270A  22DA               	addwfc	fsr2h,f,c
  7515   00270C  50DF               	movf	indf2,w,c
  7516   00270E  EC9C  F01E         	call	_rightTURN
  7517                           
  7518                           ;pathfinder_file.c: 137:                 rightTURN(c->right_90, mL, mR);
  7519   002712  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7520   002716  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7521   00271A  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7522   00271E  EE20 F001          	lfsr	2,1
  7523   002722  5023               	movf	maze_return@c^0,w,c
  7524   002724  26D9               	addwf	fsr2l,f,c
  7525   002726  5024               	movf	(maze_return@c+1)^0,w,c
  7526   002728  22DA               	addwfc	fsr2h,f,c
  7527   00272A  50DF               	movf	indf2,w,c
  7528   00272C  EC9C  F01E         	call	_rightTURN
  7529                           
  7530                           ;pathfinder_file.c: 138:             }
  7531   002730  EF28  F015         	goto	l5112
  7532   002734                     l5096:
  7533   002734  0E3C               	movlw	low _Operation_History
  7534   002736  2430               	addwf	maze_return@i^0,w,c
  7535   002738  6ED9               	movwf	fsr2l,c
  7536   00273A  0E01               	movlw	high _Operation_History
  7537   00273C  2031               	addwfc	(maze_return@i+1)^0,w,c
  7538   00273E  6EDA               	movwf	fsr2h,c
  7539   002740  0E04               	movlw	4
  7540   002742  18DE               	xorwf	postinc2,w,c
  7541   002744  A4D8               	btfss	status,2,c
  7542   002746  EFA7  F013         	goto	u5731
  7543   00274A  EFA9  F013         	goto	u5730
  7544   00274E                     u5731:
  7545   00274E  EF23  F014         	goto	l5100
  7546   002752                     u5730:
  7547   002752                     
  7548                           ;pathfinder_file.c: 142:                 rightTURN(c->right_90, mL, mR);
  7549   002752  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7550   002756  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7551   00275A  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7552   00275E  EE20 F001          	lfsr	2,1
  7553   002762  5023               	movf	maze_return@c^0,w,c
  7554   002764  26D9               	addwf	fsr2l,f,c
  7555   002766  5024               	movf	(maze_return@c+1)^0,w,c
  7556   002768  22DA               	addwfc	fsr2h,f,c
  7557   00276A  50DF               	movf	indf2,w,c
  7558   00276C  EC9C  F01E         	call	_rightTURN
  7559                           
  7560                           ;pathfinder_file.c: 143:                 forward(c->forward_one, mL, mR);
  7561   002770  C025  F014         	movff	maze_return@mL,forward@mL
  7562   002774  C026  F015         	movff	maze_return@mR,forward@mR
  7563   002778  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7564   00277C  EE20 F005          	lfsr	2,5
  7565   002780  5023               	movf	maze_return@c^0,w,c
  7566   002782  26D9               	addwf	fsr2l,f,c
  7567   002784  5024               	movf	(maze_return@c+1)^0,w,c
  7568   002786  22DA               	addwfc	fsr2h,f,c
  7569   002788  50DF               	movf	indf2,w,c
  7570   00278A  ECD0  F01D         	call	_forward
  7571                           
  7572                           ;pathfinder_file.c: 146:                 forward(c->forward_one, mL, mR);
  7573   00278E  C025  F014         	movff	maze_return@mL,forward@mL
  7574   002792  C026  F015         	movff	maze_return@mR,forward@mR
  7575   002796  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7576   00279A  EE20 F005          	lfsr	2,5
  7577   00279E  5023               	movf	maze_return@c^0,w,c
  7578   0027A0  26D9               	addwf	fsr2l,f,c
  7579   0027A2  5024               	movf	(maze_return@c+1)^0,w,c
  7580   0027A4  22DA               	addwfc	fsr2h,f,c
  7581   0027A6  50DF               	movf	indf2,w,c
  7582   0027A8  ECD0  F01D         	call	_forward
  7583                           
  7584                           ;pathfinder_file.c: 147:                 backward(c->backward_half, mL, mR);
  7585   0027AC  C025  F014         	movff	maze_return@mL,backward@mL
  7586   0027B0  C026  F015         	movff	maze_return@mR,backward@mR
  7587   0027B4  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7588   0027B8  EE20 F008          	lfsr	2,8
  7589   0027BC  5023               	movf	maze_return@c^0,w,c
  7590   0027BE  26D9               	addwf	fsr2l,f,c
  7591   0027C0  5024               	movf	(maze_return@c+1)^0,w,c
  7592   0027C2  22DA               	addwfc	fsr2h,f,c
  7593   0027C4  50DF               	movf	indf2,w,c
  7594   0027C6  EC32  F020         	call	_backward
  7595                           
  7596                           ;pathfinder_file.c: 148:                 rightTURN(c->right_90, mL, mR);
  7597   0027CA  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7598   0027CE  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7599   0027D2  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7600   0027D6  EE20 F001          	lfsr	2,1
  7601   0027DA  5023               	movf	maze_return@c^0,w,c
  7602   0027DC  26D9               	addwf	fsr2l,f,c
  7603   0027DE  5024               	movf	(maze_return@c+1)^0,w,c
  7604   0027E0  22DA               	addwfc	fsr2h,f,c
  7605   0027E2  50DF               	movf	indf2,w,c
  7606   0027E4  EC9C  F01E         	call	_rightTURN
  7607                           
  7608                           ;pathfinder_file.c: 149:                 rightTURN(c->right_90, mL, mR);
  7609   0027E8  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7610   0027EC  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7611   0027F0  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7612   0027F4  EE20 F001          	lfsr	2,1
  7613   0027F8  5023               	movf	maze_return@c^0,w,c
  7614   0027FA  26D9               	addwf	fsr2l,f,c
  7615   0027FC  5024               	movf	(maze_return@c+1)^0,w,c
  7616   0027FE  22DA               	addwfc	fsr2h,f,c
  7617   002800  50DF               	movf	indf2,w,c
  7618   002802  EC9C  F01E         	call	_rightTURN
  7619                           
  7620                           ;pathfinder_file.c: 150:                 backward(c->backward_one, mL, mR);
  7621   002806  C025  F014         	movff	maze_return@mL,backward@mL
  7622   00280A  C026  F015         	movff	maze_return@mR,backward@mR
  7623   00280E  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7624   002812  EE20 F006          	lfsr	2,6
  7625   002816  5023               	movf	maze_return@c^0,w,c
  7626   002818  26D9               	addwf	fsr2l,f,c
  7627   00281A  5024               	movf	(maze_return@c+1)^0,w,c
  7628   00281C  22DA               	addwfc	fsr2h,f,c
  7629   00281E  50DF               	movf	indf2,w,c
  7630   002820  EC32  F020         	call	_backward
  7631                           
  7632                           ;pathfinder_file.c: 151:                 forward(c->forward_half, mL, mR);
  7633   002824  C025  F014         	movff	maze_return@mL,forward@mL
  7634   002828  C026  F015         	movff	maze_return@mR,forward@mR
  7635   00282C  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7636   002830  EE20 F007          	lfsr	2,7
  7637   002834  5023               	movf	maze_return@c^0,w,c
  7638   002836  26D9               	addwf	fsr2l,f,c
  7639   002838  5024               	movf	(maze_return@c+1)^0,w,c
  7640   00283A  22DA               	addwfc	fsr2h,f,c
  7641   00283C  50DF               	movf	indf2,w,c
  7642   00283E  ECD0  F01D         	call	_forward
  7643                           
  7644                           ;pathfinder_file.c: 152:             }
  7645   002842  EF28  F015         	goto	l5112
  7646   002846                     l5100:
  7647   002846  0E3C               	movlw	low _Operation_History
  7648   002848  2430               	addwf	maze_return@i^0,w,c
  7649   00284A  6ED9               	movwf	fsr2l,c
  7650   00284C  0E01               	movlw	high _Operation_History
  7651   00284E  2031               	addwfc	(maze_return@i+1)^0,w,c
  7652   002850  6EDA               	movwf	fsr2h,c
  7653   002852  0E05               	movlw	5
  7654   002854  18DE               	xorwf	postinc2,w,c
  7655   002856  A4D8               	btfss	status,2,c
  7656   002858  EF30  F014         	goto	u5741
  7657   00285C  EF32  F014         	goto	u5740
  7658   002860                     u5741:
  7659   002860  EFAC  F014         	goto	l5104
  7660   002864                     u5740:
  7661   002864                     
  7662                           ;pathfinder_file.c: 155:                 leftTURN(c->right_90, mL, mR);
  7663   002864  C025  F014         	movff	maze_return@mL,leftTURN@mL
  7664   002868  C026  F015         	movff	maze_return@mR,leftTURN@mR
  7665   00286C  C027  F016         	movff	maze_return@mR+1,leftTURN@mR+1
  7666   002870  EE20 F001          	lfsr	2,1
  7667   002874  5023               	movf	maze_return@c^0,w,c
  7668   002876  26D9               	addwf	fsr2l,f,c
  7669   002878  5024               	movf	(maze_return@c+1)^0,w,c
  7670   00287A  22DA               	addwfc	fsr2h,f,c
  7671   00287C  50DF               	movf	indf2,w,c
  7672   00287E  EC67  F01F         	call	_leftTURN
  7673                           
  7674                           ;pathfinder_file.c: 156:                 forward(c->forward_one, mL, mR);
  7675   002882  C025  F014         	movff	maze_return@mL,forward@mL
  7676   002886  C026  F015         	movff	maze_return@mR,forward@mR
  7677   00288A  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7678   00288E  EE20 F005          	lfsr	2,5
  7679   002892  5023               	movf	maze_return@c^0,w,c
  7680   002894  26D9               	addwf	fsr2l,f,c
  7681   002896  5024               	movf	(maze_return@c+1)^0,w,c
  7682   002898  22DA               	addwfc	fsr2h,f,c
  7683   00289A  50DF               	movf	indf2,w,c
  7684   00289C  ECD0  F01D         	call	_forward
  7685                           
  7686                           ;pathfinder_file.c: 159:                 forward(c->forward_one, mL, mR);
  7687   0028A0  C025  F014         	movff	maze_return@mL,forward@mL
  7688   0028A4  C026  F015         	movff	maze_return@mR,forward@mR
  7689   0028A8  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7690   0028AC  EE20 F005          	lfsr	2,5
  7691   0028B0  5023               	movf	maze_return@c^0,w,c
  7692   0028B2  26D9               	addwf	fsr2l,f,c
  7693   0028B4  5024               	movf	(maze_return@c+1)^0,w,c
  7694   0028B6  22DA               	addwfc	fsr2h,f,c
  7695   0028B8  50DF               	movf	indf2,w,c
  7696   0028BA  ECD0  F01D         	call	_forward
  7697                           
  7698                           ;pathfinder_file.c: 160:                 backward(c->backward_half, mL, mR);
  7699   0028BE  C025  F014         	movff	maze_return@mL,backward@mL
  7700   0028C2  C026  F015         	movff	maze_return@mR,backward@mR
  7701   0028C6  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7702   0028CA  EE20 F008          	lfsr	2,8
  7703   0028CE  5023               	movf	maze_return@c^0,w,c
  7704   0028D0  26D9               	addwf	fsr2l,f,c
  7705   0028D2  5024               	movf	(maze_return@c+1)^0,w,c
  7706   0028D4  22DA               	addwfc	fsr2h,f,c
  7707   0028D6  50DF               	movf	indf2,w,c
  7708   0028D8  EC32  F020         	call	_backward
  7709                           
  7710                           ;pathfinder_file.c: 161:                 rightTURN(c->right_90, mL, mR);
  7711   0028DC  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7712   0028E0  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7713   0028E4  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7714   0028E8  EE20 F001          	lfsr	2,1
  7715   0028EC  5023               	movf	maze_return@c^0,w,c
  7716   0028EE  26D9               	addwf	fsr2l,f,c
  7717   0028F0  5024               	movf	(maze_return@c+1)^0,w,c
  7718   0028F2  22DA               	addwfc	fsr2h,f,c
  7719   0028F4  50DF               	movf	indf2,w,c
  7720   0028F6  EC9C  F01E         	call	_rightTURN
  7721                           
  7722                           ;pathfinder_file.c: 162:                 rightTURN(c->right_90, mL, mR);
  7723   0028FA  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7724   0028FE  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7725   002902  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7726   002906  EE20 F001          	lfsr	2,1
  7727   00290A  5023               	movf	maze_return@c^0,w,c
  7728   00290C  26D9               	addwf	fsr2l,f,c
  7729   00290E  5024               	movf	(maze_return@c+1)^0,w,c
  7730   002910  22DA               	addwfc	fsr2h,f,c
  7731   002912  50DF               	movf	indf2,w,c
  7732   002914  EC9C  F01E         	call	_rightTURN
  7733                           
  7734                           ;pathfinder_file.c: 163:                 backward(c->backward_one, mL, mR);
  7735   002918  C025  F014         	movff	maze_return@mL,backward@mL
  7736   00291C  C026  F015         	movff	maze_return@mR,backward@mR
  7737   002920  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7738   002924  EE20 F006          	lfsr	2,6
  7739   002928  5023               	movf	maze_return@c^0,w,c
  7740   00292A  26D9               	addwf	fsr2l,f,c
  7741   00292C  5024               	movf	(maze_return@c+1)^0,w,c
  7742   00292E  22DA               	addwfc	fsr2h,f,c
  7743   002930  50DF               	movf	indf2,w,c
  7744   002932  EC32  F020         	call	_backward
  7745                           
  7746                           ;pathfinder_file.c: 164:                 forward(c->forward_half, mL, mR);
  7747   002936  C025  F014         	movff	maze_return@mL,forward@mL
  7748   00293A  C026  F015         	movff	maze_return@mR,forward@mR
  7749   00293E  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7750   002942  EE20 F007          	lfsr	2,7
  7751   002946  5023               	movf	maze_return@c^0,w,c
  7752   002948  26D9               	addwf	fsr2l,f,c
  7753   00294A  5024               	movf	(maze_return@c+1)^0,w,c
  7754   00294C  22DA               	addwfc	fsr2h,f,c
  7755   00294E  50DF               	movf	indf2,w,c
  7756   002950  ECD0  F01D         	call	_forward
  7757                           
  7758                           ;pathfinder_file.c: 166:             }
  7759   002954  EF28  F015         	goto	l5112
  7760   002958                     l5104:
  7761   002958  0E3C               	movlw	low _Operation_History
  7762   00295A  2430               	addwf	maze_return@i^0,w,c
  7763   00295C  6ED9               	movwf	fsr2l,c
  7764   00295E  0E01               	movlw	high _Operation_History
  7765   002960  2031               	addwfc	(maze_return@i+1)^0,w,c
  7766   002962  6EDA               	movwf	fsr2h,c
  7767   002964  0E06               	movlw	6
  7768   002966  18DE               	xorwf	postinc2,w,c
  7769   002968  A4D8               	btfss	status,2,c
  7770   00296A  EFB9  F014         	goto	u5751
  7771   00296E  EFBB  F014         	goto	u5750
  7772   002972                     u5751:
  7773   002972  EFEA  F014         	goto	l5108
  7774   002976                     u5750:
  7775   002976                     
  7776                           ;pathfinder_file.c: 169:                 leftTURN(c->left_135, mL, mR);
  7777   002976  C025  F014         	movff	maze_return@mL,leftTURN@mL
  7778   00297A  C026  F015         	movff	maze_return@mR,leftTURN@mR
  7779   00297E  C027  F016         	movff	maze_return@mR+1,leftTURN@mR+1
  7780   002982  EE20 F004          	lfsr	2,4
  7781   002986  5023               	movf	maze_return@c^0,w,c
  7782   002988  26D9               	addwf	fsr2l,f,c
  7783   00298A  5024               	movf	(maze_return@c+1)^0,w,c
  7784   00298C  22DA               	addwfc	fsr2h,f,c
  7785   00298E  50DF               	movf	indf2,w,c
  7786   002990  EC67  F01F         	call	_leftTURN
  7787                           
  7788                           ;pathfinder_file.c: 170:                 backward(c->backward_one, mL, mR);
  7789   002994  C025  F014         	movff	maze_return@mL,backward@mL
  7790   002998  C026  F015         	movff	maze_return@mR,backward@mR
  7791   00299C  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7792   0029A0  EE20 F006          	lfsr	2,6
  7793   0029A4  5023               	movf	maze_return@c^0,w,c
  7794   0029A6  26D9               	addwf	fsr2l,f,c
  7795   0029A8  5024               	movf	(maze_return@c+1)^0,w,c
  7796   0029AA  22DA               	addwfc	fsr2h,f,c
  7797   0029AC  50DF               	movf	indf2,w,c
  7798   0029AE  EC32  F020         	call	_backward
  7799                           
  7800                           ;pathfinder_file.c: 171:                 forward(c->forward_half, mL, mR);
  7801   0029B2  C025  F014         	movff	maze_return@mL,forward@mL
  7802   0029B6  C026  F015         	movff	maze_return@mR,forward@mR
  7803   0029BA  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7804   0029BE  EE20 F007          	lfsr	2,7
  7805   0029C2  5023               	movf	maze_return@c^0,w,c
  7806   0029C4  26D9               	addwf	fsr2l,f,c
  7807   0029C6  5024               	movf	(maze_return@c+1)^0,w,c
  7808   0029C8  22DA               	addwfc	fsr2h,f,c
  7809   0029CA  50DF               	movf	indf2,w,c
  7810   0029CC  ECD0  F01D         	call	_forward
  7811                           
  7812                           ;pathfinder_file.c: 172:             }
  7813   0029D0  EF28  F015         	goto	l5112
  7814   0029D4                     l5108:
  7815   0029D4  0E3C               	movlw	low _Operation_History
  7816   0029D6  2430               	addwf	maze_return@i^0,w,c
  7817   0029D8  6ED9               	movwf	fsr2l,c
  7818   0029DA  0E01               	movlw	high _Operation_History
  7819   0029DC  2031               	addwfc	(maze_return@i+1)^0,w,c
  7820   0029DE  6EDA               	movwf	fsr2h,c
  7821   0029E0  0E07               	movlw	7
  7822   0029E2  18DE               	xorwf	postinc2,w,c
  7823   0029E4  A4D8               	btfss	status,2,c
  7824   0029E6  EFF7  F014         	goto	u5761
  7825   0029EA  EFF9  F014         	goto	u5760
  7826   0029EE                     u5761:
  7827   0029EE  EF28  F015         	goto	l594
  7828   0029F2                     u5760:
  7829   0029F2                     
  7830                           ;pathfinder_file.c: 175:                 rightTURN(c->right_135, mL, mR);
  7831   0029F2  C025  F014         	movff	maze_return@mL,rightTURN@mL
  7832   0029F6  C026  F015         	movff	maze_return@mR,rightTURN@mR
  7833   0029FA  C027  F016         	movff	maze_return@mR+1,rightTURN@mR+1
  7834   0029FE  EE20 F003          	lfsr	2,3
  7835   002A02  5023               	movf	maze_return@c^0,w,c
  7836   002A04  26D9               	addwf	fsr2l,f,c
  7837   002A06  5024               	movf	(maze_return@c+1)^0,w,c
  7838   002A08  22DA               	addwfc	fsr2h,f,c
  7839   002A0A  50DF               	movf	indf2,w,c
  7840   002A0C  EC9C  F01E         	call	_rightTURN
  7841                           
  7842                           ;pathfinder_file.c: 176:                 backward(c->backward_one, mL, mR);
  7843   002A10  C025  F014         	movff	maze_return@mL,backward@mL
  7844   002A14  C026  F015         	movff	maze_return@mR,backward@mR
  7845   002A18  C027  F016         	movff	maze_return@mR+1,backward@mR+1
  7846   002A1C  EE20 F006          	lfsr	2,6
  7847   002A20  5023               	movf	maze_return@c^0,w,c
  7848   002A22  26D9               	addwf	fsr2l,f,c
  7849   002A24  5024               	movf	(maze_return@c+1)^0,w,c
  7850   002A26  22DA               	addwfc	fsr2h,f,c
  7851   002A28  50DF               	movf	indf2,w,c
  7852   002A2A  EC32  F020         	call	_backward
  7853                           
  7854                           ;pathfinder_file.c: 177:                 forward(c->forward_half, mL, mR);
  7855   002A2E  C025  F014         	movff	maze_return@mL,forward@mL
  7856   002A32  C026  F015         	movff	maze_return@mR,forward@mR
  7857   002A36  C027  F016         	movff	maze_return@mR+1,forward@mR+1
  7858   002A3A  EE20 F007          	lfsr	2,7
  7859   002A3E  5023               	movf	maze_return@c^0,w,c
  7860   002A40  26D9               	addwf	fsr2l,f,c
  7861   002A42  5024               	movf	(maze_return@c+1)^0,w,c
  7862   002A44  22DA               	addwfc	fsr2h,f,c
  7863   002A46  50DF               	movf	indf2,w,c
  7864   002A48  ECD0  F01D         	call	_forward
  7865   002A4C  EF28  F015         	goto	l5112
  7866   002A50                     l594:
  7867   002A50                     l5112:
  7868                           
  7869                           ;pathfinder_file.c: 181:         }
  7870   002A50  0630               	decf	maze_return@i^0,f,c
  7871   002A52  A0D8               	btfss	status,0,c
  7872   002A54  0631               	decf	(maze_return@i+1)^0,f,c
  7873   002A56  BE31               	btfsc	(maze_return@i+1)^0,7,c
  7874   002A58  EF32  F015         	goto	u5770
  7875   002A5C  EF30  F015         	goto	u5771
  7876   002A60                     u5771:
  7877   002A60  EFBA  F012         	goto	l5070
  7878   002A64                     u5770:
  7879   002A64                     
  7880                           ;pathfinder_file.c: 184:         Operation_Count = 0;
  7881   002A64  0E00               	movlw	0
  7882   002A66  0100               	movlb	0	; () banked
  7883   002A68  6FE9               	movwf	_Operation_Count& (0+255),b
  7884                           
  7885                           ;pathfinder_file.c: 185:         for (int i = 0; i < 50; ++i) {
  7886   002A6A  0E00               	movlw	0
  7887   002A6C  6E2F               	movwf	(maze_return@i_2044+1)^0,c
  7888   002A6E  0E00               	movlw	0
  7889   002A70  6E2E               	movwf	maze_return@i_2044^0,c
  7890   002A72                     l5122:
  7891                           
  7892                           ;pathfinder_file.c: 186:             Operation_History[i] = 0;
  7893   002A72  0E3C               	movlw	low _Operation_History
  7894   002A74  242E               	addwf	maze_return@i_2044^0,w,c
  7895   002A76  6ED9               	movwf	fsr2l,c
  7896   002A78  0E01               	movlw	high _Operation_History
  7897   002A7A  202F               	addwfc	(maze_return@i_2044+1)^0,w,c
  7898   002A7C  6EDA               	movwf	fsr2h,c
  7899   002A7E  6ADF               	clrf	indf2,c
  7900   002A80                     
  7901                           ;pathfinder_file.c: 187:         }
  7902   002A80  4A2E               	infsnz	maze_return@i_2044^0,f,c
  7903   002A82  2A2F               	incf	(maze_return@i_2044+1)^0,f,c
  7904   002A84  BE2F               	btfsc	(maze_return@i_2044+1)^0,7,c
  7905   002A86  EF4E  F015         	goto	u5781
  7906   002A8A  502F               	movf	(maze_return@i_2044+1)^0,w,c
  7907   002A8C  E109               	bnz	u5780
  7908   002A8E  0E32               	movlw	50
  7909   002A90  5C2E               	subwf	maze_return@i_2044^0,w,c
  7910   002A92  A0D8               	btfss	status,0,c
  7911   002A94  EF4E  F015         	goto	u5781
  7912   002A98  EF50  F015         	goto	u5780
  7913   002A9C                     u5781:
  7914   002A9C  EF39  F015         	goto	l5122
  7915   002AA0                     u5780:
  7916   002AA0  0012               	return		;funcret
  7917   002AA2                     __end_of_maze_return:
  7918                           	callstack 0
  7919                           
  7920 ;; *************** function _initDCmotorsPWM *****************
  7921 ;; Defined at:
  7922 ;;		line 5 in file "dc_motor_v1.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		wreg, status,2
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;Total ram usage:        2 bytes
  7941 ;; Hardware stack levels used: 1
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text28
  7950   004AE2                     __ptext28:
  7951                           	callstack 0
  7952   004AE2                     _initDCmotorsPWM:
  7953                           	callstack 30
  7954   004AE2                     
  7955                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  7956   004AE2  9485               	bcf	133,2,c	;volatile
  7957                           
  7958                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  7959   004AE4  9885               	bcf	133,4,c	;volatile
  7960                           
  7961                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  7962   004AE6  9E83               	bcf	131,7,c	;volatile
  7963                           
  7964                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  7965   004AE8  9C87               	bcf	135,6,c	;volatile
  7966                           
  7967                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  7968   004AEA  947D               	bcf	125,2,c	;volatile
  7969                           
  7970                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  7971   004AEC  987D               	bcf	125,4,c	;volatile
  7972                           
  7973                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  7974   004AEE  9E7B               	bcf	123,7,c	;volatile
  7975                           
  7976                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  7977   004AF0  9C7F               	bcf	127,6,c	;volatile
  7978   004AF2                     
  7979                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  7980   004AF2  0E05               	movlw	5
  7981   004AF4  010E               	movlb	14	; () banked
  7982   004AF6  6F74               	movwf	116,b	;volatile
  7983                           
  7984                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  7985   004AF8  0E06               	movlw	6
  7986   004AFA  6F76               	movwf	118,b	;volatile
  7987                           
  7988                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  7989   004AFC  0E07               	movlw	7
  7990   004AFE  6F69               	movwf	105,b	;volatile
  7991                           
  7992                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  7993   004B00  0E08               	movlw	8
  7994   004B02  6F88               	movwf	136,b	;volatile
  7995                           
  7996                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  7997   004B04  50BD               	movf	189,w,c	;volatile
  7998   004B06  0B8F               	andlw	-113
  7999   004B08  0940               	iorlw	64
  8000   004B0A  6EBD               	movwf	189,c	;volatile
  8001                           
  8002                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  8003   004B0C  0EE0               	movlw	-32
  8004   004B0E  16BE               	andwf	190,f,c	;volatile
  8005                           
  8006                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  8007   004B10  50BF               	movf	191,w,c	;volatile
  8008   004B12  0BF0               	andlw	-16
  8009   004B14  0901               	iorlw	1
  8010   004B16  6EBF               	movwf	191,c	;volatile
  8011   004B18                     
  8012                           ; BSR set to: 14
  8013                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  8014   004B18  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  8015   004B1C                     
  8016                           ; BSR set to: 14
  8017                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  8018   004B1C  8EBD               	bsf	189,7,c	;volatile
  8019                           
  8020                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  8021   004B1E  0E00               	movlw	0
  8022   004B20  6EAA               	movwf	170,c	;volatile
  8023                           
  8024                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  8025   004B22  0E00               	movlw	0
  8026   004B24  6EA6               	movwf	166,c	;volatile
  8027                           
  8028                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  8029   004B26  0E00               	movlw	0
  8030   004B28  010F               	movlb	15	; () banked
  8031   004B2A  6F25               	movwf	37,b	;volatile
  8032                           
  8033                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  8034   004B2C  0E00               	movlw	0
  8035   004B2E  6F21               	movwf	33,b	;volatile
  8036                           
  8037                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  8038   004B30  0EFC               	movlw	-4
  8039   004B32  16AD               	andwf	173,f,c	;volatile
  8040                           
  8041                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  8042   004B34  0EF3               	movlw	-13
  8043   004B36  16AD               	andwf	173,f,c	;volatile
  8044                           
  8045                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  8046   004B38  0ECF               	movlw	-49
  8047   004B3A  16AD               	andwf	173,f,c	;volatile
  8048                           
  8049                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  8050   004B3C  0E3F               	movlw	-193
  8051   004B3E  16AD               	andwf	173,f,c	;volatile
  8052   004B40                     
  8053                           ; BSR set to: 15
  8054                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  8055   004B40  88AB               	bsf	171,4,c	;volatile
  8056                           
  8057                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  8058   004B42  50AB               	movf	171,w,c	;volatile
  8059   004B44  0BF0               	andlw	-16
  8060   004B46  090C               	iorlw	12
  8061   004B48  6EAB               	movwf	171,c	;volatile
  8062   004B4A                     
  8063                           ; BSR set to: 15
  8064                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  8065   004B4A  8EAB               	bsf	171,7,c	;volatile
  8066   004B4C                     
  8067                           ; BSR set to: 15
  8068                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  8069   004B4C  88A7               	bsf	167,4,c	;volatile
  8070                           
  8071                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  8072   004B4E  50A7               	movf	167,w,c	;volatile
  8073   004B50  0BF0               	andlw	-16
  8074   004B52  090C               	iorlw	12
  8075   004B54  6EA7               	movwf	167,c	;volatile
  8076   004B56                     
  8077                           ; BSR set to: 15
  8078                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  8079   004B56  8EA7               	bsf	167,7,c	;volatile
  8080   004B58                     
  8081                           ; BSR set to: 15
  8082                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  8083   004B58  8926               	bsf	38,4,b	;volatile
  8084                           
  8085                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  8086   004B5A  5126               	movf	38,w,b	;volatile
  8087   004B5C  0BF0               	andlw	-16
  8088   004B5E  090C               	iorlw	12
  8089   004B60  6F26               	movwf	38,b	;volatile
  8090   004B62                     
  8091                           ; BSR set to: 15
  8092                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  8093   004B62  8F26               	bsf	38,7,b	;volatile
  8094   004B64                     
  8095                           ; BSR set to: 15
  8096                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  8097   004B64  8922               	bsf	34,4,b	;volatile
  8098                           
  8099                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  8100   004B66  5122               	movf	34,w,b	;volatile
  8101   004B68  0BF0               	andlw	-16
  8102   004B6A  090C               	iorlw	12
  8103   004B6C  6F22               	movwf	34,b	;volatile
  8104   004B6E                     
  8105                           ; BSR set to: 15
  8106                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  8107   004B6E  8F22               	bsf	34,7,b	;volatile
  8108   004B70                     
  8109                           ; BSR set to: 15
  8110                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  8111   004B70  9688               	bcf	136,3,c	;volatile
  8112   004B72                     
  8113                           ; BSR set to: 15
  8114                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  8115   004B72  9680               	bcf	128,3,c	;volatile
  8116   004B74                     
  8117                           ; BSR set to: 15
  8118   004B74  0012               	return		;funcret
  8119   004B76                     __end_of_initDCmotorsPWM:
  8120                           	callstack 0
  8121                           
  8122 ;; *************** function _calibration_routine *****************
  8123 ;; Defined at:
  8124 ;;		line 81 in file "calibration.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  c               2   34[COMRAM] PTR struct calibration_s
  8127 ;;		 -> calibration(9), 
  8128 ;;  mL              1   36[COMRAM] PTR struct DC_motor
  8129 ;;		 -> motorL(9), 
  8130 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  8131 ;;		 -> motorR(9), 
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8143 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;Total ram usage:        6 bytes
  8148 ;; Hardware stack levels used: 1
  8149 ;; Hardware stack levels required when called: 3
  8150 ;; This function calls:
  8151 ;;		_adjust_calibration
  8152 ;;		_backward
  8153 ;;		_forward
  8154 ;;		_leftTURN
  8155 ;;		_rightTURN
  8156 ;;		_switch_calibration
  8157 ;; This function is called by:
  8158 ;;		_main
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text29
  8163   003726                     __ptext29:
  8164                           	callstack 0
  8165   003726                     _calibration_routine:
  8166                           	callstack 27
  8167   003726                     l160:
  8168   003726                     
  8169                           ;calibration.c: 85:         if(c->index == 1){
  8170   003726  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8171   00372A  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8172   00372E  04DE               	decf	postinc2,w,c
  8173   003730  A4D8               	btfss	status,2,c
  8174   003732  EF9D  F01B         	goto	u5481
  8175   003736  EF9F  F01B         	goto	u5480
  8176   00373A                     u5481:
  8177   00373A  EFBC  F01B         	goto	l4884
  8178   00373E                     u5480:
  8179   00373E                     
  8180                           ;calibration.c: 86:             adjust_calibration(&(c->right_90));
  8181   00373E  0E01               	movlw	1
  8182   003740  2423               	addwf	calibration_routine@c^0,w,c
  8183   003742  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8184   003744  0E00               	movlw	0
  8185   003746  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8186   003748  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8187   00374A  ECB2  F021         	call	_adjust_calibration	;wreg free
  8188   00374E                     
  8189                           ;calibration.c: 87:             rightTURN(c->right_90, mL, mR);
  8190   00374E  C025  F014         	movff	calibration_routine@mL,rightTURN@mL
  8191   003752  C026  F015         	movff	calibration_routine@mR,rightTURN@mR
  8192   003756  C027  F016         	movff	calibration_routine@mR+1,rightTURN@mR+1
  8193   00375A  EE20 F001          	lfsr	2,1
  8194   00375E  5023               	movf	calibration_routine@c^0,w,c
  8195   003760  26D9               	addwf	fsr2l,f,c
  8196   003762  5024               	movf	(calibration_routine@c+1)^0,w,c
  8197   003764  22DA               	addwfc	fsr2h,f,c
  8198   003766  50DF               	movf	indf2,w,c
  8199   003768  EC9C  F01E         	call	_rightTURN
  8200   00376C                     
  8201                           ;calibration.c: 88:             switch_calibration(&(c->index));
  8202   00376C  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8203   003770  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8204   003774  ECC3  F024         	call	_switch_calibration	;wreg free
  8205   003778                     l4884:
  8206                           
  8207                           ;calibration.c: 91:         if(c->index == 2){
  8208   003778  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8209   00377C  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8210   003780  0E02               	movlw	2
  8211   003782  18DE               	xorwf	postinc2,w,c
  8212   003784  A4D8               	btfss	status,2,c
  8213   003786  EFC7  F01B         	goto	u5491
  8214   00378A  EFC9  F01B         	goto	u5490
  8215   00378E                     u5491:
  8216   00378E  EFE6  F01B         	goto	l4892
  8217   003792                     u5490:
  8218   003792                     
  8219                           ;calibration.c: 92:             adjust_calibration(&(c->left_90));
  8220   003792  0E02               	movlw	2
  8221   003794  2423               	addwf	calibration_routine@c^0,w,c
  8222   003796  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8223   003798  0E00               	movlw	0
  8224   00379A  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8225   00379C  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8226   00379E  ECB2  F021         	call	_adjust_calibration	;wreg free
  8227   0037A2                     
  8228                           ;calibration.c: 93:             leftTURN(c->left_90, mL, mR);
  8229   0037A2  C025  F014         	movff	calibration_routine@mL,leftTURN@mL
  8230   0037A6  C026  F015         	movff	calibration_routine@mR,leftTURN@mR
  8231   0037AA  C027  F016         	movff	calibration_routine@mR+1,leftTURN@mR+1
  8232   0037AE  EE20 F002          	lfsr	2,2
  8233   0037B2  5023               	movf	calibration_routine@c^0,w,c
  8234   0037B4  26D9               	addwf	fsr2l,f,c
  8235   0037B6  5024               	movf	(calibration_routine@c+1)^0,w,c
  8236   0037B8  22DA               	addwfc	fsr2h,f,c
  8237   0037BA  50DF               	movf	indf2,w,c
  8238   0037BC  EC67  F01F         	call	_leftTURN
  8239   0037C0                     
  8240                           ;calibration.c: 94:             switch_calibration(&(c->index));
  8241   0037C0  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8242   0037C4  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8243   0037C8  ECC3  F024         	call	_switch_calibration	;wreg free
  8244   0037CC                     l4892:
  8245                           
  8246                           ;calibration.c: 97:         if(c->index == 3){
  8247   0037CC  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8248   0037D0  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8249   0037D4  0E03               	movlw	3
  8250   0037D6  18DE               	xorwf	postinc2,w,c
  8251   0037D8  A4D8               	btfss	status,2,c
  8252   0037DA  EFF1  F01B         	goto	u5501
  8253   0037DE  EFF3  F01B         	goto	u5500
  8254   0037E2                     u5501:
  8255   0037E2  EF10  F01C         	goto	l4900
  8256   0037E6                     u5500:
  8257   0037E6                     
  8258                           ;calibration.c: 98:             adjust_calibration(&(c->right_135));
  8259   0037E6  0E03               	movlw	3
  8260   0037E8  2423               	addwf	calibration_routine@c^0,w,c
  8261   0037EA  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8262   0037EC  0E00               	movlw	0
  8263   0037EE  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8264   0037F0  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8265   0037F2  ECB2  F021         	call	_adjust_calibration	;wreg free
  8266   0037F6                     
  8267                           ;calibration.c: 99:             rightTURN(c->right_135, mL, mR);
  8268   0037F6  C025  F014         	movff	calibration_routine@mL,rightTURN@mL
  8269   0037FA  C026  F015         	movff	calibration_routine@mR,rightTURN@mR
  8270   0037FE  C027  F016         	movff	calibration_routine@mR+1,rightTURN@mR+1
  8271   003802  EE20 F003          	lfsr	2,3
  8272   003806  5023               	movf	calibration_routine@c^0,w,c
  8273   003808  26D9               	addwf	fsr2l,f,c
  8274   00380A  5024               	movf	(calibration_routine@c+1)^0,w,c
  8275   00380C  22DA               	addwfc	fsr2h,f,c
  8276   00380E  50DF               	movf	indf2,w,c
  8277   003810  EC9C  F01E         	call	_rightTURN
  8278   003814                     
  8279                           ;calibration.c: 100:             switch_calibration(&(c->index));
  8280   003814  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8281   003818  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8282   00381C  ECC3  F024         	call	_switch_calibration	;wreg free
  8283   003820                     l4900:
  8284                           
  8285                           ;calibration.c: 102:         if(c->index == 4){
  8286   003820  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8287   003824  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8288   003828  0E04               	movlw	4
  8289   00382A  18DE               	xorwf	postinc2,w,c
  8290   00382C  A4D8               	btfss	status,2,c
  8291   00382E  EF1B  F01C         	goto	u5511
  8292   003832  EF1D  F01C         	goto	u5510
  8293   003836                     u5511:
  8294   003836  EF3A  F01C         	goto	l4908
  8295   00383A                     u5510:
  8296   00383A                     
  8297                           ;calibration.c: 103:             adjust_calibration(&(c->left_135));
  8298   00383A  0E04               	movlw	4
  8299   00383C  2423               	addwf	calibration_routine@c^0,w,c
  8300   00383E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8301   003840  0E00               	movlw	0
  8302   003842  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8303   003844  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8304   003846  ECB2  F021         	call	_adjust_calibration	;wreg free
  8305   00384A                     
  8306                           ;calibration.c: 104:             leftTURN(c->left_135, mL, mR);
  8307   00384A  C025  F014         	movff	calibration_routine@mL,leftTURN@mL
  8308   00384E  C026  F015         	movff	calibration_routine@mR,leftTURN@mR
  8309   003852  C027  F016         	movff	calibration_routine@mR+1,leftTURN@mR+1
  8310   003856  EE20 F004          	lfsr	2,4
  8311   00385A  5023               	movf	calibration_routine@c^0,w,c
  8312   00385C  26D9               	addwf	fsr2l,f,c
  8313   00385E  5024               	movf	(calibration_routine@c+1)^0,w,c
  8314   003860  22DA               	addwfc	fsr2h,f,c
  8315   003862  50DF               	movf	indf2,w,c
  8316   003864  EC67  F01F         	call	_leftTURN
  8317   003868                     
  8318                           ;calibration.c: 105:             switch_calibration(&(c->index));
  8319   003868  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8320   00386C  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8321   003870  ECC3  F024         	call	_switch_calibration	;wreg free
  8322   003874                     l4908:
  8323                           
  8324                           ;calibration.c: 108:         if(c->index == 5 ){
  8325   003874  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8326   003878  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8327   00387C  0E05               	movlw	5
  8328   00387E  18DE               	xorwf	postinc2,w,c
  8329   003880  A4D8               	btfss	status,2,c
  8330   003882  EF45  F01C         	goto	u5521
  8331   003886  EF47  F01C         	goto	u5520
  8332   00388A                     u5521:
  8333   00388A  EF64  F01C         	goto	l4916
  8334   00388E                     u5520:
  8335   00388E                     
  8336                           ;calibration.c: 109:             adjust_calibration(&(c->forward_one));
  8337   00388E  0E05               	movlw	5
  8338   003890  2423               	addwf	calibration_routine@c^0,w,c
  8339   003892  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8340   003894  0E00               	movlw	0
  8341   003896  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8342   003898  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8343   00389A  ECB2  F021         	call	_adjust_calibration	;wreg free
  8344   00389E                     
  8345                           ;calibration.c: 110:             forward(c->forward_one, mL, mR);
  8346   00389E  C025  F014         	movff	calibration_routine@mL,forward@mL
  8347   0038A2  C026  F015         	movff	calibration_routine@mR,forward@mR
  8348   0038A6  C027  F016         	movff	calibration_routine@mR+1,forward@mR+1
  8349   0038AA  EE20 F005          	lfsr	2,5
  8350   0038AE  5023               	movf	calibration_routine@c^0,w,c
  8351   0038B0  26D9               	addwf	fsr2l,f,c
  8352   0038B2  5024               	movf	(calibration_routine@c+1)^0,w,c
  8353   0038B4  22DA               	addwfc	fsr2h,f,c
  8354   0038B6  50DF               	movf	indf2,w,c
  8355   0038B8  ECD0  F01D         	call	_forward
  8356   0038BC                     
  8357                           ;calibration.c: 111:             switch_calibration(&(c->index));
  8358   0038BC  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8359   0038C0  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8360   0038C4  ECC3  F024         	call	_switch_calibration	;wreg free
  8361   0038C8                     l4916:
  8362                           
  8363                           ;calibration.c: 114:         if(c->index == 6){
  8364   0038C8  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8365   0038CC  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8366   0038D0  0E06               	movlw	6
  8367   0038D2  18DE               	xorwf	postinc2,w,c
  8368   0038D4  A4D8               	btfss	status,2,c
  8369   0038D6  EF6F  F01C         	goto	u5531
  8370   0038DA  EF71  F01C         	goto	u5530
  8371   0038DE                     u5531:
  8372   0038DE  EF8E  F01C         	goto	l4924
  8373   0038E2                     u5530:
  8374   0038E2                     
  8375                           ;calibration.c: 115:             adjust_calibration(&(c->backward_one));
  8376   0038E2  0E06               	movlw	6
  8377   0038E4  2423               	addwf	calibration_routine@c^0,w,c
  8378   0038E6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8379   0038E8  0E00               	movlw	0
  8380   0038EA  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8381   0038EC  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8382   0038EE  ECB2  F021         	call	_adjust_calibration	;wreg free
  8383   0038F2                     
  8384                           ;calibration.c: 116:             backward(c->backward_one, mL, mR);
  8385   0038F2  C025  F014         	movff	calibration_routine@mL,backward@mL
  8386   0038F6  C026  F015         	movff	calibration_routine@mR,backward@mR
  8387   0038FA  C027  F016         	movff	calibration_routine@mR+1,backward@mR+1
  8388   0038FE  EE20 F006          	lfsr	2,6
  8389   003902  5023               	movf	calibration_routine@c^0,w,c
  8390   003904  26D9               	addwf	fsr2l,f,c
  8391   003906  5024               	movf	(calibration_routine@c+1)^0,w,c
  8392   003908  22DA               	addwfc	fsr2h,f,c
  8393   00390A  50DF               	movf	indf2,w,c
  8394   00390C  EC32  F020         	call	_backward
  8395   003910                     
  8396                           ;calibration.c: 117:             switch_calibration(&(c->index));
  8397   003910  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8398   003914  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8399   003918  ECC3  F024         	call	_switch_calibration	;wreg free
  8400   00391C                     l4924:
  8401                           
  8402                           ;calibration.c: 120:         if(c->index == 7 ){
  8403   00391C  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8404   003920  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8405   003924  0E07               	movlw	7
  8406   003926  18DE               	xorwf	postinc2,w,c
  8407   003928  A4D8               	btfss	status,2,c
  8408   00392A  EF99  F01C         	goto	u5541
  8409   00392E  EF9B  F01C         	goto	u5540
  8410   003932                     u5541:
  8411   003932  EFB8  F01C         	goto	l4932
  8412   003936                     u5540:
  8413   003936                     
  8414                           ;calibration.c: 121:             adjust_calibration(&(c->forward_half));
  8415   003936  0E07               	movlw	7
  8416   003938  2423               	addwf	calibration_routine@c^0,w,c
  8417   00393A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8418   00393C  0E00               	movlw	0
  8419   00393E  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8420   003940  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8421   003942  ECB2  F021         	call	_adjust_calibration	;wreg free
  8422   003946                     
  8423                           ;calibration.c: 122:             forward(c->forward_half, mL, mR);
  8424   003946  C025  F014         	movff	calibration_routine@mL,forward@mL
  8425   00394A  C026  F015         	movff	calibration_routine@mR,forward@mR
  8426   00394E  C027  F016         	movff	calibration_routine@mR+1,forward@mR+1
  8427   003952  EE20 F007          	lfsr	2,7
  8428   003956  5023               	movf	calibration_routine@c^0,w,c
  8429   003958  26D9               	addwf	fsr2l,f,c
  8430   00395A  5024               	movf	(calibration_routine@c+1)^0,w,c
  8431   00395C  22DA               	addwfc	fsr2h,f,c
  8432   00395E  50DF               	movf	indf2,w,c
  8433   003960  ECD0  F01D         	call	_forward
  8434   003964                     
  8435                           ;calibration.c: 123:             switch_calibration(&(c->index));
  8436   003964  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8437   003968  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8438   00396C  ECC3  F024         	call	_switch_calibration	;wreg free
  8439   003970                     l4932:
  8440                           
  8441                           ;calibration.c: 126:         if(c->index == 8){
  8442   003970  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8443   003974  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8444   003978  0E08               	movlw	8
  8445   00397A  18DE               	xorwf	postinc2,w,c
  8446   00397C  A4D8               	btfss	status,2,c
  8447   00397E  EFC3  F01C         	goto	u5551
  8448   003982  EFC5  F01C         	goto	u5550
  8449   003986                     u5551:
  8450   003986  EFE2  F01C         	goto	l4940
  8451   00398A                     u5550:
  8452   00398A                     
  8453                           ;calibration.c: 127:             adjust_calibration(&(c->backward_half));
  8454   00398A  0E08               	movlw	8
  8455   00398C  2423               	addwf	calibration_routine@c^0,w,c
  8456   00398E  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8457   003990  0E00               	movlw	0
  8458   003992  2024               	addwfc	(calibration_routine@c+1)^0,w,c
  8459   003994  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8460   003996  ECB2  F021         	call	_adjust_calibration	;wreg free
  8461   00399A                     
  8462                           ;calibration.c: 128:             backward(c->backward_half, mL, mR);
  8463   00399A  C025  F014         	movff	calibration_routine@mL,backward@mL
  8464   00399E  C026  F015         	movff	calibration_routine@mR,backward@mR
  8465   0039A2  C027  F016         	movff	calibration_routine@mR+1,backward@mR+1
  8466   0039A6  EE20 F008          	lfsr	2,8
  8467   0039AA  5023               	movf	calibration_routine@c^0,w,c
  8468   0039AC  26D9               	addwf	fsr2l,f,c
  8469   0039AE  5024               	movf	(calibration_routine@c+1)^0,w,c
  8470   0039B0  22DA               	addwfc	fsr2h,f,c
  8471   0039B2  50DF               	movf	indf2,w,c
  8472   0039B4  EC32  F020         	call	_backward
  8473   0039B8                     
  8474                           ;calibration.c: 129:             switch_calibration(&(c->index));
  8475   0039B8  C023  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8476   0039BC  C024  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8477   0039C0  ECC3  F024         	call	_switch_calibration	;wreg free
  8478   0039C4                     l4940:
  8479                           
  8480                           ;calibration.c: 132:         if(c->index == 9){
  8481   0039C4  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8482   0039C8  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8483   0039CC  0E09               	movlw	9
  8484   0039CE  18DE               	xorwf	postinc2,w,c
  8485   0039D0  A4D8               	btfss	status,2,c
  8486   0039D2  EFED  F01C         	goto	u5561
  8487   0039D6  EFEF  F01C         	goto	u5560
  8488   0039DA                     u5561:
  8489   0039DA  EF93  F01B         	goto	l160
  8490   0039DE                     u5560:
  8491   0039DE                     
  8492                           ;calibration.c: 133:             c->index = 1;
  8493   0039DE  C023  FFD9         	movff	calibration_routine@c,fsr2l
  8494   0039E2  C024  FFDA         	movff	calibration_routine@c+1,fsr2h
  8495   0039E6  0E01               	movlw	1
  8496   0039E8  6EDF               	movwf	indf2,c
  8497   0039EA  0012               	return		;funcret
  8498   0039EC                     __end_of_calibration_routine:
  8499                           	callstack 0
  8500                           
  8501 ;; *************** function _switch_calibration *****************
  8502 ;; Defined at:
  8503 ;;		line 60 in file "calibration.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  calibration_    2    0[COMRAM] PTR int 
  8506 ;;		 -> calibration(9), 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;Total ram usage:        4 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; This function calls:
  8525 ;;		Nothing
  8526 ;; This function is called by:
  8527 ;;		_calibration_routine
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text30
  8532   004986                     __ptext30:
  8533                           	callstack 0
  8534   004986                     _switch_calibration:
  8535                           	callstack 29
  8536   004986                     l152:
  8537                           
  8538                           ;calibration.c: 62:         if(!PORTFbits.RF2){
  8539   004986  B48E               	btfsc	142,2,c	;volatile
  8540   004988  EFC8  F024         	goto	u5221
  8541   00498C  EFCA  F024         	goto	u5220
  8542   004990                     u5221:
  8543   004990  EFFA  F024         	goto	l153
  8544   004994                     u5220:
  8545   004994                     
  8546                           ;calibration.c: 63:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8547   004994  0E11               	movlw	17
  8548   004996  6E04               	movwf	(??_switch_calibration+1)^0,c
  8549   004998  0E3C               	movlw	60
  8550   00499A  6E03               	movwf	??_switch_calibration^0,c
  8551   00499C  0ECB               	movlw	203
  8552   00499E                     u5887:
  8553   00499E  2EE8               	decfsz	wreg,f,c
  8554   0049A0  D7FE               	bra	u5887
  8555   0049A2  2E03               	decfsz	??_switch_calibration^0,f,c
  8556   0049A4  D7FC               	bra	u5887
  8557   0049A6  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8558   0049A8  D7FA               	bra	u5887
  8559   0049AA  0000               	nop	
  8560   0049AC                     
  8561                           ;calibration.c: 64:             *calibration_index = *calibration_index + 1;
  8562   0049AC  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  8563   0049B0  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  8564   0049B4  CFDE F003          	movff	postinc2,??_switch_calibration
  8565   0049B8  CFDD F004          	movff	postdec2,??_switch_calibration+1
  8566   0049BC  0E01               	movlw	1
  8567   0049BE  2603               	addwf	??_switch_calibration^0,f,c
  8568   0049C0  0E00               	movlw	0
  8569   0049C2  2204               	addwfc	(??_switch_calibration+1)^0,f,c
  8570   0049C4  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  8571   0049C8  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  8572   0049CC  C003  FFDE         	movff	??_switch_calibration,postinc2
  8573   0049D0  C004  FFDD         	movff	??_switch_calibration+1,postdec2
  8574   0049D4                     
  8575                           ;calibration.c: 65:             LATDbits.LATD7 = 1;
  8576   0049D4  8E7C               	bsf	124,7,c	;volatile
  8577   0049D6                     
  8578                           ;calibration.c: 66:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8579   0049D6  0E11               	movlw	17
  8580   0049D8  6E04               	movwf	(??_switch_calibration+1)^0,c
  8581   0049DA  0E3C               	movlw	60
  8582   0049DC  6E03               	movwf	??_switch_calibration^0,c
  8583   0049DE  0ECB               	movlw	203
  8584   0049E0                     u5897:
  8585   0049E0  2EE8               	decfsz	wreg,f,c
  8586   0049E2  D7FE               	bra	u5897
  8587   0049E4  2E03               	decfsz	??_switch_calibration^0,f,c
  8588   0049E6  D7FC               	bra	u5897
  8589   0049E8  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8590   0049EA  D7FA               	bra	u5897
  8591   0049EC  0000               	nop	
  8592   0049EE                     
  8593                           ;calibration.c: 67:             LATDbits.LATD7 = 0;
  8594   0049EE  9E7C               	bcf	124,7,c	;volatile
  8595                           
  8596                           ;calibration.c: 68:             break;
  8597   0049F0  EF1B  F025         	goto	l157
  8598   0049F4                     l153:
  8599                           
  8600                           ;calibration.c: 71:         if(!PORTFbits.RF3){
  8601   0049F4  B68E               	btfsc	142,3,c	;volatile
  8602   0049F6  EFFF  F024         	goto	u5231
  8603   0049FA  EF01  F025         	goto	u5230
  8604   0049FE                     u5231:
  8605   0049FE  EFC3  F024         	goto	l152
  8606   004A02                     u5230:
  8607   004A02                     
  8608                           ;calibration.c: 72:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8609   004A02  0E11               	movlw	17
  8610   004A04  6E04               	movwf	(??_switch_calibration+1)^0,c
  8611   004A06  0E3C               	movlw	60
  8612   004A08  6E03               	movwf	??_switch_calibration^0,c
  8613   004A0A  0ECB               	movlw	203
  8614   004A0C                     u5907:
  8615   004A0C  2EE8               	decfsz	wreg,f,c
  8616   004A0E  D7FE               	bra	u5907
  8617   004A10  2E03               	decfsz	??_switch_calibration^0,f,c
  8618   004A12  D7FC               	bra	u5907
  8619   004A14  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8620   004A16  D7FA               	bra	u5907
  8621   004A18  0000               	nop	
  8622   004A1A                     
  8623                           ;calibration.c: 73:             LATHbits.LATH3 = 1;
  8624   004A1A  8680               	bsf	128,3,c	;volatile
  8625                           
  8626                           ;calibration.c: 74:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8627   004A1C  0E11               	movlw	17
  8628   004A1E  6E04               	movwf	(??_switch_calibration+1)^0,c
  8629   004A20  0E3C               	movlw	60
  8630   004A22  6E03               	movwf	??_switch_calibration^0,c
  8631   004A24  0ECB               	movlw	203
  8632   004A26                     u5917:
  8633   004A26  2EE8               	decfsz	wreg,f,c
  8634   004A28  D7FE               	bra	u5917
  8635   004A2A  2E03               	decfsz	??_switch_calibration^0,f,c
  8636   004A2C  D7FC               	bra	u5917
  8637   004A2E  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8638   004A30  D7FA               	bra	u5917
  8639   004A32  0000               	nop	
  8640   004A34                     
  8641                           ;calibration.c: 75:             LATHbits.LATH3 = 0;
  8642   004A34  9680               	bcf	128,3,c	;volatile
  8643   004A36                     l157:
  8644   004A36  0012               	return		;funcret
  8645   004A38                     __end_of_switch_calibration:
  8646                           	callstack 0
  8647                           
  8648 ;; *************** function _rightTURN *****************
  8649 ;; Defined at:
  8650 ;;		line 244 in file "dc_motor_v1.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  rotation_cal    1    wreg     unsigned char 
  8653 ;;  mL              1   19[COMRAM] PTR struct DC_motor
  8654 ;;		 -> motorL(9), 
  8655 ;;  mR              2   20[COMRAM] PTR struct DC_motor
  8656 ;;		 -> motorR(9), 
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;  rotation_cal    1   25[COMRAM] unsigned char 
  8659 ;;  j               2   28[COMRAM] int 
  8660 ;;  i               2   26[COMRAM] int 
  8661 ;;  delay_time      2   32[COMRAM] int 
  8662 ;;  max_power       2   30[COMRAM] int 
  8663 ;;  acceleration    2    0        int 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  1    wreg      void 
  8666 ;; Registers used:
  8667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8673 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8674 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8675 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;Total ram usage:       15 bytes
  8678 ;; Hardware stack levels used: 1
  8679 ;; Hardware stack levels required when called: 2
  8680 ;; This function calls:
  8681 ;;		___awdiv
  8682 ;;		_delay_ms_function
  8683 ;;		_setMotorPWM
  8684 ;; This function is called by:
  8685 ;;		_calibration_routine
  8686 ;;		_maze_search
  8687 ;;		_maze_return
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           	psect	text31
  8692   003D38                     __ptext31:
  8693                           	callstack 0
  8694   003D38                     _rightTURN:
  8695                           	callstack 27
  8696                           
  8697                           ;incstack = 0
  8698                           ;rightTURN@rotation_calibration stored from wreg
  8699   003D38  6E1A               	movwf	rightTURN@rotation_calibration^0,c
  8700   003D3A                     
  8701                           ;dc_motor_v1.c: 245:     mL->direction = 1;
  8702   003D3A  5014               	movf	rightTURN@mL^0,w,c
  8703   003D3C  6ED9               	movwf	fsr2l,c
  8704   003D3E  6ADA               	clrf	fsr2h,c
  8705   003D40  0E01               	movlw	1
  8706   003D42  26D9               	addwf	fsr2l,f,c
  8707   003D44  0E01               	movlw	1
  8708   003D46  6EDF               	movwf	indf2,c
  8709                           
  8710                           ;dc_motor_v1.c: 246:     mR->direction = 0;
  8711   003D48  EE20 F001          	lfsr	2,1
  8712   003D4C  5015               	movf	rightTURN@mR^0,w,c
  8713   003D4E  26D9               	addwf	fsr2l,f,c
  8714   003D50  5016               	movf	(rightTURN@mR+1)^0,w,c
  8715   003D52  22DA               	addwfc	fsr2h,f,c
  8716   003D54  6ADF               	clrf	indf2,c
  8717   003D56                     
  8718                           ;dc_motor_v1.c: 248:    int max_power = 40;
  8719   003D56  0E00               	movlw	0
  8720   003D58  6E20               	movwf	(rightTURN@max_power+1)^0,c
  8721   003D5A  0E28               	movlw	40
  8722   003D5C  6E1F               	movwf	rightTURN@max_power^0,c
  8723   003D5E                     
  8724                           ;dc_motor_v1.c: 250:     int delay_time = acceleration_time/max_power;
  8725   003D5E  0E00               	movlw	0
  8726   003D60  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8727   003D62  0E64               	movlw	100
  8728   003D64  6E01               	movwf	___awdiv@dividend^0,c
  8729   003D66  0E00               	movlw	0
  8730   003D68  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8731   003D6A  0E28               	movlw	40
  8732   003D6C  6E03               	movwf	___awdiv@divisor^0,c
  8733   003D6E  EC61  F024         	call	___awdiv	;wreg free
  8734   003D72  C001  F021         	movff	?___awdiv,rightTURN@delay_time
  8735   003D76  C002  F022         	movff	?___awdiv+1,rightTURN@delay_time+1
  8736   003D7A                     
  8737                           ;dc_motor_v1.c: 253:     for(int i=0; i< max_power; i++){
  8738   003D7A  0E00               	movlw	0
  8739   003D7C  6E1C               	movwf	(rightTURN@i+1)^0,c
  8740   003D7E  0E00               	movlw	0
  8741   003D80  6E1B               	movwf	rightTURN@i^0,c
  8742   003D82  EFEC  F01E         	goto	l4706
  8743   003D86                     l4694:
  8744                           
  8745                           ;dc_motor_v1.c: 254:         mL->power = mL->power + 1;
  8746   003D86  5014               	movf	rightTURN@mL^0,w,c
  8747   003D88  6ED9               	movwf	fsr2l,c
  8748   003D8A  6ADA               	clrf	fsr2h,c
  8749   003D8C  5014               	movf	rightTURN@mL^0,w,c
  8750   003D8E  6EE1               	movwf	fsr1l,c
  8751   003D90  6AE2               	clrf	fsr1h,c
  8752   003D92  50E7               	movf	indf1,w,c
  8753   003D94  6E17               	movwf	??_rightTURN^0,c
  8754   003D96  2817               	incf	??_rightTURN^0,w,c
  8755   003D98  6EDF               	movwf	indf2,c
  8756   003D9A                     
  8757                           ;dc_motor_v1.c: 255:         mR->power = mR->power + 1 ;
  8758   003D9A  C015  FFD9         	movff	rightTURN@mR,fsr2l
  8759   003D9E  C016  FFDA         	movff	rightTURN@mR+1,fsr2h
  8760   003DA2  50DF               	movf	indf2,w,c
  8761   003DA4  6E17               	movwf	??_rightTURN^0,c
  8762   003DA6  2817               	incf	??_rightTURN^0,w,c
  8763   003DA8  C015  FFD9         	movff	rightTURN@mR,fsr2l
  8764   003DAC  C016  FFDA         	movff	rightTURN@mR+1,fsr2h
  8765   003DB0  6EDF               	movwf	indf2,c
  8766   003DB2                     
  8767                           ;dc_motor_v1.c: 256:         setMotorPWM(mR);
  8768   003DB2  C015  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8769   003DB6  C016  F00F         	movff	rightTURN@mR+1,setMotorPWM@m+1
  8770   003DBA  ECFC  F020         	call	_setMotorPWM	;wreg free
  8771   003DBE                     
  8772                           ;dc_motor_v1.c: 257:         setMotorPWM(mL);
  8773   003DBE  C014  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8774   003DC2  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  8775   003DC4  ECFC  F020         	call	_setMotorPWM	;wreg free
  8776   003DC8                     
  8777                           ;dc_motor_v1.c: 258:         delay_ms_function(delay_time);
  8778   003DC8  C021  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8779   003DCC  C022  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8780   003DD0  EC46  F027         	call	_delay_ms_function	;wreg free
  8781   003DD4                     
  8782                           ;dc_motor_v1.c: 259:     }
  8783   003DD4  4A1B               	infsnz	rightTURN@i^0,f,c
  8784   003DD6  2A1C               	incf	(rightTURN@i+1)^0,f,c
  8785   003DD8                     l4706:
  8786   003DD8  501F               	movf	rightTURN@max_power^0,w,c
  8787   003DDA  5C1B               	subwf	rightTURN@i^0,w,c
  8788   003DDC  501C               	movf	(rightTURN@i+1)^0,w,c
  8789   003DDE  0A80               	xorlw	128
  8790   003DE0  6E17               	movwf	??_rightTURN^0,c
  8791   003DE2  5020               	movf	(rightTURN@max_power+1)^0,w,c
  8792   003DE4  0A80               	xorlw	128
  8793   003DE6  5817               	subwfb	??_rightTURN^0,w,c
  8794   003DE8  A0D8               	btfss	status,0,c
  8795   003DEA  EFF9  F01E         	goto	u5241
  8796   003DEE  EFFB  F01E         	goto	u5240
  8797   003DF2                     u5241:
  8798   003DF2  EFC3  F01E         	goto	l4694
  8799   003DF6                     u5240:
  8800   003DF6                     
  8801                           ;dc_motor_v1.c: 262:     for(int j=0; j<rotation_calibration; j++){
  8802   003DF6  0E00               	movlw	0
  8803   003DF8  6E1E               	movwf	(rightTURN@j+1)^0,c
  8804   003DFA  0E00               	movlw	0
  8805   003DFC  6E1D               	movwf	rightTURN@j^0,c
  8806   003DFE  EF0A  F01F         	goto	l302
  8807   003E02                     l4710:
  8808                           
  8809                           ;dc_motor_v1.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8810   003E02  0ED0               	movlw	208
  8811   003E04  6E17               	movwf	??_rightTURN^0,c
  8812   003E06  0ECA               	movlw	202
  8813   003E08                     u5927:
  8814   003E08  2EE8               	decfsz	wreg,f,c
  8815   003E0A  D7FE               	bra	u5927
  8816   003E0C  2E17               	decfsz	??_rightTURN^0,f,c
  8817   003E0E  D7FC               	bra	u5927
  8818   003E10                     
  8819                           ;dc_motor_v1.c: 264:     }
  8820   003E10  4A1D               	infsnz	rightTURN@j^0,f,c
  8821   003E12  2A1E               	incf	(rightTURN@j+1)^0,f,c
  8822   003E14                     l302:
  8823   003E14  501A               	movf	rightTURN@rotation_calibration^0,w,c
  8824   003E16  6E17               	movwf	??_rightTURN^0,c
  8825   003E18  6A18               	clrf	(??_rightTURN+1)^0,c
  8826   003E1A  5017               	movf	??_rightTURN^0,w,c
  8827   003E1C  5C1D               	subwf	rightTURN@j^0,w,c
  8828   003E1E  501E               	movf	(rightTURN@j+1)^0,w,c
  8829   003E20  0A80               	xorlw	128
  8830   003E22  6E19               	movwf	(??_rightTURN+2)^0,c
  8831   003E24  5018               	movf	(??_rightTURN+1)^0,w,c
  8832   003E26  0A80               	xorlw	128
  8833   003E28  5819               	subwfb	(??_rightTURN+2)^0,w,c
  8834   003E2A  A0D8               	btfss	status,0,c
  8835   003E2C  EF1A  F01F         	goto	u5251
  8836   003E30  EF1C  F01F         	goto	u5250
  8837   003E34                     u5251:
  8838   003E34  EF01  F01F         	goto	l4710
  8839   003E38                     u5250:
  8840   003E38  EF4F  F01F         	goto	l4728
  8841   003E3C                     l4714:
  8842                           
  8843                           ;dc_motor_v1.c: 268:         if(mR->power> 0 ){
  8844   003E3C  C015  FFD9         	movff	rightTURN@mR,fsr2l
  8845   003E40  C016  FFDA         	movff	rightTURN@mR+1,fsr2h
  8846   003E44  50DF               	movf	indf2,w,c
  8847   003E46  B4D8               	btfsc	status,2,c
  8848   003E48  EF28  F01F         	goto	u5261
  8849   003E4C  EF2A  F01F         	goto	u5260
  8850   003E50                     u5261:
  8851   003E50  EF2F  F01F         	goto	l4718
  8852   003E54                     u5260:
  8853   003E54                     
  8854                           ;dc_motor_v1.c: 269:             mR->power--;
  8855   003E54  C015  FFD9         	movff	rightTURN@mR,fsr2l
  8856   003E58  C016  FFDA         	movff	rightTURN@mR+1,fsr2h
  8857   003E5C  06DF               	decf	indf2,f,c
  8858   003E5E                     l4718:
  8859                           
  8860                           ;dc_motor_v1.c: 271:         if(mL->power> 0 ){
  8861   003E5E  5014               	movf	rightTURN@mL^0,w,c
  8862   003E60  6ED9               	movwf	fsr2l,c
  8863   003E62  6ADA               	clrf	fsr2h,c
  8864   003E64  50DF               	movf	indf2,w,c
  8865   003E66  B4D8               	btfsc	status,2,c
  8866   003E68  EF38  F01F         	goto	u5271
  8867   003E6C  EF3A  F01F         	goto	u5270
  8868   003E70                     u5271:
  8869   003E70  EF3E  F01F         	goto	l4722
  8870   003E74                     u5270:
  8871   003E74                     
  8872                           ;dc_motor_v1.c: 272:             mL->power--;
  8873   003E74  5014               	movf	rightTURN@mL^0,w,c
  8874   003E76  6ED9               	movwf	fsr2l,c
  8875   003E78  6ADA               	clrf	fsr2h,c
  8876   003E7A  06DF               	decf	indf2,f,c
  8877   003E7C                     l4722:
  8878                           
  8879                           ;dc_motor_v1.c: 274:         setMotorPWM(mR);
  8880   003E7C  C015  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8881   003E80  C016  F00F         	movff	rightTURN@mR+1,setMotorPWM@m+1
  8882   003E84  ECFC  F020         	call	_setMotorPWM	;wreg free
  8883   003E88                     
  8884                           ;dc_motor_v1.c: 275:         setMotorPWM(mL);
  8885   003E88  C014  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8886   003E8C  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  8887   003E8E  ECFC  F020         	call	_setMotorPWM	;wreg free
  8888   003E92                     
  8889                           ;dc_motor_v1.c: 276:         delay_ms_function(delay_time);
  8890   003E92  C021  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8891   003E96  C022  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8892   003E9A  EC46  F027         	call	_delay_ms_function	;wreg free
  8893   003E9E                     l4728:
  8894                           
  8895                           ;dc_motor_v1.c: 267:     while(mL->power || mR->power > 0){
  8896   003E9E  5014               	movf	rightTURN@mL^0,w,c
  8897   003EA0  6ED9               	movwf	fsr2l,c
  8898   003EA2  6ADA               	clrf	fsr2h,c
  8899   003EA4  50DF               	movf	indf2,w,c
  8900   003EA6  A4D8               	btfss	status,2,c
  8901   003EA8  EF58  F01F         	goto	u5281
  8902   003EAC  EF5A  F01F         	goto	u5280
  8903   003EB0                     u5281:
  8904   003EB0  EF1E  F01F         	goto	l4714
  8905   003EB4                     u5280:
  8906   003EB4  C015  FFD9         	movff	rightTURN@mR,fsr2l
  8907   003EB8  C016  FFDA         	movff	rightTURN@mR+1,fsr2h
  8908   003EBC  50DF               	movf	indf2,w,c
  8909   003EBE  A4D8               	btfss	status,2,c
  8910   003EC0  EF64  F01F         	goto	u5291
  8911   003EC4  EF66  F01F         	goto	u5290
  8912   003EC8                     u5291:
  8913   003EC8  EF1E  F01F         	goto	l4714
  8914   003ECC                     u5290:
  8915   003ECC  0012               	return		;funcret
  8916   003ECE                     __end_of_rightTURN:
  8917                           	callstack 0
  8918                           
  8919 ;; *************** function _leftTURN *****************
  8920 ;; Defined at:
  8921 ;;		line 206 in file "dc_motor_v1.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  rotation_cal    1    wreg     unsigned char 
  8924 ;;  mL              1   19[COMRAM] PTR struct DC_motor
  8925 ;;		 -> motorL(9), 
  8926 ;;  mR              2   20[COMRAM] PTR struct DC_motor
  8927 ;;		 -> motorR(9), 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  rotation_cal    1   25[COMRAM] unsigned char 
  8930 ;;  j               2   28[COMRAM] int 
  8931 ;;  i               2   26[COMRAM] int 
  8932 ;;  delay_time      2   32[COMRAM] int 
  8933 ;;  max_power       2   30[COMRAM] int 
  8934 ;;  acceleration    2    0        int 
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  1    wreg      void 
  8937 ;; Registers used:
  8938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8944 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;Total ram usage:       15 bytes
  8949 ;; Hardware stack levels used: 1
  8950 ;; Hardware stack levels required when called: 2
  8951 ;; This function calls:
  8952 ;;		___awdiv
  8953 ;;		_delay_ms_function
  8954 ;;		_setMotorPWM
  8955 ;; This function is called by:
  8956 ;;		_calibration_routine
  8957 ;;		_maze_search
  8958 ;;		_maze_return
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text32
  8963   003ECE                     __ptext32:
  8964                           	callstack 0
  8965   003ECE                     _leftTURN:
  8966                           	callstack 27
  8967                           
  8968                           ;incstack = 0
  8969                           ;leftTURN@rotation_calibration stored from wreg
  8970   003ECE  6E1A               	movwf	leftTURN@rotation_calibration^0,c
  8971   003ED0                     
  8972                           ;dc_motor_v1.c: 207:     mL->direction = 0;
  8973   003ED0  5014               	movf	leftTURN@mL^0,w,c
  8974   003ED2  6ED9               	movwf	fsr2l,c
  8975   003ED4  6ADA               	clrf	fsr2h,c
  8976   003ED6  0E01               	movlw	1
  8977   003ED8  26D9               	addwf	fsr2l,f,c
  8978   003EDA  6ADF               	clrf	indf2,c
  8979                           
  8980                           ;dc_motor_v1.c: 208:     mR->direction = 1;
  8981   003EDC  EE20 F001          	lfsr	2,1
  8982   003EE0  5015               	movf	leftTURN@mR^0,w,c
  8983   003EE2  26D9               	addwf	fsr2l,f,c
  8984   003EE4  5016               	movf	(leftTURN@mR+1)^0,w,c
  8985   003EE6  22DA               	addwfc	fsr2h,f,c
  8986   003EE8  0E01               	movlw	1
  8987   003EEA  6EDF               	movwf	indf2,c
  8988   003EEC                     
  8989                           ;dc_motor_v1.c: 210:     int max_power = 40;
  8990   003EEC  0E00               	movlw	0
  8991   003EEE  6E20               	movwf	(leftTURN@max_power+1)^0,c
  8992   003EF0  0E28               	movlw	40
  8993   003EF2  6E1F               	movwf	leftTURN@max_power^0,c
  8994   003EF4                     
  8995                           ;dc_motor_v1.c: 212:     int delay_time = acceleration_time/max_power;
  8996   003EF4  0E00               	movlw	0
  8997   003EF6  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8998   003EF8  0E64               	movlw	100
  8999   003EFA  6E01               	movwf	___awdiv@dividend^0,c
  9000   003EFC  0E00               	movlw	0
  9001   003EFE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9002   003F00  0E28               	movlw	40
  9003   003F02  6E03               	movwf	___awdiv@divisor^0,c
  9004   003F04  EC61  F024         	call	___awdiv	;wreg free
  9005   003F08  C001  F021         	movff	?___awdiv,leftTURN@delay_time
  9006   003F0C  C002  F022         	movff	?___awdiv+1,leftTURN@delay_time+1
  9007   003F10                     
  9008                           ;dc_motor_v1.c: 215:     for(int i=0; i< max_power; i++){
  9009   003F10  0E00               	movlw	0
  9010   003F12  6E1C               	movwf	(leftTURN@i+1)^0,c
  9011   003F14  0E00               	movlw	0
  9012   003F16  6E1B               	movwf	leftTURN@i^0,c
  9013   003F18  EFB7  F01F         	goto	l4754
  9014   003F1C                     l4742:
  9015                           
  9016                           ;dc_motor_v1.c: 216:         mL->power = mL->power + 1;
  9017   003F1C  5014               	movf	leftTURN@mL^0,w,c
  9018   003F1E  6ED9               	movwf	fsr2l,c
  9019   003F20  6ADA               	clrf	fsr2h,c
  9020   003F22  5014               	movf	leftTURN@mL^0,w,c
  9021   003F24  6EE1               	movwf	fsr1l,c
  9022   003F26  6AE2               	clrf	fsr1h,c
  9023   003F28  50E7               	movf	indf1,w,c
  9024   003F2A  6E17               	movwf	??_leftTURN^0,c
  9025   003F2C  2817               	incf	??_leftTURN^0,w,c
  9026   003F2E  6EDF               	movwf	indf2,c
  9027   003F30                     
  9028                           ;dc_motor_v1.c: 217:         mR->power = mR->power + 1 ;
  9029   003F30  C015  FFD9         	movff	leftTURN@mR,fsr2l
  9030   003F34  C016  FFDA         	movff	leftTURN@mR+1,fsr2h
  9031   003F38  50DF               	movf	indf2,w,c
  9032   003F3A  6E17               	movwf	??_leftTURN^0,c
  9033   003F3C  2817               	incf	??_leftTURN^0,w,c
  9034   003F3E  C015  FFD9         	movff	leftTURN@mR,fsr2l
  9035   003F42  C016  FFDA         	movff	leftTURN@mR+1,fsr2h
  9036   003F46  6EDF               	movwf	indf2,c
  9037   003F48                     
  9038                           ;dc_motor_v1.c: 218:         setMotorPWM(mR);
  9039   003F48  C015  F00E         	movff	leftTURN@mR,setMotorPWM@m
  9040   003F4C  C016  F00F         	movff	leftTURN@mR+1,setMotorPWM@m+1
  9041   003F50  ECFC  F020         	call	_setMotorPWM	;wreg free
  9042   003F54                     
  9043                           ;dc_motor_v1.c: 219:         setMotorPWM(mL);
  9044   003F54  C014  F00E         	movff	leftTURN@mL,setMotorPWM@m
  9045   003F58  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  9046   003F5A  ECFC  F020         	call	_setMotorPWM	;wreg free
  9047   003F5E                     
  9048                           ;dc_motor_v1.c: 220:         delay_ms_function(delay_time);
  9049   003F5E  C021  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  9050   003F62  C022  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  9051   003F66  EC46  F027         	call	_delay_ms_function	;wreg free
  9052   003F6A                     
  9053                           ;dc_motor_v1.c: 221:     }
  9054   003F6A  4A1B               	infsnz	leftTURN@i^0,f,c
  9055   003F6C  2A1C               	incf	(leftTURN@i+1)^0,f,c
  9056   003F6E                     l4754:
  9057   003F6E  501F               	movf	leftTURN@max_power^0,w,c
  9058   003F70  5C1B               	subwf	leftTURN@i^0,w,c
  9059   003F72  501C               	movf	(leftTURN@i+1)^0,w,c
  9060   003F74  0A80               	xorlw	128
  9061   003F76  6E17               	movwf	??_leftTURN^0,c
  9062   003F78  5020               	movf	(leftTURN@max_power+1)^0,w,c
  9063   003F7A  0A80               	xorlw	128
  9064   003F7C  5817               	subwfb	??_leftTURN^0,w,c
  9065   003F7E  A0D8               	btfss	status,0,c
  9066   003F80  EFC4  F01F         	goto	u5301
  9067   003F84  EFC6  F01F         	goto	u5300
  9068   003F88                     u5301:
  9069   003F88  EF8E  F01F         	goto	l4742
  9070   003F8C                     u5300:
  9071   003F8C                     
  9072                           ;dc_motor_v1.c: 224:     for(int j=0; j<rotation_calibration; j++){
  9073   003F8C  0E00               	movlw	0
  9074   003F8E  6E1E               	movwf	(leftTURN@j+1)^0,c
  9075   003F90  0E00               	movlw	0
  9076   003F92  6E1D               	movwf	leftTURN@j^0,c
  9077   003F94  EFD5  F01F         	goto	l288
  9078   003F98                     l4758:
  9079                           
  9080                           ;dc_motor_v1.c: 225:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9081   003F98  0ED0               	movlw	208
  9082   003F9A  6E17               	movwf	??_leftTURN^0,c
  9083   003F9C  0ECA               	movlw	202
  9084   003F9E                     u5937:
  9085   003F9E  2EE8               	decfsz	wreg,f,c
  9086   003FA0  D7FE               	bra	u5937
  9087   003FA2  2E17               	decfsz	??_leftTURN^0,f,c
  9088   003FA4  D7FC               	bra	u5937
  9089   003FA6                     
  9090                           ;dc_motor_v1.c: 226:     }
  9091   003FA6  4A1D               	infsnz	leftTURN@j^0,f,c
  9092   003FA8  2A1E               	incf	(leftTURN@j+1)^0,f,c
  9093   003FAA                     l288:
  9094   003FAA  501A               	movf	leftTURN@rotation_calibration^0,w,c
  9095   003FAC  6E17               	movwf	??_leftTURN^0,c
  9096   003FAE  6A18               	clrf	(??_leftTURN+1)^0,c
  9097   003FB0  5017               	movf	??_leftTURN^0,w,c
  9098   003FB2  5C1D               	subwf	leftTURN@j^0,w,c
  9099   003FB4  501E               	movf	(leftTURN@j+1)^0,w,c
  9100   003FB6  0A80               	xorlw	128
  9101   003FB8  6E19               	movwf	(??_leftTURN+2)^0,c
  9102   003FBA  5018               	movf	(??_leftTURN+1)^0,w,c
  9103   003FBC  0A80               	xorlw	128
  9104   003FBE  5819               	subwfb	(??_leftTURN+2)^0,w,c
  9105   003FC0  A0D8               	btfss	status,0,c
  9106   003FC2  EFE5  F01F         	goto	u5311
  9107   003FC6  EFE7  F01F         	goto	u5310
  9108   003FCA                     u5311:
  9109   003FCA  EFCC  F01F         	goto	l4758
  9110   003FCE                     u5310:
  9111   003FCE  EF1A  F020         	goto	l4776
  9112   003FD2                     l4762:
  9113                           
  9114                           ;dc_motor_v1.c: 230:         if(mR->power> 0 ){
  9115   003FD2  C015  FFD9         	movff	leftTURN@mR,fsr2l
  9116   003FD6  C016  FFDA         	movff	leftTURN@mR+1,fsr2h
  9117   003FDA  50DF               	movf	indf2,w,c
  9118   003FDC  B4D8               	btfsc	status,2,c
  9119   003FDE  EFF3  F01F         	goto	u5321
  9120   003FE2  EFF5  F01F         	goto	u5320
  9121   003FE6                     u5321:
  9122   003FE6  EFFA  F01F         	goto	l4766
  9123   003FEA                     u5320:
  9124   003FEA                     
  9125                           ;dc_motor_v1.c: 231:             mR->power--;
  9126   003FEA  C015  FFD9         	movff	leftTURN@mR,fsr2l
  9127   003FEE  C016  FFDA         	movff	leftTURN@mR+1,fsr2h
  9128   003FF2  06DF               	decf	indf2,f,c
  9129   003FF4                     l4766:
  9130                           
  9131                           ;dc_motor_v1.c: 233:         if(mL->power> 0 ){
  9132   003FF4  5014               	movf	leftTURN@mL^0,w,c
  9133   003FF6  6ED9               	movwf	fsr2l,c
  9134   003FF8  6ADA               	clrf	fsr2h,c
  9135   003FFA  50DF               	movf	indf2,w,c
  9136   003FFC  B4D8               	btfsc	status,2,c
  9137   003FFE  EF03  F020         	goto	u5331
  9138   004002  EF05  F020         	goto	u5330
  9139   004006                     u5331:
  9140   004006  EF09  F020         	goto	l4770
  9141   00400A                     u5330:
  9142   00400A                     
  9143                           ;dc_motor_v1.c: 234:             mL->power--;
  9144   00400A  5014               	movf	leftTURN@mL^0,w,c
  9145   00400C  6ED9               	movwf	fsr2l,c
  9146   00400E  6ADA               	clrf	fsr2h,c
  9147   004010  06DF               	decf	indf2,f,c
  9148   004012                     l4770:
  9149                           
  9150                           ;dc_motor_v1.c: 236:         setMotorPWM(mR);
  9151   004012  C015  F00E         	movff	leftTURN@mR,setMotorPWM@m
  9152   004016  C016  F00F         	movff	leftTURN@mR+1,setMotorPWM@m+1
  9153   00401A  ECFC  F020         	call	_setMotorPWM	;wreg free
  9154   00401E                     
  9155                           ;dc_motor_v1.c: 237:         setMotorPWM(mL);
  9156   00401E  C014  F00E         	movff	leftTURN@mL,setMotorPWM@m
  9157   004022  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  9158   004024  ECFC  F020         	call	_setMotorPWM	;wreg free
  9159   004028                     
  9160                           ;dc_motor_v1.c: 238:         delay_ms_function(delay_time);
  9161   004028  C021  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  9162   00402C  C022  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  9163   004030  EC46  F027         	call	_delay_ms_function	;wreg free
  9164   004034                     l4776:
  9165                           
  9166                           ;dc_motor_v1.c: 229:     while(mL->power || mR->power > 0){
  9167   004034  5014               	movf	leftTURN@mL^0,w,c
  9168   004036  6ED9               	movwf	fsr2l,c
  9169   004038  6ADA               	clrf	fsr2h,c
  9170   00403A  50DF               	movf	indf2,w,c
  9171   00403C  A4D8               	btfss	status,2,c
  9172   00403E  EF23  F020         	goto	u5341
  9173   004042  EF25  F020         	goto	u5340
  9174   004046                     u5341:
  9175   004046  EFE9  F01F         	goto	l4762
  9176   00404A                     u5340:
  9177   00404A  C015  FFD9         	movff	leftTURN@mR,fsr2l
  9178   00404E  C016  FFDA         	movff	leftTURN@mR+1,fsr2h
  9179   004052  50DF               	movf	indf2,w,c
  9180   004054  A4D8               	btfss	status,2,c
  9181   004056  EF2F  F020         	goto	u5351
  9182   00405A  EF31  F020         	goto	u5350
  9183   00405E                     u5351:
  9184   00405E  EFE9  F01F         	goto	l4762
  9185   004062                     u5350:
  9186   004062  0012               	return		;funcret
  9187   004064                     __end_of_leftTURN:
  9188                           	callstack 0
  9189                           
  9190 ;; *************** function _forward *****************
  9191 ;; Defined at:
  9192 ;;		line 122 in file "dc_motor_v1.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  Distance_Cal    1    wreg     unsigned char 
  9195 ;;  mL              1   19[COMRAM] PTR struct DC_motor
  9196 ;;		 -> motorL(9), 
  9197 ;;  mR              2   20[COMRAM] PTR struct DC_motor
  9198 ;;		 -> motorR(9), 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  Distance_Cal    1   25[COMRAM] unsigned char 
  9201 ;;  j               2   28[COMRAM] int 
  9202 ;;  i               2   26[COMRAM] int 
  9203 ;;  delay_time      2   32[COMRAM] int 
  9204 ;;  max_power       2   30[COMRAM] int 
  9205 ;;  acceleration    2    0        int 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  1    wreg      void 
  9208 ;; Registers used:
  9209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9215 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9216 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9217 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9218 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9219 ;;Total ram usage:       15 bytes
  9220 ;; Hardware stack levels used: 1
  9221 ;; Hardware stack levels required when called: 2
  9222 ;; This function calls:
  9223 ;;		___awdiv
  9224 ;;		_delay_ms_function
  9225 ;;		_setMotorPWM
  9226 ;; This function is called by:
  9227 ;;		_calibration_routine
  9228 ;;		_maze_search
  9229 ;;		_maze_return
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text33
  9234   003BA0                     __ptext33:
  9235                           	callstack 0
  9236   003BA0                     _forward:
  9237                           	callstack 27
  9238                           
  9239                           ;incstack = 0
  9240                           ;forward@Distance_Calibration stored from wreg
  9241   003BA0  6E1A               	movwf	forward@Distance_Calibration^0,c
  9242   003BA2                     
  9243                           ;dc_motor_v1.c: 123:     mL->direction = 1;
  9244   003BA2  5014               	movf	forward@mL^0,w,c
  9245   003BA4  6ED9               	movwf	fsr2l,c
  9246   003BA6  6ADA               	clrf	fsr2h,c
  9247   003BA8  0E01               	movlw	1
  9248   003BAA  26D9               	addwf	fsr2l,f,c
  9249   003BAC  0E01               	movlw	1
  9250   003BAE  6EDF               	movwf	indf2,c
  9251                           
  9252                           ;dc_motor_v1.c: 124:     mR->direction = 1;
  9253   003BB0  EE20 F001          	lfsr	2,1
  9254   003BB4  5015               	movf	forward@mR^0,w,c
  9255   003BB6  26D9               	addwf	fsr2l,f,c
  9256   003BB8  5016               	movf	(forward@mR+1)^0,w,c
  9257   003BBA  22DA               	addwfc	fsr2h,f,c
  9258   003BBC  0E01               	movlw	1
  9259   003BBE  6EDF               	movwf	indf2,c
  9260   003BC0                     
  9261                           ;dc_motor_v1.c: 131:     int max_power = 40;
  9262   003BC0  0E00               	movlw	0
  9263   003BC2  6E20               	movwf	(forward@max_power+1)^0,c
  9264   003BC4  0E28               	movlw	40
  9265   003BC6  6E1F               	movwf	forward@max_power^0,c
  9266   003BC8                     
  9267                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  9268   003BC8  0E00               	movlw	0
  9269   003BCA  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9270   003BCC  0E64               	movlw	100
  9271   003BCE  6E01               	movwf	___awdiv@dividend^0,c
  9272   003BD0  0E00               	movlw	0
  9273   003BD2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9274   003BD4  0E28               	movlw	40
  9275   003BD6  6E03               	movwf	___awdiv@divisor^0,c
  9276   003BD8  EC61  F024         	call	___awdiv	;wreg free
  9277   003BDC  C001  F021         	movff	?___awdiv,forward@delay_time
  9278   003BE0  C002  F022         	movff	?___awdiv+1,forward@delay_time+1
  9279   003BE4                     
  9280                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  9281   003BE4  0E00               	movlw	0
  9282   003BE6  6E1C               	movwf	(forward@i+1)^0,c
  9283   003BE8  0E00               	movlw	0
  9284   003BEA  6E1B               	movwf	forward@i^0,c
  9285   003BEC  EF21  F01E         	goto	l4802
  9286   003BF0                     l4790:
  9287                           
  9288                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  9289   003BF0  5014               	movf	forward@mL^0,w,c
  9290   003BF2  6ED9               	movwf	fsr2l,c
  9291   003BF4  6ADA               	clrf	fsr2h,c
  9292   003BF6  5014               	movf	forward@mL^0,w,c
  9293   003BF8  6EE1               	movwf	fsr1l,c
  9294   003BFA  6AE2               	clrf	fsr1h,c
  9295   003BFC  50E7               	movf	indf1,w,c
  9296   003BFE  6E17               	movwf	??_forward^0,c
  9297   003C00  2817               	incf	??_forward^0,w,c
  9298   003C02  6EDF               	movwf	indf2,c
  9299   003C04                     
  9300                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  9301   003C04  C015  FFD9         	movff	forward@mR,fsr2l
  9302   003C08  C016  FFDA         	movff	forward@mR+1,fsr2h
  9303   003C0C  50DF               	movf	indf2,w,c
  9304   003C0E  6E17               	movwf	??_forward^0,c
  9305   003C10  2817               	incf	??_forward^0,w,c
  9306   003C12  C015  FFD9         	movff	forward@mR,fsr2l
  9307   003C16  C016  FFDA         	movff	forward@mR+1,fsr2h
  9308   003C1A  6EDF               	movwf	indf2,c
  9309   003C1C                     
  9310                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  9311   003C1C  C015  F00E         	movff	forward@mR,setMotorPWM@m
  9312   003C20  C016  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  9313   003C24  ECFC  F020         	call	_setMotorPWM	;wreg free
  9314   003C28                     
  9315                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  9316   003C28  C014  F00E         	movff	forward@mL,setMotorPWM@m
  9317   003C2C  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  9318   003C2E  ECFC  F020         	call	_setMotorPWM	;wreg free
  9319   003C32                     
  9320                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  9321   003C32  C021  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9322   003C36  C022  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9323   003C3A  EC46  F027         	call	_delay_ms_function	;wreg free
  9324   003C3E                     
  9325                           ;dc_motor_v1.c: 142:     }
  9326   003C3E  4A1B               	infsnz	forward@i^0,f,c
  9327   003C40  2A1C               	incf	(forward@i+1)^0,f,c
  9328   003C42                     l4802:
  9329   003C42  501F               	movf	forward@max_power^0,w,c
  9330   003C44  5C1B               	subwf	forward@i^0,w,c
  9331   003C46  501C               	movf	(forward@i+1)^0,w,c
  9332   003C48  0A80               	xorlw	128
  9333   003C4A  6E17               	movwf	??_forward^0,c
  9334   003C4C  5020               	movf	(forward@max_power+1)^0,w,c
  9335   003C4E  0A80               	xorlw	128
  9336   003C50  5817               	subwfb	??_forward^0,w,c
  9337   003C52  A0D8               	btfss	status,0,c
  9338   003C54  EF2E  F01E         	goto	u5361
  9339   003C58  EF30  F01E         	goto	u5360
  9340   003C5C                     u5361:
  9341   003C5C  EFF8  F01D         	goto	l4790
  9342   003C60                     u5360:
  9343   003C60                     
  9344                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  9345   003C60  0E00               	movlw	0
  9346   003C62  6E1E               	movwf	(forward@j+1)^0,c
  9347   003C64  0E00               	movlw	0
  9348   003C66  6E1D               	movwf	forward@j^0,c
  9349   003C68  EF3F  F01E         	goto	l260
  9350   003C6C                     l4806:
  9351                           
  9352                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9353   003C6C  0ED0               	movlw	208
  9354   003C6E  6E17               	movwf	??_forward^0,c
  9355   003C70  0ECA               	movlw	202
  9356   003C72                     u5947:
  9357   003C72  2EE8               	decfsz	wreg,f,c
  9358   003C74  D7FE               	bra	u5947
  9359   003C76  2E17               	decfsz	??_forward^0,f,c
  9360   003C78  D7FC               	bra	u5947
  9361   003C7A                     
  9362                           ;dc_motor_v1.c: 149:     }
  9363   003C7A  4A1D               	infsnz	forward@j^0,f,c
  9364   003C7C  2A1E               	incf	(forward@j+1)^0,f,c
  9365   003C7E                     l260:
  9366   003C7E  501A               	movf	forward@Distance_Calibration^0,w,c
  9367   003C80  6E17               	movwf	??_forward^0,c
  9368   003C82  6A18               	clrf	(??_forward+1)^0,c
  9369   003C84  5017               	movf	??_forward^0,w,c
  9370   003C86  5C1D               	subwf	forward@j^0,w,c
  9371   003C88  501E               	movf	(forward@j+1)^0,w,c
  9372   003C8A  0A80               	xorlw	128
  9373   003C8C  6E19               	movwf	(??_forward+2)^0,c
  9374   003C8E  5018               	movf	(??_forward+1)^0,w,c
  9375   003C90  0A80               	xorlw	128
  9376   003C92  5819               	subwfb	(??_forward+2)^0,w,c
  9377   003C94  A0D8               	btfss	status,0,c
  9378   003C96  EF4F  F01E         	goto	u5371
  9379   003C9A  EF51  F01E         	goto	u5370
  9380   003C9E                     u5371:
  9381   003C9E  EF36  F01E         	goto	l4806
  9382   003CA2                     u5370:
  9383   003CA2  EF84  F01E         	goto	l4824
  9384   003CA6                     l4810:
  9385                           
  9386                           ;dc_motor_v1.c: 153:         if(mR->power> 0 ){
  9387   003CA6  C015  FFD9         	movff	forward@mR,fsr2l
  9388   003CAA  C016  FFDA         	movff	forward@mR+1,fsr2h
  9389   003CAE  50DF               	movf	indf2,w,c
  9390   003CB0  B4D8               	btfsc	status,2,c
  9391   003CB2  EF5D  F01E         	goto	u5381
  9392   003CB6  EF5F  F01E         	goto	u5380
  9393   003CBA                     u5381:
  9394   003CBA  EF64  F01E         	goto	l4814
  9395   003CBE                     u5380:
  9396   003CBE                     
  9397                           ;dc_motor_v1.c: 154:             mR->power--;
  9398   003CBE  C015  FFD9         	movff	forward@mR,fsr2l
  9399   003CC2  C016  FFDA         	movff	forward@mR+1,fsr2h
  9400   003CC6  06DF               	decf	indf2,f,c
  9401   003CC8                     l4814:
  9402                           
  9403                           ;dc_motor_v1.c: 156:         if(mL->power> 0 ){
  9404   003CC8  5014               	movf	forward@mL^0,w,c
  9405   003CCA  6ED9               	movwf	fsr2l,c
  9406   003CCC  6ADA               	clrf	fsr2h,c
  9407   003CCE  50DF               	movf	indf2,w,c
  9408   003CD0  B4D8               	btfsc	status,2,c
  9409   003CD2  EF6D  F01E         	goto	u5391
  9410   003CD6  EF6F  F01E         	goto	u5390
  9411   003CDA                     u5391:
  9412   003CDA  EF73  F01E         	goto	l4818
  9413   003CDE                     u5390:
  9414   003CDE                     
  9415                           ;dc_motor_v1.c: 157:             mL->power--;
  9416   003CDE  5014               	movf	forward@mL^0,w,c
  9417   003CE0  6ED9               	movwf	fsr2l,c
  9418   003CE2  6ADA               	clrf	fsr2h,c
  9419   003CE4  06DF               	decf	indf2,f,c
  9420   003CE6                     l4818:
  9421                           
  9422                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  9423   003CE6  C015  F00E         	movff	forward@mR,setMotorPWM@m
  9424   003CEA  C016  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  9425   003CEE  ECFC  F020         	call	_setMotorPWM	;wreg free
  9426   003CF2                     
  9427                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  9428   003CF2  C014  F00E         	movff	forward@mL,setMotorPWM@m
  9429   003CF6  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  9430   003CF8  ECFC  F020         	call	_setMotorPWM	;wreg free
  9431   003CFC                     
  9432                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  9433   003CFC  C021  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9434   003D00  C022  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9435   003D04  EC46  F027         	call	_delay_ms_function	;wreg free
  9436   003D08                     l4824:
  9437                           
  9438                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  9439   003D08  5014               	movf	forward@mL^0,w,c
  9440   003D0A  6ED9               	movwf	fsr2l,c
  9441   003D0C  6ADA               	clrf	fsr2h,c
  9442   003D0E  50DF               	movf	indf2,w,c
  9443   003D10  A4D8               	btfss	status,2,c
  9444   003D12  EF8D  F01E         	goto	u5401
  9445   003D16  EF8F  F01E         	goto	u5400
  9446   003D1A                     u5401:
  9447   003D1A  EF53  F01E         	goto	l4810
  9448   003D1E                     u5400:
  9449   003D1E  C015  FFD9         	movff	forward@mR,fsr2l
  9450   003D22  C016  FFDA         	movff	forward@mR+1,fsr2h
  9451   003D26  50DF               	movf	indf2,w,c
  9452   003D28  A4D8               	btfss	status,2,c
  9453   003D2A  EF99  F01E         	goto	u5411
  9454   003D2E  EF9B  F01E         	goto	u5410
  9455   003D32                     u5411:
  9456   003D32  EF53  F01E         	goto	l4810
  9457   003D36                     u5410:
  9458   003D36  0012               	return		;funcret
  9459   003D38                     __end_of_forward:
  9460                           	callstack 0
  9461                           
  9462 ;; *************** function _backward *****************
  9463 ;; Defined at:
  9464 ;;		line 166 in file "dc_motor_v1.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;  Distance_Cal    1    wreg     unsigned char 
  9467 ;;  mL              1   19[COMRAM] PTR struct DC_motor
  9468 ;;		 -> motorL(9), 
  9469 ;;  mR              2   20[COMRAM] PTR struct DC_motor
  9470 ;;		 -> motorR(9), 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;  Distance_Cal    1   25[COMRAM] unsigned char 
  9473 ;;  j               2   28[COMRAM] int 
  9474 ;;  i               2   26[COMRAM] int 
  9475 ;;  delay_time      2   32[COMRAM] int 
  9476 ;;  max_power       2   30[COMRAM] int 
  9477 ;;  acceleration    2    0        int 
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1    wreg      void 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9487 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9488 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9490 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9491 ;;Total ram usage:       15 bytes
  9492 ;; Hardware stack levels used: 1
  9493 ;; Hardware stack levels required when called: 2
  9494 ;; This function calls:
  9495 ;;		___awdiv
  9496 ;;		_delay_ms_function
  9497 ;;		_setMotorPWM
  9498 ;; This function is called by:
  9499 ;;		_calibration_routine
  9500 ;;		_maze_search
  9501 ;;		_maze_return
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text34
  9506   004064                     __ptext34:
  9507                           	callstack 0
  9508   004064                     _backward:
  9509                           	callstack 27
  9510                           
  9511                           ;incstack = 0
  9512                           ;backward@Distance_Calibration stored from wreg
  9513   004064  6E1A               	movwf	backward@Distance_Calibration^0,c
  9514   004066                     
  9515                           ;dc_motor_v1.c: 167:     mL->direction = 0;
  9516   004066  5014               	movf	backward@mL^0,w,c
  9517   004068  6ED9               	movwf	fsr2l,c
  9518   00406A  6ADA               	clrf	fsr2h,c
  9519   00406C  0E01               	movlw	1
  9520   00406E  26D9               	addwf	fsr2l,f,c
  9521   004070  6ADF               	clrf	indf2,c
  9522                           
  9523                           ;dc_motor_v1.c: 168:     mR->direction = 0;
  9524   004072  EE20 F001          	lfsr	2,1
  9525   004076  5015               	movf	backward@mR^0,w,c
  9526   004078  26D9               	addwf	fsr2l,f,c
  9527   00407A  5016               	movf	(backward@mR+1)^0,w,c
  9528   00407C  22DA               	addwfc	fsr2h,f,c
  9529   00407E  6ADF               	clrf	indf2,c
  9530   004080                     
  9531                           ;dc_motor_v1.c: 171:     int max_power = 40;
  9532   004080  0E00               	movlw	0
  9533   004082  6E20               	movwf	(backward@max_power+1)^0,c
  9534   004084  0E28               	movlw	40
  9535   004086  6E1F               	movwf	backward@max_power^0,c
  9536   004088                     
  9537                           ;dc_motor_v1.c: 173:     int delay_time = acceleration_time/max_power;
  9538   004088  0E00               	movlw	0
  9539   00408A  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9540   00408C  0E64               	movlw	100
  9541   00408E  6E01               	movwf	___awdiv@dividend^0,c
  9542   004090  0E00               	movlw	0
  9543   004092  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9544   004094  0E28               	movlw	40
  9545   004096  6E03               	movwf	___awdiv@divisor^0,c
  9546   004098  EC61  F024         	call	___awdiv	;wreg free
  9547   00409C  C001  F021         	movff	?___awdiv,backward@delay_time
  9548   0040A0  C002  F022         	movff	?___awdiv+1,backward@delay_time+1
  9549   0040A4                     
  9550                           ;dc_motor_v1.c: 176:     for(int i=0; i< max_power; i++){
  9551   0040A4  0E00               	movlw	0
  9552   0040A6  6E1C               	movwf	(backward@i+1)^0,c
  9553   0040A8  0E00               	movlw	0
  9554   0040AA  6E1B               	movwf	backward@i^0,c
  9555   0040AC  EF81  F020         	goto	l4850
  9556   0040B0                     l4838:
  9557                           
  9558                           ;dc_motor_v1.c: 177:         mL->power = mL->power + 1;
  9559   0040B0  5014               	movf	backward@mL^0,w,c
  9560   0040B2  6ED9               	movwf	fsr2l,c
  9561   0040B4  6ADA               	clrf	fsr2h,c
  9562   0040B6  5014               	movf	backward@mL^0,w,c
  9563   0040B8  6EE1               	movwf	fsr1l,c
  9564   0040BA  6AE2               	clrf	fsr1h,c
  9565   0040BC  50E7               	movf	indf1,w,c
  9566   0040BE  6E17               	movwf	??_backward^0,c
  9567   0040C0  2817               	incf	??_backward^0,w,c
  9568   0040C2  6EDF               	movwf	indf2,c
  9569   0040C4                     
  9570                           ;dc_motor_v1.c: 178:         mR->power = mR->power + 1 ;
  9571   0040C4  C015  FFD9         	movff	backward@mR,fsr2l
  9572   0040C8  C016  FFDA         	movff	backward@mR+1,fsr2h
  9573   0040CC  50DF               	movf	indf2,w,c
  9574   0040CE  6E17               	movwf	??_backward^0,c
  9575   0040D0  2817               	incf	??_backward^0,w,c
  9576   0040D2  C015  FFD9         	movff	backward@mR,fsr2l
  9577   0040D6  C016  FFDA         	movff	backward@mR+1,fsr2h
  9578   0040DA  6EDF               	movwf	indf2,c
  9579   0040DC                     
  9580                           ;dc_motor_v1.c: 179:         setMotorPWM(mR);
  9581   0040DC  C015  F00E         	movff	backward@mR,setMotorPWM@m
  9582   0040E0  C016  F00F         	movff	backward@mR+1,setMotorPWM@m+1
  9583   0040E4  ECFC  F020         	call	_setMotorPWM	;wreg free
  9584   0040E8                     
  9585                           ;dc_motor_v1.c: 180:         setMotorPWM(mL);
  9586   0040E8  C014  F00E         	movff	backward@mL,setMotorPWM@m
  9587   0040EC  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  9588   0040EE  ECFC  F020         	call	_setMotorPWM	;wreg free
  9589   0040F2                     
  9590                           ;dc_motor_v1.c: 181:         delay_ms_function(delay_time);
  9591   0040F2  C021  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9592   0040F6  C022  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9593   0040FA  EC46  F027         	call	_delay_ms_function	;wreg free
  9594   0040FE                     
  9595                           ;dc_motor_v1.c: 182:     }
  9596   0040FE  4A1B               	infsnz	backward@i^0,f,c
  9597   004100  2A1C               	incf	(backward@i+1)^0,f,c
  9598   004102                     l4850:
  9599   004102  501F               	movf	backward@max_power^0,w,c
  9600   004104  5C1B               	subwf	backward@i^0,w,c
  9601   004106  501C               	movf	(backward@i+1)^0,w,c
  9602   004108  0A80               	xorlw	128
  9603   00410A  6E17               	movwf	??_backward^0,c
  9604   00410C  5020               	movf	(backward@max_power+1)^0,w,c
  9605   00410E  0A80               	xorlw	128
  9606   004110  5817               	subwfb	??_backward^0,w,c
  9607   004112  A0D8               	btfss	status,0,c
  9608   004114  EF8E  F020         	goto	u5421
  9609   004118  EF90  F020         	goto	u5420
  9610   00411C                     u5421:
  9611   00411C  EF58  F020         	goto	l4838
  9612   004120                     u5420:
  9613   004120                     
  9614                           ;dc_motor_v1.c: 185:     for(int j=0; j<Distance_Calibration; j++){
  9615   004120  0E00               	movlw	0
  9616   004122  6E1E               	movwf	(backward@j+1)^0,c
  9617   004124  0E00               	movlw	0
  9618   004126  6E1D               	movwf	backward@j^0,c
  9619   004128  EF9F  F020         	goto	l274
  9620   00412C                     l4854:
  9621                           
  9622                           ;dc_motor_v1.c: 186:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9623   00412C  0ED0               	movlw	208
  9624   00412E  6E17               	movwf	??_backward^0,c
  9625   004130  0ECA               	movlw	202
  9626   004132                     u5957:
  9627   004132  2EE8               	decfsz	wreg,f,c
  9628   004134  D7FE               	bra	u5957
  9629   004136  2E17               	decfsz	??_backward^0,f,c
  9630   004138  D7FC               	bra	u5957
  9631   00413A                     
  9632                           ;dc_motor_v1.c: 187:     }
  9633   00413A  4A1D               	infsnz	backward@j^0,f,c
  9634   00413C  2A1E               	incf	(backward@j+1)^0,f,c
  9635   00413E                     l274:
  9636   00413E  501A               	movf	backward@Distance_Calibration^0,w,c
  9637   004140  6E17               	movwf	??_backward^0,c
  9638   004142  6A18               	clrf	(??_backward+1)^0,c
  9639   004144  5017               	movf	??_backward^0,w,c
  9640   004146  5C1D               	subwf	backward@j^0,w,c
  9641   004148  501E               	movf	(backward@j+1)^0,w,c
  9642   00414A  0A80               	xorlw	128
  9643   00414C  6E19               	movwf	(??_backward+2)^0,c
  9644   00414E  5018               	movf	(??_backward+1)^0,w,c
  9645   004150  0A80               	xorlw	128
  9646   004152  5819               	subwfb	(??_backward+2)^0,w,c
  9647   004154  A0D8               	btfss	status,0,c
  9648   004156  EFAF  F020         	goto	u5431
  9649   00415A  EFB1  F020         	goto	u5430
  9650   00415E                     u5431:
  9651   00415E  EF96  F020         	goto	l4854
  9652   004162                     u5430:
  9653   004162  EFE4  F020         	goto	l4872
  9654   004166                     l4858:
  9655                           
  9656                           ;dc_motor_v1.c: 191:         if(mR->power> 0 ){
  9657   004166  C015  FFD9         	movff	backward@mR,fsr2l
  9658   00416A  C016  FFDA         	movff	backward@mR+1,fsr2h
  9659   00416E  50DF               	movf	indf2,w,c
  9660   004170  B4D8               	btfsc	status,2,c
  9661   004172  EFBD  F020         	goto	u5441
  9662   004176  EFBF  F020         	goto	u5440
  9663   00417A                     u5441:
  9664   00417A  EFC4  F020         	goto	l4862
  9665   00417E                     u5440:
  9666   00417E                     
  9667                           ;dc_motor_v1.c: 192:             mR->power--;
  9668   00417E  C015  FFD9         	movff	backward@mR,fsr2l
  9669   004182  C016  FFDA         	movff	backward@mR+1,fsr2h
  9670   004186  06DF               	decf	indf2,f,c
  9671   004188                     l4862:
  9672                           
  9673                           ;dc_motor_v1.c: 194:         if(mL->power> 0 ){
  9674   004188  5014               	movf	backward@mL^0,w,c
  9675   00418A  6ED9               	movwf	fsr2l,c
  9676   00418C  6ADA               	clrf	fsr2h,c
  9677   00418E  50DF               	movf	indf2,w,c
  9678   004190  B4D8               	btfsc	status,2,c
  9679   004192  EFCD  F020         	goto	u5451
  9680   004196  EFCF  F020         	goto	u5450
  9681   00419A                     u5451:
  9682   00419A  EFD3  F020         	goto	l4866
  9683   00419E                     u5450:
  9684   00419E                     
  9685                           ;dc_motor_v1.c: 195:             mL->power--;
  9686   00419E  5014               	movf	backward@mL^0,w,c
  9687   0041A0  6ED9               	movwf	fsr2l,c
  9688   0041A2  6ADA               	clrf	fsr2h,c
  9689   0041A4  06DF               	decf	indf2,f,c
  9690   0041A6                     l4866:
  9691                           
  9692                           ;dc_motor_v1.c: 197:         setMotorPWM(mR);
  9693   0041A6  C015  F00E         	movff	backward@mR,setMotorPWM@m
  9694   0041AA  C016  F00F         	movff	backward@mR+1,setMotorPWM@m+1
  9695   0041AE  ECFC  F020         	call	_setMotorPWM	;wreg free
  9696   0041B2                     
  9697                           ;dc_motor_v1.c: 198:         setMotorPWM(mL);
  9698   0041B2  C014  F00E         	movff	backward@mL,setMotorPWM@m
  9699   0041B6  6A0F               	clrf	(setMotorPWM@m+1)^0,c
  9700   0041B8  ECFC  F020         	call	_setMotorPWM	;wreg free
  9701   0041BC                     
  9702                           ;dc_motor_v1.c: 199:         delay_ms_function(delay_time);
  9703   0041BC  C021  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9704   0041C0  C022  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9705   0041C4  EC46  F027         	call	_delay_ms_function	;wreg free
  9706   0041C8                     l4872:
  9707                           
  9708                           ;dc_motor_v1.c: 190:     while(mL->power || mR->power > 0){
  9709   0041C8  5014               	movf	backward@mL^0,w,c
  9710   0041CA  6ED9               	movwf	fsr2l,c
  9711   0041CC  6ADA               	clrf	fsr2h,c
  9712   0041CE  50DF               	movf	indf2,w,c
  9713   0041D0  A4D8               	btfss	status,2,c
  9714   0041D2  EFED  F020         	goto	u5461
  9715   0041D6  EFEF  F020         	goto	u5460
  9716   0041DA                     u5461:
  9717   0041DA  EFB3  F020         	goto	l4858
  9718   0041DE                     u5460:
  9719   0041DE  C015  FFD9         	movff	backward@mR,fsr2l
  9720   0041E2  C016  FFDA         	movff	backward@mR+1,fsr2h
  9721   0041E6  50DF               	movf	indf2,w,c
  9722   0041E8  A4D8               	btfss	status,2,c
  9723   0041EA  EFF9  F020         	goto	u5471
  9724   0041EE  EFFB  F020         	goto	u5470
  9725   0041F2                     u5471:
  9726   0041F2  EFB3  F020         	goto	l4858
  9727   0041F6                     u5470:
  9728   0041F6  0012               	return		;funcret
  9729   0041F8                     __end_of_backward:
  9730                           	callstack 0
  9731                           
  9732 ;; *************** function _setMotorPWM *****************
  9733 ;; Defined at:
  9734 ;;		line 75 in file "dc_motor_v1.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9737 ;;		 -> motorR(9), motorL(9), 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  negDuty         1   18[COMRAM] unsigned char 
  9740 ;;  posDuty         1   17[COMRAM] unsigned char 
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9753 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;Total ram usage:        6 bytes
  9755 ;; Hardware stack levels used: 1
  9756 ;; Hardware stack levels required when called: 1
  9757 ;; This function calls:
  9758 ;;		___lwdiv
  9759 ;;		___wmul
  9760 ;; This function is called by:
  9761 ;;		_forward
  9762 ;;		_backward
  9763 ;;		_leftTURN
  9764 ;;		_rightTURN
  9765 ;;		_stop
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text35
  9770   0041F8                     __ptext35:
  9771                           	callstack 0
  9772   0041F8                     _setMotorPWM:
  9773                           	callstack 27
  9774   0041F8                     
  9775                           ;dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 76: {;dc_motor_v1.c: 77
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 79:     if(m->brakemode) {
  9776   0041F8  EE20 F002          	lfsr	2,2
  9777   0041FC  500E               	movf	setMotorPWM@m^0,w,c
  9778   0041FE  26D9               	addwf	fsr2l,f,c
  9779   004200  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9780   004202  22DA               	addwfc	fsr2h,f,c
  9781   004204  50DF               	movf	indf2,w,c
  9782   004206  B4D8               	btfsc	status,2,c
  9783   004208  EF08  F021         	goto	u5141
  9784   00420C  EF0A  F021         	goto	u5140
  9785   004210                     u5141:
  9786   004210  EF3E  F021         	goto	l4618
  9787   004214                     u5140:
  9788   004214                     
  9789                           ;dc_motor_v1.c: 80:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9790   004214  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9791   004218  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9792   00421C  50DF               	movf	indf2,w,c
  9793   00421E  6E10               	movwf	??_setMotorPWM^0,c
  9794   004220  5010               	movf	??_setMotorPWM^0,w,c
  9795   004222  6E01               	movwf	___wmul@multiplier^0,c
  9796   004224  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9797   004226  EE20 F003          	lfsr	2,3
  9798   00422A  500E               	movf	setMotorPWM@m^0,w,c
  9799   00422C  26D9               	addwf	fsr2l,f,c
  9800   00422E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9801   004230  22DA               	addwfc	fsr2h,f,c
  9802   004232  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9803   004236  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9804   00423A  EC86  F027         	call	___wmul	;wreg free
  9805   00423E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9806   004242  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9807   004246  0E00               	movlw	0
  9808   004248  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9809   00424A  0E64               	movlw	100
  9810   00424C  6E09               	movwf	___lwdiv@divisor^0,c
  9811   00424E  ECBB  F025         	call	___lwdiv	;wreg free
  9812   004252  EE20 F003          	lfsr	2,3
  9813   004256  500E               	movf	setMotorPWM@m^0,w,c
  9814   004258  26D9               	addwf	fsr2l,f,c
  9815   00425A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9816   00425C  22DA               	addwfc	fsr2h,f,c
  9817   00425E  50DF               	movf	indf2,w,c
  9818   004260  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9819   004262  5007               	movf	?___lwdiv^0,w,c
  9820   004264  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9821   004266  6E12               	movwf	setMotorPWM@posDuty^0,c
  9822   004268                     
  9823                           ;dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  9824   004268  EE20 F003          	lfsr	2,3
  9825   00426C  500E               	movf	setMotorPWM@m^0,w,c
  9826   00426E  26D9               	addwf	fsr2l,f,c
  9827   004270  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9828   004272  22DA               	addwfc	fsr2h,f,c
  9829   004274  50DF               	movf	indf2,w,c
  9830   004276  6E13               	movwf	setMotorPWM@negDuty^0,c
  9831                           
  9832                           ;dc_motor_v1.c: 82:     }
  9833   004278  EF61  F021         	goto	l4622
  9834   00427C                     l4618:
  9835                           
  9836                           ;dc_motor_v1.c: 84:         posDuty=0;
  9837   00427C  0E00               	movlw	0
  9838   00427E  6E12               	movwf	setMotorPWM@posDuty^0,c
  9839   004280                     
  9840                           ;dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9841   004280  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9842   004284  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9843   004288  50DF               	movf	indf2,w,c
  9844   00428A  6E10               	movwf	??_setMotorPWM^0,c
  9845   00428C  5010               	movf	??_setMotorPWM^0,w,c
  9846   00428E  6E01               	movwf	___wmul@multiplier^0,c
  9847   004290  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9848   004292  EE20 F003          	lfsr	2,3
  9849   004296  500E               	movf	setMotorPWM@m^0,w,c
  9850   004298  26D9               	addwf	fsr2l,f,c
  9851   00429A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9852   00429C  22DA               	addwfc	fsr2h,f,c
  9853   00429E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9854   0042A2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9855   0042A6  EC86  F027         	call	___wmul	;wreg free
  9856   0042AA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9857   0042AE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9858   0042B2  0E00               	movlw	0
  9859   0042B4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9860   0042B6  0E64               	movlw	100
  9861   0042B8  6E09               	movwf	___lwdiv@divisor^0,c
  9862   0042BA  ECBB  F025         	call	___lwdiv	;wreg free
  9863   0042BE  5007               	movf	?___lwdiv^0,w,c
  9864   0042C0  6E13               	movwf	setMotorPWM@negDuty^0,c
  9865   0042C2                     l4622:
  9866                           
  9867                           ;dc_motor_v1.c: 88:     if (m->direction) {
  9868   0042C2  EE20 F001          	lfsr	2,1
  9869   0042C6  500E               	movf	setMotorPWM@m^0,w,c
  9870   0042C8  26D9               	addwf	fsr2l,f,c
  9871   0042CA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9872   0042CC  22DA               	addwfc	fsr2h,f,c
  9873   0042CE  50DF               	movf	indf2,w,c
  9874   0042D0  B4D8               	btfsc	status,2,c
  9875   0042D2  EF6D  F021         	goto	u5151
  9876   0042D6  EF6F  F021         	goto	u5150
  9877   0042DA                     u5151:
  9878   0042DA  EF91  F021         	goto	l4626
  9879   0042DE                     u5150:
  9880   0042DE                     
  9881                           ;dc_motor_v1.c: 89:         *(m->posDutyHighByte)=posDuty;
  9882   0042DE  EE20 F005          	lfsr	2,5
  9883   0042E2  500E               	movf	setMotorPWM@m^0,w,c
  9884   0042E4  26D9               	addwf	fsr2l,f,c
  9885   0042E6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9886   0042E8  22DA               	addwfc	fsr2h,f,c
  9887   0042EA  CFDE F010          	movff	postinc2,??_setMotorPWM
  9888   0042EE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9889   0042F2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9890   0042F6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9891   0042FA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9892                           
  9893                           ;dc_motor_v1.c: 90:         *(m->negDutyHighByte)=negDuty;
  9894   0042FE  EE20 F007          	lfsr	2,7
  9895   004302  500E               	movf	setMotorPWM@m^0,w,c
  9896   004304  26D9               	addwf	fsr2l,f,c
  9897   004306  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9898   004308  22DA               	addwfc	fsr2h,f,c
  9899   00430A  CFDE F010          	movff	postinc2,??_setMotorPWM
  9900   00430E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9901   004312  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9902   004316  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9903   00431A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9904                           
  9905                           ;dc_motor_v1.c: 91:     } else {
  9906   00431E  EFB1  F021         	goto	l246
  9907   004322                     l4626:
  9908                           
  9909                           ;dc_motor_v1.c: 92:         *(m->posDutyHighByte)=negDuty;
  9910   004322  EE20 F005          	lfsr	2,5
  9911   004326  500E               	movf	setMotorPWM@m^0,w,c
  9912   004328  26D9               	addwf	fsr2l,f,c
  9913   00432A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9914   00432C  22DA               	addwfc	fsr2h,f,c
  9915   00432E  CFDE F010          	movff	postinc2,??_setMotorPWM
  9916   004332  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9917   004336  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9918   00433A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9919   00433E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9920                           
  9921                           ;dc_motor_v1.c: 93:         *(m->negDutyHighByte)=posDuty;
  9922   004342  EE20 F007          	lfsr	2,7
  9923   004346  500E               	movf	setMotorPWM@m^0,w,c
  9924   004348  26D9               	addwf	fsr2l,f,c
  9925   00434A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9926   00434C  22DA               	addwfc	fsr2h,f,c
  9927   00434E  CFDE F010          	movff	postinc2,??_setMotorPWM
  9928   004352  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9929   004356  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9930   00435A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9931   00435E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9932   004362                     l246:
  9933   004362  0012               	return		;funcret
  9934   004364                     __end_of_setMotorPWM:
  9935                           	callstack 0
  9936                           
  9937 ;; *************** function ___wmul *****************
  9938 ;; Defined at:
  9939 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  multiplier      2    0[COMRAM] unsigned int 
  9942 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;  product         2    4[COMRAM] unsigned int 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  2    0[COMRAM] unsigned int 
  9947 ;; Registers used:
  9948 ;;		wreg, status,2, status,0, prodl, prodh
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9958 ;;Total ram usage:        6 bytes
  9959 ;; Hardware stack levels used: 1
  9960 ;; This function calls:
  9961 ;;		Nothing
  9962 ;; This function is called by:
  9963 ;;		_setMotorPWM
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text36
  9968   004F0C                     __ptext36:
  9969                           	callstack 0
  9970   004F0C                     ___wmul:
  9971                           	callstack 27
  9972   004F0C  5001               	movf	___wmul@multiplier^0,w,c
  9973   004F0E  0203               	mulwf	___wmul@multiplicand^0,c
  9974   004F10  CFF3 F005          	movff	prodl,___wmul@product
  9975   004F14  CFF4 F006          	movff	prodh,___wmul@product+1
  9976   004F18  5001               	movf	___wmul@multiplier^0,w,c
  9977   004F1A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9978   004F1C  50F3               	movf	243,w,c
  9979   004F1E  2606               	addwf	(___wmul@product+1)^0,f,c
  9980   004F20  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9981   004F22  0203               	mulwf	___wmul@multiplicand^0,c
  9982   004F24  50F3               	movf	243,w,c
  9983   004F26  2606               	addwf	(___wmul@product+1)^0,f,c
  9984   004F28  C005  F001         	movff	___wmul@product,?___wmul
  9985   004F2C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9986   004F30  0012               	return		;funcret
  9987   004F32                     __end_of___wmul:
  9988                           	callstack 0
  9989                           
  9990 ;; *************** function ___lwdiv *****************
  9991 ;; Defined at:
  9992 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  dividend        2    6[COMRAM] unsigned int 
  9995 ;;  divisor         2    8[COMRAM] unsigned int 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  quotient        2   10[COMRAM] unsigned int 
  9998 ;;  counter         1   12[COMRAM] unsigned char 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  2    6[COMRAM] unsigned int 
 10001 ;; Registers used:
 10002 ;;		wreg, status,2, status,0
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10009 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10011 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10012 ;;Total ram usage:        7 bytes
 10013 ;; Hardware stack levels used: 1
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		_setMotorPWM
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text37
 10022   004B76                     __ptext37:
 10023                           	callstack 0
 10024   004B76                     ___lwdiv:
 10025                           	callstack 27
 10026   004B76  0E00               	movlw	0
 10027   004B78  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10028   004B7A  0E00               	movlw	0
 10029   004B7C  6E0B               	movwf	___lwdiv@quotient^0,c
 10030   004B7E  5009               	movf	___lwdiv@divisor^0,w,c
 10031   004B80  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10032   004B82  B4D8               	btfsc	status,2,c
 10033   004B84  EFC6  F025         	goto	u3701
 10034   004B88  EFC8  F025         	goto	u3700
 10035   004B8C                     u3701:
 10036   004B8C  EFF0  F025         	goto	l1098
 10037   004B90                     u3700:
 10038   004B90  0E01               	movlw	1
 10039   004B92  6E0D               	movwf	___lwdiv@counter^0,c
 10040   004B94  EFD0  F025         	goto	l3624
 10041   004B98                     l3622:
 10042   004B98  90D8               	bcf	status,0,c
 10043   004B9A  3609               	rlcf	___lwdiv@divisor^0,f,c
 10044   004B9C  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10045   004B9E  2A0D               	incf	___lwdiv@counter^0,f,c
 10046   004BA0                     l3624:
 10047   004BA0  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10048   004BA2  EFD5  F025         	goto	u3711
 10049   004BA6  EFD7  F025         	goto	u3710
 10050   004BAA                     u3711:
 10051   004BAA  EFCC  F025         	goto	l3622
 10052   004BAE                     u3710:
 10053   004BAE                     l3626:
 10054   004BAE  90D8               	bcf	status,0,c
 10055   004BB0  360B               	rlcf	___lwdiv@quotient^0,f,c
 10056   004BB2  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10057   004BB4  5009               	movf	___lwdiv@divisor^0,w,c
 10058   004BB6  5C07               	subwf	___lwdiv@dividend^0,w,c
 10059   004BB8  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10060   004BBA  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10061   004BBC  A0D8               	btfss	status,0,c
 10062   004BBE  EFE3  F025         	goto	u3721
 10063   004BC2  EFE5  F025         	goto	u3720
 10064   004BC6                     u3721:
 10065   004BC6  EFEA  F025         	goto	l3634
 10066   004BCA                     u3720:
 10067   004BCA  5009               	movf	___lwdiv@divisor^0,w,c
 10068   004BCC  5E07               	subwf	___lwdiv@dividend^0,f,c
 10069   004BCE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10070   004BD0  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10071   004BD2  800B               	bsf	___lwdiv@quotient^0,0,c
 10072   004BD4                     l3634:
 10073   004BD4  90D8               	bcf	status,0,c
 10074   004BD6  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10075   004BD8  3209               	rrcf	___lwdiv@divisor^0,f,c
 10076   004BDA  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10077   004BDC  EFD7  F025         	goto	l3626
 10078   004BE0                     l1098:
 10079   004BE0  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10080   004BE4  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10081   004BE8  0012               	return		;funcret
 10082   004BEA                     __end_of___lwdiv:
 10083                           	callstack 0
 10084                           
 10085 ;; *************** function _delay_ms_function *****************
 10086 ;; Defined at:
 10087 ;;		line 67 in file "dc_motor_v1.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  milliseconds    2    0[COMRAM] unsigned int 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;		None
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg, status,2, status,0
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;Total ram usage:        3 bytes
 10106 ;; Hardware stack levels used: 1
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_forward
 10111 ;;		_backward
 10112 ;;		_leftTURN
 10113 ;;		_rightTURN
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text38
 10118   004E8C                     __ptext38:
 10119                           	callstack 0
 10120   004E8C                     _delay_ms_function:
 10121                           	callstack 28
 10122   004E8C                     
 10123                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
 10124   004E8C  EF53  F027         	goto	l236
 10125   004E90                     l3738:
 10126                           
 10127                           ;dc_motor_v1.c: 69:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10128   004E90  0E15               	movlw	21
 10129   004E92  6E03               	movwf	??_delay_ms_function^0,c
 10130   004E94  0EC6               	movlw	198
 10131   004E96                     u5967:
 10132   004E96  2EE8               	decfsz	wreg,f,c
 10133   004E98  D7FE               	bra	u5967
 10134   004E9A  2E03               	decfsz	??_delay_ms_function^0,f,c
 10135   004E9C  D7FC               	bra	u5967
 10136   004E9E  D000               	nop2	
 10137   004EA0                     
 10138                           ;dc_motor_v1.c: 70:         milliseconds--;
 10139   004EA0  0601               	decf	delay_ms_function@milliseconds^0,f,c
 10140   004EA2  A0D8               	btfss	status,0,c
 10141   004EA4  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
 10142   004EA6                     l236:
 10143                           
 10144                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
 10145   004EA6  5001               	movf	delay_ms_function@milliseconds^0,w,c
 10146   004EA8  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
 10147   004EAA  A4D8               	btfss	status,2,c
 10148   004EAC  EF5A  F027         	goto	u3851
 10149   004EB0  EF5C  F027         	goto	u3850
 10150   004EB4                     u3851:
 10151   004EB4  EF48  F027         	goto	l3738
 10152   004EB8                     u3850:
 10153   004EB8  0012               	return		;funcret
 10154   004EBA                     __end_of_delay_ms_function:
 10155                           	callstack 0
 10156                           
 10157 ;; *************** function ___awdiv *****************
 10158 ;; Defined at:
 10159 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  dividend        2    0[COMRAM] int 
 10162 ;;  divisor         2    2[COMRAM] int 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  quotient        2    6[COMRAM] int 
 10165 ;;  sign            1    5[COMRAM] unsigned char 
 10166 ;;  counter         1    4[COMRAM] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  2    0[COMRAM] int 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10179 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10180 ;;Total ram usage:        8 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_forward
 10186 ;;		_backward
 10187 ;;		_leftTURN
 10188 ;;		_rightTURN
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text39
 10193   0048C2                     __ptext39:
 10194                           	callstack 0
 10195   0048C2                     ___awdiv:
 10196                           	callstack 28
 10197   0048C2  0E00               	movlw	0
 10198   0048C4  6E06               	movwf	___awdiv@sign^0,c
 10199   0048C6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10200   0048C8  EF6A  F024         	goto	u3880
 10201   0048CC  EF68  F024         	goto	u3881
 10202   0048D0                     u3881:
 10203   0048D0  EF70  F024         	goto	l3766
 10204   0048D4                     u3880:
 10205   0048D4  6C03               	negf	___awdiv@divisor^0,c
 10206   0048D6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10207   0048D8  B0D8               	btfsc	status,0,c
 10208   0048DA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10209   0048DC  0E01               	movlw	1
 10210   0048DE  6E06               	movwf	___awdiv@sign^0,c
 10211   0048E0                     l3766:
 10212   0048E0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10213   0048E2  EF77  F024         	goto	u3890
 10214   0048E6  EF75  F024         	goto	u3891
 10215   0048EA                     u3891:
 10216   0048EA  EF7D  F024         	goto	l3772
 10217   0048EE                     u3890:
 10218   0048EE  6C01               	negf	___awdiv@dividend^0,c
 10219   0048F0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10220   0048F2  B0D8               	btfsc	status,0,c
 10221   0048F4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10222   0048F6  0E01               	movlw	1
 10223   0048F8  1A06               	xorwf	___awdiv@sign^0,f,c
 10224   0048FA                     l3772:
 10225   0048FA  0E00               	movlw	0
 10226   0048FC  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10227   0048FE  0E00               	movlw	0
 10228   004900  6E07               	movwf	___awdiv@quotient^0,c
 10229   004902  5003               	movf	___awdiv@divisor^0,w,c
 10230   004904  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10231   004906  B4D8               	btfsc	status,2,c
 10232   004908  EF88  F024         	goto	u3901
 10233   00490C  EF8A  F024         	goto	u3900
 10234   004910                     u3901:
 10235   004910  EFB2  F024         	goto	l3794
 10236   004914                     u3900:
 10237   004914  0E01               	movlw	1
 10238   004916  6E05               	movwf	___awdiv@counter^0,c
 10239   004918  EF92  F024         	goto	l3780
 10240   00491C                     l3778:
 10241   00491C  90D8               	bcf	status,0,c
 10242   00491E  3603               	rlcf	___awdiv@divisor^0,f,c
 10243   004920  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10244   004922  2A05               	incf	___awdiv@counter^0,f,c
 10245   004924                     l3780:
 10246   004924  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10247   004926  EF97  F024         	goto	u3911
 10248   00492A  EF99  F024         	goto	u3910
 10249   00492E                     u3911:
 10250   00492E  EF8E  F024         	goto	l3778
 10251   004932                     u3910:
 10252   004932                     l3782:
 10253   004932  90D8               	bcf	status,0,c
 10254   004934  3607               	rlcf	___awdiv@quotient^0,f,c
 10255   004936  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10256   004938  5003               	movf	___awdiv@divisor^0,w,c
 10257   00493A  5C01               	subwf	___awdiv@dividend^0,w,c
 10258   00493C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10259   00493E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10260   004940  A0D8               	btfss	status,0,c
 10261   004942  EFA5  F024         	goto	u3921
 10262   004946  EFA7  F024         	goto	u3920
 10263   00494A                     u3921:
 10264   00494A  EFAC  F024         	goto	l3790
 10265   00494E                     u3920:
 10266   00494E  5003               	movf	___awdiv@divisor^0,w,c
 10267   004950  5E01               	subwf	___awdiv@dividend^0,f,c
 10268   004952  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10269   004954  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10270   004956  8007               	bsf	___awdiv@quotient^0,0,c
 10271   004958                     l3790:
 10272   004958  90D8               	bcf	status,0,c
 10273   00495A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10274   00495C  3203               	rrcf	___awdiv@divisor^0,f,c
 10275   00495E  2E05               	decfsz	___awdiv@counter^0,f,c
 10276   004960  EF99  F024         	goto	l3782
 10277   004964                     l3794:
 10278   004964  5006               	movf	___awdiv@sign^0,w,c
 10279   004966  B4D8               	btfsc	status,2,c
 10280   004968  EFB8  F024         	goto	u3931
 10281   00496C  EFBA  F024         	goto	u3930
 10282   004970                     u3931:
 10283   004970  EFBE  F024         	goto	l3798
 10284   004974                     u3930:
 10285   004974  6C07               	negf	___awdiv@quotient^0,c
 10286   004976  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10287   004978  B0D8               	btfsc	status,0,c
 10288   00497A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10289   00497C                     l3798:
 10290   00497C  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10291   004980  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10292   004984  0012               	return		;funcret
 10293   004986                     __end_of___awdiv:
 10294                           	callstack 0
 10295                           
 10296 ;; *************** function _adjust_calibration *****************
 10297 ;; Defined at:
 10298 ;;		line 22 in file "calibration.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  calibration_    2    0[COMRAM] PTR int 
 10301 ;;		 -> calibration(9), 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10317 ;;Total ram usage:        6 bytes
 10318 ;; Hardware stack levels used: 1
 10319 ;; This function calls:
 10320 ;;		Nothing
 10321 ;; This function is called by:
 10322 ;;		_calibration_routine
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text40
 10327   004364                     __ptext40:
 10328                           	callstack 0
 10329   004364                     _adjust_calibration:
 10330                           	callstack 29
 10331   004364                     l139:
 10332                           
 10333                           ;calibration.c: 27:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10334   004364  A68E               	btfss	142,3,c	;volatile
 10335   004366  EFB7  F021         	goto	u5161
 10336   00436A  EFB9  F021         	goto	u5160
 10337   00436E                     u5161:
 10338   00436E  EFC0  F021         	goto	l4630
 10339   004372                     u5160:
 10340   004372  B48E               	btfsc	142,2,c	;volatile
 10341   004374  EFBE  F021         	goto	u5171
 10342   004378  EFC0  F021         	goto	u5170
 10343   00437C                     u5171:
 10344   00437C  EFB2  F021         	goto	l139
 10345   004380                     u5170:
 10346   004380                     l4630:
 10347                           
 10348                           ;calibration.c: 28:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10349   004380  0E09               	movlw	9
 10350   004382  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10351   004384  0E1E               	movlw	30
 10352   004386  6E03               	movwf	??_adjust_calibration^0,c
 10353   004388  0EE4               	movlw	228
 10354   00438A                     u5977:
 10355   00438A  2EE8               	decfsz	wreg,f,c
 10356   00438C  D7FE               	bra	u5977
 10357   00438E  2E03               	decfsz	??_adjust_calibration^0,f,c
 10358   004390  D7FC               	bra	u5977
 10359   004392  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10360   004394  D7FA               	bra	u5977
 10361   004396  D000               	nop2	
 10362   004398                     
 10363                           ;calibration.c: 30:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10364   004398  B68E               	btfsc	142,3,c	;volatile
 10365   00439A  EFD1  F021         	goto	u5181
 10366   00439E  EFD3  F021         	goto	u5180
 10367   0043A2                     u5181:
 10368   0043A2  EFEC  F021         	goto	l143
 10369   0043A6                     u5180:
 10370   0043A6  B48E               	btfsc	142,2,c	;volatile
 10371   0043A8  EFD8  F021         	goto	u5191
 10372   0043AC  EFDA  F021         	goto	u5190
 10373   0043B0                     u5191:
 10374   0043B0  EFEC  F021         	goto	l143
 10375   0043B4                     u5190:
 10376   0043B4                     
 10377                           ;calibration.c: 32:                 LATHbits.LATH3 = 1;
 10378   0043B4  8680               	bsf	128,3,c	;volatile
 10379                           
 10380                           ;calibration.c: 33:                 LATDbits.LATD7 = 1;
 10381   0043B6  8E7C               	bsf	124,7,c	;volatile
 10382   0043B8                     
 10383                           ;calibration.c: 34:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10384   0043B8  0E52               	movlw	82
 10385   0043BA  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10386   0043BC  0E2B               	movlw	43
 10387   0043BE  6E03               	movwf	??_adjust_calibration^0,c
 10388   0043C0  0E00               	movlw	0
 10389   0043C2                     u5987:
 10390   0043C2  2EE8               	decfsz	wreg,f,c
 10391   0043C4  D7FE               	bra	u5987
 10392   0043C6  2E03               	decfsz	??_adjust_calibration^0,f,c
 10393   0043C8  D7FC               	bra	u5987
 10394   0043CA  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10395   0043CC  D7FA               	bra	u5987
 10396   0043CE  D000               	nop2	
 10397   0043D0                     
 10398                           ;calibration.c: 35:                 LATHbits.LATH3 = 0;
 10399   0043D0  9680               	bcf	128,3,c	;volatile
 10400   0043D2                     
 10401                           ;calibration.c: 36:                 LATDbits.LATD7 = 0;
 10402   0043D2  9E7C               	bcf	124,7,c	;volatile
 10403                           
 10404                           ;calibration.c: 37:                 break;
 10405   0043D4  EF5C  F022         	goto	l149
 10406   0043D8                     l143:
 10407                           
 10408                           ;calibration.c: 40:                 if(!PORTFbits.RF2){
 10409   0043D8  B48E               	btfsc	142,2,c	;volatile
 10410   0043DA  EFF1  F021         	goto	u5201
 10411   0043DE  EFF3  F021         	goto	u5200
 10412   0043E2                     u5201:
 10413   0043E2  EF21  F022         	goto	l4656
 10414   0043E6                     u5200:
 10415   0043E6                     
 10416                           ;calibration.c: 41:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10417   0043E6  0E11               	movlw	17
 10418   0043E8  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10419   0043EA  0E3C               	movlw	60
 10420   0043EC  6E03               	movwf	??_adjust_calibration^0,c
 10421   0043EE  0ECB               	movlw	203
 10422   0043F0                     u5997:
 10423   0043F0  2EE8               	decfsz	wreg,f,c
 10424   0043F2  D7FE               	bra	u5997
 10425   0043F4  2E03               	decfsz	??_adjust_calibration^0,f,c
 10426   0043F6  D7FC               	bra	u5997
 10427   0043F8  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10428   0043FA  D7FA               	bra	u5997
 10429   0043FC  0000               	nop	
 10430   0043FE                     
 10431                           ;calibration.c: 42:                     *calibration_label = *calibration_label + 2;
 10432   0043FE  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10433   004402  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10434   004406  CFDE F003          	movff	postinc2,??_adjust_calibration
 10435   00440A  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10436   00440E  0E02               	movlw	2
 10437   004410  2603               	addwf	??_adjust_calibration^0,f,c
 10438   004412  0E00               	movlw	0
 10439   004414  2204               	addwfc	(??_adjust_calibration+1)^0,f,c
 10440   004416  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10441   00441A  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10442   00441E  C003  FFDE         	movff	??_adjust_calibration,postinc2
 10443   004422  C004  FFDD         	movff	??_adjust_calibration+1,postdec2
 10444   004426                     
 10445                           ;calibration.c: 43:                     LATDbits.LATD7 = 1;
 10446   004426  8E7C               	bsf	124,7,c	;volatile
 10447   004428                     
 10448                           ;calibration.c: 44:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10449   004428  0E11               	movlw	17
 10450   00442A  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10451   00442C  0E3C               	movlw	60
 10452   00442E  6E03               	movwf	??_adjust_calibration^0,c
 10453   004430  0ECB               	movlw	203
 10454   004432                     u6007:
 10455   004432  2EE8               	decfsz	wreg,f,c
 10456   004434  D7FE               	bra	u6007
 10457   004436  2E03               	decfsz	??_adjust_calibration^0,f,c
 10458   004438  D7FC               	bra	u6007
 10459   00443A  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10460   00443C  D7FA               	bra	u6007
 10461   00443E  0000               	nop	
 10462   004440                     
 10463                           ;calibration.c: 45:                     LATDbits.LATD7 = 0;
 10464   004440  9E7C               	bcf	124,7,c	;volatile
 10465   004442                     l4656:
 10466                           
 10467                           ;calibration.c: 48:                 if(!PORTFbits.RF3){
 10468   004442  B68E               	btfsc	142,3,c	;volatile
 10469   004444  EF26  F022         	goto	u5211
 10470   004448  EF28  F022         	goto	u5210
 10471   00444C                     u5211:
 10472   00444C  EF5A  F022         	goto	l140
 10473   004450                     u5210:
 10474   004450                     
 10475                           ;calibration.c: 49:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10476   004450  0E11               	movlw	17
 10477   004452  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10478   004454  0E3C               	movlw	60
 10479   004456  6E03               	movwf	??_adjust_calibration^0,c
 10480   004458  0ECB               	movlw	203
 10481   00445A                     u6017:
 10482   00445A  2EE8               	decfsz	wreg,f,c
 10483   00445C  D7FE               	bra	u6017
 10484   00445E  2E03               	decfsz	??_adjust_calibration^0,f,c
 10485   004460  D7FC               	bra	u6017
 10486   004462  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10487   004464  D7FA               	bra	u6017
 10488   004466  0000               	nop	
 10489   004468                     
 10490                           ;calibration.c: 50:                     *calibration_label = *calibration_label -2;
 10491   004468  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10492   00446C  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10493   004470  CFDE F003          	movff	postinc2,??_adjust_calibration
 10494   004474  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10495   004478  0EFE               	movlw	254
 10496   00447A  2403               	addwf	??_adjust_calibration^0,w,c
 10497   00447C  6E05               	movwf	(??_adjust_calibration+2)^0,c
 10498   00447E  0EFF               	movlw	255
 10499   004480  2004               	addwfc	(??_adjust_calibration+1)^0,w,c
 10500   004482  6E06               	movwf	(??_adjust_calibration+3)^0,c
 10501   004484  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10502   004488  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10503   00448C  C005  FFDE         	movff	??_adjust_calibration+2,postinc2
 10504   004490  C006  FFDD         	movff	??_adjust_calibration+3,postdec2
 10505   004494                     
 10506                           ;calibration.c: 51:                     LATHbits.LATH3 = 1;
 10507   004494  8680               	bsf	128,3,c	;volatile
 10508   004496                     
 10509                           ;calibration.c: 52:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10510   004496  0E11               	movlw	17
 10511   004498  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10512   00449A  0E3C               	movlw	60
 10513   00449C  6E03               	movwf	??_adjust_calibration^0,c
 10514   00449E  0ECB               	movlw	203
 10515   0044A0                     u6027:
 10516   0044A0  2EE8               	decfsz	wreg,f,c
 10517   0044A2  D7FE               	bra	u6027
 10518   0044A4  2E03               	decfsz	??_adjust_calibration^0,f,c
 10519   0044A6  D7FC               	bra	u6027
 10520   0044A8  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10521   0044AA  D7FA               	bra	u6027
 10522   0044AC  0000               	nop	
 10523   0044AE                     
 10524                           ;calibration.c: 53:                     LATHbits.LATH3 = 0;
 10525   0044AE  9680               	bcf	128,3,c	;volatile
 10526   0044B0  EFB2  F021         	goto	l139
 10527   0044B4                     l140:
 10528   0044B4  EFB2  F021         	goto	l139
 10529   0044B8                     l149:
 10530   0044B8  0012               	return		;funcret
 10531   0044BA                     __end_of_adjust_calibration:
 10532                           	callstack 0
 10533                           
 10534                           	psect	smallconst
 10535   000E00                     __psmallconst:
 10536                           	callstack 0
 10537   000E00  00                 	db	0
 10538   000E01  00                 	db	0	; dummy byte at the end
 10539   000000                     
 10540                           	psect	rparam
 10541   000000                     
 10542                           	psect	config
 10543                           
 10544                           ;Config register CONFIG1L @ 0x300000
 10545                           ;	External Oscillator mode Selection bits
 10546                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10547                           ;	Power-up default value for COSC bits
 10548                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10549   300000                     	org	3145728
 10550   300000  AA                 	db	170
 10551                           
 10552                           ;Config register CONFIG1H @ 0x300001
 10553                           ;	unspecified, using default values
 10554                           ;	Clock Out Enable bit
 10555                           ;	CLKOUTEN = 0x1, unprogrammed default
 10556                           ;	Clock Switch Enable bit
 10557                           ;	CSWEN = 0x1, unprogrammed default
 10558                           ;	Fail-Safe Clock Monitor Enable bit
 10559                           ;	FCMEN = 0x1, unprogrammed default
 10560   300001                     	org	3145729
 10561   300001  FF                 	db	255
 10562                           
 10563                           ;Config register CONFIG3L @ 0x300004
 10564                           ;	WDT Period Select bits
 10565                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10566                           ;	WDT operating mode
 10567                           ;	WDTE = OFF, WDT Disabled
 10568   300004                     	org	3145732
 10569   300004  9F                 	db	159
 10570                           
 10571                           ;Config register CONFIG3H @ 0x300005
 10572                           ;	unspecified, using default values
 10573                           ;	WDT Window Select bits
 10574                           ;	WDTCWS = 0x7, unprogrammed default
 10575                           ;	WDT input clock selector
 10576                           ;	WDTCCS = 0x7, unprogrammed default
 10577   300005                     	org	3145733
 10578   300005  FF                 	db	255
 10579                           tosu	equ	0xFFF
 10580                           tosh	equ	0xFFE
 10581                           tosl	equ	0xFFD
 10582                           stkptr	equ	0xFFC
 10583                           pclatu	equ	0xFFB
 10584                           pclath	equ	0xFFA
 10585                           pcl	equ	0xFF9
 10586                           tblptru	equ	0xFF8
 10587                           tblptrh	equ	0xFF7
 10588                           tblptrl	equ	0xFF6
 10589                           tablat	equ	0xFF5
 10590                           prodh	equ	0xFF4
 10591                           prodl	equ	0xFF3
 10592                           indf0	equ	0xFEF
 10593                           postinc0	equ	0xFEE
 10594                           postdec0	equ	0xFED
 10595                           preinc0	equ	0xFEC
 10596                           plusw0	equ	0xFEB
 10597                           fsr0h	equ	0xFEA
 10598                           fsr0l	equ	0xFE9
 10599                           wreg	equ	0xFE8
 10600                           indf1	equ	0xFE7
 10601                           postinc1	equ	0xFE6
 10602                           postdec1	equ	0xFE5
 10603                           preinc1	equ	0xFE4
 10604                           plusw1	equ	0xFE3
 10605                           fsr1h	equ	0xFE2
 10606                           fsr1l	equ	0xFE1
 10607                           bsr	equ	0xFE0
 10608                           indf2	equ	0xFDF
 10609                           postinc2	equ	0xFDE
 10610                           postdec2	equ	0xFDD
 10611                           preinc2	equ	0xFDC
 10612                           plusw2	equ	0xFDB
 10613                           fsr2h	equ	0xFDA
 10614                           fsr2l	equ	0xFD9
 10615                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    134     154
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    backward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    calibration_routine@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    calibration_routine@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    calibration_routine@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    maze_return@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    maze_return@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_return@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    maze_search@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK1[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    switch_calibration@calibration_index	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 


Critical Paths under _main in COMRAM

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _maze_return->_backward
    _maze_return->_forward
    _maze_return->_leftTURN
    _maze_return->_rightTURN
    _calibration_routine->_backward
    _calibration_routine->_forward
    _calibration_routine->_leftTURN
    _calibration_routine->_rightTURN
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  153320
                _calibration_routine
                    _initDCmotorsPWM
                        _maze_return
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          9     4      5   80823
                                             93 COMRAM     2     2      0
                                            127 BANK0      7     2      5
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   44885
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          87    68     19   34610
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   11664
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2767
                                             33 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _maze_return                                         15    10      5   36217
                                             34 COMRAM    15    10      5
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                  6     1      5   36086
                                             34 COMRAM     6     1      5
                 _adjust_calibration
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
                 _switch_calibration
 ---------------------------------------------------------------------------------
 (2) _switch_calibration                                   4     2      2     782
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                           17    14      3    8745
                                             19 COMRAM    15    12      3
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                            17    14      3    6585
                                             19 COMRAM    15    12      3
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                             17    14      3    7845
                                             19 COMRAM    15    12      3
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _backward                                            17    14      3    9465
                                             19 COMRAM    15    12      3
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2841
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     631
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _adjust_calibration                                   6     4      2     844
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration_routine
     _adjust_calibration
     _backward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _forward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _switch_calibration
   _initDCmotorsPWM
   _maze_return
     _backward
     _forward
     _leftTURN
     _rightTURN
   _maze_search
     _backward
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _leftTURN
     _rightTURN
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      9A       5       96.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18D      58        0.0%
DATA                 0      0     18D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 23:42:43 2024

                     _color_read_Red 4C48                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4D38                                   l31 4E4E  
                                 l40 4CE6                                   l50 45D0  
                                 l34 4F50                                   l43 4D86  
                                 l60 19C6                                   l37 4C96  
                                 l70 1AB8                                   l62 1A20  
                                 l46 4D36                                   l80 1E80  
                                 l72 1AC8                                   l64 1A30  
                                 l74 1B22                                   l58 19B6  
                                 l76 1B32                                   l87 1FFA  
                                 l99 1830                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                     _color_read_Clear 4CE8  
                   _color_read_Green 4C98                                  l105 1838  
                                l140 44B4                                  l132 4BEA  
                                l310 3ECC                                  l302 3E14  
                                l143 43D8                                  l152 4986  
                                l160 3726                                  l136 4C46  
                                l153 49F4                                  l233 4B74  
                                l410 4EE4                                  l139 4364  
                                l236 4EA6                                  l260 3C7E  
                                l172 39EA                                  l149 44B8  
                                l157 4A36                                  l413 4F0A  
                                l246 4362                                  l422 4F66  
                                l239 4EB8                                  l407 4EE2  
                                l416 4F70                                  l425 4F5C  
                                l282 41F6                                  l274 413E  
                                l419 4F7A                                  l268 3D36  
                                l604 2AA0                                  l428 4E0E  
                                l607 4F30                                  l296 4062  
                                l288 3FAA                                  l904 46D6  
                                l576 256A                                  l569 2566  
                                l594 2A50                                  l579 256C  
                                l838 4984                                  l872 4794  
                                l866 4AE0                                  l877 47DA  
                                wreg 0FE8                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
         __end_of_adjust_calibration 44BA                         ___fltol@exp1 000A  
                               l1200 35CA                                 l1105 4BE8  
                               l1202 3642                                 l1203 3630  
                               l1221 3026                                 l1230 3294  
                               l1231 3282                                 l1135 2C90  
                               l1152 2DAA                                 l1144 2F60  
                               l1136 2C7E                                 l3000 2B82  
                               l1225 338A                                 l1161 2E7A  
                               l1137 2C44                                 l1162 2E68  
                               l3010 2BAE                                 l3002 2B94  
                               l1228 321C                                 l3100 2DE4  
                               l3020 2BC2                                 l3012 2BB2  
                               l3004 2BA2                                 l1238 334C  
                               l3110 2E14                                 l3102 2DEE  
                               l3030 2BD6                                 l3022 2BC6  
                               l3014 2BB6                                 l3006 2BA6  
                               l1262 3A42                                 l1191 3584  
                               l3200 3448                                 l3120 2E3C  
                               l3112 2E18                                 l3104 2DFC  
                               l3040 2C10                                 l3032 2BDA  
                               l3024 2BCA                                 l3016 2BBA  
                               l3008 2BAA                                 l1177 4DCC  
                               l1265 3B9E                                 l1098 4BE0  
                               l1194 3548                                 l3210 348A  
                               l3202 3458                                 l3130 2E96  
                               l3122 2E4A                                 l3114 2E28  
                               l3106 2DFE                                 l3050 2C62  
                               l3042 2C2C                                 l3034 2BDE  
                               l3026 2BCE                                 l3018 2BBE  
                               l3204 346E                                 l3140 2F00  
                               l3132 2EA4                                 l3124 2E60  
                               l3108 2E0C                                 l3116 2E2A  
                               l3060 2CAE                                 l3052 2C70  
                               l3044 2C3C                                 l3028 2BD2  
                               l3036 2BE2                                 l1276 3B36  
                               l1189 3724                                 l1269 3ADA  
                               l3230 350C                                 l3222 34C2  
                               l3206 347E                                 l3214 349E  
                               l3310 2F8E                                 l3302 2F62  
                               l3150 2F3A                                 l3142 2F20  
                               l3134 2EDE                                 l3070 2CEE  
                               l3118 2E38                                 l3054 2C72  
                               l3046 2C52                                 l3038 2BE6  
                               l3240 3552                                 l3232 3514  
                               l3224 34DC                                 l3216 34AE  
                               l3208 3486                                 l3320 2FCA  
                               l3312 2F9E                                 l3304 2F6E  
                               l3152 2F40                                 l3144 2F24  
                               l3128 2E8A                                 l3136 2EE0  
                               l3080 2D18                                 l3072 2CFA  
                               l3064 2CC2                                 l3056 2C7C  
                               l3048 2C5E                                 l3160 4EE4  
                               l5000 2206                                 l3250 35AA  
                               l3242 3570                                 l3234 3524  
                               l3226 34EC                                 l3218 34AE  
                               l3170 33A8                                 l3402 32A4  
                               l3410 32EC                                 l3330 3000  
                               l3322 2FD0                                 l3314 2FAE  
                               l3306 2F7C                                 l3154 2F4E  
                               l3146 2F32                                 l3138 2EF0  
                               l3090 2D8A                                 l3074 2CFE  
                               l3066 2CD2                                 l3058 2C9E  
                               l3082 2D1E                                 l3162 4EF4  
                               l5010 226E                                 l5002 2224  
                               l5100 2846                                 l3260 35E8  
                               l3252 35B0                                 l3244 3572  
                               l3236 3538                                 l3228 34FC  
                               l3172 33B8                                 l3180 33E2  
                               l3164 338C                                 l3420 3360  
                               l3412 3306                                 l3404 32B0  
                               l3332 3010                                 l3324 2FDE  
                               l3316 2FB4                                 l3308 2F7E  
                               l3156 2F50                                 l3148 2F38  
                               l3084 2D44                                 l3092 2D9A  
                               l3076 2D0C                                 l3068 2CE0  
                               l3500 39FE                                 l5020 22F4  
                               l5012 228C                                 l5004 2248  
                               l5110 29F2                                 l5102 2864  
                               l3270 3652                                 l3262 35EC  
                               l3254 35BA                                 l3246 3582  
                               l3238 3546                                 l3190 340E  
                               l3182 33F2                                 l3174 33C8  
                               l3166 3398                                 l3422 336E  
                               l3414 331A                                 l3406 32BE  
                               l3350 3092                                 l3342 305A  
                               l3334 3016                                 l3326 2FE0  
                               l3318 2FC4                                 l3094 2DC0  
                               l3086 2D78                                 l3078 2D0E  
                               l3510 3A7C                                 l3502 3A0C  
                               l5030 236C                                 l5022 22F6  
                               l5014 22AC                                 l5006 225C  
                               l5104 2958                                 l5112 2A50  
                               l3600 4744                                 l3280 36B4  
                               l3272 365E                                 l3264 35FA  
                               l3256 35C8                                 l3248 3594  
                               l3192 341E                                 l3184 33F8  
                               l3176 33D8                                 l3168 33A6  
                               l3440 4A66                                 l3424 3370  
                               l3416 3334                                 l3408 32E8  
                               l3360 30DC                                 l3352 30AA  
                               l3344 3066                                 l3336 3036  
                               l3328 2FF0                                 l3096 2DD0  
                               l3088 2D7A                                 l3432 4D88  
                               l3520 3AD0                                 l3512 3A84  
                               l3504 3A52                                 l5032 237C  
                               l5040 23E0                                 l5024 2314  
                               l5008 226C                                 l5016 22D0  
                               l5200 4858                                 l5122 2A72  
                               l5114 2A56                                 l5106 2976  
                               l3610 47D2                                 l3602 4754  
                               l3290 3712                                 l3282 36CA  
                               l3274 366C                                 l3266 3628  
                               l3258 35DA                                 l3194 342E  
                               l3186 33FE                                 l3178 33DA  
                               l3450 4ADE                                 l3442 4A76  
                               l3418 3350                                 l3426 3376  
                               l3370 3132                                 l3362 30EC  
                               l3354 30B6                                 l3346 3070  
                               l3338 3046                                 l3434 4D98  
                               l3530 3B46                                 l3522 3B0C  
                               l3514 3A90                                 l3506 3A68  
                               l5042 23F4                                 l5050 2448  
                               l5034 237E                                 l5026 2334  
                               l5018 22E4                                 l5210 486C  
                               l5202 485C                                 l3620 4B90  
                               l5124 2A80                                 l5116 2A64  
                               l5108 29D4                                 l3612 47D8  
                               l3604 4762                                 l3292 3718  
                               l3284 36E4                                 l3276 3696  
                               l3196 343E                                 l3188 340C  
                               l3444 4AA4                                 l3428 337A  
                               l3380 31D6                                 l3372 314E  
                               l3364 30F8                                 l3356 30C2  
                               l3348 3086                                 l3460 45FC  
                               l3540 3B8E                                 l3532 3B4A  
                               l3524 3B18                                 l3516 3AC2  
                               l3700 1BBE                                 l5052 245C  
                               l5060 24B0                                 l5044 2404  
                               l5036 239C                                 l5028 2358  
                               l5212 4870                                 l5204 4860  
                               l3630 4BCA                                 l3622 4B98  
                               l4270 4B18                                 l5126 2A84  
                               l5070 2574                                 l3606 4774  
                               l3294 371A                                 l3286 3700  
                               l3278 369A                                 l3198 3440  
                               l3446 4AB4                                 l3438 4A38  
                               l3390 322C                                 l3382 31E4  
                               l3374 315A                                 l3366 3108  
                               l3358 30D0                                 l3470 464A  
                               l3462 4626                                 l3454 45D2  
                               l3534 3B6E                                 l3526 3B26  
                               l3518 3AC4                                 l3710 1CE6  
                               l3702 1BF0                                 l3550 4F58  
                               l5062 24C4                                 l5054 246C  
                               l5046 2406                                 l5038 23BC  
                               l4190 4C04                                 l5214 4888  
                               l5206 4864                                 l5150 47DC  
                               l3632 4BD2                                 l3624 4BA0  
                               l3616 4B76                                 l4280 4B56  
                               l4272 4B1C                                 l5080 25D0  
                               l5072 2590                                 l5064 256C  
                               l3608 4782                                 l3288 3704  
                               l3448 4AD8                                 l3392 323A  
                               l3384 3202                                 l3376 3176  
                               l3368 3122                                 l3480 4676  
                               l3464 4628                                 l3456 45E8  
                               l3536 3B7E                                 l3528 3B44  
                               l3712 1D3E                                 l3704 1C48  
                               l3720 1E80                                 l3560 4DD0  
                               l3544 4F68                                 l3552 4F5E  
                               l3640 4EC4                                 l5056 246E  
                               l5048 2424                                 l4192 4C1E  
                               l5216 48A2                                 l5208 4868  
                               l5160 47FE                                 l5152 47E8  
                               l3634 4BD4                                 l3626 4BAE  
                               l3618 4B7E                                 l4290 4B70  
                               l4282 4B58                                 l4274 4B40  
                               l4266 4AE2                                 l5090 2696  
                               l5082 25FA                                 l5074 25A2  
                               l3394 323E                                 l3386 320C  
                               l3378 31A0                                 l3490 46A6  
                               l3466 4638                                 l3538 3B8C  
                               l3730 1F2A                                 l3722 1E90  
                               l3714 1D9A                                 l3706 1C7C  
                               l3570 4E0C                                 l3562 4DD4  
                               l3546 4F6C                                 l3554 4F62  
                               l3642 4ECA                                 l3650 4F34  
                               l3810 4E38                                 l3802 4E10  
                               l5058 248C                                 l4194 4C2C  
                               l5170 481C                                 l5162 4806  
                               l5154 47EE                                 l3740 4EA0  
                               l3636 4BDA                                 l3628 4BB4  
                               l4620 4280                                 l4612 41F8  
                               l4700 3DBE                                 l4292 4B72  
                               l4284 4B62                                 l4276 4B4A  
                               l4268 4AF2                                 l5092 26D6  
                               l5076 25AE                                 l5084 261C  
                               l3396 324C                                 l3388 321A  
                               l3492 46B6                                 l3476 4662  
                               l3468 463C                                 l3580 4500  
                               l3732 1F8A                                 l3724 1EC4  
                               l3716 1DCC                                 l3708 1CB4  
                               l3564 4DDC                                 l3556 4F72  
                               l3548 4F54                                 l3660 4CDE  
                               l3652 4C48                                 l3900 1518  
                               l3644 4ECC                                 l3820 4E4A  
                               l3812 4E42                                 l3804 4E14  
                               l4196 4C44                                 l4188 4BEC  
                               l5180 4838                                 l5172 4824  
                               l5164 480E                                 l5156 47F2  
                               l5148 47DC                                 l4630 4380  
                               l3590 4F28                                 l4622 42C2  
                               l4614 4214                                 l4710 3E02  
                               l4702 3DC8                                 l4286 4B64  
                               l4278 4B4C                                 l5094 26F4  
                               l5086 2638                                 l5078 25CC  
                               l3398 327A                                 l3494 46C6  
                               l3486 468A                                 l3478 466C  
                               l3582 4550                                 l3574 44BA  
                               l3734 1FBE                                 l3726 1EDC  
                               l3718 1E24                                 l3566 4DE4  
                               l3558 4F76                                 l3670 4CE8  
                               l3654 4C8E                                 l3910 15EE  
                               l3902 154A                                 l3830 0EF6  
                               l3646 4ECE                                 l3638 4EBA  
                               l3822 4E4C                                 l3814 4E44  
                               l3806 4E1E                                 l5190 4844  
                               l5182 483A                                 l5174 482C  
                               l5166 4814                                 l5158 47F6  
                               l4640 43D0                                 l4632 4398  
                               l3760 48C6                                 l3736 4E8C  
                               l4624 42DE                                 l4616 4268  
                               l4800 3C3E                                 l4720 3E74  
                               l4712 3E10                                 l4704 3DD4  
                               l4288 4B6E                                 l5096 2734  
                               l5088 2678                                 l2960 2AAE  
                               l3488 4696                                 l3584 45C0  
                               l3576 44EC                                 l3728 1F0E  
                               l3680 19A2                                 l3568 4E0A  
                               l3664 4D38                                 l3672 4D2E  
                               l3920 16E8                                 l3912 1620  
                               l3904 157C                                 l3840 0FF0  
                               l3832 0F28                                 l3824 0E02  
                               l3648 4ED0                                 l3816 4E46  
                               l3808 4E2E                                 l5192 4846  
                               l5184 483C                                 l5176 4834  
                               l5168 4818                                 l4650 4426  
                               l4642 43D2                                 l4634 43A6  
                               l3770 48F6                                 l3762 48D4  
                               l3738 4E90                                 l4626 4322  
                               l4618 427C                                 l4810 3CA6  
                               l4802 3C42                                 l4730 3EB4  
                               l4722 3E7C                                 l4714 3E3C  
                               l4706 3DD8                                 l5098 2752  
                               l3594 46D8                                 l2970 2AEE  
                               l2962 2ABC                                 l3498 39EE  
                               l3690 1AA4                                 l3682 19DA  
                               l3666 4D7E                                 l3658 4C98  
                               l3930 17BE                                 l3914 1652  
                               l3922 16F6                                 l3906 15AE  
                               l3850 10C6                                 l3842 1022  
                               l3834 0F5A                                 l3826 0E9A  
                               l3818 4E48                                 l5194 484C  
                               l5186 483E                                 l5178 4836  
                               l4660 4468                                 l4652 4428  
                               l4636 43B4                                 l4628 4372  
                               l3780 4924                                 l3772 48FA  
                               l3764 48DC                                 l3588 4F0C  
                               l4820 3CF2                                 l4812 3CBE  
                               l4804 3C60                                 l4740 3F10  
                               l4732 3ED0                                 l4724 3E88  
                               l4716 3E54                                 l4708 3DF6  
                               l4900 3820                                 l3596 4706  
                               l2980 2B20                                 l2972 2AF0  
                               l2964 2ABE                                 l3692 1ADC  
                               l3684 1A0C                                 l3676 183A  
                               l3932 17F0                                 l3924 1728  
                               l3916 1684                                 l3908 15BC  
                               l3860 119C                                 l3852 10F8  
                               l3836 0F8C                                 l3844 1030  
                               l3828 0EEC                                 l5196 4850  
                               l5188 4842                                 l4662 4494  
                               l4654 4440                                 l4646 43E6  
                               l4638 43B8                                 l3790 4958  
                               l3782 4932                                 l3774 4902  
                               l3766 48E0                                 l3758 48C2  
                               l4830 4080                                 l4822 3CFC  
                               l4814 3CC8                                 l4806 3C6C  
                               l4750 3F5E                                 l4742 3F1C  
                               l4734 3EEC                                 l4726 3E92  
                               l4718 3E5E                                 l4670 49AC  
                               l4910 388E                                 l4902 383A  
                               l3598 4716                                 l2990 2B48  
                               l2982 2B22                                 l2966 2ACE  
                               l2974 2AF8                                 l2958 2AA2  
                               l3694 1B0E                                 l3686 1A40  
                               l3678 1970                                 l3934 1822  
                               l3926 175A                                 l3918 16B6  
                               l3870 1272                                 l3862 11CE  
                               l3854 112A                                 l3846 1062  
                               l3838 0FBE                                 l5198 4854  
                               l4664 4496                                 l4648 43FE  
                               l4656 4442                                 l3792 495E  
                               l3784 4938                                 l3776 4914  
                               l3768 48EE                                 l4840 40C4  
                               l4832 4088                                 l4816 3CDE  
                               l4824 3D08                                 l4808 3C7A  
                               l4760 3FA6                                 l4752 3F6A  
                               l4744 3F30                                 l4736 3EF4  
                               l4728 3E9E                                 l4680 4A1A  
                               l4672 49D4                                 l4920 38F2  
                               l4912 389E                                 l4904 384A  
                               l2992 2B58                                 l2984 2B28  
                               l2976 2B08                                 l2968 2ADE  
                               l3696 1B42                                 l3688 1A72  
                               l3928 178C                                 l3872 12A4  
                               l3880 1348                                 l3864 1200  
                               l3856 115C                                 l3848 1094  
                               l3936 1830                                 l4666 44AE  
                               l4658 4450                                 l3786 494E  
                               l3778 491C                                 l3794 4964  
                               l4842 40DC                                 l4850 4102  
                               l4834 4088                                 l4826 3D1E  
                               l4818 3CE6                                 l4770 4012  
                               l4762 3FD2                                 l4746 3F48  
                               l4754 3F6E                                 l4738 3EF4  
                               l4690 3D5E                                 l4682 4A34  
                               l4674 49D6                                 l4930 3964  
                               l4922 3910                                 l4914 38BC  
                               l4906 3868                                 l2994 2B68  
                               l2986 2B36                                 l2978 2B0E  
                               l3698 1BA8                                 l3890 1442  
                               l3882 137A                                 l3874 12D6  
                               l3866 120E                                 l3858 116A  
                               l3796 4974                                 l3788 4956  
                               l4860 417E                                 l4852 4120  
                               l4844 40E8                                 l4836 40A4  
                               l4828 4066                                 l4780 3BA2  
                               l4772 401E                                 l4764 3FEA  
                               l4756 3F8C                                 l4748 3F54  
                               l4692 3D7A                                 l4684 3D3A  
                               l4676 49EE                                 l4668 4994  
                               l4940 39C4                                 l4932 3970  
                               l4924 391C                                 l4916 38C8  
                               l4908 3874                                 l2996 2B6A  
                               l2988 2B38                                 l3892 1474  
                               l3884 13AC                                 l3876 1308  
                               l3868 1240                                 l3798 497C  
                               l4870 41BC                                 l4862 4188  
                               l4854 412C                                 l4846 40F2  
                               l4838 40B0                                 l4790 3BF0  
                               l4782 3BC0                                 l4774 4028  
                               l4766 3FF4                                 l4758 3F98  
                               l4694 3D86                                 l4686 3D56  
                               l4678 4A02                                 l4942 39DE  
                               l4934 398A                                 l4926 3936  
                               l4918 38E2                                 l2998 2B72  
                               l3886 13DE                                 l3894 1482  
                               l3878 133A                                 l4950 201A  
                               l4864 419E                                 l4872 41C8  
                               l4856 413A                                 l4848 40FE  
                               l4792 3C04                                 l4784 3BC8  
                               l4768 400A                                 l4776 4034  
                               l4696 3D9A                                 l4688 3D5E  
                               l4936 399A                                 l4928 3946  
                               l4880 374E                                 l3896 14B4  
                               l3888 1410                                 l4960 204E  
                               l4952 201C                                 l4944 1FFC  
                               l4874 41DE                                 l4866 41A6  
                               l4858 4166                                 l4794 3C1C  
                               l4786 3BC8                                 l4778 404A  
                               l4698 3DB2                                 l4938 39B8  
                               l4890 37C0                                 l4882 376C  
                               l3898 14E6                                 l4970 210C  
                               l4962 2050                                 l4954 203C  
                               l4946 2000                                 l4868 41B2  
                               l4796 3C28                                 l4788 3BE4  
                               l4892 37CC                                 l4884 3778  
                               l4876 3726                                 l4980 2174  
                               l4972 2112                                 l4964 2062  
                               l4956 2040                                 l4948 2018  
                               l4798 3C32                                 l4894 37E6  
                               l4886 3792                                 l4878 373E  
                               l4990 219E                                 l4982 2178  
                               l4974 212E                                 l4966 20E0  
                               l4958 204C                                 l4896 37F6  
                               l4888 37A2                                 l4992 21BC  
                               l4984 217A                                 l4968 20EE  
                               l4976 2150                                 l4898 3814  
                               l4986 218C                                 l4994 21E0  
                               l4978 2162                                 l4996 21F4  
                               l4988 219C                                 l4998 2204  
                               u3000 33A6                                 u3001 33A2  
                               u3010 33B8                                 u3011 33B4  
                               u3100 3570                                 u3020 33C8  
                               u3101 356C                                 u3021 33C4  
                               u3110 3594                                 u3030 340C  
                               u3111 3590                                 u3031 3408  
                               u3200 36B4                                 u3120 35AA  
                               u3040 341E                                 u4000 1062  
                       _BAUD4CONbits 0EE9                                 u3201 36B0  
                               u3121 35A6                                 u3041 341A  
                               u4001 105E                                 u3210 36E4  
                               u3130 35C8                                 u3050 342E  
                               u4010 1094                                 u3211 36E0  
                               u3131 35C4                                 u3051 342A  
                               u4011 1090                                 u3220 3712  
                               u3140 35E8                                 u3060 346E  
                               u3300 3046                                 u4100 1272  
                               u4020 10C6                                 u3221 370E  
                               u3141 35E4                                 u3061 346A  
                               u3301 3042                                 u4101 126E  
                               u4021 10C2                                 u3150 35FA  
                               u3070 34AE                                 u3310 31C0  
                               u3230 2F7C                                 u4110 12A4  
                               u4030 10F8                                 u3151 35F6  
                               u3071 34AA                                 u3231 2F78  
                               u4111 12A0                                 u4031 10F4  
                               u3160 3628                                 u3080 3524  
                               u3400 3334                                 u3320 321A  
                               u3240 2F8E                                 u2600 2ACE  
                               u4200 1474                                 u4120 12D6  
                               u4040 112A                                 u3161 3624  
                               u3081 3520                                 u3401 3330  
                               u3321 3216                                 u3241 2F8A  
                               u2601 2ACA                                 u4201 1470  
                               u4121 12D2                                 u4041 1126  
                               u3170 363E                                 u3090 3546  
                               u3410 336E                                 u3330 323A  
                               u3250 2F9E                                 u2610 2ADE  
                               u4210 14B4                                 u4130 1308  
                               u4050 115C                                 _T2PR 0FBC  
                               u3171 363A                                 u3091 3542  
                               u3411 336A                                 u3331 3236  
                               u3315 31B6                                 u3251 2F9A  
                               u2611 2ADA                                 u4211 14B0  
                               u4131 1304                                 u4051 1158  
                               u3180 3652                                 u3420 4A66  
                               u3340 324C                                 u3260 2FDE  
                               u2700 2C2A                                 u2620 2B20  
                               u3500 46A6                                 u4300 1684  
                               u4220 14E6                                 u4140 133A  
                               u4060 119C                                 u3181 364E  
                               u3421 4A62                                 u3341 3248  
                               u3261 2FDA                                 u2621 2B1C  
                               u3501 46A2                                 u4301 1680  
                               u4221 14E2                                 u4141 1336  
                               u4061 1198                                 u3190 366C  
                               u3430 4AA4                                 u3350 327A  
                               u3270 2FF0                                 u2710 2C52  
                               u2630 2B36                                 u3510 46B6  
                               u4310 16B6                                 u4230 1518  
                               u4150 137A                                 u4070 11CE  
                               u3191 3668                                 u3431 4AA0  
                               u3351 3276                                 u3271 2FEC  
                               u2711 2C4E                                 u2631 2B32  
                               u3511 46B2                                 u4311 16B2  
                               u4231 1514                                 u4151 1376  
                               u4071 11CA                                 u5200 43E6  
                               u3440 4AD8                                 u3360 3290  
                               u3280 3000                                 u2800 2D8A  
                               u2720 2C70                                 u2640 2B48  
                               u3600 3B7E                                 u3520 39FE  
                               u4320 16E8                                 u4240 154A  
                               u4160 13AC                                 u4080 1200  
                               u5201 43E2                                 u3441 4AD4  
                               u3361 328C                                 u3281 2FFC  
                               u2801 2D86                                 u2721 2C6C  
                               u2641 2B44                                 u3601 3B7A  
                               u3521 39FA                                 u4321 16E4  
                               u4241 1546                                 u4161 13A8  
                               u4081 11FC                                 u5210 4450  
                               u3370 32A4                                 u3290 3036  
                               u2810 2DC0                                 u2730 2C90  
                               u2650 2B58                                 u3450 45E8  
                               u3610 3B8C                                 u3530 3A0C  
                               u4330 1728                                 u4250 157C  
                               u4170 13DE                                 u4090 1240  
                               u5211 444C                                 u3371 32A0  
                               u3291 3032                                 u2811 2DBC  
                               u2731 2C8C                                 u2651 2B54  
                               u3451 45E4                                 u3611 3B88  
                               u3531 3A08                                 u4331 1724  
                               u4251 1578                                 u4171 13DA  
                               u4091 123C                                 u3700 4B90  
                               u5140 4214                                 u5300 3F8C  
                               u5220 4994                                 u3380 32BE  
                               u2900 2E8A                                 u2820 2DD0  
                               u2740 2C9E                                 u2660 2B94  
                               u3460 461C                                 u3540 3A68  
                               u3620 4DF8                                 u4340 175A  
                               u4260 15AE                                 u4180 1410  
                               u3701 4B8C                                 u5141 4210  
                               u5301 3F88                                 u5221 4990  
                               u3381 32BA                                 u2901 2E86  
                               u2821 2DCC                                 u2741 2C9A  
                               u2661 2B90                                 u3541 3A64  
                               u3621 4DF0                                 u4341 1756  
                               u4261 15AA                                 u4181 140C  
                               u3710 4BAE                                 u5150 42DE  
                               u5310 3FCE                                 u5230 4A02  
                               u3390 3306                                 u2910 2EA4  
                               u2830 2DFC                                 u2750 2CAE  
                               u2670 2BA2                                 u2590 2ABC  
                               u3470 464A                                 u3550 3ABE  
                               u4350 178C                                 u4270 15EE  
                               u4190 1442                                 u6007 4432  
                               u3711 4BAA                                 u5151 42DA  
                               u5311 3FCA                                 u5231 49FE  
                               u3391 3302                                 u2911 2EA0  
                               u2831 2DF8                                 u2751 2CAA  
                               u2671 2B9E                                 u2591 2AB8  
                               u3471 4646                                 u3551 3ABA  
                               u4351 1788                                 u4271 15EA  
                               u4191 143E                                 u5160 4372  
                               u3720 4BCA                                 u5400 3D1E  
                               u5320 3FEA                                 u5240 3DF6  
                               u2920 2EDE                                 u2840 2E0C  
                               u2760 2CE0                                 u2680 2C10  
                               u3480 465E                                 u3560 3B08  
                               u3640 44EC                                 u3800 1BF0  
                               u4360 17BE                                 u4280 1620  
                               u6017 445A                                 u5161 436E  
                               u3721 4BC6                                 u5401 3D1A  
                               u5321 3FE6                                 u5241 3DF2  
                               u2921 2EDA                                 u2841 2E08  
                               u2761 2CDC                                 u2681 2C0C  
                               u3481 465A                                 u3465 4612  
                               u3561 3B04                                 u3641 44E8  
                               u3801 1BEC                                 u4361 17BA  
                               u4281 161C                                 u5170 4380  
                               u5410 3D36                                 u5330 400A  
                               u5250 3E38                                 u3650 4706  
                               u2930 2EF0                                 u2850 2E28  
                               u2770 2CEE                                 u2690 2C28  
                               u3490 4686                                 u3570 3B26  
                               u3810 1CE6                                 u3730 1970  
                               u4370 17F0                                 u4290 1652  
                               u6027 44A0                                 u5171 437C  
                               u5411 3D32                                 u5331 4006  
                               u5251 3E34                                 u3651 4702  
                               u2931 2EEC                                 u2851 2E24  
                               u2771 2CEA                                 u2691 2C22  
                               u3491 4682                                 u3571 3B22  
                               u3811 1CE2                                 u3731 196C  
                               u4371 17EC                                 u4291 164E  
                               u5180 43A6                                 u3900 4914  
                               u5420 4120                                 u5340 404A  
                               u5260 3E54                                 u5500 37E6  
                               u3660 4744                                 u2940 2F00  
                               u2860 2E38                                 u2780 2D0C  
                               u3580 3B36                                 u3820 1DCC  
                               u3740 19A2                                 u4380 1822  
                               u5181 43A2                                 u3901 4910  
                               u5421 411C                                 u5341 4046  
                               u5261 3E50                                 u5501 37E2  
                               u3661 4740                                 u2941 2EFC  
                               u2861 2E34                                 u2781 2D08  
                               u3581 3B32                                 u3821 1DC8  
                               u3741 199E                                 u4381 181E  
                               u5190 43B4                                 u3910 4932  
                               u5430 4162                                 u5350 4062  
                               u5270 3E74                                 u5510 383A  
                               u3670 4762                                 u2950 2F20  
                               u2870 2E4A                                 u2790 2D44  
                               u3590 3B44                                 u3830 1E90  
                               u3750 1A0C                                 u3638 4DFA  
                               u4710 4C2C                                 u5191 43B0  
                               u3911 492E                                 u5431 415E  
                               u5351 405E                                 u5271 3E70  
                               u5511 3836                                 u3671 475E  
                               u2951 2F1C                                 u2871 2E46  
                               u2791 2D40                                 u3591 3B40  
                               u3831 1E8C                                 u3751 1A08  
                               u4711 4C28                                 u3920 494E  
                               u5440 417E                                 u5360 3C60  
                               u5280 3EB4                                 u5520 388E  
                               u3680 4782                                 u2960 2F32  
                               u2880 2E60                                 u3840 1F0E  
                               u3760 1A72                                 u5600 218C  
                               u3921 494A                                 u5441 417A  
                               u5361 3C5C                                 u5281 3EB0  
                               u5521 388A                                 u3681 477E  
                               u2961 2F2E                                 u2881 2E5C  
                               u3841 1F0A                                 u3761 1A6E  
                               u5601 2188                                 u3930 4974  
                               u3850 4EB8                                 u5450 419E  
                               u5370 3CA2                                 u5290 3ECC  
                               u5530 38E2                                 u3690 47D2  
                               u2970 2F4E                                 u2890 2E76  
                               u3770 1AA4                                 u5610 21F4  
                               u3931 4970                                 u3851 4EB4  
                               u5451 419A                                 u5371 3C9E  
                               u5291 3EC8                                 u5531 38DE  
                               u3691 47CE                                 u2971 2F4A  
                               u2891 2E72                                 u3771 1AA0  
                               u5611 21F0                                 u5460 41DE  
                               u5380 3CBE                                 u5540 3936  
                               u5700 2638                                 u3780 1B0E  
                               u2980 4EF4                                 u3940 0F28  
                               u5620 225C                                 u5461 41DA  
                               u5381 3CBA                                 u5541 3932  
                               u5701 2634                                 u3781 1B0A  
                               u2981 4EF0                                 u3941 0F24  
                               u5621 2258                                 u5470 41F6  
                               u5390 3CDE                                 u5550 398A  
                               u5710 2696                                 u3790 1BA8  
                               u2990 4F0A                                 u3950 0F5A  
                               u5630 22E4                                 u5471 41F2  
                               u5391 3CDA                                 u5551 3986  
                               u5711 2692                                 u3791 1BA4  
                               u2991 4F06                                 u3951 0F56  
                               u5631 22E0                                 u3880 48D4  
                               u5560 39DE                                 u5480 373E  
                               u5720 26F4                                 u3960 0F8C  
                               u5640 236C                                 u3881 48D0  
                               u5561 39DA                                 u5481 373A  
                               u5721 26F0                                 u3961 0F88  
                               u5641 2368                                 u3890 48EE  
                               u5490 3792                                 u5730 2752  
                               u3970 0FBE                                 u5650 23F4  
                               u5570 2062                                 u3891 48EA  
                               u5491 378E                                 u5731 274E  
                               u3971 0FBA                                 u5651 23F0  
                               u5571 205E                                 u5740 2864  
                               u3980 0FF0                                 u5660 245C  
                               u5580 212E                                 u5741 2860  
                               u3981 0FEC                                 u5661 2458  
                               u5581 212A                                 u5750 2976  
                               u3990 1022                                 u5670 24C4  
                               u5590 2162                                 u5751 2972  
                               u3991 101E                                 u5671 24C0  
                               u5591 215E                                 u5760 29F2  
                               u5680 2590                                 u5761 29EE  
                               u5681 258C                                 u5770 2A64  
                               u5690 25FA                                 u5907 4A0C  
                               u5771 2A60                                 u5691 25F6  
                               u5780 2AA0                                 u5917 4A26  
                               u5781 2A9C                                 u5837 4BF6  
                               u5927 3E08                                 u5847 4C10  
                               u5937 3F9E                                 u5857 4C36  
                               u5947 3C72                                 u5867 200A  
                               u5957 4132                                 u5877 4E24  
                               u5967 4E96                                 u5887 499E  
                               u5977 438A                                 u5897 49E0  
                               u5987 43C2                                 u5997 43F0  
                               _main 47DC                                 _temp 00F9  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                               prodh 0FF4                                 prodl 0FF3  
                               start 0000                      ___fldiv@new_exp 0033  
             __end_of_color_read_Red 4C98                         ___param_bank 0000  
            __end_of_color_cardCheck 183A              _forward_reset_threshold 00F7  
                      ___fltol@sign1 0009                      __end_of___fladd 2F62  
                              ?_main 0001                      __end_of___fldiv 3726  
                    __end_of___awdiv 4986                      __end_of___flmul 338C  
                    __end_of___flsub 4DCE                      __end_of___fltol 46D8  
                    ___awdiv@divisor 0003                          ?_RGB_to_HSV 006A  
                    __end_of___lwdiv 4BEA                      ___awdiv@counter 0005  
                       ?_maze_search 00DF                         ?_maze_return 0023  
         __end_of_I2C_2_Master_Start 4F72           __end_of_I2C_2_Master_Write 4F5E  
                    __end_of_forward 3D38                                tablat 0FF5  
                              status 0FD8              __end_of_color_read_Blue 4D88  
              _I2C_2_Master_RepStart 4F72                   _switch_calibration 4986  
                    ?_color_read_Red 0005                      __initialization 4E50  
                       __end_of_main 48C2                  ?_switch_calibration 0001  
                             ??_main 0060                        _Forward_Count 00E8  
                      __activetblptr 0000                         ?_setMotorPWM 000E  
                             _CCPR1H 0FAA                               _CCPR2H 0FA6  
                             _CCPR3H 0F25                               _CCPR4H 0F21  
                   ___awdiv@dividend 0001                 ??_switch_calibration 0003  
                             _RC0PPS 0E62                               _RC4REG 0EE3  
                             _RE2PPS 0E74                               _RD5PPS 0E6F  
                             _RC7PPS 0E69                               _RD6PPS 0E70  
                             _RE4PPS 0E76                               _RG6PPS 0E88  
                   __end_of_backward 41F8             __end_of_color_click_init 4E50  
                             _RX4PPS 0E15                     forward@max_power 001F  
                             _TX4REG 0EE4                     __end_of___xxtofl 3BA0  
                       _CCPTMRS0bits 0FAD                          _Color_Value 00E6  
                             ___flge 46D8                               ___fleq 4A38  
                   ?_color_cardCheck 005C                     __end_of_leftTURN 4064  
                          ??___fladd 0009                               ___wmul 4F0C  
                          ??___fldiv 002A                            ??___awdiv 0005  
                          ??___flmul 0043                            ??___flsub 0022  
                          ??___fltol 0005                            ??___lwdiv 000B  
      delay_ms_function@milliseconds 0001                               _length 00F8  
                             clear_0 4E74                               clear_1 4E80  
                   ___awdiv@quotient 0007                               _motorL 00EE  
                             _motorR 018B                               isa$std 0001  
                          ??_forward 0017        rightTURN@rotation_calibration 001A  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                    _Operation_Count 00E9                    ??_initDCmotorsPWM 0003  
                         ___flge@ff1 0001                           ___flge@ff2 0005  
                       ___xxtofl@arg 0016                         ___xxtofl@exp 0015  
                       ___xxtofl@val 000C                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 4E86             __end_of_color_read_Clear 4D38  
           __end_of_color_read_Green 4CE8               ?_I2C_2_Master_RepStart 0001  
                      ___rparam_used 0001                           ___fltol@f1 0001  
                   ?_color_read_Blue 0005                       __pcstackCOMRAM 0001  
                       __pidataBANK0 4F7C                    forward@delay_time 0021  
                     _RGB_to_HSV$321 009D                       _RGB_to_HSV$322 00A1  
                     _RGB_to_HSV$318 0091                       _RGB_to_HSV$319 0095  
                 RGB_to_HSV@deltaRGB 00AD                calibration_routine@mL 0025  
              calibration_routine@mR 0026                           __pbssBANK0 00E6  
                         __pbssBANK1 0100                    _color_writetoaddr 4F32  
                       _T2CLKCONbits 0FBF                   _adjust_calibration 4364  
                            ?___flge 0001                              ?___fleq 0001  
                 ?_color_writetoaddr 0003                              ?___wmul 0001  
                 backward@delay_time 0021                  ?_adjust_calibration 0001  
                ??_color_writetoaddr 0004                            ?_backward 0014  
                       ??_RGB_to_HSV 005C                    _delay_ms_function 4E8C  
                         backward@mL 0014                           backward@mR 0015  
                          ?___xxtofl 000C                   ?_delay_ms_function 0001  
                            _SP4BRGH 0EE6                              _SP4BRGL 0EE5  
                            _SSP2ADD 0ED6                              _SSP2BUF 0ED5  
                        rightTURN@mL 0014                          rightTURN@mR 0015  
                          ?_leftTURN 0014                  ??_delay_ms_function 0003  
               ??_adjust_calibration 0003               color_writetoaddr@value 0003  
                   ??_color_read_Red 0007            __end_of_color_writetoaddr 4F52  
                        RGB_to_HSV@B 0072                          RGB_to_HSV@C 0076  
                        RGB_to_HSV@G 006E                          RGB_to_HSV@H 007A  
                        RGB_to_HSV@R 006A                          RGB_to_HSV@S 007B  
                        RGB_to_HSV@V 007C                          RGB_to_HSV@b 00BD  
                        RGB_to_HSV@g 00B9                   _I2C_2_Master_Start 4F68  
                        RGB_to_HSV@r 00B5                   _I2C_2_Master_Write 4F52  
                            __Hparam 0000                   __end_of_RGB_to_HSV 1FFC  
                            __Lparam 0000                    color_read_Red@tmp 000A  
                            ___fladd 2AA2                              ___fldiv 338C  
                            ___awdiv 48C2                              ___flmul 2F62  
                            ___flsub 4D88                              ___fltol 45D2  
                ?_I2C_2_Master_Start 0001                              ___lwdiv 4B76  
                ?_I2C_2_Master_Write 0001                         __psmallconst 0E00  
          __end_of_delay_ms_function 4EBA                              __pcinit 4E50  
                            __ramtop 0E00                              __ptext0 47DC  
                            __ptext1 4BEA                              __ptext2 1FFC  
                            __ptext3 4E10                              __ptext4 4F32  
                            __ptext5 4EBA                              __ptext6 0E02  
                            __ptext7 4C48                              __ptext8 4C98  
                            __ptext9 4CE8                           ??_backward 0017  
                          _T2CONbits 0FBD                              _forward 3BA0  
                         ??___xxtofl 0010                            _T2HLTbits 0FBE  
                      _RxBufWriteCnt 00ED                 ??_I2C_2_Master_Start 0002  
               ??_I2C_2_Master_Write 0002                         maze_search@c 00DF  
                       maze_search@i 00E4                 end_of_initialization 4E86  
                         ??_leftTURN 0017                    __end_of_rightTURN 3ECE  
            _pause_until_RF2_pressed 4BEA                   leftTURN@delay_time 0021  
                  ?_color_click_init 0001                         maze_return@c 0023  
                       maze_return@i 0030                         maze_return@j 002C  
                 ??_color_click_init 0005             maze_return@distance_back 002B  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc2 0FDE                      _initDCmotorsPWM 4AE2  
                          _PORTFbits 0F8E                   setMotorPWM@negDuty 0013  
                        ___fladd@grs 0010                        ___xxtofl@sign 0014  
                          _TRISAbits 0F81                   setMotorPWM@posDuty 0012  
                          _TRISCbits 0F83                            _TRISDbits 0F84  
                          _TRISEbits 0F85                            _TRISFbits 0F86  
                          _TRISGbits 0F87                            _TRISHbits 0F88  
adjust_calibration@calibration_label 0001  switch_calibration@calibration_index 0001  
                        ___fldiv@grs 0035                          ___fldiv@rem 002E  
           color_writetoaddr@address 0004              ??_I2C_2_Master_RepStart 0002  
                        ___flmul@grs 0048                          _CCP1CONbits 0FAB  
                _calibration_routine 3726                    ?_color_read_Clear 0005  
                       _EUSART4RXbuf 016E                         _EUSART4TXbuf 0100  
                        _CCP2CONbits 0FA7                    ?_color_read_Green 0005  
                        _CCP3CONbits 0F26          forward@Distance_Calibration 001A  
                        _CCP4CONbits 0F22                   ??_color_read_Clear 0007  
                 ??_color_read_Green 0007                   rightTURN@max_power 001F  
                  maze_return@i_2044 002E                           leftTURN@mL 0014  
                         leftTURN@mR 0015           __end_of_custom_floatmodulo 45D2  
                     __end_of___flge 47DC                       __end_of___fleq 4AE2  
                     __end_of___wmul 4F32            color_cardCheck@card_color 00D1  
               ?_calibration_routine 0023                     RGB_to_HSV@H_temp 00A9  
                color_read_Clear@tmp 000A                  start_initialization 4E50  
                      _TxBufWriteCnt 00EB         leftTURN@rotation_calibration 001A  
                   RGB_to_HSV@c_norm 007D            ??_pause_until_RF2_pressed 0001  
                   RGB_to_HSV@maxRGB 00B1                     RGB_to_HSV@minRGB 0099  
                    _RGB_to_HSV$2720 0081                      _RGB_to_HSV$2721 0085  
                    _RGB_to_HSV$2722 0089                      _RGB_to_HSV$2723 00A5  
                    _RGB_to_HSV$2724 008D                  color_read_Green@tmp 000A  
            __end_of_initDCmotorsPWM 4B76                             ??___flge 0009  
                           ??___fleq 0009                             ??___wmul 0005  
                custom_floatmodulo@x 0054                  custom_floatmodulo@y 0058  
                        __pdataBANK0 00F7                          _calibration 0182  
              ??_calibration_routine 0028                            ___fladd@a 0005  
                          ___fladd@b 0001                        ??_maze_search 005E  
       backward@Distance_Calibration 001A                            ___fldiv@a 0026  
                          ___fldiv@b 0022                        ??_maze_return 0028  
                          ___flmul@a 003F                            ___flmul@b 003B  
                          ___flsub@a 001E                            ___flsub@b 001A  
                      __pcstackBANK0 0060                 calibration_routine@c 0023  
          custom_floatmodulo@intPart 0068                     ___lwdiv@dividend 0007  
    __end_of_pause_until_RF2_pressed 4C48                             ?___fladd 0001  
                           ?___fldiv 0022                             ?___awdiv 0001  
                           ?___flmul 003B                             ?___flsub 001A  
                           ?___fltol 0001                             ?___lwdiv 0007  
                          backward@i 001B                            backward@j 001D  
                         rightTURN@i 001B                           rightTURN@j 001D  
               I2C_2_Master_Read@ack 0003                 I2C_2_Master_Read@tmp 0004  
                        __smallconst 0E00                             ?_forward 0014  
                  _I2C_2_Master_Idle 4EE4                    _I2C_2_Master_Init 4EBA  
                  _I2C_2_Master_Read 4DCE                    _I2C_2_Master_Stop 4F5E  
                       _RxBufReadCnt 00EC                   ?_I2C_2_Master_Idle 0001  
                 ?_I2C_2_Master_Init 0001                   ?_I2C_2_Master_Read 0001  
                      ??_setMotorPWM 0010                   ?_I2C_2_Master_Stop 0001  
                   ___lwdiv@quotient 000B             initDCmotorsPWM@PWMperiod 0001  
                  ??_color_cardCheck 005E                  __end_of_maze_search 256C  
                  backward@max_power 001F                  __end_of_maze_return 2AA2  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 0F79                  ??_I2C_2_Master_Stop 0002  
                           _LATCbits 0F7B                             _LATDbits 0F7C  
                           _LATEbits 0F7D                             _LATFbits 0F7E  
                           _LATGbits 0F7F                             _LATHbits 0F80  
                          _rightTURN 3D38                             _PIE4bits 0E2D  
                           _PIR4bits 0E37                     ?_initDCmotorsPWM 0001  
                           _SSP2CON2 0EDA                             _SSP2STAT 0ED8  
          __end_of_I2C_2_Master_Idle 4F0C            __end_of_I2C_2_Master_Init 4EE4  
          __end_of_I2C_2_Master_Read 4E10                    ___wmul@multiplier 0001  
          __end_of_I2C_2_Master_Stop 4F68                         setMotorPWM@m 000E  
        I2C_2_Master_Write@data_byte 0002                    ??_color_read_Blue 0007  
                  leftTURN@max_power 001F                         _TxBufReadCnt 00EA  
                          leftTURN@i 001B                            leftTURN@j 001D  
      __end_of_I2C_2_Master_RepStart 4F7C                   color_read_Blue@tmp 000A  
                __end_of_setMotorPWM 4364                           ?_rightTURN 0014  
                           __Hrparam 0000                             __Lrparam 0000  
                          forward@mL 0014                            forward@mR 0015  
                           _backward 4064                           _ANSELDbits 0EA7  
                         _ANSELFbits 0EB4                          _maze_search 1FFC  
                           ___xxtofl 39EC                          _maze_return 256C  
                 _custom_floatmodulo 44BA                      ___lwdiv@divisor 0009  
         __end_of_switch_calibration 4A38                      ___lwdiv@counter 000D  
                           __ptext10 4D38                             __ptext11 4F52  
                           __ptext20 45D2                             __ptext12 4F5E  
                           __ptext21 4D88                             __ptext13 4F68  
                           __ptext30 4986                             __ptext22 2AA2  
                           __ptext14 4F72                             __ptext31 3D38  
                           __ptext23 2F62                             __ptext15 4DCE  
                           __ptext40 4364                             __ptext32 3ECE  
                           __ptext24 4A38                             __ptext16 4EE4  
                           __ptext33 3BA0                             __ptext25 338C  
                           __ptext17 183A                             __ptext34 4064  
                           __ptext26 46D8                             __ptext18 44BA  
                           __ptext35 41F8                             __ptext27 256C  
                           __ptext19 39EC                             __ptext36 4F0C  
                           __ptext28 4AE2                             __ptext37 4B76  
                           __ptext29 3726                             __ptext38 4E8C  
                           __ptext39 48C2          custom_floatmodulo@remainder 0064  
                       _SSP2CON1bits 0ED9                         _SSP2CON2bits 0EDA  
                           _leftTURN 3ECE                  ?_custom_floatmodulo 0054  
                           isa$xinst 0000                           _RC4STAbits 0EE7  
               ??_custom_floatmodulo 005C                        maze_search@mL 00E1  
                      maze_search@mR 00E2                             forward@i 001B  
                           forward@j 001D                          _setMotorPWM 41F8  
                      maze_return@mL 0025                        maze_return@mR 0026  
                        ??_rightTURN 0017          __end_of_calibration_routine 39EC  
         custom_floatmodulo@quotient 0060                     _color_click_init 4E10  
                    _color_cardCheck 0E02                           _RGB_to_HSV 183A  
                  _Operation_History 013C                           _SSP2DATPPS 0E1D  
                         _SSP2CLKPPS 0E1C             ?_pause_until_RF2_pressed 0001  
                   color_cardCheck@H 00D3                     color_cardCheck@S 00D7  
                   color_cardCheck@V 00DB                     color_cardCheck@b 00C9  
                   color_cardCheck@c 00CD                     color_cardCheck@g 00C5  
                   color_cardCheck@r 00C1                        ___fladd@signs 000D  
                         _TX4STAbits 0EE8                  rightTURN@delay_time 0021  
                       ___fladd@aexp 000E                         ___fladd@bexp 000F  
