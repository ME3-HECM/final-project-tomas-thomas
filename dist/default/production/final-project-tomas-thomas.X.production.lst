

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 05:09:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 21/07/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataBANK0
    95   004DE6                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _forward_reset_threshold
    99   004DE6  0F                 	db	15
   100                           
   101                           ;initializer for _length
   102   004DE7  32                 	db	50
   103   000000                     _TX4REG	set	3812
   104   000000                     _RC4STAbits	set	3815
   105   000000                     _SP4BRGH	set	3814
   106   000000                     _LATEbits	set	3965
   107   000000                     _TRISEbits	set	3973
   108   000000                     _LATHbits	set	3968
   109   000000                     _SSP2CON2bits	set	3802
   110   000000                     _RX4PPS	set	3605
   111   000000                     _SSP2CLKPPS	set	3612
   112   000000                     _SSP2DATPPS	set	3613
   113   000000                     _ANSELDbits	set	3751
   114   000000                     _SSP2ADD	set	3798
   115   000000                     _SSP2CON1bits	set	3801
   116   000000                     _LATAbits	set	3961
   117   000000                     _LATGbits	set	3967
   118   000000                     _TRISAbits	set	3969
   119   000000                     _TRISGbits	set	3975
   120   000000                     _TRISHbits	set	3976
   121   000000                     _PORTFbits	set	3982
   122   000000                     _TRISCbits	set	3971
   123   000000                     _TRISDbits	set	3972
   124   000000                     _TRISFbits	set	3974
   125   000000                     _LATCbits	set	3963
   126   000000                     _LATDbits	set	3964
   127   000000                     _LATFbits	set	3966
   128   000000                     _RC4REG	set	3811
   129   000000                     _SP4BRGL	set	3813
   130   000000                     _TX4STAbits	set	3816
   131   000000                     _BAUD4CONbits	set	3817
   132   000000                     _SSP2CON2	set	3802
   133   000000                     _CCPR4H	set	3873
   134   000000                     _CCPR3H	set	3877
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _SSP2BUF	set	3797
   138   000000                     _PIE4bits	set	3629
   139   000000                     _PIR4bits	set	3639
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RC7PPS	set	3689
   142   000000                     _RD5PPS	set	3695
   143   000000                     _RE2PPS	set	3700
   144   000000                     _RD6PPS	set	3696
   145   000000                     _T2PR	set	4028
   146   000000                     _T2CONbits	set	4029
   147   000000                     _CCPR2H	set	4006
   148   000000                     _CCPR1H	set	4010
   149   000000                     _RE4PPS	set	3702
   150   000000                     _RG6PPS	set	3720
   151   000000                     _T2CLKCONbits	set	4031
   152   000000                     _T2HLTbits	set	4030
   153   000000                     _CCP1CONbits	set	4011
   154   000000                     _CCPTMRS0bits	set	4013
   155   000000                     _CCP2CONbits	set	4007
   156   000000                     _CCP3CONbits	set	3878
   157   000000                     _CCP4CONbits	set	3874
   158                           
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162   004CC0                     __pcinit:
   163                           	callstack 0
   164   004CC0                     start_initialization:
   165                           	callstack 0
   166   004CC0                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to BANK0 (2 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171   004CC0  0EE6               	movlw	low __pidataBANK0
   172   004CC2  6EF6               	movwf	tblptrl,c
   173   004CC4  0E4D               	movlw	high __pidataBANK0
   174   004CC6  6EF7               	movwf	tblptrh,c
   175   004CC8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176   004CCA  6EF8               	movwf	tblptru,c
   177   004CCC  0009               	tblrd		*+	;fetch initializer
   178   004CCE  CFF5 F0FD          	movff	tablat,__pdataBANK0
   179   004CD2  0009               	tblrd		*+	;fetch initializer
   180   004CD4  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   181                           
   182                           ; Clear objects allocated to BANK1 (139 bytes)
   183   004CD8  EE01  F000         	lfsr	0,__pbssBANK1
   184   004CDC  0E8B               	movlw	139
   185   004CDE                     clear_0:
   186   004CDE  6AEE               	clrf	postinc0,c
   187   004CE0  06E8               	decf	wreg,f,c
   188   004CE2  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to BANK0 (26 bytes)
   191   004CE4  EE00  F0E3         	lfsr	0,__pbssBANK0
   192   004CE8  0E1A               	movlw	26
   193   004CEA                     clear_1:
   194   004CEA  6AEE               	clrf	postinc0,c
   195   004CEC  06E8               	decf	wreg,f,c
   196   004CEE  E1FD               	bnz	clear_1
   197   004CF0                     end_of_initialization:
   198                           	callstack 0
   199   004CF0                     __end_of__initialization:
   200                           	callstack 0
   201   004CF0  0100               	movlb	0
   202   004CF2  EF2D  F023         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssBANK0
   205   0000E3                     __pbssBANK0:
   206                           	callstack 0
   207   0000E3                     _Color_Value:
   208                           	callstack 0
   209   0000E3                     	ds	2
   210   0000E5                     _Forward_Count:
   211                           	callstack 0
   212   0000E5                     	ds	1
   213   0000E6                     _Operation_Count:
   214                           	callstack 0
   215   0000E6                     	ds	1
   216   0000E7                     _TxBufReadCnt:
   217                           	callstack 0
   218   0000E7                     	ds	1
   219   0000E8                     _TxBufWriteCnt:
   220                           	callstack 0
   221   0000E8                     	ds	1
   222   0000E9                     _RxBufReadCnt:
   223                           	callstack 0
   224   0000E9                     	ds	1
   225   0000EA                     _RxBufWriteCnt:
   226                           	callstack 0
   227   0000EA                     	ds	1
   228   0000EB                     _motorR:
   229                           	callstack 0
   230   0000EB                     	ds	9
   231   0000F4                     _motorL:
   232                           	callstack 0
   233   0000F4                     	ds	9
   234                           
   235                           	psect	dataBANK0
   236   0000FD                     __pdataBANK0:
   237                           	callstack 0
   238   0000FD                     _forward_reset_threshold:
   239                           	callstack 0
   240   0000FD                     	ds	1
   241   0000FE                     _length:
   242                           	callstack 0
   243   0000FE                     	ds	1
   244                           
   245                           	psect	bssBANK1
   246   000100                     __pbssBANK1:
   247                           	callstack 0
   248   000100                     _EUSART4TXbuf:
   249                           	callstack 0
   250   000100                     	ds	60
   251   00013C                     _Operation_History:
   252                           	callstack 0
   253   00013C                     	ds	50
   254   00016E                     _EUSART4RXbuf:
   255                           	callstack 0
   256   00016E                     	ds	20
   257   000182                     _calibration:
   258                           	callstack 0
   259   000182                     	ds	9
   260                           
   261                           	psect	cstackBANK1
   262   00018B                     __pcstackBANK1:
   263                           	callstack 0
   264   00018B                     maze_search@i:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x0
   268   00018B                     	ds	2
   269                           
   270                           	psect	cstackBANK0
   271   000060                     __pcstackBANK0:
   272                           	callstack 0
   273   000060                     custom_floatmodulo@quotient:
   274                           	callstack 0
   275                           
   276                           ; 4 bytes @ 0x0
   277   000060                     	ds	4
   278   000064                     custom_floatmodulo@remainder:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0x4
   282   000064                     	ds	4
   283   000068                     custom_floatmodulo@intPart:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x8
   287   000068                     	ds	2
   288   00006A                     RGB_to_HSV@R:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0xA
   292   00006A                     	ds	4
   293   00006E                     RGB_to_HSV@G:
   294                           	callstack 0
   295                           
   296                           ; 4 bytes @ 0xE
   297   00006E                     	ds	4
   298   000072                     RGB_to_HSV@B:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0x12
   302   000072                     	ds	4
   303   000076                     RGB_to_HSV@C:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x16
   307   000076                     	ds	4
   308   00007A                     RGB_to_HSV@H:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x1A
   312   00007A                     	ds	1
   313   00007B                     RGB_to_HSV@S:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x1B
   317   00007B                     	ds	1
   318   00007C                     RGB_to_HSV@V:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x1C
   322   00007C                     	ds	1
   323   00007D                     RGB_to_HSV@c_norm:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x1D
   327   00007D                     	ds	4
   328   000081                     _RGB_to_HSV$2716:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x21
   332   000081                     	ds	4
   333   000085                     _RGB_to_HSV$2717:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x25
   337   000085                     	ds	4
   338   000089                     _RGB_to_HSV$2718:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x29
   342   000089                     	ds	4
   343   00008D                     _RGB_to_HSV$2720:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x2D
   347   00008D                     	ds	4
   348   000091                     _RGB_to_HSV$318:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x31
   352   000091                     	ds	4
   353   000095                     _RGB_to_HSV$319:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x35
   357   000095                     	ds	4
   358   000099                     RGB_to_HSV@minRGB:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x39
   362   000099                     	ds	4
   363   00009D                     _RGB_to_HSV$321:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x3D
   367   00009D                     	ds	4
   368   0000A1                     _RGB_to_HSV$322:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x41
   372   0000A1                     	ds	4
   373   0000A5                     _RGB_to_HSV$2719:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x45
   377   0000A5                     	ds	4
   378   0000A9                     RGB_to_HSV@H_temp:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x49
   382   0000A9                     	ds	4
   383   0000AD                     RGB_to_HSV@deltaRGB:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x4D
   387   0000AD                     	ds	4
   388   0000B1                     RGB_to_HSV@maxRGB:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x51
   392   0000B1                     	ds	4
   393   0000B5                     RGB_to_HSV@r:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x55
   397   0000B5                     	ds	4
   398   0000B9                     RGB_to_HSV@g:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x59
   402   0000B9                     	ds	4
   403   0000BD                     RGB_to_HSV@b:
   404                           	callstack 0
   405                           
   406                           ; 4 bytes @ 0x5D
   407   0000BD                     	ds	4
   408   0000C1                     color_cardCheck@r:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x61
   412   0000C1                     	ds	4
   413   0000C5                     color_cardCheck@g:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x65
   417   0000C5                     	ds	4
   418   0000C9                     color_cardCheck@b:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x69
   422   0000C9                     	ds	4
   423   0000CD                     color_cardCheck@c:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x6D
   427   0000CD                     	ds	4
   428   0000D1                     color_cardCheck@card_color:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x71
   432   0000D1                     	ds	2
   433   0000D3                     color_cardCheck@H:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x73
   437   0000D3                     	ds	4
   438   0000D7                     color_cardCheck@S:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x77
   442   0000D7                     	ds	4
   443   0000DB                     color_cardCheck@V:
   444                           	callstack 0
   445                           
   446                           ; 4 bytes @ 0x7B
   447   0000DB                     	ds	4
   448   0000DF                     maze_search@c:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x7F
   452   0000DF                     	ds	2
   453   0000E1                     maze_search@mL:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x81
   457   0000E1                     	ds	1
   458   0000E2                     maze_search@mR:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x82
   462   0000E2                     	ds	1
   463                           
   464                           	psect	cstackCOMRAM
   465   000001                     __pcstackCOMRAM:
   466                           	callstack 0
   467   000001                     ??_I2C_2_Master_Idle:
   468   000001                     ??_pause_until_RF2_pressed:
   469   000001                     ?___wmul:
   470                           	callstack 0
   471   000001                     ?___awdiv:
   472                           	callstack 0
   473   000001                     ?___fladd:
   474                           	callstack 0
   475   000001                     ?___fltol:
   476                           	callstack 0
   477   000001                     adjust_calibration@calibration_label:
   478                           	callstack 0
   479   000001                     switch_calibration@calibration_index:
   480                           	callstack 0
   481   000001                     initDCmotorsPWM@PWMperiod:
   482                           	callstack 0
   483   000001                     delay_ms_function@milliseconds:
   484                           	callstack 0
   485   000001                     ___wmul@multiplier:
   486                           	callstack 0
   487   000001                     ___awdiv@dividend:
   488                           	callstack 0
   489   000001                     ___fleq@ff1:
   490                           	callstack 0
   491   000001                     ___flge@ff1:
   492                           	callstack 0
   493   000001                     ___fltol@f1:
   494                           	callstack 0
   495   000001                     ___fladd@b:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x0
   499   000001                     	ds	1
   500   000002                     ??_I2C_2_Master_Read:
   501   000002                     I2C_2_Master_Write@data_byte:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x1
   505   000002                     	ds	1
   506   000003                     ??_adjust_calibration:
   507   000003                     ??_switch_calibration:
   508   000003                     ??_delay_ms_function:
   509   000003                     color_writetoaddr@value:
   510                           	callstack 0
   511   000003                     I2C_2_Master_Read@ack:
   512                           	callstack 0
   513   000003                     ___wmul@multiplicand:
   514                           	callstack 0
   515   000003                     ___awdiv@divisor:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2
   519   000003                     	ds	1
   520   000004                     color_writetoaddr@address:
   521                           	callstack 0
   522   000004                     I2C_2_Master_Read@tmp:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x3
   526   000004                     	ds	1
   527   000005                     ??_color_click_init:
   528   000005                     ??___fltol:
   529   000005                     ?_color_read_Red:
   530                           	callstack 0
   531   000005                     ?_color_read_Green:
   532                           	callstack 0
   533   000005                     ?_color_read_Blue:
   534                           	callstack 0
   535   000005                     ?_color_read_Clear:
   536                           	callstack 0
   537   000005                     ___awdiv@counter:
   538                           	callstack 0
   539   000005                     ___wmul@product:
   540                           	callstack 0
   541   000005                     ___fleq@ff2:
   542                           	callstack 0
   543   000005                     ___flge@ff2:
   544                           	callstack 0
   545   000005                     ___fladd@a:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x4
   549   000005                     	ds	1
   550   000006                     ___awdiv@sign:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x5
   554   000006                     	ds	1
   555   000007                     ??_color_read_Red:
   556   000007                     ??_color_read_Green:
   557   000007                     ??_color_read_Blue:
   558   000007                     ??_color_read_Clear:
   559   000007                     ?___lwdiv:
   560                           	callstack 0
   561   000007                     ___awdiv@quotient:
   562                           	callstack 0
   563   000007                     ___lwdiv@dividend:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x6
   567   000007                     	ds	2
   568   000009                     ??___fladd:
   569   000009                     ??___fleq:
   570   000009                     ??___flge:
   571   000009                     ___fltol@sign1:
   572                           	callstack 0
   573   000009                     ___lwdiv@divisor:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x8
   577   000009                     	ds	1
   578   00000A                     ___fltol@exp1:
   579                           	callstack 0
   580   00000A                     color_read_Red@tmp:
   581                           	callstack 0
   582   00000A                     color_read_Green@tmp:
   583                           	callstack 0
   584   00000A                     color_read_Blue@tmp:
   585                           	callstack 0
   586   00000A                     color_read_Clear@tmp:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x9
   590   00000A                     	ds	1
   591   00000B                     ___lwdiv@counter:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0xA
   595   00000B                     	ds	1
   596   00000C                     ?___xxtofl:
   597                           	callstack 0
   598   00000C                     ___lwdiv@quotient:
   599                           	callstack 0
   600   00000C                     ___xxtofl@val:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0xB
   604   00000C                     	ds	1
   605   00000D                     ___fladd@signs:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0xC
   609   00000D                     	ds	1
   610   00000E                     setMotorPWM@m:
   611                           	callstack 0
   612   00000E                     ___fladd@aexp:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0xD
   616   00000E                     	ds	1
   617   00000F                     ??_setMotorPWM:
   618   00000F                     ___fladd@bexp:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0xE
   622   00000F                     	ds	1
   623   000010                     ??___xxtofl:
   624   000010                     ___fladd@grs:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0xF
   628   000010                     	ds	1
   629   000011                     setMotorPWM@posDuty:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x10
   633   000011                     	ds	1
   634   000012                     setMotorPWM@negDuty:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x11
   638   000012                     	ds	1
   639   000013                     forward@mL:
   640                           	callstack 0
   641   000013                     backward@mL:
   642                           	callstack 0
   643   000013                     leftTURN@mL:
   644                           	callstack 0
   645   000013                     rightTURN@mL:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x12
   649   000013                     	ds	1
   650   000014                     forward@mR:
   651                           	callstack 0
   652   000014                     backward@mR:
   653                           	callstack 0
   654   000014                     leftTURN@mR:
   655                           	callstack 0
   656   000014                     rightTURN@mR:
   657                           	callstack 0
   658   000014                     ___xxtofl@sign:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x13
   662   000014                     	ds	1
   663   000015                     ??_rightTURN:
   664   000015                     ??_leftTURN:
   665   000015                     ??_forward:
   666   000015                     ??_backward:
   667   000015                     ___xxtofl@exp:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x14
   671   000015                     	ds	1
   672   000016                     ___xxtofl@arg:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x15
   676   000016                     	ds	2
   677   000018                     forward@Distance_Calibration:
   678                           	callstack 0
   679   000018                     backward@Distance_Calibration:
   680                           	callstack 0
   681   000018                     leftTURN@rotation_calibration:
   682                           	callstack 0
   683   000018                     rightTURN@rotation_calibration:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x17
   687   000018                     	ds	1
   688   000019                     forward@i:
   689                           	callstack 0
   690   000019                     backward@i:
   691                           	callstack 0
   692   000019                     leftTURN@i:
   693                           	callstack 0
   694   000019                     rightTURN@i:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x18
   698   000019                     	ds	1
   699   00001A                     ?___flsub:
   700                           	callstack 0
   701   00001A                     ___flsub@b:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x19
   705   00001A                     	ds	1
   706   00001B                     forward@j:
   707                           	callstack 0
   708   00001B                     backward@j:
   709                           	callstack 0
   710   00001B                     leftTURN@j:
   711                           	callstack 0
   712   00001B                     rightTURN@j:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x1A
   716   00001B                     	ds	2
   717   00001D                     forward@max_power:
   718                           	callstack 0
   719   00001D                     backward@max_power:
   720                           	callstack 0
   721   00001D                     leftTURN@max_power:
   722                           	callstack 0
   723   00001D                     rightTURN@max_power:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x1C
   727   00001D                     	ds	1
   728   00001E                     ___flsub@a:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x1D
   732   00001E                     	ds	1
   733   00001F                     forward@delay_time:
   734                           	callstack 0
   735   00001F                     backward@delay_time:
   736                           	callstack 0
   737   00001F                     leftTURN@delay_time:
   738                           	callstack 0
   739   00001F                     rightTURN@delay_time:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x1E
   743   00001F                     	ds	2
   744   000021                     calibration_routine@c:
   745                           	callstack 0
   746   000021                     maze_return@c:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x20
   750   000021                     	ds	1
   751   000022                     ?___fldiv:
   752                           	callstack 0
   753   000022                     ___fldiv@b:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x21
   757   000022                     	ds	1
   758   000023                     calibration_routine@mL:
   759                           	callstack 0
   760   000023                     maze_return@mL:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x22
   764   000023                     	ds	1
   765   000024                     calibration_routine@mR:
   766                           	callstack 0
   767   000024                     maze_return@mR:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x23
   771   000024                     	ds	1
   772   000025                     ??_maze_return:
   773   000025                     
   774                           ; 1 bytes @ 0x24
   775   000025                     	ds	1
   776   000026                     ___fldiv@a:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x25
   780   000026                     	ds	2
   781   000028                     maze_return@distance_back:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x27
   785   000028                     	ds	1
   786   000029                     maze_return@j:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x28
   790   000029                     	ds	1
   791   00002A                     ??___fldiv:
   792                           
   793                           ; 1 bytes @ 0x29
   794   00002A                     	ds	1
   795   00002B                     maze_return@i_1876:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x2A
   799   00002B                     	ds	2
   800   00002D                     maze_return@i:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x2C
   804   00002D                     	ds	1
   805   00002E                     ___fldiv@rem:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x2D
   809   00002E                     	ds	4
   810   000032                     ___fldiv@sign:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x31
   814   000032                     	ds	1
   815   000033                     ___fldiv@new_exp:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x32
   819   000033                     	ds	2
   820   000035                     ___fldiv@grs:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x34
   824   000035                     	ds	4
   825   000039                     ___fldiv@bexp:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x38
   829   000039                     	ds	1
   830   00003A                     ___fldiv@aexp:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x39
   834   00003A                     	ds	1
   835   00003B                     ?___flmul:
   836                           	callstack 0
   837   00003B                     ___flmul@b:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x3A
   841   00003B                     	ds	4
   842   00003F                     ___flmul@a:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x3E
   846   00003F                     	ds	4
   847   000043                     ??___flmul:
   848                           
   849                           ; 1 bytes @ 0x42
   850   000043                     	ds	4
   851   000047                     ___flmul@sign:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x46
   855   000047                     	ds	1
   856   000048                     ___flmul@aexp:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x47
   860   000048                     	ds	1
   861   000049                     ___flmul@grs:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x48
   865   000049                     	ds	4
   866   00004D                     ___flmul@bexp:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x4C
   870   00004D                     	ds	1
   871   00004E                     ___flmul@prod:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x4D
   875   00004E                     	ds	4
   876   000052                     ___flmul@temp:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x51
   880   000052                     	ds	2
   881   000054                     ?_custom_floatmodulo:
   882                           	callstack 0
   883   000054                     custom_floatmodulo@x:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x53
   887   000054                     	ds	4
   888   000058                     custom_floatmodulo@y:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x57
   892   000058                     	ds	4
   893   00005C                     ?_color_cardCheck:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x5B
   897   00005C                     	ds	2
   898   00005E                     ??_maze_search:
   899   00005E                     
   900                           ; 1 bytes @ 0x5D
   901   00005E                     	ds	2
   902   000060                     
   903                           ; 1 bytes @ 0x5F
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 20 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  PWMperiod       2    0        unsigned int 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels required when called: 6
   929 ;; This function calls:
   930 ;;		_calibration_routine
   931 ;;		_initDCmotorsPWM
   932 ;;		_maze_return
   933 ;;		_maze_search
   934 ;;		_pause_until_RF2_pressed
   935 ;; This function is called by:
   936 ;;		Startup code after reset
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text0
   941   00465A                     __ptext0:
   942                           	callstack 0
   943   00465A                     _main:
   944                           	callstack 25
   945   00465A                     
   946                           ;main.c: 24:     initDCmotorsPWM(PWMperiod);
   947   00465A  0E00               	movlw	0
   948   00465C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   949   00465E  0E63               	movlw	99
   950   004660  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   951   004662  ECA9  F024         	call	_initDCmotorsPWM	;wreg free
   952   004666                     
   953                           ;main.c: 28:     TRISDbits.TRISD7 = 0;
   954   004666  9E84               	bcf	132,7,c	;volatile
   955   004668                     
   956                           ;main.c: 29:     LATDbits.LATD7 = 0;
   957   004668  9E7C               	bcf	124,7,c	;volatile
   958   00466A                     
   959                           ;main.c: 31:     TRISHbits.TRISH3 = 0;
   960   00466A  9688               	bcf	136,3,c	;volatile
   961   00466C                     
   962                           ;main.c: 32:     LATHbits.LATH3 = 0;
   963   00466C  9680               	bcf	128,3,c	;volatile
   964   00466E                     
   965                           ;main.c: 34:     TRISFbits.TRISF2=1;
   966   00466E  8486               	bsf	134,2,c	;volatile
   967   004670                     
   968                           ;main.c: 35:     ANSELFbits.ANSELF2=0;
   969   004670  010E               	movlb	14	; () banked
   970   004672  95B4               	bcf	180,2,b	;volatile
   971   004674                     
   972                           ; BSR set to: 14
   973                           ;main.c: 37:     TRISFbits.TRISF3=1;
   974   004674  8686               	bsf	134,3,c	;volatile
   975   004676                     
   976                           ; BSR set to: 14
   977                           ;main.c: 38:     ANSELFbits.ANSELF3=0;
   978   004676  97B4               	bcf	180,3,b	;volatile
   979   004678                     
   980                           ; BSR set to: 14
   981                           ;main.c: 42:     motorL.power=0;
   982   004678  0E00               	movlw	0
   983   00467A  0100               	movlb	0	; () banked
   984   00467C  6FF4               	movwf	_motorL& (0+255),b
   985   00467E                     
   986                           ; BSR set to: 0
   987                           ;main.c: 43:     motorL.direction=1;
   988   00467E  0E01               	movlw	1
   989   004680  6FF5               	movwf	(_motorL+1)& (0+255),b
   990   004682                     
   991                           ; BSR set to: 0
   992                           ;main.c: 44:     motorL.brakemode=1;
   993   004682  0E01               	movlw	1
   994   004684  6FF6               	movwf	(_motorL+2)& (0+255),b
   995   004686                     
   996                           ; BSR set to: 0
   997                           ;main.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   998   004686  0EAA               	movlw	170
   999   004688  6FF9               	movwf	(_motorL+5)& (0+255),b
  1000   00468A  0E0F               	movlw	15
  1001   00468C  6FFA               	movwf	(_motorL+6)& (0+255),b
  1002   00468E                     
  1003                           ; BSR set to: 0
  1004                           ;main.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1005   00468E  0EA6               	movlw	166
  1006   004690  6FFB               	movwf	(_motorL+7)& (0+255),b
  1007   004692  0E0F               	movlw	15
  1008   004694  6FFC               	movwf	(_motorL+8)& (0+255),b
  1009   004696                     
  1010                           ; BSR set to: 0
  1011                           ;main.c: 47:     motorL.PWMperiod=PWMperiod;
  1012   004696  0E00               	movlw	0
  1013   004698  6FF8               	movwf	(_motorL+4)& (0+255),b
  1014   00469A  0E63               	movlw	99
  1015   00469C  6FF7               	movwf	(_motorL+3)& (0+255),b
  1016   00469E                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 49:     motorR.power=0;
  1019   00469E  0E00               	movlw	0
  1020   0046A0  6FEB               	movwf	_motorR& (0+255),b
  1021   0046A2                     
  1022                           ; BSR set to: 0
  1023                           ;main.c: 50:     motorR.direction=1;
  1024   0046A2  0E01               	movlw	1
  1025   0046A4  6FEC               	movwf	(_motorR+1)& (0+255),b
  1026   0046A6                     
  1027                           ; BSR set to: 0
  1028                           ;main.c: 51:     motorR.brakemode=1;
  1029   0046A6  0E01               	movlw	1
  1030   0046A8  6FED               	movwf	(_motorR+2)& (0+255),b
  1031   0046AA                     
  1032                           ; BSR set to: 0
  1033                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1034   0046AA  0E25               	movlw	37
  1035   0046AC  6FF0               	movwf	(_motorR+5)& (0+255),b
  1036   0046AE  0E0F               	movlw	15
  1037   0046B0  6FF1               	movwf	(_motorR+6)& (0+255),b
  1038   0046B2                     
  1039                           ; BSR set to: 0
  1040                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1041   0046B2  0E21               	movlw	33
  1042   0046B4  6FF2               	movwf	(_motorR+7)& (0+255),b
  1043   0046B6  0E0F               	movlw	15
  1044   0046B8  6FF3               	movwf	(_motorR+8)& (0+255),b
  1045   0046BA                     
  1046                           ; BSR set to: 0
  1047                           ;main.c: 54:     motorR.PWMperiod=PWMperiod;
  1048   0046BA  0E00               	movlw	0
  1049   0046BC  6FEF               	movwf	(_motorR+4)& (0+255),b
  1050   0046BE  0E63               	movlw	99
  1051   0046C0  6FEE               	movwf	(_motorR+3)& (0+255),b
  1052   0046C2                     
  1053                           ; BSR set to: 0
  1054                           ;main.c: 58:     calibration.index = 1;
  1055   0046C2  0E01               	movlw	1
  1056   0046C4  0101               	movlb	1	; () banked
  1057   0046C6  6F82               	movwf	_calibration& (0+255),b
  1058   0046C8                     
  1059                           ; BSR set to: 1
  1060                           ;main.c: 61:     calibration.right_90 = 25;
  1061   0046C8  0E19               	movlw	25
  1062   0046CA  6F83               	movwf	(_calibration+1)& (0+255),b
  1063   0046CC                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 62:     calibration.left_90 = 25;
  1066   0046CC  0E19               	movlw	25
  1067   0046CE  6F84               	movwf	(_calibration+2)& (0+255),b
  1068   0046D0                     
  1069                           ; BSR set to: 1
  1070                           ;main.c: 64:     calibration.right_135 = 40;
  1071   0046D0  0E28               	movlw	40
  1072   0046D2  6F85               	movwf	(_calibration+3)& (0+255),b
  1073   0046D4                     
  1074                           ; BSR set to: 1
  1075                           ;main.c: 65:     calibration.left_135 = 40;
  1076   0046D4  0E28               	movlw	40
  1077   0046D6  6F86               	movwf	(_calibration+4)& (0+255),b
  1078   0046D8                     
  1079                           ; BSR set to: 1
  1080                           ;main.c: 67:     calibration.forward_one = 100;
  1081   0046D8  0E64               	movlw	100
  1082   0046DA  6F87               	movwf	(_calibration+5)& (0+255),b
  1083   0046DC                     
  1084                           ; BSR set to: 1
  1085                           ;main.c: 68:     calibration.backward_one = 100;
  1086   0046DC  0E64               	movlw	100
  1087   0046DE  6F88               	movwf	(_calibration+6)& (0+255),b
  1088   0046E0                     
  1089                           ; BSR set to: 1
  1090                           ;main.c: 70:     calibration.forward_half = 33;
  1091   0046E0  0E21               	movlw	33
  1092   0046E2  6F89               	movwf	(_calibration+7)& (0+255),b
  1093   0046E4                     
  1094                           ; BSR set to: 1
  1095                           ;main.c: 71:     calibration.backward_half = 33;
  1096   0046E4  0E21               	movlw	33
  1097   0046E6  6F8A               	movwf	(_calibration+8)& (0+255),b
  1098   0046E8                     l6152:
  1099                           
  1100                           ;main.c: 80:         pause_until_RF2_pressed();
  1101   0046E8  EC2D  F025         	call	_pause_until_RF2_pressed	;wreg free
  1102   0046EC                     
  1103                           ;main.c: 82:         calibration_routine(&calibration, &motorL, &motorR);
  1104   0046EC  0E82               	movlw	low _calibration
  1105   0046EE  6E21               	movwf	calibration_routine@c^0,c
  1106   0046F0  0E01               	movlw	high _calibration
  1107   0046F2  6E22               	movwf	(calibration_routine@c+1)^0,c
  1108   0046F4  0EF4               	movlw	low _motorL
  1109   0046F6  6E23               	movwf	calibration_routine@mL^0,c
  1110   0046F8  0EEB               	movlw	low _motorR
  1111   0046FA  6E24               	movwf	calibration_routine@mR^0,c
  1112   0046FC  EC1F  F01B         	call	_calibration_routine	;wreg free
  1113   004700                     
  1114                           ;main.c: 84:         maze_search(&calibration, &motorL, &motorR);
  1115   004700  0E82               	movlw	low _calibration
  1116   004702  0100               	movlb	0	; () banked
  1117   004704  6FDF               	movwf	maze_search@c& (0+255),b
  1118   004706  0E01               	movlw	high _calibration
  1119   004708  6FE0               	movwf	(maze_search@c+1)& (0+255),b
  1120   00470A  0EF4               	movlw	low _motorL
  1121   00470C  6FE1               	movwf	maze_search@mL& (0+255),b
  1122   00470E  0EEB               	movlw	low _motorR
  1123   004710  6FE2               	movwf	maze_search@mR& (0+255),b
  1124   004712  ECFE  F00F         	call	_maze_search	;wreg free
  1125   004716                     
  1126                           ;main.c: 86:         maze_return(&calibration, &motorL, &motorR);
  1127   004716  0E82               	movlw	low _calibration
  1128   004718  6E21               	movwf	maze_return@c^0,c
  1129   00471A  0E01               	movlw	high _calibration
  1130   00471C  6E22               	movwf	(maze_return@c+1)^0,c
  1131   00471E  0EF4               	movlw	low _motorL
  1132   004720  6E23               	movwf	maze_return@mL^0,c
  1133   004722  0EEB               	movlw	low _motorR
  1134   004724  6E24               	movwf	maze_return@mR^0,c
  1135   004726  ECDE  F014         	call	_maze_return	;wreg free
  1136   00472A  EF74  F023         	goto	l6152
  1137   00472E  EF00  F000         	goto	start
  1138   004732                     __end_of_main:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _pause_until_RF2_pressed *****************
  1142 ;; Defined at:
  1143 ;;		line 6 in file "calibration.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;		None
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;Total ram usage:        2 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text1
  1171   004A5A                     __ptext1:
  1172                           	callstack 0
  1173   004A5A                     _pause_until_RF2_pressed:
  1174                           	callstack 30
  1175   004A5A                     l178:
  1176                           
  1177                           ;calibration.c: 12:         LATDbits.LATD7 = 1;
  1178   004A5A  8E7C               	bsf	124,7,c	;volatile
  1179   004A5C                     
  1180                           ;calibration.c: 13:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1181   004A5C  0E09               	movlw	9
  1182   004A5E  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1183   004A60  0E1E               	movlw	30
  1184   004A62  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1185   004A64  0EE4               	movlw	228
  1186   004A66                     u7617:
  1187   004A66  2EE8               	decfsz	wreg,f,c
  1188   004A68  D7FE               	bra	u7617
  1189   004A6A  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1190   004A6C  D7FC               	bra	u7617
  1191   004A6E  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1192   004A70  D7FA               	bra	u7617
  1193   004A72  D000               	nop2	
  1194   004A74                     
  1195                           ;calibration.c: 14:         LATDbits.LATD7 = 0;
  1196   004A74  9E7C               	bcf	124,7,c	;volatile
  1197                           
  1198                           ;calibration.c: 15:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1199   004A76  0E09               	movlw	9
  1200   004A78  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1201   004A7A  0E1E               	movlw	30
  1202   004A7C  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1203   004A7E  0EE4               	movlw	228
  1204   004A80                     u7627:
  1205   004A80  2EE8               	decfsz	wreg,f,c
  1206   004A82  D7FE               	bra	u7627
  1207   004A84  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1208   004A86  D7FC               	bra	u7627
  1209   004A88  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1210   004A8A  D7FA               	bra	u7627
  1211   004A8C  D000               	nop2	
  1212   004A8E                     
  1213                           ;calibration.c: 17:         if(!PORTFbits.RF2){
  1214   004A8E  B48E               	btfsc	142,2,c	;volatile
  1215   004A90  EF4C  F025         	goto	u4711
  1216   004A94  EF4E  F025         	goto	u4710
  1217   004A98                     u4711:
  1218   004A98  EF2D  F025         	goto	l178
  1219   004A9C                     u4710:
  1220   004A9C                     
  1221                           ;calibration.c: 18:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1222   004A9C  0E11               	movlw	17
  1223   004A9E  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1224   004AA0  0E3C               	movlw	60
  1225   004AA2  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1226   004AA4  0ECB               	movlw	203
  1227   004AA6                     u7637:
  1228   004AA6  2EE8               	decfsz	wreg,f,c
  1229   004AA8  D7FE               	bra	u7637
  1230   004AAA  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1231   004AAC  D7FC               	bra	u7637
  1232   004AAE  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1233   004AB0  D7FA               	bra	u7637
  1234   004AB2  0000               	nop	
  1235   004AB4                     
  1236                           ;calibration.c: 19:         LATDbits.LATD7 = 0;
  1237   004AB4  9E7C               	bcf	124,7,c	;volatile
  1238   004AB6  0012               	return		;funcret
  1239   004AB8                     __end_of_pause_until_RF2_pressed:
  1240                           	callstack 0
  1241                           
  1242 ;; *************** function _maze_search *****************
  1243 ;; Defined at:
  1244 ;;		line 6 in file "pathfinder_file.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;  c               2  127[BANK0 ] PTR struct calibration_s
  1247 ;;		 -> calibration(9), 
  1248 ;;  mL              1  129[BANK0 ] PTR struct DC_motor
  1249 ;;		 -> motorL(9), 
  1250 ;;  mR              1  130[BANK0 ] PTR struct DC_motor
  1251 ;;		 -> motorR(9), 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  i               2    0[BANK1 ] int 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Totals:         2       4       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;Total ram usage:        8 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 5
  1270 ;; This function calls:
  1271 ;;		_backward
  1272 ;;		_color_cardCheck
  1273 ;;		_color_click_init
  1274 ;;		_forward
  1275 ;;		_leftTURN
  1276 ;;		_rightTURN
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text2
  1283   001FFC                     __ptext2:
  1284                           	callstack 0
  1285   001FFC                     _maze_search:
  1286                           	callstack 25
  1287   001FFC                     
  1288                           ;pathfinder_file.c: 9:     color_click_init();
  1289   001FFC  EC40  F026         	call	_color_click_init	;wreg free
  1290   002000                     l5888:
  1291                           
  1292                           ;pathfinder_file.c: 13:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1293   002000  0E29               	movlw	41
  1294   002002  6E5F               	movwf	(??_maze_search+1)^0,c
  1295   002004  0E96               	movlw	150
  1296   002006  6E5E               	movwf	??_maze_search^0,c
  1297   002008  0E7F               	movlw	127
  1298   00200A                     u7647:
  1299   00200A  2EE8               	decfsz	wreg,f,c
  1300   00200C  D7FE               	bra	u7647
  1301   00200E  2E5E               	decfsz	??_maze_search^0,f,c
  1302   002010  D7FC               	bra	u7647
  1303   002012  2E5F               	decfsz	(??_maze_search+1)^0,f,c
  1304   002014  D7FA               	bra	u7647
  1305   002016  0000               	nop	
  1306   002018                     
  1307                           ;pathfinder_file.c: 14:         LATHbits.LATH3 = 1;
  1308   002018  8680               	bsf	128,3,c	;volatile
  1309   00201A                     
  1310                           ;pathfinder_file.c: 15:         LATDbits.LATD7 = 1;
  1311   00201A  8E7C               	bsf	124,7,c	;volatile
  1312   00201C                     
  1313                           ;pathfinder_file.c: 18:         forward(c->forward_one, mL, mR);
  1314   00201C  C0E1  F013         	movff	maze_search@mL,forward@mL
  1315   002020  C0E2  F014         	movff	maze_search@mR,forward@mR
  1316   002024  0100               	movlb	0	; () banked
  1317   002026  EE20 F005          	lfsr	2,5
  1318   00202A  51DF               	movf	maze_search@c& (0+255),w,b
  1319   00202C  26D9               	addwf	fsr2l,f,c
  1320   00202E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1321   002030  22DA               	addwfc	fsr2h,f,c
  1322   002032  50DF               	movf	indf2,w,c
  1323   002034  EC4B  F01D         	call	_forward
  1324   002038                     
  1325                           ;pathfinder_file.c: 19:         Forward_Count++;
  1326   002038  0100               	movlb	0	; () banked
  1327   00203A  2BE5               	incf	_Forward_Count& (0+255),f,b
  1328   00203C                     
  1329                           ; BSR set to: 0
  1330                           ;pathfinder_file.c: 20:         Color_Value = color_cardCheck();
  1331   00203C  EC01  F007         	call	_color_cardCheck	;wreg free
  1332   002040  C05C  F0E3         	movff	?_color_cardCheck,_Color_Value
  1333   002044  C05D  F0E4         	movff	?_color_cardCheck+1,_Color_Value+1
  1334   002048                     
  1335                           ;pathfinder_file.c: 22:         LATHbits.LATH3 = 0;
  1336   002048  9680               	bcf	128,3,c	;volatile
  1337   00204A                     
  1338                           ;pathfinder_file.c: 23:         LATDbits.LATD7 = 0;
  1339   00204A  9E7C               	bcf	124,7,c	;volatile
  1340   00204C  0E0F               	movlw	15
  1341   00204E  0100               	movlb	0	; () banked
  1342   002050  65E5               	cpfsgt	_Forward_Count& (0+255),b
  1343   002052  EF2D  F010         	goto	u7351
  1344   002056  EF2F  F010         	goto	u7350
  1345   00205A                     u7351:
  1346   00205A  EF9C  F010         	goto	l5918
  1347   00205E                     u7350:
  1348   00205E                     
  1349                           ; BSR set to: 0
  1350                           ;pathfinder_file.c: 29:             backward(c->backward_half, mL, mR);
  1351   00205E  C0E1  F013         	movff	maze_search@mL,backward@mL
  1352   002062  C0E2  F014         	movff	maze_search@mR,backward@mR
  1353   002066  EE20 F008          	lfsr	2,8
  1354   00206A  51DF               	movf	maze_search@c& (0+255),w,b
  1355   00206C  26D9               	addwf	fsr2l,f,c
  1356   00206E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1357   002070  22DA               	addwfc	fsr2h,f,c
  1358   002072  50DF               	movf	indf2,w,c
  1359   002074  EC89  F01F         	call	_backward
  1360                           
  1361                           ;pathfinder_file.c: 30:             rightTURN(c->right_90, mL, mR);
  1362   002078  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1363   00207C  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1364   002080  0100               	movlb	0	; () banked
  1365   002082  EE20 F001          	lfsr	2,1
  1366   002086  51DF               	movf	maze_search@c& (0+255),w,b
  1367   002088  26D9               	addwf	fsr2l,f,c
  1368   00208A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1369   00208C  22DA               	addwfc	fsr2h,f,c
  1370   00208E  50DF               	movf	indf2,w,c
  1371   002090  EC0B  F01E         	call	_rightTURN
  1372                           
  1373                           ;pathfinder_file.c: 31:             rightTURN(c->right_90, mL, mR);
  1374   002094  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1375   002098  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1376   00209C  0100               	movlb	0	; () banked
  1377   00209E  EE20 F001          	lfsr	2,1
  1378   0020A2  51DF               	movf	maze_search@c& (0+255),w,b
  1379   0020A4  26D9               	addwf	fsr2l,f,c
  1380   0020A6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1381   0020A8  22DA               	addwfc	fsr2h,f,c
  1382   0020AA  50DF               	movf	indf2,w,c
  1383   0020AC  EC0B  F01E         	call	_rightTURN
  1384                           
  1385                           ;pathfinder_file.c: 32:             backward(c->backward_one, mL, mR);
  1386   0020B0  C0E1  F013         	movff	maze_search@mL,backward@mL
  1387   0020B4  C0E2  F014         	movff	maze_search@mR,backward@mR
  1388   0020B8  0100               	movlb	0	; () banked
  1389   0020BA  EE20 F006          	lfsr	2,6
  1390   0020BE  51DF               	movf	maze_search@c& (0+255),w,b
  1391   0020C0  26D9               	addwf	fsr2l,f,c
  1392   0020C2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1393   0020C4  22DA               	addwfc	fsr2h,f,c
  1394   0020C6  50DF               	movf	indf2,w,c
  1395   0020C8  EC89  F01F         	call	_backward
  1396   0020CC                     
  1397                           ;pathfinder_file.c: 33:             for (int i = 0; i < forward_reset_threshold; i++) {
  1398   0020CC  0E00               	movlw	0
  1399   0020CE  0101               	movlb	1	; () banked
  1400   0020D0  6F8C               	movwf	(maze_search@i+1)& (0+255),b
  1401   0020D2  0E00               	movlw	0
  1402   0020D4  6F8B               	movwf	maze_search@i& (0+255),b
  1403   0020D6  EF7E  F010         	goto	l5914
  1404   0020DA                     l5910:
  1405                           
  1406                           ; BSR set to: 1
  1407                           ;pathfinder_file.c: 34:                  forward(c->forward_one, mL, mR);
  1408   0020DA  C0E1  F013         	movff	maze_search@mL,forward@mL
  1409   0020DE  C0E2  F014         	movff	maze_search@mR,forward@mR
  1410   0020E2  0100               	movlb	0	; () banked
  1411   0020E4  EE20 F005          	lfsr	2,5
  1412   0020E8  51DF               	movf	maze_search@c& (0+255),w,b
  1413   0020EA  26D9               	addwf	fsr2l,f,c
  1414   0020EC  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1415   0020EE  22DA               	addwfc	fsr2h,f,c
  1416   0020F0  50DF               	movf	indf2,w,c
  1417   0020F2  EC4B  F01D         	call	_forward
  1418   0020F6                     
  1419                           ;pathfinder_file.c: 36:             }
  1420   0020F6  0101               	movlb	1	; () banked
  1421   0020F8  4B8B               	infsnz	maze_search@i& (0+255),f,b
  1422   0020FA  2B8C               	incf	(maze_search@i+1)& (0+255),f,b
  1423   0020FC                     l5914:
  1424                           
  1425                           ; BSR set to: 1
  1426   0020FC  BF8C               	btfsc	(maze_search@i+1)& (0+255),7,b
  1427   0020FE  EF8A  F010         	goto	u7361
  1428   002102  518C               	movf	(maze_search@i+1)& (0+255),w,b
  1429   002104  E109               	bnz	u7360
  1430   002106  0E0F               	movlw	15
  1431   002108  5D8B               	subwf	maze_search@i& (0+255),w,b
  1432   00210A  A0D8               	btfss	status,0,c
  1433   00210C  EF8A  F010         	goto	u7361
  1434   002110  EF8C  F010         	goto	u7360
  1435   002114                     u7361:
  1436   002114  EF6D  F010         	goto	l5910
  1437   002118                     u7360:
  1438   002118                     
  1439                           ; BSR set to: 1
  1440                           ;pathfinder_file.c: 37:             backward(c->backward_half, mL, mR);
  1441   002118  C0E1  F013         	movff	maze_search@mL,backward@mL
  1442   00211C  C0E2  F014         	movff	maze_search@mR,backward@mR
  1443   002120  0100               	movlb	0	; () banked
  1444   002122  EE20 F008          	lfsr	2,8
  1445   002126  51DF               	movf	maze_search@c& (0+255),w,b
  1446   002128  26D9               	addwf	fsr2l,f,c
  1447   00212A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1448   00212C  22DA               	addwfc	fsr2h,f,c
  1449   00212E  50DF               	movf	indf2,w,c
  1450   002130  EC89  F01F         	call	_backward
  1451                           
  1452                           ;pathfinder_file.c: 38:             break;
  1453   002134  EF7D  F012         	goto	l484
  1454   002138                     l5918:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;pathfinder_file.c: 41:         if(Color_Value != 0){
  1458   002138  51E3               	movf	_Color_Value& (0+255),w,b
  1459   00213A  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1460   00213C  B4D8               	btfsc	status,2,c
  1461   00213E  EFA3  F010         	goto	u7371
  1462   002142  EFA5  F010         	goto	u7370
  1463   002146                     u7371:
  1464   002146  EF00  F010         	goto	l5888
  1465   00214A                     u7370:
  1466   00214A                     
  1467                           ; BSR set to: 0
  1468                           ;pathfinder_file.c: 43:             Operation_History[Operation_Count] = Forward_Count +
      +                           10;
  1469   00214A  0E3C               	movlw	low _Operation_History
  1470   00214C  25E6               	addwf	_Operation_Count& (0+255),w,b
  1471   00214E  6ED9               	movwf	fsr2l,c
  1472   002150  6ADA               	clrf	fsr2h,c
  1473   002152  0E01               	movlw	high _Operation_History
  1474   002154  22DA               	addwfc	fsr2h,f,c
  1475   002156  51E5               	movf	_Forward_Count& (0+255),w,b
  1476   002158  0F0A               	addlw	10
  1477   00215A  6EDF               	movwf	indf2,c
  1478   00215C                     
  1479                           ; BSR set to: 0
  1480                           ;pathfinder_file.c: 44:             Forward_Count = 0;
  1481   00215C  0E00               	movlw	0
  1482   00215E  6FE5               	movwf	_Forward_Count& (0+255),b
  1483   002160                     
  1484                           ; BSR set to: 0
  1485                           ;pathfinder_file.c: 45:             Operation_Count++;
  1486   002160  2BE6               	incf	_Operation_Count& (0+255),f,b
  1487   002162                     
  1488                           ; BSR set to: 0
  1489                           ;pathfinder_file.c: 47:             if(Color_Value == 1){
  1490   002162  05E3               	decf	_Color_Value& (0+255),w,b
  1491   002164  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1492   002166  A4D8               	btfss	status,2,c
  1493   002168  EFB8  F010         	goto	u7381
  1494   00216C  EFBA  F010         	goto	u7380
  1495   002170                     u7381:
  1496   002170  EFE0  F010         	goto	l5936
  1497   002174                     u7380:
  1498   002174                     
  1499                           ; BSR set to: 0
  1500                           ;pathfinder_file.c: 48:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1501   002174  0E3C               	movlw	low _Operation_History
  1502   002176  25E6               	addwf	_Operation_Count& (0+255),w,b
  1503   002178  6ED9               	movwf	fsr2l,c
  1504   00217A  6ADA               	clrf	fsr2h,c
  1505   00217C  0E01               	movlw	high _Operation_History
  1506   00217E  22DA               	addwfc	fsr2h,f,c
  1507   002180  C0E3  FFDF         	movff	_Color_Value,indf2
  1508   002184                     
  1509                           ; BSR set to: 0
  1510                           ;pathfinder_file.c: 49:                 Operation_Count++;
  1511   002184  2BE6               	incf	_Operation_Count& (0+255),f,b
  1512   002186                     
  1513                           ; BSR set to: 0
  1514                           ;pathfinder_file.c: 50:                 backward(c->backward_half, mL, mR);
  1515   002186  C0E1  F013         	movff	maze_search@mL,backward@mL
  1516   00218A  C0E2  F014         	movff	maze_search@mR,backward@mR
  1517   00218E  EE20 F008          	lfsr	2,8
  1518   002192  51DF               	movf	maze_search@c& (0+255),w,b
  1519   002194  26D9               	addwf	fsr2l,f,c
  1520   002196  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1521   002198  22DA               	addwfc	fsr2h,f,c
  1522   00219A  50DF               	movf	indf2,w,c
  1523   00219C  EC89  F01F         	call	_backward
  1524   0021A0                     
  1525                           ;pathfinder_file.c: 51:                 rightTURN(c->right_90, mL, mR);
  1526   0021A0  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1527   0021A4  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1528   0021A8  0100               	movlb	0	; () banked
  1529   0021AA  EE20 F001          	lfsr	2,1
  1530   0021AE  51DF               	movf	maze_search@c& (0+255),w,b
  1531   0021B0  26D9               	addwf	fsr2l,f,c
  1532   0021B2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1533   0021B4  22DA               	addwfc	fsr2h,f,c
  1534   0021B6  50DF               	movf	indf2,w,c
  1535   0021B8  EC0B  F01E         	call	_rightTURN
  1536                           
  1537                           ;pathfinder_file.c: 52:             }
  1538   0021BC  EF00  F010         	goto	l5888
  1539   0021C0                     l5936:
  1540                           
  1541                           ; BSR set to: 0
  1542   0021C0  0E02               	movlw	2
  1543   0021C2  19E3               	xorwf	_Color_Value& (0+255),w,b
  1544   0021C4  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1545   0021C6  A4D8               	btfss	status,2,c
  1546   0021C8  EFE8  F010         	goto	u7391
  1547   0021CC  EFEA  F010         	goto	u7390
  1548   0021D0                     u7391:
  1549   0021D0  EF10  F011         	goto	l5946
  1550   0021D4                     u7390:
  1551   0021D4                     
  1552                           ; BSR set to: 0
  1553                           ;pathfinder_file.c: 55:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1554   0021D4  0E3C               	movlw	low _Operation_History
  1555   0021D6  25E6               	addwf	_Operation_Count& (0+255),w,b
  1556   0021D8  6ED9               	movwf	fsr2l,c
  1557   0021DA  6ADA               	clrf	fsr2h,c
  1558   0021DC  0E01               	movlw	high _Operation_History
  1559   0021DE  22DA               	addwfc	fsr2h,f,c
  1560   0021E0  C0E3  FFDF         	movff	_Color_Value,indf2
  1561   0021E4                     
  1562                           ; BSR set to: 0
  1563                           ;pathfinder_file.c: 56:                 Operation_Count++;
  1564   0021E4  2BE6               	incf	_Operation_Count& (0+255),f,b
  1565   0021E6                     
  1566                           ; BSR set to: 0
  1567                           ;pathfinder_file.c: 57:                 backward(c->backward_half, mL, mR);
  1568   0021E6  C0E1  F013         	movff	maze_search@mL,backward@mL
  1569   0021EA  C0E2  F014         	movff	maze_search@mR,backward@mR
  1570   0021EE  EE20 F008          	lfsr	2,8
  1571   0021F2  51DF               	movf	maze_search@c& (0+255),w,b
  1572   0021F4  26D9               	addwf	fsr2l,f,c
  1573   0021F6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1574   0021F8  22DA               	addwfc	fsr2h,f,c
  1575   0021FA  50DF               	movf	indf2,w,c
  1576   0021FC  EC89  F01F         	call	_backward
  1577   002200                     
  1578                           ;pathfinder_file.c: 58:                 leftTURN(c->left_90, mL, mR);
  1579   002200  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1580   002204  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1581   002208  0100               	movlb	0	; () banked
  1582   00220A  EE20 F002          	lfsr	2,2
  1583   00220E  51DF               	movf	maze_search@c& (0+255),w,b
  1584   002210  26D9               	addwf	fsr2l,f,c
  1585   002212  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1586   002214  22DA               	addwfc	fsr2h,f,c
  1587   002216  50DF               	movf	indf2,w,c
  1588   002218  ECCA  F01E         	call	_leftTURN
  1589                           
  1590                           ;pathfinder_file.c: 59:             }
  1591   00221C  EF00  F010         	goto	l5888
  1592   002220                     l5946:
  1593                           
  1594                           ; BSR set to: 0
  1595   002220  0E03               	movlw	3
  1596   002222  19E3               	xorwf	_Color_Value& (0+255),w,b
  1597   002224  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1598   002226  A4D8               	btfss	status,2,c
  1599   002228  EF18  F011         	goto	u7401
  1600   00222C  EF1A  F011         	goto	u7400
  1601   002230                     u7401:
  1602   002230  EF4E  F011         	goto	l5958
  1603   002234                     u7400:
  1604   002234                     
  1605                           ; BSR set to: 0
  1606                           ;pathfinder_file.c: 62:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1607   002234  0E3C               	movlw	low _Operation_History
  1608   002236  25E6               	addwf	_Operation_Count& (0+255),w,b
  1609   002238  6ED9               	movwf	fsr2l,c
  1610   00223A  6ADA               	clrf	fsr2h,c
  1611   00223C  0E01               	movlw	high _Operation_History
  1612   00223E  22DA               	addwfc	fsr2h,f,c
  1613   002240  C0E3  FFDF         	movff	_Color_Value,indf2
  1614   002244                     
  1615                           ; BSR set to: 0
  1616                           ;pathfinder_file.c: 63:                 Operation_Count++;
  1617   002244  2BE6               	incf	_Operation_Count& (0+255),f,b
  1618   002246                     
  1619                           ; BSR set to: 0
  1620                           ;pathfinder_file.c: 64:                 backward(c->backward_half, mL, mR);
  1621   002246  C0E1  F013         	movff	maze_search@mL,backward@mL
  1622   00224A  C0E2  F014         	movff	maze_search@mR,backward@mR
  1623   00224E  EE20 F008          	lfsr	2,8
  1624   002252  51DF               	movf	maze_search@c& (0+255),w,b
  1625   002254  26D9               	addwf	fsr2l,f,c
  1626   002256  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1627   002258  22DA               	addwfc	fsr2h,f,c
  1628   00225A  50DF               	movf	indf2,w,c
  1629   00225C  EC89  F01F         	call	_backward
  1630   002260                     
  1631                           ;pathfinder_file.c: 65:                 rightTURN(c->right_90, mL, mR);
  1632   002260  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1633   002264  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1634   002268  0100               	movlb	0	; () banked
  1635   00226A  EE20 F001          	lfsr	2,1
  1636   00226E  51DF               	movf	maze_search@c& (0+255),w,b
  1637   002270  26D9               	addwf	fsr2l,f,c
  1638   002272  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1639   002274  22DA               	addwfc	fsr2h,f,c
  1640   002276  50DF               	movf	indf2,w,c
  1641   002278  EC0B  F01E         	call	_rightTURN
  1642   00227C                     
  1643                           ;pathfinder_file.c: 66:                 rightTURN(c->right_90, mL, mR);
  1644   00227C  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1645   002280  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1646   002284  0100               	movlb	0	; () banked
  1647   002286  EE20 F001          	lfsr	2,1
  1648   00228A  51DF               	movf	maze_search@c& (0+255),w,b
  1649   00228C  26D9               	addwf	fsr2l,f,c
  1650   00228E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1651   002290  22DA               	addwfc	fsr2h,f,c
  1652   002292  50DF               	movf	indf2,w,c
  1653   002294  EC0B  F01E         	call	_rightTURN
  1654                           
  1655                           ;pathfinder_file.c: 67:             }
  1656   002298  EF00  F010         	goto	l5888
  1657   00229C                     l5958:
  1658                           
  1659                           ; BSR set to: 0
  1660   00229C  0E04               	movlw	4
  1661   00229E  19E3               	xorwf	_Color_Value& (0+255),w,b
  1662   0022A0  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1663   0022A2  A4D8               	btfss	status,2,c
  1664   0022A4  EF56  F011         	goto	u7411
  1665   0022A8  EF58  F011         	goto	u7410
  1666   0022AC                     u7411:
  1667   0022AC  EF8C  F011         	goto	l5970
  1668   0022B0                     u7410:
  1669   0022B0                     
  1670                           ; BSR set to: 0
  1671                           ;pathfinder_file.c: 70:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1672   0022B0  0E3C               	movlw	low _Operation_History
  1673   0022B2  25E6               	addwf	_Operation_Count& (0+255),w,b
  1674   0022B4  6ED9               	movwf	fsr2l,c
  1675   0022B6  6ADA               	clrf	fsr2h,c
  1676   0022B8  0E01               	movlw	high _Operation_History
  1677   0022BA  22DA               	addwfc	fsr2h,f,c
  1678   0022BC  C0E3  FFDF         	movff	_Color_Value,indf2
  1679   0022C0                     
  1680                           ; BSR set to: 0
  1681                           ;pathfinder_file.c: 71:                 Operation_Count++;
  1682   0022C0  2BE6               	incf	_Operation_Count& (0+255),f,b
  1683   0022C2                     
  1684                           ; BSR set to: 0
  1685                           ;pathfinder_file.c: 72:                 backward(c->backward_half, mL, mR);
  1686   0022C2  C0E1  F013         	movff	maze_search@mL,backward@mL
  1687   0022C6  C0E2  F014         	movff	maze_search@mR,backward@mR
  1688   0022CA  EE20 F008          	lfsr	2,8
  1689   0022CE  51DF               	movf	maze_search@c& (0+255),w,b
  1690   0022D0  26D9               	addwf	fsr2l,f,c
  1691   0022D2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1692   0022D4  22DA               	addwfc	fsr2h,f,c
  1693   0022D6  50DF               	movf	indf2,w,c
  1694   0022D8  EC89  F01F         	call	_backward
  1695   0022DC                     
  1696                           ;pathfinder_file.c: 73:                 backward(c->backward_one, mL, mR);
  1697   0022DC  C0E1  F013         	movff	maze_search@mL,backward@mL
  1698   0022E0  C0E2  F014         	movff	maze_search@mR,backward@mR
  1699   0022E4  0100               	movlb	0	; () banked
  1700   0022E6  EE20 F006          	lfsr	2,6
  1701   0022EA  51DF               	movf	maze_search@c& (0+255),w,b
  1702   0022EC  26D9               	addwf	fsr2l,f,c
  1703   0022EE  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1704   0022F0  22DA               	addwfc	fsr2h,f,c
  1705   0022F2  50DF               	movf	indf2,w,c
  1706   0022F4  EC89  F01F         	call	_backward
  1707   0022F8                     
  1708                           ;pathfinder_file.c: 74:                 rightTURN(c->right_90, mL, mR);
  1709   0022F8  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1710   0022FC  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1711   002300  0100               	movlb	0	; () banked
  1712   002302  EE20 F001          	lfsr	2,1
  1713   002306  51DF               	movf	maze_search@c& (0+255),w,b
  1714   002308  26D9               	addwf	fsr2l,f,c
  1715   00230A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1716   00230C  22DA               	addwfc	fsr2h,f,c
  1717   00230E  50DF               	movf	indf2,w,c
  1718   002310  EC0B  F01E         	call	_rightTURN
  1719                           
  1720                           ;pathfinder_file.c: 75:             }
  1721   002314  EF00  F010         	goto	l5888
  1722   002318                     l5970:
  1723                           
  1724                           ; BSR set to: 0
  1725   002318  0E05               	movlw	5
  1726   00231A  19E3               	xorwf	_Color_Value& (0+255),w,b
  1727   00231C  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1728   00231E  A4D8               	btfss	status,2,c
  1729   002320  EF94  F011         	goto	u7421
  1730   002324  EF96  F011         	goto	u7420
  1731   002328                     u7421:
  1732   002328  EFCA  F011         	goto	l5982
  1733   00232C                     u7420:
  1734   00232C                     
  1735                           ; BSR set to: 0
  1736                           ;pathfinder_file.c: 78:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1737   00232C  0E3C               	movlw	low _Operation_History
  1738   00232E  25E6               	addwf	_Operation_Count& (0+255),w,b
  1739   002330  6ED9               	movwf	fsr2l,c
  1740   002332  6ADA               	clrf	fsr2h,c
  1741   002334  0E01               	movlw	high _Operation_History
  1742   002336  22DA               	addwfc	fsr2h,f,c
  1743   002338  C0E3  FFDF         	movff	_Color_Value,indf2
  1744   00233C                     
  1745                           ; BSR set to: 0
  1746                           ;pathfinder_file.c: 79:                 Operation_Count++;
  1747   00233C  2BE6               	incf	_Operation_Count& (0+255),f,b
  1748   00233E                     
  1749                           ; BSR set to: 0
  1750                           ;pathfinder_file.c: 80:                 backward(c->backward_half, mL, mR);
  1751   00233E  C0E1  F013         	movff	maze_search@mL,backward@mL
  1752   002342  C0E2  F014         	movff	maze_search@mR,backward@mR
  1753   002346  EE20 F008          	lfsr	2,8
  1754   00234A  51DF               	movf	maze_search@c& (0+255),w,b
  1755   00234C  26D9               	addwf	fsr2l,f,c
  1756   00234E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1757   002350  22DA               	addwfc	fsr2h,f,c
  1758   002352  50DF               	movf	indf2,w,c
  1759   002354  EC89  F01F         	call	_backward
  1760   002358                     
  1761                           ;pathfinder_file.c: 81:                 backward(c->backward_one, mL, mR);
  1762   002358  C0E1  F013         	movff	maze_search@mL,backward@mL
  1763   00235C  C0E2  F014         	movff	maze_search@mR,backward@mR
  1764   002360  0100               	movlb	0	; () banked
  1765   002362  EE20 F006          	lfsr	2,6
  1766   002366  51DF               	movf	maze_search@c& (0+255),w,b
  1767   002368  26D9               	addwf	fsr2l,f,c
  1768   00236A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1769   00236C  22DA               	addwfc	fsr2h,f,c
  1770   00236E  50DF               	movf	indf2,w,c
  1771   002370  EC89  F01F         	call	_backward
  1772   002374                     
  1773                           ;pathfinder_file.c: 82:                 leftTURN(c->left_90, mL, mR);
  1774   002374  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1775   002378  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1776   00237C  0100               	movlb	0	; () banked
  1777   00237E  EE20 F002          	lfsr	2,2
  1778   002382  51DF               	movf	maze_search@c& (0+255),w,b
  1779   002384  26D9               	addwf	fsr2l,f,c
  1780   002386  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1781   002388  22DA               	addwfc	fsr2h,f,c
  1782   00238A  50DF               	movf	indf2,w,c
  1783   00238C  ECCA  F01E         	call	_leftTURN
  1784                           
  1785                           ;pathfinder_file.c: 83:             }
  1786   002390  EF00  F010         	goto	l5888
  1787   002394                     l5982:
  1788                           
  1789                           ; BSR set to: 0
  1790   002394  0E06               	movlw	6
  1791   002396  19E3               	xorwf	_Color_Value& (0+255),w,b
  1792   002398  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1793   00239A  A4D8               	btfss	status,2,c
  1794   00239C  EFD2  F011         	goto	u7431
  1795   0023A0  EFD4  F011         	goto	u7430
  1796   0023A4                     u7431:
  1797   0023A4  EFFA  F011         	goto	l5992
  1798   0023A8                     u7430:
  1799   0023A8                     
  1800                           ; BSR set to: 0
  1801                           ;pathfinder_file.c: 86:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1802   0023A8  0E3C               	movlw	low _Operation_History
  1803   0023AA  25E6               	addwf	_Operation_Count& (0+255),w,b
  1804   0023AC  6ED9               	movwf	fsr2l,c
  1805   0023AE  6ADA               	clrf	fsr2h,c
  1806   0023B0  0E01               	movlw	high _Operation_History
  1807   0023B2  22DA               	addwfc	fsr2h,f,c
  1808   0023B4  C0E3  FFDF         	movff	_Color_Value,indf2
  1809   0023B8                     
  1810                           ; BSR set to: 0
  1811                           ;pathfinder_file.c: 87:                 Operation_Count++;
  1812   0023B8  2BE6               	incf	_Operation_Count& (0+255),f,b
  1813   0023BA                     
  1814                           ; BSR set to: 0
  1815                           ;pathfinder_file.c: 88:                 backward(c->backward_half, mL, mR);
  1816   0023BA  C0E1  F013         	movff	maze_search@mL,backward@mL
  1817   0023BE  C0E2  F014         	movff	maze_search@mR,backward@mR
  1818   0023C2  EE20 F008          	lfsr	2,8
  1819   0023C6  51DF               	movf	maze_search@c& (0+255),w,b
  1820   0023C8  26D9               	addwf	fsr2l,f,c
  1821   0023CA  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1822   0023CC  22DA               	addwfc	fsr2h,f,c
  1823   0023CE  50DF               	movf	indf2,w,c
  1824   0023D0  EC89  F01F         	call	_backward
  1825   0023D4                     
  1826                           ;pathfinder_file.c: 89:                 rightTURN(c->right_135, mL, mR);
  1827   0023D4  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1828   0023D8  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1829   0023DC  0100               	movlb	0	; () banked
  1830   0023DE  EE20 F003          	lfsr	2,3
  1831   0023E2  51DF               	movf	maze_search@c& (0+255),w,b
  1832   0023E4  26D9               	addwf	fsr2l,f,c
  1833   0023E6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1834   0023E8  22DA               	addwfc	fsr2h,f,c
  1835   0023EA  50DF               	movf	indf2,w,c
  1836   0023EC  EC0B  F01E         	call	_rightTURN
  1837                           
  1838                           ;pathfinder_file.c: 90:             }
  1839   0023F0  EF00  F010         	goto	l5888
  1840   0023F4                     l5992:
  1841                           
  1842                           ; BSR set to: 0
  1843   0023F4  0E07               	movlw	7
  1844   0023F6  19E3               	xorwf	_Color_Value& (0+255),w,b
  1845   0023F8  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1846   0023FA  A4D8               	btfss	status,2,c
  1847   0023FC  EF02  F012         	goto	u7441
  1848   002400  EF04  F012         	goto	u7440
  1849   002404                     u7441:
  1850   002404  EF2A  F012         	goto	l6002
  1851   002408                     u7440:
  1852   002408                     
  1853                           ; BSR set to: 0
  1854                           ;pathfinder_file.c: 93:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1855   002408  0E3C               	movlw	low _Operation_History
  1856   00240A  25E6               	addwf	_Operation_Count& (0+255),w,b
  1857   00240C  6ED9               	movwf	fsr2l,c
  1858   00240E  6ADA               	clrf	fsr2h,c
  1859   002410  0E01               	movlw	high _Operation_History
  1860   002412  22DA               	addwfc	fsr2h,f,c
  1861   002414  C0E3  FFDF         	movff	_Color_Value,indf2
  1862   002418                     
  1863                           ; BSR set to: 0
  1864                           ;pathfinder_file.c: 94:                 Operation_Count++;
  1865   002418  2BE6               	incf	_Operation_Count& (0+255),f,b
  1866   00241A                     
  1867                           ; BSR set to: 0
  1868                           ;pathfinder_file.c: 95:                 backward(c->backward_half, mL, mR);
  1869   00241A  C0E1  F013         	movff	maze_search@mL,backward@mL
  1870   00241E  C0E2  F014         	movff	maze_search@mR,backward@mR
  1871   002422  EE20 F008          	lfsr	2,8
  1872   002426  51DF               	movf	maze_search@c& (0+255),w,b
  1873   002428  26D9               	addwf	fsr2l,f,c
  1874   00242A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1875   00242C  22DA               	addwfc	fsr2h,f,c
  1876   00242E  50DF               	movf	indf2,w,c
  1877   002430  EC89  F01F         	call	_backward
  1878   002434                     
  1879                           ;pathfinder_file.c: 96:                 leftTURN(c->left_135, mL, mR);
  1880   002434  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1881   002438  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1882   00243C  0100               	movlb	0	; () banked
  1883   00243E  EE20 F004          	lfsr	2,4
  1884   002442  51DF               	movf	maze_search@c& (0+255),w,b
  1885   002444  26D9               	addwf	fsr2l,f,c
  1886   002446  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1887   002448  22DA               	addwfc	fsr2h,f,c
  1888   00244A  50DF               	movf	indf2,w,c
  1889   00244C  ECCA  F01E         	call	_leftTURN
  1890                           
  1891                           ;pathfinder_file.c: 97:             }
  1892   002450  EF00  F010         	goto	l5888
  1893   002454                     l6002:
  1894                           
  1895                           ; BSR set to: 0
  1896   002454  0E08               	movlw	8
  1897   002456  19E3               	xorwf	_Color_Value& (0+255),w,b
  1898   002458  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1899   00245A  A4D8               	btfss	status,2,c
  1900   00245C  EF32  F012         	goto	u7451
  1901   002460  EF34  F012         	goto	u7450
  1902   002464                     u7451:
  1903   002464  EF7B  F012         	goto	l477
  1904   002468                     u7450:
  1905   002468                     
  1906                           ; BSR set to: 0
  1907                           ;pathfinder_file.c: 101:                 backward(c->backward_half, mL, mR);
  1908   002468  C0E1  F013         	movff	maze_search@mL,backward@mL
  1909   00246C  C0E2  F014         	movff	maze_search@mR,backward@mR
  1910   002470  EE20 F008          	lfsr	2,8
  1911   002474  51DF               	movf	maze_search@c& (0+255),w,b
  1912   002476  26D9               	addwf	fsr2l,f,c
  1913   002478  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1914   00247A  22DA               	addwfc	fsr2h,f,c
  1915   00247C  50DF               	movf	indf2,w,c
  1916   00247E  EC89  F01F         	call	_backward
  1917                           
  1918                           ;pathfinder_file.c: 102:                 rightTURN(c->right_90, mL, mR);
  1919   002482  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1920   002486  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1921   00248A  0100               	movlb	0	; () banked
  1922   00248C  EE20 F001          	lfsr	2,1
  1923   002490  51DF               	movf	maze_search@c& (0+255),w,b
  1924   002492  26D9               	addwf	fsr2l,f,c
  1925   002494  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1926   002496  22DA               	addwfc	fsr2h,f,c
  1927   002498  50DF               	movf	indf2,w,c
  1928   00249A  EC0B  F01E         	call	_rightTURN
  1929                           
  1930                           ;pathfinder_file.c: 103:                 rightTURN(c->right_90, mL, mR);
  1931   00249E  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1932   0024A2  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1933   0024A6  0100               	movlb	0	; () banked
  1934   0024A8  EE20 F001          	lfsr	2,1
  1935   0024AC  51DF               	movf	maze_search@c& (0+255),w,b
  1936   0024AE  26D9               	addwf	fsr2l,f,c
  1937   0024B0  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1938   0024B2  22DA               	addwfc	fsr2h,f,c
  1939   0024B4  50DF               	movf	indf2,w,c
  1940   0024B6  EC0B  F01E         	call	_rightTURN
  1941                           
  1942                           ;pathfinder_file.c: 104:                 backward(c->backward_one, mL, mR);
  1943   0024BA  C0E1  F013         	movff	maze_search@mL,backward@mL
  1944   0024BE  C0E2  F014         	movff	maze_search@mR,backward@mR
  1945   0024C2  0100               	movlb	0	; () banked
  1946   0024C4  EE20 F006          	lfsr	2,6
  1947   0024C8  51DF               	movf	maze_search@c& (0+255),w,b
  1948   0024CA  26D9               	addwf	fsr2l,f,c
  1949   0024CC  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1950   0024CE  22DA               	addwfc	fsr2h,f,c
  1951   0024D0  50DF               	movf	indf2,w,c
  1952   0024D2  EC89  F01F         	call	_backward
  1953                           
  1954                           ;pathfinder_file.c: 105:                 forward(c->forward_half, mL, mR);
  1955   0024D6  C0E1  F013         	movff	maze_search@mL,forward@mL
  1956   0024DA  C0E2  F014         	movff	maze_search@mR,forward@mR
  1957   0024DE  0100               	movlb	0	; () banked
  1958   0024E0  EE20 F007          	lfsr	2,7
  1959   0024E4  51DF               	movf	maze_search@c& (0+255),w,b
  1960   0024E6  26D9               	addwf	fsr2l,f,c
  1961   0024E8  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1962   0024EA  22DA               	addwfc	fsr2h,f,c
  1963   0024EC  50DF               	movf	indf2,w,c
  1964   0024EE  EC4B  F01D         	call	_forward
  1965                           
  1966                           ;pathfinder_file.c: 106:                 break;
  1967   0024F2  EF7D  F012         	goto	l484
  1968   0024F6                     l477:
  1969                           
  1970                           ; BSR set to: 0
  1971   0024F6  EF00  F010         	goto	l5888
  1972   0024FA                     l484:
  1973   0024FA  0012               	return		;funcret
  1974   0024FC                     __end_of_maze_search:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _color_click_init *****************
  1978 ;; Defined at:
  1979 ;;		line 7 in file "color.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;Total ram usage:        1 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 3
  2000 ;; This function calls:
  2001 ;;		_I2C_2_Master_Init
  2002 ;;		_color_writetoaddr
  2003 ;; This function is called by:
  2004 ;;		_maze_search
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text3
  2009   004C80                     __ptext3:
  2010                           	callstack 0
  2011   004C80                     _color_click_init:
  2012                           	callstack 26
  2013   004C80                     
  2014                           ;color.c: 10:     I2C_2_Master_Init();
  2015   004C80  EC92  F026         	call	_I2C_2_Master_Init	;wreg free
  2016   004C84                     
  2017                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  2018   004C84  0E01               	movlw	1
  2019   004C86  6E03               	movwf	color_writetoaddr@value^0,c
  2020   004C88  0E00               	movlw	0
  2021   004C8A  ECCE  F026         	call	_color_writetoaddr
  2022   004C8E                     
  2023                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2024   004C8E  0E3F               	movlw	63
  2025   004C90  6E05               	movwf	??_color_click_init^0,c
  2026   004C92  0E55               	movlw	85
  2027   004C94                     u7657:
  2028   004C94  2EE8               	decfsz	wreg,f,c
  2029   004C96  D7FE               	bra	u7657
  2030   004C98  2E05               	decfsz	??_color_click_init^0,f,c
  2031   004C9A  D7FC               	bra	u7657
  2032   004C9C  0000               	nop	
  2033   004C9E                     
  2034                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  2035   004C9E  0E03               	movlw	3
  2036   004CA0  6E03               	movwf	color_writetoaddr@value^0,c
  2037   004CA2  0E00               	movlw	0
  2038   004CA4  ECCE  F026         	call	_color_writetoaddr
  2039   004CA8                     
  2040                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  2041   004CA8  0ED5               	movlw	213
  2042   004CAA  6E03               	movwf	color_writetoaddr@value^0,c
  2043   004CAC  0E01               	movlw	1
  2044   004CAE  ECCE  F026         	call	_color_writetoaddr
  2045   004CB2                     
  2046                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  2047   004CB2  9287               	bcf	135,1,c	;volatile
  2048   004CB4                     
  2049                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  2050   004CB4  9881               	bcf	129,4,c	;volatile
  2051   004CB6                     
  2052                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  2053   004CB6  9E86               	bcf	134,7,c	;volatile
  2054   004CB8                     
  2055                           ;color.c: 30:     LATGbits.LATG1 = 1;
  2056   004CB8  827F               	bsf	127,1,c	;volatile
  2057   004CBA                     
  2058                           ;color.c: 31:     LATAbits.LATA4 = 1;
  2059   004CBA  8879               	bsf	121,4,c	;volatile
  2060   004CBC                     
  2061                           ;color.c: 32:     LATFbits.LATF7 = 1;
  2062   004CBC  8E7E               	bsf	126,7,c	;volatile
  2063   004CBE  0012               	return		;funcret
  2064   004CC0                     __end_of_color_click_init:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _color_writetoaddr *****************
  2068 ;; Defined at:
  2069 ;;		line 37 in file "color.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  address         1    wreg     unsigned char 
  2072 ;;  value           1    2[COMRAM] unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  address         1    3[COMRAM] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2084 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;Total ram usage:        2 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 2
  2091 ;; This function calls:
  2092 ;;		_I2C_2_Master_Start
  2093 ;;		_I2C_2_Master_Stop
  2094 ;;		_I2C_2_Master_Write
  2095 ;; This function is called by:
  2096 ;;		_color_click_init
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text4
  2101   004D9C                     __ptext4:
  2102                           	callstack 0
  2103   004D9C                     _color_writetoaddr:
  2104                           	callstack 26
  2105                           
  2106                           ;incstack = 0
  2107                           ;color_writetoaddr@address stored from wreg
  2108   004D9C  6E04               	movwf	color_writetoaddr@address^0,c
  2109   004D9E                     
  2110                           ;color.c: 38:     I2C_2_Master_Start();
  2111   004D9E  ECE9  F026         	call	_I2C_2_Master_Start	;wreg free
  2112                           
  2113                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2114   004DA2  0E52               	movlw	82
  2115   004DA4  ECDE  F026         	call	_I2C_2_Master_Write
  2116                           
  2117                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  2118   004DA8  5004               	movf	color_writetoaddr@address^0,w,c
  2119   004DAA  0980               	iorlw	128
  2120   004DAC  ECDE  F026         	call	_I2C_2_Master_Write
  2121                           
  2122                           ;color.c: 41:     I2C_2_Master_Write(value);
  2123   004DB0  5003               	movf	color_writetoaddr@value^0,w,c
  2124   004DB2  ECDE  F026         	call	_I2C_2_Master_Write
  2125                           
  2126                           ;color.c: 42:     I2C_2_Master_Stop();
  2127   004DB6  ECE4  F026         	call	_I2C_2_Master_Stop	;wreg free
  2128   004DBA  0012               	return		;funcret
  2129   004DBC                     __end_of_color_writetoaddr:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _I2C_2_Master_Init *****************
  2133 ;; Defined at:
  2134 ;;		line 4 in file "i2c.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_color_click_init
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text5
  2162   004D24                     __ptext5:
  2163                           	callstack 0
  2164   004D24                     _I2C_2_Master_Init:
  2165                           	callstack 28
  2166   004D24                     
  2167                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2168   004D24  010E               	movlb	14	; () banked
  2169   004D26  51D9               	movf	217,w,b	;volatile
  2170   004D28  0BF0               	andlw	-16
  2171   004D2A  0908               	iorlw	8
  2172   004D2C  6FD9               	movwf	217,b	;volatile
  2173   004D2E                     
  2174                           ; BSR set to: 14
  2175                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2176   004D2E  8BD9               	bsf	217,5,b	;volatile
  2177                           
  2178                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2179   004D30  0E9F               	movlw	159
  2180   004D32  6FD6               	movwf	214,b	;volatile
  2181   004D34                     
  2182                           ; BSR set to: 14
  2183                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2184   004D34  8A84               	bsf	132,5,c	;volatile
  2185   004D36                     
  2186                           ; BSR set to: 14
  2187                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2188   004D36  8C84               	bsf	132,6,c	;volatile
  2189   004D38                     
  2190                           ; BSR set to: 14
  2191                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2192   004D38  9BA7               	bcf	167,5,b	;volatile
  2193   004D3A                     
  2194                           ; BSR set to: 14
  2195                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2196   004D3A  9DA7               	bcf	167,6,b	;volatile
  2197                           
  2198                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2199   004D3C  0E1D               	movlw	29
  2200   004D3E  6F1D               	movwf	29,b	;volatile
  2201                           
  2202                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2203   004D40  0E1E               	movlw	30
  2204   004D42  6F1C               	movwf	28,b	;volatile
  2205                           
  2206                           ;i2c.c: 18:   RD5PPS=0x1C;
  2207   004D44  0E1C               	movlw	28
  2208   004D46  6F6F               	movwf	111,b	;volatile
  2209                           
  2210                           ;i2c.c: 19:   RD6PPS=0x1B;
  2211   004D48  0E1B               	movlw	27
  2212   004D4A  6F70               	movwf	112,b	;volatile
  2213   004D4C                     
  2214                           ; BSR set to: 14
  2215   004D4C  0012               	return		;funcret
  2216   004D4E                     __end_of_I2C_2_Master_Init:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _color_cardCheck *****************
  2220 ;; Defined at:
  2221 ;;		line 171 in file "color.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  V               4  123[BANK0 ] float 
  2226 ;;  S               4  119[BANK0 ] float 
  2227 ;;  H               4  115[BANK0 ] float 
  2228 ;;  c               4  109[BANK0 ] float 
  2229 ;;  b               4  105[BANK0 ] float 
  2230 ;;  g               4  101[BANK0 ] float 
  2231 ;;  r               4   97[BANK0 ] float 
  2232 ;;  card_color      2  113[BANK0 ] unsigned int 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  2   91[COMRAM] unsigned int 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;Total ram usage:       32 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 4
  2249 ;; This function calls:
  2250 ;;		_RGB_to_HSV
  2251 ;;		___flge
  2252 ;;		___xxtofl
  2253 ;;		_color_read_Blue
  2254 ;;		_color_read_Clear
  2255 ;;		_color_read_Green
  2256 ;;		_color_read_Red
  2257 ;; This function is called by:
  2258 ;;		_maze_search
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text6
  2263   000E02                     __ptext6:
  2264                           	callstack 0
  2265   000E02                     _color_cardCheck:
  2266                           	callstack 25
  2267   000E02                     
  2268                           ;color.c: 174:     float r = color_read_Red();
  2269   000E02  EC5C  F025         	call	_color_read_Red	;wreg free
  2270   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2271   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2272   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2273   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2274   000E12  0E00               	movlw	0
  2275   000E14  EC71  F01C         	call	___xxtofl
  2276   000E18  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  2277   000E1C  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  2278   000E20  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  2279   000E24  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  2280                           
  2281                           ;color.c: 175:     float g = color_read_Green();
  2282   000E28  EC84  F025         	call	_color_read_Green	;wreg free
  2283   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2284   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2285   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2286   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2287   000E38  0E00               	movlw	0
  2288   000E3A  EC71  F01C         	call	___xxtofl
  2289   000E3E  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  2290   000E42  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  2291   000E46  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  2292   000E4A  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  2293                           
  2294                           ;color.c: 176:     float b = color_read_Blue();
  2295   000E4E  ECD4  F025         	call	_color_read_Blue	;wreg free
  2296   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2297   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2298   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2299   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2300   000E5E  0E00               	movlw	0
  2301   000E60  EC71  F01C         	call	___xxtofl
  2302   000E64  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  2303   000E68  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  2304   000E6C  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  2305   000E70  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  2306                           
  2307                           ;color.c: 179:     float c = color_read_Clear();
  2308   000E74  ECAC  F025         	call	_color_read_Clear	;wreg free
  2309   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2310   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2311   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2312   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2313   000E84  0E00               	movlw	0
  2314   000E86  EC71  F01C         	call	___xxtofl
  2315   000E8A  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  2316   000E8E  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  2317   000E92  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  2318   000E96  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  2319   000E9A                     
  2320                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  2321   000E9A  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  2322   000E9E  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  2323   000EA2  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  2324   000EA6  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  2325   000EAA  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  2326   000EAE  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  2327   000EB2  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  2328   000EB6  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  2329   000EBA  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  2330   000EBE  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  2331   000EC2  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  2332   000EC6  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  2333   000ECA  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  2334   000ECE  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  2335   000ED2  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  2336   000ED6  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  2337   000EDA  0ED3               	movlw	low color_cardCheck@H
  2338   000EDC  0100               	movlb	0	; () banked
  2339   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  2340   000EE0  0ED7               	movlw	low color_cardCheck@S
  2341   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  2342   000EE4  0EDB               	movlw	low color_cardCheck@V
  2343   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  2344   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  2345   000EEC                     
  2346                           ;color.c: 195:     unsigned int card_color = 0;
  2347   000EEC  0E00               	movlw	0
  2348   000EEE  0100               	movlb	0	; () banked
  2349   000EF0  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2350   000EF2  0E00               	movlw	0
  2351   000EF4  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2352   000EF6                     
  2353                           ; BSR set to: 0
  2354                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  2355   000EF6  0E00               	movlw	0
  2356   000EF8  6E01               	movwf	___flge@ff1^0,c
  2357   000EFA  0E80               	movlw	128
  2358   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  2359   000EFE  0EB1               	movlw	177
  2360   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  2361   000F02  0E43               	movlw	67
  2362   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  2363   000F06  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2364   000F0A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2365   000F0E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2366   000F12  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2367   000F16  ECAB  F022         	call	___flge	;wreg free
  2368   000F1A  B0D8               	btfsc	status,0,c
  2369   000F1C  EF92  F007         	goto	u6491
  2370   000F20  EF94  F007         	goto	u6490
  2371   000F24                     u6491:
  2372   000F24  EF18  F008         	goto	l5482
  2373   000F28                     u6490:
  2374   000F28  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2375   000F2C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2376   000F30  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2377   000F34  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2378   000F38  0E00               	movlw	0
  2379   000F3A  6E05               	movwf	___flge@ff2^0,c
  2380   000F3C  0E00               	movlw	0
  2381   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  2382   000F40  0EB4               	movlw	180
  2383   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  2384   000F44  0E43               	movlw	67
  2385   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  2386   000F48  ECAB  F022         	call	___flge	;wreg free
  2387   000F4C  B0D8               	btfsc	status,0,c
  2388   000F4E  EFAB  F007         	goto	u6501
  2389   000F52  EFAD  F007         	goto	u6500
  2390   000F56                     u6501:
  2391   000F56  EF18  F008         	goto	l5482
  2392   000F5A                     u6500:
  2393   000F5A  0E00               	movlw	0
  2394   000F5C  6E01               	movwf	___flge@ff1^0,c
  2395   000F5E  0E00               	movlw	0
  2396   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  2397   000F62  0EAA               	movlw	170
  2398   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  2399   000F66  0E42               	movlw	66
  2400   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  2401   000F6A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2402   000F6E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2403   000F72  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2404   000F76  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2405   000F7A  ECAB  F022         	call	___flge	;wreg free
  2406   000F7E  B0D8               	btfsc	status,0,c
  2407   000F80  EFC4  F007         	goto	u6511
  2408   000F84  EFC6  F007         	goto	u6510
  2409   000F88                     u6511:
  2410   000F88  EF18  F008         	goto	l5482
  2411   000F8C                     u6510:
  2412   000F8C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2413   000F90  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2414   000F94  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2415   000F98  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2416   000F9C  0E00               	movlw	0
  2417   000F9E  6E05               	movwf	___flge@ff2^0,c
  2418   000FA0  0E00               	movlw	0
  2419   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  2420   000FA4  0EB4               	movlw	180
  2421   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  2422   000FA8  0E42               	movlw	66
  2423   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  2424   000FAC  ECAB  F022         	call	___flge	;wreg free
  2425   000FB0  B0D8               	btfsc	status,0,c
  2426   000FB2  EFDD  F007         	goto	u6521
  2427   000FB6  EFDF  F007         	goto	u6520
  2428   000FBA                     u6521:
  2429   000FBA  EF18  F008         	goto	l5482
  2430   000FBE                     u6520:
  2431   000FBE  0E00               	movlw	0
  2432   000FC0  6E01               	movwf	___flge@ff1^0,c
  2433   000FC2  0E00               	movlw	0
  2434   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  2435   000FC6  0EA0               	movlw	160
  2436   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  2437   000FCA  0E42               	movlw	66
  2438   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  2439   000FCE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2440   000FD2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2441   000FD6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2442   000FDA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2443   000FDE  ECAB  F022         	call	___flge	;wreg free
  2444   000FE2  B0D8               	btfsc	status,0,c
  2445   000FE4  EFF6  F007         	goto	u6531
  2446   000FE8  EFF8  F007         	goto	u6530
  2447   000FEC                     u6531:
  2448   000FEC  EF18  F008         	goto	l5482
  2449   000FF0                     u6530:
  2450   000FF0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2451   000FF4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2452   000FF8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2453   000FFC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2454   001000  0E00               	movlw	0
  2455   001002  6E05               	movwf	___flge@ff2^0,c
  2456   001004  0E00               	movlw	0
  2457   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  2458   001008  0EAA               	movlw	170
  2459   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  2460   00100C  0E42               	movlw	66
  2461   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  2462   001010  ECAB  F022         	call	___flge	;wreg free
  2463   001014  B0D8               	btfsc	status,0,c
  2464   001016  EF0F  F008         	goto	u6541
  2465   00101A  EF11  F008         	goto	u6540
  2466   00101E                     u6541:
  2467   00101E  EF18  F008         	goto	l5482
  2468   001022                     u6540:
  2469   001022  0E00               	movlw	0
  2470   001024  0100               	movlb	0	; () banked
  2471   001026  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2472   001028  0E01               	movlw	1
  2473   00102A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2474   00102C  EF18  F00C         	goto	l5574
  2475   001030                     l5482:
  2476   001030  0E00               	movlw	0
  2477   001032  6E01               	movwf	___flge@ff1^0,c
  2478   001034  0E00               	movlw	0
  2479   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  2480   001038  0E86               	movlw	134
  2481   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  2482   00103C  0E42               	movlw	66
  2483   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  2484   001040  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2485   001044  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2486   001048  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2487   00104C  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2488   001050  ECAB  F022         	call	___flge	;wreg free
  2489   001054  B0D8               	btfsc	status,0,c
  2490   001056  EF2F  F008         	goto	u6551
  2491   00105A  EF31  F008         	goto	u6550
  2492   00105E                     u6551:
  2493   00105E  EFB5  F008         	goto	l5496
  2494   001062                     u6550:
  2495   001062  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2496   001066  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2497   00106A  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2498   00106E  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2499   001072  0E00               	movlw	0
  2500   001074  6E05               	movwf	___flge@ff2^0,c
  2501   001076  0E00               	movlw	0
  2502   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  2503   00107A  0E9E               	movlw	158
  2504   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  2505   00107E  0E42               	movlw	66
  2506   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  2507   001082  ECAB  F022         	call	___flge	;wreg free
  2508   001086  B0D8               	btfsc	status,0,c
  2509   001088  EF48  F008         	goto	u6561
  2510   00108C  EF4A  F008         	goto	u6560
  2511   001090                     u6561:
  2512   001090  EFB5  F008         	goto	l5496
  2513   001094                     u6560:
  2514   001094  0E00               	movlw	0
  2515   001096  6E01               	movwf	___flge@ff1^0,c
  2516   001098  0E00               	movlw	0
  2517   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  2518   00109C  0E48               	movlw	72
  2519   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  2520   0010A0  0E42               	movlw	66
  2521   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  2522   0010A4  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2523   0010A8  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2524   0010AC  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2525   0010B0  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2526   0010B4  ECAB  F022         	call	___flge	;wreg free
  2527   0010B8  B0D8               	btfsc	status,0,c
  2528   0010BA  EF61  F008         	goto	u6571
  2529   0010BE  EF63  F008         	goto	u6570
  2530   0010C2                     u6571:
  2531   0010C2  EFB5  F008         	goto	l5496
  2532   0010C6                     u6570:
  2533   0010C6  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2534   0010CA  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2535   0010CE  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2536   0010D2  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2537   0010D6  0E00               	movlw	0
  2538   0010D8  6E05               	movwf	___flge@ff2^0,c
  2539   0010DA  0E00               	movlw	0
  2540   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  2541   0010DE  0E64               	movlw	100
  2542   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  2543   0010E2  0E42               	movlw	66
  2544   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  2545   0010E6  ECAB  F022         	call	___flge	;wreg free
  2546   0010EA  B0D8               	btfsc	status,0,c
  2547   0010EC  EF7A  F008         	goto	u6581
  2548   0010F0  EF7C  F008         	goto	u6580
  2549   0010F4                     u6581:
  2550   0010F4  EFB5  F008         	goto	l5496
  2551   0010F8                     u6580:
  2552   0010F8  0E00               	movlw	0
  2553   0010FA  6E01               	movwf	___flge@ff1^0,c
  2554   0010FC  0E00               	movlw	0
  2555   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  2556   001100  0E20               	movlw	32
  2557   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  2558   001104  0E42               	movlw	66
  2559   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  2560   001108  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2561   00110C  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2562   001110  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2563   001114  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2564   001118  ECAB  F022         	call	___flge	;wreg free
  2565   00111C  B0D8               	btfsc	status,0,c
  2566   00111E  EF93  F008         	goto	u6591
  2567   001122  EF95  F008         	goto	u6590
  2568   001126                     u6591:
  2569   001126  EFB5  F008         	goto	l5496
  2570   00112A                     u6590:
  2571   00112A  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2572   00112E  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2573   001132  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2574   001136  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2575   00113A  0E00               	movlw	0
  2576   00113C  6E05               	movwf	___flge@ff2^0,c
  2577   00113E  0E00               	movlw	0
  2578   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  2579   001142  0E38               	movlw	56
  2580   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  2581   001146  0E42               	movlw	66
  2582   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  2583   00114A  ECAB  F022         	call	___flge	;wreg free
  2584   00114E  B0D8               	btfsc	status,0,c
  2585   001150  EFAC  F008         	goto	u6601
  2586   001154  EFAE  F008         	goto	u6600
  2587   001158                     u6601:
  2588   001158  EFB5  F008         	goto	l5496
  2589   00115C                     u6600:
  2590   00115C  0E00               	movlw	0
  2591   00115E  0100               	movlb	0	; () banked
  2592   001160  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2593   001162  0E02               	movlw	2
  2594   001164  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2595   001166  EF18  F00C         	goto	l5574
  2596   00116A                     l5496:
  2597   00116A  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2598   00116E  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2599   001172  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2600   001176  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2601   00117A  0E00               	movlw	0
  2602   00117C  6E05               	movwf	___flge@ff2^0,c
  2603   00117E  0E00               	movlw	0
  2604   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  2605   001182  0E20               	movlw	32
  2606   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  2607   001186  0E41               	movlw	65
  2608   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  2609   00118A  ECAB  F022         	call	___flge	;wreg free
  2610   00118E  B0D8               	btfsc	status,0,c
  2611   001190  EFCC  F008         	goto	u6611
  2612   001194  EFCE  F008         	goto	u6610
  2613   001198                     u6611:
  2614   001198  EF07  F009         	goto	l5504
  2615   00119C                     u6610:
  2616   00119C  0E00               	movlw	0
  2617   00119E  6E01               	movwf	___flge@ff1^0,c
  2618   0011A0  0E00               	movlw	0
  2619   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  2620   0011A4  0EF0               	movlw	240
  2621   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  2622   0011A8  0E41               	movlw	65
  2623   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  2624   0011AC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2625   0011B0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2626   0011B4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2627   0011B8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2628   0011BC  ECAB  F022         	call	___flge	;wreg free
  2629   0011C0  B0D8               	btfsc	status,0,c
  2630   0011C2  EFE5  F008         	goto	u6621
  2631   0011C6  EFE7  F008         	goto	u6620
  2632   0011CA                     u6621:
  2633   0011CA  EF07  F009         	goto	l5504
  2634   0011CE                     u6620:
  2635   0011CE  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2636   0011D2  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2637   0011D6  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2638   0011DA  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2639   0011DE  0E00               	movlw	0
  2640   0011E0  6E05               	movwf	___flge@ff2^0,c
  2641   0011E2  0E00               	movlw	0
  2642   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  2643   0011E6  0E0C               	movlw	12
  2644   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  2645   0011EA  0E42               	movlw	66
  2646   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  2647   0011EE  ECAB  F022         	call	___flge	;wreg free
  2648   0011F2  B0D8               	btfsc	status,0,c
  2649   0011F4  EFFE  F008         	goto	u6631
  2650   0011F8  EF00  F009         	goto	u6630
  2651   0011FC                     u6631:
  2652   0011FC  EF07  F009         	goto	l5504
  2653   001200                     u6630:
  2654   001200  0E00               	movlw	0
  2655   001202  0100               	movlb	0	; () banked
  2656   001204  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2657   001206  0E03               	movlw	3
  2658   001208  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2659   00120A  EF18  F00C         	goto	l5574
  2660   00120E                     l5504:
  2661   00120E  0E00               	movlw	0
  2662   001210  6E01               	movwf	___flge@ff1^0,c
  2663   001212  0E00               	movlw	0
  2664   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  2665   001216  0EA0               	movlw	160
  2666   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  2667   00121A  0E41               	movlw	65
  2668   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  2669   00121E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2670   001222  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2671   001226  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2672   00122A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2673   00122E  ECAB  F022         	call	___flge	;wreg free
  2674   001232  B0D8               	btfsc	status,0,c
  2675   001234  EF1E  F009         	goto	u6641
  2676   001238  EF20  F009         	goto	u6640
  2677   00123C                     u6641:
  2678   00123C  EFA4  F009         	goto	l5518
  2679   001240                     u6640:
  2680   001240  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2681   001244  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2682   001248  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2683   00124C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2684   001250  0E00               	movlw	0
  2685   001252  6E05               	movwf	___flge@ff2^0,c
  2686   001254  0E00               	movlw	0
  2687   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  2688   001258  0EC8               	movlw	200
  2689   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  2690   00125C  0E41               	movlw	65
  2691   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  2692   001260  ECAB  F022         	call	___flge	;wreg free
  2693   001264  B0D8               	btfsc	status,0,c
  2694   001266  EF37  F009         	goto	u6651
  2695   00126A  EF39  F009         	goto	u6650
  2696   00126E                     u6651:
  2697   00126E  EFA4  F009         	goto	l5518
  2698   001272                     u6650:
  2699   001272  0E00               	movlw	0
  2700   001274  6E01               	movwf	___flge@ff1^0,c
  2701   001276  0E00               	movlw	0
  2702   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  2703   00127A  0E82               	movlw	130
  2704   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  2705   00127E  0E42               	movlw	66
  2706   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  2707   001282  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2708   001286  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2709   00128A  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2710   00128E  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2711   001292  ECAB  F022         	call	___flge	;wreg free
  2712   001296  B0D8               	btfsc	status,0,c
  2713   001298  EF50  F009         	goto	u6661
  2714   00129C  EF52  F009         	goto	u6660
  2715   0012A0                     u6661:
  2716   0012A0  EFA4  F009         	goto	l5518
  2717   0012A4                     u6660:
  2718   0012A4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2719   0012A8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2720   0012AC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2721   0012B0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2722   0012B4  0E00               	movlw	0
  2723   0012B6  6E05               	movwf	___flge@ff2^0,c
  2724   0012B8  0E00               	movlw	0
  2725   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2726   0012BC  0E8C               	movlw	140
  2727   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2728   0012C0  0E42               	movlw	66
  2729   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2730   0012C4  ECAB  F022         	call	___flge	;wreg free
  2731   0012C8  B0D8               	btfsc	status,0,c
  2732   0012CA  EF69  F009         	goto	u6671
  2733   0012CE  EF6B  F009         	goto	u6670
  2734   0012D2                     u6671:
  2735   0012D2  EFA4  F009         	goto	l5518
  2736   0012D6                     u6670:
  2737   0012D6  0E00               	movlw	0
  2738   0012D8  6E01               	movwf	___flge@ff1^0,c
  2739   0012DA  0E00               	movlw	0
  2740   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  2741   0012DE  0E58               	movlw	88
  2742   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  2743   0012E2  0E42               	movlw	66
  2744   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  2745   0012E6  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2746   0012EA  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2747   0012EE  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2748   0012F2  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2749   0012F6  ECAB  F022         	call	___flge	;wreg free
  2750   0012FA  B0D8               	btfsc	status,0,c
  2751   0012FC  EF82  F009         	goto	u6681
  2752   001300  EF84  F009         	goto	u6680
  2753   001304                     u6681:
  2754   001304  EFA4  F009         	goto	l5518
  2755   001308                     u6680:
  2756   001308  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2757   00130C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2758   001310  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2759   001314  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2760   001318  0E00               	movlw	0
  2761   00131A  6E05               	movwf	___flge@ff2^0,c
  2762   00131C  0E00               	movlw	0
  2763   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  2764   001320  0E64               	movlw	100
  2765   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  2766   001324  0E42               	movlw	66
  2767   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  2768   001328  ECAB  F022         	call	___flge	;wreg free
  2769   00132C  B0D8               	btfsc	status,0,c
  2770   00132E  EF9B  F009         	goto	u6691
  2771   001332  EF9D  F009         	goto	u6690
  2772   001336                     u6691:
  2773   001336  EFA4  F009         	goto	l5518
  2774   00133A                     u6690:
  2775   00133A  0E00               	movlw	0
  2776   00133C  0100               	movlb	0	; () banked
  2777   00133E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2778   001340  0E04               	movlw	4
  2779   001342  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2780   001344  EF18  F00C         	goto	l5574
  2781   001348                     l5518:
  2782   001348  0E00               	movlw	0
  2783   00134A  6E01               	movwf	___flge@ff1^0,c
  2784   00134C  0E00               	movlw	0
  2785   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  2786   001350  0E50               	movlw	80
  2787   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  2788   001354  0E41               	movlw	65
  2789   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  2790   001358  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2791   00135C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2792   001360  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2793   001364  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2794   001368  ECAB  F022         	call	___flge	;wreg free
  2795   00136C  B0D8               	btfsc	status,0,c
  2796   00136E  EFBB  F009         	goto	u6701
  2797   001372  EFBD  F009         	goto	u6700
  2798   001376                     u6701:
  2799   001376  EF41  F00A         	goto	l5532
  2800   00137A                     u6700:
  2801   00137A  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2802   00137E  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2803   001382  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2804   001386  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2805   00138A  0E00               	movlw	0
  2806   00138C  6E05               	movwf	___flge@ff2^0,c
  2807   00138E  0E00               	movlw	0
  2808   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  2809   001392  0E90               	movlw	144
  2810   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  2811   001396  0E41               	movlw	65
  2812   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  2813   00139A  ECAB  F022         	call	___flge	;wreg free
  2814   00139E  B0D8               	btfsc	status,0,c
  2815   0013A0  EFD4  F009         	goto	u6711
  2816   0013A4  EFD6  F009         	goto	u6710
  2817   0013A8                     u6711:
  2818   0013A8  EF41  F00A         	goto	l5532
  2819   0013AC                     u6710:
  2820   0013AC  0E00               	movlw	0
  2821   0013AE  6E01               	movwf	___flge@ff1^0,c
  2822   0013B0  0E00               	movlw	0
  2823   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  2824   0013B4  0E5C               	movlw	92
  2825   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  2826   0013B8  0E42               	movlw	66
  2827   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  2828   0013BC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2829   0013C0  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2830   0013C4  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2831   0013C8  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2832   0013CC  ECAB  F022         	call	___flge	;wreg free
  2833   0013D0  B0D8               	btfsc	status,0,c
  2834   0013D2  EFED  F009         	goto	u6721
  2835   0013D6  EFEF  F009         	goto	u6720
  2836   0013DA                     u6721:
  2837   0013DA  EF41  F00A         	goto	l5532
  2838   0013DE                     u6720:
  2839   0013DE  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2840   0013E2  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2841   0013E6  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2842   0013EA  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2843   0013EE  0E00               	movlw	0
  2844   0013F0  6E05               	movwf	___flge@ff2^0,c
  2845   0013F2  0E00               	movlw	0
  2846   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  2847   0013F6  0E70               	movlw	112
  2848   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  2849   0013FA  0E42               	movlw	66
  2850   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  2851   0013FE  ECAB  F022         	call	___flge	;wreg free
  2852   001402  B0D8               	btfsc	status,0,c
  2853   001404  EF06  F00A         	goto	u6731
  2854   001408  EF08  F00A         	goto	u6730
  2855   00140C                     u6731:
  2856   00140C  EF41  F00A         	goto	l5532
  2857   001410                     u6730:
  2858   001410  0E00               	movlw	0
  2859   001412  6E01               	movwf	___flge@ff1^0,c
  2860   001414  0E00               	movlw	0
  2861   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  2862   001418  0E48               	movlw	72
  2863   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  2864   00141C  0E42               	movlw	66
  2865   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  2866   001420  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2867   001424  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2868   001428  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2869   00142C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2870   001430  ECAB  F022         	call	___flge	;wreg free
  2871   001434  B0D8               	btfsc	status,0,c
  2872   001436  EF1F  F00A         	goto	u6741
  2873   00143A  EF21  F00A         	goto	u6740
  2874   00143E                     u6741:
  2875   00143E  EF41  F00A         	goto	l5532
  2876   001442                     u6740:
  2877   001442  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2878   001446  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2879   00144A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2880   00144E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2881   001452  0E00               	movlw	0
  2882   001454  6E05               	movwf	___flge@ff2^0,c
  2883   001456  0E00               	movlw	0
  2884   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  2885   00145A  0E58               	movlw	88
  2886   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  2887   00145E  0E42               	movlw	66
  2888   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  2889   001462  ECAB  F022         	call	___flge	;wreg free
  2890   001466  B0D8               	btfsc	status,0,c
  2891   001468  EF38  F00A         	goto	u6751
  2892   00146C  EF3A  F00A         	goto	u6750
  2893   001470                     u6751:
  2894   001470  EF41  F00A         	goto	l5532
  2895   001474                     u6750:
  2896   001474  0E00               	movlw	0
  2897   001476  0100               	movlb	0	; () banked
  2898   001478  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2899   00147A  0E05               	movlw	5
  2900   00147C  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2901   00147E  EF18  F00C         	goto	l5574
  2902   001482                     l5532:
  2903   001482  0E00               	movlw	0
  2904   001484  6E01               	movwf	___flge@ff1^0,c
  2905   001486  0E00               	movlw	0
  2906   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  2907   00148A  0EA0               	movlw	160
  2908   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  2909   00148E  0E40               	movlw	64
  2910   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  2911   001492  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2912   001496  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2913   00149A  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2914   00149E  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2915   0014A2  ECAB  F022         	call	___flge	;wreg free
  2916   0014A6  B0D8               	btfsc	status,0,c
  2917   0014A8  EF58  F00A         	goto	u6761
  2918   0014AC  EF5A  F00A         	goto	u6760
  2919   0014B0                     u6761:
  2920   0014B0  EFDE  F00A         	goto	l5546
  2921   0014B4                     u6760:
  2922   0014B4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2923   0014B8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2924   0014BC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2925   0014C0  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2926   0014C4  0E00               	movlw	0
  2927   0014C6  6E05               	movwf	___flge@ff2^0,c
  2928   0014C8  0E00               	movlw	0
  2929   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  2930   0014CC  0E20               	movlw	32
  2931   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  2932   0014D0  0E41               	movlw	65
  2933   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  2934   0014D4  ECAB  F022         	call	___flge	;wreg free
  2935   0014D8  B0D8               	btfsc	status,0,c
  2936   0014DA  EF71  F00A         	goto	u6771
  2937   0014DE  EF73  F00A         	goto	u6770
  2938   0014E2                     u6771:
  2939   0014E2  EFDE  F00A         	goto	l5546
  2940   0014E6                     u6770:
  2941   0014E6  0E00               	movlw	0
  2942   0014E8  6E01               	movwf	___flge@ff1^0,c
  2943   0014EA  0E00               	movlw	0
  2944   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  2945   0014EE  0E8C               	movlw	140
  2946   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  2947   0014F2  0E42               	movlw	66
  2948   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  2949   0014F6  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2950   0014FA  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2951   0014FE  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2952   001502  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2953   001506  ECAB  F022         	call	___flge	;wreg free
  2954   00150A  B0D8               	btfsc	status,0,c
  2955   00150C  EF8A  F00A         	goto	u6781
  2956   001510  EF8C  F00A         	goto	u6780
  2957   001514                     u6781:
  2958   001514  EFDE  F00A         	goto	l5546
  2959   001518                     u6780:
  2960   001518  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2961   00151C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2962   001520  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2963   001524  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2964   001528  0E00               	movlw	0
  2965   00152A  6E05               	movwf	___flge@ff2^0,c
  2966   00152C  0E00               	movlw	0
  2967   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  2968   001530  0E96               	movlw	150
  2969   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  2970   001534  0E42               	movlw	66
  2971   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  2972   001538  ECAB  F022         	call	___flge	;wreg free
  2973   00153C  B0D8               	btfsc	status,0,c
  2974   00153E  EFA3  F00A         	goto	u6791
  2975   001542  EFA5  F00A         	goto	u6790
  2976   001546                     u6791:
  2977   001546  EFDE  F00A         	goto	l5546
  2978   00154A                     u6790:
  2979   00154A  0E00               	movlw	0
  2980   00154C  6E01               	movwf	___flge@ff1^0,c
  2981   00154E  0E00               	movlw	0
  2982   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  2983   001552  0E78               	movlw	120
  2984   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  2985   001556  0E42               	movlw	66
  2986   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  2987   00155A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2988   00155E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2989   001562  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2990   001566  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2991   00156A  ECAB  F022         	call	___flge	;wreg free
  2992   00156E  B0D8               	btfsc	status,0,c
  2993   001570  EFBC  F00A         	goto	u6801
  2994   001574  EFBE  F00A         	goto	u6800
  2995   001578                     u6801:
  2996   001578  EFDE  F00A         	goto	l5546
  2997   00157C                     u6800:
  2998   00157C  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2999   001580  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3000   001584  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3001   001588  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3002   00158C  0E00               	movlw	0
  3003   00158E  6E05               	movwf	___flge@ff2^0,c
  3004   001590  0E00               	movlw	0
  3005   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  3006   001594  0E86               	movlw	134
  3007   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  3008   001598  0E42               	movlw	66
  3009   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  3010   00159C  ECAB  F022         	call	___flge	;wreg free
  3011   0015A0  B0D8               	btfsc	status,0,c
  3012   0015A2  EFD5  F00A         	goto	u6811
  3013   0015A6  EFD7  F00A         	goto	u6810
  3014   0015AA                     u6811:
  3015   0015AA  EFDE  F00A         	goto	l5546
  3016   0015AE                     u6810:
  3017   0015AE  0E00               	movlw	0
  3018   0015B0  0100               	movlb	0	; () banked
  3019   0015B2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3020   0015B4  0E06               	movlw	6
  3021   0015B6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3022   0015B8  EF18  F00C         	goto	l5574
  3023   0015BC                     l5546:
  3024   0015BC  0E00               	movlw	0
  3025   0015BE  6E01               	movwf	___flge@ff1^0,c
  3026   0015C0  0E00               	movlw	0
  3027   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  3028   0015C4  0E94               	movlw	148
  3029   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  3030   0015C8  0E42               	movlw	66
  3031   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  3032   0015CC  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3033   0015D0  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3034   0015D4  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3035   0015D8  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3036   0015DC  ECAB  F022         	call	___flge	;wreg free
  3037   0015E0  B0D8               	btfsc	status,0,c
  3038   0015E2  EFF5  F00A         	goto	u6821
  3039   0015E6  EFF7  F00A         	goto	u6820
  3040   0015EA                     u6821:
  3041   0015EA  EF7B  F00B         	goto	l5560
  3042   0015EE                     u6820:
  3043   0015EE  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3044   0015F2  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3045   0015F6  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3046   0015FA  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3047   0015FE  0E00               	movlw	0
  3048   001600  6E05               	movwf	___flge@ff2^0,c
  3049   001602  0E00               	movlw	0
  3050   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  3051   001606  0EAA               	movlw	170
  3052   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  3053   00160A  0E42               	movlw	66
  3054   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  3055   00160E  ECAB  F022         	call	___flge	;wreg free
  3056   001612  B0D8               	btfsc	status,0,c
  3057   001614  EF0E  F00B         	goto	u6831
  3058   001618  EF10  F00B         	goto	u6830
  3059   00161C                     u6831:
  3060   00161C  EF7B  F00B         	goto	l5560
  3061   001620                     u6830:
  3062   001620  0E00               	movlw	0
  3063   001622  6E01               	movwf	___flge@ff1^0,c
  3064   001624  0E00               	movlw	0
  3065   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  3066   001628  0EE0               	movlw	224
  3067   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  3068   00162C  0E41               	movlw	65
  3069   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  3070   001630  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3071   001634  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3072   001638  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3073   00163C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3074   001640  ECAB  F022         	call	___flge	;wreg free
  3075   001644  B0D8               	btfsc	status,0,c
  3076   001646  EF27  F00B         	goto	u6841
  3077   00164A  EF29  F00B         	goto	u6840
  3078   00164E                     u6841:
  3079   00164E  EF7B  F00B         	goto	l5560
  3080   001652                     u6840:
  3081   001652  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3082   001656  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3083   00165A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3084   00165E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3085   001662  0E00               	movlw	0
  3086   001664  6E05               	movwf	___flge@ff2^0,c
  3087   001666  0E00               	movlw	0
  3088   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  3089   00166A  0E04               	movlw	4
  3090   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  3091   00166E  0E42               	movlw	66
  3092   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  3093   001672  ECAB  F022         	call	___flge	;wreg free
  3094   001676  B0D8               	btfsc	status,0,c
  3095   001678  EF40  F00B         	goto	u6851
  3096   00167C  EF42  F00B         	goto	u6850
  3097   001680                     u6851:
  3098   001680  EF7B  F00B         	goto	l5560
  3099   001684                     u6850:
  3100   001684  0E00               	movlw	0
  3101   001686  6E01               	movwf	___flge@ff1^0,c
  3102   001688  0E00               	movlw	0
  3103   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  3104   00168C  0E14               	movlw	20
  3105   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  3106   001690  0E42               	movlw	66
  3107   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  3108   001694  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3109   001698  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3110   00169C  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3111   0016A0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3112   0016A4  ECAB  F022         	call	___flge	;wreg free
  3113   0016A8  B0D8               	btfsc	status,0,c
  3114   0016AA  EF59  F00B         	goto	u6861
  3115   0016AE  EF5B  F00B         	goto	u6860
  3116   0016B2                     u6861:
  3117   0016B2  EF7B  F00B         	goto	l5560
  3118   0016B6                     u6860:
  3119   0016B6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3120   0016BA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3121   0016BE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3122   0016C2  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3123   0016C6  0E00               	movlw	0
  3124   0016C8  6E05               	movwf	___flge@ff2^0,c
  3125   0016CA  0E00               	movlw	0
  3126   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  3127   0016CE  0E28               	movlw	40
  3128   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  3129   0016D2  0E42               	movlw	66
  3130   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  3131   0016D6  ECAB  F022         	call	___flge	;wreg free
  3132   0016DA  B0D8               	btfsc	status,0,c
  3133   0016DC  EF72  F00B         	goto	u6871
  3134   0016E0  EF74  F00B         	goto	u6870
  3135   0016E4                     u6871:
  3136   0016E4  EF7B  F00B         	goto	l5560
  3137   0016E8                     u6870:
  3138   0016E8  0E00               	movlw	0
  3139   0016EA  0100               	movlb	0	; () banked
  3140   0016EC  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3141   0016EE  0E07               	movlw	7
  3142   0016F0  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3143   0016F2  EF18  F00C         	goto	l5574
  3144   0016F6                     l5560:
  3145   0016F6  0E00               	movlw	0
  3146   0016F8  6E01               	movwf	___flge@ff1^0,c
  3147   0016FA  0E00               	movlw	0
  3148   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  3149   0016FE  0EB0               	movlw	176
  3150   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  3151   001702  0E41               	movlw	65
  3152   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  3153   001706  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3154   00170A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3155   00170E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3156   001712  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3157   001716  ECAB  F022         	call	___flge	;wreg free
  3158   00171A  B0D8               	btfsc	status,0,c
  3159   00171C  EF92  F00B         	goto	u6881
  3160   001720  EF94  F00B         	goto	u6880
  3161   001724                     u6881:
  3162   001724  EF18  F00C         	goto	l99
  3163   001728                     u6880:
  3164   001728  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3165   00172C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3166   001730  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3167   001734  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3168   001738  0E00               	movlw	0
  3169   00173A  6E05               	movwf	___flge@ff2^0,c
  3170   00173C  0E00               	movlw	0
  3171   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  3172   001740  0ED8               	movlw	216
  3173   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  3174   001744  0E41               	movlw	65
  3175   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  3176   001748  ECAB  F022         	call	___flge	;wreg free
  3177   00174C  B0D8               	btfsc	status,0,c
  3178   00174E  EFAB  F00B         	goto	u6891
  3179   001752  EFAD  F00B         	goto	u6890
  3180   001756                     u6891:
  3181   001756  EF18  F00C         	goto	l99
  3182   00175A                     u6890:
  3183   00175A  0E00               	movlw	0
  3184   00175C  6E01               	movwf	___flge@ff1^0,c
  3185   00175E  0E00               	movlw	0
  3186   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  3187   001762  0E40               	movlw	64
  3188   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  3189   001766  0E42               	movlw	66
  3190   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  3191   00176A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3192   00176E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3193   001772  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3194   001776  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3195   00177A  ECAB  F022         	call	___flge	;wreg free
  3196   00177E  B0D8               	btfsc	status,0,c
  3197   001780  EFC4  F00B         	goto	u6901
  3198   001784  EFC6  F00B         	goto	u6900
  3199   001788                     u6901:
  3200   001788  EF18  F00C         	goto	l99
  3201   00178C                     u6900:
  3202   00178C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3203   001790  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3204   001794  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3205   001798  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3206   00179C  0E00               	movlw	0
  3207   00179E  6E05               	movwf	___flge@ff2^0,c
  3208   0017A0  0E00               	movlw	0
  3209   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  3210   0017A4  0E54               	movlw	84
  3211   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  3212   0017A8  0E42               	movlw	66
  3213   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  3214   0017AC  ECAB  F022         	call	___flge	;wreg free
  3215   0017B0  B0D8               	btfsc	status,0,c
  3216   0017B2  EFDD  F00B         	goto	u6911
  3217   0017B6  EFDF  F00B         	goto	u6910
  3218   0017BA                     u6911:
  3219   0017BA  EF18  F00C         	goto	l99
  3220   0017BE                     u6910:
  3221   0017BE  0E00               	movlw	0
  3222   0017C0  6E01               	movwf	___flge@ff1^0,c
  3223   0017C2  0E00               	movlw	0
  3224   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  3225   0017C6  0E34               	movlw	52
  3226   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  3227   0017CA  0E42               	movlw	66
  3228   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  3229   0017CE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3230   0017D2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3231   0017D6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3232   0017DA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3233   0017DE  ECAB  F022         	call	___flge	;wreg free
  3234   0017E2  B0D8               	btfsc	status,0,c
  3235   0017E4  EFF6  F00B         	goto	u6921
  3236   0017E8  EFF8  F00B         	goto	u6920
  3237   0017EC                     u6921:
  3238   0017EC  EF18  F00C         	goto	l99
  3239   0017F0                     u6920:
  3240   0017F0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3241   0017F4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3242   0017F8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3243   0017FC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3244   001800  0E00               	movlw	0
  3245   001802  6E05               	movwf	___flge@ff2^0,c
  3246   001804  0E00               	movlw	0
  3247   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  3248   001808  0E48               	movlw	72
  3249   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  3250   00180C  0E42               	movlw	66
  3251   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  3252   001810  ECAB  F022         	call	___flge	;wreg free
  3253   001814  B0D8               	btfsc	status,0,c
  3254   001816  EF0F  F00C         	goto	u6931
  3255   00181A  EF11  F00C         	goto	u6930
  3256   00181E                     u6931:
  3257   00181E  EF18  F00C         	goto	l99
  3258   001822                     u6930:
  3259   001822  0E00               	movlw	0
  3260   001824  0100               	movlb	0	; () banked
  3261   001826  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3262   001828  0E08               	movlw	8
  3263   00182A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3264   00182C  EF18  F00C         	goto	l5574
  3265   001830                     l99:
  3266   001830                     l5574:
  3267                           
  3268                           ;color.c: 222:     return card_color;
  3269   001830  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  3270   001834  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  3271   001838  0012               	return		;funcret
  3272   00183A                     __end_of_color_cardCheck:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _color_read_Red *****************
  3276 ;; Defined at:
  3277 ;;		line 46 in file "color.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  tmp             2    9[COMRAM] unsigned int 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  2    4[COMRAM] unsigned int 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;Total ram usage:        7 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 2
  3298 ;; This function calls:
  3299 ;;		_I2C_2_Master_Read
  3300 ;;		_I2C_2_Master_RepStart
  3301 ;;		_I2C_2_Master_Start
  3302 ;;		_I2C_2_Master_Stop
  3303 ;;		_I2C_2_Master_Write
  3304 ;; This function is called by:
  3305 ;;		_color_cardCheck
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text7
  3310   004AB8                     __ptext7:
  3311                           	callstack 0
  3312   004AB8                     _color_read_Red:
  3313                           	callstack 26
  3314   004AB8                     
  3315                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  3316   004AB8  ECE9  F026         	call	_I2C_2_Master_Start	;wreg free
  3317                           
  3318                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  3319   004ABC  0E52               	movlw	82
  3320   004ABE  ECDE  F026         	call	_I2C_2_Master_Write
  3321                           
  3322                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  3323   004AC2  0EB6               	movlw	182
  3324   004AC4  ECDE  F026         	call	_I2C_2_Master_Write
  3325                           
  3326                           ;color.c: 52:  I2C_2_Master_RepStart();
  3327   004AC8  ECEE  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3328                           
  3329                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  3330   004ACC  0E53               	movlw	83
  3331   004ACE  ECDE  F026         	call	_I2C_2_Master_Write
  3332                           
  3333                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  3334   004AD2  0E01               	movlw	1
  3335   004AD4  EC1F  F026         	call	_I2C_2_Master_Read
  3336   004AD8  6E07               	movwf	??_color_read_Red^0,c
  3337   004ADA  5007               	movf	??_color_read_Red^0,w,c
  3338   004ADC  6E0A               	movwf	color_read_Red@tmp^0,c
  3339   004ADE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3340                           
  3341                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3342   004AE0  0E00               	movlw	0
  3343   004AE2  EC1F  F026         	call	_I2C_2_Master_Read
  3344   004AE6  6E07               	movwf	??_color_read_Red^0,c
  3345   004AE8  5007               	movf	??_color_read_Red^0,w,c
  3346   004AEA  6E09               	movwf	(??_color_read_Red+2)^0,c
  3347   004AEC  6A08               	clrf	(??_color_read_Red+1)^0,c
  3348   004AEE  500A               	movf	color_read_Red@tmp^0,w,c
  3349   004AF0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3350   004AF2  6E0A               	movwf	color_read_Red@tmp^0,c
  3351   004AF4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3352   004AF6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3353   004AF8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3354                           
  3355                           ;color.c: 56:  I2C_2_Master_Stop();
  3356   004AFA  ECE4  F026         	call	_I2C_2_Master_Stop	;wreg free
  3357   004AFE                     
  3358                           ;color.c: 57:  return tmp;
  3359   004AFE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3360   004B02  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3361   004B06  0012               	return		;funcret
  3362   004B08                     __end_of_color_read_Red:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _color_read_Green *****************
  3366 ;; Defined at:
  3367 ;;		line 60 in file "color.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  tmp             2    9[COMRAM] unsigned int 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  2    4[COMRAM] unsigned int 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;Total ram usage:        7 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 2
  3388 ;; This function calls:
  3389 ;;		_I2C_2_Master_Read
  3390 ;;		_I2C_2_Master_RepStart
  3391 ;;		_I2C_2_Master_Start
  3392 ;;		_I2C_2_Master_Stop
  3393 ;;		_I2C_2_Master_Write
  3394 ;; This function is called by:
  3395 ;;		_color_cardCheck
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text8
  3400   004B08                     __ptext8:
  3401                           	callstack 0
  3402   004B08                     _color_read_Green:
  3403                           	callstack 26
  3404   004B08                     
  3405                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  3406   004B08  ECE9  F026         	call	_I2C_2_Master_Start	;wreg free
  3407                           
  3408                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  3409   004B0C  0E52               	movlw	82
  3410   004B0E  ECDE  F026         	call	_I2C_2_Master_Write
  3411                           
  3412                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  3413   004B12  0EB8               	movlw	184
  3414   004B14  ECDE  F026         	call	_I2C_2_Master_Write
  3415                           
  3416                           ;color.c: 66:  I2C_2_Master_RepStart();
  3417   004B18  ECEE  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3418                           
  3419                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  3420   004B1C  0E53               	movlw	83
  3421   004B1E  ECDE  F026         	call	_I2C_2_Master_Write
  3422                           
  3423                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  3424   004B22  0E01               	movlw	1
  3425   004B24  EC1F  F026         	call	_I2C_2_Master_Read
  3426   004B28  6E07               	movwf	??_color_read_Green^0,c
  3427   004B2A  5007               	movf	??_color_read_Green^0,w,c
  3428   004B2C  6E0A               	movwf	color_read_Green@tmp^0,c
  3429   004B2E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3430                           
  3431                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3432   004B30  0E00               	movlw	0
  3433   004B32  EC1F  F026         	call	_I2C_2_Master_Read
  3434   004B36  6E07               	movwf	??_color_read_Green^0,c
  3435   004B38  5007               	movf	??_color_read_Green^0,w,c
  3436   004B3A  6E09               	movwf	(??_color_read_Green+2)^0,c
  3437   004B3C  6A08               	clrf	(??_color_read_Green+1)^0,c
  3438   004B3E  500A               	movf	color_read_Green@tmp^0,w,c
  3439   004B40  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3440   004B42  6E0A               	movwf	color_read_Green@tmp^0,c
  3441   004B44  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3442   004B46  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3443   004B48  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3444                           
  3445                           ;color.c: 70:  I2C_2_Master_Stop();
  3446   004B4A  ECE4  F026         	call	_I2C_2_Master_Stop	;wreg free
  3447   004B4E                     
  3448                           ;color.c: 71:  return tmp;
  3449   004B4E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3450   004B52  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3451   004B56  0012               	return		;funcret
  3452   004B58                     __end_of_color_read_Green:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _color_read_Clear *****************
  3456 ;; Defined at:
  3457 ;;		line 88 in file "color.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  tmp             2    9[COMRAM] unsigned int 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2    4[COMRAM] unsigned int 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3473 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3474 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;Total ram usage:        7 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 2
  3478 ;; This function calls:
  3479 ;;		_I2C_2_Master_Read
  3480 ;;		_I2C_2_Master_RepStart
  3481 ;;		_I2C_2_Master_Start
  3482 ;;		_I2C_2_Master_Stop
  3483 ;;		_I2C_2_Master_Write
  3484 ;; This function is called by:
  3485 ;;		_color_cardCheck
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text9
  3490   004B58                     __ptext9:
  3491                           	callstack 0
  3492   004B58                     _color_read_Clear:
  3493                           	callstack 26
  3494   004B58                     
  3495                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3496   004B58  ECE9  F026         	call	_I2C_2_Master_Start	;wreg free
  3497                           
  3498                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3499   004B5C  0E52               	movlw	82
  3500   004B5E  ECDE  F026         	call	_I2C_2_Master_Write
  3501                           
  3502                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  3503   004B62  0EB4               	movlw	180
  3504   004B64  ECDE  F026         	call	_I2C_2_Master_Write
  3505                           
  3506                           ;color.c: 96:  I2C_2_Master_RepStart();
  3507   004B68  ECEE  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3508                           
  3509                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3510   004B6C  0E53               	movlw	83
  3511   004B6E  ECDE  F026         	call	_I2C_2_Master_Write
  3512                           
  3513                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3514   004B72  0E01               	movlw	1
  3515   004B74  EC1F  F026         	call	_I2C_2_Master_Read
  3516   004B78  6E07               	movwf	??_color_read_Clear^0,c
  3517   004B7A  5007               	movf	??_color_read_Clear^0,w,c
  3518   004B7C  6E0A               	movwf	color_read_Clear@tmp^0,c
  3519   004B7E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3520                           
  3521                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3522   004B80  0E00               	movlw	0
  3523   004B82  EC1F  F026         	call	_I2C_2_Master_Read
  3524   004B86  6E07               	movwf	??_color_read_Clear^0,c
  3525   004B88  5007               	movf	??_color_read_Clear^0,w,c
  3526   004B8A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3527   004B8C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3528   004B8E  500A               	movf	color_read_Clear@tmp^0,w,c
  3529   004B90  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3530   004B92  6E0A               	movwf	color_read_Clear@tmp^0,c
  3531   004B94  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3532   004B96  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3533   004B98  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3534                           
  3535                           ;color.c: 100:  I2C_2_Master_Stop();
  3536   004B9A  ECE4  F026         	call	_I2C_2_Master_Stop	;wreg free
  3537   004B9E                     
  3538                           ;color.c: 101:  return tmp;
  3539   004B9E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3540   004BA2  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3541   004BA6  0012               	return		;funcret
  3542   004BA8                     __end_of_color_read_Clear:
  3543                           	callstack 0
  3544                           
  3545 ;; *************** function _color_read_Blue *****************
  3546 ;; Defined at:
  3547 ;;		line 74 in file "color.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  tmp             2    9[COMRAM] unsigned int 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    4[COMRAM] unsigned int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3563 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3564 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;Total ram usage:        7 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 2
  3568 ;; This function calls:
  3569 ;;		_I2C_2_Master_Read
  3570 ;;		_I2C_2_Master_RepStart
  3571 ;;		_I2C_2_Master_Start
  3572 ;;		_I2C_2_Master_Stop
  3573 ;;		_I2C_2_Master_Write
  3574 ;; This function is called by:
  3575 ;;		_color_cardCheck
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text10
  3580   004BA8                     __ptext10:
  3581                           	callstack 0
  3582   004BA8                     _color_read_Blue:
  3583                           	callstack 26
  3584   004BA8                     
  3585                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  3586   004BA8  ECE9  F026         	call	_I2C_2_Master_Start	;wreg free
  3587                           
  3588                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  3589   004BAC  0E52               	movlw	82
  3590   004BAE  ECDE  F026         	call	_I2C_2_Master_Write
  3591                           
  3592                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  3593   004BB2  0EBA               	movlw	186
  3594   004BB4  ECDE  F026         	call	_I2C_2_Master_Write
  3595                           
  3596                           ;color.c: 80:  I2C_2_Master_RepStart();
  3597   004BB8  ECEE  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3598                           
  3599                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3600   004BBC  0E53               	movlw	83
  3601   004BBE  ECDE  F026         	call	_I2C_2_Master_Write
  3602                           
  3603                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  3604   004BC2  0E01               	movlw	1
  3605   004BC4  EC1F  F026         	call	_I2C_2_Master_Read
  3606   004BC8  6E07               	movwf	??_color_read_Blue^0,c
  3607   004BCA  5007               	movf	??_color_read_Blue^0,w,c
  3608   004BCC  6E0A               	movwf	color_read_Blue@tmp^0,c
  3609   004BCE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3610                           
  3611                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3612   004BD0  0E00               	movlw	0
  3613   004BD2  EC1F  F026         	call	_I2C_2_Master_Read
  3614   004BD6  6E07               	movwf	??_color_read_Blue^0,c
  3615   004BD8  5007               	movf	??_color_read_Blue^0,w,c
  3616   004BDA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3617   004BDC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3618   004BDE  500A               	movf	color_read_Blue@tmp^0,w,c
  3619   004BE0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3620   004BE2  6E0A               	movwf	color_read_Blue@tmp^0,c
  3621   004BE4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3622   004BE6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3623   004BE8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3624                           
  3625                           ;color.c: 84:  I2C_2_Master_Stop();
  3626   004BEA  ECE4  F026         	call	_I2C_2_Master_Stop	;wreg free
  3627   004BEE                     
  3628                           ;color.c: 85:  return tmp;
  3629   004BEE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3630   004BF2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3631   004BF6  0012               	return		;funcret
  3632   004BF8                     __end_of_color_read_Blue:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _I2C_2_Master_Write *****************
  3636 ;; Defined at:
  3637 ;;		line 45 in file "i2c.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  data_byte       1    wreg     unsigned char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  data_byte       1    1[COMRAM] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;Total ram usage:        1 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 1
  3658 ;; This function calls:
  3659 ;;		_I2C_2_Master_Idle
  3660 ;; This function is called by:
  3661 ;;		_color_writetoaddr
  3662 ;;		_color_read_Red
  3663 ;;		_color_read_Green
  3664 ;;		_color_read_Blue
  3665 ;;		_color_read_Clear
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text11
  3670   004DBC                     __ptext11:
  3671                           	callstack 0
  3672   004DBC                     _I2C_2_Master_Write:
  3673                           	callstack 26
  3674                           
  3675                           ;incstack = 0
  3676                           ;I2C_2_Master_Write@data_byte stored from wreg
  3677   004DBC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3678   004DBE                     
  3679                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3680   004DBE  ECA7  F026         	call	_I2C_2_Master_Idle	;wreg free
  3681   004DC2                     
  3682                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3683   004DC2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3684   004DC6  0012               	return		;funcret
  3685   004DC8                     __end_of_I2C_2_Master_Write:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _I2C_2_Master_Stop *****************
  3689 ;; Defined at:
  3690 ;;		line 39 in file "i2c.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; Hardware stack levels required when called: 1
  3711 ;; This function calls:
  3712 ;;		_I2C_2_Master_Idle
  3713 ;; This function is called by:
  3714 ;;		_color_writetoaddr
  3715 ;;		_color_read_Red
  3716 ;;		_color_read_Green
  3717 ;;		_color_read_Blue
  3718 ;;		_color_read_Clear
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text12
  3723   004DC8                     __ptext12:
  3724                           	callstack 0
  3725   004DC8                     _I2C_2_Master_Stop:
  3726                           	callstack 26
  3727   004DC8                     
  3728                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3729   004DC8  ECA7  F026         	call	_I2C_2_Master_Idle	;wreg free
  3730   004DCC                     
  3731                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3732   004DCC  010E               	movlb	14	; () banked
  3733   004DCE  85DA               	bsf	218,2,b	;volatile
  3734   004DD0                     
  3735                           ; BSR set to: 14
  3736   004DD0  0012               	return		;funcret
  3737   004DD2                     __end_of_I2C_2_Master_Stop:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _I2C_2_Master_Start *****************
  3741 ;; Defined at:
  3742 ;;		line 27 in file "i2c.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;Total ram usage:        0 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 1
  3763 ;; This function calls:
  3764 ;;		_I2C_2_Master_Idle
  3765 ;; This function is called by:
  3766 ;;		_color_writetoaddr
  3767 ;;		_color_read_Red
  3768 ;;		_color_read_Green
  3769 ;;		_color_read_Blue
  3770 ;;		_color_read_Clear
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text13
  3775   004DD2                     __ptext13:
  3776                           	callstack 0
  3777   004DD2                     _I2C_2_Master_Start:
  3778                           	callstack 26
  3779   004DD2                     
  3780                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3781   004DD2  ECA7  F026         	call	_I2C_2_Master_Idle	;wreg free
  3782   004DD6                     
  3783                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3784   004DD6  010E               	movlb	14	; () banked
  3785   004DD8  81DA               	bsf	218,0,b	;volatile
  3786   004DDA                     
  3787                           ; BSR set to: 14
  3788   004DDA  0012               	return		;funcret
  3789   004DDC                     __end_of_I2C_2_Master_Start:
  3790                           	callstack 0
  3791                           
  3792 ;; *************** function _I2C_2_Master_RepStart *****************
  3793 ;; Defined at:
  3794 ;;		line 33 in file "i2c.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 1
  3815 ;; This function calls:
  3816 ;;		_I2C_2_Master_Idle
  3817 ;; This function is called by:
  3818 ;;		_color_read_Red
  3819 ;;		_color_read_Green
  3820 ;;		_color_read_Blue
  3821 ;;		_color_read_Clear
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text14
  3826   004DDC                     __ptext14:
  3827                           	callstack 0
  3828   004DDC                     _I2C_2_Master_RepStart:
  3829                           	callstack 26
  3830   004DDC                     
  3831                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3832   004DDC  ECA7  F026         	call	_I2C_2_Master_Idle	;wreg free
  3833   004DE0                     
  3834                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3835   004DE0  010E               	movlb	14	; () banked
  3836   004DE2  83DA               	bsf	218,1,b	;volatile
  3837   004DE4                     
  3838                           ; BSR set to: 14
  3839   004DE4  0012               	return		;funcret
  3840   004DE6                     __end_of_I2C_2_Master_RepStart:
  3841                           	callstack 0
  3842                           
  3843 ;; *************** function _I2C_2_Master_Read *****************
  3844 ;; Defined at:
  3845 ;;		line 51 in file "i2c.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  ack             1    wreg     unsigned char 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  ack             1    2[COMRAM] unsigned char 
  3850 ;;  tmp             1    3[COMRAM] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      unsigned char 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;Total ram usage:        3 bytes
  3865 ;; Hardware stack levels used: 1
  3866 ;; Hardware stack levels required when called: 1
  3867 ;; This function calls:
  3868 ;;		_I2C_2_Master_Idle
  3869 ;; This function is called by:
  3870 ;;		_color_read_Red
  3871 ;;		_color_read_Green
  3872 ;;		_color_read_Blue
  3873 ;;		_color_read_Clear
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text15
  3878   004C3E                     __ptext15:
  3879                           	callstack 0
  3880   004C3E                     _I2C_2_Master_Read:
  3881                           	callstack 26
  3882                           
  3883                           ; BSR set to: 14
  3884                           ;incstack = 0
  3885                           ;I2C_2_Master_Read@ack stored from wreg
  3886   004C3E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3887   004C40                     
  3888                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3889   004C40  ECA7  F026         	call	_I2C_2_Master_Idle	;wreg free
  3890   004C44                     
  3891                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3892   004C44  010E               	movlb	14	; () banked
  3893   004C46  87DA               	bsf	218,3,b	;volatile
  3894                           
  3895                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3896   004C48  ECA7  F026         	call	_I2C_2_Master_Idle	;wreg free
  3897   004C4C                     
  3898                           ;i2c.c: 57:   tmp = SSP2BUF;
  3899   004C4C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3900                           
  3901                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3902   004C50  ECA7  F026         	call	_I2C_2_Master_Idle	;wreg free
  3903   004C54                     
  3904                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3905   004C54  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3906   004C56  B4D8               	btfsc	status,2,c
  3907   004C58  EF30  F026         	goto	u6171
  3908   004C5C  EF34  F026         	goto	u6170
  3909   004C60                     u6171:
  3910   004C60  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3911   004C62  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3912   004C64  EF35  F026         	goto	u6188
  3913   004C68                     u6170:
  3914   004C68  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3915   004C6A                     u6188:
  3916   004C6A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3917   004C6C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3918   004C6E  010E               	movlb	14	; () banked
  3919   004C70  51DA               	movf	218,w,b	;volatile
  3920   004C72  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3921   004C74  0BDF               	andlw	-33
  3922   004C76  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3923   004C78  6FDA               	movwf	218,b	;volatile
  3924   004C7A                     
  3925                           ; BSR set to: 14
  3926                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3927   004C7A  89DA               	bsf	218,4,b	;volatile
  3928   004C7C                     
  3929                           ; BSR set to: 14
  3930                           ;i2c.c: 61:   return tmp;
  3931   004C7C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3932   004C7E                     
  3933                           ; BSR set to: 14
  3934   004C7E  0012               	return		;funcret
  3935   004C80                     __end_of_I2C_2_Master_Read:
  3936                           	callstack 0
  3937                           
  3938 ;; *************** function _I2C_2_Master_Idle *****************
  3939 ;; Defined at:
  3940 ;;		line 22 in file "i2c.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;Total ram usage:        1 bytes
  3959 ;; Hardware stack levels used: 1
  3960 ;; This function calls:
  3961 ;;		Nothing
  3962 ;; This function is called by:
  3963 ;;		_I2C_2_Master_Start
  3964 ;;		_I2C_2_Master_RepStart
  3965 ;;		_I2C_2_Master_Stop
  3966 ;;		_I2C_2_Master_Write
  3967 ;;		_I2C_2_Master_Read
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text16
  3972   004D4E                     __ptext16:
  3973                           	callstack 0
  3974   004D4E                     _I2C_2_Master_Idle:
  3975                           	callstack 26
  3976   004D4E                     l135:
  3977   004D4E  010E               	movlb	14	; () banked
  3978   004D50  B5D8               	btfsc	216,2,b	;volatile
  3979   004D52  EFAD  F026         	goto	u5531
  3980   004D56  EFAF  F026         	goto	u5530
  3981   004D5A                     u5531:
  3982   004D5A  EFA7  F026         	goto	l135
  3983   004D5E                     u5530:
  3984   004D5E                     
  3985                           ; BSR set to: 14
  3986   004D5E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3987   004D62  0E1F               	movlw	31
  3988   004D64  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3989   004D66  A4D8               	btfss	status,2,c
  3990   004D68  EFB8  F026         	goto	u5541
  3991   004D6C  EFBA  F026         	goto	u5540
  3992   004D70                     u5541:
  3993   004D70  EFA7  F026         	goto	l135
  3994   004D74                     u5540:
  3995   004D74                     
  3996                           ; BSR set to: 14
  3997   004D74  0012               	return		;funcret
  3998   004D76                     __end_of_I2C_2_Master_Idle:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _RGB_to_HSV *****************
  4002 ;; Defined at:
  4003 ;;		line 125 in file "color.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  R               4   10[BANK0 ] float 
  4006 ;;  G               4   14[BANK0 ] float 
  4007 ;;  B               4   18[BANK0 ] float 
  4008 ;;  C               4   22[BANK0 ] float 
  4009 ;;  H               1   26[BANK0 ] PTR float 
  4010 ;;		 -> color_cardCheck@H(4), 
  4011 ;;  S               1   27[BANK0 ] PTR float 
  4012 ;;		 -> color_cardCheck@S(4), 
  4013 ;;  V               1   28[BANK0 ] PTR float 
  4014 ;;		 -> color_cardCheck@V(4), 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  b               4   93[BANK0 ] float 
  4017 ;;  g               4   89[BANK0 ] float 
  4018 ;;  r               4   85[BANK0 ] float 
  4019 ;;  maxRGB          4   81[BANK0 ] float 
  4020 ;;  deltaRGB        4   77[BANK0 ] float 
  4021 ;;  H_temp          4   73[BANK0 ] float 
  4022 ;;  minRGB          4   57[BANK0 ] float 
  4023 ;;  c_norm          4   29[BANK0 ] float 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4033 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;Total ram usage:       87 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 3
  4040 ;; This function calls:
  4041 ;;		___fladd
  4042 ;;		___fldiv
  4043 ;;		___fleq
  4044 ;;		___flge
  4045 ;;		___flmul
  4046 ;;		___flsub
  4047 ;;		_custom_floatmodulo
  4048 ;; This function is called by:
  4049 ;;		_color_cardCheck
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text17
  4054   00183A                     __ptext17:
  4055                           	callstack 0
  4056   00183A                     _RGB_to_HSV:
  4057                           	callstack 25
  4058   00183A                     
  4059                           ;color.c: 128:     float r = R/65535.0;
  4060   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  4061   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  4062   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  4063   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  4064   00184A  0E00               	movlw	0
  4065   00184C  6E26               	movwf	___fldiv@a^0,c
  4066   00184E  0EFF               	movlw	255
  4067   001850  6E27               	movwf	(___fldiv@a+1)^0,c
  4068   001852  0E7F               	movlw	127
  4069   001854  6E28               	movwf	(___fldiv@a+2)^0,c
  4070   001856  0E47               	movlw	71
  4071   001858  6E29               	movwf	(___fldiv@a+3)^0,c
  4072   00185A  EC52  F019         	call	___fldiv	;wreg free
  4073   00185E  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  4074   001862  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  4075   001866  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  4076   00186A  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  4077                           
  4078                           ;color.c: 129:     float g = G/65535.0;
  4079   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  4080   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  4081   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  4082   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  4083   00187E  0E00               	movlw	0
  4084   001880  6E26               	movwf	___fldiv@a^0,c
  4085   001882  0EFF               	movlw	255
  4086   001884  6E27               	movwf	(___fldiv@a+1)^0,c
  4087   001886  0E7F               	movlw	127
  4088   001888  6E28               	movwf	(___fldiv@a+2)^0,c
  4089   00188A  0E47               	movlw	71
  4090   00188C  6E29               	movwf	(___fldiv@a+3)^0,c
  4091   00188E  EC52  F019         	call	___fldiv	;wreg free
  4092   001892  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  4093   001896  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  4094   00189A  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  4095   00189E  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  4096                           
  4097                           ;color.c: 130:     float b = B/65535.0;
  4098   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  4099   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  4100   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  4101   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  4102   0018B2  0E00               	movlw	0
  4103   0018B4  6E26               	movwf	___fldiv@a^0,c
  4104   0018B6  0EFF               	movlw	255
  4105   0018B8  6E27               	movwf	(___fldiv@a+1)^0,c
  4106   0018BA  0E7F               	movlw	127
  4107   0018BC  6E28               	movwf	(___fldiv@a+2)^0,c
  4108   0018BE  0E47               	movlw	71
  4109   0018C0  6E29               	movwf	(___fldiv@a+3)^0,c
  4110   0018C2  EC52  F019         	call	___fldiv	;wreg free
  4111   0018C6  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  4112   0018CA  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  4113   0018CE  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  4114   0018D2  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  4115                           
  4116                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  4117   0018D6  0E00               	movlw	0
  4118   0018D8  6E26               	movwf	___fldiv@a^0,c
  4119   0018DA  0EFF               	movlw	255
  4120   0018DC  6E27               	movwf	(___fldiv@a+1)^0,c
  4121   0018DE  0E7F               	movlw	127
  4122   0018E0  6E28               	movwf	(___fldiv@a+2)^0,c
  4123   0018E2  0E47               	movlw	71
  4124   0018E4  6E29               	movwf	(___fldiv@a+3)^0,c
  4125   0018E6  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  4126   0018EA  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  4127   0018EE  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  4128   0018F2  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  4129   0018F6  EC52  F019         	call	___fldiv	;wreg free
  4130   0018FA  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2716
  4131   0018FE  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2716+1
  4132   001902  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2716+2
  4133   001906  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2716+3
  4134                           
  4135                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  4136   00190A  0E00               	movlw	0
  4137   00190C  6E22               	movwf	___fldiv@b^0,c
  4138   00190E  0E00               	movlw	0
  4139   001910  6E23               	movwf	(___fldiv@b+1)^0,c
  4140   001912  0E80               	movlw	128
  4141   001914  6E24               	movwf	(___fldiv@b+2)^0,c
  4142   001916  0E3F               	movlw	63
  4143   001918  6E25               	movwf	(___fldiv@b+3)^0,c
  4144   00191A  C081  F026         	movff	_RGB_to_HSV$2716,___fldiv@a
  4145   00191E  C082  F027         	movff	_RGB_to_HSV$2716+1,___fldiv@a+1
  4146   001922  C083  F028         	movff	_RGB_to_HSV$2716+2,___fldiv@a+2
  4147   001926  C084  F029         	movff	_RGB_to_HSV$2716+3,___fldiv@a+3
  4148   00192A  EC52  F019         	call	___fldiv	;wreg free
  4149   00192E  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  4150   001932  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  4151   001936  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  4152   00193A  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  4153                           
  4154                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  4155   00193E  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4156   001942  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4157   001946  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4158   00194A  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4159   00194E  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4160   001952  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4161   001956  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4162   00195A  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4163   00195E  ECAB  F022         	call	___flge	;wreg free
  4164   001962  A0D8               	btfss	status,0,c
  4165   001964  EFB6  F00C         	goto	u6281
  4166   001968  EFB8  F00C         	goto	u6280
  4167   00196C                     u6281:
  4168   00196C  EFED  F00C         	goto	l5320
  4169   001970                     u6280:
  4170   001970  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4171   001974  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4172   001978  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4173   00197C  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4174   001980  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4175   001984  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4176   001988  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4177   00198C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4178   001990  ECAB  F022         	call	___flge	;wreg free
  4179   001994  A0D8               	btfss	status,0,c
  4180   001996  EFCF  F00C         	goto	u6291
  4181   00199A  EFD1  F00C         	goto	u6290
  4182   00199E                     u6291:
  4183   00199E  EFDB  F00C         	goto	l58
  4184   0019A2                     u6290:
  4185   0019A2  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  4186   0019A6  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  4187   0019AA  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  4188   0019AE  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  4189   0019B2  EFE3  F00C         	goto	l60
  4190   0019B6                     l58:
  4191   0019B6  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  4192   0019BA  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  4193   0019BE  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  4194   0019C2  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  4195   0019C6                     l60:
  4196   0019C6  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  4197   0019CA  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  4198   0019CE  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  4199   0019D2  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  4200   0019D6  EF20  F00D         	goto	l5324
  4201   0019DA                     l5320:
  4202   0019DA  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4203   0019DE  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4204   0019E2  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4205   0019E6  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4206   0019EA  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4207   0019EE  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4208   0019F2  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4209   0019F6  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4210   0019FA  ECAB  F022         	call	___flge	;wreg free
  4211   0019FE  A0D8               	btfss	status,0,c
  4212   001A00  EF04  F00D         	goto	u6301
  4213   001A04  EF06  F00D         	goto	u6300
  4214   001A08                     u6301:
  4215   001A08  EF10  F00D         	goto	l62
  4216   001A0C                     u6300:
  4217   001A0C  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  4218   001A10  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  4219   001A14  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  4220   001A18  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  4221   001A1C  EF18  F00D         	goto	l64
  4222   001A20                     l62:
  4223   001A20  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  4224   001A24  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  4225   001A28  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  4226   001A2C  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  4227   001A30                     l64:
  4228   001A30  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  4229   001A34  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  4230   001A38  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  4231   001A3C  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  4232   001A40                     l5324:
  4233                           
  4234                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  4235   001A40  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4236   001A44  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4237   001A48  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4238   001A4C  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4239   001A50  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4240   001A54  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4241   001A58  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4242   001A5C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4243   001A60  ECAB  F022         	call	___flge	;wreg free
  4244   001A64  A0D8               	btfss	status,0,c
  4245   001A66  EF37  F00D         	goto	u6311
  4246   001A6A  EF39  F00D         	goto	u6310
  4247   001A6E                     u6311:
  4248   001A6E  EF6E  F00D         	goto	l5330
  4249   001A72                     u6310:
  4250   001A72  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4251   001A76  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4252   001A7A  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4253   001A7E  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4254   001A82  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4255   001A86  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4256   001A8A  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4257   001A8E  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4258   001A92  ECAB  F022         	call	___flge	;wreg free
  4259   001A96  A0D8               	btfss	status,0,c
  4260   001A98  EF50  F00D         	goto	u6321
  4261   001A9C  EF52  F00D         	goto	u6320
  4262   001AA0                     u6321:
  4263   001AA0  EF5C  F00D         	goto	l70
  4264   001AA4                     u6320:
  4265   001AA4  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  4266   001AA8  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  4267   001AAC  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  4268   001AB0  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  4269   001AB4  EF64  F00D         	goto	l72
  4270   001AB8                     l70:
  4271   001AB8  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  4272   001ABC  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  4273   001AC0  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  4274   001AC4  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  4275   001AC8                     l72:
  4276   001AC8  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  4277   001ACC  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  4278   001AD0  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  4279   001AD4  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  4280   001AD8  EFA1  F00D         	goto	l5334
  4281   001ADC                     l5330:
  4282   001ADC  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4283   001AE0  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4284   001AE4  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4285   001AE8  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4286   001AEC  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4287   001AF0  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4288   001AF4  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4289   001AF8  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4290   001AFC  ECAB  F022         	call	___flge	;wreg free
  4291   001B00  A0D8               	btfss	status,0,c
  4292   001B02  EF85  F00D         	goto	u6331
  4293   001B06  EF87  F00D         	goto	u6330
  4294   001B0A                     u6331:
  4295   001B0A  EF91  F00D         	goto	l74
  4296   001B0E                     u6330:
  4297   001B0E  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  4298   001B12  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  4299   001B16  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  4300   001B1A  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  4301   001B1E  EF99  F00D         	goto	l76
  4302   001B22                     l74:
  4303   001B22  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  4304   001B26  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  4305   001B2A  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  4306   001B2E  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  4307   001B32                     l76:
  4308   001B32  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  4309   001B36  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  4310   001B3A  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  4311   001B3E  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  4312   001B42                     l5334:
  4313                           
  4314                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  4315   001B42  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  4316   001B46  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  4317   001B4A  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  4318   001B4E  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  4319   001B52  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  4320   001B56  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  4321   001B5A  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  4322   001B5E  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  4323   001B62  ECFC  F025         	call	___flsub	;wreg free
  4324   001B66  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  4325   001B6A  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  4326   001B6E  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  4327   001B72  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  4328                           
  4329                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  4330   001B76  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  4331   001B7A  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  4332   001B7E  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  4333   001B82  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  4334   001B86  0E00               	movlw	0
  4335   001B88  6E05               	movwf	___fleq@ff2^0,c
  4336   001B8A  0E00               	movlw	0
  4337   001B8C  6E06               	movwf	(___fleq@ff2+1)^0,c
  4338   001B8E  0E00               	movlw	0
  4339   001B90  6E07               	movwf	(___fleq@ff2+2)^0,c
  4340   001B92  0E00               	movlw	0
  4341   001B94  6E08               	movwf	(___fleq@ff2+3)^0,c
  4342   001B96  EC54  F024         	call	___fleq	;wreg free
  4343   001B9A  A0D8               	btfss	status,0,c
  4344   001B9C  EFD2  F00D         	goto	u6341
  4345   001BA0  EFD4  F00D         	goto	u6340
  4346   001BA4                     u6341:
  4347   001BA4  EFDF  F00D         	goto	l5338
  4348   001BA8                     u6340:
  4349   001BA8  0E00               	movlw	0
  4350   001BAA  0100               	movlb	0	; () banked
  4351   001BAC  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  4352   001BAE  0E00               	movlw	0
  4353   001BB0  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  4354   001BB2  0E00               	movlw	0
  4355   001BB4  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  4356   001BB6  0E00               	movlw	0
  4357   001BB8  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  4358   001BBA  EF40  F00F         	goto	l5358
  4359   001BBE                     l5338:
  4360   001BBE  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4361   001BC2  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4362   001BC6  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4363   001BCA  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4364   001BCE  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  4365   001BD2  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  4366   001BD6  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  4367   001BDA  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  4368   001BDE  EC54  F024         	call	___fleq	;wreg free
  4369   001BE2  A0D8               	btfss	status,0,c
  4370   001BE4  EFF6  F00D         	goto	u6351
  4371   001BE8  EFF8  F00D         	goto	u6350
  4372   001BEC                     u6351:
  4373   001BEC  EF5A  F00E         	goto	l5346
  4374   001BF0                     u6350:
  4375   001BF0  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4376   001BF4  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4377   001BF8  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4378   001BFC  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4379   001C00  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  4380   001C04  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  4381   001C08  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  4382   001C0C  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  4383   001C10  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  4384   001C14  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  4385   001C18  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  4386   001C1C  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  4387   001C20  ECFC  F025         	call	___flsub	;wreg free
  4388   001C24  C01A  F022         	movff	?___flsub,___fldiv@b
  4389   001C28  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4390   001C2C  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4391   001C30  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4392   001C34  EC52  F019         	call	___fldiv	;wreg free
  4393   001C38  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2717
  4394   001C3C  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4395   001C40  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4396   001C44  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4397   001C48  0E00               	movlw	0
  4398   001C4A  6E58               	movwf	custom_floatmodulo@y^0,c
  4399   001C4C  0E00               	movlw	0
  4400   001C4E  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  4401   001C50  0EC0               	movlw	192
  4402   001C52  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  4403   001C54  0E40               	movlw	64
  4404   001C56  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  4405   001C58  C085  F054         	movff	_RGB_to_HSV$2717,custom_floatmodulo@x
  4406   001C5C  C086  F055         	movff	_RGB_to_HSV$2717+1,custom_floatmodulo@x+1
  4407   001C60  C087  F056         	movff	_RGB_to_HSV$2717+2,custom_floatmodulo@x+2
  4408   001C64  C088  F057         	movff	_RGB_to_HSV$2717+3,custom_floatmodulo@x+3
  4409   001C68  EC9C  F021         	call	_custom_floatmodulo	;wreg free
  4410   001C6C  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2718
  4411   001C70  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2718+1
  4412   001C74  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2718+2
  4413   001C78  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2718+3
  4414   001C7C  C089  F03B         	movff	_RGB_to_HSV$2718,___flmul@b
  4415   001C80  C08A  F03C         	movff	_RGB_to_HSV$2718+1,___flmul@b+1
  4416   001C84  C08B  F03D         	movff	_RGB_to_HSV$2718+2,___flmul@b+2
  4417   001C88  C08C  F03E         	movff	_RGB_to_HSV$2718+3,___flmul@b+3
  4418   001C8C  0E00               	movlw	0
  4419   001C8E  6E3F               	movwf	___flmul@a^0,c
  4420   001C90  0E00               	movlw	0
  4421   001C92  6E40               	movwf	(___flmul@a+1)^0,c
  4422   001C94  0E70               	movlw	112
  4423   001C96  6E41               	movwf	(___flmul@a+2)^0,c
  4424   001C98  0E42               	movlw	66
  4425   001C9A  6E42               	movwf	(___flmul@a+3)^0,c
  4426   001C9C  EC3D  F017         	call	___flmul	;wreg free
  4427   001CA0  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4428   001CA4  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4429   001CA8  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4430   001CAC  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4431   001CB0  EF40  F00F         	goto	l5358
  4432   001CB4                     l5346:
  4433   001CB4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4434   001CB8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4435   001CBC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4436   001CC0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4437   001CC4  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  4438   001CC8  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  4439   001CCC  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  4440   001CD0  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  4441   001CD4  EC54  F024         	call	___fleq	;wreg free
  4442   001CD8  A0D8               	btfss	status,0,c
  4443   001CDA  EF71  F00E         	goto	u6361
  4444   001CDE  EF73  F00E         	goto	u6360
  4445   001CE2                     u6361:
  4446   001CE2  EFCD  F00E         	goto	l5352
  4447   001CE6                     u6360:
  4448   001CE6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4449   001CEA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4450   001CEE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4451   001CF2  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4452   001CF6  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  4453   001CFA  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  4454   001CFE  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  4455   001D02  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  4456   001D06  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  4457   001D0A  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  4458   001D0E  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  4459   001D12  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  4460   001D16  ECFC  F025         	call	___flsub	;wreg free
  4461   001D1A  C01A  F022         	movff	?___flsub,___fldiv@b
  4462   001D1E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4463   001D22  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4464   001D26  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4465   001D2A  EC52  F019         	call	___fldiv	;wreg free
  4466   001D2E  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2719
  4467   001D32  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2719+1
  4468   001D36  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2719+2
  4469   001D3A  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2719+3
  4470   001D3E  0E00               	movlw	0
  4471   001D40  6E05               	movwf	___fladd@a^0,c
  4472   001D42  0E00               	movlw	0
  4473   001D44  6E06               	movwf	(___fladd@a+1)^0,c
  4474   001D46  0E00               	movlw	0
  4475   001D48  6E07               	movwf	(___fladd@a+2)^0,c
  4476   001D4A  0E40               	movlw	64
  4477   001D4C  6E08               	movwf	(___fladd@a+3)^0,c
  4478   001D4E  C0A5  F001         	movff	_RGB_to_HSV$2719,___fladd@b
  4479   001D52  C0A6  F002         	movff	_RGB_to_HSV$2719+1,___fladd@b+1
  4480   001D56  C0A7  F003         	movff	_RGB_to_HSV$2719+2,___fladd@b+2
  4481   001D5A  C0A8  F004         	movff	_RGB_to_HSV$2719+3,___fladd@b+3
  4482   001D5E  EC7E  F012         	call	___fladd	;wreg free
  4483   001D62  C001  F03B         	movff	?___fladd,___flmul@b
  4484   001D66  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4485   001D6A  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4486   001D6E  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4487   001D72  0E00               	movlw	0
  4488   001D74  6E3F               	movwf	___flmul@a^0,c
  4489   001D76  0E00               	movlw	0
  4490   001D78  6E40               	movwf	(___flmul@a+1)^0,c
  4491   001D7A  0E70               	movlw	112
  4492   001D7C  6E41               	movwf	(___flmul@a+2)^0,c
  4493   001D7E  0E42               	movlw	66
  4494   001D80  6E42               	movwf	(___flmul@a+3)^0,c
  4495   001D82  EC3D  F017         	call	___flmul	;wreg free
  4496   001D86  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4497   001D8A  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4498   001D8E  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4499   001D92  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4500   001D96  EF40  F00F         	goto	l5358
  4501   001D9A                     l5352:
  4502   001D9A  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4503   001D9E  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4504   001DA2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4505   001DA6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4506   001DAA  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  4507   001DAE  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  4508   001DB2  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  4509   001DB6  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  4510   001DBA  EC54  F024         	call	___fleq	;wreg free
  4511   001DBE  A0D8               	btfss	status,0,c
  4512   001DC0  EFE4  F00E         	goto	u6371
  4513   001DC4  EFE6  F00E         	goto	u6370
  4514   001DC8                     u6371:
  4515   001DC8  EF40  F00F         	goto	l80
  4516   001DCC                     u6370:
  4517   001DCC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4518   001DD0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4519   001DD4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4520   001DD8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4521   001DDC  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  4522   001DE0  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  4523   001DE4  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  4524   001DE8  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  4525   001DEC  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  4526   001DF0  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  4527   001DF4  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  4528   001DF8  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  4529   001DFC  ECFC  F025         	call	___flsub	;wreg free
  4530   001E00  C01A  F022         	movff	?___flsub,___fldiv@b
  4531   001E04  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4532   001E08  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4533   001E0C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4534   001E10  EC52  F019         	call	___fldiv	;wreg free
  4535   001E14  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2719
  4536   001E18  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2719+1
  4537   001E1C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2719+2
  4538   001E20  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2719+3
  4539   001E24  0E00               	movlw	0
  4540   001E26  6E05               	movwf	___fladd@a^0,c
  4541   001E28  0E00               	movlw	0
  4542   001E2A  6E06               	movwf	(___fladd@a+1)^0,c
  4543   001E2C  0E80               	movlw	128
  4544   001E2E  6E07               	movwf	(___fladd@a+2)^0,c
  4545   001E30  0E40               	movlw	64
  4546   001E32  6E08               	movwf	(___fladd@a+3)^0,c
  4547   001E34  C0A5  F001         	movff	_RGB_to_HSV$2719,___fladd@b
  4548   001E38  C0A6  F002         	movff	_RGB_to_HSV$2719+1,___fladd@b+1
  4549   001E3C  C0A7  F003         	movff	_RGB_to_HSV$2719+2,___fladd@b+2
  4550   001E40  C0A8  F004         	movff	_RGB_to_HSV$2719+3,___fladd@b+3
  4551   001E44  EC7E  F012         	call	___fladd	;wreg free
  4552   001E48  C001  F03B         	movff	?___fladd,___flmul@b
  4553   001E4C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4554   001E50  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4555   001E54  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4556   001E58  0E00               	movlw	0
  4557   001E5A  6E3F               	movwf	___flmul@a^0,c
  4558   001E5C  0E00               	movlw	0
  4559   001E5E  6E40               	movwf	(___flmul@a+1)^0,c
  4560   001E60  0E70               	movlw	112
  4561   001E62  6E41               	movwf	(___flmul@a+2)^0,c
  4562   001E64  0E42               	movlw	66
  4563   001E66  6E42               	movwf	(___flmul@a+3)^0,c
  4564   001E68  EC3D  F017         	call	___flmul	;wreg free
  4565   001E6C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4566   001E70  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4567   001E74  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4568   001E78  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4569   001E7C  EF40  F00F         	goto	l5358
  4570   001E80                     l80:
  4571   001E80                     l5358:
  4572                           
  4573                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  4574   001E80  0100               	movlb	0	; () banked
  4575   001E82  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  4576   001E84  EF48  F00F         	goto	u6380
  4577   001E88  EF46  F00F         	goto	u6381
  4578   001E8C                     u6381:
  4579   001E8C  EF62  F00F         	goto	l5362
  4580   001E90                     u6380:
  4581   001E90                     
  4582                           ; BSR set to: 0
  4583   001E90  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  4584   001E94  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  4585   001E98  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  4586   001E9C  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  4587   001EA0  0E00               	movlw	0
  4588   001EA2  6E05               	movwf	___fladd@a^0,c
  4589   001EA4  0E00               	movlw	0
  4590   001EA6  6E06               	movwf	(___fladd@a+1)^0,c
  4591   001EA8  0EB4               	movlw	180
  4592   001EAA  6E07               	movwf	(___fladd@a+2)^0,c
  4593   001EAC  0E43               	movlw	67
  4594   001EAE  6E08               	movwf	(___fladd@a+3)^0,c
  4595   001EB0  EC7E  F012         	call	___fladd	;wreg free
  4596   001EB4  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  4597   001EB8  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  4598   001EBC  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  4599   001EC0  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  4600   001EC4                     l5362:
  4601                           
  4602                           ;color.c: 158:     *H = H_temp;
  4603   001EC4  0100               	movlb	0	; () banked
  4604   001EC6  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  4605   001EC8  6ED9               	movwf	fsr2l,c
  4606   001ECA  6ADA               	clrf	fsr2h,c
  4607   001ECC  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  4608   001ED0  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  4609   001ED4  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  4610   001ED8  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  4611   001EDC                     
  4612                           ; BSR set to: 0
  4613                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  4614   001EDC  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4615   001EE0  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4616   001EE4  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4617   001EE8  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4618   001EEC  0E00               	movlw	0
  4619   001EEE  6E05               	movwf	___fleq@ff2^0,c
  4620   001EF0  0E00               	movlw	0
  4621   001EF2  6E06               	movwf	(___fleq@ff2+1)^0,c
  4622   001EF4  0E00               	movlw	0
  4623   001EF6  6E07               	movwf	(___fleq@ff2+2)^0,c
  4624   001EF8  0E00               	movlw	0
  4625   001EFA  6E08               	movwf	(___fleq@ff2+3)^0,c
  4626   001EFC  EC54  F024         	call	___fleq	;wreg free
  4627   001F00  A0D8               	btfss	status,0,c
  4628   001F02  EF85  F00F         	goto	u6391
  4629   001F06  EF87  F00F         	goto	u6390
  4630   001F0A                     u6391:
  4631   001F0A  EF95  F00F         	goto	l5368
  4632   001F0E                     u6390:
  4633   001F0E  0100               	movlb	0	; () banked
  4634   001F10  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4635   001F12  6ED9               	movwf	fsr2l,c
  4636   001F14  6ADA               	clrf	fsr2h,c
  4637   001F16  0E00               	movlw	0
  4638   001F18  6EDE               	movwf	postinc2,c
  4639   001F1A  0E00               	movlw	0
  4640   001F1C  6EDE               	movwf	postinc2,c
  4641   001F1E  0E00               	movlw	0
  4642   001F20  6EDE               	movwf	postinc2,c
  4643   001F22  0E00               	movlw	0
  4644   001F24  6EDD               	movwf	postdec2,c
  4645   001F26  EFC5  F00F         	goto	l5370
  4646   001F2A                     l5368:
  4647                           
  4648                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  4649   001F2A  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  4650   001F2E  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  4651   001F32  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  4652   001F36  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  4653   001F3A  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  4654   001F3E  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  4655   001F42  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  4656   001F46  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  4657   001F4A  EC52  F019         	call	___fldiv	;wreg free
  4658   001F4E  C022  F03B         	movff	?___fldiv,___flmul@b
  4659   001F52  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  4660   001F56  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  4661   001F5A  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  4662   001F5E  0E00               	movlw	0
  4663   001F60  6E3F               	movwf	___flmul@a^0,c
  4664   001F62  0E00               	movlw	0
  4665   001F64  6E40               	movwf	(___flmul@a+1)^0,c
  4666   001F66  0EC8               	movlw	200
  4667   001F68  6E41               	movwf	(___flmul@a+2)^0,c
  4668   001F6A  0E42               	movlw	66
  4669   001F6C  6E42               	movwf	(___flmul@a+3)^0,c
  4670   001F6E  EC3D  F017         	call	___flmul	;wreg free
  4671   001F72  0100               	movlb	0	; () banked
  4672   001F74  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4673   001F76  6ED9               	movwf	fsr2l,c
  4674   001F78  6ADA               	clrf	fsr2h,c
  4675   001F7A  C03B  FFDE         	movff	?___flmul,postinc2
  4676   001F7E  C03C  FFDE         	movff	?___flmul+1,postinc2
  4677   001F82  C03D  FFDE         	movff	?___flmul+2,postinc2
  4678   001F86  C03E  FFDE         	movff	?___flmul+3,postinc2
  4679   001F8A                     l5370:
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4683   001F8A  0E00               	movlw	0
  4684   001F8C  6E3F               	movwf	___flmul@a^0,c
  4685   001F8E  0E00               	movlw	0
  4686   001F90  6E40               	movwf	(___flmul@a+1)^0,c
  4687   001F92  0EC8               	movlw	200
  4688   001F94  6E41               	movwf	(___flmul@a+2)^0,c
  4689   001F96  0E42               	movlw	66
  4690   001F98  6E42               	movwf	(___flmul@a+3)^0,c
  4691   001F9A  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  4692   001F9E  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  4693   001FA2  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  4694   001FA6  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  4695   001FAA  EC3D  F017         	call	___flmul	;wreg free
  4696   001FAE  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2720
  4697   001FB2  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2720+1
  4698   001FB6  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2720+2
  4699   001FBA  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2720+3
  4700   001FBE                     
  4701                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4702   001FBE  C08D  F03B         	movff	_RGB_to_HSV$2720,___flmul@b
  4703   001FC2  C08E  F03C         	movff	_RGB_to_HSV$2720+1,___flmul@b+1
  4704   001FC6  C08F  F03D         	movff	_RGB_to_HSV$2720+2,___flmul@b+2
  4705   001FCA  C090  F03E         	movff	_RGB_to_HSV$2720+3,___flmul@b+3
  4706   001FCE  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  4707   001FD2  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  4708   001FD6  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  4709   001FDA  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  4710   001FDE  EC3D  F017         	call	___flmul	;wreg free
  4711   001FE2  0100               	movlb	0	; () banked
  4712   001FE4  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  4713   001FE6  6ED9               	movwf	fsr2l,c
  4714   001FE8  6ADA               	clrf	fsr2h,c
  4715   001FEA  C03B  FFDE         	movff	?___flmul,postinc2
  4716   001FEE  C03C  FFDE         	movff	?___flmul+1,postinc2
  4717   001FF2  C03D  FFDE         	movff	?___flmul+2,postinc2
  4718   001FF6  C03E  FFDE         	movff	?___flmul+3,postinc2
  4719   001FFA                     
  4720                           ; BSR set to: 0
  4721   001FFA  0012               	return		;funcret
  4722   001FFC                     __end_of_RGB_to_HSV:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _custom_floatmodulo *****************
  4726 ;; Defined at:
  4727 ;;		line 106 in file "color.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  x               4   83[COMRAM] float 
  4730 ;;  y               4   87[COMRAM] float 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  remainder       4    4[BANK0 ] float 
  4733 ;;  quotient        4    0[BANK0 ] float 
  4734 ;;  intPart         2    8[BANK0 ] int 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  4   83[COMRAM] float 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4744 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4745 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;Total ram usage:       18 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; Hardware stack levels required when called: 2
  4751 ;; This function calls:
  4752 ;;		___fldiv
  4753 ;;		___fleq
  4754 ;;		___flmul
  4755 ;;		___flsub
  4756 ;;		___fltol
  4757 ;;		___xxtofl
  4758 ;; This function is called by:
  4759 ;;		_RGB_to_HSV
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text18
  4764   004338                     __ptext18:
  4765                           	callstack 0
  4766   004338                     _custom_floatmodulo:
  4767                           	callstack 25
  4768   004338                     
  4769                           ;color.c: 108:     if (y == 0.0) {
  4770   004338  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  4771   00433C  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  4772   004340  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  4773   004344  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  4774   004348  0E00               	movlw	0
  4775   00434A  6E05               	movwf	___fleq@ff2^0,c
  4776   00434C  0E00               	movlw	0
  4777   00434E  6E06               	movwf	(___fleq@ff2+1)^0,c
  4778   004350  0E00               	movlw	0
  4779   004352  6E07               	movwf	(___fleq@ff2+2)^0,c
  4780   004354  0E00               	movlw	0
  4781   004356  6E08               	movwf	(___fleq@ff2+3)^0,c
  4782   004358  EC54  F024         	call	___fleq	;wreg free
  4783   00435C  A0D8               	btfss	status,0,c
  4784   00435E  EFB3  F021         	goto	u6191
  4785   004362  EFB5  F021         	goto	u6190
  4786   004366                     u6191:
  4787   004366  EFBF  F021         	goto	l5218
  4788   00436A                     u6190:
  4789   00436A                     
  4790                           ;color.c: 109:         return 0.0;
  4791   00436A  0E00               	movlw	0
  4792   00436C  6E54               	movwf	?_custom_floatmodulo^0,c
  4793   00436E  0E00               	movlw	0
  4794   004370  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  4795   004372  0E00               	movlw	0
  4796   004374  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  4797   004376  0E00               	movlw	0
  4798   004378  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  4799   00437A  EF27  F022         	goto	l50
  4800   00437E                     l5218:
  4801                           
  4802                           ;color.c: 113:     float quotient = x / y;
  4803   00437E  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  4804   004382  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  4805   004386  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  4806   00438A  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  4807   00438E  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  4808   004392  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  4809   004396  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  4810   00439A  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  4811   00439E  EC52  F019         	call	___fldiv	;wreg free
  4812   0043A2  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  4813   0043A6  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  4814   0043AA  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  4815   0043AE  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  4816                           
  4817                           ;color.c: 116:     int intPart = (int)quotient;
  4818   0043B2  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  4819   0043B6  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  4820   0043BA  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  4821   0043BE  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  4822   0043C2  EC28  F022         	call	___fltol	;wreg free
  4823   0043C6  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  4824   0043CA  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  4825   0043CE                     
  4826                           ;color.c: 119:     float remainder = x - intPart * y;
  4827   0043CE  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  4828   0043D2  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  4829   0043D6  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  4830   0043DA  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  4831   0043DE  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  4832   0043E2  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  4833   0043E6  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  4834   0043EA  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  4835   0043EE  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  4836   0043F2  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  4837   0043F6  0E00               	movlw	0
  4838   0043F8  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  4839   0043FA  0EFF               	movlw	-1
  4840   0043FC  6E0E               	movwf	(___xxtofl@val+2)^0,c
  4841   0043FE  6E0F               	movwf	(___xxtofl@val+3)^0,c
  4842   004400  0E01               	movlw	1
  4843   004402  EC71  F01C         	call	___xxtofl
  4844   004406  C00C  F03B         	movff	?___xxtofl,___flmul@b
  4845   00440A  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  4846   00440E  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  4847   004412  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  4848   004416  EC3D  F017         	call	___flmul	;wreg free
  4849   00441A  C03B  F01E         	movff	?___flmul,___flsub@a
  4850   00441E  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  4851   004422  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  4852   004426  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  4853   00442A  ECFC  F025         	call	___flsub	;wreg free
  4854   00442E  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  4855   004432  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  4856   004436  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  4857   00443A  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  4858   00443E                     
  4859                           ;color.c: 121:     return remainder;
  4860   00443E  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  4861   004442  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  4862   004446  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  4863   00444A  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  4864   00444E                     l50:
  4865   00444E  0012               	return		;funcret
  4866   004450                     __end_of_custom_floatmodulo:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function ___xxtofl *****************
  4870 ;; Defined at:
  4871 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  sign            1    wreg     unsigned char 
  4874 ;;  val             4   11[COMRAM] long 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  sign            1   19[COMRAM] unsigned char 
  4877 ;;  arg             4   21[COMRAM] unsigned long 
  4878 ;;  exp             1   20[COMRAM] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  4   11[COMRAM] unsigned char 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4889 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;Total ram usage:       14 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_custom_floatmodulo
  4898 ;;		_color_cardCheck
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text19
  4903   0038E2                     __ptext19:
  4904                           	callstack 0
  4905   0038E2                     ___xxtofl:
  4906                           	callstack 28
  4907                           
  4908                           ;incstack = 0
  4909                           ;___xxtofl@sign stored from wreg
  4910   0038E2  6E14               	movwf	___xxtofl@sign^0,c
  4911   0038E4  5014               	movf	___xxtofl@sign^0,w,c
  4912   0038E6  B4D8               	btfsc	status,2,c
  4913   0038E8  EF78  F01C         	goto	u6071
  4914   0038EC  EF7A  F01C         	goto	u6070
  4915   0038F0                     u6071:
  4916   0038F0  EF9C  F01C         	goto	l1254
  4917   0038F4                     u6070:
  4918   0038F4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4919   0038F6  EF81  F01C         	goto	u6080
  4920   0038FA  EF7F  F01C         	goto	u6081
  4921   0038FE                     u6081:
  4922   0038FE  EF9C  F01C         	goto	l1254
  4923   003902                     u6080:
  4924   003902  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4925   003906  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4926   00390A  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4927   00390E  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4928   003912  1E10               	comf	??___xxtofl^0,f,c
  4929   003914  1E11               	comf	(??___xxtofl+1)^0,f,c
  4930   003916  1E12               	comf	(??___xxtofl+2)^0,f,c
  4931   003918  1E13               	comf	(??___xxtofl+3)^0,f,c
  4932   00391A  2A10               	incf	??___xxtofl^0,f,c
  4933   00391C  0E00               	movlw	0
  4934   00391E  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4935   003920  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4936   003922  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4937   003924  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4938   003928  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4939   00392C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4940   003930  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4941   003934  EFA4  F01C         	goto	l5142
  4942   003938                     l1254:
  4943   003938  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4944   00393C  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4945   003940  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4946   003944  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4947   003948                     l5142:
  4948   003948  500C               	movf	___xxtofl@val^0,w,c
  4949   00394A  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4950   00394C  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4951   00394E  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4952   003950  A4D8               	btfss	status,2,c
  4953   003952  EFAD  F01C         	goto	u6091
  4954   003956  EFAF  F01C         	goto	u6090
  4955   00395A                     u6091:
  4956   00395A  EFB9  F01C         	goto	l5148
  4957   00395E                     u6090:
  4958   00395E  0E00               	movlw	0
  4959   003960  6E0C               	movwf	?___xxtofl^0,c
  4960   003962  0E00               	movlw	0
  4961   003964  6E0D               	movwf	(?___xxtofl+1)^0,c
  4962   003966  0E00               	movlw	0
  4963   003968  6E0E               	movwf	(?___xxtofl+2)^0,c
  4964   00396A  0E00               	movlw	0
  4965   00396C  6E0F               	movwf	(?___xxtofl+3)^0,c
  4966   00396E  EF4A  F01D         	goto	l1257
  4967   003972                     l5148:
  4968   003972  0E96               	movlw	150
  4969   003974  6E15               	movwf	___xxtofl@exp^0,c
  4970   003976  EFC3  F01C         	goto	l5152
  4971   00397A                     l5150:
  4972   00397A  2A15               	incf	___xxtofl@exp^0,f,c
  4973   00397C  90D8               	bcf	status,0,c
  4974   00397E  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4975   003980  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4976   003982  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4977   003984  3216               	rrcf	___xxtofl@arg^0,f,c
  4978   003986                     l5152:
  4979   003986  0E00               	movlw	0
  4980   003988  1416               	andwf	___xxtofl@arg^0,w,c
  4981   00398A  6E10               	movwf	??___xxtofl^0,c
  4982   00398C  0E00               	movlw	0
  4983   00398E  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4984   003990  6E11               	movwf	(??___xxtofl+1)^0,c
  4985   003992  0E00               	movlw	0
  4986   003994  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4987   003996  6E12               	movwf	(??___xxtofl+2)^0,c
  4988   003998  0EFE               	movlw	254
  4989   00399A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4990   00399C  6E13               	movwf	(??___xxtofl+3)^0,c
  4991   00399E  5010               	movf	??___xxtofl^0,w,c
  4992   0039A0  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4993   0039A2  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4994   0039A4  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4995   0039A6  A4D8               	btfss	status,2,c
  4996   0039A8  EFD8  F01C         	goto	u6101
  4997   0039AC  EFDA  F01C         	goto	u6100
  4998   0039B0                     u6101:
  4999   0039B0  EFBD  F01C         	goto	l5150
  5000   0039B4                     u6100:
  5001   0039B4  EFE8  F01C         	goto	l1261
  5002   0039B8                     l5154:
  5003   0039B8  2A15               	incf	___xxtofl@exp^0,f,c
  5004   0039BA  0E01               	movlw	1
  5005   0039BC  2616               	addwf	___xxtofl@arg^0,f,c
  5006   0039BE  0E00               	movlw	0
  5007   0039C0  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  5008   0039C2  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  5009   0039C4  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  5010   0039C6  90D8               	bcf	status,0,c
  5011   0039C8  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  5012   0039CA  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  5013   0039CC  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  5014   0039CE  3216               	rrcf	___xxtofl@arg^0,f,c
  5015   0039D0                     l1261:
  5016   0039D0  0E00               	movlw	0
  5017   0039D2  1416               	andwf	___xxtofl@arg^0,w,c
  5018   0039D4  6E10               	movwf	??___xxtofl^0,c
  5019   0039D6  0E00               	movlw	0
  5020   0039D8  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  5021   0039DA  6E11               	movwf	(??___xxtofl+1)^0,c
  5022   0039DC  0E00               	movlw	0
  5023   0039DE  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  5024   0039E0  6E12               	movwf	(??___xxtofl+2)^0,c
  5025   0039E2  0EFF               	movlw	255
  5026   0039E4  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  5027   0039E6  6E13               	movwf	(??___xxtofl+3)^0,c
  5028   0039E8  5010               	movf	??___xxtofl^0,w,c
  5029   0039EA  1011               	iorwf	(??___xxtofl+1)^0,w,c
  5030   0039EC  1012               	iorwf	(??___xxtofl+2)^0,w,c
  5031   0039EE  1013               	iorwf	(??___xxtofl+3)^0,w,c
  5032   0039F0  A4D8               	btfss	status,2,c
  5033   0039F2  EFFD  F01C         	goto	u6111
  5034   0039F6  EFFF  F01C         	goto	u6110
  5035   0039FA                     u6111:
  5036   0039FA  EFDC  F01C         	goto	l5154
  5037   0039FE                     u6110:
  5038   0039FE  EF07  F01D         	goto	l5162
  5039   003A02                     l5160:
  5040   003A02  0615               	decf	___xxtofl@exp^0,f,c
  5041   003A04  90D8               	bcf	status,0,c
  5042   003A06  3616               	rlcf	___xxtofl@arg^0,f,c
  5043   003A08  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  5044   003A0A  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  5045   003A0C  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  5046   003A0E                     l5162:
  5047   003A0E  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  5048   003A10  EF0C  F01D         	goto	u6121
  5049   003A14  EF0E  F01D         	goto	u6120
  5050   003A18                     u6121:
  5051   003A18  EF16  F01D         	goto	l1268
  5052   003A1C                     u6120:
  5053   003A1C  0E02               	movlw	2
  5054   003A1E  6015               	cpfslt	___xxtofl@exp^0,c
  5055   003A20  EF14  F01D         	goto	u6131
  5056   003A24  EF16  F01D         	goto	u6130
  5057   003A28                     u6131:
  5058   003A28  EF01  F01D         	goto	l5160
  5059   003A2C                     u6130:
  5060   003A2C                     l1268:
  5061   003A2C  B015               	btfsc	___xxtofl@exp^0,0,c
  5062   003A2E  EF1B  F01D         	goto	u6141
  5063   003A32  EF1D  F01D         	goto	u6140
  5064   003A36                     u6141:
  5065   003A36  EF1E  F01D         	goto	l5168
  5066   003A3A                     u6140:
  5067   003A3A  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  5068   003A3C                     l5168:
  5069   003A3C  90D8               	bcf	status,0,c
  5070   003A3E  3215               	rrcf	___xxtofl@exp^0,f,c
  5071   003A40  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  5072   003A44  6A11               	clrf	(??___xxtofl+1)^0,c
  5073   003A46  6A12               	clrf	(??___xxtofl+2)^0,c
  5074   003A48  6A13               	clrf	(??___xxtofl+3)^0,c
  5075   003A4A  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  5076   003A4E  6A12               	clrf	(??___xxtofl+2)^0,c
  5077   003A50  6A11               	clrf	(??___xxtofl+1)^0,c
  5078   003A52  6A10               	clrf	??___xxtofl^0,c
  5079   003A54  5010               	movf	??___xxtofl^0,w,c
  5080   003A56  1216               	iorwf	___xxtofl@arg^0,f,c
  5081   003A58  5011               	movf	(??___xxtofl+1)^0,w,c
  5082   003A5A  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  5083   003A5C  5012               	movf	(??___xxtofl+2)^0,w,c
  5084   003A5E  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  5085   003A60  5013               	movf	(??___xxtofl+3)^0,w,c
  5086   003A62  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  5087   003A64  5014               	movf	___xxtofl@sign^0,w,c
  5088   003A66  B4D8               	btfsc	status,2,c
  5089   003A68  EF38  F01D         	goto	u6151
  5090   003A6C  EF3A  F01D         	goto	u6150
  5091   003A70                     u6151:
  5092   003A70  EF42  F01D         	goto	l5178
  5093   003A74                     u6150:
  5094   003A74  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  5095   003A76  EF41  F01D         	goto	u6160
  5096   003A7A  EF3F  F01D         	goto	u6161
  5097   003A7E                     u6161:
  5098   003A7E  EF42  F01D         	goto	l5178
  5099   003A82                     u6160:
  5100   003A82  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  5101   003A84                     l5178:
  5102   003A84  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  5103   003A88  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5104   003A8C  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5105   003A90  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5106   003A94                     l1257:
  5107   003A94  0012               	return		;funcret
  5108   003A96                     __end_of___xxtofl:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function ___fltol *****************
  5112 ;; Defined at:
  5113 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  f1              4    0[COMRAM] unsigned char 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  exp1            1    9[COMRAM] unsigned char 
  5118 ;;  sign1           1    8[COMRAM] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  4    0[COMRAM] long 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5128 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5132 ;;Total ram usage:       10 bytes
  5133 ;; Hardware stack levels used: 1
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_custom_floatmodulo
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text20
  5142   004450                     __ptext20:
  5143                           	callstack 0
  5144   004450                     ___fltol:
  5145                           	callstack 26
  5146   004450  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5147   004452  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5148   004454  6E0A               	movwf	___fltol@exp1^0,c
  5149   004456  500A               	movf	___fltol@exp1^0,w,c
  5150   004458  A4D8               	btfss	status,2,c
  5151   00445A  EF31  F022         	goto	u6001
  5152   00445E  EF33  F022         	goto	u6000
  5153   004462                     u6001:
  5154   004462  EF3D  F022         	goto	l5098
  5155   004466                     u6000:
  5156   004466                     l5094:
  5157   004466  0E00               	movlw	0
  5158   004468  6E01               	movwf	?___fltol^0,c
  5159   00446A  0E00               	movlw	0
  5160   00446C  6E02               	movwf	(?___fltol+1)^0,c
  5161   00446E  0E00               	movlw	0
  5162   004470  6E03               	movwf	(?___fltol+2)^0,c
  5163   004472  0E00               	movlw	0
  5164   004474  6E04               	movwf	(?___fltol+3)^0,c
  5165   004476  EFAA  F022         	goto	l896
  5166   00447A                     l5098:
  5167   00447A  C001  F005         	movff	___fltol@f1,??___fltol
  5168   00447E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5169   004482  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5170   004486  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5171   00448A  0E20               	movlw	32
  5172   00448C  EF4D  F022         	goto	u6010
  5173   004490                     u6015:
  5174   004490  90D8               	bcf	status,0,c
  5175   004492  3208               	rrcf	(??___fltol+3)^0,f,c
  5176   004494  3207               	rrcf	(??___fltol+2)^0,f,c
  5177   004496  3206               	rrcf	(??___fltol+1)^0,f,c
  5178   004498  3205               	rrcf	??___fltol^0,f,c
  5179   00449A                     u6010:
  5180   00449A  2EE8               	decfsz	wreg,f,c
  5181   00449C  EF48  F022         	goto	u6015
  5182   0044A0  5005               	movf	??___fltol^0,w,c
  5183   0044A2  6E09               	movwf	___fltol@sign1^0,c
  5184   0044A4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5185   0044A6  0EFF               	movlw	255
  5186   0044A8  1601               	andwf	___fltol@f1^0,f,c
  5187   0044AA  0EFF               	movlw	255
  5188   0044AC  1602               	andwf	(___fltol@f1+1)^0,f,c
  5189   0044AE  0EFF               	movlw	255
  5190   0044B0  1603               	andwf	(___fltol@f1+2)^0,f,c
  5191   0044B2  0E00               	movlw	0
  5192   0044B4  1604               	andwf	(___fltol@f1+3)^0,f,c
  5193   0044B6  0E96               	movlw	150
  5194   0044B8  5E0A               	subwf	___fltol@exp1^0,f,c
  5195   0044BA  BE0A               	btfsc	___fltol@exp1^0,7,c
  5196   0044BC  EF64  F022         	goto	u6020
  5197   0044C0  EF62  F022         	goto	u6021
  5198   0044C4                     u6021:
  5199   0044C4  EF7A  F022         	goto	l5118
  5200   0044C8                     u6020:
  5201   0044C8  500A               	movf	___fltol@exp1^0,w,c
  5202   0044CA  0A80               	xorlw	128
  5203   0044CC  0F97               	addlw	151
  5204   0044CE  B0D8               	btfsc	status,0,c
  5205   0044D0  EF6C  F022         	goto	u6031
  5206   0044D4  EF6E  F022         	goto	u6030
  5207   0044D8                     u6031:
  5208   0044D8  EF70  F022         	goto	l5114
  5209   0044DC                     u6030:
  5210   0044DC  EF33  F022         	goto	l5094
  5211   0044E0                     l5114:
  5212   0044E0  90D8               	bcf	status,0,c
  5213   0044E2  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5214   0044E4  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5215   0044E6  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5216   0044E8  3201               	rrcf	___fltol@f1^0,f,c
  5217   0044EA  3E0A               	incfsz	___fltol@exp1^0,f,c
  5218   0044EC  EF70  F022         	goto	l5114
  5219   0044F0  EF92  F022         	goto	l5128
  5220   0044F4                     l5118:
  5221   0044F4  0E1F               	movlw	31
  5222   0044F6  640A               	cpfsgt	___fltol@exp1^0,c
  5223   0044F8  EF80  F022         	goto	u6041
  5224   0044FC  EF82  F022         	goto	u6040
  5225   004500                     u6041:
  5226   004500  EF8A  F022         	goto	l5126
  5227   004504                     u6040:
  5228   004504  EF33  F022         	goto	l5094
  5229   004508                     l5124:
  5230   004508  90D8               	bcf	status,0,c
  5231   00450A  3601               	rlcf	___fltol@f1^0,f,c
  5232   00450C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5233   00450E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5234   004510  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5235   004512  060A               	decf	___fltol@exp1^0,f,c
  5236   004514                     l5126:
  5237   004514  500A               	movf	___fltol@exp1^0,w,c
  5238   004516  A4D8               	btfss	status,2,c
  5239   004518  EF90  F022         	goto	u6051
  5240   00451C  EF92  F022         	goto	u6050
  5241   004520                     u6051:
  5242   004520  EF84  F022         	goto	l5124
  5243   004524                     u6050:
  5244   004524                     l5128:
  5245   004524  5009               	movf	___fltol@sign1^0,w,c
  5246   004526  B4D8               	btfsc	status,2,c
  5247   004528  EF98  F022         	goto	u6061
  5248   00452C  EF9A  F022         	goto	u6060
  5249   004530                     u6061:
  5250   004530  EFA2  F022         	goto	l5132
  5251   004534                     u6060:
  5252   004534  1E04               	comf	(___fltol@f1+3)^0,f,c
  5253   004536  1E03               	comf	(___fltol@f1+2)^0,f,c
  5254   004538  1E02               	comf	(___fltol@f1+1)^0,f,c
  5255   00453A  6C01               	negf	___fltol@f1^0,c
  5256   00453C  0E00               	movlw	0
  5257   00453E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5258   004540  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5259   004542  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5260   004544                     l5132:
  5261   004544  C001  F001         	movff	___fltol@f1,?___fltol
  5262   004548  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5263   00454C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5264   004550  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5265   004554                     l896:
  5266   004554  0012               	return		;funcret
  5267   004556                     __end_of___fltol:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function ___flsub *****************
  5271 ;; Defined at:
  5272 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  b               4   25[COMRAM] long 
  5275 ;;  a               4   29[COMRAM] long 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  4   25[COMRAM] long 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;Total ram usage:        8 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 1
  5294 ;; This function calls:
  5295 ;;		___fladd
  5296 ;; This function is called by:
  5297 ;;		_custom_floatmodulo
  5298 ;;		_RGB_to_HSV
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text21
  5303   004BF8                     __ptext21:
  5304                           	callstack 0
  5305   004BF8                     ___flsub:
  5306                           	callstack 25
  5307   004BF8  0E00               	movlw	0
  5308   004BFA  1A1E               	xorwf	___flsub@a^0,f,c
  5309   004BFC  0E00               	movlw	0
  5310   004BFE  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5311   004C00  0E00               	movlw	0
  5312   004C02  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5313   004C04  0E80               	movlw	128
  5314   004C06  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5315   004C08  C01A  F001         	movff	___flsub@b,___fladd@b
  5316   004C0C  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5317   004C10  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5318   004C14  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5319   004C18  C01E  F005         	movff	___flsub@a,___fladd@a
  5320   004C1C  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5321   004C20  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5322   004C24  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5323   004C28  EC7E  F012         	call	___fladd	;wreg free
  5324   004C2C  C001  F01A         	movff	?___fladd,?___flsub
  5325   004C30  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5326   004C34  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5327   004C38  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5328   004C3C  0012               	return		;funcret
  5329   004C3E                     __end_of___flsub:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function ___fladd *****************
  5333 ;; Defined at:
  5334 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  b               4    0[COMRAM] long 
  5337 ;;  a               4    4[COMRAM] long 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  grs             1   15[COMRAM] unsigned char 
  5340 ;;  bexp            1   14[COMRAM] unsigned char 
  5341 ;;  aexp            1   13[COMRAM] unsigned char 
  5342 ;;  signs           1   12[COMRAM] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  4    0[COMRAM] unsigned char 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5352 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5356 ;;Total ram usage:       16 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_RGB_to_HSV
  5362 ;;		___flsub
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text22
  5367   0024FC                     __ptext22:
  5368                           	callstack 0
  5369   0024FC                     ___fladd:
  5370                           	callstack 25
  5371   0024FC  5004               	movf	(___fladd@b+3)^0,w,c
  5372   0024FE  0B80               	andlw	128
  5373   002500  6E0D               	movwf	___fladd@signs^0,c
  5374   002502  5004               	movf	(___fladd@b+3)^0,w,c
  5375   002504  2404               	addwf	(___fladd@b+3)^0,w,c
  5376   002506  6E0F               	movwf	___fladd@bexp^0,c
  5377   002508  AE03               	btfss	(___fladd@b+2)^0,7,c
  5378   00250A  EF89  F012         	goto	u5141
  5379   00250E  EF8B  F012         	goto	u5140
  5380   002512                     u5141:
  5381   002512  EF8C  F012         	goto	l4602
  5382   002516                     u5140:
  5383   002516  800F               	bsf	___fladd@bexp^0,0,c
  5384   002518                     l4602:
  5385   002518  500F               	movf	___fladd@bexp^0,w,c
  5386   00251A  B4D8               	btfsc	status,2,c
  5387   00251C  EF92  F012         	goto	u5151
  5388   002520  EF94  F012         	goto	u5150
  5389   002524                     u5151:
  5390   002524  EFA9  F012         	goto	l4612
  5391   002528                     u5150:
  5392   002528  280F               	incf	___fladd@bexp^0,w,c
  5393   00252A  A4D8               	btfss	status,2,c
  5394   00252C  EF9A  F012         	goto	u5161
  5395   002530  EF9C  F012         	goto	u5160
  5396   002534                     u5161:
  5397   002534  EFA4  F012         	goto	l4608
  5398   002538                     u5160:
  5399   002538  0E00               	movlw	0
  5400   00253A  6E01               	movwf	___fladd@b^0,c
  5401   00253C  0E00               	movlw	0
  5402   00253E  6E02               	movwf	(___fladd@b+1)^0,c
  5403   002540  0E00               	movlw	0
  5404   002542  6E03               	movwf	(___fladd@b+2)^0,c
  5405   002544  0E00               	movlw	0
  5406   002546  6E04               	movwf	(___fladd@b+3)^0,c
  5407   002548                     l4608:
  5408   002548  8E03               	bsf	(___fladd@b+2)^0,7,c
  5409   00254A  0E00               	movlw	0
  5410   00254C  6E04               	movwf	(___fladd@b+3)^0,c
  5411   00254E  EFB1  F012         	goto	l4614
  5412   002552                     l4612:
  5413   002552  0E00               	movlw	0
  5414   002554  6E01               	movwf	___fladd@b^0,c
  5415   002556  0E00               	movlw	0
  5416   002558  6E02               	movwf	(___fladd@b+1)^0,c
  5417   00255A  0E00               	movlw	0
  5418   00255C  6E03               	movwf	(___fladd@b+2)^0,c
  5419   00255E  0E00               	movlw	0
  5420   002560  6E04               	movwf	(___fladd@b+3)^0,c
  5421   002562                     l4614:
  5422   002562  5008               	movf	(___fladd@a+3)^0,w,c
  5423   002564  0B80               	andlw	128
  5424   002566  6E0E               	movwf	___fladd@aexp^0,c
  5425   002568  500D               	movf	___fladd@signs^0,w,c
  5426   00256A  180E               	xorwf	___fladd@aexp^0,w,c
  5427   00256C  B4D8               	btfsc	status,2,c
  5428   00256E  EFBB  F012         	goto	u5171
  5429   002572  EFBD  F012         	goto	u5170
  5430   002576                     u5171:
  5431   002576  EFBE  F012         	goto	l4620
  5432   00257A                     u5170:
  5433   00257A  8C0D               	bsf	___fladd@signs^0,6,c
  5434   00257C                     l4620:
  5435   00257C  5008               	movf	(___fladd@a+3)^0,w,c
  5436   00257E  2408               	addwf	(___fladd@a+3)^0,w,c
  5437   002580  6E0E               	movwf	___fladd@aexp^0,c
  5438   002582  AE07               	btfss	(___fladd@a+2)^0,7,c
  5439   002584  EFC6  F012         	goto	u5181
  5440   002588  EFC8  F012         	goto	u5180
  5441   00258C                     u5181:
  5442   00258C  EFC9  F012         	goto	l4626
  5443   002590                     u5180:
  5444   002590  800E               	bsf	___fladd@aexp^0,0,c
  5445   002592                     l4626:
  5446   002592  500E               	movf	___fladd@aexp^0,w,c
  5447   002594  B4D8               	btfsc	status,2,c
  5448   002596  EFCF  F012         	goto	u5191
  5449   00259A  EFD1  F012         	goto	u5190
  5450   00259E                     u5191:
  5451   00259E  EFE6  F012         	goto	l4636
  5452   0025A2                     u5190:
  5453   0025A2  280E               	incf	___fladd@aexp^0,w,c
  5454   0025A4  A4D8               	btfss	status,2,c
  5455   0025A6  EFD7  F012         	goto	u5201
  5456   0025AA  EFD9  F012         	goto	u5200
  5457   0025AE                     u5201:
  5458   0025AE  EFE1  F012         	goto	l4632
  5459   0025B2                     u5200:
  5460   0025B2  0E00               	movlw	0
  5461   0025B4  6E05               	movwf	___fladd@a^0,c
  5462   0025B6  0E00               	movlw	0
  5463   0025B8  6E06               	movwf	(___fladd@a+1)^0,c
  5464   0025BA  0E00               	movlw	0
  5465   0025BC  6E07               	movwf	(___fladd@a+2)^0,c
  5466   0025BE  0E00               	movlw	0
  5467   0025C0  6E08               	movwf	(___fladd@a+3)^0,c
  5468   0025C2                     l4632:
  5469   0025C2  8E07               	bsf	(___fladd@a+2)^0,7,c
  5470   0025C4  0E00               	movlw	0
  5471   0025C6  6E08               	movwf	(___fladd@a+3)^0,c
  5472   0025C8  EFEE  F012         	goto	l4638
  5473   0025CC                     l4636:
  5474   0025CC  0E00               	movlw	0
  5475   0025CE  6E05               	movwf	___fladd@a^0,c
  5476   0025D0  0E00               	movlw	0
  5477   0025D2  6E06               	movwf	(___fladd@a+1)^0,c
  5478   0025D4  0E00               	movlw	0
  5479   0025D6  6E07               	movwf	(___fladd@a+2)^0,c
  5480   0025D8  0E00               	movlw	0
  5481   0025DA  6E08               	movwf	(___fladd@a+3)^0,c
  5482   0025DC                     l4638:
  5483   0025DC  500F               	movf	___fladd@bexp^0,w,c
  5484   0025DE  5C0E               	subwf	___fladd@aexp^0,w,c
  5485   0025E0  B0D8               	btfsc	status,0,c
  5486   0025E2  EFF5  F012         	goto	u5211
  5487   0025E6  EFF7  F012         	goto	u5210
  5488   0025EA                     u5211:
  5489   0025EA  EF1E  F013         	goto	l4674
  5490   0025EE                     u5210:
  5491   0025EE  AC0D               	btfss	___fladd@signs^0,6,c
  5492   0025F0  EFFC  F012         	goto	u5221
  5493   0025F4  EFFE  F012         	goto	u5220
  5494   0025F8                     u5221:
  5495   0025F8  EF00  F013         	goto	l4644
  5496   0025FC                     u5220:
  5497   0025FC  0E80               	movlw	128
  5498   0025FE  1A0D               	xorwf	___fladd@signs^0,f,c
  5499   002600                     l4644:
  5500   002600  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5501   002604  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5502   002608  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5503   00260C  C001  F010         	movff	___fladd@b,___fladd@grs
  5504   002610  C005  F001         	movff	___fladd@a,___fladd@b
  5505   002614  C010  F005         	movff	___fladd@grs,___fladd@a
  5506   002618  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5507   00261C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5508   002620  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5509   002624  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5510   002628  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5511   00262C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5512   002630  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5513   002634  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5514   002638  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5515   00263C                     l4674:
  5516   00263C  0E00               	movlw	0
  5517   00263E  6E10               	movwf	___fladd@grs^0,c
  5518   002640  500F               	movf	___fladd@bexp^0,w,c
  5519   002642  C00E  F009         	movff	___fladd@aexp,??___fladd
  5520   002646  6A0A               	clrf	(??___fladd+1)^0,c
  5521   002648  5E09               	subwf	??___fladd^0,f,c
  5522   00264A  0E00               	movlw	0
  5523   00264C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5524   00264E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5525   002650  EF33  F013         	goto	u5231
  5526   002654  500A               	movf	(??___fladd+1)^0,w,c
  5527   002656  E109               	bnz	u5230
  5528   002658  0E1A               	movlw	26
  5529   00265A  5C09               	subwf	??___fladd^0,w,c
  5530   00265C  A0D8               	btfss	status,0,c
  5531   00265E  EF33  F013         	goto	u5231
  5532   002662  EF35  F013         	goto	u5230
  5533   002666                     u5231:
  5534   002666  EF6C  F013         	goto	l1128
  5535   00266A                     u5230:
  5536   00266A  5001               	movf	___fladd@b^0,w,c
  5537   00266C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5538   00266E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5539   002670  1004               	iorwf	(___fladd@b+3)^0,w,c
  5540   002672  A4D8               	btfss	status,2,c
  5541   002674  EF3E  F013         	goto	u5241
  5542   002678  EF41  F013         	goto	u5240
  5543   00267C                     u5241:
  5544   00267C  0E01               	movlw	1
  5545   00267E  EF42  F013         	goto	u5250
  5546   002682                     u5240:
  5547   002682  0E00               	movlw	0
  5548   002684                     u5250:
  5549   002684  6E10               	movwf	___fladd@grs^0,c
  5550   002686  0E00               	movlw	0
  5551   002688  6E01               	movwf	___fladd@b^0,c
  5552   00268A  0E00               	movlw	0
  5553   00268C  6E02               	movwf	(___fladd@b+1)^0,c
  5554   00268E  0E00               	movlw	0
  5555   002690  6E03               	movwf	(___fladd@b+2)^0,c
  5556   002692  0E00               	movlw	0
  5557   002694  6E04               	movwf	(___fladd@b+3)^0,c
  5558   002696  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5559   00269A  EF75  F013         	goto	l1127
  5560   00269E                     l1129:
  5561   00269E  A010               	btfss	___fladd@grs^0,0,c
  5562   0026A0  EF54  F013         	goto	u5261
  5563   0026A4  EF56  F013         	goto	u5260
  5564   0026A8                     u5261:
  5565   0026A8  EF5C  F013         	goto	l4686
  5566   0026AC                     u5260:
  5567   0026AC  90D8               	bcf	status,0,c
  5568   0026AE  3010               	rrcf	___fladd@grs^0,w,c
  5569   0026B0  0901               	iorlw	1
  5570   0026B2  6E10               	movwf	___fladd@grs^0,c
  5571   0026B4  EF5E  F013         	goto	l4688
  5572   0026B8                     l4686:
  5573   0026B8  90D8               	bcf	status,0,c
  5574   0026BA  3210               	rrcf	___fladd@grs^0,f,c
  5575   0026BC                     l4688:
  5576   0026BC  A001               	btfss	___fladd@b^0,0,c
  5577   0026BE  EF63  F013         	goto	u5271
  5578   0026C2  EF65  F013         	goto	u5270
  5579   0026C6                     u5271:
  5580   0026C6  EF66  F013         	goto	l4692
  5581   0026CA                     u5270:
  5582   0026CA  8E10               	bsf	___fladd@grs^0,7,c
  5583   0026CC                     l4692:
  5584   0026CC  3404               	rlcf	(___fladd@b+3)^0,w,c
  5585   0026CE  3204               	rrcf	(___fladd@b+3)^0,f,c
  5586   0026D0  3203               	rrcf	(___fladd@b+2)^0,f,c
  5587   0026D2  3202               	rrcf	(___fladd@b+1)^0,f,c
  5588   0026D4  3201               	rrcf	___fladd@b^0,f,c
  5589   0026D6  2A0F               	incf	___fladd@bexp^0,f,c
  5590   0026D8                     l1128:
  5591   0026D8  500E               	movf	___fladd@aexp^0,w,c
  5592   0026DA  5C0F               	subwf	___fladd@bexp^0,w,c
  5593   0026DC  A0D8               	btfss	status,0,c
  5594   0026DE  EF73  F013         	goto	u5281
  5595   0026E2  EF75  F013         	goto	u5280
  5596   0026E6                     u5281:
  5597   0026E6  EF4F  F013         	goto	l1129
  5598   0026EA                     u5280:
  5599   0026EA                     l1127:
  5600   0026EA  BC0D               	btfsc	___fladd@signs^0,6,c
  5601   0026EC  EF7A  F013         	goto	u5291
  5602   0026F0  EF7C  F013         	goto	u5290
  5603   0026F4                     u5291:
  5604   0026F4  EFBC  F013         	goto	l4720
  5605   0026F8                     u5290:
  5606   0026F8  500F               	movf	___fladd@bexp^0,w,c
  5607   0026FA  A4D8               	btfss	status,2,c
  5608   0026FC  EF82  F013         	goto	u5301
  5609   002700  EF84  F013         	goto	u5300
  5610   002704                     u5301:
  5611   002704  EF8E  F013         	goto	l4702
  5612   002708                     u5300:
  5613   002708  0E00               	movlw	0
  5614   00270A  6E01               	movwf	?___fladd^0,c
  5615   00270C  0E00               	movlw	0
  5616   00270E  6E02               	movwf	(?___fladd+1)^0,c
  5617   002710  0E00               	movlw	0
  5618   002712  6E03               	movwf	(?___fladd+2)^0,c
  5619   002714  0E00               	movlw	0
  5620   002716  6E04               	movwf	(?___fladd+3)^0,c
  5621   002718  EFDD  F014         	goto	l1136
  5622   00271C                     l4702:
  5623   00271C  5005               	movf	___fladd@a^0,w,c
  5624   00271E  2601               	addwf	___fladd@b^0,f,c
  5625   002720  5006               	movf	(___fladd@a+1)^0,w,c
  5626   002722  2202               	addwfc	(___fladd@b+1)^0,f,c
  5627   002724  5007               	movf	(___fladd@a+2)^0,w,c
  5628   002726  2203               	addwfc	(___fladd@b+2)^0,f,c
  5629   002728  5008               	movf	(___fladd@a+3)^0,w,c
  5630   00272A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5631   00272C  A004               	btfss	(___fladd@b+3)^0,0,c
  5632   00272E  EF9B  F013         	goto	u5311
  5633   002732  EF9D  F013         	goto	u5310
  5634   002736                     u5311:
  5635   002736  EF49  F014         	goto	l4756
  5636   00273A                     u5310:
  5637   00273A  A010               	btfss	___fladd@grs^0,0,c
  5638   00273C  EFA2  F013         	goto	u5321
  5639   002740  EFA4  F013         	goto	u5320
  5640   002744                     u5321:
  5641   002744  EFAA  F013         	goto	l4710
  5642   002748                     u5320:
  5643   002748  90D8               	bcf	status,0,c
  5644   00274A  3010               	rrcf	___fladd@grs^0,w,c
  5645   00274C  0901               	iorlw	1
  5646   00274E  6E10               	movwf	___fladd@grs^0,c
  5647   002750  EFAC  F013         	goto	l4712
  5648   002754                     l4710:
  5649   002754  90D8               	bcf	status,0,c
  5650   002756  3210               	rrcf	___fladd@grs^0,f,c
  5651   002758                     l4712:
  5652   002758  A001               	btfss	___fladd@b^0,0,c
  5653   00275A  EFB1  F013         	goto	u5331
  5654   00275E  EFB3  F013         	goto	u5330
  5655   002762                     u5331:
  5656   002762  EFB4  F013         	goto	l4716
  5657   002766                     u5330:
  5658   002766  8E10               	bsf	___fladd@grs^0,7,c
  5659   002768                     l4716:
  5660   002768  3404               	rlcf	(___fladd@b+3)^0,w,c
  5661   00276A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5662   00276C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5663   00276E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5664   002770  3201               	rrcf	___fladd@b^0,f,c
  5665   002772  2A0F               	incf	___fladd@bexp^0,f,c
  5666   002774  EF49  F014         	goto	l4756
  5667   002778                     l4720:
  5668   002778  5005               	movf	___fladd@a^0,w,c
  5669   00277A  5C01               	subwf	___fladd@b^0,w,c
  5670   00277C  5006               	movf	(___fladd@a+1)^0,w,c
  5671   00277E  5802               	subwfb	(___fladd@b+1)^0,w,c
  5672   002780  5007               	movf	(___fladd@a+2)^0,w,c
  5673   002782  5803               	subwfb	(___fladd@b+2)^0,w,c
  5674   002784  5004               	movf	(___fladd@b+3)^0,w,c
  5675   002786  0A80               	xorlw	128
  5676   002788  6E09               	movwf	??___fladd^0,c
  5677   00278A  5008               	movf	(___fladd@a+3)^0,w,c
  5678   00278C  0A80               	xorlw	128
  5679   00278E  5809               	subwfb	??___fladd^0,w,c
  5680   002790  B0D8               	btfsc	status,0,c
  5681   002792  EFCD  F013         	goto	u5341
  5682   002796  EFCF  F013         	goto	u5340
  5683   00279A                     u5341:
  5684   00279A  EFFA  F013         	goto	l4730
  5685   00279E                     u5340:
  5686   00279E  5001               	movf	___fladd@b^0,w,c
  5687   0027A0  5C05               	subwf	___fladd@a^0,w,c
  5688   0027A2  6E09               	movwf	??___fladd^0,c
  5689   0027A4  5002               	movf	(___fladd@b+1)^0,w,c
  5690   0027A6  5806               	subwfb	(___fladd@a+1)^0,w,c
  5691   0027A8  6E0A               	movwf	(??___fladd+1)^0,c
  5692   0027AA  5003               	movf	(___fladd@b+2)^0,w,c
  5693   0027AC  5807               	subwfb	(___fladd@a+2)^0,w,c
  5694   0027AE  6E0B               	movwf	(??___fladd+2)^0,c
  5695   0027B0  5004               	movf	(___fladd@b+3)^0,w,c
  5696   0027B2  5808               	subwfb	(___fladd@a+3)^0,w,c
  5697   0027B4  6E0C               	movwf	(??___fladd+3)^0,c
  5698   0027B6  0EFF               	movlw	255
  5699   0027B8  2409               	addwf	??___fladd^0,w,c
  5700   0027BA  6E01               	movwf	___fladd@b^0,c
  5701   0027BC  0EFF               	movlw	255
  5702   0027BE  200A               	addwfc	(??___fladd+1)^0,w,c
  5703   0027C0  6E02               	movwf	(___fladd@b+1)^0,c
  5704   0027C2  0EFF               	movlw	255
  5705   0027C4  200B               	addwfc	(??___fladd+2)^0,w,c
  5706   0027C6  6E03               	movwf	(___fladd@b+2)^0,c
  5707   0027C8  0EFF               	movlw	255
  5708   0027CA  200C               	addwfc	(??___fladd+3)^0,w,c
  5709   0027CC  6E04               	movwf	(___fladd@b+3)^0,c
  5710   0027CE  0E80               	movlw	128
  5711   0027D0  1A0D               	xorwf	___fladd@signs^0,f,c
  5712   0027D2  6C10               	negf	___fladd@grs^0,c
  5713   0027D4  5010               	movf	___fladd@grs^0,w,c
  5714   0027D6  A4D8               	btfss	status,2,c
  5715   0027D8  EFF0  F013         	goto	u5351
  5716   0027DC  EFF2  F013         	goto	u5350
  5717   0027E0                     u5351:
  5718   0027E0  EF02  F014         	goto	l1144
  5719   0027E4                     u5350:
  5720   0027E4  0E01               	movlw	1
  5721   0027E6  2601               	addwf	___fladd@b^0,f,c
  5722   0027E8  0E00               	movlw	0
  5723   0027EA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5724   0027EC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5725   0027EE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5726   0027F0  EF02  F014         	goto	l1144
  5727   0027F4                     l4730:
  5728   0027F4  5005               	movf	___fladd@a^0,w,c
  5729   0027F6  5E01               	subwf	___fladd@b^0,f,c
  5730   0027F8  5006               	movf	(___fladd@a+1)^0,w,c
  5731   0027FA  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5732   0027FC  5007               	movf	(___fladd@a+2)^0,w,c
  5733   0027FE  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5734   002800  5008               	movf	(___fladd@a+3)^0,w,c
  5735   002802  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5736   002804                     l1144:
  5737   002804  5001               	movf	___fladd@b^0,w,c
  5738   002806  1002               	iorwf	(___fladd@b+1)^0,w,c
  5739   002808  1003               	iorwf	(___fladd@b+2)^0,w,c
  5740   00280A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5741   00280C  A4D8               	btfss	status,2,c
  5742   00280E  EF0B  F014         	goto	u5361
  5743   002812  EF0D  F014         	goto	u5360
  5744   002816                     u5361:
  5745   002816  EF42  F014         	goto	l4754
  5746   00281A                     u5360:
  5747   00281A  5010               	movf	___fladd@grs^0,w,c
  5748   00281C  A4D8               	btfss	status,2,c
  5749   00281E  EF13  F014         	goto	u5371
  5750   002822  EF15  F014         	goto	u5370
  5751   002826                     u5371:
  5752   002826  EF42  F014         	goto	l4754
  5753   00282A                     u5370:
  5754   00282A  0E00               	movlw	0
  5755   00282C  6E01               	movwf	?___fladd^0,c
  5756   00282E  0E00               	movlw	0
  5757   002830  6E02               	movwf	(?___fladd+1)^0,c
  5758   002832  0E00               	movlw	0
  5759   002834  6E03               	movwf	(?___fladd+2)^0,c
  5760   002836  0E00               	movlw	0
  5761   002838  6E04               	movwf	(?___fladd+3)^0,c
  5762   00283A  EFDD  F014         	goto	l1136
  5763   00283E                     l4738:
  5764   00283E  90D8               	bcf	status,0,c
  5765   002840  3601               	rlcf	___fladd@b^0,f,c
  5766   002842  3602               	rlcf	(___fladd@b+1)^0,f,c
  5767   002844  3603               	rlcf	(___fladd@b+2)^0,f,c
  5768   002846  3604               	rlcf	(___fladd@b+3)^0,f,c
  5769   002848  AE10               	btfss	___fladd@grs^0,7,c
  5770   00284A  EF29  F014         	goto	u5381
  5771   00284E  EF2B  F014         	goto	u5380
  5772   002852                     u5381:
  5773   002852  EF2C  F014         	goto	l4744
  5774   002856                     u5380:
  5775   002856  8001               	bsf	___fladd@b^0,0,c
  5776   002858                     l4744:
  5777   002858  A010               	btfss	___fladd@grs^0,0,c
  5778   00285A  EF31  F014         	goto	u5391
  5779   00285E  EF33  F014         	goto	u5390
  5780   002862                     u5391:
  5781   002862  EF37  F014         	goto	l4748
  5782   002866                     u5390:
  5783   002866  80D8               	bsf	status,0,c
  5784   002868  3610               	rlcf	___fladd@grs^0,f,c
  5785   00286A  EF39  F014         	goto	l4750
  5786   00286E                     l4748:
  5787   00286E  90D8               	bcf	status,0,c
  5788   002870  3610               	rlcf	___fladd@grs^0,f,c
  5789   002872                     l4750:
  5790   002872  500F               	movf	___fladd@bexp^0,w,c
  5791   002874  B4D8               	btfsc	status,2,c
  5792   002876  EF3F  F014         	goto	u5401
  5793   00287A  EF41  F014         	goto	u5400
  5794   00287E                     u5401:
  5795   00287E  EF42  F014         	goto	l4754
  5796   002882                     u5400:
  5797   002882  060F               	decf	___fladd@bexp^0,f,c
  5798   002884                     l4754:
  5799   002884  AE03               	btfss	(___fladd@b+2)^0,7,c
  5800   002886  EF47  F014         	goto	u5411
  5801   00288A  EF49  F014         	goto	u5410
  5802   00288E                     u5411:
  5803   00288E  EF1F  F014         	goto	l4738
  5804   002892                     u5410:
  5805   002892                     l4756:
  5806   002892  0E00               	movlw	0
  5807   002894  6E0E               	movwf	___fladd@aexp^0,c
  5808   002896  AE10               	btfss	___fladd@grs^0,7,c
  5809   002898  EF50  F014         	goto	u5421
  5810   00289C  EF52  F014         	goto	u5420
  5811   0028A0                     u5421:
  5812   0028A0  EF6A  F014         	goto	l1153
  5813   0028A4                     u5420:
  5814   0028A4  C010  F009         	movff	___fladd@grs,??___fladd
  5815   0028A8  0E7F               	movlw	127
  5816   0028AA  1609               	andwf	??___fladd^0,f,c
  5817   0028AC  B4D8               	btfsc	status,2,c
  5818   0028AE  EF5B  F014         	goto	u5431
  5819   0028B2  EF5D  F014         	goto	u5430
  5820   0028B6                     u5431:
  5821   0028B6  EF61  F014         	goto	l1154
  5822   0028BA                     u5430:
  5823   0028BA                     l4762:
  5824   0028BA  0E01               	movlw	1
  5825   0028BC  6E0E               	movwf	___fladd@aexp^0,c
  5826   0028BE  EF6A  F014         	goto	l1153
  5827   0028C2                     l1154:
  5828   0028C2  A001               	btfss	___fladd@b^0,0,c
  5829   0028C4  EF66  F014         	goto	u5441
  5830   0028C8  EF68  F014         	goto	u5440
  5831   0028CC                     u5441:
  5832   0028CC  EF6A  F014         	goto	l1153
  5833   0028D0                     u5440:
  5834   0028D0  EF5D  F014         	goto	l4762
  5835   0028D4                     l1153:
  5836   0028D4  500E               	movf	___fladd@aexp^0,w,c
  5837   0028D6  B4D8               	btfsc	status,2,c
  5838   0028D8  EF70  F014         	goto	u5451
  5839   0028DC  EF72  F014         	goto	u5450
  5840   0028E0                     u5451:
  5841   0028E0  EF9D  F014         	goto	l4774
  5842   0028E4                     u5450:
  5843   0028E4  0E01               	movlw	1
  5844   0028E6  2601               	addwf	___fladd@b^0,f,c
  5845   0028E8  0E00               	movlw	0
  5846   0028EA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5847   0028EC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5848   0028EE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5849   0028F0  A004               	btfss	(___fladd@b+3)^0,0,c
  5850   0028F2  EF7D  F014         	goto	u5461
  5851   0028F6  EF7F  F014         	goto	u5460
  5852   0028FA                     u5461:
  5853   0028FA  EF9D  F014         	goto	l4774
  5854   0028FE                     u5460:
  5855   0028FE  C001  F009         	movff	___fladd@b,??___fladd
  5856   002902  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5857   002906  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5858   00290A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5859   00290E  340C               	rlcf	(??___fladd+3)^0,w,c
  5860   002910  320C               	rrcf	(??___fladd+3)^0,f,c
  5861   002912  320B               	rrcf	(??___fladd+2)^0,f,c
  5862   002914  320A               	rrcf	(??___fladd+1)^0,f,c
  5863   002916  3209               	rrcf	??___fladd^0,f,c
  5864   002918  C009  F001         	movff	??___fladd,___fladd@b
  5865   00291C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5866   002920  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5867   002924  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5868   002928  280F               	incf	___fladd@bexp^0,w,c
  5869   00292A  B4D8               	btfsc	status,2,c
  5870   00292C  EF9A  F014         	goto	u5471
  5871   002930  EF9C  F014         	goto	u5470
  5872   002934                     u5471:
  5873   002934  EF9D  F014         	goto	l4774
  5874   002938                     u5470:
  5875   002938  2A0F               	incf	___fladd@bexp^0,f,c
  5876   00293A                     l4774:
  5877   00293A  280F               	incf	___fladd@bexp^0,w,c
  5878   00293C  B4D8               	btfsc	status,2,c
  5879   00293E  EFA3  F014         	goto	u5481
  5880   002942  EFA5  F014         	goto	u5480
  5881   002946                     u5481:
  5882   002946  EFAD  F014         	goto	l4778
  5883   00294A                     u5480:
  5884   00294A  500F               	movf	___fladd@bexp^0,w,c
  5885   00294C  A4D8               	btfss	status,2,c
  5886   00294E  EFAB  F014         	goto	u5491
  5887   002952  EFAD  F014         	goto	u5490
  5888   002956                     u5491:
  5889   002956  EFBF  F014         	goto	l4782
  5890   00295A                     u5490:
  5891   00295A                     l4778:
  5892   00295A  0E00               	movlw	0
  5893   00295C  6E01               	movwf	___fladd@b^0,c
  5894   00295E  0E00               	movlw	0
  5895   002960  6E02               	movwf	(___fladd@b+1)^0,c
  5896   002962  0E00               	movlw	0
  5897   002964  6E03               	movwf	(___fladd@b+2)^0,c
  5898   002966  0E00               	movlw	0
  5899   002968  6E04               	movwf	(___fladd@b+3)^0,c
  5900   00296A  500F               	movf	___fladd@bexp^0,w,c
  5901   00296C  A4D8               	btfss	status,2,c
  5902   00296E  EFBB  F014         	goto	u5501
  5903   002972  EFBD  F014         	goto	u5500
  5904   002976                     u5501:
  5905   002976  EFBF  F014         	goto	l4782
  5906   00297A                     u5500:
  5907   00297A  0E00               	movlw	0
  5908   00297C  6E0D               	movwf	___fladd@signs^0,c
  5909   00297E                     l4782:
  5910   00297E  A00F               	btfss	___fladd@bexp^0,0,c
  5911   002980  EFC4  F014         	goto	u5511
  5912   002984  EFC6  F014         	goto	u5510
  5913   002988                     u5511:
  5914   002988  EFC9  F014         	goto	l4786
  5915   00298C                     u5510:
  5916   00298C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5917   00298E  EFCA  F014         	goto	l4788
  5918   002992                     l4786:
  5919   002992  9E03               	bcf	(___fladd@b+2)^0,7,c
  5920   002994                     l4788:
  5921   002994  90D8               	bcf	status,0,c
  5922   002996  300F               	rrcf	___fladd@bexp^0,w,c
  5923   002998  6E04               	movwf	(___fladd@b+3)^0,c
  5924   00299A  AE0D               	btfss	___fladd@signs^0,7,c
  5925   00299C  EFD2  F014         	goto	u5521
  5926   0029A0  EFD4  F014         	goto	u5520
  5927   0029A4                     u5521:
  5928   0029A4  EFD5  F014         	goto	l4794
  5929   0029A8                     u5520:
  5930   0029A8  8E04               	bsf	(___fladd@b+3)^0,7,c
  5931   0029AA                     l4794:
  5932   0029AA  C001  F001         	movff	___fladd@b,?___fladd
  5933   0029AE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5934   0029B2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5935   0029B6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5936   0029BA                     l1136:
  5937   0029BA  0012               	return		;funcret
  5938   0029BC                     __end_of___fladd:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function ___flmul *****************
  5942 ;; Defined at:
  5943 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  b               4   58[COMRAM] unsigned char 
  5946 ;;  a               4   62[COMRAM] unsigned char 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  prod            4   77[COMRAM] struct .
  5949 ;;  grs             4   72[COMRAM] unsigned long 
  5950 ;;  temp            2   81[COMRAM] struct .
  5951 ;;  bexp            1   76[COMRAM] unsigned char 
  5952 ;;  aexp            1   71[COMRAM] unsigned char 
  5953 ;;  sign            1   70[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  4   58[COMRAM] unsigned char 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2, status,0, prodl, prodh
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;Total ram usage:       25 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_custom_floatmodulo
  5973 ;;		_RGB_to_HSV
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text23
  5978   002E7A                     __ptext23:
  5979                           	callstack 0
  5980   002E7A                     ___flmul:
  5981                           	callstack 26
  5982   002E7A  503E               	movf	(___flmul@b+3)^0,w,c
  5983   002E7C  0B80               	andlw	128
  5984   002E7E  6E47               	movwf	___flmul@sign^0,c
  5985   002E80  503E               	movf	(___flmul@b+3)^0,w,c
  5986   002E82  243E               	addwf	(___flmul@b+3)^0,w,c
  5987   002E84  6E4D               	movwf	___flmul@bexp^0,c
  5988   002E86  AE3D               	btfss	(___flmul@b+2)^0,7,c
  5989   002E88  EF48  F017         	goto	u5781
  5990   002E8C  EF4A  F017         	goto	u5780
  5991   002E90                     u5781:
  5992   002E90  EF4B  F017         	goto	l4946
  5993   002E94                     u5780:
  5994   002E94  804D               	bsf	___flmul@bexp^0,0,c
  5995   002E96                     l4946:
  5996   002E96  504D               	movf	___flmul@bexp^0,w,c
  5997   002E98  B4D8               	btfsc	status,2,c
  5998   002E9A  EF51  F017         	goto	u5791
  5999   002E9E  EF53  F017         	goto	u5790
  6000   002EA2                     u5791:
  6001   002EA2  EF66  F017         	goto	l4954
  6002   002EA6                     u5790:
  6003   002EA6  284D               	incf	___flmul@bexp^0,w,c
  6004   002EA8  A4D8               	btfss	status,2,c
  6005   002EAA  EF59  F017         	goto	u5801
  6006   002EAE  EF5B  F017         	goto	u5800
  6007   002EB2                     u5801:
  6008   002EB2  EF63  F017         	goto	l4952
  6009   002EB6                     u5800:
  6010   002EB6  0E00               	movlw	0
  6011   002EB8  6E3B               	movwf	___flmul@b^0,c
  6012   002EBA  0E00               	movlw	0
  6013   002EBC  6E3C               	movwf	(___flmul@b+1)^0,c
  6014   002EBE  0E00               	movlw	0
  6015   002EC0  6E3D               	movwf	(___flmul@b+2)^0,c
  6016   002EC2  0E00               	movlw	0
  6017   002EC4  6E3E               	movwf	(___flmul@b+3)^0,c
  6018   002EC6                     l4952:
  6019   002EC6  8E3D               	bsf	(___flmul@b+2)^0,7,c
  6020   002EC8  EF6E  F017         	goto	l4956
  6021   002ECC                     l4954:
  6022   002ECC  0E00               	movlw	0
  6023   002ECE  6E3B               	movwf	___flmul@b^0,c
  6024   002ED0  0E00               	movlw	0
  6025   002ED2  6E3C               	movwf	(___flmul@b+1)^0,c
  6026   002ED4  0E00               	movlw	0
  6027   002ED6  6E3D               	movwf	(___flmul@b+2)^0,c
  6028   002ED8  0E00               	movlw	0
  6029   002EDA  6E3E               	movwf	(___flmul@b+3)^0,c
  6030   002EDC                     l4956:
  6031   002EDC  5042               	movf	(___flmul@a+3)^0,w,c
  6032   002EDE  0B80               	andlw	128
  6033   002EE0  1A47               	xorwf	___flmul@sign^0,f,c
  6034   002EE2  5042               	movf	(___flmul@a+3)^0,w,c
  6035   002EE4  2442               	addwf	(___flmul@a+3)^0,w,c
  6036   002EE6  6E48               	movwf	___flmul@aexp^0,c
  6037   002EE8  AE41               	btfss	(___flmul@a+2)^0,7,c
  6038   002EEA  EF79  F017         	goto	u5811
  6039   002EEE  EF7B  F017         	goto	u5810
  6040   002EF2                     u5811:
  6041   002EF2  EF7C  F017         	goto	l4964
  6042   002EF6                     u5810:
  6043   002EF6  8048               	bsf	___flmul@aexp^0,0,c
  6044   002EF8                     l4964:
  6045   002EF8  5048               	movf	___flmul@aexp^0,w,c
  6046   002EFA  B4D8               	btfsc	status,2,c
  6047   002EFC  EF82  F017         	goto	u5821
  6048   002F00  EF84  F017         	goto	u5820
  6049   002F04                     u5821:
  6050   002F04  EF97  F017         	goto	l4972
  6051   002F08                     u5820:
  6052   002F08  2848               	incf	___flmul@aexp^0,w,c
  6053   002F0A  A4D8               	btfss	status,2,c
  6054   002F0C  EF8A  F017         	goto	u5831
  6055   002F10  EF8C  F017         	goto	u5830
  6056   002F14                     u5831:
  6057   002F14  EF94  F017         	goto	l4970
  6058   002F18                     u5830:
  6059   002F18  0E00               	movlw	0
  6060   002F1A  6E3F               	movwf	___flmul@a^0,c
  6061   002F1C  0E00               	movlw	0
  6062   002F1E  6E40               	movwf	(___flmul@a+1)^0,c
  6063   002F20  0E00               	movlw	0
  6064   002F22  6E41               	movwf	(___flmul@a+2)^0,c
  6065   002F24  0E00               	movlw	0
  6066   002F26  6E42               	movwf	(___flmul@a+3)^0,c
  6067   002F28                     l4970:
  6068   002F28  8E41               	bsf	(___flmul@a+2)^0,7,c
  6069   002F2A  EF9F  F017         	goto	l1213
  6070   002F2E                     l4972:
  6071   002F2E  0E00               	movlw	0
  6072   002F30  6E3F               	movwf	___flmul@a^0,c
  6073   002F32  0E00               	movlw	0
  6074   002F34  6E40               	movwf	(___flmul@a+1)^0,c
  6075   002F36  0E00               	movlw	0
  6076   002F38  6E41               	movwf	(___flmul@a+2)^0,c
  6077   002F3A  0E00               	movlw	0
  6078   002F3C  6E42               	movwf	(___flmul@a+3)^0,c
  6079   002F3E                     l1213:
  6080   002F3E  5048               	movf	___flmul@aexp^0,w,c
  6081   002F40  B4D8               	btfsc	status,2,c
  6082   002F42  EFA5  F017         	goto	u5841
  6083   002F46  EFA7  F017         	goto	u5840
  6084   002F4A                     u5841:
  6085   002F4A  EFAF  F017         	goto	l4976
  6086   002F4E                     u5840:
  6087   002F4E  504D               	movf	___flmul@bexp^0,w,c
  6088   002F50  A4D8               	btfss	status,2,c
  6089   002F52  EFAD  F017         	goto	u5851
  6090   002F56  EFAF  F017         	goto	u5850
  6091   002F5A                     u5851:
  6092   002F5A  EFB9  F017         	goto	l4980
  6093   002F5E                     u5850:
  6094   002F5E                     l4976:
  6095   002F5E  0E00               	movlw	0
  6096   002F60  6E3B               	movwf	?___flmul^0,c
  6097   002F62  0E00               	movlw	0
  6098   002F64  6E3C               	movwf	(?___flmul+1)^0,c
  6099   002F66  0E00               	movlw	0
  6100   002F68  6E3D               	movwf	(?___flmul+2)^0,c
  6101   002F6A  0E00               	movlw	0
  6102   002F6C  6E3E               	movwf	(?___flmul+3)^0,c
  6103   002F6E  EF51  F019         	goto	l1217
  6104   002F72                     l4980:
  6105   002F72  5041               	movf	(___flmul@a+2)^0,w,c
  6106   002F74  023B               	mulwf	___flmul@b^0,c
  6107   002F76  CFF3 F052          	movff	prodl,___flmul@temp
  6108   002F7A  CFF4 F053          	movff	prodh,___flmul@temp+1
  6109   002F7E  5052               	movf	___flmul@temp^0,w,c
  6110   002F80  6E49               	movwf	___flmul@grs^0,c
  6111   002F82  6A4A               	clrf	(___flmul@grs+1)^0,c
  6112   002F84  6A4B               	clrf	(___flmul@grs+2)^0,c
  6113   002F86  6A4C               	clrf	(___flmul@grs+3)^0,c
  6114   002F88  5053               	movf	(___flmul@temp+1)^0,w,c
  6115   002F8A  6E4E               	movwf	___flmul@prod^0,c
  6116   002F8C  6A4F               	clrf	(___flmul@prod+1)^0,c
  6117   002F8E  6A50               	clrf	(___flmul@prod+2)^0,c
  6118   002F90  6A51               	clrf	(___flmul@prod+3)^0,c
  6119   002F92  5040               	movf	(___flmul@a+1)^0,w,c
  6120   002F94  023C               	mulwf	(___flmul@b+1)^0,c
  6121   002F96  CFF3 F052          	movff	prodl,___flmul@temp
  6122   002F9A  CFF4 F053          	movff	prodh,___flmul@temp+1
  6123   002F9E  5052               	movf	___flmul@temp^0,w,c
  6124   002FA0  2649               	addwf	___flmul@grs^0,f,c
  6125   002FA2  0E00               	movlw	0
  6126   002FA4  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6127   002FA6  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6128   002FA8  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6129   002FAA  5053               	movf	(___flmul@temp+1)^0,w,c
  6130   002FAC  264E               	addwf	___flmul@prod^0,f,c
  6131   002FAE  0E00               	movlw	0
  6132   002FB0  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6133   002FB2  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6134   002FB4  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6135   002FB6  503F               	movf	___flmul@a^0,w,c
  6136   002FB8  023D               	mulwf	(___flmul@b+2)^0,c
  6137   002FBA  CFF3 F052          	movff	prodl,___flmul@temp
  6138   002FBE  CFF4 F053          	movff	prodh,___flmul@temp+1
  6139   002FC2  5052               	movf	___flmul@temp^0,w,c
  6140   002FC4  2649               	addwf	___flmul@grs^0,f,c
  6141   002FC6  0E00               	movlw	0
  6142   002FC8  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6143   002FCA  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6144   002FCC  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6145   002FCE  5053               	movf	(___flmul@temp+1)^0,w,c
  6146   002FD0  264E               	addwf	___flmul@prod^0,f,c
  6147   002FD2  0E00               	movlw	0
  6148   002FD4  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6149   002FD6  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6150   002FD8  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6151   002FDA  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
  6152   002FDE  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
  6153   002FE2  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
  6154   002FE6  6A49               	clrf	___flmul@grs^0,c
  6155   002FE8  503F               	movf	___flmul@a^0,w,c
  6156   002FEA  023C               	mulwf	(___flmul@b+1)^0,c
  6157   002FEC  CFF3 F052          	movff	prodl,___flmul@temp
  6158   002FF0  CFF4 F053          	movff	prodh,___flmul@temp+1
  6159   002FF4  5052               	movf	___flmul@temp^0,w,c
  6160   002FF6  2649               	addwf	___flmul@grs^0,f,c
  6161   002FF8  5053               	movf	(___flmul@temp+1)^0,w,c
  6162   002FFA  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6163   002FFC  0E00               	movlw	0
  6164   002FFE  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6165   003000  0E00               	movlw	0
  6166   003002  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6167   003004  5040               	movf	(___flmul@a+1)^0,w,c
  6168   003006  023B               	mulwf	___flmul@b^0,c
  6169   003008  CFF3 F052          	movff	prodl,___flmul@temp
  6170   00300C  CFF4 F053          	movff	prodh,___flmul@temp+1
  6171   003010  5052               	movf	___flmul@temp^0,w,c
  6172   003012  2649               	addwf	___flmul@grs^0,f,c
  6173   003014  5053               	movf	(___flmul@temp+1)^0,w,c
  6174   003016  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6175   003018  0E00               	movlw	0
  6176   00301A  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6177   00301C  0E00               	movlw	0
  6178   00301E  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6179   003020  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
  6180   003024  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
  6181   003028  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
  6182   00302C  6A49               	clrf	___flmul@grs^0,c
  6183   00302E  503F               	movf	___flmul@a^0,w,c
  6184   003030  023B               	mulwf	___flmul@b^0,c
  6185   003032  CFF3 F052          	movff	prodl,___flmul@temp
  6186   003036  CFF4 F053          	movff	prodh,___flmul@temp+1
  6187   00303A  5052               	movf	___flmul@temp^0,w,c
  6188   00303C  2649               	addwf	___flmul@grs^0,f,c
  6189   00303E  5053               	movf	(___flmul@temp+1)^0,w,c
  6190   003040  224A               	addwfc	(___flmul@grs+1)^0,f,c
  6191   003042  0E00               	movlw	0
  6192   003044  224B               	addwfc	(___flmul@grs+2)^0,f,c
  6193   003046  0E00               	movlw	0
  6194   003048  224C               	addwfc	(___flmul@grs+3)^0,f,c
  6195   00304A  5041               	movf	(___flmul@a+2)^0,w,c
  6196   00304C  023C               	mulwf	(___flmul@b+1)^0,c
  6197   00304E  CFF3 F052          	movff	prodl,___flmul@temp
  6198   003052  CFF4 F053          	movff	prodh,___flmul@temp+1
  6199   003056  5052               	movf	___flmul@temp^0,w,c
  6200   003058  264E               	addwf	___flmul@prod^0,f,c
  6201   00305A  5053               	movf	(___flmul@temp+1)^0,w,c
  6202   00305C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6203   00305E  0E00               	movlw	0
  6204   003060  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6205   003062  0E00               	movlw	0
  6206   003064  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6207   003066  5040               	movf	(___flmul@a+1)^0,w,c
  6208   003068  023D               	mulwf	(___flmul@b+2)^0,c
  6209   00306A  CFF3 F052          	movff	prodl,___flmul@temp
  6210   00306E  CFF4 F053          	movff	prodh,___flmul@temp+1
  6211   003072  5052               	movf	___flmul@temp^0,w,c
  6212   003074  264E               	addwf	___flmul@prod^0,f,c
  6213   003076  5053               	movf	(___flmul@temp+1)^0,w,c
  6214   003078  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6215   00307A  0E00               	movlw	0
  6216   00307C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6217   00307E  0E00               	movlw	0
  6218   003080  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6219   003082  5041               	movf	(___flmul@a+2)^0,w,c
  6220   003084  023D               	mulwf	(___flmul@b+2)^0,c
  6221   003086  CFF3 F052          	movff	prodl,___flmul@temp
  6222   00308A  CFF4 F053          	movff	prodh,___flmul@temp+1
  6223   00308E  5052               	movf	___flmul@temp^0,w,c
  6224   003090  6E43               	movwf	??___flmul^0,c
  6225   003092  5053               	movf	(___flmul@temp+1)^0,w,c
  6226   003094  6E44               	movwf	(??___flmul+1)^0,c
  6227   003096  6A45               	clrf	(??___flmul+2)^0,c
  6228   003098  6A46               	clrf	(??___flmul+3)^0,c
  6229   00309A  C045  F046         	movff	??___flmul+2,??___flmul+3
  6230   00309E  C044  F045         	movff	??___flmul+1,??___flmul+2
  6231   0030A2  C043  F044         	movff	??___flmul,??___flmul+1
  6232   0030A6  6A43               	clrf	??___flmul^0,c
  6233   0030A8  5043               	movf	??___flmul^0,w,c
  6234   0030AA  264E               	addwf	___flmul@prod^0,f,c
  6235   0030AC  5044               	movf	(??___flmul+1)^0,w,c
  6236   0030AE  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6237   0030B0  5045               	movf	(??___flmul+2)^0,w,c
  6238   0030B2  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6239   0030B4  5046               	movf	(??___flmul+3)^0,w,c
  6240   0030B6  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6241   0030B8  C049  F043         	movff	___flmul@grs,??___flmul
  6242   0030BC  C04A  F044         	movff	___flmul@grs+1,??___flmul+1
  6243   0030C0  C04B  F045         	movff	___flmul@grs+2,??___flmul+2
  6244   0030C4  C04C  F046         	movff	___flmul@grs+3,??___flmul+3
  6245   0030C8  0E19               	movlw	25
  6246   0030CA  EF6C  F018         	goto	u5860
  6247   0030CE                     u5865:
  6248   0030CE  90D8               	bcf	status,0,c
  6249   0030D0  3246               	rrcf	(??___flmul+3)^0,f,c
  6250   0030D2  3245               	rrcf	(??___flmul+2)^0,f,c
  6251   0030D4  3244               	rrcf	(??___flmul+1)^0,f,c
  6252   0030D6  3243               	rrcf	??___flmul^0,f,c
  6253   0030D8                     u5860:
  6254   0030D8  2EE8               	decfsz	wreg,f,c
  6255   0030DA  EF67  F018         	goto	u5865
  6256   0030DE  5043               	movf	??___flmul^0,w,c
  6257   0030E0  264E               	addwf	___flmul@prod^0,f,c
  6258   0030E2  5044               	movf	(??___flmul+1)^0,w,c
  6259   0030E4  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6260   0030E6  5045               	movf	(??___flmul+2)^0,w,c
  6261   0030E8  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6262   0030EA  5046               	movf	(??___flmul+3)^0,w,c
  6263   0030EC  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6264   0030EE  C04B  F04C         	movff	___flmul@grs+2,___flmul@grs+3
  6265   0030F2  C04A  F04B         	movff	___flmul@grs+1,___flmul@grs+2
  6266   0030F6  C049  F04A         	movff	___flmul@grs,___flmul@grs+1
  6267   0030FA  6A49               	clrf	___flmul@grs^0,c
  6268   0030FC  5048               	movf	___flmul@aexp^0,w,c
  6269   0030FE  C04D  F043         	movff	___flmul@bexp,??___flmul
  6270   003102  6A44               	clrf	(??___flmul+1)^0,c
  6271   003104  2643               	addwf	??___flmul^0,f,c
  6272   003106  0E00               	movlw	0
  6273   003108  2244               	addwfc	(??___flmul+1)^0,f,c
  6274   00310A  0E82               	movlw	130
  6275   00310C  2443               	addwf	??___flmul^0,w,c
  6276   00310E  6E52               	movwf	___flmul@temp^0,c
  6277   003110  0EFF               	movlw	255
  6278   003112  2044               	addwfc	(??___flmul+1)^0,w,c
  6279   003114  6E53               	movwf	(___flmul@temp+1)^0,c
  6280   003116  EFA2  F018         	goto	l5028
  6281   00311A                     l5022:
  6282   00311A  90D8               	bcf	status,0,c
  6283   00311C  364E               	rlcf	___flmul@prod^0,f,c
  6284   00311E  364F               	rlcf	(___flmul@prod+1)^0,f,c
  6285   003120  3650               	rlcf	(___flmul@prod+2)^0,f,c
  6286   003122  3651               	rlcf	(___flmul@prod+3)^0,f,c
  6287   003124  AE4C               	btfss	(___flmul@grs+3)^0,7,c
  6288   003126  EF97  F018         	goto	u5871
  6289   00312A  EF99  F018         	goto	u5870
  6290   00312E                     u5871:
  6291   00312E  EF9A  F018         	goto	l1220
  6292   003132                     u5870:
  6293   003132  804E               	bsf	___flmul@prod^0,0,c
  6294   003134                     l1220:
  6295   003134  90D8               	bcf	status,0,c
  6296   003136  3649               	rlcf	___flmul@grs^0,f,c
  6297   003138  364A               	rlcf	(___flmul@grs+1)^0,f,c
  6298   00313A  364B               	rlcf	(___flmul@grs+2)^0,f,c
  6299   00313C  364C               	rlcf	(___flmul@grs+3)^0,f,c
  6300   00313E  0652               	decf	___flmul@temp^0,f,c
  6301   003140  A0D8               	btfss	status,0,c
  6302   003142  0653               	decf	(___flmul@temp+1)^0,f,c
  6303   003144                     l5028:
  6304   003144  AE50               	btfss	(___flmul@prod+2)^0,7,c
  6305   003146  EFA7  F018         	goto	u5881
  6306   00314A  EFA9  F018         	goto	u5880
  6307   00314E                     u5881:
  6308   00314E  EF8D  F018         	goto	l5022
  6309   003152                     u5880:
  6310   003152  0E00               	movlw	0
  6311   003154  6E48               	movwf	___flmul@aexp^0,c
  6312   003156  AE4C               	btfss	(___flmul@grs+3)^0,7,c
  6313   003158  EFB0  F018         	goto	u5891
  6314   00315C  EFB2  F018         	goto	u5890
  6315   003160                     u5891:
  6316   003160  EFD6  F018         	goto	l1222
  6317   003164                     u5890:
  6318   003164  0EFF               	movlw	255
  6319   003166  1449               	andwf	___flmul@grs^0,w,c
  6320   003168  6E43               	movwf	??___flmul^0,c
  6321   00316A  0EFF               	movlw	255
  6322   00316C  144A               	andwf	(___flmul@grs+1)^0,w,c
  6323   00316E  6E44               	movwf	(??___flmul+1)^0,c
  6324   003170  0EFF               	movlw	255
  6325   003172  144B               	andwf	(___flmul@grs+2)^0,w,c
  6326   003174  6E45               	movwf	(??___flmul+2)^0,c
  6327   003176  0E7F               	movlw	127
  6328   003178  144C               	andwf	(___flmul@grs+3)^0,w,c
  6329   00317A  6E46               	movwf	(??___flmul+3)^0,c
  6330   00317C  5043               	movf	??___flmul^0,w,c
  6331   00317E  1044               	iorwf	(??___flmul+1)^0,w,c
  6332   003180  1045               	iorwf	(??___flmul+2)^0,w,c
  6333   003182  1046               	iorwf	(??___flmul+3)^0,w,c
  6334   003184  B4D8               	btfsc	status,2,c
  6335   003186  EFC7  F018         	goto	u5901
  6336   00318A  EFC9  F018         	goto	u5900
  6337   00318E                     u5901:
  6338   00318E  EFCD  F018         	goto	l1223
  6339   003192                     u5900:
  6340   003192                     l5036:
  6341   003192  0E01               	movlw	1
  6342   003194  6E48               	movwf	___flmul@aexp^0,c
  6343   003196  EFD6  F018         	goto	l1222
  6344   00319A                     l1223:
  6345   00319A  A04E               	btfss	___flmul@prod^0,0,c
  6346   00319C  EFD2  F018         	goto	u5911
  6347   0031A0  EFD4  F018         	goto	u5910
  6348   0031A4                     u5911:
  6349   0031A4  EFD6  F018         	goto	l1222
  6350   0031A8                     u5910:
  6351   0031A8  EFC9  F018         	goto	l5036
  6352   0031AC                     l1222:
  6353   0031AC  5048               	movf	___flmul@aexp^0,w,c
  6354   0031AE  B4D8               	btfsc	status,2,c
  6355   0031B0  EFDC  F018         	goto	u5921
  6356   0031B4  EFDE  F018         	goto	u5920
  6357   0031B8                     u5921:
  6358   0031B8  EF02  F019         	goto	l5048
  6359   0031BC                     u5920:
  6360   0031BC  0E01               	movlw	1
  6361   0031BE  264E               	addwf	___flmul@prod^0,f,c
  6362   0031C0  0E00               	movlw	0
  6363   0031C2  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6364   0031C4  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6365   0031C6  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6366   0031C8  A051               	btfss	(___flmul@prod+3)^0,0,c
  6367   0031CA  EFE9  F018         	goto	u5931
  6368   0031CE  EFEB  F018         	goto	u5930
  6369   0031D2                     u5931:
  6370   0031D2  EF02  F019         	goto	l5048
  6371   0031D6                     u5930:
  6372   0031D6  C04E  F043         	movff	___flmul@prod,??___flmul
  6373   0031DA  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  6374   0031DE  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  6375   0031E2  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  6376   0031E6  3446               	rlcf	(??___flmul+3)^0,w,c
  6377   0031E8  3246               	rrcf	(??___flmul+3)^0,f,c
  6378   0031EA  3245               	rrcf	(??___flmul+2)^0,f,c
  6379   0031EC  3244               	rrcf	(??___flmul+1)^0,f,c
  6380   0031EE  3243               	rrcf	??___flmul^0,f,c
  6381   0031F0  C043  F04E         	movff	??___flmul,___flmul@prod
  6382   0031F4  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6383   0031F8  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6384   0031FC  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6385   003200  4A52               	infsnz	___flmul@temp^0,f,c
  6386   003202  2A53               	incf	(___flmul@temp+1)^0,f,c
  6387   003204                     l5048:
  6388   003204  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6389   003206  EF0D  F019         	goto	u5941
  6390   00320A  5053               	movf	(___flmul@temp+1)^0,w,c
  6391   00320C  E108               	bnz	u5940
  6392   00320E  2852               	incf	___flmul@temp^0,w,c
  6393   003210  A0D8               	btfss	status,0,c
  6394   003212  EF0D  F019         	goto	u5941
  6395   003216  EF0F  F019         	goto	u5940
  6396   00321A                     u5941:
  6397   00321A  EF19  F019         	goto	l5052
  6398   00321E                     u5940:
  6399   00321E  0E00               	movlw	0
  6400   003220  6E4E               	movwf	___flmul@prod^0,c
  6401   003222  0E00               	movlw	0
  6402   003224  6E4F               	movwf	(___flmul@prod+1)^0,c
  6403   003226  0E80               	movlw	128
  6404   003228  6E50               	movwf	(___flmul@prod+2)^0,c
  6405   00322A  0E7F               	movlw	127
  6406   00322C  6E51               	movwf	(___flmul@prod+3)^0,c
  6407   00322E  EF47  F019         	goto	l5064
  6408   003232                     l5052:
  6409   003232  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6410   003234  EF26  F019         	goto	u5950
  6411   003238  5053               	movf	(___flmul@temp+1)^0,w,c
  6412   00323A  E106               	bnz	u5951
  6413   00323C  0452               	decf	___flmul@temp^0,w,c
  6414   00323E  B0D8               	btfsc	status,0,c
  6415   003240  EF24  F019         	goto	u5951
  6416   003244  EF26  F019         	goto	u5950
  6417   003248                     u5951:
  6418   003248  EF32  F019         	goto	l1230
  6419   00324C                     u5950:
  6420   00324C  0E00               	movlw	0
  6421   00324E  6E4E               	movwf	___flmul@prod^0,c
  6422   003250  0E00               	movlw	0
  6423   003252  6E4F               	movwf	(___flmul@prod+1)^0,c
  6424   003254  0E00               	movlw	0
  6425   003256  6E50               	movwf	(___flmul@prod+2)^0,c
  6426   003258  0E00               	movlw	0
  6427   00325A  6E51               	movwf	(___flmul@prod+3)^0,c
  6428   00325C  0E00               	movlw	0
  6429   00325E  6E47               	movwf	___flmul@sign^0,c
  6430   003260  EF47  F019         	goto	l5064
  6431   003264                     l1230:
  6432   003264  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6433   003268  0EFF               	movlw	255
  6434   00326A  164E               	andwf	___flmul@prod^0,f,c
  6435   00326C  0EFF               	movlw	255
  6436   00326E  164F               	andwf	(___flmul@prod+1)^0,f,c
  6437   003270  0E7F               	movlw	127
  6438   003272  1650               	andwf	(___flmul@prod+2)^0,f,c
  6439   003274  0E00               	movlw	0
  6440   003276  1651               	andwf	(___flmul@prod+3)^0,f,c
  6441   003278  A04D               	btfss	___flmul@bexp^0,0,c
  6442   00327A  EF41  F019         	goto	u5961
  6443   00327E  EF43  F019         	goto	u5960
  6444   003282                     u5961:
  6445   003282  EF44  F019         	goto	l5062
  6446   003286                     u5960:
  6447   003286  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6448   003288                     l5062:
  6449   003288  90D8               	bcf	status,0,c
  6450   00328A  304D               	rrcf	___flmul@bexp^0,w,c
  6451   00328C  6E51               	movwf	(___flmul@prod+3)^0,c
  6452   00328E                     l5064:
  6453   00328E  5047               	movf	___flmul@sign^0,w,c
  6454   003290  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6455   003292  C04E  F03B         	movff	___flmul@prod,?___flmul
  6456   003296  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6457   00329A  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6458   00329E  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6459   0032A2                     l1217:
  6460   0032A2  0012               	return		;funcret
  6461   0032A4                     __end_of___flmul:
  6462                           	callstack 0
  6463                           
  6464 ;; *************** function ___fleq *****************
  6465 ;; Defined at:
  6466 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  ff1             4    0[COMRAM] unsigned char 
  6469 ;;  ff2             4    4[COMRAM] unsigned char 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;		None               void
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6481 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6484 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;Total ram usage:       12 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_custom_floatmodulo
  6491 ;;		_RGB_to_HSV
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text24
  6496   0048A8                     __ptext24:
  6497                           	callstack 0
  6498   0048A8                     ___fleq:
  6499                           	callstack 26
  6500   0048A8  0E00               	movlw	0
  6501   0048AA  1401               	andwf	___fleq@ff1^0,w,c
  6502   0048AC  6E09               	movwf	??___fleq^0,c
  6503   0048AE  0E00               	movlw	0
  6504   0048B0  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6505   0048B2  6E0A               	movwf	(??___fleq+1)^0,c
  6506   0048B4  0E80               	movlw	128
  6507   0048B6  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6508   0048B8  6E0B               	movwf	(??___fleq+2)^0,c
  6509   0048BA  0E7F               	movlw	127
  6510   0048BC  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6511   0048BE  6E0C               	movwf	(??___fleq+3)^0,c
  6512   0048C0  5009               	movf	??___fleq^0,w,c
  6513   0048C2  100A               	iorwf	(??___fleq+1)^0,w,c
  6514   0048C4  100B               	iorwf	(??___fleq+2)^0,w,c
  6515   0048C6  100C               	iorwf	(??___fleq+3)^0,w,c
  6516   0048C8  A4D8               	btfss	status,2,c
  6517   0048CA  EF69  F024         	goto	u5971
  6518   0048CE  EF6B  F024         	goto	u5970
  6519   0048D2                     u5971:
  6520   0048D2  EF73  F024         	goto	l5080
  6521   0048D6                     u5970:
  6522   0048D6  0E00               	movlw	0
  6523   0048D8  6E01               	movwf	___fleq@ff1^0,c
  6524   0048DA  0E00               	movlw	0
  6525   0048DC  6E02               	movwf	(___fleq@ff1+1)^0,c
  6526   0048DE  0E00               	movlw	0
  6527   0048E0  6E03               	movwf	(___fleq@ff1+2)^0,c
  6528   0048E2  0E00               	movlw	0
  6529   0048E4  6E04               	movwf	(___fleq@ff1+3)^0,c
  6530   0048E6                     l5080:
  6531   0048E6  0E00               	movlw	0
  6532   0048E8  1405               	andwf	___fleq@ff2^0,w,c
  6533   0048EA  6E09               	movwf	??___fleq^0,c
  6534   0048EC  0E00               	movlw	0
  6535   0048EE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6536   0048F0  6E0A               	movwf	(??___fleq+1)^0,c
  6537   0048F2  0E80               	movlw	128
  6538   0048F4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6539   0048F6  6E0B               	movwf	(??___fleq+2)^0,c
  6540   0048F8  0E7F               	movlw	127
  6541   0048FA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6542   0048FC  6E0C               	movwf	(??___fleq+3)^0,c
  6543   0048FE  5009               	movf	??___fleq^0,w,c
  6544   004900  100A               	iorwf	(??___fleq+1)^0,w,c
  6545   004902  100B               	iorwf	(??___fleq+2)^0,w,c
  6546   004904  100C               	iorwf	(??___fleq+3)^0,w,c
  6547   004906  A4D8               	btfss	status,2,c
  6548   004908  EF88  F024         	goto	u5981
  6549   00490C  EF8A  F024         	goto	u5980
  6550   004910                     u5981:
  6551   004910  EF92  F024         	goto	l5084
  6552   004914                     u5980:
  6553   004914  0E00               	movlw	0
  6554   004916  6E05               	movwf	___fleq@ff2^0,c
  6555   004918  0E00               	movlw	0
  6556   00491A  6E06               	movwf	(___fleq@ff2+1)^0,c
  6557   00491C  0E00               	movlw	0
  6558   00491E  6E07               	movwf	(___fleq@ff2+2)^0,c
  6559   004920  0E00               	movlw	0
  6560   004922  6E08               	movwf	(___fleq@ff2+3)^0,c
  6561   004924                     l5084:
  6562   004924  5005               	movf	___fleq@ff2^0,w,c
  6563   004926  1801               	xorwf	___fleq@ff1^0,w,c
  6564   004928  E10F               	bnz	u5990
  6565   00492A  5006               	movf	(___fleq@ff2+1)^0,w,c
  6566   00492C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6567   00492E  E10C               	bnz	u5990
  6568   004930  5007               	movf	(___fleq@ff2+2)^0,w,c
  6569   004932  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6570   004934  E109               	bnz	u5990
  6571   004936  5008               	movf	(___fleq@ff2+3)^0,w,c
  6572   004938  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6573   00493A  B4D8               	btfsc	status,2,c
  6574   00493C  EFA2  F024         	goto	u5991
  6575   004940  EFA4  F024         	goto	u5990
  6576   004944                     u5991:
  6577   004944  EFA7  F024         	goto	l5088
  6578   004948                     u5990:
  6579   004948  90D8               	bcf	status,0,c
  6580   00494A  EFA8  F024         	goto	l858
  6581   00494E                     l5088:
  6582   00494E  80D8               	bsf	status,0,c
  6583   004950                     l858:
  6584   004950  0012               	return		;funcret
  6585   004952                     __end_of___fleq:
  6586                           	callstack 0
  6587                           
  6588 ;; *************** function ___fldiv *****************
  6589 ;; Defined at:
  6590 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  b               4   33[COMRAM] unsigned char 
  6593 ;;  a               4   37[COMRAM] unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  grs             4   52[COMRAM] unsigned long 
  6596 ;;  rem             4   45[COMRAM] unsigned long 
  6597 ;;  new_exp         2   50[COMRAM] short 
  6598 ;;  aexp            1   57[COMRAM] unsigned char 
  6599 ;;  bexp            1   56[COMRAM] unsigned char 
  6600 ;;  sign            1   49[COMRAM] unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  4   33[COMRAM] unsigned char 
  6603 ;; Registers used:
  6604 ;;		wreg, status,2, status,0
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6610 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6612 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6613 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6614 ;;Total ram usage:       25 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_custom_floatmodulo
  6620 ;;		_RGB_to_HSV
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text25
  6625   0032A4                     __ptext25:
  6626                           	callstack 0
  6627   0032A4                     ___fldiv:
  6628                           	callstack 26
  6629   0032A4  5025               	movf	(___fldiv@b+3)^0,w,c
  6630   0032A6  0B80               	andlw	128
  6631   0032A8  6E32               	movwf	___fldiv@sign^0,c
  6632   0032AA  5025               	movf	(___fldiv@b+3)^0,w,c
  6633   0032AC  2425               	addwf	(___fldiv@b+3)^0,w,c
  6634   0032AE  6E39               	movwf	___fldiv@bexp^0,c
  6635   0032B0  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6636   0032B2  EF5D  F019         	goto	u5551
  6637   0032B6  EF5F  F019         	goto	u5550
  6638   0032BA                     u5551:
  6639   0032BA  EF60  F019         	goto	l4808
  6640   0032BE                     u5550:
  6641   0032BE  8039               	bsf	___fldiv@bexp^0,0,c
  6642   0032C0                     l4808:
  6643   0032C0  5039               	movf	___fldiv@bexp^0,w,c
  6644   0032C2  B4D8               	btfsc	status,2,c
  6645   0032C4  EF66  F019         	goto	u5561
  6646   0032C8  EF68  F019         	goto	u5560
  6647   0032CC                     u5561:
  6648   0032CC  EF7D  F019         	goto	l4818
  6649   0032D0                     u5560:
  6650   0032D0  2839               	incf	___fldiv@bexp^0,w,c
  6651   0032D2  A4D8               	btfss	status,2,c
  6652   0032D4  EF6E  F019         	goto	u5571
  6653   0032D8  EF70  F019         	goto	u5570
  6654   0032DC                     u5571:
  6655   0032DC  EF78  F019         	goto	l4814
  6656   0032E0                     u5570:
  6657   0032E0  0E00               	movlw	0
  6658   0032E2  6E22               	movwf	___fldiv@b^0,c
  6659   0032E4  0E00               	movlw	0
  6660   0032E6  6E23               	movwf	(___fldiv@b+1)^0,c
  6661   0032E8  0E00               	movlw	0
  6662   0032EA  6E24               	movwf	(___fldiv@b+2)^0,c
  6663   0032EC  0E00               	movlw	0
  6664   0032EE  6E25               	movwf	(___fldiv@b+3)^0,c
  6665   0032F0                     l4814:
  6666   0032F0  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6667   0032F2  0E00               	movlw	0
  6668   0032F4  6E25               	movwf	(___fldiv@b+3)^0,c
  6669   0032F6  EF85  F019         	goto	l4820
  6670   0032FA                     l4818:
  6671   0032FA  0E00               	movlw	0
  6672   0032FC  6E22               	movwf	___fldiv@b^0,c
  6673   0032FE  0E00               	movlw	0
  6674   003300  6E23               	movwf	(___fldiv@b+1)^0,c
  6675   003302  0E00               	movlw	0
  6676   003304  6E24               	movwf	(___fldiv@b+2)^0,c
  6677   003306  0E00               	movlw	0
  6678   003308  6E25               	movwf	(___fldiv@b+3)^0,c
  6679   00330A                     l4820:
  6680   00330A  5029               	movf	(___fldiv@a+3)^0,w,c
  6681   00330C  0B80               	andlw	128
  6682   00330E  1A32               	xorwf	___fldiv@sign^0,f,c
  6683   003310  5029               	movf	(___fldiv@a+3)^0,w,c
  6684   003312  2429               	addwf	(___fldiv@a+3)^0,w,c
  6685   003314  6E3A               	movwf	___fldiv@aexp^0,c
  6686   003316  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6687   003318  EF90  F019         	goto	u5581
  6688   00331C  EF92  F019         	goto	u5580
  6689   003320                     u5581:
  6690   003320  EF93  F019         	goto	l4828
  6691   003324                     u5580:
  6692   003324  803A               	bsf	___fldiv@aexp^0,0,c
  6693   003326                     l4828:
  6694   003326  503A               	movf	___fldiv@aexp^0,w,c
  6695   003328  B4D8               	btfsc	status,2,c
  6696   00332A  EF99  F019         	goto	u5591
  6697   00332E  EF9B  F019         	goto	u5590
  6698   003332                     u5591:
  6699   003332  EFB0  F019         	goto	l4838
  6700   003336                     u5590:
  6701   003336  283A               	incf	___fldiv@aexp^0,w,c
  6702   003338  A4D8               	btfss	status,2,c
  6703   00333A  EFA1  F019         	goto	u5601
  6704   00333E  EFA3  F019         	goto	u5600
  6705   003342                     u5601:
  6706   003342  EFAB  F019         	goto	l4834
  6707   003346                     u5600:
  6708   003346  0E00               	movlw	0
  6709   003348  6E26               	movwf	___fldiv@a^0,c
  6710   00334A  0E00               	movlw	0
  6711   00334C  6E27               	movwf	(___fldiv@a+1)^0,c
  6712   00334E  0E00               	movlw	0
  6713   003350  6E28               	movwf	(___fldiv@a+2)^0,c
  6714   003352  0E00               	movlw	0
  6715   003354  6E29               	movwf	(___fldiv@a+3)^0,c
  6716   003356                     l4834:
  6717   003356  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6718   003358  0E00               	movlw	0
  6719   00335A  6E29               	movwf	(___fldiv@a+3)^0,c
  6720   00335C  EFB8  F019         	goto	l4840
  6721   003360                     l4838:
  6722   003360  0E00               	movlw	0
  6723   003362  6E26               	movwf	___fldiv@a^0,c
  6724   003364  0E00               	movlw	0
  6725   003366  6E27               	movwf	(___fldiv@a+1)^0,c
  6726   003368  0E00               	movlw	0
  6727   00336A  6E28               	movwf	(___fldiv@a+2)^0,c
  6728   00336C  0E00               	movlw	0
  6729   00336E  6E29               	movwf	(___fldiv@a+3)^0,c
  6730   003370                     l4840:
  6731   003370  5026               	movf	___fldiv@a^0,w,c
  6732   003372  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6733   003374  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6734   003376  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6735   003378  A4D8               	btfss	status,2,c
  6736   00337A  EFC1  F019         	goto	u5611
  6737   00337E  EFC3  F019         	goto	u5610
  6738   003382                     u5611:
  6739   003382  EFDB  F019         	goto	l4852
  6740   003386                     u5610:
  6741   003386  0E00               	movlw	0
  6742   003388  6E22               	movwf	___fldiv@b^0,c
  6743   00338A  0E00               	movlw	0
  6744   00338C  6E23               	movwf	(___fldiv@b+1)^0,c
  6745   00338E  0E00               	movlw	0
  6746   003390  6E24               	movwf	(___fldiv@b+2)^0,c
  6747   003392  0E00               	movlw	0
  6748   003394  6E25               	movwf	(___fldiv@b+3)^0,c
  6749   003396  0E80               	movlw	128
  6750   003398  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6751   00339A  0E7F               	movlw	127
  6752   00339C  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6753   00339E                     l4846:
  6754   00339E  5032               	movf	___fldiv@sign^0,w,c
  6755   0033A0  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6756   0033A2  C022  F022         	movff	___fldiv@b,?___fldiv
  6757   0033A6  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6758   0033AA  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6759   0033AE  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6760   0033B2  EF1E  F01B         	goto	l1181
  6761   0033B6                     l4852:
  6762   0033B6  5039               	movf	___fldiv@bexp^0,w,c
  6763   0033B8  A4D8               	btfss	status,2,c
  6764   0033BA  EFE1  F019         	goto	u5621
  6765   0033BE  EFE3  F019         	goto	u5620
  6766   0033C2                     u5621:
  6767   0033C2  EFED  F019         	goto	l4860
  6768   0033C6                     u5620:
  6769   0033C6  0E00               	movlw	0
  6770   0033C8  6E22               	movwf	?___fldiv^0,c
  6771   0033CA  0E00               	movlw	0
  6772   0033CC  6E23               	movwf	(?___fldiv+1)^0,c
  6773   0033CE  0E00               	movlw	0
  6774   0033D0  6E24               	movwf	(?___fldiv+2)^0,c
  6775   0033D2  0E00               	movlw	0
  6776   0033D4  6E25               	movwf	(?___fldiv+3)^0,c
  6777   0033D6  EF1E  F01B         	goto	l1181
  6778   0033DA                     l4860:
  6779   0033DA  503A               	movf	___fldiv@aexp^0,w,c
  6780   0033DC  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6781   0033E0  6A2B               	clrf	(??___fldiv+1)^0,c
  6782   0033E2  5E2A               	subwf	??___fldiv^0,f,c
  6783   0033E4  0E00               	movlw	0
  6784   0033E6  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6785   0033E8  0E7F               	movlw	127
  6786   0033EA  242A               	addwf	??___fldiv^0,w,c
  6787   0033EC  6E33               	movwf	___fldiv@new_exp^0,c
  6788   0033EE  0E00               	movlw	0
  6789   0033F0  202B               	addwfc	(??___fldiv+1)^0,w,c
  6790   0033F2  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6791   0033F4  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6792   0033F8  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6793   0033FC  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6794   003400  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6795   003404  0E00               	movlw	0
  6796   003406  6E22               	movwf	___fldiv@b^0,c
  6797   003408  0E00               	movlw	0
  6798   00340A  6E23               	movwf	(___fldiv@b+1)^0,c
  6799   00340C  0E00               	movlw	0
  6800   00340E  6E24               	movwf	(___fldiv@b+2)^0,c
  6801   003410  0E00               	movlw	0
  6802   003412  6E25               	movwf	(___fldiv@b+3)^0,c
  6803   003414  0E00               	movlw	0
  6804   003416  6E35               	movwf	___fldiv@grs^0,c
  6805   003418  0E00               	movlw	0
  6806   00341A  6E36               	movwf	(___fldiv@grs+1)^0,c
  6807   00341C  0E00               	movlw	0
  6808   00341E  6E37               	movwf	(___fldiv@grs+2)^0,c
  6809   003420  0E00               	movlw	0
  6810   003422  6E38               	movwf	(___fldiv@grs+3)^0,c
  6811   003424  0E00               	movlw	0
  6812   003426  6E3A               	movwf	___fldiv@aexp^0,c
  6813   003428  EF4E  F01A         	goto	l1183
  6814   00342C                     l4870:
  6815   00342C  503A               	movf	___fldiv@aexp^0,w,c
  6816   00342E  B4D8               	btfsc	status,2,c
  6817   003430  EF1C  F01A         	goto	u5631
  6818   003434  EF1E  F01A         	goto	u5630
  6819   003438                     u5631:
  6820   003438  EF35  F01A         	goto	l4878
  6821   00343C                     u5630:
  6822   00343C  90D8               	bcf	status,0,c
  6823   00343E  362E               	rlcf	___fldiv@rem^0,f,c
  6824   003440  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6825   003442  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6826   003444  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6827   003446  90D8               	bcf	status,0,c
  6828   003448  3622               	rlcf	___fldiv@b^0,f,c
  6829   00344A  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6830   00344C  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6831   00344E  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6832   003450  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6833   003452  EF2D  F01A         	goto	u5641
  6834   003456  EF2F  F01A         	goto	u5640
  6835   00345A                     u5641:
  6836   00345A  EF30  F01A         	goto	l1186
  6837   00345E                     u5640:
  6838   00345E  8022               	bsf	___fldiv@b^0,0,c
  6839   003460                     l1186:
  6840   003460  90D8               	bcf	status,0,c
  6841   003462  3635               	rlcf	___fldiv@grs^0,f,c
  6842   003464  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6843   003466  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6844   003468  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6845   00346A                     l4878:
  6846   00346A  5026               	movf	___fldiv@a^0,w,c
  6847   00346C  5C2E               	subwf	___fldiv@rem^0,w,c
  6848   00346E  5027               	movf	(___fldiv@a+1)^0,w,c
  6849   003470  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6850   003472  5028               	movf	(___fldiv@a+2)^0,w,c
  6851   003474  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6852   003476  5029               	movf	(___fldiv@a+3)^0,w,c
  6853   003478  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6854   00347A  A0D8               	btfss	status,0,c
  6855   00347C  EF42  F01A         	goto	u5651
  6856   003480  EF44  F01A         	goto	u5650
  6857   003484                     u5651:
  6858   003484  EF4D  F01A         	goto	l4884
  6859   003488                     u5650:
  6860   003488  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6861   00348A  5026               	movf	___fldiv@a^0,w,c
  6862   00348C  5E2E               	subwf	___fldiv@rem^0,f,c
  6863   00348E  5027               	movf	(___fldiv@a+1)^0,w,c
  6864   003490  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6865   003492  5028               	movf	(___fldiv@a+2)^0,w,c
  6866   003494  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6867   003496  5029               	movf	(___fldiv@a+3)^0,w,c
  6868   003498  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6869   00349A                     l4884:
  6870   00349A  2A3A               	incf	___fldiv@aexp^0,f,c
  6871   00349C                     l1183:
  6872   00349C  0E19               	movlw	25
  6873   00349E  643A               	cpfsgt	___fldiv@aexp^0,c
  6874   0034A0  EF54  F01A         	goto	u5661
  6875   0034A4  EF56  F01A         	goto	u5660
  6876   0034A8                     u5661:
  6877   0034A8  EF16  F01A         	goto	l4870
  6878   0034AC                     u5660:
  6879   0034AC  502E               	movf	___fldiv@rem^0,w,c
  6880   0034AE  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6881   0034B0  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6882   0034B2  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6883   0034B4  B4D8               	btfsc	status,2,c
  6884   0034B6  EF5F  F01A         	goto	u5671
  6885   0034BA  EF61  F01A         	goto	u5670
  6886   0034BE                     u5671:
  6887   0034BE  EF79  F01A         	goto	l4896
  6888   0034C2                     u5670:
  6889   0034C2  8035               	bsf	___fldiv@grs^0,0,c
  6890   0034C4  EF79  F01A         	goto	l4896
  6891   0034C8                     l4890:
  6892   0034C8  90D8               	bcf	status,0,c
  6893   0034CA  3622               	rlcf	___fldiv@b^0,f,c
  6894   0034CC  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6895   0034CE  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6896   0034D0  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6897   0034D2  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6898   0034D4  EF6E  F01A         	goto	u5681
  6899   0034D8  EF70  F01A         	goto	u5680
  6900   0034DC                     u5681:
  6901   0034DC  EF71  F01A         	goto	l1192
  6902   0034E0                     u5680:
  6903   0034E0  8022               	bsf	___fldiv@b^0,0,c
  6904   0034E2                     l1192:
  6905   0034E2  90D8               	bcf	status,0,c
  6906   0034E4  3635               	rlcf	___fldiv@grs^0,f,c
  6907   0034E6  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6908   0034E8  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6909   0034EA  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6910   0034EC  0633               	decf	___fldiv@new_exp^0,f,c
  6911   0034EE  A0D8               	btfss	status,0,c
  6912   0034F0  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6913   0034F2                     l4896:
  6914   0034F2  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6915   0034F4  EF7E  F01A         	goto	u5691
  6916   0034F8  EF80  F01A         	goto	u5690
  6917   0034FC                     u5691:
  6918   0034FC  EF64  F01A         	goto	l4890
  6919   003500                     u5690:
  6920   003500  0E00               	movlw	0
  6921   003502  6E3A               	movwf	___fldiv@aexp^0,c
  6922   003504  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6923   003506  EF87  F01A         	goto	u5701
  6924   00350A  EF89  F01A         	goto	u5700
  6925   00350E                     u5701:
  6926   00350E  EFAD  F01A         	goto	l1194
  6927   003512                     u5700:
  6928   003512  0EFF               	movlw	255
  6929   003514  1435               	andwf	___fldiv@grs^0,w,c
  6930   003516  6E2A               	movwf	??___fldiv^0,c
  6931   003518  0EFF               	movlw	255
  6932   00351A  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6933   00351C  6E2B               	movwf	(??___fldiv+1)^0,c
  6934   00351E  0EFF               	movlw	255
  6935   003520  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6936   003522  6E2C               	movwf	(??___fldiv+2)^0,c
  6937   003524  0E7F               	movlw	127
  6938   003526  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6939   003528  6E2D               	movwf	(??___fldiv+3)^0,c
  6940   00352A  502A               	movf	??___fldiv^0,w,c
  6941   00352C  102B               	iorwf	(??___fldiv+1)^0,w,c
  6942   00352E  102C               	iorwf	(??___fldiv+2)^0,w,c
  6943   003530  102D               	iorwf	(??___fldiv+3)^0,w,c
  6944   003532  B4D8               	btfsc	status,2,c
  6945   003534  EF9E  F01A         	goto	u5711
  6946   003538  EFA0  F01A         	goto	u5710
  6947   00353C                     u5711:
  6948   00353C  EFA4  F01A         	goto	l1195
  6949   003540                     u5710:
  6950   003540                     l4904:
  6951   003540  0E01               	movlw	1
  6952   003542  6E3A               	movwf	___fldiv@aexp^0,c
  6953   003544  EFAD  F01A         	goto	l1194
  6954   003548                     l1195:
  6955   003548  A022               	btfss	___fldiv@b^0,0,c
  6956   00354A  EFA9  F01A         	goto	u5721
  6957   00354E  EFAB  F01A         	goto	u5720
  6958   003552                     u5721:
  6959   003552  EFAD  F01A         	goto	l1194
  6960   003556                     u5720:
  6961   003556  EFA0  F01A         	goto	l4904
  6962   00355A                     l1194:
  6963   00355A  503A               	movf	___fldiv@aexp^0,w,c
  6964   00355C  B4D8               	btfsc	status,2,c
  6965   00355E  EFB3  F01A         	goto	u5731
  6966   003562  EFB5  F01A         	goto	u5730
  6967   003566                     u5731:
  6968   003566  EFD9  F01A         	goto	l4916
  6969   00356A                     u5730:
  6970   00356A  0E01               	movlw	1
  6971   00356C  2622               	addwf	___fldiv@b^0,f,c
  6972   00356E  0E00               	movlw	0
  6973   003570  2223               	addwfc	(___fldiv@b+1)^0,f,c
  6974   003572  2224               	addwfc	(___fldiv@b+2)^0,f,c
  6975   003574  2225               	addwfc	(___fldiv@b+3)^0,f,c
  6976   003576  A025               	btfss	(___fldiv@b+3)^0,0,c
  6977   003578  EFC0  F01A         	goto	u5741
  6978   00357C  EFC2  F01A         	goto	u5740
  6979   003580                     u5741:
  6980   003580  EFD9  F01A         	goto	l4916
  6981   003584                     u5740:
  6982   003584  C022  F02A         	movff	___fldiv@b,??___fldiv
  6983   003588  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  6984   00358C  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  6985   003590  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  6986   003594  342D               	rlcf	(??___fldiv+3)^0,w,c
  6987   003596  322D               	rrcf	(??___fldiv+3)^0,f,c
  6988   003598  322C               	rrcf	(??___fldiv+2)^0,f,c
  6989   00359A  322B               	rrcf	(??___fldiv+1)^0,f,c
  6990   00359C  322A               	rrcf	??___fldiv^0,f,c
  6991   00359E  C02A  F022         	movff	??___fldiv,___fldiv@b
  6992   0035A2  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  6993   0035A6  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  6994   0035AA  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  6995   0035AE  4A33               	infsnz	___fldiv@new_exp^0,f,c
  6996   0035B0  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  6997   0035B2                     l4916:
  6998   0035B2  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6999   0035B4  EFE4  F01A         	goto	u5751
  7000   0035B8  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  7001   0035BA  E108               	bnz	u5750
  7002   0035BC  2833               	incf	___fldiv@new_exp^0,w,c
  7003   0035BE  A0D8               	btfss	status,0,c
  7004   0035C0  EFE4  F01A         	goto	u5751
  7005   0035C4  EFE6  F01A         	goto	u5750
  7006   0035C8                     u5751:
  7007   0035C8  EFF1  F01A         	goto	l4920
  7008   0035CC                     u5750:
  7009   0035CC  0E00               	movlw	0
  7010   0035CE  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  7011   0035D0  6833               	setf	___fldiv@new_exp^0,c
  7012   0035D2  0E00               	movlw	0
  7013   0035D4  6E22               	movwf	___fldiv@b^0,c
  7014   0035D6  0E00               	movlw	0
  7015   0035D8  6E23               	movwf	(___fldiv@b+1)^0,c
  7016   0035DA  0E00               	movlw	0
  7017   0035DC  6E24               	movwf	(___fldiv@b+2)^0,c
  7018   0035DE  0E00               	movlw	0
  7019   0035E0  6E25               	movwf	(___fldiv@b+3)^0,c
  7020   0035E2                     l4920:
  7021   0035E2  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7022   0035E4  EFFE  F01A         	goto	u5760
  7023   0035E8  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  7024   0035EA  E106               	bnz	u5761
  7025   0035EC  0433               	decf	___fldiv@new_exp^0,w,c
  7026   0035EE  B0D8               	btfsc	status,0,c
  7027   0035F0  EFFC  F01A         	goto	u5761
  7028   0035F4  EFFE  F01A         	goto	u5760
  7029   0035F8                     u5761:
  7030   0035F8  EF0C  F01B         	goto	l4924
  7031   0035FC                     u5760:
  7032   0035FC  0E00               	movlw	0
  7033   0035FE  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  7034   003600  0E00               	movlw	0
  7035   003602  6E33               	movwf	___fldiv@new_exp^0,c
  7036   003604  0E00               	movlw	0
  7037   003606  6E22               	movwf	___fldiv@b^0,c
  7038   003608  0E00               	movlw	0
  7039   00360A  6E23               	movwf	(___fldiv@b+1)^0,c
  7040   00360C  0E00               	movlw	0
  7041   00360E  6E24               	movwf	(___fldiv@b+2)^0,c
  7042   003610  0E00               	movlw	0
  7043   003612  6E25               	movwf	(___fldiv@b+3)^0,c
  7044   003614  0E00               	movlw	0
  7045   003616  6E32               	movwf	___fldiv@sign^0,c
  7046   003618                     l4924:
  7047   003618  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  7048   00361C  A039               	btfss	___fldiv@bexp^0,0,c
  7049   00361E  EF13  F01B         	goto	u5771
  7050   003622  EF15  F01B         	goto	u5770
  7051   003626                     u5771:
  7052   003626  EF18  F01B         	goto	l4930
  7053   00362A                     u5770:
  7054   00362A  8E24               	bsf	(___fldiv@b+2)^0,7,c
  7055   00362C  EF19  F01B         	goto	l4932
  7056   003630                     l4930:
  7057   003630  9E24               	bcf	(___fldiv@b+2)^0,7,c
  7058   003632                     l4932:
  7059   003632  90D8               	bcf	status,0,c
  7060   003634  3039               	rrcf	___fldiv@bexp^0,w,c
  7061   003636  6E25               	movwf	(___fldiv@b+3)^0,c
  7062   003638  EFCF  F019         	goto	l4846
  7063   00363C                     l1181:
  7064   00363C  0012               	return		;funcret
  7065   00363E                     __end_of___fldiv:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function ___flge *****************
  7069 ;; Defined at:
  7070 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  ff1             4    0[COMRAM] unsigned char 
  7073 ;;  ff2             4    4[COMRAM] unsigned char 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;		None               void
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7085 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;Total ram usage:       12 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_RGB_to_HSV
  7095 ;;		_color_cardCheck
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text26
  7100   004556                     __ptext26:
  7101                           	callstack 0
  7102   004556                     ___flge:
  7103                           	callstack 28
  7104   004556  0E00               	movlw	0
  7105   004558  1401               	andwf	___flge@ff1^0,w,c
  7106   00455A  6E09               	movwf	??___flge^0,c
  7107   00455C  0E00               	movlw	0
  7108   00455E  1402               	andwf	(___flge@ff1+1)^0,w,c
  7109   004560  6E0A               	movwf	(??___flge+1)^0,c
  7110   004562  0E80               	movlw	128
  7111   004564  1403               	andwf	(___flge@ff1+2)^0,w,c
  7112   004566  6E0B               	movwf	(??___flge+2)^0,c
  7113   004568  0E7F               	movlw	127
  7114   00456A  1404               	andwf	(___flge@ff1+3)^0,w,c
  7115   00456C  6E0C               	movwf	(??___flge+3)^0,c
  7116   00456E  5009               	movf	??___flge^0,w,c
  7117   004570  100A               	iorwf	(??___flge+1)^0,w,c
  7118   004572  100B               	iorwf	(??___flge+2)^0,w,c
  7119   004574  100C               	iorwf	(??___flge+3)^0,w,c
  7120   004576  A4D8               	btfss	status,2,c
  7121   004578  EFC0  F022         	goto	u6201
  7122   00457C  EFC2  F022         	goto	u6200
  7123   004580                     u6201:
  7124   004580  EFCA  F022         	goto	l5236
  7125   004584                     u6200:
  7126   004584  0E00               	movlw	0
  7127   004586  6E01               	movwf	___flge@ff1^0,c
  7128   004588  0E00               	movlw	0
  7129   00458A  6E02               	movwf	(___flge@ff1+1)^0,c
  7130   00458C  0E00               	movlw	0
  7131   00458E  6E03               	movwf	(___flge@ff1+2)^0,c
  7132   004590  0E00               	movlw	0
  7133   004592  6E04               	movwf	(___flge@ff1+3)^0,c
  7134   004594                     l5236:
  7135   004594  0E00               	movlw	0
  7136   004596  1405               	andwf	___flge@ff2^0,w,c
  7137   004598  6E09               	movwf	??___flge^0,c
  7138   00459A  0E00               	movlw	0
  7139   00459C  1406               	andwf	(___flge@ff2+1)^0,w,c
  7140   00459E  6E0A               	movwf	(??___flge+1)^0,c
  7141   0045A0  0E80               	movlw	128
  7142   0045A2  1407               	andwf	(___flge@ff2+2)^0,w,c
  7143   0045A4  6E0B               	movwf	(??___flge+2)^0,c
  7144   0045A6  0E7F               	movlw	127
  7145   0045A8  1408               	andwf	(___flge@ff2+3)^0,w,c
  7146   0045AA  6E0C               	movwf	(??___flge+3)^0,c
  7147   0045AC  5009               	movf	??___flge^0,w,c
  7148   0045AE  100A               	iorwf	(??___flge+1)^0,w,c
  7149   0045B0  100B               	iorwf	(??___flge+2)^0,w,c
  7150   0045B2  100C               	iorwf	(??___flge+3)^0,w,c
  7151   0045B4  A4D8               	btfss	status,2,c
  7152   0045B6  EFDF  F022         	goto	u6211
  7153   0045BA  EFE1  F022         	goto	u6210
  7154   0045BE                     u6211:
  7155   0045BE  EFE9  F022         	goto	l5240
  7156   0045C2                     u6210:
  7157   0045C2  0E00               	movlw	0
  7158   0045C4  6E05               	movwf	___flge@ff2^0,c
  7159   0045C6  0E00               	movlw	0
  7160   0045C8  6E06               	movwf	(___flge@ff2+1)^0,c
  7161   0045CA  0E00               	movlw	0
  7162   0045CC  6E07               	movwf	(___flge@ff2+2)^0,c
  7163   0045CE  0E00               	movlw	0
  7164   0045D0  6E08               	movwf	(___flge@ff2+3)^0,c
  7165   0045D2                     l5240:
  7166   0045D2  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7167   0045D4  EFEE  F022         	goto	u6221
  7168   0045D8  EFF0  F022         	goto	u6220
  7169   0045DC                     u6221:
  7170   0045DC  EFF9  F022         	goto	l5244
  7171   0045E0                     u6220:
  7172   0045E0  6C01               	negf	___flge@ff1^0,c
  7173   0045E2  1E02               	comf	(___flge@ff1+1)^0,f,c
  7174   0045E4  B0D8               	btfsc	status,0,c
  7175   0045E6  2A02               	incf	(___flge@ff1+1)^0,f,c
  7176   0045E8  1E03               	comf	(___flge@ff1+2)^0,f,c
  7177   0045EA  B0D8               	btfsc	status,0,c
  7178   0045EC  2A03               	incf	(___flge@ff1+2)^0,f,c
  7179   0045EE  0E80               	movlw	128
  7180   0045F0  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7181   0045F2                     l5244:
  7182   0045F2  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7183   0045F4  EFFE  F022         	goto	u6231
  7184   0045F8  EF00  F023         	goto	u6230
  7185   0045FC                     u6231:
  7186   0045FC  EF09  F023         	goto	l864
  7187   004600                     u6230:
  7188   004600  6C05               	negf	___flge@ff2^0,c
  7189   004602  1E06               	comf	(___flge@ff2+1)^0,f,c
  7190   004604  B0D8               	btfsc	status,0,c
  7191   004606  2A06               	incf	(___flge@ff2+1)^0,f,c
  7192   004608  1E07               	comf	(___flge@ff2+2)^0,f,c
  7193   00460A  B0D8               	btfsc	status,0,c
  7194   00460C  2A07               	incf	(___flge@ff2+2)^0,f,c
  7195   00460E  0E80               	movlw	128
  7196   004610  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7197   004612                     l864:
  7198   004612  0E00               	movlw	0
  7199   004614  1A01               	xorwf	___flge@ff1^0,f,c
  7200   004616  0E00               	movlw	0
  7201   004618  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7202   00461A  0E00               	movlw	0
  7203   00461C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7204   00461E  0E80               	movlw	128
  7205   004620  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7206   004622  0E00               	movlw	0
  7207   004624  1A05               	xorwf	___flge@ff2^0,f,c
  7208   004626  0E00               	movlw	0
  7209   004628  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7210   00462A  0E00               	movlw	0
  7211   00462C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7212   00462E  0E80               	movlw	128
  7213   004630  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7214   004632  5005               	movf	___flge@ff2^0,w,c
  7215   004634  5C01               	subwf	___flge@ff1^0,w,c
  7216   004636  5006               	movf	(___flge@ff2+1)^0,w,c
  7217   004638  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7218   00463A  5007               	movf	(___flge@ff2+2)^0,w,c
  7219   00463C  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7220   00463E  5008               	movf	(___flge@ff2+3)^0,w,c
  7221   004640  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7222   004642  B0D8               	btfsc	status,0,c
  7223   004644  EF26  F023         	goto	u6241
  7224   004648  EF28  F023         	goto	u6240
  7225   00464C                     u6241:
  7226   00464C  EF2B  F023         	goto	l5250
  7227   004650                     u6240:
  7228   004650  90D8               	bcf	status,0,c
  7229   004652  EF2C  F023         	goto	l869
  7230   004656                     l5250:
  7231   004656  80D8               	bsf	status,0,c
  7232   004658                     l869:
  7233   004658  0012               	return		;funcret
  7234   00465A                     __end_of___flge:
  7235                           	callstack 0
  7236                           
  7237 ;; *************** function _maze_return *****************
  7238 ;; Defined at:
  7239 ;;		line 112 in file "pathfinder_file.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  c               2   32[COMRAM] PTR struct calibration_s
  7242 ;;		 -> calibration(9), 
  7243 ;;  mL              1   34[COMRAM] PTR struct DC_motor
  7244 ;;		 -> motorL(9), 
  7245 ;;  mR              1   35[COMRAM] PTR struct DC_motor
  7246 ;;		 -> motorR(9), 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  j               2   40[COMRAM] int 
  7249 ;;  distance_bac    1   39[COMRAM] unsigned char 
  7250 ;;  i               2   42[COMRAM] int 
  7251 ;;  i               2   44[COMRAM] int 
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  1    wreg      void 
  7254 ;; Registers used:
  7255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7262 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;Total ram usage:       14 bytes
  7266 ;; Hardware stack levels used: 1
  7267 ;; Hardware stack levels required when called: 3
  7268 ;; This function calls:
  7269 ;;		_backward
  7270 ;;		_forward
  7271 ;;		_leftTURN
  7272 ;;		_rightTURN
  7273 ;; This function is called by:
  7274 ;;		_main
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text27
  7279   0029BC                     __ptext27:
  7280                           	callstack 0
  7281   0029BC                     _maze_return:
  7282                           	callstack 27
  7283   0029BC  0E00               	movlw	0
  7284   0029BE  6E2E               	movwf	(maze_return@i+1)^0,c
  7285   0029C0  0E32               	movlw	50
  7286   0029C2  6E2D               	movwf	maze_return@i^0,c
  7287   0029C4                     l6012:
  7288                           
  7289                           ;pathfinder_file.c: 119:             if(Operation_History[i] > 10){
  7290   0029C4  0E3C               	movlw	low _Operation_History
  7291   0029C6  242D               	addwf	maze_return@i^0,w,c
  7292   0029C8  6ED9               	movwf	fsr2l,c
  7293   0029CA  0E01               	movlw	high _Operation_History
  7294   0029CC  202E               	addwfc	(maze_return@i+1)^0,w,c
  7295   0029CE  6EDA               	movwf	fsr2h,c
  7296   0029D0  0E0A               	movlw	10
  7297   0029D2  64DF               	cpfsgt	indf2,c
  7298   0029D4  EFEE  F014         	goto	u7461
  7299   0029D8  EFF0  F014         	goto	u7460
  7300   0029DC                     u7461:
  7301   0029DC  EF32  F015         	goto	l6026
  7302   0029E0                     u7460:
  7303   0029E0                     
  7304                           ;pathfinder_file.c: 120:                 unsigned char distance_back = Operation_History
      +                          [i] - 10;
  7305   0029E0  0E3C               	movlw	low _Operation_History
  7306   0029E2  242D               	addwf	maze_return@i^0,w,c
  7307   0029E4  6ED9               	movwf	fsr2l,c
  7308   0029E6  0E01               	movlw	high _Operation_History
  7309   0029E8  202E               	addwfc	(maze_return@i+1)^0,w,c
  7310   0029EA  6EDA               	movwf	fsr2h,c
  7311   0029EC  50DF               	movf	indf2,w,c
  7312   0029EE  0FF6               	addlw	246
  7313   0029F0  6E28               	movwf	maze_return@distance_back^0,c
  7314   0029F2                     
  7315                           ;pathfinder_file.c: 121:                 for (int j = 0; j < distance_back-1; j++) {
  7316   0029F2  0E00               	movlw	0
  7317   0029F4  6E2A               	movwf	(maze_return@j+1)^0,c
  7318   0029F6  0E00               	movlw	0
  7319   0029F8  6E29               	movwf	maze_return@j^0,c
  7320   0029FA  EF0E  F015         	goto	l6022
  7321   0029FE                     l6018:
  7322                           
  7323                           ;pathfinder_file.c: 122:                     forward(c->forward_one, mL, mR);
  7324   0029FE  C023  F013         	movff	maze_return@mL,forward@mL
  7325   002A02  C024  F014         	movff	maze_return@mR,forward@mR
  7326   002A06  EE20 F005          	lfsr	2,5
  7327   002A0A  5021               	movf	maze_return@c^0,w,c
  7328   002A0C  26D9               	addwf	fsr2l,f,c
  7329   002A0E  5022               	movf	(maze_return@c+1)^0,w,c
  7330   002A10  22DA               	addwfc	fsr2h,f,c
  7331   002A12  50DF               	movf	indf2,w,c
  7332   002A14  EC4B  F01D         	call	_forward
  7333   002A18                     
  7334                           ;pathfinder_file.c: 123:                 }
  7335   002A18  4A29               	infsnz	maze_return@j^0,f,c
  7336   002A1A  2A2A               	incf	(maze_return@j+1)^0,f,c
  7337   002A1C                     l6022:
  7338   002A1C  0EFF               	movlw	255
  7339   002A1E  2428               	addwf	maze_return@distance_back^0,w,c
  7340   002A20  6E25               	movwf	??_maze_return^0,c
  7341   002A22  6A26               	clrf	(??_maze_return+1)^0,c
  7342   002A24  0EFF               	movlw	255
  7343   002A26  2226               	addwfc	(??_maze_return+1)^0,f,c
  7344   002A28  5025               	movf	??_maze_return^0,w,c
  7345   002A2A  5C29               	subwf	maze_return@j^0,w,c
  7346   002A2C  502A               	movf	(maze_return@j+1)^0,w,c
  7347   002A2E  0A80               	xorlw	128
  7348   002A30  6E27               	movwf	(??_maze_return+2)^0,c
  7349   002A32  5026               	movf	(??_maze_return+1)^0,w,c
  7350   002A34  0A80               	xorlw	128
  7351   002A36  5827               	subwfb	(??_maze_return+2)^0,w,c
  7352   002A38  A0D8               	btfss	status,0,c
  7353   002A3A  EF21  F015         	goto	u7471
  7354   002A3E  EF23  F015         	goto	u7470
  7355   002A42                     u7471:
  7356   002A42  EFFF  F014         	goto	l6018
  7357   002A46                     u7470:
  7358   002A46                     
  7359                           ;pathfinder_file.c: 124:                 forward(c->forward_half, mL, mR);
  7360   002A46  C023  F013         	movff	maze_return@mL,forward@mL
  7361   002A4A  C024  F014         	movff	maze_return@mR,forward@mR
  7362   002A4E  EE20 F007          	lfsr	2,7
  7363   002A52  5021               	movf	maze_return@c^0,w,c
  7364   002A54  26D9               	addwf	fsr2l,f,c
  7365   002A56  5022               	movf	(maze_return@c+1)^0,w,c
  7366   002A58  22DA               	addwfc	fsr2h,f,c
  7367   002A5A  50DF               	movf	indf2,w,c
  7368   002A5C  EC4B  F01D         	call	_forward
  7369                           
  7370                           ;pathfinder_file.c: 126:             }
  7371   002A60  EF14  F017         	goto	l6054
  7372   002A64                     l6026:
  7373   002A64  0E3C               	movlw	low _Operation_History
  7374   002A66  242D               	addwf	maze_return@i^0,w,c
  7375   002A68  6ED9               	movwf	fsr2l,c
  7376   002A6A  0E01               	movlw	high _Operation_History
  7377   002A6C  202E               	addwfc	(maze_return@i+1)^0,w,c
  7378   002A6E  6EDA               	movwf	fsr2h,c
  7379   002A70  04DE               	decf	postinc2,w,c
  7380   002A72  A4D8               	btfss	status,2,c
  7381   002A74  EF3E  F015         	goto	u7481
  7382   002A78  EF40  F015         	goto	u7480
  7383   002A7C                     u7481:
  7384   002A7C  EF5C  F015         	goto	l6030
  7385   002A80                     u7480:
  7386   002A80                     
  7387                           ;pathfinder_file.c: 129:                 leftTURN(c->left_90, mL, mR);
  7388   002A80  C023  F013         	movff	maze_return@mL,leftTURN@mL
  7389   002A84  C024  F014         	movff	maze_return@mR,leftTURN@mR
  7390   002A88  EE20 F002          	lfsr	2,2
  7391   002A8C  5021               	movf	maze_return@c^0,w,c
  7392   002A8E  26D9               	addwf	fsr2l,f,c
  7393   002A90  5022               	movf	(maze_return@c+1)^0,w,c
  7394   002A92  22DA               	addwfc	fsr2h,f,c
  7395   002A94  50DF               	movf	indf2,w,c
  7396   002A96  ECCA  F01E         	call	_leftTURN
  7397                           
  7398                           ;pathfinder_file.c: 130:                 backward(c->backward_one, mL, mR);
  7399   002A9A  C023  F013         	movff	maze_return@mL,backward@mL
  7400   002A9E  C024  F014         	movff	maze_return@mR,backward@mR
  7401   002AA2  EE20 F006          	lfsr	2,6
  7402   002AA6  5021               	movf	maze_return@c^0,w,c
  7403   002AA8  26D9               	addwf	fsr2l,f,c
  7404   002AAA  5022               	movf	(maze_return@c+1)^0,w,c
  7405   002AAC  22DA               	addwfc	fsr2h,f,c
  7406   002AAE  50DF               	movf	indf2,w,c
  7407   002AB0  EC89  F01F         	call	_backward
  7408                           
  7409                           ;pathfinder_file.c: 131:             }
  7410   002AB4  EF14  F017         	goto	l6054
  7411   002AB8                     l6030:
  7412   002AB8  0E3C               	movlw	low _Operation_History
  7413   002ABA  242D               	addwf	maze_return@i^0,w,c
  7414   002ABC  6ED9               	movwf	fsr2l,c
  7415   002ABE  0E01               	movlw	high _Operation_History
  7416   002AC0  202E               	addwfc	(maze_return@i+1)^0,w,c
  7417   002AC2  6EDA               	movwf	fsr2h,c
  7418   002AC4  0E02               	movlw	2
  7419   002AC6  18DE               	xorwf	postinc2,w,c
  7420   002AC8  A4D8               	btfss	status,2,c
  7421   002ACA  EF69  F015         	goto	u7491
  7422   002ACE  EF6B  F015         	goto	u7490
  7423   002AD2                     u7491:
  7424   002AD2  EF87  F015         	goto	l6034
  7425   002AD6                     u7490:
  7426   002AD6                     
  7427                           ;pathfinder_file.c: 134:                 rightTURN(c->right_90, mL, mR);
  7428   002AD6  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7429   002ADA  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7430   002ADE  EE20 F001          	lfsr	2,1
  7431   002AE2  5021               	movf	maze_return@c^0,w,c
  7432   002AE4  26D9               	addwf	fsr2l,f,c
  7433   002AE6  5022               	movf	(maze_return@c+1)^0,w,c
  7434   002AE8  22DA               	addwfc	fsr2h,f,c
  7435   002AEA  50DF               	movf	indf2,w,c
  7436   002AEC  EC0B  F01E         	call	_rightTURN
  7437                           
  7438                           ;pathfinder_file.c: 135:                 backward(c->backward_one, mL, mR);
  7439   002AF0  C023  F013         	movff	maze_return@mL,backward@mL
  7440   002AF4  C024  F014         	movff	maze_return@mR,backward@mR
  7441   002AF8  EE20 F006          	lfsr	2,6
  7442   002AFC  5021               	movf	maze_return@c^0,w,c
  7443   002AFE  26D9               	addwf	fsr2l,f,c
  7444   002B00  5022               	movf	(maze_return@c+1)^0,w,c
  7445   002B02  22DA               	addwfc	fsr2h,f,c
  7446   002B04  50DF               	movf	indf2,w,c
  7447   002B06  EC89  F01F         	call	_backward
  7448                           
  7449                           ;pathfinder_file.c: 136:             }
  7450   002B0A  EF14  F017         	goto	l6054
  7451   002B0E                     l6034:
  7452   002B0E  0E3C               	movlw	low _Operation_History
  7453   002B10  242D               	addwf	maze_return@i^0,w,c
  7454   002B12  6ED9               	movwf	fsr2l,c
  7455   002B14  0E01               	movlw	high _Operation_History
  7456   002B16  202E               	addwfc	(maze_return@i+1)^0,w,c
  7457   002B18  6EDA               	movwf	fsr2h,c
  7458   002B1A  0E03               	movlw	3
  7459   002B1C  18DE               	xorwf	postinc2,w,c
  7460   002B1E  A4D8               	btfss	status,2,c
  7461   002B20  EF94  F015         	goto	u7501
  7462   002B24  EF96  F015         	goto	u7500
  7463   002B28                     u7501:
  7464   002B28  EFB2  F015         	goto	l6038
  7465   002B2C                     u7500:
  7466   002B2C                     
  7467                           ;pathfinder_file.c: 139:                 rightTURN(c->right_90, mL, mR);
  7468   002B2C  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7469   002B30  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7470   002B34  EE20 F001          	lfsr	2,1
  7471   002B38  5021               	movf	maze_return@c^0,w,c
  7472   002B3A  26D9               	addwf	fsr2l,f,c
  7473   002B3C  5022               	movf	(maze_return@c+1)^0,w,c
  7474   002B3E  22DA               	addwfc	fsr2h,f,c
  7475   002B40  50DF               	movf	indf2,w,c
  7476   002B42  EC0B  F01E         	call	_rightTURN
  7477                           
  7478                           ;pathfinder_file.c: 140:                 rightTURN(c->right_90, mL, mR);
  7479   002B46  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7480   002B4A  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7481   002B4E  EE20 F001          	lfsr	2,1
  7482   002B52  5021               	movf	maze_return@c^0,w,c
  7483   002B54  26D9               	addwf	fsr2l,f,c
  7484   002B56  5022               	movf	(maze_return@c+1)^0,w,c
  7485   002B58  22DA               	addwfc	fsr2h,f,c
  7486   002B5A  50DF               	movf	indf2,w,c
  7487   002B5C  EC0B  F01E         	call	_rightTURN
  7488                           
  7489                           ;pathfinder_file.c: 141:             }
  7490   002B60  EF14  F017         	goto	l6054
  7491   002B64                     l6038:
  7492   002B64  0E3C               	movlw	low _Operation_History
  7493   002B66  242D               	addwf	maze_return@i^0,w,c
  7494   002B68  6ED9               	movwf	fsr2l,c
  7495   002B6A  0E01               	movlw	high _Operation_History
  7496   002B6C  202E               	addwfc	(maze_return@i+1)^0,w,c
  7497   002B6E  6EDA               	movwf	fsr2h,c
  7498   002B70  0E04               	movlw	4
  7499   002B72  18DE               	xorwf	postinc2,w,c
  7500   002B74  A4D8               	btfss	status,2,c
  7501   002B76  EFBF  F015         	goto	u7511
  7502   002B7A  EFC1  F015         	goto	u7510
  7503   002B7E                     u7511:
  7504   002B7E  EF2B  F016         	goto	l6042
  7505   002B82                     u7510:
  7506   002B82                     
  7507                           ;pathfinder_file.c: 145:                 rightTURN(c->right_90, mL, mR);
  7508   002B82  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7509   002B86  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7510   002B8A  EE20 F001          	lfsr	2,1
  7511   002B8E  5021               	movf	maze_return@c^0,w,c
  7512   002B90  26D9               	addwf	fsr2l,f,c
  7513   002B92  5022               	movf	(maze_return@c+1)^0,w,c
  7514   002B94  22DA               	addwfc	fsr2h,f,c
  7515   002B96  50DF               	movf	indf2,w,c
  7516   002B98  EC0B  F01E         	call	_rightTURN
  7517                           
  7518                           ;pathfinder_file.c: 146:                 forward(c->forward_one, mL, mR);
  7519   002B9C  C023  F013         	movff	maze_return@mL,forward@mL
  7520   002BA0  C024  F014         	movff	maze_return@mR,forward@mR
  7521   002BA4  EE20 F005          	lfsr	2,5
  7522   002BA8  5021               	movf	maze_return@c^0,w,c
  7523   002BAA  26D9               	addwf	fsr2l,f,c
  7524   002BAC  5022               	movf	(maze_return@c+1)^0,w,c
  7525   002BAE  22DA               	addwfc	fsr2h,f,c
  7526   002BB0  50DF               	movf	indf2,w,c
  7527   002BB2  EC4B  F01D         	call	_forward
  7528                           
  7529                           ;pathfinder_file.c: 149:                 forward(c->forward_one, mL, mR);
  7530   002BB6  C023  F013         	movff	maze_return@mL,forward@mL
  7531   002BBA  C024  F014         	movff	maze_return@mR,forward@mR
  7532   002BBE  EE20 F005          	lfsr	2,5
  7533   002BC2  5021               	movf	maze_return@c^0,w,c
  7534   002BC4  26D9               	addwf	fsr2l,f,c
  7535   002BC6  5022               	movf	(maze_return@c+1)^0,w,c
  7536   002BC8  22DA               	addwfc	fsr2h,f,c
  7537   002BCA  50DF               	movf	indf2,w,c
  7538   002BCC  EC4B  F01D         	call	_forward
  7539                           
  7540                           ;pathfinder_file.c: 150:                 backward(c->backward_half, mL, mR);
  7541   002BD0  C023  F013         	movff	maze_return@mL,backward@mL
  7542   002BD4  C024  F014         	movff	maze_return@mR,backward@mR
  7543   002BD8  EE20 F008          	lfsr	2,8
  7544   002BDC  5021               	movf	maze_return@c^0,w,c
  7545   002BDE  26D9               	addwf	fsr2l,f,c
  7546   002BE0  5022               	movf	(maze_return@c+1)^0,w,c
  7547   002BE2  22DA               	addwfc	fsr2h,f,c
  7548   002BE4  50DF               	movf	indf2,w,c
  7549   002BE6  EC89  F01F         	call	_backward
  7550                           
  7551                           ;pathfinder_file.c: 151:                 rightTURN(c->right_90, mL, mR);
  7552   002BEA  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7553   002BEE  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7554   002BF2  EE20 F001          	lfsr	2,1
  7555   002BF6  5021               	movf	maze_return@c^0,w,c
  7556   002BF8  26D9               	addwf	fsr2l,f,c
  7557   002BFA  5022               	movf	(maze_return@c+1)^0,w,c
  7558   002BFC  22DA               	addwfc	fsr2h,f,c
  7559   002BFE  50DF               	movf	indf2,w,c
  7560   002C00  EC0B  F01E         	call	_rightTURN
  7561                           
  7562                           ;pathfinder_file.c: 152:                 rightTURN(c->right_90, mL, mR);
  7563   002C04  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7564   002C08  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7565   002C0C  EE20 F001          	lfsr	2,1
  7566   002C10  5021               	movf	maze_return@c^0,w,c
  7567   002C12  26D9               	addwf	fsr2l,f,c
  7568   002C14  5022               	movf	(maze_return@c+1)^0,w,c
  7569   002C16  22DA               	addwfc	fsr2h,f,c
  7570   002C18  50DF               	movf	indf2,w,c
  7571   002C1A  EC0B  F01E         	call	_rightTURN
  7572                           
  7573                           ;pathfinder_file.c: 153:                 backward(c->backward_one, mL, mR);
  7574   002C1E  C023  F013         	movff	maze_return@mL,backward@mL
  7575   002C22  C024  F014         	movff	maze_return@mR,backward@mR
  7576   002C26  EE20 F006          	lfsr	2,6
  7577   002C2A  5021               	movf	maze_return@c^0,w,c
  7578   002C2C  26D9               	addwf	fsr2l,f,c
  7579   002C2E  5022               	movf	(maze_return@c+1)^0,w,c
  7580   002C30  22DA               	addwfc	fsr2h,f,c
  7581   002C32  50DF               	movf	indf2,w,c
  7582   002C34  EC89  F01F         	call	_backward
  7583                           
  7584                           ;pathfinder_file.c: 154:                 forward(c->forward_half, mL, mR);
  7585   002C38  C023  F013         	movff	maze_return@mL,forward@mL
  7586   002C3C  C024  F014         	movff	maze_return@mR,forward@mR
  7587   002C40  EE20 F007          	lfsr	2,7
  7588   002C44  5021               	movf	maze_return@c^0,w,c
  7589   002C46  26D9               	addwf	fsr2l,f,c
  7590   002C48  5022               	movf	(maze_return@c+1)^0,w,c
  7591   002C4A  22DA               	addwfc	fsr2h,f,c
  7592   002C4C  50DF               	movf	indf2,w,c
  7593   002C4E  EC4B  F01D         	call	_forward
  7594                           
  7595                           ;pathfinder_file.c: 155:             }
  7596   002C52  EF14  F017         	goto	l6054
  7597   002C56                     l6042:
  7598   002C56  0E3C               	movlw	low _Operation_History
  7599   002C58  242D               	addwf	maze_return@i^0,w,c
  7600   002C5A  6ED9               	movwf	fsr2l,c
  7601   002C5C  0E01               	movlw	high _Operation_History
  7602   002C5E  202E               	addwfc	(maze_return@i+1)^0,w,c
  7603   002C60  6EDA               	movwf	fsr2h,c
  7604   002C62  0E05               	movlw	5
  7605   002C64  18DE               	xorwf	postinc2,w,c
  7606   002C66  A4D8               	btfss	status,2,c
  7607   002C68  EF38  F016         	goto	u7521
  7608   002C6C  EF3A  F016         	goto	u7520
  7609   002C70                     u7521:
  7610   002C70  EFA4  F016         	goto	l6046
  7611   002C74                     u7520:
  7612   002C74                     
  7613                           ;pathfinder_file.c: 158:                 leftTURN(c->right_90, mL, mR);
  7614   002C74  C023  F013         	movff	maze_return@mL,leftTURN@mL
  7615   002C78  C024  F014         	movff	maze_return@mR,leftTURN@mR
  7616   002C7C  EE20 F001          	lfsr	2,1
  7617   002C80  5021               	movf	maze_return@c^0,w,c
  7618   002C82  26D9               	addwf	fsr2l,f,c
  7619   002C84  5022               	movf	(maze_return@c+1)^0,w,c
  7620   002C86  22DA               	addwfc	fsr2h,f,c
  7621   002C88  50DF               	movf	indf2,w,c
  7622   002C8A  ECCA  F01E         	call	_leftTURN
  7623                           
  7624                           ;pathfinder_file.c: 159:                 forward(c->forward_one, mL, mR);
  7625   002C8E  C023  F013         	movff	maze_return@mL,forward@mL
  7626   002C92  C024  F014         	movff	maze_return@mR,forward@mR
  7627   002C96  EE20 F005          	lfsr	2,5
  7628   002C9A  5021               	movf	maze_return@c^0,w,c
  7629   002C9C  26D9               	addwf	fsr2l,f,c
  7630   002C9E  5022               	movf	(maze_return@c+1)^0,w,c
  7631   002CA0  22DA               	addwfc	fsr2h,f,c
  7632   002CA2  50DF               	movf	indf2,w,c
  7633   002CA4  EC4B  F01D         	call	_forward
  7634                           
  7635                           ;pathfinder_file.c: 162:                 forward(c->forward_one, mL, mR);
  7636   002CA8  C023  F013         	movff	maze_return@mL,forward@mL
  7637   002CAC  C024  F014         	movff	maze_return@mR,forward@mR
  7638   002CB0  EE20 F005          	lfsr	2,5
  7639   002CB4  5021               	movf	maze_return@c^0,w,c
  7640   002CB6  26D9               	addwf	fsr2l,f,c
  7641   002CB8  5022               	movf	(maze_return@c+1)^0,w,c
  7642   002CBA  22DA               	addwfc	fsr2h,f,c
  7643   002CBC  50DF               	movf	indf2,w,c
  7644   002CBE  EC4B  F01D         	call	_forward
  7645                           
  7646                           ;pathfinder_file.c: 163:                 backward(c->backward_half, mL, mR);
  7647   002CC2  C023  F013         	movff	maze_return@mL,backward@mL
  7648   002CC6  C024  F014         	movff	maze_return@mR,backward@mR
  7649   002CCA  EE20 F008          	lfsr	2,8
  7650   002CCE  5021               	movf	maze_return@c^0,w,c
  7651   002CD0  26D9               	addwf	fsr2l,f,c
  7652   002CD2  5022               	movf	(maze_return@c+1)^0,w,c
  7653   002CD4  22DA               	addwfc	fsr2h,f,c
  7654   002CD6  50DF               	movf	indf2,w,c
  7655   002CD8  EC89  F01F         	call	_backward
  7656                           
  7657                           ;pathfinder_file.c: 164:                 rightTURN(c->right_90, mL, mR);
  7658   002CDC  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7659   002CE0  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7660   002CE4  EE20 F001          	lfsr	2,1
  7661   002CE8  5021               	movf	maze_return@c^0,w,c
  7662   002CEA  26D9               	addwf	fsr2l,f,c
  7663   002CEC  5022               	movf	(maze_return@c+1)^0,w,c
  7664   002CEE  22DA               	addwfc	fsr2h,f,c
  7665   002CF0  50DF               	movf	indf2,w,c
  7666   002CF2  EC0B  F01E         	call	_rightTURN
  7667                           
  7668                           ;pathfinder_file.c: 165:                 rightTURN(c->right_90, mL, mR);
  7669   002CF6  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7670   002CFA  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7671   002CFE  EE20 F001          	lfsr	2,1
  7672   002D02  5021               	movf	maze_return@c^0,w,c
  7673   002D04  26D9               	addwf	fsr2l,f,c
  7674   002D06  5022               	movf	(maze_return@c+1)^0,w,c
  7675   002D08  22DA               	addwfc	fsr2h,f,c
  7676   002D0A  50DF               	movf	indf2,w,c
  7677   002D0C  EC0B  F01E         	call	_rightTURN
  7678                           
  7679                           ;pathfinder_file.c: 166:                 backward(c->backward_one, mL, mR);
  7680   002D10  C023  F013         	movff	maze_return@mL,backward@mL
  7681   002D14  C024  F014         	movff	maze_return@mR,backward@mR
  7682   002D18  EE20 F006          	lfsr	2,6
  7683   002D1C  5021               	movf	maze_return@c^0,w,c
  7684   002D1E  26D9               	addwf	fsr2l,f,c
  7685   002D20  5022               	movf	(maze_return@c+1)^0,w,c
  7686   002D22  22DA               	addwfc	fsr2h,f,c
  7687   002D24  50DF               	movf	indf2,w,c
  7688   002D26  EC89  F01F         	call	_backward
  7689                           
  7690                           ;pathfinder_file.c: 167:                 forward(c->forward_half, mL, mR);
  7691   002D2A  C023  F013         	movff	maze_return@mL,forward@mL
  7692   002D2E  C024  F014         	movff	maze_return@mR,forward@mR
  7693   002D32  EE20 F007          	lfsr	2,7
  7694   002D36  5021               	movf	maze_return@c^0,w,c
  7695   002D38  26D9               	addwf	fsr2l,f,c
  7696   002D3A  5022               	movf	(maze_return@c+1)^0,w,c
  7697   002D3C  22DA               	addwfc	fsr2h,f,c
  7698   002D3E  50DF               	movf	indf2,w,c
  7699   002D40  EC4B  F01D         	call	_forward
  7700                           
  7701                           ;pathfinder_file.c: 169:             }
  7702   002D44  EF14  F017         	goto	l6054
  7703   002D48                     l6046:
  7704   002D48  0E3C               	movlw	low _Operation_History
  7705   002D4A  242D               	addwf	maze_return@i^0,w,c
  7706   002D4C  6ED9               	movwf	fsr2l,c
  7707   002D4E  0E01               	movlw	high _Operation_History
  7708   002D50  202E               	addwfc	(maze_return@i+1)^0,w,c
  7709   002D52  6EDA               	movwf	fsr2h,c
  7710   002D54  0E06               	movlw	6
  7711   002D56  18DE               	xorwf	postinc2,w,c
  7712   002D58  A4D8               	btfss	status,2,c
  7713   002D5A  EFB1  F016         	goto	u7531
  7714   002D5E  EFB3  F016         	goto	u7530
  7715   002D62                     u7531:
  7716   002D62  EFDC  F016         	goto	l6050
  7717   002D66                     u7530:
  7718   002D66                     
  7719                           ;pathfinder_file.c: 172:                 leftTURN(c->left_135, mL, mR);
  7720   002D66  C023  F013         	movff	maze_return@mL,leftTURN@mL
  7721   002D6A  C024  F014         	movff	maze_return@mR,leftTURN@mR
  7722   002D6E  EE20 F004          	lfsr	2,4
  7723   002D72  5021               	movf	maze_return@c^0,w,c
  7724   002D74  26D9               	addwf	fsr2l,f,c
  7725   002D76  5022               	movf	(maze_return@c+1)^0,w,c
  7726   002D78  22DA               	addwfc	fsr2h,f,c
  7727   002D7A  50DF               	movf	indf2,w,c
  7728   002D7C  ECCA  F01E         	call	_leftTURN
  7729                           
  7730                           ;pathfinder_file.c: 173:                 backward(c->backward_one, mL, mR);
  7731   002D80  C023  F013         	movff	maze_return@mL,backward@mL
  7732   002D84  C024  F014         	movff	maze_return@mR,backward@mR
  7733   002D88  EE20 F006          	lfsr	2,6
  7734   002D8C  5021               	movf	maze_return@c^0,w,c
  7735   002D8E  26D9               	addwf	fsr2l,f,c
  7736   002D90  5022               	movf	(maze_return@c+1)^0,w,c
  7737   002D92  22DA               	addwfc	fsr2h,f,c
  7738   002D94  50DF               	movf	indf2,w,c
  7739   002D96  EC89  F01F         	call	_backward
  7740                           
  7741                           ;pathfinder_file.c: 174:                 forward(c->forward_half, mL, mR);
  7742   002D9A  C023  F013         	movff	maze_return@mL,forward@mL
  7743   002D9E  C024  F014         	movff	maze_return@mR,forward@mR
  7744   002DA2  EE20 F007          	lfsr	2,7
  7745   002DA6  5021               	movf	maze_return@c^0,w,c
  7746   002DA8  26D9               	addwf	fsr2l,f,c
  7747   002DAA  5022               	movf	(maze_return@c+1)^0,w,c
  7748   002DAC  22DA               	addwfc	fsr2h,f,c
  7749   002DAE  50DF               	movf	indf2,w,c
  7750   002DB0  EC4B  F01D         	call	_forward
  7751                           
  7752                           ;pathfinder_file.c: 175:             }
  7753   002DB4  EF14  F017         	goto	l6054
  7754   002DB8                     l6050:
  7755   002DB8  0E3C               	movlw	low _Operation_History
  7756   002DBA  242D               	addwf	maze_return@i^0,w,c
  7757   002DBC  6ED9               	movwf	fsr2l,c
  7758   002DBE  0E01               	movlw	high _Operation_History
  7759   002DC0  202E               	addwfc	(maze_return@i+1)^0,w,c
  7760   002DC2  6EDA               	movwf	fsr2h,c
  7761   002DC4  0E07               	movlw	7
  7762   002DC6  18DE               	xorwf	postinc2,w,c
  7763   002DC8  A4D8               	btfss	status,2,c
  7764   002DCA  EFE9  F016         	goto	u7541
  7765   002DCE  EFEB  F016         	goto	u7540
  7766   002DD2                     u7541:
  7767   002DD2  EF14  F017         	goto	l502
  7768   002DD6                     u7540:
  7769   002DD6                     
  7770                           ;pathfinder_file.c: 178:                 rightTURN(c->right_135, mL, mR);
  7771   002DD6  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7772   002DDA  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7773   002DDE  EE20 F003          	lfsr	2,3
  7774   002DE2  5021               	movf	maze_return@c^0,w,c
  7775   002DE4  26D9               	addwf	fsr2l,f,c
  7776   002DE6  5022               	movf	(maze_return@c+1)^0,w,c
  7777   002DE8  22DA               	addwfc	fsr2h,f,c
  7778   002DEA  50DF               	movf	indf2,w,c
  7779   002DEC  EC0B  F01E         	call	_rightTURN
  7780                           
  7781                           ;pathfinder_file.c: 179:                 backward(c->backward_one, mL, mR);
  7782   002DF0  C023  F013         	movff	maze_return@mL,backward@mL
  7783   002DF4  C024  F014         	movff	maze_return@mR,backward@mR
  7784   002DF8  EE20 F006          	lfsr	2,6
  7785   002DFC  5021               	movf	maze_return@c^0,w,c
  7786   002DFE  26D9               	addwf	fsr2l,f,c
  7787   002E00  5022               	movf	(maze_return@c+1)^0,w,c
  7788   002E02  22DA               	addwfc	fsr2h,f,c
  7789   002E04  50DF               	movf	indf2,w,c
  7790   002E06  EC89  F01F         	call	_backward
  7791                           
  7792                           ;pathfinder_file.c: 180:                 forward(c->forward_half, mL, mR);
  7793   002E0A  C023  F013         	movff	maze_return@mL,forward@mL
  7794   002E0E  C024  F014         	movff	maze_return@mR,forward@mR
  7795   002E12  EE20 F007          	lfsr	2,7
  7796   002E16  5021               	movf	maze_return@c^0,w,c
  7797   002E18  26D9               	addwf	fsr2l,f,c
  7798   002E1A  5022               	movf	(maze_return@c+1)^0,w,c
  7799   002E1C  22DA               	addwfc	fsr2h,f,c
  7800   002E1E  50DF               	movf	indf2,w,c
  7801   002E20  EC4B  F01D         	call	_forward
  7802   002E24  EF14  F017         	goto	l6054
  7803   002E28                     l502:
  7804   002E28                     l6054:
  7805                           
  7806                           ;pathfinder_file.c: 184:         }
  7807   002E28  062D               	decf	maze_return@i^0,f,c
  7808   002E2A  A0D8               	btfss	status,0,c
  7809   002E2C  062E               	decf	(maze_return@i+1)^0,f,c
  7810   002E2E  BE2E               	btfsc	(maze_return@i+1)^0,7,c
  7811   002E30  EF1E  F017         	goto	u7550
  7812   002E34  EF1C  F017         	goto	u7551
  7813   002E38                     u7551:
  7814   002E38  EFE2  F014         	goto	l6012
  7815   002E3C                     u7550:
  7816   002E3C                     
  7817                           ;pathfinder_file.c: 187:         Operation_Count = 0;
  7818   002E3C  0E00               	movlw	0
  7819   002E3E  0100               	movlb	0	; () banked
  7820   002E40  6FE6               	movwf	_Operation_Count& (0+255),b
  7821                           
  7822                           ;pathfinder_file.c: 188:         for (int i = 0; i < 50; ++i) {
  7823   002E42  0E00               	movlw	0
  7824   002E44  6E2C               	movwf	(maze_return@i_1876+1)^0,c
  7825   002E46  0E00               	movlw	0
  7826   002E48  6E2B               	movwf	maze_return@i_1876^0,c
  7827   002E4A                     l6064:
  7828                           
  7829                           ;pathfinder_file.c: 189:             Operation_History[i] = 0;
  7830   002E4A  0E3C               	movlw	low _Operation_History
  7831   002E4C  242B               	addwf	maze_return@i_1876^0,w,c
  7832   002E4E  6ED9               	movwf	fsr2l,c
  7833   002E50  0E01               	movlw	high _Operation_History
  7834   002E52  202C               	addwfc	(maze_return@i_1876+1)^0,w,c
  7835   002E54  6EDA               	movwf	fsr2h,c
  7836   002E56  6ADF               	clrf	indf2,c
  7837   002E58                     
  7838                           ;pathfinder_file.c: 190:         }
  7839   002E58  4A2B               	infsnz	maze_return@i_1876^0,f,c
  7840   002E5A  2A2C               	incf	(maze_return@i_1876+1)^0,f,c
  7841   002E5C  BE2C               	btfsc	(maze_return@i_1876+1)^0,7,c
  7842   002E5E  EF3A  F017         	goto	u7561
  7843   002E62  502C               	movf	(maze_return@i_1876+1)^0,w,c
  7844   002E64  E109               	bnz	u7560
  7845   002E66  0E32               	movlw	50
  7846   002E68  5C2B               	subwf	maze_return@i_1876^0,w,c
  7847   002E6A  A0D8               	btfss	status,0,c
  7848   002E6C  EF3A  F017         	goto	u7561
  7849   002E70  EF3C  F017         	goto	u7560
  7850   002E74                     u7561:
  7851   002E74  EF25  F017         	goto	l6064
  7852   002E78                     u7560:
  7853   002E78  0012               	return		;funcret
  7854   002E7A                     __end_of_maze_return:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function _initDCmotorsPWM *****************
  7858 ;; Defined at:
  7859 ;;		line 5 in file "dc_motor_v1.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      void 
  7866 ;; Registers used:
  7867 ;;		wreg, status,2
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;Total ram usage:        2 bytes
  7878 ;; Hardware stack levels used: 1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_main
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text28
  7887   004952                     __ptext28:
  7888                           	callstack 0
  7889   004952                     _initDCmotorsPWM:
  7890                           	callstack 30
  7891   004952                     
  7892                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  7893   004952  9485               	bcf	133,2,c	;volatile
  7894                           
  7895                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  7896   004954  9885               	bcf	133,4,c	;volatile
  7897                           
  7898                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  7899   004956  9E83               	bcf	131,7,c	;volatile
  7900                           
  7901                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  7902   004958  9C87               	bcf	135,6,c	;volatile
  7903                           
  7904                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  7905   00495A  947D               	bcf	125,2,c	;volatile
  7906                           
  7907                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  7908   00495C  987D               	bcf	125,4,c	;volatile
  7909                           
  7910                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  7911   00495E  9E7B               	bcf	123,7,c	;volatile
  7912                           
  7913                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  7914   004960  9C7F               	bcf	127,6,c	;volatile
  7915   004962                     
  7916                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  7917   004962  0E05               	movlw	5
  7918   004964  010E               	movlb	14	; () banked
  7919   004966  6F74               	movwf	116,b	;volatile
  7920                           
  7921                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  7922   004968  0E06               	movlw	6
  7923   00496A  6F76               	movwf	118,b	;volatile
  7924                           
  7925                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  7926   00496C  0E07               	movlw	7
  7927   00496E  6F69               	movwf	105,b	;volatile
  7928                           
  7929                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  7930   004970  0E08               	movlw	8
  7931   004972  6F88               	movwf	136,b	;volatile
  7932                           
  7933                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  7934   004974  50BD               	movf	189,w,c	;volatile
  7935   004976  0B8F               	andlw	-113
  7936   004978  0940               	iorlw	64
  7937   00497A  6EBD               	movwf	189,c	;volatile
  7938                           
  7939                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  7940   00497C  0EE0               	movlw	-32
  7941   00497E  16BE               	andwf	190,f,c	;volatile
  7942                           
  7943                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  7944   004980  50BF               	movf	191,w,c	;volatile
  7945   004982  0BF0               	andlw	-16
  7946   004984  0901               	iorlw	1
  7947   004986  6EBF               	movwf	191,c	;volatile
  7948   004988                     
  7949                           ; BSR set to: 14
  7950                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  7951   004988  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7952   00498C                     
  7953                           ; BSR set to: 14
  7954                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  7955   00498C  8EBD               	bsf	189,7,c	;volatile
  7956                           
  7957                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  7958   00498E  0E00               	movlw	0
  7959   004990  6EAA               	movwf	170,c	;volatile
  7960                           
  7961                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  7962   004992  0E00               	movlw	0
  7963   004994  6EA6               	movwf	166,c	;volatile
  7964                           
  7965                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  7966   004996  0E00               	movlw	0
  7967   004998  010F               	movlb	15	; () banked
  7968   00499A  6F25               	movwf	37,b	;volatile
  7969                           
  7970                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  7971   00499C  0E00               	movlw	0
  7972   00499E  6F21               	movwf	33,b	;volatile
  7973                           
  7974                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7975   0049A0  0EFC               	movlw	-4
  7976   0049A2  16AD               	andwf	173,f,c	;volatile
  7977                           
  7978                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7979   0049A4  0EF3               	movlw	-13
  7980   0049A6  16AD               	andwf	173,f,c	;volatile
  7981                           
  7982                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7983   0049A8  0ECF               	movlw	-49
  7984   0049AA  16AD               	andwf	173,f,c	;volatile
  7985                           
  7986                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7987   0049AC  0E3F               	movlw	-193
  7988   0049AE  16AD               	andwf	173,f,c	;volatile
  7989   0049B0                     
  7990                           ; BSR set to: 15
  7991                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  7992   0049B0  88AB               	bsf	171,4,c	;volatile
  7993                           
  7994                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7995   0049B2  50AB               	movf	171,w,c	;volatile
  7996   0049B4  0BF0               	andlw	-16
  7997   0049B6  090C               	iorlw	12
  7998   0049B8  6EAB               	movwf	171,c	;volatile
  7999   0049BA                     
  8000                           ; BSR set to: 15
  8001                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  8002   0049BA  8EAB               	bsf	171,7,c	;volatile
  8003   0049BC                     
  8004                           ; BSR set to: 15
  8005                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  8006   0049BC  88A7               	bsf	167,4,c	;volatile
  8007                           
  8008                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  8009   0049BE  50A7               	movf	167,w,c	;volatile
  8010   0049C0  0BF0               	andlw	-16
  8011   0049C2  090C               	iorlw	12
  8012   0049C4  6EA7               	movwf	167,c	;volatile
  8013   0049C6                     
  8014                           ; BSR set to: 15
  8015                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  8016   0049C6  8EA7               	bsf	167,7,c	;volatile
  8017   0049C8                     
  8018                           ; BSR set to: 15
  8019                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  8020   0049C8  8926               	bsf	38,4,b	;volatile
  8021                           
  8022                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  8023   0049CA  5126               	movf	38,w,b	;volatile
  8024   0049CC  0BF0               	andlw	-16
  8025   0049CE  090C               	iorlw	12
  8026   0049D0  6F26               	movwf	38,b	;volatile
  8027   0049D2                     
  8028                           ; BSR set to: 15
  8029                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  8030   0049D2  8F26               	bsf	38,7,b	;volatile
  8031   0049D4                     
  8032                           ; BSR set to: 15
  8033                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  8034   0049D4  8922               	bsf	34,4,b	;volatile
  8035                           
  8036                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  8037   0049D6  5122               	movf	34,w,b	;volatile
  8038   0049D8  0BF0               	andlw	-16
  8039   0049DA  090C               	iorlw	12
  8040   0049DC  6F22               	movwf	34,b	;volatile
  8041   0049DE                     
  8042                           ; BSR set to: 15
  8043                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  8044   0049DE  8F22               	bsf	34,7,b	;volatile
  8045   0049E0                     
  8046                           ; BSR set to: 15
  8047                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  8048   0049E0  9688               	bcf	136,3,c	;volatile
  8049   0049E2                     
  8050                           ; BSR set to: 15
  8051                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  8052   0049E2  9680               	bcf	128,3,c	;volatile
  8053   0049E4                     
  8054                           ; BSR set to: 15
  8055   0049E4  0012               	return		;funcret
  8056   0049E6                     __end_of_initDCmotorsPWM:
  8057                           	callstack 0
  8058                           
  8059 ;; *************** function _calibration_routine *****************
  8060 ;; Defined at:
  8061 ;;		line 89 in file "calibration.c"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;  c               2   32[COMRAM] PTR struct calibration_s
  8064 ;;		 -> calibration(9), 
  8065 ;;  mL              1   34[COMRAM] PTR struct DC_motor
  8066 ;;		 -> motorL(9), 
  8067 ;;  mR              1   35[COMRAM] PTR struct DC_motor
  8068 ;;		 -> motorR(9), 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8084 ;;Total ram usage:        5 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 3
  8087 ;; This function calls:
  8088 ;;		_adjust_calibration
  8089 ;;		_backward
  8090 ;;		_forward
  8091 ;;		_leftTURN
  8092 ;;		_rightTURN
  8093 ;;		_switch_calibration
  8094 ;; This function is called by:
  8095 ;;		_main
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text29
  8100   00363E                     __ptext29:
  8101                           	callstack 0
  8102   00363E                     _calibration_routine:
  8103                           	callstack 27
  8104   00363E                     l206:
  8105   00363E                     
  8106                           ;calibration.c: 95:         if(c->index == 1){
  8107   00363E  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8108   003642  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8109   003646  04DE               	decf	postinc2,w,c
  8110   003648  A4D8               	btfss	status,2,c
  8111   00364A  EF29  F01B         	goto	u7261
  8112   00364E  EF2B  F01B         	goto	u7260
  8113   003652                     u7261:
  8114   003652  EF46  F01B         	goto	l5826
  8115   003656                     u7260:
  8116   003656                     
  8117                           ;calibration.c: 96:             adjust_calibration(&(c->right_90));
  8118   003656  0E01               	movlw	1
  8119   003658  2421               	addwf	calibration_routine@c^0,w,c
  8120   00365A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8121   00365C  0E00               	movlw	0
  8122   00365E  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8123   003660  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8124   003662  EC47  F020         	call	_adjust_calibration	;wreg free
  8125   003666                     
  8126                           ;calibration.c: 97:             rightTURN(c->right_90, mL, mR);
  8127   003666  C023  F013         	movff	calibration_routine@mL,rightTURN@mL
  8128   00366A  C024  F014         	movff	calibration_routine@mR,rightTURN@mR
  8129   00366E  EE20 F001          	lfsr	2,1
  8130   003672  5021               	movf	calibration_routine@c^0,w,c
  8131   003674  26D9               	addwf	fsr2l,f,c
  8132   003676  5022               	movf	(calibration_routine@c+1)^0,w,c
  8133   003678  22DA               	addwfc	fsr2h,f,c
  8134   00367A  50DF               	movf	indf2,w,c
  8135   00367C  EC0B  F01E         	call	_rightTURN
  8136   003680                     
  8137                           ;calibration.c: 98:             switch_calibration(&(c->index));
  8138   003680  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8139   003684  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8140   003688  ECFB  F023         	call	_switch_calibration	;wreg free
  8141   00368C                     l5826:
  8142                           
  8143                           ;calibration.c: 101:         if(c->index == 2){
  8144   00368C  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8145   003690  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8146   003694  0E02               	movlw	2
  8147   003696  18DE               	xorwf	postinc2,w,c
  8148   003698  A4D8               	btfss	status,2,c
  8149   00369A  EF51  F01B         	goto	u7271
  8150   00369E  EF53  F01B         	goto	u7270
  8151   0036A2                     u7271:
  8152   0036A2  EF6E  F01B         	goto	l5834
  8153   0036A6                     u7270:
  8154   0036A6                     
  8155                           ;calibration.c: 102:             adjust_calibration(&(c->left_90));
  8156   0036A6  0E02               	movlw	2
  8157   0036A8  2421               	addwf	calibration_routine@c^0,w,c
  8158   0036AA  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8159   0036AC  0E00               	movlw	0
  8160   0036AE  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8161   0036B0  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8162   0036B2  EC47  F020         	call	_adjust_calibration	;wreg free
  8163   0036B6                     
  8164                           ;calibration.c: 103:             leftTURN(c->left_90, mL, mR);
  8165   0036B6  C023  F013         	movff	calibration_routine@mL,leftTURN@mL
  8166   0036BA  C024  F014         	movff	calibration_routine@mR,leftTURN@mR
  8167   0036BE  EE20 F002          	lfsr	2,2
  8168   0036C2  5021               	movf	calibration_routine@c^0,w,c
  8169   0036C4  26D9               	addwf	fsr2l,f,c
  8170   0036C6  5022               	movf	(calibration_routine@c+1)^0,w,c
  8171   0036C8  22DA               	addwfc	fsr2h,f,c
  8172   0036CA  50DF               	movf	indf2,w,c
  8173   0036CC  ECCA  F01E         	call	_leftTURN
  8174   0036D0                     
  8175                           ;calibration.c: 104:             switch_calibration(&(c->index));
  8176   0036D0  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8177   0036D4  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8178   0036D8  ECFB  F023         	call	_switch_calibration	;wreg free
  8179   0036DC                     l5834:
  8180                           
  8181                           ;calibration.c: 107:         if(c->index == 3){
  8182   0036DC  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8183   0036E0  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8184   0036E4  0E03               	movlw	3
  8185   0036E6  18DE               	xorwf	postinc2,w,c
  8186   0036E8  A4D8               	btfss	status,2,c
  8187   0036EA  EF79  F01B         	goto	u7281
  8188   0036EE  EF7B  F01B         	goto	u7280
  8189   0036F2                     u7281:
  8190   0036F2  EF96  F01B         	goto	l5842
  8191   0036F6                     u7280:
  8192   0036F6                     
  8193                           ;calibration.c: 108:             adjust_calibration(&(c->right_135));
  8194   0036F6  0E03               	movlw	3
  8195   0036F8  2421               	addwf	calibration_routine@c^0,w,c
  8196   0036FA  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8197   0036FC  0E00               	movlw	0
  8198   0036FE  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8199   003700  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8200   003702  EC47  F020         	call	_adjust_calibration	;wreg free
  8201   003706                     
  8202                           ;calibration.c: 109:             rightTURN(c->right_135, mL, mR);
  8203   003706  C023  F013         	movff	calibration_routine@mL,rightTURN@mL
  8204   00370A  C024  F014         	movff	calibration_routine@mR,rightTURN@mR
  8205   00370E  EE20 F003          	lfsr	2,3
  8206   003712  5021               	movf	calibration_routine@c^0,w,c
  8207   003714  26D9               	addwf	fsr2l,f,c
  8208   003716  5022               	movf	(calibration_routine@c+1)^0,w,c
  8209   003718  22DA               	addwfc	fsr2h,f,c
  8210   00371A  50DF               	movf	indf2,w,c
  8211   00371C  EC0B  F01E         	call	_rightTURN
  8212   003720                     
  8213                           ;calibration.c: 110:             switch_calibration(&(c->index));
  8214   003720  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8215   003724  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8216   003728  ECFB  F023         	call	_switch_calibration	;wreg free
  8217   00372C                     l5842:
  8218                           
  8219                           ;calibration.c: 112:         if(c->index == 4){
  8220   00372C  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8221   003730  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8222   003734  0E04               	movlw	4
  8223   003736  18DE               	xorwf	postinc2,w,c
  8224   003738  A4D8               	btfss	status,2,c
  8225   00373A  EFA1  F01B         	goto	u7291
  8226   00373E  EFA3  F01B         	goto	u7290
  8227   003742                     u7291:
  8228   003742  EFBE  F01B         	goto	l5850
  8229   003746                     u7290:
  8230   003746                     
  8231                           ;calibration.c: 113:             adjust_calibration(&(c->left_135));
  8232   003746  0E04               	movlw	4
  8233   003748  2421               	addwf	calibration_routine@c^0,w,c
  8234   00374A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8235   00374C  0E00               	movlw	0
  8236   00374E  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8237   003750  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8238   003752  EC47  F020         	call	_adjust_calibration	;wreg free
  8239   003756                     
  8240                           ;calibration.c: 114:             leftTURN(c->left_135, mL, mR);
  8241   003756  C023  F013         	movff	calibration_routine@mL,leftTURN@mL
  8242   00375A  C024  F014         	movff	calibration_routine@mR,leftTURN@mR
  8243   00375E  EE20 F004          	lfsr	2,4
  8244   003762  5021               	movf	calibration_routine@c^0,w,c
  8245   003764  26D9               	addwf	fsr2l,f,c
  8246   003766  5022               	movf	(calibration_routine@c+1)^0,w,c
  8247   003768  22DA               	addwfc	fsr2h,f,c
  8248   00376A  50DF               	movf	indf2,w,c
  8249   00376C  ECCA  F01E         	call	_leftTURN
  8250   003770                     
  8251                           ;calibration.c: 115:             switch_calibration(&(c->index));
  8252   003770  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8253   003774  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8254   003778  ECFB  F023         	call	_switch_calibration	;wreg free
  8255   00377C                     l5850:
  8256                           
  8257                           ;calibration.c: 118:         if(c->index == 5 ){
  8258   00377C  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8259   003780  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8260   003784  0E05               	movlw	5
  8261   003786  18DE               	xorwf	postinc2,w,c
  8262   003788  A4D8               	btfss	status,2,c
  8263   00378A  EFC9  F01B         	goto	u7301
  8264   00378E  EFCB  F01B         	goto	u7300
  8265   003792                     u7301:
  8266   003792  EFE6  F01B         	goto	l5858
  8267   003796                     u7300:
  8268   003796                     
  8269                           ;calibration.c: 119:             adjust_calibration(&(c->forward_one));
  8270   003796  0E05               	movlw	5
  8271   003798  2421               	addwf	calibration_routine@c^0,w,c
  8272   00379A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8273   00379C  0E00               	movlw	0
  8274   00379E  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8275   0037A0  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8276   0037A2  EC47  F020         	call	_adjust_calibration	;wreg free
  8277   0037A6                     
  8278                           ;calibration.c: 120:             forward(c->forward_one, mL, mR);
  8279   0037A6  C023  F013         	movff	calibration_routine@mL,forward@mL
  8280   0037AA  C024  F014         	movff	calibration_routine@mR,forward@mR
  8281   0037AE  EE20 F005          	lfsr	2,5
  8282   0037B2  5021               	movf	calibration_routine@c^0,w,c
  8283   0037B4  26D9               	addwf	fsr2l,f,c
  8284   0037B6  5022               	movf	(calibration_routine@c+1)^0,w,c
  8285   0037B8  22DA               	addwfc	fsr2h,f,c
  8286   0037BA  50DF               	movf	indf2,w,c
  8287   0037BC  EC4B  F01D         	call	_forward
  8288   0037C0                     
  8289                           ;calibration.c: 121:             switch_calibration(&(c->index));
  8290   0037C0  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8291   0037C4  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8292   0037C8  ECFB  F023         	call	_switch_calibration	;wreg free
  8293   0037CC                     l5858:
  8294                           
  8295                           ;calibration.c: 124:         if(c->index == 6){
  8296   0037CC  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8297   0037D0  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8298   0037D4  0E06               	movlw	6
  8299   0037D6  18DE               	xorwf	postinc2,w,c
  8300   0037D8  A4D8               	btfss	status,2,c
  8301   0037DA  EFF1  F01B         	goto	u7311
  8302   0037DE  EFF3  F01B         	goto	u7310
  8303   0037E2                     u7311:
  8304   0037E2  EF0E  F01C         	goto	l5866
  8305   0037E6                     u7310:
  8306   0037E6                     
  8307                           ;calibration.c: 125:             adjust_calibration(&(c->backward_one));
  8308   0037E6  0E06               	movlw	6
  8309   0037E8  2421               	addwf	calibration_routine@c^0,w,c
  8310   0037EA  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8311   0037EC  0E00               	movlw	0
  8312   0037EE  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8313   0037F0  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8314   0037F2  EC47  F020         	call	_adjust_calibration	;wreg free
  8315   0037F6                     
  8316                           ;calibration.c: 126:             backward(c->backward_one, mL, mR);
  8317   0037F6  C023  F013         	movff	calibration_routine@mL,backward@mL
  8318   0037FA  C024  F014         	movff	calibration_routine@mR,backward@mR
  8319   0037FE  EE20 F006          	lfsr	2,6
  8320   003802  5021               	movf	calibration_routine@c^0,w,c
  8321   003804  26D9               	addwf	fsr2l,f,c
  8322   003806  5022               	movf	(calibration_routine@c+1)^0,w,c
  8323   003808  22DA               	addwfc	fsr2h,f,c
  8324   00380A  50DF               	movf	indf2,w,c
  8325   00380C  EC89  F01F         	call	_backward
  8326   003810                     
  8327                           ;calibration.c: 127:             switch_calibration(&(c->index));
  8328   003810  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8329   003814  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8330   003818  ECFB  F023         	call	_switch_calibration	;wreg free
  8331   00381C                     l5866:
  8332                           
  8333                           ;calibration.c: 130:         if(c->index == 7 ){
  8334   00381C  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8335   003820  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8336   003824  0E07               	movlw	7
  8337   003826  18DE               	xorwf	postinc2,w,c
  8338   003828  A4D8               	btfss	status,2,c
  8339   00382A  EF19  F01C         	goto	u7321
  8340   00382E  EF1B  F01C         	goto	u7320
  8341   003832                     u7321:
  8342   003832  EF36  F01C         	goto	l5874
  8343   003836                     u7320:
  8344   003836                     
  8345                           ;calibration.c: 131:             adjust_calibration(&(c->forward_half));
  8346   003836  0E07               	movlw	7
  8347   003838  2421               	addwf	calibration_routine@c^0,w,c
  8348   00383A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8349   00383C  0E00               	movlw	0
  8350   00383E  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8351   003840  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8352   003842  EC47  F020         	call	_adjust_calibration	;wreg free
  8353   003846                     
  8354                           ;calibration.c: 132:             forward(c->forward_half, mL, mR);
  8355   003846  C023  F013         	movff	calibration_routine@mL,forward@mL
  8356   00384A  C024  F014         	movff	calibration_routine@mR,forward@mR
  8357   00384E  EE20 F007          	lfsr	2,7
  8358   003852  5021               	movf	calibration_routine@c^0,w,c
  8359   003854  26D9               	addwf	fsr2l,f,c
  8360   003856  5022               	movf	(calibration_routine@c+1)^0,w,c
  8361   003858  22DA               	addwfc	fsr2h,f,c
  8362   00385A  50DF               	movf	indf2,w,c
  8363   00385C  EC4B  F01D         	call	_forward
  8364   003860                     
  8365                           ;calibration.c: 133:             switch_calibration(&(c->index));
  8366   003860  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8367   003864  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8368   003868  ECFB  F023         	call	_switch_calibration	;wreg free
  8369   00386C                     l5874:
  8370                           
  8371                           ;calibration.c: 136:         if(c->index == 8){
  8372   00386C  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8373   003870  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8374   003874  0E08               	movlw	8
  8375   003876  18DE               	xorwf	postinc2,w,c
  8376   003878  A4D8               	btfss	status,2,c
  8377   00387A  EF41  F01C         	goto	u7331
  8378   00387E  EF43  F01C         	goto	u7330
  8379   003882                     u7331:
  8380   003882  EF5E  F01C         	goto	l5882
  8381   003886                     u7330:
  8382   003886                     
  8383                           ;calibration.c: 137:             adjust_calibration(&(c->backward_half));
  8384   003886  0E08               	movlw	8
  8385   003888  2421               	addwf	calibration_routine@c^0,w,c
  8386   00388A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8387   00388C  0E00               	movlw	0
  8388   00388E  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8389   003890  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8390   003892  EC47  F020         	call	_adjust_calibration	;wreg free
  8391   003896                     
  8392                           ;calibration.c: 138:             backward(c->backward_half, mL, mR);
  8393   003896  C023  F013         	movff	calibration_routine@mL,backward@mL
  8394   00389A  C024  F014         	movff	calibration_routine@mR,backward@mR
  8395   00389E  EE20 F008          	lfsr	2,8
  8396   0038A2  5021               	movf	calibration_routine@c^0,w,c
  8397   0038A4  26D9               	addwf	fsr2l,f,c
  8398   0038A6  5022               	movf	(calibration_routine@c+1)^0,w,c
  8399   0038A8  22DA               	addwfc	fsr2h,f,c
  8400   0038AA  50DF               	movf	indf2,w,c
  8401   0038AC  EC89  F01F         	call	_backward
  8402   0038B0                     
  8403                           ;calibration.c: 139:             switch_calibration(&(c->index));
  8404   0038B0  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8405   0038B4  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8406   0038B8  ECFB  F023         	call	_switch_calibration	;wreg free
  8407   0038BC                     l5882:
  8408                           
  8409                           ;calibration.c: 142:         if(c->index >= 9){
  8410   0038BC  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8411   0038C0  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8412   0038C4  0E08               	movlw	8
  8413   0038C6  64DF               	cpfsgt	indf2,c
  8414   0038C8  EF68  F01C         	goto	u7341
  8415   0038CC  EF6A  F01C         	goto	u7340
  8416   0038D0                     u7341:
  8417   0038D0  EF1F  F01B         	goto	l206
  8418   0038D4                     u7340:
  8419   0038D4                     
  8420                           ;calibration.c: 143:             c->index = 1;
  8421   0038D4  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8422   0038D8  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8423   0038DC  0E01               	movlw	1
  8424   0038DE  6EDF               	movwf	indf2,c
  8425   0038E0  0012               	return		;funcret
  8426   0038E2                     __end_of_calibration_routine:
  8427                           	callstack 0
  8428                           
  8429 ;; *************** function _switch_calibration *****************
  8430 ;; Defined at:
  8431 ;;		line 64 in file "calibration.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  calibration_    2    0[COMRAM] PTR int 
  8434 ;;		 -> calibration(9), 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;Total ram usage:        4 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_calibration_routine
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text30
  8460   0047F6                     __ptext30:
  8461                           	callstack 0
  8462   0047F6                     _switch_calibration:
  8463                           	callstack 29
  8464   0047F6                     l198:
  8465                           
  8466                           ;calibration.c: 70:         if(!PORTFbits.RF2){
  8467   0047F6  B48E               	btfsc	142,2,c	;volatile
  8468   0047F8  EF00  F024         	goto	u7001
  8469   0047FC  EF02  F024         	goto	u7000
  8470   004800                     u7001:
  8471   004800  EF32  F024         	goto	l199
  8472   004804                     u7000:
  8473   004804                     
  8474                           ;calibration.c: 71:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8475   004804  0E11               	movlw	17
  8476   004806  6E04               	movwf	(??_switch_calibration+1)^0,c
  8477   004808  0E3C               	movlw	60
  8478   00480A  6E03               	movwf	??_switch_calibration^0,c
  8479   00480C  0ECB               	movlw	203
  8480   00480E                     u7667:
  8481   00480E  2EE8               	decfsz	wreg,f,c
  8482   004810  D7FE               	bra	u7667
  8483   004812  2E03               	decfsz	??_switch_calibration^0,f,c
  8484   004814  D7FC               	bra	u7667
  8485   004816  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8486   004818  D7FA               	bra	u7667
  8487   00481A  0000               	nop	
  8488   00481C                     
  8489                           ;calibration.c: 72:             *calibration_index = *calibration_index + 1;
  8490   00481C  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  8491   004820  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  8492   004824  CFDE F003          	movff	postinc2,??_switch_calibration
  8493   004828  CFDD F004          	movff	postdec2,??_switch_calibration+1
  8494   00482C  0E01               	movlw	1
  8495   00482E  2603               	addwf	??_switch_calibration^0,f,c
  8496   004830  0E00               	movlw	0
  8497   004832  2204               	addwfc	(??_switch_calibration+1)^0,f,c
  8498   004834  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  8499   004838  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  8500   00483C  C003  FFDE         	movff	??_switch_calibration,postinc2
  8501   004840  C004  FFDD         	movff	??_switch_calibration+1,postdec2
  8502   004844                     
  8503                           ;calibration.c: 73:             LATDbits.LATD7 = 1;
  8504   004844  8E7C               	bsf	124,7,c	;volatile
  8505   004846                     
  8506                           ;calibration.c: 74:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8507   004846  0E11               	movlw	17
  8508   004848  6E04               	movwf	(??_switch_calibration+1)^0,c
  8509   00484A  0E3C               	movlw	60
  8510   00484C  6E03               	movwf	??_switch_calibration^0,c
  8511   00484E  0ECB               	movlw	203
  8512   004850                     u7677:
  8513   004850  2EE8               	decfsz	wreg,f,c
  8514   004852  D7FE               	bra	u7677
  8515   004854  2E03               	decfsz	??_switch_calibration^0,f,c
  8516   004856  D7FC               	bra	u7677
  8517   004858  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8518   00485A  D7FA               	bra	u7677
  8519   00485C  0000               	nop	
  8520   00485E                     
  8521                           ;calibration.c: 75:             LATDbits.LATD7 = 0;
  8522   00485E  9E7C               	bcf	124,7,c	;volatile
  8523                           
  8524                           ;calibration.c: 76:             break;
  8525   004860  EF53  F024         	goto	l203
  8526   004864                     l199:
  8527                           
  8528                           ;calibration.c: 79:         if(!PORTFbits.RF3){
  8529   004864  B68E               	btfsc	142,3,c	;volatile
  8530   004866  EF37  F024         	goto	u7011
  8531   00486A  EF39  F024         	goto	u7010
  8532   00486E                     u7011:
  8533   00486E  EFFB  F023         	goto	l198
  8534   004872                     u7010:
  8535   004872                     
  8536                           ;calibration.c: 80:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8537   004872  0E11               	movlw	17
  8538   004874  6E04               	movwf	(??_switch_calibration+1)^0,c
  8539   004876  0E3C               	movlw	60
  8540   004878  6E03               	movwf	??_switch_calibration^0,c
  8541   00487A  0ECB               	movlw	203
  8542   00487C                     u7687:
  8543   00487C  2EE8               	decfsz	wreg,f,c
  8544   00487E  D7FE               	bra	u7687
  8545   004880  2E03               	decfsz	??_switch_calibration^0,f,c
  8546   004882  D7FC               	bra	u7687
  8547   004884  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8548   004886  D7FA               	bra	u7687
  8549   004888  0000               	nop	
  8550   00488A                     
  8551                           ;calibration.c: 81:             LATHbits.LATH3 = 1;
  8552   00488A  8680               	bsf	128,3,c	;volatile
  8553                           
  8554                           ;calibration.c: 82:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8555   00488C  0E11               	movlw	17
  8556   00488E  6E04               	movwf	(??_switch_calibration+1)^0,c
  8557   004890  0E3C               	movlw	60
  8558   004892  6E03               	movwf	??_switch_calibration^0,c
  8559   004894  0ECB               	movlw	203
  8560   004896                     u7697:
  8561   004896  2EE8               	decfsz	wreg,f,c
  8562   004898  D7FE               	bra	u7697
  8563   00489A  2E03               	decfsz	??_switch_calibration^0,f,c
  8564   00489C  D7FC               	bra	u7697
  8565   00489E  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8566   0048A0  D7FA               	bra	u7697
  8567   0048A2  0000               	nop	
  8568   0048A4                     
  8569                           ;calibration.c: 83:             LATHbits.LATH3 = 0;
  8570   0048A4  9680               	bcf	128,3,c	;volatile
  8571   0048A6                     l203:
  8572   0048A6  0012               	return		;funcret
  8573   0048A8                     __end_of_switch_calibration:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function _rightTURN *****************
  8577 ;; Defined at:
  8578 ;;		line 254 in file "dc_motor_v1.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  rotation_cal    1    wreg     unsigned char 
  8581 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8582 ;;		 -> motorL(9), 
  8583 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8584 ;;		 -> motorR(9), 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8587 ;;  j               2   26[COMRAM] int 
  8588 ;;  i               2   24[COMRAM] int 
  8589 ;;  delay_time      2   30[COMRAM] int 
  8590 ;;  max_power       2   28[COMRAM] int 
  8591 ;;  acceleration    2    0        int 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8605 ;;Total ram usage:       14 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; Hardware stack levels required when called: 2
  8608 ;; This function calls:
  8609 ;;		___awdiv
  8610 ;;		_delay_ms_function
  8611 ;;		_setMotorPWM
  8612 ;; This function is called by:
  8613 ;;		_calibration_routine
  8614 ;;		_maze_search
  8615 ;;		_maze_return
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text31
  8620   003C16                     __ptext31:
  8621                           	callstack 0
  8622   003C16                     _rightTURN:
  8623                           	callstack 27
  8624                           
  8625                           ;incstack = 0
  8626                           ;rightTURN@rotation_calibration stored from wreg
  8627   003C16  6E18               	movwf	rightTURN@rotation_calibration^0,c
  8628   003C18                     
  8629                           ;dc_motor_v1.c: 255:     mL->direction = 1;
  8630   003C18  5013               	movf	rightTURN@mL^0,w,c
  8631   003C1A  6ED9               	movwf	fsr2l,c
  8632   003C1C  6ADA               	clrf	fsr2h,c
  8633   003C1E  0E01               	movlw	1
  8634   003C20  26D9               	addwf	fsr2l,f,c
  8635   003C22  0E01               	movlw	1
  8636   003C24  6EDF               	movwf	indf2,c
  8637                           
  8638                           ;dc_motor_v1.c: 256:     mR->direction = 0;
  8639   003C26  5014               	movf	rightTURN@mR^0,w,c
  8640   003C28  6ED9               	movwf	fsr2l,c
  8641   003C2A  6ADA               	clrf	fsr2h,c
  8642   003C2C  0E01               	movlw	1
  8643   003C2E  26D9               	addwf	fsr2l,f,c
  8644   003C30  6ADF               	clrf	indf2,c
  8645   003C32                     
  8646                           ;dc_motor_v1.c: 258:     int max_power = 40;
  8647   003C32  0E00               	movlw	0
  8648   003C34  6E1E               	movwf	(rightTURN@max_power+1)^0,c
  8649   003C36  0E28               	movlw	40
  8650   003C38  6E1D               	movwf	rightTURN@max_power^0,c
  8651   003C3A                     
  8652                           ;dc_motor_v1.c: 260:     int delay_time = acceleration_time/max_power;
  8653   003C3A  0E00               	movlw	0
  8654   003C3C  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8655   003C3E  0E64               	movlw	100
  8656   003C40  6E01               	movwf	___awdiv@dividend^0,c
  8657   003C42  0E00               	movlw	0
  8658   003C44  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8659   003C46  0E28               	movlw	40
  8660   003C48  6E03               	movwf	___awdiv@divisor^0,c
  8661   003C4A  EC99  F023         	call	___awdiv	;wreg free
  8662   003C4E  C001  F01F         	movff	?___awdiv,rightTURN@delay_time
  8663   003C52  C002  F020         	movff	?___awdiv+1,rightTURN@delay_time+1
  8664   003C56                     
  8665                           ;dc_motor_v1.c: 263:     for(int i=0; i< max_power; i++){
  8666   003C56  0E00               	movlw	0
  8667   003C58  6E1A               	movwf	(rightTURN@i+1)^0,c
  8668   003C5A  0E00               	movlw	0
  8669   003C5C  6E19               	movwf	rightTURN@i^0,c
  8670   003C5E  EF55  F01E         	goto	l5654
  8671   003C62                     l5644:
  8672                           
  8673                           ;dc_motor_v1.c: 264:         mL->power = mL->power + 1;
  8674   003C62  5013               	movf	rightTURN@mL^0,w,c
  8675   003C64  6ED9               	movwf	fsr2l,c
  8676   003C66  6ADA               	clrf	fsr2h,c
  8677   003C68  5013               	movf	rightTURN@mL^0,w,c
  8678   003C6A  6EE1               	movwf	fsr1l,c
  8679   003C6C  6AE2               	clrf	fsr1h,c
  8680   003C6E  50E7               	movf	indf1,w,c
  8681   003C70  6E15               	movwf	??_rightTURN^0,c
  8682   003C72  2815               	incf	??_rightTURN^0,w,c
  8683   003C74  6EDF               	movwf	indf2,c
  8684                           
  8685                           ;dc_motor_v1.c: 265:         mR->power = mR->power + 1 ;
  8686   003C76  5014               	movf	rightTURN@mR^0,w,c
  8687   003C78  6ED9               	movwf	fsr2l,c
  8688   003C7A  6ADA               	clrf	fsr2h,c
  8689   003C7C  5014               	movf	rightTURN@mR^0,w,c
  8690   003C7E  6EE1               	movwf	fsr1l,c
  8691   003C80  6AE2               	clrf	fsr1h,c
  8692   003C82  50E7               	movf	indf1,w,c
  8693   003C84  6E15               	movwf	??_rightTURN^0,c
  8694   003C86  2815               	incf	??_rightTURN^0,w,c
  8695   003C88  6EDF               	movwf	indf2,c
  8696   003C8A                     
  8697                           ;dc_motor_v1.c: 266:         setMotorPWM(mR);
  8698   003C8A  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8699   003C8E  ECF2  F020         	call	_setMotorPWM	;wreg free
  8700   003C92                     
  8701                           ;dc_motor_v1.c: 267:         setMotorPWM(mL);
  8702   003C92  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8703   003C96  ECF2  F020         	call	_setMotorPWM	;wreg free
  8704   003C9A                     
  8705                           ;dc_motor_v1.c: 268:         delay_ms_function(delay_time);
  8706   003C9A  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8707   003C9E  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8708   003CA2  EC7B  F026         	call	_delay_ms_function	;wreg free
  8709   003CA6                     
  8710                           ;dc_motor_v1.c: 269:     }
  8711   003CA6  4A19               	infsnz	rightTURN@i^0,f,c
  8712   003CA8  2A1A               	incf	(rightTURN@i+1)^0,f,c
  8713   003CAA                     l5654:
  8714   003CAA  501D               	movf	rightTURN@max_power^0,w,c
  8715   003CAC  5C19               	subwf	rightTURN@i^0,w,c
  8716   003CAE  501A               	movf	(rightTURN@i+1)^0,w,c
  8717   003CB0  0A80               	xorlw	128
  8718   003CB2  6E15               	movwf	??_rightTURN^0,c
  8719   003CB4  501E               	movf	(rightTURN@max_power+1)^0,w,c
  8720   003CB6  0A80               	xorlw	128
  8721   003CB8  5815               	subwfb	??_rightTURN^0,w,c
  8722   003CBA  A0D8               	btfss	status,0,c
  8723   003CBC  EF62  F01E         	goto	u7021
  8724   003CC0  EF64  F01E         	goto	u7020
  8725   003CC4                     u7021:
  8726   003CC4  EF31  F01E         	goto	l5644
  8727   003CC8                     u7020:
  8728   003CC8                     
  8729                           ;dc_motor_v1.c: 274:     for(int j=0; j<rotation_calibration; j++){
  8730   003CC8  0E00               	movlw	0
  8731   003CCA  6E1C               	movwf	(rightTURN@j+1)^0,c
  8732   003CCC  0E00               	movlw	0
  8733   003CCE  6E1B               	movwf	rightTURN@j^0,c
  8734   003CD0  EF73  F01E         	goto	l346
  8735   003CD4                     l5658:
  8736                           
  8737                           ;dc_motor_v1.c: 275:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8738   003CD4  0ED0               	movlw	208
  8739   003CD6  6E15               	movwf	??_rightTURN^0,c
  8740   003CD8  0ECA               	movlw	202
  8741   003CDA                     u7707:
  8742   003CDA  2EE8               	decfsz	wreg,f,c
  8743   003CDC  D7FE               	bra	u7707
  8744   003CDE  2E15               	decfsz	??_rightTURN^0,f,c
  8745   003CE0  D7FC               	bra	u7707
  8746   003CE2                     
  8747                           ;dc_motor_v1.c: 276:     }
  8748   003CE2  4A1B               	infsnz	rightTURN@j^0,f,c
  8749   003CE4  2A1C               	incf	(rightTURN@j+1)^0,f,c
  8750   003CE6                     l346:
  8751   003CE6  5018               	movf	rightTURN@rotation_calibration^0,w,c
  8752   003CE8  6E15               	movwf	??_rightTURN^0,c
  8753   003CEA  6A16               	clrf	(??_rightTURN+1)^0,c
  8754   003CEC  5015               	movf	??_rightTURN^0,w,c
  8755   003CEE  5C1B               	subwf	rightTURN@j^0,w,c
  8756   003CF0  501C               	movf	(rightTURN@j+1)^0,w,c
  8757   003CF2  0A80               	xorlw	128
  8758   003CF4  6E17               	movwf	(??_rightTURN+2)^0,c
  8759   003CF6  5016               	movf	(??_rightTURN+1)^0,w,c
  8760   003CF8  0A80               	xorlw	128
  8761   003CFA  5817               	subwfb	(??_rightTURN+2)^0,w,c
  8762   003CFC  A0D8               	btfss	status,0,c
  8763   003CFE  EF83  F01E         	goto	u7031
  8764   003D02  EF85  F01E         	goto	u7030
  8765   003D06                     u7031:
  8766   003D06  EF6A  F01E         	goto	l5658
  8767   003D0A                     u7030:
  8768   003D0A  EFB3  F01E         	goto	l5676
  8769   003D0E                     l5662:
  8770                           
  8771                           ;dc_motor_v1.c: 280:         if(mR->power > 0 ){
  8772   003D0E  5014               	movf	rightTURN@mR^0,w,c
  8773   003D10  6ED9               	movwf	fsr2l,c
  8774   003D12  6ADA               	clrf	fsr2h,c
  8775   003D14  50DF               	movf	indf2,w,c
  8776   003D16  B4D8               	btfsc	status,2,c
  8777   003D18  EF90  F01E         	goto	u7041
  8778   003D1C  EF92  F01E         	goto	u7040
  8779   003D20                     u7041:
  8780   003D20  EF96  F01E         	goto	l5666
  8781   003D24                     u7040:
  8782   003D24                     
  8783                           ;dc_motor_v1.c: 281:             mR->power--;
  8784   003D24  5014               	movf	rightTURN@mR^0,w,c
  8785   003D26  6ED9               	movwf	fsr2l,c
  8786   003D28  6ADA               	clrf	fsr2h,c
  8787   003D2A  06DF               	decf	indf2,f,c
  8788   003D2C                     l5666:
  8789                           
  8790                           ;dc_motor_v1.c: 283:         if(mL->power > 0 ){
  8791   003D2C  5013               	movf	rightTURN@mL^0,w,c
  8792   003D2E  6ED9               	movwf	fsr2l,c
  8793   003D30  6ADA               	clrf	fsr2h,c
  8794   003D32  50DF               	movf	indf2,w,c
  8795   003D34  B4D8               	btfsc	status,2,c
  8796   003D36  EF9F  F01E         	goto	u7051
  8797   003D3A  EFA1  F01E         	goto	u7050
  8798   003D3E                     u7051:
  8799   003D3E  EFA5  F01E         	goto	l5670
  8800   003D42                     u7050:
  8801   003D42                     
  8802                           ;dc_motor_v1.c: 284:             mL->power--;
  8803   003D42  5013               	movf	rightTURN@mL^0,w,c
  8804   003D44  6ED9               	movwf	fsr2l,c
  8805   003D46  6ADA               	clrf	fsr2h,c
  8806   003D48  06DF               	decf	indf2,f,c
  8807   003D4A                     l5670:
  8808                           
  8809                           ;dc_motor_v1.c: 286:         setMotorPWM(mR);
  8810   003D4A  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8811   003D4E  ECF2  F020         	call	_setMotorPWM	;wreg free
  8812   003D52                     
  8813                           ;dc_motor_v1.c: 287:         setMotorPWM(mL);
  8814   003D52  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8815   003D56  ECF2  F020         	call	_setMotorPWM	;wreg free
  8816   003D5A                     
  8817                           ;dc_motor_v1.c: 288:         delay_ms_function(delay_time);
  8818   003D5A  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8819   003D5E  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8820   003D62  EC7B  F026         	call	_delay_ms_function	;wreg free
  8821   003D66                     l5676:
  8822                           
  8823                           ;dc_motor_v1.c: 279:     while(mL->power || mR->power > 0){
  8824   003D66  5013               	movf	rightTURN@mL^0,w,c
  8825   003D68  6ED9               	movwf	fsr2l,c
  8826   003D6A  6ADA               	clrf	fsr2h,c
  8827   003D6C  50DF               	movf	indf2,w,c
  8828   003D6E  A4D8               	btfss	status,2,c
  8829   003D70  EFBC  F01E         	goto	u7061
  8830   003D74  EFBE  F01E         	goto	u7060
  8831   003D78                     u7061:
  8832   003D78  EF87  F01E         	goto	l5662
  8833   003D7C                     u7060:
  8834   003D7C  5014               	movf	rightTURN@mR^0,w,c
  8835   003D7E  6ED9               	movwf	fsr2l,c
  8836   003D80  6ADA               	clrf	fsr2h,c
  8837   003D82  50DF               	movf	indf2,w,c
  8838   003D84  A4D8               	btfss	status,2,c
  8839   003D86  EFC7  F01E         	goto	u7071
  8840   003D8A  EFC9  F01E         	goto	u7070
  8841   003D8E                     u7071:
  8842   003D8E  EF87  F01E         	goto	l5662
  8843   003D92                     u7070:
  8844   003D92  0012               	return		;funcret
  8845   003D94                     __end_of_rightTURN:
  8846                           	callstack 0
  8847                           
  8848 ;; *************** function _leftTURN *****************
  8849 ;; Defined at:
  8850 ;;		line 213 in file "dc_motor_v1.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  rotation_cal    1    wreg     unsigned char 
  8853 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8854 ;;		 -> motorL(9), 
  8855 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8856 ;;		 -> motorR(9), 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8859 ;;  j               2   26[COMRAM] int 
  8860 ;;  i               2   24[COMRAM] int 
  8861 ;;  delay_time      2   30[COMRAM] int 
  8862 ;;  max_power       2   28[COMRAM] int 
  8863 ;;  acceleration    2    0        int 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8874 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;Total ram usage:       14 bytes
  8878 ;; Hardware stack levels used: 1
  8879 ;; Hardware stack levels required when called: 2
  8880 ;; This function calls:
  8881 ;;		___awdiv
  8882 ;;		_delay_ms_function
  8883 ;;		_setMotorPWM
  8884 ;; This function is called by:
  8885 ;;		_calibration_routine
  8886 ;;		_maze_search
  8887 ;;		_maze_return
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text32
  8892   003D94                     __ptext32:
  8893                           	callstack 0
  8894   003D94                     _leftTURN:
  8895                           	callstack 27
  8896                           
  8897                           ;incstack = 0
  8898                           ;leftTURN@rotation_calibration stored from wreg
  8899   003D94  6E18               	movwf	leftTURN@rotation_calibration^0,c
  8900   003D96                     
  8901                           ;dc_motor_v1.c: 215:     mL->direction = 0;
  8902   003D96  5013               	movf	leftTURN@mL^0,w,c
  8903   003D98  6ED9               	movwf	fsr2l,c
  8904   003D9A  6ADA               	clrf	fsr2h,c
  8905   003D9C  0E01               	movlw	1
  8906   003D9E  26D9               	addwf	fsr2l,f,c
  8907   003DA0  6ADF               	clrf	indf2,c
  8908                           
  8909                           ;dc_motor_v1.c: 216:     mR->direction = 1;
  8910   003DA2  5014               	movf	leftTURN@mR^0,w,c
  8911   003DA4  6ED9               	movwf	fsr2l,c
  8912   003DA6  6ADA               	clrf	fsr2h,c
  8913   003DA8  0E01               	movlw	1
  8914   003DAA  26D9               	addwf	fsr2l,f,c
  8915   003DAC  0E01               	movlw	1
  8916   003DAE  6EDF               	movwf	indf2,c
  8917   003DB0                     
  8918                           ;dc_motor_v1.c: 218:     int max_power = 40;
  8919   003DB0  0E00               	movlw	0
  8920   003DB2  6E1E               	movwf	(leftTURN@max_power+1)^0,c
  8921   003DB4  0E28               	movlw	40
  8922   003DB6  6E1D               	movwf	leftTURN@max_power^0,c
  8923   003DB8                     
  8924                           ;dc_motor_v1.c: 220:     int delay_time = acceleration_time/max_power;
  8925   003DB8  0E00               	movlw	0
  8926   003DBA  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8927   003DBC  0E64               	movlw	100
  8928   003DBE  6E01               	movwf	___awdiv@dividend^0,c
  8929   003DC0  0E00               	movlw	0
  8930   003DC2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8931   003DC4  0E28               	movlw	40
  8932   003DC6  6E03               	movwf	___awdiv@divisor^0,c
  8933   003DC8  EC99  F023         	call	___awdiv	;wreg free
  8934   003DCC  C001  F01F         	movff	?___awdiv,leftTURN@delay_time
  8935   003DD0  C002  F020         	movff	?___awdiv+1,leftTURN@delay_time+1
  8936   003DD4                     
  8937                           ;dc_motor_v1.c: 223:     for(int i=0; i< max_power; i++){
  8938   003DD4  0E00               	movlw	0
  8939   003DD6  6E1A               	movwf	(leftTURN@i+1)^0,c
  8940   003DD8  0E00               	movlw	0
  8941   003DDA  6E19               	movwf	leftTURN@i^0,c
  8942   003DDC  EF14  F01F         	goto	l5700
  8943   003DE0                     l5690:
  8944                           
  8945                           ;dc_motor_v1.c: 224:         mL->power = mL->power + 1;
  8946   003DE0  5013               	movf	leftTURN@mL^0,w,c
  8947   003DE2  6ED9               	movwf	fsr2l,c
  8948   003DE4  6ADA               	clrf	fsr2h,c
  8949   003DE6  5013               	movf	leftTURN@mL^0,w,c
  8950   003DE8  6EE1               	movwf	fsr1l,c
  8951   003DEA  6AE2               	clrf	fsr1h,c
  8952   003DEC  50E7               	movf	indf1,w,c
  8953   003DEE  6E15               	movwf	??_leftTURN^0,c
  8954   003DF0  2815               	incf	??_leftTURN^0,w,c
  8955   003DF2  6EDF               	movwf	indf2,c
  8956                           
  8957                           ;dc_motor_v1.c: 225:         mR->power = mR->power + 1 ;
  8958   003DF4  5014               	movf	leftTURN@mR^0,w,c
  8959   003DF6  6ED9               	movwf	fsr2l,c
  8960   003DF8  6ADA               	clrf	fsr2h,c
  8961   003DFA  5014               	movf	leftTURN@mR^0,w,c
  8962   003DFC  6EE1               	movwf	fsr1l,c
  8963   003DFE  6AE2               	clrf	fsr1h,c
  8964   003E00  50E7               	movf	indf1,w,c
  8965   003E02  6E15               	movwf	??_leftTURN^0,c
  8966   003E04  2815               	incf	??_leftTURN^0,w,c
  8967   003E06  6EDF               	movwf	indf2,c
  8968   003E08                     
  8969                           ;dc_motor_v1.c: 226:         setMotorPWM(mR);
  8970   003E08  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8971   003E0C  ECF2  F020         	call	_setMotorPWM	;wreg free
  8972   003E10                     
  8973                           ;dc_motor_v1.c: 227:         setMotorPWM(mL);
  8974   003E10  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8975   003E14  ECF2  F020         	call	_setMotorPWM	;wreg free
  8976   003E18                     
  8977                           ;dc_motor_v1.c: 228:         delay_ms_function(delay_time);
  8978   003E18  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8979   003E1C  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  8980   003E20  EC7B  F026         	call	_delay_ms_function	;wreg free
  8981   003E24                     
  8982                           ;dc_motor_v1.c: 229:     }
  8983   003E24  4A19               	infsnz	leftTURN@i^0,f,c
  8984   003E26  2A1A               	incf	(leftTURN@i+1)^0,f,c
  8985   003E28                     l5700:
  8986   003E28  501D               	movf	leftTURN@max_power^0,w,c
  8987   003E2A  5C19               	subwf	leftTURN@i^0,w,c
  8988   003E2C  501A               	movf	(leftTURN@i+1)^0,w,c
  8989   003E2E  0A80               	xorlw	128
  8990   003E30  6E15               	movwf	??_leftTURN^0,c
  8991   003E32  501E               	movf	(leftTURN@max_power+1)^0,w,c
  8992   003E34  0A80               	xorlw	128
  8993   003E36  5815               	subwfb	??_leftTURN^0,w,c
  8994   003E38  A0D8               	btfss	status,0,c
  8995   003E3A  EF21  F01F         	goto	u7081
  8996   003E3E  EF23  F01F         	goto	u7080
  8997   003E42                     u7081:
  8998   003E42  EFF0  F01E         	goto	l5690
  8999   003E46                     u7080:
  9000   003E46                     
  9001                           ;dc_motor_v1.c: 234:     for(int j=0; j<rotation_calibration; j++){
  9002   003E46  0E00               	movlw	0
  9003   003E48  6E1C               	movwf	(leftTURN@j+1)^0,c
  9004   003E4A  0E00               	movlw	0
  9005   003E4C  6E1B               	movwf	leftTURN@j^0,c
  9006   003E4E  EF32  F01F         	goto	l332
  9007   003E52                     l5704:
  9008                           
  9009                           ;dc_motor_v1.c: 235:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9010   003E52  0ED0               	movlw	208
  9011   003E54  6E15               	movwf	??_leftTURN^0,c
  9012   003E56  0ECA               	movlw	202
  9013   003E58                     u7717:
  9014   003E58  2EE8               	decfsz	wreg,f,c
  9015   003E5A  D7FE               	bra	u7717
  9016   003E5C  2E15               	decfsz	??_leftTURN^0,f,c
  9017   003E5E  D7FC               	bra	u7717
  9018   003E60                     
  9019                           ;dc_motor_v1.c: 236:     }
  9020   003E60  4A1B               	infsnz	leftTURN@j^0,f,c
  9021   003E62  2A1C               	incf	(leftTURN@j+1)^0,f,c
  9022   003E64                     l332:
  9023   003E64  5018               	movf	leftTURN@rotation_calibration^0,w,c
  9024   003E66  6E15               	movwf	??_leftTURN^0,c
  9025   003E68  6A16               	clrf	(??_leftTURN+1)^0,c
  9026   003E6A  5015               	movf	??_leftTURN^0,w,c
  9027   003E6C  5C1B               	subwf	leftTURN@j^0,w,c
  9028   003E6E  501C               	movf	(leftTURN@j+1)^0,w,c
  9029   003E70  0A80               	xorlw	128
  9030   003E72  6E17               	movwf	(??_leftTURN+2)^0,c
  9031   003E74  5016               	movf	(??_leftTURN+1)^0,w,c
  9032   003E76  0A80               	xorlw	128
  9033   003E78  5817               	subwfb	(??_leftTURN+2)^0,w,c
  9034   003E7A  A0D8               	btfss	status,0,c
  9035   003E7C  EF42  F01F         	goto	u7091
  9036   003E80  EF44  F01F         	goto	u7090
  9037   003E84                     u7091:
  9038   003E84  EF29  F01F         	goto	l5704
  9039   003E88                     u7090:
  9040   003E88  EF72  F01F         	goto	l5722
  9041   003E8C                     l5708:
  9042                           
  9043                           ;dc_motor_v1.c: 240:         if(mR->power > 0 ){
  9044   003E8C  5014               	movf	leftTURN@mR^0,w,c
  9045   003E8E  6ED9               	movwf	fsr2l,c
  9046   003E90  6ADA               	clrf	fsr2h,c
  9047   003E92  50DF               	movf	indf2,w,c
  9048   003E94  B4D8               	btfsc	status,2,c
  9049   003E96  EF4F  F01F         	goto	u7101
  9050   003E9A  EF51  F01F         	goto	u7100
  9051   003E9E                     u7101:
  9052   003E9E  EF55  F01F         	goto	l5712
  9053   003EA2                     u7100:
  9054   003EA2                     
  9055                           ;dc_motor_v1.c: 241:             mR->power--;
  9056   003EA2  5014               	movf	leftTURN@mR^0,w,c
  9057   003EA4  6ED9               	movwf	fsr2l,c
  9058   003EA6  6ADA               	clrf	fsr2h,c
  9059   003EA8  06DF               	decf	indf2,f,c
  9060   003EAA                     l5712:
  9061                           
  9062                           ;dc_motor_v1.c: 243:         if(mL->power > 0 ){
  9063   003EAA  5013               	movf	leftTURN@mL^0,w,c
  9064   003EAC  6ED9               	movwf	fsr2l,c
  9065   003EAE  6ADA               	clrf	fsr2h,c
  9066   003EB0  50DF               	movf	indf2,w,c
  9067   003EB2  B4D8               	btfsc	status,2,c
  9068   003EB4  EF5E  F01F         	goto	u7111
  9069   003EB8  EF60  F01F         	goto	u7110
  9070   003EBC                     u7111:
  9071   003EBC  EF64  F01F         	goto	l5716
  9072   003EC0                     u7110:
  9073   003EC0                     
  9074                           ;dc_motor_v1.c: 244:             mL->power--;
  9075   003EC0  5013               	movf	leftTURN@mL^0,w,c
  9076   003EC2  6ED9               	movwf	fsr2l,c
  9077   003EC4  6ADA               	clrf	fsr2h,c
  9078   003EC6  06DF               	decf	indf2,f,c
  9079   003EC8                     l5716:
  9080                           
  9081                           ;dc_motor_v1.c: 246:         setMotorPWM(mR);
  9082   003EC8  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  9083   003ECC  ECF2  F020         	call	_setMotorPWM	;wreg free
  9084   003ED0                     
  9085                           ;dc_motor_v1.c: 247:         setMotorPWM(mL);
  9086   003ED0  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  9087   003ED4  ECF2  F020         	call	_setMotorPWM	;wreg free
  9088   003ED8                     
  9089                           ;dc_motor_v1.c: 248:         delay_ms_function(delay_time);
  9090   003ED8  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  9091   003EDC  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  9092   003EE0  EC7B  F026         	call	_delay_ms_function	;wreg free
  9093   003EE4                     l5722:
  9094                           
  9095                           ;dc_motor_v1.c: 239:     while(mL->power || mR->power > 0){
  9096   003EE4  5013               	movf	leftTURN@mL^0,w,c
  9097   003EE6  6ED9               	movwf	fsr2l,c
  9098   003EE8  6ADA               	clrf	fsr2h,c
  9099   003EEA  50DF               	movf	indf2,w,c
  9100   003EEC  A4D8               	btfss	status,2,c
  9101   003EEE  EF7B  F01F         	goto	u7121
  9102   003EF2  EF7D  F01F         	goto	u7120
  9103   003EF6                     u7121:
  9104   003EF6  EF46  F01F         	goto	l5708
  9105   003EFA                     u7120:
  9106   003EFA  5014               	movf	leftTURN@mR^0,w,c
  9107   003EFC  6ED9               	movwf	fsr2l,c
  9108   003EFE  6ADA               	clrf	fsr2h,c
  9109   003F00  50DF               	movf	indf2,w,c
  9110   003F02  A4D8               	btfss	status,2,c
  9111   003F04  EF86  F01F         	goto	u7131
  9112   003F08  EF88  F01F         	goto	u7130
  9113   003F0C                     u7131:
  9114   003F0C  EF46  F01F         	goto	l5708
  9115   003F10                     u7130:
  9116   003F10  0012               	return		;funcret
  9117   003F12                     __end_of_leftTURN:
  9118                           	callstack 0
  9119                           
  9120 ;; *************** function _forward *****************
  9121 ;; Defined at:
  9122 ;;		line 122 in file "dc_motor_v1.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;  Distance_Cal    1    wreg     unsigned char 
  9125 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9126 ;;		 -> motorL(9), 
  9127 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9128 ;;		 -> motorR(9), 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9131 ;;  j               2   26[COMRAM] int 
  9132 ;;  i               2   24[COMRAM] int 
  9133 ;;  delay_time      2   30[COMRAM] int 
  9134 ;;  max_power       2   28[COMRAM] int 
  9135 ;;  acceleration    2    0        int 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;Total ram usage:       14 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 2
  9152 ;; This function calls:
  9153 ;;		___awdiv
  9154 ;;		_delay_ms_function
  9155 ;;		_setMotorPWM
  9156 ;; This function is called by:
  9157 ;;		_calibration_routine
  9158 ;;		_maze_search
  9159 ;;		_maze_return
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text33
  9164   003A96                     __ptext33:
  9165                           	callstack 0
  9166   003A96                     _forward:
  9167                           	callstack 27
  9168                           
  9169                           ;incstack = 0
  9170                           ;forward@Distance_Calibration stored from wreg
  9171   003A96  6E18               	movwf	forward@Distance_Calibration^0,c
  9172   003A98                     
  9173                           ;dc_motor_v1.c: 127:     mL->direction = 1;
  9174   003A98  5013               	movf	forward@mL^0,w,c
  9175   003A9A  6ED9               	movwf	fsr2l,c
  9176   003A9C  6ADA               	clrf	fsr2h,c
  9177   003A9E  0E01               	movlw	1
  9178   003AA0  26D9               	addwf	fsr2l,f,c
  9179   003AA2  0E01               	movlw	1
  9180   003AA4  6EDF               	movwf	indf2,c
  9181                           
  9182                           ;dc_motor_v1.c: 128:     mR->direction = 1;
  9183   003AA6  5014               	movf	forward@mR^0,w,c
  9184   003AA8  6ED9               	movwf	fsr2l,c
  9185   003AAA  6ADA               	clrf	fsr2h,c
  9186   003AAC  0E01               	movlw	1
  9187   003AAE  26D9               	addwf	fsr2l,f,c
  9188   003AB0  0E01               	movlw	1
  9189   003AB2  6EDF               	movwf	indf2,c
  9190   003AB4                     
  9191                           ;dc_motor_v1.c: 131:     int max_power = 40;
  9192   003AB4  0E00               	movlw	0
  9193   003AB6  6E1E               	movwf	(forward@max_power+1)^0,c
  9194   003AB8  0E28               	movlw	40
  9195   003ABA  6E1D               	movwf	forward@max_power^0,c
  9196   003ABC                     
  9197                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  9198   003ABC  0E00               	movlw	0
  9199   003ABE  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9200   003AC0  0E64               	movlw	100
  9201   003AC2  6E01               	movwf	___awdiv@dividend^0,c
  9202   003AC4  0E00               	movlw	0
  9203   003AC6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9204   003AC8  0E28               	movlw	40
  9205   003ACA  6E03               	movwf	___awdiv@divisor^0,c
  9206   003ACC  EC99  F023         	call	___awdiv	;wreg free
  9207   003AD0  C001  F01F         	movff	?___awdiv,forward@delay_time
  9208   003AD4  C002  F020         	movff	?___awdiv+1,forward@delay_time+1
  9209   003AD8                     
  9210                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  9211   003AD8  0E00               	movlw	0
  9212   003ADA  6E1A               	movwf	(forward@i+1)^0,c
  9213   003ADC  0E00               	movlw	0
  9214   003ADE  6E19               	movwf	forward@i^0,c
  9215   003AE0  EF96  F01D         	goto	l5746
  9216   003AE4                     l5736:
  9217                           
  9218                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  9219   003AE4  5013               	movf	forward@mL^0,w,c
  9220   003AE6  6ED9               	movwf	fsr2l,c
  9221   003AE8  6ADA               	clrf	fsr2h,c
  9222   003AEA  5013               	movf	forward@mL^0,w,c
  9223   003AEC  6EE1               	movwf	fsr1l,c
  9224   003AEE  6AE2               	clrf	fsr1h,c
  9225   003AF0  50E7               	movf	indf1,w,c
  9226   003AF2  6E15               	movwf	??_forward^0,c
  9227   003AF4  2815               	incf	??_forward^0,w,c
  9228   003AF6  6EDF               	movwf	indf2,c
  9229                           
  9230                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  9231   003AF8  5014               	movf	forward@mR^0,w,c
  9232   003AFA  6ED9               	movwf	fsr2l,c
  9233   003AFC  6ADA               	clrf	fsr2h,c
  9234   003AFE  5014               	movf	forward@mR^0,w,c
  9235   003B00  6EE1               	movwf	fsr1l,c
  9236   003B02  6AE2               	clrf	fsr1h,c
  9237   003B04  50E7               	movf	indf1,w,c
  9238   003B06  6E15               	movwf	??_forward^0,c
  9239   003B08  2815               	incf	??_forward^0,w,c
  9240   003B0A  6EDF               	movwf	indf2,c
  9241   003B0C                     
  9242                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  9243   003B0C  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9244   003B10  ECF2  F020         	call	_setMotorPWM	;wreg free
  9245   003B14                     
  9246                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  9247   003B14  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9248   003B18  ECF2  F020         	call	_setMotorPWM	;wreg free
  9249   003B1C                     
  9250                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  9251   003B1C  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9252   003B20  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9253   003B24  EC7B  F026         	call	_delay_ms_function	;wreg free
  9254   003B28                     
  9255                           ;dc_motor_v1.c: 142:     }
  9256   003B28  4A19               	infsnz	forward@i^0,f,c
  9257   003B2A  2A1A               	incf	(forward@i+1)^0,f,c
  9258   003B2C                     l5746:
  9259   003B2C  501D               	movf	forward@max_power^0,w,c
  9260   003B2E  5C19               	subwf	forward@i^0,w,c
  9261   003B30  501A               	movf	(forward@i+1)^0,w,c
  9262   003B32  0A80               	xorlw	128
  9263   003B34  6E15               	movwf	??_forward^0,c
  9264   003B36  501E               	movf	(forward@max_power+1)^0,w,c
  9265   003B38  0A80               	xorlw	128
  9266   003B3A  5815               	subwfb	??_forward^0,w,c
  9267   003B3C  A0D8               	btfss	status,0,c
  9268   003B3E  EFA3  F01D         	goto	u7141
  9269   003B42  EFA5  F01D         	goto	u7140
  9270   003B46                     u7141:
  9271   003B46  EF72  F01D         	goto	l5736
  9272   003B4A                     u7140:
  9273   003B4A                     
  9274                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  9275   003B4A  0E00               	movlw	0
  9276   003B4C  6E1C               	movwf	(forward@j+1)^0,c
  9277   003B4E  0E00               	movlw	0
  9278   003B50  6E1B               	movwf	forward@j^0,c
  9279   003B52  EFB4  F01D         	goto	l304
  9280   003B56                     l5750:
  9281                           
  9282                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9283   003B56  0ED0               	movlw	208
  9284   003B58  6E15               	movwf	??_forward^0,c
  9285   003B5A  0ECA               	movlw	202
  9286   003B5C                     u7727:
  9287   003B5C  2EE8               	decfsz	wreg,f,c
  9288   003B5E  D7FE               	bra	u7727
  9289   003B60  2E15               	decfsz	??_forward^0,f,c
  9290   003B62  D7FC               	bra	u7727
  9291   003B64                     
  9292                           ;dc_motor_v1.c: 149:     }
  9293   003B64  4A1B               	infsnz	forward@j^0,f,c
  9294   003B66  2A1C               	incf	(forward@j+1)^0,f,c
  9295   003B68                     l304:
  9296   003B68  5018               	movf	forward@Distance_Calibration^0,w,c
  9297   003B6A  6E15               	movwf	??_forward^0,c
  9298   003B6C  6A16               	clrf	(??_forward+1)^0,c
  9299   003B6E  5015               	movf	??_forward^0,w,c
  9300   003B70  5C1B               	subwf	forward@j^0,w,c
  9301   003B72  501C               	movf	(forward@j+1)^0,w,c
  9302   003B74  0A80               	xorlw	128
  9303   003B76  6E17               	movwf	(??_forward+2)^0,c
  9304   003B78  5016               	movf	(??_forward+1)^0,w,c
  9305   003B7A  0A80               	xorlw	128
  9306   003B7C  5817               	subwfb	(??_forward+2)^0,w,c
  9307   003B7E  A0D8               	btfss	status,0,c
  9308   003B80  EFC4  F01D         	goto	u7151
  9309   003B84  EFC6  F01D         	goto	u7150
  9310   003B88                     u7151:
  9311   003B88  EFAB  F01D         	goto	l5750
  9312   003B8C                     u7150:
  9313   003B8C  EFF4  F01D         	goto	l5768
  9314   003B90                     l5754:
  9315                           
  9316                           ;dc_motor_v1.c: 153:         if(mR->power > 0 ){
  9317   003B90  5014               	movf	forward@mR^0,w,c
  9318   003B92  6ED9               	movwf	fsr2l,c
  9319   003B94  6ADA               	clrf	fsr2h,c
  9320   003B96  50DF               	movf	indf2,w,c
  9321   003B98  B4D8               	btfsc	status,2,c
  9322   003B9A  EFD1  F01D         	goto	u7161
  9323   003B9E  EFD3  F01D         	goto	u7160
  9324   003BA2                     u7161:
  9325   003BA2  EFD7  F01D         	goto	l5758
  9326   003BA6                     u7160:
  9327   003BA6                     
  9328                           ;dc_motor_v1.c: 154:             mR->power--;
  9329   003BA6  5014               	movf	forward@mR^0,w,c
  9330   003BA8  6ED9               	movwf	fsr2l,c
  9331   003BAA  6ADA               	clrf	fsr2h,c
  9332   003BAC  06DF               	decf	indf2,f,c
  9333   003BAE                     l5758:
  9334                           
  9335                           ;dc_motor_v1.c: 156:         if(mL->power > 0 ){
  9336   003BAE  5013               	movf	forward@mL^0,w,c
  9337   003BB0  6ED9               	movwf	fsr2l,c
  9338   003BB2  6ADA               	clrf	fsr2h,c
  9339   003BB4  50DF               	movf	indf2,w,c
  9340   003BB6  B4D8               	btfsc	status,2,c
  9341   003BB8  EFE0  F01D         	goto	u7171
  9342   003BBC  EFE2  F01D         	goto	u7170
  9343   003BC0                     u7171:
  9344   003BC0  EFE6  F01D         	goto	l5762
  9345   003BC4                     u7170:
  9346   003BC4                     
  9347                           ;dc_motor_v1.c: 157:             mL->power--;
  9348   003BC4  5013               	movf	forward@mL^0,w,c
  9349   003BC6  6ED9               	movwf	fsr2l,c
  9350   003BC8  6ADA               	clrf	fsr2h,c
  9351   003BCA  06DF               	decf	indf2,f,c
  9352   003BCC                     l5762:
  9353                           
  9354                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  9355   003BCC  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9356   003BD0  ECF2  F020         	call	_setMotorPWM	;wreg free
  9357   003BD4                     
  9358                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  9359   003BD4  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9360   003BD8  ECF2  F020         	call	_setMotorPWM	;wreg free
  9361   003BDC                     
  9362                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  9363   003BDC  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9364   003BE0  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9365   003BE4  EC7B  F026         	call	_delay_ms_function	;wreg free
  9366   003BE8                     l5768:
  9367                           
  9368                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  9369   003BE8  5013               	movf	forward@mL^0,w,c
  9370   003BEA  6ED9               	movwf	fsr2l,c
  9371   003BEC  6ADA               	clrf	fsr2h,c
  9372   003BEE  50DF               	movf	indf2,w,c
  9373   003BF0  A4D8               	btfss	status,2,c
  9374   003BF2  EFFD  F01D         	goto	u7181
  9375   003BF6  EFFF  F01D         	goto	u7180
  9376   003BFA                     u7181:
  9377   003BFA  EFC8  F01D         	goto	l5754
  9378   003BFE                     u7180:
  9379   003BFE  5014               	movf	forward@mR^0,w,c
  9380   003C00  6ED9               	movwf	fsr2l,c
  9381   003C02  6ADA               	clrf	fsr2h,c
  9382   003C04  50DF               	movf	indf2,w,c
  9383   003C06  A4D8               	btfss	status,2,c
  9384   003C08  EF08  F01E         	goto	u7191
  9385   003C0C  EF0A  F01E         	goto	u7190
  9386   003C10                     u7191:
  9387   003C10  EFC8  F01D         	goto	l5754
  9388   003C14                     u7190:
  9389   003C14  0012               	return		;funcret
  9390   003C16                     __end_of_forward:
  9391                           	callstack 0
  9392                           
  9393 ;; *************** function _backward *****************
  9394 ;; Defined at:
  9395 ;;		line 166 in file "dc_motor_v1.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  Distance_Cal    1    wreg     unsigned char 
  9398 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9399 ;;		 -> motorL(9), 
  9400 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9401 ;;		 -> motorR(9), 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9404 ;;  j               2   26[COMRAM] int 
  9405 ;;  i               2   24[COMRAM] int 
  9406 ;;  delay_time      2   30[COMRAM] int 
  9407 ;;  max_power       2   28[COMRAM] int 
  9408 ;;  acceleration    2    0        int 
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      void 
  9411 ;; Registers used:
  9412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9419 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9420 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;Total ram usage:       14 bytes
  9423 ;; Hardware stack levels used: 1
  9424 ;; Hardware stack levels required when called: 2
  9425 ;; This function calls:
  9426 ;;		___awdiv
  9427 ;;		_delay_ms_function
  9428 ;;		_setMotorPWM
  9429 ;; This function is called by:
  9430 ;;		_calibration_routine
  9431 ;;		_maze_search
  9432 ;;		_maze_return
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text34
  9437   003F12                     __ptext34:
  9438                           	callstack 0
  9439   003F12                     _backward:
  9440                           	callstack 27
  9441                           
  9442                           ;incstack = 0
  9443                           ;backward@Distance_Calibration stored from wreg
  9444   003F12  6E18               	movwf	backward@Distance_Calibration^0,c
  9445   003F14                     
  9446                           ;dc_motor_v1.c: 172:     mL->direction = 0;
  9447   003F14  5013               	movf	backward@mL^0,w,c
  9448   003F16  6ED9               	movwf	fsr2l,c
  9449   003F18  6ADA               	clrf	fsr2h,c
  9450   003F1A  0E01               	movlw	1
  9451   003F1C  26D9               	addwf	fsr2l,f,c
  9452   003F1E  6ADF               	clrf	indf2,c
  9453                           
  9454                           ;dc_motor_v1.c: 173:     mR->direction = 0;
  9455   003F20  5014               	movf	backward@mR^0,w,c
  9456   003F22  6ED9               	movwf	fsr2l,c
  9457   003F24  6ADA               	clrf	fsr2h,c
  9458   003F26  0E01               	movlw	1
  9459   003F28  26D9               	addwf	fsr2l,f,c
  9460   003F2A  6ADF               	clrf	indf2,c
  9461   003F2C                     
  9462                           ;dc_motor_v1.c: 176:     int max_power = 40;
  9463   003F2C  0E00               	movlw	0
  9464   003F2E  6E1E               	movwf	(backward@max_power+1)^0,c
  9465   003F30  0E28               	movlw	40
  9466   003F32  6E1D               	movwf	backward@max_power^0,c
  9467   003F34                     
  9468                           ;dc_motor_v1.c: 178:     int delay_time = acceleration_time/max_power;
  9469   003F34  0E00               	movlw	0
  9470   003F36  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9471   003F38  0E64               	movlw	100
  9472   003F3A  6E01               	movwf	___awdiv@dividend^0,c
  9473   003F3C  0E00               	movlw	0
  9474   003F3E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9475   003F40  0E28               	movlw	40
  9476   003F42  6E03               	movwf	___awdiv@divisor^0,c
  9477   003F44  EC99  F023         	call	___awdiv	;wreg free
  9478   003F48  C001  F01F         	movff	?___awdiv,backward@delay_time
  9479   003F4C  C002  F020         	movff	?___awdiv+1,backward@delay_time+1
  9480   003F50                     
  9481                           ;dc_motor_v1.c: 181:     for(int i=0; i< max_power; i++){
  9482   003F50  0E00               	movlw	0
  9483   003F52  6E1A               	movwf	(backward@i+1)^0,c
  9484   003F54  0E00               	movlw	0
  9485   003F56  6E19               	movwf	backward@i^0,c
  9486   003F58  EFD2  F01F         	goto	l5792
  9487   003F5C                     l5782:
  9488                           
  9489                           ;dc_motor_v1.c: 182:         mL->power = mL->power + 1;
  9490   003F5C  5013               	movf	backward@mL^0,w,c
  9491   003F5E  6ED9               	movwf	fsr2l,c
  9492   003F60  6ADA               	clrf	fsr2h,c
  9493   003F62  5013               	movf	backward@mL^0,w,c
  9494   003F64  6EE1               	movwf	fsr1l,c
  9495   003F66  6AE2               	clrf	fsr1h,c
  9496   003F68  50E7               	movf	indf1,w,c
  9497   003F6A  6E15               	movwf	??_backward^0,c
  9498   003F6C  2815               	incf	??_backward^0,w,c
  9499   003F6E  6EDF               	movwf	indf2,c
  9500                           
  9501                           ;dc_motor_v1.c: 183:         mR->power = mR->power + 1 ;
  9502   003F70  5014               	movf	backward@mR^0,w,c
  9503   003F72  6ED9               	movwf	fsr2l,c
  9504   003F74  6ADA               	clrf	fsr2h,c
  9505   003F76  5014               	movf	backward@mR^0,w,c
  9506   003F78  6EE1               	movwf	fsr1l,c
  9507   003F7A  6AE2               	clrf	fsr1h,c
  9508   003F7C  50E7               	movf	indf1,w,c
  9509   003F7E  6E15               	movwf	??_backward^0,c
  9510   003F80  2815               	incf	??_backward^0,w,c
  9511   003F82  6EDF               	movwf	indf2,c
  9512   003F84                     
  9513                           ;dc_motor_v1.c: 184:         setMotorPWM(mR);
  9514   003F84  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9515   003F88  ECF2  F020         	call	_setMotorPWM	;wreg free
  9516   003F8C                     
  9517                           ;dc_motor_v1.c: 185:         setMotorPWM(mL);
  9518   003F8C  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9519   003F90  ECF2  F020         	call	_setMotorPWM	;wreg free
  9520   003F94                     
  9521                           ;dc_motor_v1.c: 186:         delay_ms_function(delay_time);
  9522   003F94  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9523   003F98  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9524   003F9C  EC7B  F026         	call	_delay_ms_function	;wreg free
  9525   003FA0                     
  9526                           ;dc_motor_v1.c: 187:     }
  9527   003FA0  4A19               	infsnz	backward@i^0,f,c
  9528   003FA2  2A1A               	incf	(backward@i+1)^0,f,c
  9529   003FA4                     l5792:
  9530   003FA4  501D               	movf	backward@max_power^0,w,c
  9531   003FA6  5C19               	subwf	backward@i^0,w,c
  9532   003FA8  501A               	movf	(backward@i+1)^0,w,c
  9533   003FAA  0A80               	xorlw	128
  9534   003FAC  6E15               	movwf	??_backward^0,c
  9535   003FAE  501E               	movf	(backward@max_power+1)^0,w,c
  9536   003FB0  0A80               	xorlw	128
  9537   003FB2  5815               	subwfb	??_backward^0,w,c
  9538   003FB4  A0D8               	btfss	status,0,c
  9539   003FB6  EFDF  F01F         	goto	u7201
  9540   003FBA  EFE1  F01F         	goto	u7200
  9541   003FBE                     u7201:
  9542   003FBE  EFAE  F01F         	goto	l5782
  9543   003FC2                     u7200:
  9544   003FC2                     
  9545                           ;dc_motor_v1.c: 192:     for(int j=0; j<Distance_Calibration; j++){
  9546   003FC2  0E00               	movlw	0
  9547   003FC4  6E1C               	movwf	(backward@j+1)^0,c
  9548   003FC6  0E00               	movlw	0
  9549   003FC8  6E1B               	movwf	backward@j^0,c
  9550   003FCA  EFF0  F01F         	goto	l318
  9551   003FCE                     l5796:
  9552                           
  9553                           ;dc_motor_v1.c: 193:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9554   003FCE  0ED0               	movlw	208
  9555   003FD0  6E15               	movwf	??_backward^0,c
  9556   003FD2  0ECA               	movlw	202
  9557   003FD4                     u7737:
  9558   003FD4  2EE8               	decfsz	wreg,f,c
  9559   003FD6  D7FE               	bra	u7737
  9560   003FD8  2E15               	decfsz	??_backward^0,f,c
  9561   003FDA  D7FC               	bra	u7737
  9562   003FDC                     
  9563                           ;dc_motor_v1.c: 194:     }
  9564   003FDC  4A1B               	infsnz	backward@j^0,f,c
  9565   003FDE  2A1C               	incf	(backward@j+1)^0,f,c
  9566   003FE0                     l318:
  9567   003FE0  5018               	movf	backward@Distance_Calibration^0,w,c
  9568   003FE2  6E15               	movwf	??_backward^0,c
  9569   003FE4  6A16               	clrf	(??_backward+1)^0,c
  9570   003FE6  5015               	movf	??_backward^0,w,c
  9571   003FE8  5C1B               	subwf	backward@j^0,w,c
  9572   003FEA  501C               	movf	(backward@j+1)^0,w,c
  9573   003FEC  0A80               	xorlw	128
  9574   003FEE  6E17               	movwf	(??_backward+2)^0,c
  9575   003FF0  5016               	movf	(??_backward+1)^0,w,c
  9576   003FF2  0A80               	xorlw	128
  9577   003FF4  5817               	subwfb	(??_backward+2)^0,w,c
  9578   003FF6  A0D8               	btfss	status,0,c
  9579   003FF8  EF00  F020         	goto	u7211
  9580   003FFC  EF02  F020         	goto	u7210
  9581   004000                     u7211:
  9582   004000  EFE7  F01F         	goto	l5796
  9583   004004                     u7210:
  9584   004004  EF30  F020         	goto	l5814
  9585   004008                     l5800:
  9586                           
  9587                           ;dc_motor_v1.c: 198:         if(mR->power > 0 ){
  9588   004008  5014               	movf	backward@mR^0,w,c
  9589   00400A  6ED9               	movwf	fsr2l,c
  9590   00400C  6ADA               	clrf	fsr2h,c
  9591   00400E  50DF               	movf	indf2,w,c
  9592   004010  B4D8               	btfsc	status,2,c
  9593   004012  EF0D  F020         	goto	u7221
  9594   004016  EF0F  F020         	goto	u7220
  9595   00401A                     u7221:
  9596   00401A  EF13  F020         	goto	l5804
  9597   00401E                     u7220:
  9598   00401E                     
  9599                           ;dc_motor_v1.c: 199:             mR->power--;
  9600   00401E  5014               	movf	backward@mR^0,w,c
  9601   004020  6ED9               	movwf	fsr2l,c
  9602   004022  6ADA               	clrf	fsr2h,c
  9603   004024  06DF               	decf	indf2,f,c
  9604   004026                     l5804:
  9605                           
  9606                           ;dc_motor_v1.c: 201:         if(mL->power > 0 ){
  9607   004026  5013               	movf	backward@mL^0,w,c
  9608   004028  6ED9               	movwf	fsr2l,c
  9609   00402A  6ADA               	clrf	fsr2h,c
  9610   00402C  50DF               	movf	indf2,w,c
  9611   00402E  B4D8               	btfsc	status,2,c
  9612   004030  EF1C  F020         	goto	u7231
  9613   004034  EF1E  F020         	goto	u7230
  9614   004038                     u7231:
  9615   004038  EF22  F020         	goto	l5808
  9616   00403C                     u7230:
  9617   00403C                     
  9618                           ;dc_motor_v1.c: 202:             mL->power--;
  9619   00403C  5013               	movf	backward@mL^0,w,c
  9620   00403E  6ED9               	movwf	fsr2l,c
  9621   004040  6ADA               	clrf	fsr2h,c
  9622   004042  06DF               	decf	indf2,f,c
  9623   004044                     l5808:
  9624                           
  9625                           ;dc_motor_v1.c: 204:         setMotorPWM(mR);
  9626   004044  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9627   004048  ECF2  F020         	call	_setMotorPWM	;wreg free
  9628   00404C                     
  9629                           ;dc_motor_v1.c: 205:         setMotorPWM(mL);
  9630   00404C  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9631   004050  ECF2  F020         	call	_setMotorPWM	;wreg free
  9632   004054                     
  9633                           ;dc_motor_v1.c: 206:         delay_ms_function(delay_time);
  9634   004054  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9635   004058  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9636   00405C  EC7B  F026         	call	_delay_ms_function	;wreg free
  9637   004060                     l5814:
  9638                           
  9639                           ;dc_motor_v1.c: 197:     while(mL->power || mR->power > 0){
  9640   004060  5013               	movf	backward@mL^0,w,c
  9641   004062  6ED9               	movwf	fsr2l,c
  9642   004064  6ADA               	clrf	fsr2h,c
  9643   004066  50DF               	movf	indf2,w,c
  9644   004068  A4D8               	btfss	status,2,c
  9645   00406A  EF39  F020         	goto	u7241
  9646   00406E  EF3B  F020         	goto	u7240
  9647   004072                     u7241:
  9648   004072  EF04  F020         	goto	l5800
  9649   004076                     u7240:
  9650   004076  5014               	movf	backward@mR^0,w,c
  9651   004078  6ED9               	movwf	fsr2l,c
  9652   00407A  6ADA               	clrf	fsr2h,c
  9653   00407C  50DF               	movf	indf2,w,c
  9654   00407E  A4D8               	btfss	status,2,c
  9655   004080  EF44  F020         	goto	u7251
  9656   004084  EF46  F020         	goto	u7250
  9657   004088                     u7251:
  9658   004088  EF04  F020         	goto	l5800
  9659   00408C                     u7250:
  9660   00408C  0012               	return		;funcret
  9661   00408E                     __end_of_backward:
  9662                           	callstack 0
  9663                           
  9664 ;; *************** function _setMotorPWM *****************
  9665 ;; Defined at:
  9666 ;;		line 76 in file "dc_motor_v1.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;  m               1   13[COMRAM] PTR struct DC_motor
  9669 ;;		 -> motorR(9), motorL(9), 
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;  negDuty         1   17[COMRAM] unsigned char 
  9672 ;;  posDuty         1   16[COMRAM] unsigned char 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9686 ;;Total ram usage:        5 bytes
  9687 ;; Hardware stack levels used: 1
  9688 ;; Hardware stack levels required when called: 1
  9689 ;; This function calls:
  9690 ;;		___lwdiv
  9691 ;;		___wmul
  9692 ;; This function is called by:
  9693 ;;		_forward
  9694 ;;		_backward
  9695 ;;		_leftTURN
  9696 ;;		_rightTURN
  9697 ;;		_stop
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text35
  9702   0041E4                     __ptext35:
  9703                           	callstack 0
  9704   0041E4                     _setMotorPWM:
  9705                           	callstack 27
  9706   0041E4                     
  9707                           ;dc_motor_v1.c: 76: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 77: {;dc_motor_v1.c: 78
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 80:     if(m->brakemode) {
  9708   0041E4  500E               	movf	setMotorPWM@m^0,w,c
  9709   0041E6  6ED9               	movwf	fsr2l,c
  9710   0041E8  6ADA               	clrf	fsr2h,c
  9711   0041EA  0E02               	movlw	2
  9712   0041EC  26D9               	addwf	fsr2l,f,c
  9713   0041EE  50DF               	movf	indf2,w,c
  9714   0041F0  B4D8               	btfsc	status,2,c
  9715   0041F2  EFFD  F020         	goto	u6411
  9716   0041F6  EFFF  F020         	goto	u6410
  9717   0041FA                     u6411:
  9718   0041FA  EF2F  F021         	goto	l5386
  9719   0041FE                     u6410:
  9720   0041FE                     
  9721                           ;dc_motor_v1.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9722   0041FE  500E               	movf	setMotorPWM@m^0,w,c
  9723   004200  6ED9               	movwf	fsr2l,c
  9724   004202  6ADA               	clrf	fsr2h,c
  9725   004204  50DF               	movf	indf2,w,c
  9726   004206  6E0F               	movwf	??_setMotorPWM^0,c
  9727   004208  500F               	movf	??_setMotorPWM^0,w,c
  9728   00420A  6E01               	movwf	___wmul@multiplier^0,c
  9729   00420C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9730   00420E  500E               	movf	setMotorPWM@m^0,w,c
  9731   004210  6ED9               	movwf	fsr2l,c
  9732   004212  6ADA               	clrf	fsr2h,c
  9733   004214  0E03               	movlw	3
  9734   004216  26D9               	addwf	fsr2l,f,c
  9735   004218  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9736   00421C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9737   004220  ECBB  F026         	call	___wmul	;wreg free
  9738   004224  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9739   004228  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9740   00422C  0E00               	movlw	0
  9741   00422E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9742   004230  0E64               	movlw	100
  9743   004232  6E09               	movwf	___lwdiv@divisor^0,c
  9744   004234  ECF3  F024         	call	___lwdiv	;wreg free
  9745   004238  500E               	movf	setMotorPWM@m^0,w,c
  9746   00423A  6ED9               	movwf	fsr2l,c
  9747   00423C  6ADA               	clrf	fsr2h,c
  9748   00423E  0E03               	movlw	3
  9749   004240  26D9               	addwf	fsr2l,f,c
  9750   004242  50DF               	movf	indf2,w,c
  9751   004244  6E10               	movwf	(??_setMotorPWM+1)^0,c
  9752   004246  5007               	movf	?___lwdiv^0,w,c
  9753   004248  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  9754   00424A  6E11               	movwf	setMotorPWM@posDuty^0,c
  9755   00424C                     
  9756                           ;dc_motor_v1.c: 82:         negDuty=m->PWMperiod;
  9757   00424C  500E               	movf	setMotorPWM@m^0,w,c
  9758   00424E  6ED9               	movwf	fsr2l,c
  9759   004250  6ADA               	clrf	fsr2h,c
  9760   004252  0E03               	movlw	3
  9761   004254  26D9               	addwf	fsr2l,f,c
  9762   004256  50DF               	movf	indf2,w,c
  9763   004258  6E12               	movwf	setMotorPWM@negDuty^0,c
  9764                           
  9765                           ;dc_motor_v1.c: 83:     }
  9766   00425A  EF50  F021         	goto	l5390
  9767   00425E                     l5386:
  9768                           
  9769                           ;dc_motor_v1.c: 85:         posDuty=0;
  9770   00425E  0E00               	movlw	0
  9771   004260  6E11               	movwf	setMotorPWM@posDuty^0,c
  9772   004262                     
  9773                           ;dc_motor_v1.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9774   004262  500E               	movf	setMotorPWM@m^0,w,c
  9775   004264  6ED9               	movwf	fsr2l,c
  9776   004266  6ADA               	clrf	fsr2h,c
  9777   004268  50DF               	movf	indf2,w,c
  9778   00426A  6E0F               	movwf	??_setMotorPWM^0,c
  9779   00426C  500F               	movf	??_setMotorPWM^0,w,c
  9780   00426E  6E01               	movwf	___wmul@multiplier^0,c
  9781   004270  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9782   004272  500E               	movf	setMotorPWM@m^0,w,c
  9783   004274  6ED9               	movwf	fsr2l,c
  9784   004276  6ADA               	clrf	fsr2h,c
  9785   004278  0E03               	movlw	3
  9786   00427A  26D9               	addwf	fsr2l,f,c
  9787   00427C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9788   004280  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9789   004284  ECBB  F026         	call	___wmul	;wreg free
  9790   004288  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9791   00428C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9792   004290  0E00               	movlw	0
  9793   004292  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9794   004294  0E64               	movlw	100
  9795   004296  6E09               	movwf	___lwdiv@divisor^0,c
  9796   004298  ECF3  F024         	call	___lwdiv	;wreg free
  9797   00429C  5007               	movf	?___lwdiv^0,w,c
  9798   00429E  6E12               	movwf	setMotorPWM@negDuty^0,c
  9799   0042A0                     l5390:
  9800                           
  9801                           ;dc_motor_v1.c: 89:     if (m->direction) {
  9802   0042A0  500E               	movf	setMotorPWM@m^0,w,c
  9803   0042A2  6ED9               	movwf	fsr2l,c
  9804   0042A4  6ADA               	clrf	fsr2h,c
  9805   0042A6  0E01               	movlw	1
  9806   0042A8  26D9               	addwf	fsr2l,f,c
  9807   0042AA  50DF               	movf	indf2,w,c
  9808   0042AC  B4D8               	btfsc	status,2,c
  9809   0042AE  EF5B  F021         	goto	u6421
  9810   0042B2  EF5D  F021         	goto	u6420
  9811   0042B6                     u6421:
  9812   0042B6  EF7D  F021         	goto	l5394
  9813   0042BA                     u6420:
  9814   0042BA                     
  9815                           ;dc_motor_v1.c: 90:         *(m->posDutyHighByte)=posDuty;
  9816   0042BA  500E               	movf	setMotorPWM@m^0,w,c
  9817   0042BC  6ED9               	movwf	fsr2l,c
  9818   0042BE  6ADA               	clrf	fsr2h,c
  9819   0042C0  0E05               	movlw	5
  9820   0042C2  26D9               	addwf	fsr2l,f,c
  9821   0042C4  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9822   0042C8  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9823   0042CC  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9824   0042D0  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9825   0042D4  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9826                           
  9827                           ;dc_motor_v1.c: 91:         *(m->negDutyHighByte)=negDuty;
  9828   0042D8  500E               	movf	setMotorPWM@m^0,w,c
  9829   0042DA  6ED9               	movwf	fsr2l,c
  9830   0042DC  6ADA               	clrf	fsr2h,c
  9831   0042DE  0E07               	movlw	7
  9832   0042E0  26D9               	addwf	fsr2l,f,c
  9833   0042E2  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9834   0042E6  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9835   0042EA  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9836   0042EE  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9837   0042F2  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9838                           
  9839                           ;dc_motor_v1.c: 92:     } else {
  9840   0042F6  EF9B  F021         	goto	l290
  9841   0042FA                     l5394:
  9842                           
  9843                           ;dc_motor_v1.c: 93:         *(m->posDutyHighByte)=negDuty;
  9844   0042FA  500E               	movf	setMotorPWM@m^0,w,c
  9845   0042FC  6ED9               	movwf	fsr2l,c
  9846   0042FE  6ADA               	clrf	fsr2h,c
  9847   004300  0E05               	movlw	5
  9848   004302  26D9               	addwf	fsr2l,f,c
  9849   004304  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9850   004308  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9851   00430C  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9852   004310  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9853   004314  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9854                           
  9855                           ;dc_motor_v1.c: 94:         *(m->negDutyHighByte)=posDuty;
  9856   004318  500E               	movf	setMotorPWM@m^0,w,c
  9857   00431A  6ED9               	movwf	fsr2l,c
  9858   00431C  6ADA               	clrf	fsr2h,c
  9859   00431E  0E07               	movlw	7
  9860   004320  26D9               	addwf	fsr2l,f,c
  9861   004322  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9862   004326  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9863   00432A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9864   00432E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9865   004332  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9866   004336                     l290:
  9867   004336  0012               	return		;funcret
  9868   004338                     __end_of_setMotorPWM:
  9869                           	callstack 0
  9870                           
  9871 ;; *************** function ___wmul *****************
  9872 ;; Defined at:
  9873 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  multiplier      2    0[COMRAM] unsigned int 
  9876 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  product         2    4[COMRAM] unsigned int 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  2    0[COMRAM] unsigned int 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0, prodl, prodh
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9892 ;;Total ram usage:        6 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_setMotorPWM
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text36
  9902   004D76                     __ptext36:
  9903                           	callstack 0
  9904   004D76                     ___wmul:
  9905                           	callstack 27
  9906   004D76  5001               	movf	___wmul@multiplier^0,w,c
  9907   004D78  0203               	mulwf	___wmul@multiplicand^0,c
  9908   004D7A  CFF3 F005          	movff	prodl,___wmul@product
  9909   004D7E  CFF4 F006          	movff	prodh,___wmul@product+1
  9910   004D82  5001               	movf	___wmul@multiplier^0,w,c
  9911   004D84  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9912   004D86  50F3               	movf	243,w,c
  9913   004D88  2606               	addwf	(___wmul@product+1)^0,f,c
  9914   004D8A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9915   004D8C  0203               	mulwf	___wmul@multiplicand^0,c
  9916   004D8E  50F3               	movf	243,w,c
  9917   004D90  2606               	addwf	(___wmul@product+1)^0,f,c
  9918   004D92  C005  F001         	movff	___wmul@product,?___wmul
  9919   004D96  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9920   004D9A  0012               	return		;funcret
  9921   004D9C                     __end_of___wmul:
  9922                           	callstack 0
  9923                           
  9924 ;; *************** function ___lwdiv *****************
  9925 ;; Defined at:
  9926 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  dividend        2    6[COMRAM] unsigned int 
  9929 ;;  divisor         2    8[COMRAM] unsigned int 
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;  quotient        2   11[COMRAM] unsigned int 
  9932 ;;  counter         1   10[COMRAM] unsigned char 
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  2    6[COMRAM] unsigned int 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9945 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9946 ;;Total ram usage:        7 bytes
  9947 ;; Hardware stack levels used: 1
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_setMotorPWM
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text37
  9956   0049E6                     __ptext37:
  9957                           	callstack 0
  9958   0049E6                     ___lwdiv:
  9959                           	callstack 27
  9960   0049E6  0E00               	movlw	0
  9961   0049E8  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  9962   0049EA  0E00               	movlw	0
  9963   0049EC  6E0C               	movwf	___lwdiv@quotient^0,c
  9964   0049EE  5009               	movf	___lwdiv@divisor^0,w,c
  9965   0049F0  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9966   0049F2  B4D8               	btfsc	status,2,c
  9967   0049F4  EFFE  F024         	goto	u6251
  9968   0049F8  EF00  F025         	goto	u6250
  9969   0049FC                     u6251:
  9970   0049FC  EF28  F025         	goto	l1090
  9971   004A00                     u6250:
  9972   004A00  0E01               	movlw	1
  9973   004A02  6E0B               	movwf	___lwdiv@counter^0,c
  9974   004A04  EF08  F025         	goto	l5262
  9975   004A08                     l5260:
  9976   004A08  90D8               	bcf	status,0,c
  9977   004A0A  3609               	rlcf	___lwdiv@divisor^0,f,c
  9978   004A0C  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9979   004A0E  2A0B               	incf	___lwdiv@counter^0,f,c
  9980   004A10                     l5262:
  9981   004A10  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9982   004A12  EF0D  F025         	goto	u6261
  9983   004A16  EF0F  F025         	goto	u6260
  9984   004A1A                     u6261:
  9985   004A1A  EF04  F025         	goto	l5260
  9986   004A1E                     u6260:
  9987   004A1E                     l5264:
  9988   004A1E  90D8               	bcf	status,0,c
  9989   004A20  360C               	rlcf	___lwdiv@quotient^0,f,c
  9990   004A22  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9991   004A24  5009               	movf	___lwdiv@divisor^0,w,c
  9992   004A26  5C07               	subwf	___lwdiv@dividend^0,w,c
  9993   004A28  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9994   004A2A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9995   004A2C  A0D8               	btfss	status,0,c
  9996   004A2E  EF1B  F025         	goto	u6271
  9997   004A32  EF1D  F025         	goto	u6270
  9998   004A36                     u6271:
  9999   004A36  EF22  F025         	goto	l5272
 10000   004A3A                     u6270:
 10001   004A3A  5009               	movf	___lwdiv@divisor^0,w,c
 10002   004A3C  5E07               	subwf	___lwdiv@dividend^0,f,c
 10003   004A3E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10004   004A40  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10005   004A42  800C               	bsf	___lwdiv@quotient^0,0,c
 10006   004A44                     l5272:
 10007   004A44  90D8               	bcf	status,0,c
 10008   004A46  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10009   004A48  3209               	rrcf	___lwdiv@divisor^0,f,c
 10010   004A4A  2E0B               	decfsz	___lwdiv@counter^0,f,c
 10011   004A4C  EF0F  F025         	goto	l5264
 10012   004A50                     l1090:
 10013   004A50  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
 10014   004A54  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10015   004A58  0012               	return		;funcret
 10016   004A5A                     __end_of___lwdiv:
 10017                           	callstack 0
 10018                           
 10019 ;; *************** function _delay_ms_function *****************
 10020 ;; Defined at:
 10021 ;;		line 68 in file "dc_motor_v1.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;  milliseconds    2    0[COMRAM] unsigned int 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      void 
 10028 ;; Registers used:
 10029 ;;		wreg, status,2, status,0
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10039 ;;Total ram usage:        3 bytes
 10040 ;; Hardware stack levels used: 1
 10041 ;; This function calls:
 10042 ;;		Nothing
 10043 ;; This function is called by:
 10044 ;;		_forward
 10045 ;;		_backward
 10046 ;;		_leftTURN
 10047 ;;		_rightTURN
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text38
 10052   004CF6                     __ptext38:
 10053                           	callstack 0
 10054   004CF6                     _delay_ms_function:
 10055                           	callstack 28
 10056   004CF6                     
 10057                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
 10058   004CF6  EF88  F026         	goto	l280
 10059   004CFA                     l5376:
 10060                           
 10061                           ;dc_motor_v1.c: 70:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10062   004CFA  0E15               	movlw	21
 10063   004CFC  6E03               	movwf	??_delay_ms_function^0,c
 10064   004CFE  0EC6               	movlw	198
 10065   004D00                     u7747:
 10066   004D00  2EE8               	decfsz	wreg,f,c
 10067   004D02  D7FE               	bra	u7747
 10068   004D04  2E03               	decfsz	??_delay_ms_function^0,f,c
 10069   004D06  D7FC               	bra	u7747
 10070   004D08  D000               	nop2	
 10071   004D0A                     
 10072                           ;dc_motor_v1.c: 71:         milliseconds--;
 10073   004D0A  0601               	decf	delay_ms_function@milliseconds^0,f,c
 10074   004D0C  A0D8               	btfss	status,0,c
 10075   004D0E  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
 10076   004D10                     l280:
 10077                           
 10078                           ;dc_motor_v1.c: 69:     while (milliseconds > 0) {
 10079   004D10  5001               	movf	delay_ms_function@milliseconds^0,w,c
 10080   004D12  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
 10081   004D14  A4D8               	btfss	status,2,c
 10082   004D16  EF8F  F026         	goto	u6401
 10083   004D1A  EF91  F026         	goto	u6400
 10084   004D1E                     u6401:
 10085   004D1E  EF7D  F026         	goto	l5376
 10086   004D22                     u6400:
 10087   004D22  0012               	return		;funcret
 10088   004D24                     __end_of_delay_ms_function:
 10089                           	callstack 0
 10090                           
 10091 ;; *************** function ___awdiv *****************
 10092 ;; Defined at:
 10093 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;  dividend        2    0[COMRAM] int 
 10096 ;;  divisor         2    2[COMRAM] int 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;  quotient        2    6[COMRAM] int 
 10099 ;;  sign            1    5[COMRAM] unsigned char 
 10100 ;;  counter         1    4[COMRAM] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  2    0[COMRAM] int 
 10103 ;; Registers used:
 10104 ;;		wreg, status,2, status,0
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10114 ;;Total ram usage:        8 bytes
 10115 ;; Hardware stack levels used: 1
 10116 ;; This function calls:
 10117 ;;		Nothing
 10118 ;; This function is called by:
 10119 ;;		_forward
 10120 ;;		_backward
 10121 ;;		_leftTURN
 10122 ;;		_rightTURN
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           	psect	text39
 10127   004732                     __ptext39:
 10128                           	callstack 0
 10129   004732                     ___awdiv:
 10130                           	callstack 28
 10131   004732  0E00               	movlw	0
 10132   004734  6E06               	movwf	___awdiv@sign^0,c
 10133   004736  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10134   004738  EFA2  F023         	goto	u6430
 10135   00473C  EFA0  F023         	goto	u6431
 10136   004740                     u6431:
 10137   004740  EFA8  F023         	goto	l5404
 10138   004744                     u6430:
 10139   004744  6C03               	negf	___awdiv@divisor^0,c
 10140   004746  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10141   004748  B0D8               	btfsc	status,0,c
 10142   00474A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10143   00474C  0E01               	movlw	1
 10144   00474E  6E06               	movwf	___awdiv@sign^0,c
 10145   004750                     l5404:
 10146   004750  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10147   004752  EFAF  F023         	goto	u6440
 10148   004756  EFAD  F023         	goto	u6441
 10149   00475A                     u6441:
 10150   00475A  EFB5  F023         	goto	l5410
 10151   00475E                     u6440:
 10152   00475E  6C01               	negf	___awdiv@dividend^0,c
 10153   004760  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10154   004762  B0D8               	btfsc	status,0,c
 10155   004764  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10156   004766  0E01               	movlw	1
 10157   004768  1A06               	xorwf	___awdiv@sign^0,f,c
 10158   00476A                     l5410:
 10159   00476A  0E00               	movlw	0
 10160   00476C  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10161   00476E  0E00               	movlw	0
 10162   004770  6E07               	movwf	___awdiv@quotient^0,c
 10163   004772  5003               	movf	___awdiv@divisor^0,w,c
 10164   004774  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10165   004776  B4D8               	btfsc	status,2,c
 10166   004778  EFC0  F023         	goto	u6451
 10167   00477C  EFC2  F023         	goto	u6450
 10168   004780                     u6451:
 10169   004780  EFEA  F023         	goto	l5432
 10170   004784                     u6450:
 10171   004784  0E01               	movlw	1
 10172   004786  6E05               	movwf	___awdiv@counter^0,c
 10173   004788  EFCA  F023         	goto	l5418
 10174   00478C                     l5416:
 10175   00478C  90D8               	bcf	status,0,c
 10176   00478E  3603               	rlcf	___awdiv@divisor^0,f,c
 10177   004790  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10178   004792  2A05               	incf	___awdiv@counter^0,f,c
 10179   004794                     l5418:
 10180   004794  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10181   004796  EFCF  F023         	goto	u6461
 10182   00479A  EFD1  F023         	goto	u6460
 10183   00479E                     u6461:
 10184   00479E  EFC6  F023         	goto	l5416
 10185   0047A2                     u6460:
 10186   0047A2                     l5420:
 10187   0047A2  90D8               	bcf	status,0,c
 10188   0047A4  3607               	rlcf	___awdiv@quotient^0,f,c
 10189   0047A6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10190   0047A8  5003               	movf	___awdiv@divisor^0,w,c
 10191   0047AA  5C01               	subwf	___awdiv@dividend^0,w,c
 10192   0047AC  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10193   0047AE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10194   0047B0  A0D8               	btfss	status,0,c
 10195   0047B2  EFDD  F023         	goto	u6471
 10196   0047B6  EFDF  F023         	goto	u6470
 10197   0047BA                     u6471:
 10198   0047BA  EFE4  F023         	goto	l5428
 10199   0047BE                     u6470:
 10200   0047BE  5003               	movf	___awdiv@divisor^0,w,c
 10201   0047C0  5E01               	subwf	___awdiv@dividend^0,f,c
 10202   0047C2  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10203   0047C4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10204   0047C6  8007               	bsf	___awdiv@quotient^0,0,c
 10205   0047C8                     l5428:
 10206   0047C8  90D8               	bcf	status,0,c
 10207   0047CA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10208   0047CC  3203               	rrcf	___awdiv@divisor^0,f,c
 10209   0047CE  2E05               	decfsz	___awdiv@counter^0,f,c
 10210   0047D0  EFD1  F023         	goto	l5420
 10211   0047D4                     l5432:
 10212   0047D4  5006               	movf	___awdiv@sign^0,w,c
 10213   0047D6  B4D8               	btfsc	status,2,c
 10214   0047D8  EFF0  F023         	goto	u6481
 10215   0047DC  EFF2  F023         	goto	u6480
 10216   0047E0                     u6481:
 10217   0047E0  EFF6  F023         	goto	l5436
 10218   0047E4                     u6480:
 10219   0047E4  6C07               	negf	___awdiv@quotient^0,c
 10220   0047E6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10221   0047E8  B0D8               	btfsc	status,0,c
 10222   0047EA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10223   0047EC                     l5436:
 10224   0047EC  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10225   0047F0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10226   0047F4  0012               	return		;funcret
 10227   0047F6                     __end_of___awdiv:
 10228                           	callstack 0
 10229                           
 10230 ;; *************** function _adjust_calibration *****************
 10231 ;; Defined at:
 10232 ;;		line 25 in file "calibration.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  calibration_    2    0[COMRAM] PTR int 
 10235 ;;		 -> calibration(9), 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;		None
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1    wreg      void 
 10240 ;; Registers used:
 10241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/0
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10249 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10250 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10251 ;;Total ram usage:        6 bytes
 10252 ;; Hardware stack levels used: 1
 10253 ;; This function calls:
 10254 ;;		Nothing
 10255 ;; This function is called by:
 10256 ;;		_calibration_routine
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text40
 10261   00408E                     __ptext40:
 10262                           	callstack 0
 10263   00408E                     _adjust_calibration:
 10264                           	callstack 29
 10265   00408E                     l185:
 10266                           
 10267                           ;calibration.c: 31:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10268   00408E  A68E               	btfss	142,3,c	;volatile
 10269   004090  EF4C  F020         	goto	u6941
 10270   004094  EF4E  F020         	goto	u6940
 10271   004098                     u6941:
 10272   004098  EF55  F020         	goto	l5580
 10273   00409C                     u6940:
 10274   00409C  B48E               	btfsc	142,2,c	;volatile
 10275   00409E  EF53  F020         	goto	u6951
 10276   0040A2  EF55  F020         	goto	u6950
 10277   0040A6                     u6951:
 10278   0040A6  EF47  F020         	goto	l185
 10279   0040AA                     u6950:
 10280   0040AA                     l5580:
 10281                           
 10282                           ;calibration.c: 32:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10283   0040AA  0E09               	movlw	9
 10284   0040AC  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10285   0040AE  0E1E               	movlw	30
 10286   0040B0  6E03               	movwf	??_adjust_calibration^0,c
 10287   0040B2  0EE4               	movlw	228
 10288   0040B4                     u7757:
 10289   0040B4  2EE8               	decfsz	wreg,f,c
 10290   0040B6  D7FE               	bra	u7757
 10291   0040B8  2E03               	decfsz	??_adjust_calibration^0,f,c
 10292   0040BA  D7FC               	bra	u7757
 10293   0040BC  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10294   0040BE  D7FA               	bra	u7757
 10295   0040C0  D000               	nop2	
 10296   0040C2                     
 10297                           ;calibration.c: 34:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10298   0040C2  B68E               	btfsc	142,3,c	;volatile
 10299   0040C4  EF66  F020         	goto	u6961
 10300   0040C8  EF68  F020         	goto	u6960
 10301   0040CC                     u6961:
 10302   0040CC  EF81  F020         	goto	l189
 10303   0040D0                     u6960:
 10304   0040D0  B48E               	btfsc	142,2,c	;volatile
 10305   0040D2  EF6D  F020         	goto	u6971
 10306   0040D6  EF6F  F020         	goto	u6970
 10307   0040DA                     u6971:
 10308   0040DA  EF81  F020         	goto	l189
 10309   0040DE                     u6970:
 10310   0040DE                     
 10311                           ;calibration.c: 36:                 LATHbits.LATH3 = 1;
 10312   0040DE  8680               	bsf	128,3,c	;volatile
 10313                           
 10314                           ;calibration.c: 37:                 LATDbits.LATD7 = 1;
 10315   0040E0  8E7C               	bsf	124,7,c	;volatile
 10316   0040E2                     
 10317                           ;calibration.c: 38:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10318   0040E2  0E52               	movlw	82
 10319   0040E4  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10320   0040E6  0E2B               	movlw	43
 10321   0040E8  6E03               	movwf	??_adjust_calibration^0,c
 10322   0040EA  0E00               	movlw	0
 10323   0040EC                     u7767:
 10324   0040EC  2EE8               	decfsz	wreg,f,c
 10325   0040EE  D7FE               	bra	u7767
 10326   0040F0  2E03               	decfsz	??_adjust_calibration^0,f,c
 10327   0040F2  D7FC               	bra	u7767
 10328   0040F4  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10329   0040F6  D7FA               	bra	u7767
 10330   0040F8  D000               	nop2	
 10331   0040FA                     
 10332                           ;calibration.c: 39:                 LATHbits.LATH3 = 0;
 10333   0040FA  9680               	bcf	128,3,c	;volatile
 10334   0040FC                     
 10335                           ;calibration.c: 40:                 LATDbits.LATD7 = 0;
 10336   0040FC  9E7C               	bcf	124,7,c	;volatile
 10337                           
 10338                           ;calibration.c: 41:                 break;
 10339   0040FE  EFF1  F020         	goto	l195
 10340   004102                     l189:
 10341                           
 10342                           ;calibration.c: 44:                 if(!PORTFbits.RF2){
 10343   004102  B48E               	btfsc	142,2,c	;volatile
 10344   004104  EF86  F020         	goto	u6981
 10345   004108  EF88  F020         	goto	u6980
 10346   00410C                     u6981:
 10347   00410C  EFB6  F020         	goto	l5606
 10348   004110                     u6980:
 10349   004110                     
 10350                           ;calibration.c: 45:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10351   004110  0E11               	movlw	17
 10352   004112  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10353   004114  0E3C               	movlw	60
 10354   004116  6E03               	movwf	??_adjust_calibration^0,c
 10355   004118  0ECB               	movlw	203
 10356   00411A                     u7777:
 10357   00411A  2EE8               	decfsz	wreg,f,c
 10358   00411C  D7FE               	bra	u7777
 10359   00411E  2E03               	decfsz	??_adjust_calibration^0,f,c
 10360   004120  D7FC               	bra	u7777
 10361   004122  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10362   004124  D7FA               	bra	u7777
 10363   004126  0000               	nop	
 10364   004128                     
 10365                           ;calibration.c: 46:                     *calibration_label = *calibration_label + 1;
 10366   004128  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10367   00412C  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10368   004130  CFDE F003          	movff	postinc2,??_adjust_calibration
 10369   004134  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10370   004138  0E01               	movlw	1
 10371   00413A  2603               	addwf	??_adjust_calibration^0,f,c
 10372   00413C  0E00               	movlw	0
 10373   00413E  2204               	addwfc	(??_adjust_calibration+1)^0,f,c
 10374   004140  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10375   004144  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10376   004148  C003  FFDE         	movff	??_adjust_calibration,postinc2
 10377   00414C  C004  FFDD         	movff	??_adjust_calibration+1,postdec2
 10378   004150                     
 10379                           ;calibration.c: 47:                     LATDbits.LATD7 = 1;
 10380   004150  8E7C               	bsf	124,7,c	;volatile
 10381   004152                     
 10382                           ;calibration.c: 48:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10383   004152  0E11               	movlw	17
 10384   004154  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10385   004156  0E3C               	movlw	60
 10386   004158  6E03               	movwf	??_adjust_calibration^0,c
 10387   00415A  0ECB               	movlw	203
 10388   00415C                     u7787:
 10389   00415C  2EE8               	decfsz	wreg,f,c
 10390   00415E  D7FE               	bra	u7787
 10391   004160  2E03               	decfsz	??_adjust_calibration^0,f,c
 10392   004162  D7FC               	bra	u7787
 10393   004164  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10394   004166  D7FA               	bra	u7787
 10395   004168  0000               	nop	
 10396   00416A                     
 10397                           ;calibration.c: 49:                     LATDbits.LATD7 = 0;
 10398   00416A  9E7C               	bcf	124,7,c	;volatile
 10399   00416C                     l5606:
 10400                           
 10401                           ;calibration.c: 52:                 if(!PORTFbits.RF3){
 10402   00416C  B68E               	btfsc	142,3,c	;volatile
 10403   00416E  EFBB  F020         	goto	u6991
 10404   004172  EFBD  F020         	goto	u6990
 10405   004176                     u6991:
 10406   004176  EFEF  F020         	goto	l186
 10407   00417A                     u6990:
 10408   00417A                     
 10409                           ;calibration.c: 53:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10410   00417A  0E11               	movlw	17
 10411   00417C  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10412   00417E  0E3C               	movlw	60
 10413   004180  6E03               	movwf	??_adjust_calibration^0,c
 10414   004182  0ECB               	movlw	203
 10415   004184                     u7797:
 10416   004184  2EE8               	decfsz	wreg,f,c
 10417   004186  D7FE               	bra	u7797
 10418   004188  2E03               	decfsz	??_adjust_calibration^0,f,c
 10419   00418A  D7FC               	bra	u7797
 10420   00418C  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10421   00418E  D7FA               	bra	u7797
 10422   004190  0000               	nop	
 10423   004192                     
 10424                           ;calibration.c: 54:                     *calibration_label = *calibration_label - 1;
 10425   004192  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10426   004196  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10427   00419A  CFDE F003          	movff	postinc2,??_adjust_calibration
 10428   00419E  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10429   0041A2  0EFF               	movlw	255
 10430   0041A4  2403               	addwf	??_adjust_calibration^0,w,c
 10431   0041A6  6E05               	movwf	(??_adjust_calibration+2)^0,c
 10432   0041A8  0EFF               	movlw	255
 10433   0041AA  2004               	addwfc	(??_adjust_calibration+1)^0,w,c
 10434   0041AC  6E06               	movwf	(??_adjust_calibration+3)^0,c
 10435   0041AE  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10436   0041B2  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10437   0041B6  C005  FFDE         	movff	??_adjust_calibration+2,postinc2
 10438   0041BA  C006  FFDD         	movff	??_adjust_calibration+3,postdec2
 10439   0041BE                     
 10440                           ;calibration.c: 55:                     LATHbits.LATH3 = 1;
 10441   0041BE  8680               	bsf	128,3,c	;volatile
 10442   0041C0                     
 10443                           ;calibration.c: 56:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10444   0041C0  0E11               	movlw	17
 10445   0041C2  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10446   0041C4  0E3C               	movlw	60
 10447   0041C6  6E03               	movwf	??_adjust_calibration^0,c
 10448   0041C8  0ECB               	movlw	203
 10449   0041CA                     u7807:
 10450   0041CA  2EE8               	decfsz	wreg,f,c
 10451   0041CC  D7FE               	bra	u7807
 10452   0041CE  2E03               	decfsz	??_adjust_calibration^0,f,c
 10453   0041D0  D7FC               	bra	u7807
 10454   0041D2  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10455   0041D4  D7FA               	bra	u7807
 10456   0041D6  0000               	nop	
 10457   0041D8                     
 10458                           ;calibration.c: 57:                     LATHbits.LATH3 = 0;
 10459   0041D8  9680               	bcf	128,3,c	;volatile
 10460   0041DA  EF47  F020         	goto	l185
 10461   0041DE                     l186:
 10462   0041DE  EF47  F020         	goto	l185
 10463   0041E2                     l195:
 10464   0041E2  0012               	return		;funcret
 10465   0041E4                     __end_of_adjust_calibration:
 10466                           	callstack 0
 10467                           
 10468                           	psect	smallconst
 10469   000E00                     __psmallconst:
 10470                           	callstack 0
 10471   000E00  00                 	db	0
 10472   000E01  00                 	db	0	; dummy byte at the end
 10473   000000                     
 10474                           	psect	rparam
 10475   000000                     
 10476                           	psect	config
 10477                           
 10478                           ;Config register CONFIG1L @ 0x300000
 10479                           ;	External Oscillator mode Selection bits
 10480                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10481                           ;	Power-up default value for COSC bits
 10482                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10483   300000                     	org	3145728
 10484   300000  AA                 	db	170
 10485                           
 10486                           ;Config register CONFIG1H @ 0x300001
 10487                           ;	unspecified, using default values
 10488                           ;	Clock Out Enable bit
 10489                           ;	CLKOUTEN = 0x1, unprogrammed default
 10490                           ;	Clock Switch Enable bit
 10491                           ;	CSWEN = 0x1, unprogrammed default
 10492                           ;	Fail-Safe Clock Monitor Enable bit
 10493                           ;	FCMEN = 0x1, unprogrammed default
 10494   300001                     	org	3145729
 10495   300001  FF                 	db	255
 10496                           
 10497                           ;Config register CONFIG3L @ 0x300004
 10498                           ;	WDT Period Select bits
 10499                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10500                           ;	WDT operating mode
 10501                           ;	WDTE = OFF, WDT Disabled
 10502   300004                     	org	3145732
 10503   300004  9F                 	db	159
 10504                           
 10505                           ;Config register CONFIG3H @ 0x300005
 10506                           ;	unspecified, using default values
 10507                           ;	WDT Window Select bits
 10508                           ;	WDTCWS = 0x7, unprogrammed default
 10509                           ;	WDT input clock selector
 10510                           ;	WDTCCS = 0x7, unprogrammed default
 10511   300005                     	org	3145733
 10512   300005  FF                 	db	255
 10513                           tosu	equ	0xFFF
 10514                           tosh	equ	0xFFE
 10515                           tosl	equ	0xFFD
 10516                           stkptr	equ	0xFFC
 10517                           pclatu	equ	0xFFB
 10518                           pclath	equ	0xFFA
 10519                           pcl	equ	0xFF9
 10520                           tblptru	equ	0xFF8
 10521                           tblptrh	equ	0xFF7
 10522                           tblptrl	equ	0xFF6
 10523                           tablat	equ	0xFF5
 10524                           prodh	equ	0xFF4
 10525                           prodl	equ	0xFF3
 10526                           indf0	equ	0xFEF
 10527                           postinc0	equ	0xFEE
 10528                           postdec0	equ	0xFED
 10529                           preinc0	equ	0xFEC
 10530                           plusw0	equ	0xFEB
 10531                           fsr0h	equ	0xFEA
 10532                           fsr0l	equ	0xFE9
 10533                           wreg	equ	0xFE8
 10534                           indf1	equ	0xFE7
 10535                           postinc1	equ	0xFE6
 10536                           postdec1	equ	0xFE5
 10537                           preinc1	equ	0xFE4
 10538                           plusw1	equ	0xFE3
 10539                           fsr1h	equ	0xFE2
 10540                           fsr1l	equ	0xFE1
 10541                           bsr	equ	0xFE0
 10542                           indf2	equ	0xFDF
 10543                           postinc2	equ	0xFDE
 10544                           postdec2	equ	0xFDD
 10545                           preinc2	equ	0xFDC
 10546                           plusw2	equ	0xFDB
 10547                           fsr2h	equ	0xFDA
 10548                           fsr2l	equ	0xFD9
 10549                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    131     159
    BANK1           256      2     141
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    backward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    calibration_routine@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    calibration_routine@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    calibration_routine@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    maze_return@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    maze_return@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_return@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    maze_search@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    S552DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    S552DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhlllll[1]), 

    switch_calibration@calibration_index	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 


Critical Paths under _main in COMRAM

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _maze_return->_backward
    _maze_return->_forward
    _maze_return->_leftTURN
    _maze_return->_rightTURN
    _calibration_routine->_backward
    _calibration_routine->_forward
    _calibration_routine->_leftTURN
    _calibration_routine->_rightTURN
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    _main->_maze_search

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  173640
                _calibration_routine
                    _initDCmotorsPWM
                        _maze_return
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          8     4      4   96183
                                             93 COMRAM     2     2      0
                                            127 BANK0      4     0      4
                                              0 BANK1      2     2      0
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   57696
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          87    68     19   44962
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   15403
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     926
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     427
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4907
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3802
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1490
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3623
                                             33 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    9446
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _maze_return                                         14    10      4   38697
                                             32 COMRAM    14    10      4
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                  5     1      4   38566
                                             32 COMRAM     5     1      4
                 _adjust_calibration
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
                 _switch_calibration
 ---------------------------------------------------------------------------------
 (2) _switch_calibration                                   4     2      2     782
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                           16    14      2    9365
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                            16    14      2    7205
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                             16    14      2    8465
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _backward                                            16    14      2   10085
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    3081
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     472
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     481
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     754
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1165
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _adjust_calibration                                   6     4      2     844
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration_routine
     _adjust_calibration
     _backward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _forward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _switch_calibration
   _initDCmotorsPWM
   _maze_return
     _backward
     _forward
     _leftTURN
     _rightTURN
   _maze_search
     _backward
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _leftTURN
     _rightTURN
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      8D       7       55.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhl     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     20      0       0      45        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhl      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B      58        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 05:09:10 2024

                     _color_read_Red 4AB8                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4BA8                                   l31 4CBE  
                                 l40 4B56                                   l50 444E  
                                 l34 4DBA                                   l43 4BF6  
                                 l60 19C6                                   l37 4B06  
                                 l70 1AB8                                   l62 1A20  
                                 l46 4BA6                                   l80 1E80  
                                 l72 1AC8                                   l64 1A30  
                                 l74 1B22                                   l58 19B6  
                                 l76 1B32                                   l87 1FFA  
                                 l99 1830                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                     _color_read_Clear 4B58  
                   _color_read_Green 4B08                                  l105 1838  
                                l203 48A6                                  l132 4D4C  
                                l141 4DDA                                  l206 363E  
                                l150 4DC6                                  l135 4D4E  
                                l312 3C14                                  l304 3B68  
                                l144 4DE4                                  l153 4C7E  
                                l218 38E0                                  l138 4D74  
                                l147 4DD0                                  l340 3F10  
                                l332 3E64                                  l326 408C  
                                l318 3FE0                                  l502 2E28  
                                l182 4AB6                                  l280 4D10  
                                l512 2E78                                  l185 408E  
                                l186 41DE                                  l290 4336  
                                l354 3D92                                  l346 3CE6  
                                l178 4A5A                                  l195 41E2  
                                l283 4D22                                  l189 4102  
                                l277 49E4                                  l198 47F6  
                                l199 4864                                  l484 24FA  
                                l477 24F6                                  l830 47F4  
                                l487 29BC                                  l599 4D9A  
                                l864 4612                                  l858 4950  
                                l869 4658                                  l896 4554  
                                wreg 0FE8                         ___flmul@aexp 0048  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
         __end_of_adjust_calibration 41E4                         ___fltol@exp1 000A  
                               l1220 3134                                 l1213 2F3E  
                               l1230 3264                                 l1222 31AC  
                               l1223 319A                                 l1127 26EA  
                               l1144 2804                                 l1136 29BA  
                               l1128 26D8                                 l1217 32A2  
                               l1153 28D4                                 l1129 269E  
                               l1090 4A50                                 l1154 28C2  
                               l1181 363C                                 l1261 39D0  
                               l1254 3938                                 l1183 349C  
                               l1192 34E2                                 l1097 4A58  
                               l1169 4C3C                                 l1257 3A94  
                               l1194 355A                                 l1186 3460  
                               l1195 3548                                 l1268 3A2C  
                               l5000 3004                                 l5010 3066  
                               l5002 3010                                 l5020 30FC  
                               l5012 3072                                 l5004 3020  
                               l5100 44A4                                 l5030 3152  
                               l5022 311A                                 l5014 308E  
                               l5006 303A                                 l5102 44A6  
                               l5040 31BC                                 l5032 3156  
                               l5024 3124                                 l5016 30B8  
                               l5008 304A                                 l5104 44B6  
                               l5200 4C44                                 l6000 2434  
                               l4250 4952                                 l5050 321E  
                               l5042 31C8                                 l5034 3164  
                               l5026 3132                                 l5018 30EE  
                               l5130 4534                                 l5114 44E0  
                               l5106 44BA                                 l5202 4C4C  
                               l6002 2454                                 l4260 49BA  
                               l4252 4962                                 l6020 2A18  
                               l6012 29C4                                 l5060 3286  
                               l5052 3232                                 l5044 31D6  
                               l5036 3192                                 l5028 3144  
                               l5132 4544                                 l5124 4508  
                               l5116 44EA                                 l5108 44C8  
                               l5140 3902                                 l5220 43CE  
                               l5212 4338                                 l5204 4C54  
                               l6004 2468                                 l4180 4AB4  
                               l4172 4A5C                                 l6100 466C  
                               l4270 49D4                                 l4262 49BC  
                               l4254 4988                                 l6030 2AB8  
                               l6022 2A1C                                 l6014 29E0  
                               l6006 29BC                                 l5062 3288  
                               l5054 324C                                 l5046 3200  
                               l5070 4BF8                                 l5126 4514  
                               l5118 44F4                                 l5150 397A  
                               l5142 3948                                 l5222 443E  
                               l5214 436A                                 l5206 4C7A  
                               l5302 4BA8                                 l5310 4B9E  
                               l4174 4A74                                 l6110 4678  
                               l6102 466E                                 l5400 4744  
                               l4272 49DE                                 l4264 49C6  
                               l4256 498C                                 l6040 2B82  
                               l6032 2AD6                                 l6024 2A46  
                               l6016 29F2                                 l5240 45D2  
                               l5232 4556                                 l5080 48E6  
                               l5056 3268                                 l5064 328E  
                               l5048 3204                                 l4600 2516  
                               l5072 4C08                                 l5128 4524  
                               l5160 3A02                                 l5152 3986  
                               l5144 395E                                 l5136 38E4  
                               l5320 19DA                                 l5208 4C7C  
                               l5304 4BEE                                 l4176 4A8E  
                               l6120 4696                                 l6112 467E  
                               l6104 4670                                 l5410 476A  
                               l5402 474C                                 l5226 4D76  
                               l4274 49E0                                 l4266 49C8  
                               l4258 49B0                                 l6050 2DB8  
                               l6042 2C56                                 l6034 2B0E  
                               l6018 29FE                                 l6026 2A64  
                               l5250 4656                                 l5242 45E0  
                               l5234 4584                                 l5082 4914  
                               l5066 3292                                 l5058 3278  
                               l4610 254A                                 l4602 2518  
                               l5170 3A40                                 l5162 3A0E  
                               l5154 39B8                                 l5138 38F4  
                               l5218 437E                                 l5330 1ADC  
                               l5322 1A0C                                 l5314 183A  
                               l4178 4A9C                                 l6130 46B2  
                               l6122 469E                                 l6114 4682  
                               l6106 4674                                 l5420 47A2  
                               l5412 4772                                 l5404 4750  
                               l5260 4A08                                 l5228 4D92  
                               l4276 49E2                                 l4268 49D2  
                               l6052 2DD6                                 l6044 2C74  
                               l6036 2B2C                                 l6028 2A80  
                               l5244 45F2                                 l5236 4594  
                               l5084 4924                                 l5076 48A8  
                               l4620 257C                                 l4604 2528  
                               l4612 2552                                 l5092 4450  
                               l5172 3A64                                 l5164 3A1C  
                               l5156 39BA                                 l5148 3972  
                               l5340 1BF0                                 l5332 1B0E  
                               l5324 1A40                                 l5316 1970  
                               l5308 4B58                                 l5500 11CE  
                               l6140 46D0                                 l6132 46BA  
                               l6124 46A2                                 l6116 4686  
                               l6108 4676                                 l5430 47CE  
                               l5422 47A8                                 l5414 4784  
                               l5406 475E                                 l5270 4A42  
                               l5262 4A10                                 l5254 49E6  
                               l6046 2D48                                 l6038 2B64  
                               l6054 2E28                                 l5246 4600  
                               l5238 45C2                                 l5086 4948  
                               l5078 48D6                                 l4710 2754  
                               l4702 271C                                 l4630 25B2  
                               l4622 2582                                 l4614 2562  
                               l4606 2538                                 l5094 4466  
                               l5174 3A74                                 l5166 3A3A  
                               l5158 39C6                                 l5350 1D3E  
                               l5342 1C48                                 l5334 1B42  
                               l5326 1A72                                 l5318 19A2  
                               l5182 4DD2                                 l5190 4DC8  
                               l5510 12A4                                 l5502 1200  
                               l6150 46E4                                 l6142 46D4  
                               l6134 46C2                                 l6126 46A6  
                               l6118 468E                                 l5600 4150  
                               l5424 47BE                                 l5416 478C  
                               l5432 47D4                                 l5408 4766  
                               l5272 4A44                                 l5264 4A1E  
                               l5256 49EE                                 l6064 2E4A  
                               l6056 2E2E                                 l6048 2D66  
                               l5248 4650                                 l5088 494E  
                               l4712 2758                                 l4704 272C  
                               l4720 2778                                 l4640 25EE  
                               l4632 25C2                                 l4624 2590  
                               l4616 2568                                 l4608 2548  
                               l5176 3A82                                 l5168 3A3C  
                               l5360 1E90                                 l5352 1D9A  
                               l5344 1C7C                                 l5336 1BA8  
                               l5328 1AA4                                 l4800 4D5E  
                               l5184 4DD6                                 l5192 4DCC  
                               l5520 137A                                 l5512 12D6  
                               l5504 120E                                 l5280 4D34  
                               l5440 4C80                                 l6152 46E8  
                               l6144 46D8                                 l6136 46C8  
                               l6128 46AA                                 l5610 4192  
                               l5602 4152                                 l5434 47E4  
                               l5426 47C6                                 l5418 4794  
                               l5274 4A4A                                 l5266 4A24  
                               l5258 4A00                                 l6066 2E58  
                               l6058 2E3C                                 l4810 32D0  
                               l4802 32A4                                 l4722 279E  
                               l4730 27F4                                 l4714 2766  
                               l4706 273A                                 l4650 260C  
                               l4642 25FC                                 l4634 25C4  
                               l4626 2592                                 l4618 257A  
                               l5098 447A                                 l5178 3A84  
                               l5370 1F8A                                 l5362 1EC4  
                               l5354 1DCC                                 l5346 1CB4  
                               l5338 1BBE                                 l5194 4DDC  
                               l5186 4DBE                                 l5290 4AB8  
                               l5530 1474                                 l5522 13AC  
                               l5514 1308                                 l5506 1240  
                               l5282 4D36                                 l5450 4CB2  
                               l5442 4C84                                 l6154 46EC  
                               l6146 46DC                                 l6138 46CC  
                               l6090 465A                                 l5612 41BE  
                               l5604 416A                                 l5436 47EC  
                               l5428 47C8                                 l5268 4A3A  
                               l5380 41E4                                 l5700 3E28  
                               l5620 481C                                 l6068 2E5C  
                               l4900 3504                                 l4820 330A  
                               l4812 32E0                                 l4804 32B0  
                               l4740 2848                                 l4732 281A  
                               l4724 27D2                                 l4716 2768  
                               l4708 2748                                 l4660 2620  
                               l4652 2610                                 l4644 2600  
                               l4628 25A2                                 l4636 25CC  
                               l5372 1FBE                                 l5364 1EDC  
                               l5356 1E24                                 l5348 1CE6  
                               l5196 4DE0                                 l5188 4DC2  
                               l5292 4AFE                                 l5540 154A  
                               l5524 13DE                                 l5532 1482  
                               l5516 133A                                 l5508 1272  
                               l5284 4D38                                 l5276 4D24  
                               l5460 4CBC                                 l5452 4CB4  
                               l5444 4C8E                                 l6156 4700  
                               l6148 46E0                                 l6092 465A  
                               l5614 41C0                                 l5606 416C  
                               l5374 4CF6                                 l5390 42A0  
                               l5382 41FE                                 l5710 3EA2  
                               l5702 3E46                                 l5630 488A  
                               l5622 4844                                 l4910 3576  
                               l4902 3512                                 l4830 3336  
                               l4822 3310                                 l4814 32F0  
                               l4806 32BE                                 l4750 2872  
                               l4742 2856                                 l4734 282A  
                               l4726 27D4                                 l4718 2772  
                               l4670 2634                                 l4662 2624  
                               l4654 2614                                 l4646 2604  
                               l4638 25DC                                 l5366 1F0E  
                               l5358 1E80                                 l5198 4C40  
                               l5550 1620                                 l5542 157C  
                               l5534 14B4                                 l5526 1410  
                               l5518 1348                                 l5470 0F28  
                               l5462 0E02                                 l5286 4D3A  
                               l5278 4D2E                                 l5454 4CB6  
                               l5446 4C9E                                 l6158 4716  
                               l6094 4666                                 l5616 41D8  
                               l5608 417A                                 l5376 4CFA  
                               l5392 42BA                                 l5384 424C  
                               l5800 4008                                 l5720 3ED8  
                               l5712 3EAA                                 l5704 3E52  
                               l5640 3C3A                                 l5632 48A4  
                               l5624 4846                                 l4920 35E2  
                               l4912 3584                                 l4904 3540  
                               l4840 3370                                 l4832 3346  
                               l4824 3316                                 l4816 32F2  
                               l4808 32C0                                 l4760 28A4  
                               l4752 2882                                 l4744 2858  
                               l4728 27E4                                 l4680 2686  
                               l4672 2638                                 l4664 2628  
                               l4656 2618                                 l4648 2608  
                               l5368 1F2A                                 l5296 4B08  
                               l5552 1652                                 l5560 16F6  
                               l5544 15AE                                 l5536 14E6  
                               l5528 1442                                 l5480 1022  
                               l5472 0F5A                                 l5464 0E9A  
                               l5288 4D9E                                 l5456 4CB8  
                               l5448 4CA8                                 l6096 4668  
                               l5378 4D0A                                 l5394 42FA  
                               l5386 425E                                 l5810 404C  
                               l5802 401E                                 l5730 3ABC  
                               l5714 3EC0                                 l5722 3EE4  
                               l5706 3E60                                 l5650 3C9A  
                               l5642 3C56                                 l5634 3C18  
                               l5626 485E                                 l5618 4804  
                               l4930 3630                                 l4922 35FC  
                               l4914 35AE                                 l4842 3386  
                               l4834 3356                                 l4826 3324  
                               l4818 32FA                                 l4770 28FE  
                               l4762 28BA                                 l4746 2866  
                               l4738 283E                                 l4754 2884  
                               l4690 26CA                                 l4682 2696  
                               l4666 262C                                 l4658 261C  
                               l4674 263C                                 l5298 4B4E  
                               l5570 17F0                                 l5562 1728  
                               l5554 1684                                 l5538 1518  
                               l5546 15BC                                 l5490 10F8  
                               l5474 0F8C                                 l5482 1030  
                               l5466 0EEC                                 l5458 4CBA  
                               l6098 466A                                 l5580 40AA  
                               l5396 4732                                 l5388 4262  
                               l5812 4054                                 l5804 4026  
                               l5740 3B14                                 l5732 3ABC  
                               l5724 3EFA                                 l5716 3EC8  
                               l5708 3E8C                                 l5660 3CE2  
                               l5652 3CA6                                 l5644 3C62  
                               l5636 3C32                                 l5628 4872  
                               l5820 3656                                 l4932 3632  
                               l4924 3618                                 l4908 356A  
                               l4916 35B2                                 l4860 33DA  
                               l4844 3396                                 l4852 33B6  
                               l4836 3358                                 l4828 3326  
                               l4940 2E7A                                 l4780 297A  
                               l4772 2938                                 l4748 286E  
                               l4756 2892                                 l4692 26CC  
                               l4684 26AC                                 l4676 2640  
                               l4668 2630                                 l4596 24FC  
                               l5572 1822                                 l5564 175A  
                               l5556 16B6                                 l5548 15EE  
                               l5492 112A                                 l5484 1062  
                               l5476 0FBE                                 l5468 0EF6  
                               l5900 2048                                 l5590 40FA  
                               l5582 40C2                                 l5398 4736  
                               l5806 403C                                 l5814 4060  
                               l5750 3B56                                 l5742 3B1C  
                               l5734 3AD8                                 l5726 3A98  
                               l5718 3ED0                                 l5670 3D4A  
                               l5662 3D0E                                 l5646 3C8A  
                               l5654 3CAA                                 l5638 3C3A  
                               l5830 36B6                                 l5822 3666  
                               l4926 361C                                 l4918 35CC  
                               l4870 342C                                 l4862 33F4  
                               l4854 33C6                                 l4846 339E  
                               l4838 3360                                 l4950 2EB6  
                               l4942 2E86                                 l4790 299A  
                               l4782 297E                                 l4766 28E4  
                               l4774 293A                                 l4758 2896  
                               l4694 26D6                                 l4686 26B8  
                               l4678 266A                                 l4598 2508  
                               l5566 178C                                 l5558 16E8  
                               l5494 115C                                 l5486 1094  
                               l5574 1830                                 l5478 0FF0  
                               l5910 20DA                                 l5902 204A  
                               l5592 40FC                                 l5584 40D0  
                               l5816 4076                                 l5808 4044  
                               l5760 3BC4                                 l5752 3B64  
                               l5744 3B28                                 l5736 3AE4  
                               l5728 3AB4                                 l5680 3D96  
                               l5672 3D52                                 l5664 3D24  
                               l5656 3CC8                                 l5648 3C92  
                               l5840 3720                                 l5832 36D0  
                               l5824 3680                                 l4928 362A  
                               l4880 3488                                 l4872 343C  
                               l4864 3404                                 l4856 33C6  
                               l4848 33A2                                 l4960 2EE8  
                               l4952 2EC6                                 l4944 2E94  
                               l4792 29A8                                 l4784 298C  
                               l4776 294A                                 l4768 28F0  
                               l4696 26F8                                 l4688 26BC  
                               l5568 17BE                                 l5488 10C6  
                               l5496 116A                                 l5920 214A  
                               l5912 20F6                                 l5904 204C  
                               l5586 40DE                                 l5578 409C  
                               l5770 3BFE                                 l5762 3BCC  
                               l5754 3B90                                 l5738 3B0C  
                               l5746 3B2C                                 l5690 3DE0  
                               l5682 3DB0                                 l5674 3D5A  
                               l5666 3D2C                                 l5658 3CD4  
                               l5850 377C                                 l5842 372C  
                               l5834 36DC                                 l5826 368C  
                               l5818 363E                                 l4890 34C8  
                               l4882 348A                                 l4874 3450  
                               l4866 3414                                 l4970 2F28  
                               l4962 2EF6                                 l4954 2ECC  
                               l4946 2E96                                 l4794 29AA  
                               l4786 2992                                 l4778 295A  
                               l4698 2708                                 l5498 119C  
                               l5930 2184                                 l5922 215C  
                               l5914 20FC                                 l5906 205E  
                               l5596 4110                                 l5588 40E2  
                               l5780 3F50                                 l5772 3F14  
                               l5764 3BD4                                 l5756 3BA6  
                               l5748 3B4A                                 l5692 3E08  
                               l5684 3DB8                                 l5668 3D42  
                               l5676 3D66                                 l5860 37E6  
                               l5852 3796                                 l5844 3746  
                               l5836 36F6                                 l5828 36A6  
                               l4892 34D2                                 l4884 349A  
                               l4876 345E                                 l4868 3424  
                               l4980 2F72                                 l4972 2F2E  
                               l4964 2EF8                                 l4956 2EDC  
                               l4948 2EA6                                 l4788 2994  
                               l5940 21E4                                 l5932 2186  
                               l5924 2160                                 l5916 2118  
                               l5908 20CC                                 l5598 4128  
                               l5790 3FA0                                 l5782 3F5C  
                               l5774 3F2C                                 l5766 3BDC  
                               l5758 3BAE                                 l5694 3E10  
                               l5686 3DB8                                 l5678 3D7C  
                               l5870 3846                                 l5862 37F6  
                               l5854 37A6                                 l5846 3756  
                               l5838 3706                                 l4894 34E0  
                               l4886 34AC                                 l4878 346A  
                               l4990 2FC2                                 l4982 2F7E  
                               l4974 2F4E                                 l4966 2F08  
                               l4958 2EE2                                 l4798 4D4E  
                               l5950 2244                                 l5942 21E6  
                               l5934 21A0                                 l5926 2162  
                               l5918 2138                                 l5784 3F84  
                               l5792 3FA4                                 l5776 3F34  
                               l5768 3BE8                                 l5696 3E18  
                               l5688 3DD4                                 l5880 38B0  
                               l5872 3860                                 l5864 3810  
                               l5856 37C0                                 l5848 3770  
                               l4888 34C2                                 l4896 34F2  
                               l4992 2FCE                                 l4984 2F88  
                               l4976 2F5E                                 l4968 2F18  
                               l5960 22B0                                 l5952 2246  
                               l5944 2200                                 l5928 2174  
                               l5936 21C0                                 l5794 3FC2  
                               l5786 3F8C                                 l5778 3F34  
                               l5698 3E24                                 l5882 38BC  
                               l5874 386C                                 l5866 381C  
                               l5858 37CC                                 l4898 3500  
                               l4994 2FDA                                 l4986 2F9E  
                               l5962 22C0                                 l5970 2318  
                               l5954 2260                                 l5938 21D4  
                               l5946 2220                                 l5890 2018  
                               l5796 3FCE                                 l5788 3F94  
                               l5884 38D4                                 l5876 3886  
                               l5868 3836                                 l4996 2FE8  
                               l4988 2FAA                                 l5980 2374  
                               l5972 232C                                 l5964 22C2  
                               l5956 227C                                 l5948 2234  
                               l5892 201A                                 l5798 3FDC  
                               l5878 3896                                 l4998 2FF4  
                               l5990 23D4                                 l5974 233C  
                               l5982 2394                                 l5966 22DC  
                               l5958 229C                                 l5894 201C  
                               l5886 1FFC                                 l5984 23A8  
                               l5992 23F4                                 l5976 233E  
                               l5968 22F8                                 l5896 2038  
                               l5888 2000                                 l5994 2408  
                               l5986 23B8                                 l5978 2358  
                               l5898 203C                                 l5996 2418  
                               l5988 23BA                                 l5998 241A  
                       _BAUD4CONbits 0EE9                                 _T2PR 0FBC  
                               u5200 25B2                                 u6000 4466  
                               u5201 25AE                                 u6001 4462  
                               u5210 25EE                                 u6010 449A  
                               u5211 25EA                                 u5300 2708  
                               u5220 25FC                                 u5140 2516  
                               u6020 44C8                                 u6100 39B4  
                               u5301 2704                                 u5221 25F8  
                               u5141 2512                                 u6021 44C4  
                               u6101 39B0                                 u5310 273A  
                               u5230 266A                                 u5150 2528  
                               u6030 44DC                                 u6110 39FE  
                               u5311 2736                                 u5231 2666  
                               u5151 2524                                 u6031 44D8  
                               u6015 4490                                 u6111 39FA  
                               u7000 4804                                 u6200 4584  
                               u5400 2882                                 u5320 2748  
                               u5240 2682                                 u5160 2538  
                               u6040 4504                                 u6120 3A1C  
                               u7001 4800                                 u6201 4580  
                               u5401 287E                                 u5321 2744  
                               u5241 267C                                 u5161 2534  
                               u6041 4500                                 u6121 3A18  
                               u7010 4872                                 u6210 45C2  
                               u5410 2892                                 u5330 2766  
                               u5250 2684                                 u5170 257A  
                               u6050 4524                                 u6130 3A2C  
                               u7011 486E                                 u6211 45BE  
                               u5411 288E                                 u5331 2762  
                               u5171 2576                                 u6051 4520  
                               u6131 3A28                                 u7100 3EA2  
                               u7020 3CC8                                 u6220 45E0  
                               u5500 297A                                 u5420 28A4  
                               u5340 279E                                 u5260 26AC  
                               u5180 2590                                 u6060 4534  
                               u6140 3A3A                                 u6300 1A0C  
                               u7101 3E9E                                 u7021 3CC4  
                               u6221 45DC                                 u5501 2976  
                               u5421 28A0                                 u5341 279A  
                               u5261 26A8                                 u5181 258C  
                               u6061 4530                                 u6141 3A36  
                               u6301 1A08                                 u7110 3EC0  
                               u7030 3D0A                                 u6230 4600  
                               u5510 298C                                 u5430 28BA  
                               u5350 27E4                                 u5270 26CA  
                               u5190 25A2                                 u6150 3A74  
                               u6070 38F4                                 u6310 1A72  
                               u4710 4A9C                                 u7111 3EBC  
                               u7031 3D06                                 u6231 45FC  
                               u5511 2988                                 u5431 28B6  
                               u5351 27E0                                 u5271 26C6  
                               u5191 259E                                 u6151 3A70  
                               u6071 38F0                                 u6311 1A6E  
                               u4711 4A98                                 u6400 4D22  
                               u7200 3FC2                                 u7120 3EFA  
                               u7040 3D24                                 u6240 4650  
                               u5600 3346                                 u5520 29A8  
                               u5440 28D0                                 u5360 281A  
                               u5280 26EA                                 u6160 3A82  
                               u6080 3902                                 u6320 1AA4  
                               u6401 4D1E                                 u7201 3FBE  
                               u7121 3EF6                                 u7041 3D20  
                               u6241 464C                                 u5601 3342  
                               u5521 29A4                                 u5441 28CC  
                               u5361 2816                                 u5281 26E6  
                               u6161 3A7E                                 u6081 38FE  
                               u6321 1AA0                                 u6250 4A00  
                               u6410 41FE                                 u7210 4004  
                               u7130 3F10                                 u7050 3D42  
                               u5610 3386                                 u5450 28E4  
                               u5370 282A                                 u5290 26F8  
                               u6090 395E                                 u6330 1B0E  
                               u5530 4D5E                                 u6170 4C68  
                               u6251 49FC                                 u6411 41FA  
                               u7211 4000                                 u7131 3F0C  
                               u7051 3D3E                                 u5611 3382  
                               u5451 28E0                                 u5371 2826  
                               u5291 26F4                                 u6091 395A  
                               u6331 1B0A                                 u5531 4D5A  
                               u6171 4C60                                 u6260 4A1E  
                               u6420 42BA                                 u7220 401E  
                               u7140 3B4A                                 u7060 3D7C  
                               u7300 3796                                 u5700 3512  
                               u5620 33C6                                 u5460 28FE  
                               u5380 2856                                 u6340 1BA8  
                               u5540 4D74                                 u6500 0F5A  
                               u6261 4A1A                                 u6421 42B6  
                               u7221 401A                                 u7141 3B46  
                               u7061 3D78                                 u7301 3792  
                               u5701 350E                                 u5621 33C2  
                               u5461 28FA                                 u5381 2852  
                               u6341 1BA4                                 u5541 4D70  
                               u6501 0F56                                 u6430 4744  
                               u6270 4A3A                                 u7230 403C  
                               u7150 3B8C                                 u7070 3D92  
                               u7310 37E6                                 u5710 3540  
                               u5630 343C                                 u5550 32BE  
                               u5470 2938                                 u5390 2866  
                               u6190 436A                                 u6350 1BF0  
                               u6510 0F8C                                 u6431 4740  
                               u6271 4A36                                 u7231 4038  
                               u7151 3B88                                 u7071 3D8E  
                               u7311 37E2                                 u5711 353C  
                               u5631 3438                                 u5551 32BA  
                               u5471 2934                                 u5391 2862  
                               u6191 4366                                 u6351 1BEC  
                               u6511 0F88                                 u6440 475E  
                               u7240 4076                                 u7160 3BA6  
                               u7080 3E46                                 u7320 3836  
                               u5720 3556                                 u5640 345E  
                               u5560 32D0                                 u5800 2EB6  
                               u5480 294A                                 u6360 1CE6  
                               u6280 1970                                 u6600 115C  
                               u6520 0FBE                                 u7400 2234  
                               u6441 475A                                 u7241 4072  
                               u7161 3BA2                                 u7081 3E42  
                               u7321 3832                                 u5721 3552  
                               u5641 345A                                 u5561 32CC  
                               u5801 2EB2                                 u5481 2946  
                               u6361 1CE2                                 u6281 196C  
                               u6601 1158                                 u6521 0FBA  
                               u7401 2230                                 u6450 4784  
                               u7250 408C                                 u7170 3BC4  
                               u7090 3E88                                 u7330 3886  
                               u5730 356A                                 u5650 3488  
                               u5570 32E0                                 u5810 2EF6  
                               u5490 295A                                 u6370 1DCC  
                               u6290 19A2                                 u6610 119C  
                               u6530 0FF0                                 u7410 22B0  
                               u6451 4780                                 u7251 4088  
                               u7171 3BC0                                 u7091 3E84  
                               u7331 3882                                 u5731 3566  
                               u5651 3484                                 u5571 32DC  
                               u5811 2EF2                                 u5491 2956  
                               u6371 1DC8                                 u6291 199E  
                               u6611 1198                                 u6531 0FEC  
                               u7411 22AC                                 u6460 47A2  
                               u7180 3BFE                                 u7340 38D4  
                               u7260 3656                                 u7500 2B2C  
                               u5740 3584                                 u5660 34AC  
                               u5580 3324                                 u5900 3192  
                               u5820 2F08                                 u6380 1E90  
                               u6188 4C6A                                 u6700 137A  
                               u6620 11CE                                 u6540 1022  
                               u7420 232C                                 u6461 479E  
                               u7181 3BFA                                 u7341 38D0  
                               u7261 3652                                 u7501 2B28  
                               u5741 3580                                 u5661 34A8  
                               u5581 3320                                 u5901 318E  
                               u5821 2F04                                 u6381 1E8C  
                               u6701 1376                                 u6621 11CA  
                               u6541 101E                                 u7421 2328  
                               u6470 47BE                                 u7190 3C14  
                               u7270 36A6                                 u7510 2B82  
                               u5750 35CC                                 u5670 34C2  
                               u5590 3336                                 u5910 31A8  
                               u5830 2F18                                 u6390 1F0E  
                               u6710 13AC                                 u6630 1200  
                               u6550 1062                                 u7430 23A8  
                               u7350 205E                                 u6471 47BA  
                               u7191 3C10                                 u7271 36A2  
                               u7511 2B7E                                 u5751 35C8  
                               u5671 34BE                                 u5591 3332  
                               u5911 31A4                                 u5831 2F14  
                               u6391 1F0A                                 u6711 13A8  
                               u6631 11FC                                 u6551 105E  
                               u7431 23A4                                 u7351 205A  
                               u6480 47E4                                 u7280 36F6  
                               u7520 2C74                                 u5760 35FC  
                               u5680 34E0                                 u5920 31BC  
                               u5840 2F4E                                 u6800 157C  
                               u6720 13DE                                 u6640 1240  
                               u6560 1094                                 u7440 2408  
                               u7360 2118                                 u6481 47E0  
                               u7281 36F2                                 u7521 2C70  
                               u5761 35F8                                 u5681 34DC  
                               u5921 31B8                                 u5841 2F4A  
                               u6801 1578                                 u6721 13DA  
                               u6641 123C                                 u6561 1090  
                               u7441 2404                                 u7361 2114  
                               u7290 3746                                 u7530 2D66  
                               u5770 362A                                 u5690 3500  
                               u5930 31D6                                 u5850 2F5E  
                               u6810 15AE                                 u6730 1410  
                               u6650 1272                                 u6570 10C6  
                               u6490 0F28                                 u7450 2468  
                               u7370 214A                                 u7291 3742  
                               u7531 2D62                                 u5771 3626  
                               u5691 34FC                                 u5931 31D2  
                               u5851 2F5A                                 u6811 15AA  
                               u6731 140C                                 u6651 126E  
                               u6571 10C2                                 u6491 0F24  
                               u7451 2464                                 u7371 2146  
                               u7540 2DD6                                 u7460 29E0  
                               u5940 321E                                 u5860 30D8  
                               u5780 2E94                                 u6900 178C  
                               u6820 15EE                                 u6740 1442  
                               u6660 12A4                                 u6580 10F8  
                               u7380 2174                                 u7541 2DD2  
                               u7461 29DC                                 u5941 321A  
                               u5781 2E90                                 u6901 1788  
                               u6821 15EA                                 u6741 143E  
                               u6661 12A0                                 u6581 10F4  
                               u7381 2170                                 u7550 2E3C  
                               u7470 2A46                                 u5950 324C  
                               u5870 3132                                 u5790 2EA6  
                               u6910 17BE                                 u6830 1620  
                               u6750 1474                                 u6670 12D6  
                               u6590 112A                                 u7390 21D4  
                               u7551 2E38                                 u7471 2A42  
                               u5951 3248                                 u5871 312E  
                               u5791 2EA2                                 u6911 17BA  
                               u6831 161C                                 u6751 1470  
                               u6671 12D2                                 u6591 1126  
                               u7391 21D0                                 u7560 2E78  
                               u7480 2A80                                 u5960 3286  
                               u5880 3152                                 u6920 17F0  
                               u6840 1652                                 u6760 14B4  
                               u6680 1308                                 u7561 2E74  
                               u7481 2A7C                                 u5961 3282  
                               u5881 314E                                 u5865 30CE  
                               u6921 17EC                                 u6841 164E  
                               u6761 14B0                                 u6681 1304  
                               u7617 4A66                                 u7490 2AD6  
                               u5970 48D6                                 u5890 3164  
                               u6930 1822                                 u6850 1684  
                               u6770 14E6                                 u6690 133A  
                               u7707 3CDA                                 u7491 2AD2  
                               u5971 48D2                                 u5891 3160  
                               u6931 181E                                 u6851 1680  
                               u6771 14E2                                 u6691 1336  
                               u7627 4A80                                 u6940 409C  
                               u5980 4914                                 u6860 16B6  
                               u6780 1518                                 u6941 4098  
                               u7717 3E58                                 u5981 4910  
                               u6861 16B2                                 u6781 1514  
                               u7637 4AA6                                 u6950 40AA  
                               u5990 4948                                 u6870 16E8  
                               u6790 154A                                 u7807 41CA  
                               u6951 40A6                                 u7727 3B5C  
                               u5991 4944                                 u6871 16E4  
                               u6791 1546                                 u7647 200A  
                               u6960 40D0                                 u6880 1728  
                               u6961 40CC                                 u7737 3FD4  
                               u6881 1724                                 u7657 4C94  
                               u6970 40DE                                 u6890 175A  
                               u6971 40DA                                 u7747 4D00  
                               u7667 480E                                 u6891 1756  
                               u6980 4110                                 u6981 410C  
                               u7757 40B4                                 u7677 4850  
                               u6990 417A                                 u6991 4176  
                               u7767 40EC                                 u7687 487C  
                               u7777 411A                                 u7697 4896  
                               u7787 415C                                 u7797 4184  
                               _main 465A                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                    ___fldiv@new_exp 0033               __end_of_color_read_Red 4B08  
                       ___param_bank 0000              __end_of_color_cardCheck 183A  
            _forward_reset_threshold 00FD                        ___fltol@sign1 0009  
                    __end_of___fladd 29BC                                ?_main 0001  
                    __end_of___fldiv 363E                      __end_of___awdiv 47F6  
                    __end_of___flmul 32A4                      __end_of___flsub 4C3E  
                    __end_of___fltol 4556                      ___awdiv@divisor 0003  
                        ?_RGB_to_HSV 006A                      __end_of___lwdiv 4A5A  
                    ___awdiv@counter 0005                         ?_maze_search 00DF  
                       ?_maze_return 0021           __end_of_I2C_2_Master_Start 4DDC  
         __end_of_I2C_2_Master_Write 4DC8                      __end_of_forward 3C16  
                              tablat 0FF5                                status 0FD8  
            __end_of_color_read_Blue 4BF8                _I2C_2_Master_RepStart 4DDC  
                 _switch_calibration 47F6                      ?_color_read_Red 0005  
                    __initialization 4CC0                         __end_of_main 4732  
                ?_switch_calibration 0001                               ??_main 0060  
                      _Forward_Count 00E5                        __activetblptr 0000  
                       ?_setMotorPWM 000E                               _CCPR1H 0FAA  
                             _CCPR2H 0FA6                               _CCPR3H 0F25  
                             _CCPR4H 0F21                     ___awdiv@dividend 0001  
               ??_switch_calibration 0003                               _RC0PPS 0E62  
                             _RC4REG 0EE3                               _RE2PPS 0E74  
                             _RD5PPS 0E6F                               _RC7PPS 0E69  
                             _RE4PPS 0E76                               _RD6PPS 0E70  
                             _RG6PPS 0E88                     __end_of_backward 408E  
           __end_of_color_click_init 4CC0                               _RX4PPS 0E15  
                   forward@max_power 001D                               _TX4REG 0EE4  
                   __end_of___xxtofl 3A96                         _CCPTMRS0bits 0FAD  
                        _Color_Value 00E3                               ___flge 4556  
                             ___fleq 48A8                     ?_color_cardCheck 005C  
                   __end_of_leftTURN 3F12                            ??___fladd 0009  
                             ___wmul 4D76                            ??___fldiv 002A  
                          ??___awdiv 0005                            ??___flmul 0043  
                          ??___flsub 0022                            ??___fltol 0005  
                          ??___lwdiv 000B        delay_ms_function@milliseconds 0001  
                             _length 00FE                               clear_0 4CDE  
                             clear_1 4CEA                     ___awdiv@quotient 0007  
                             _motorL 00F4                               _motorR 00EB  
                             isa$std 0001                            ??_forward 0015  
      rightTURN@rotation_calibration 0018                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                      _Operation_Count 00E6  
                  ??_initDCmotorsPWM 0003                           ___flge@ff1 0001  
                         ___flge@ff2 0005                         ___xxtofl@arg 0016  
                       ___xxtofl@exp 0015                         ___xxtofl@val 000C  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 4CF0  
           __end_of_color_read_Clear 4BA8             __end_of_color_read_Green 4B58  
             ?_I2C_2_Master_RepStart 0001                        ___rparam_used 0001  
                         ___fltol@f1 0001                     ?_color_read_Blue 0005  
                     __pcstackCOMRAM 0001                         __pidataBANK0 4DE6  
                  forward@delay_time 001F                       _RGB_to_HSV$321 009D  
                     _RGB_to_HSV$322 00A1                       _RGB_to_HSV$318 0091  
                     _RGB_to_HSV$319 0095                   RGB_to_HSV@deltaRGB 00AD  
              calibration_routine@mL 0023                calibration_routine@mR 0024  
                         __pbssBANK0 00E3                           __pbssBANK1 0100  
                  _color_writetoaddr 4D9C                         _T2CLKCONbits 0FBF  
                 _adjust_calibration 408E                              ?___flge 0001  
                            ?___fleq 0001                   ?_color_writetoaddr 0003  
                            ?___wmul 0001                   backward@delay_time 001F  
                ?_adjust_calibration 0001                  ??_color_writetoaddr 0004  
                          ?_backward 0013                         ??_RGB_to_HSV 005C  
                  _delay_ms_function 4CF6                           backward@mL 0013  
                         backward@mR 0014                            ?___xxtofl 000C  
                 ?_delay_ms_function 0001                              _SP4BRGH 0EE6  
                            _SP4BRGL 0EE5                              _SSP2ADD 0ED6  
                            _SSP2BUF 0ED5                          rightTURN@mL 0013  
                        rightTURN@mR 0014                            ?_leftTURN 0013  
                ??_delay_ms_function 0003                 ??_adjust_calibration 0003  
             color_writetoaddr@value 0003                     ??_color_read_Red 0007  
          __end_of_color_writetoaddr 4DBC                          RGB_to_HSV@B 0072  
                        RGB_to_HSV@C 0076                          RGB_to_HSV@G 006E  
                        RGB_to_HSV@H 007A                          RGB_to_HSV@R 006A  
                        RGB_to_HSV@S 007B                          RGB_to_HSV@V 007C  
                        RGB_to_HSV@b 00BD                          RGB_to_HSV@g 00B9  
                 _I2C_2_Master_Start 4DD2                          RGB_to_HSV@r 00B5  
                 _I2C_2_Master_Write 4DBC                              __Hparam 0000  
                 __end_of_RGB_to_HSV 1FFC                              __Lparam 0000  
                  color_read_Red@tmp 000A                              ___fladd 24FC  
                            ___fldiv 32A4                              ___awdiv 4732  
                            ___flmul 2E7A                              ___flsub 4BF8  
                            ___fltol 4450                  ?_I2C_2_Master_Start 0001  
                            ___lwdiv 49E6                  ?_I2C_2_Master_Write 0001  
                       __psmallconst 0E00            __end_of_delay_ms_function 4D24  
                            __pcinit 4CC0                              __ramtop 0E00  
                            __ptext0 465A                              __ptext1 4A5A  
                            __ptext2 1FFC                              __ptext3 4C80  
                            __ptext4 4D9C                              __ptext5 4D24  
                            __ptext6 0E02                              __ptext7 4AB8  
                            __ptext8 4B08                              __ptext9 4B58  
                         ??_backward 0015                            _T2CONbits 0FBD  
                            _forward 3A96                           ??___xxtofl 0010  
                          _T2HLTbits 0FBE                        _RxBufWriteCnt 00EA  
               ??_I2C_2_Master_Start 0002                 ??_I2C_2_Master_Write 0002  
                       maze_search@c 00DF                         maze_search@i 018B  
               end_of_initialization 4CF0                           ??_leftTURN 0015  
                  __end_of_rightTURN 3D94              _pause_until_RF2_pressed 4A5A  
                 leftTURN@delay_time 001F                    ?_color_click_init 0001  
                       maze_return@c 0021                         maze_return@i 002D  
                       maze_return@j 0029                   ??_color_click_init 0005  
           maze_return@distance_back 0028                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                    _initDCmotorsPWM 4952                            _PORTFbits 0F8E  
                 setMotorPWM@negDuty 0012                          ___fladd@grs 0010  
                      ___xxtofl@sign 0014                            _TRISAbits 0F81  
                 setMotorPWM@posDuty 0011                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 0001  
switch_calibration@calibration_index 0001                          ___fldiv@grs 0035  
                        ___fldiv@rem 002E             color_writetoaddr@address 0004  
            ??_I2C_2_Master_RepStart 0002                          ___flmul@grs 0049  
                        _CCP1CONbits 0FAB                  _calibration_routine 363E  
                  ?_color_read_Clear 0005                         _EUSART4RXbuf 016E  
                       _EUSART4TXbuf 0100                          _CCP2CONbits 0FA7  
                  ?_color_read_Green 0005                          _CCP3CONbits 0F26  
        forward@Distance_Calibration 0018                          _CCP4CONbits 0F22  
                 ??_color_read_Clear 0007                   ??_color_read_Green 0007  
                 rightTURN@max_power 001D                    maze_return@i_1876 002B  
                         leftTURN@mL 0013                           leftTURN@mR 0014  
         __end_of_custom_floatmodulo 4450                       __end_of___flge 465A  
                     __end_of___fleq 4952                       __end_of___wmul 4D9C  
          color_cardCheck@card_color 00D1                 ?_calibration_routine 0021  
                   RGB_to_HSV@H_temp 00A9                  color_read_Clear@tmp 000A  
                start_initialization 4CC0                        _TxBufWriteCnt 00E8  
       leftTURN@rotation_calibration 0018                     RGB_to_HSV@c_norm 007D  
          ??_pause_until_RF2_pressed 0001                     RGB_to_HSV@maxRGB 00B1  
                   RGB_to_HSV@minRGB 0099                      _RGB_to_HSV$2720 008D  
                    _RGB_to_HSV$2716 0081                      _RGB_to_HSV$2717 0085  
                    _RGB_to_HSV$2718 0089                      _RGB_to_HSV$2719 00A5  
                color_read_Green@tmp 000A              __end_of_initDCmotorsPWM 49E6  
                           ??___flge 0009                             ??___fleq 0009  
                           ??___wmul 0005                  custom_floatmodulo@x 0054  
                custom_floatmodulo@y 0058                          __pdataBANK0 00FD  
                        _calibration 0182                ??_calibration_routine 0025  
                          ___fladd@a 0005                            ___fladd@b 0001  
                      ??_maze_search 005E         backward@Distance_Calibration 0018  
                          ___fldiv@a 0026                            ___fldiv@b 0022  
                      ??_maze_return 0025                            ___flmul@a 003F  
                          ___flmul@b 003B                            ___flsub@a 001E  
                          ___flsub@b 001A                        __pcstackBANK0 0060  
                      __pcstackBANK1 018B                 calibration_routine@c 0021  
          custom_floatmodulo@intPart 0068                     ___lwdiv@dividend 0007  
    __end_of_pause_until_RF2_pressed 4AB8                             ?___fladd 0001  
                           ?___fldiv 0022                             ?___awdiv 0001  
                           ?___flmul 003B                             ?___flsub 001A  
                           ?___fltol 0001                             ?___lwdiv 0007  
                          backward@i 0019                            backward@j 001B  
                         rightTURN@i 0019                           rightTURN@j 001B  
               I2C_2_Master_Read@ack 0003                 I2C_2_Master_Read@tmp 0004  
                        __smallconst 0E00                             ?_forward 0013  
                  _I2C_2_Master_Idle 4D4E                    _I2C_2_Master_Init 4D24  
                  _I2C_2_Master_Read 4C3E                    _I2C_2_Master_Stop 4DC8  
                       _RxBufReadCnt 00E9                   ?_I2C_2_Master_Idle 0001  
                 ?_I2C_2_Master_Init 0001                   ?_I2C_2_Master_Read 0001  
                      ??_setMotorPWM 000F                   ?_I2C_2_Master_Stop 0001  
                   ___lwdiv@quotient 000C             initDCmotorsPWM@PWMperiod 0001  
                  ??_color_cardCheck 005E                  __end_of_maze_search 24FC  
                  backward@max_power 001D                  __end_of_maze_return 2E7A  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 0F79                  ??_I2C_2_Master_Stop 0002  
                           _LATCbits 0F7B                             _LATDbits 0F7C  
                           _LATEbits 0F7D                             _LATFbits 0F7E  
                           _LATGbits 0F7F                             _LATHbits 0F80  
                          _rightTURN 3C16                             _PIE4bits 0E2D  
                           _PIR4bits 0E37                     ?_initDCmotorsPWM 0001  
                           _SSP2CON2 0EDA                             _SSP2STAT 0ED8  
          __end_of_I2C_2_Master_Idle 4D76            __end_of_I2C_2_Master_Init 4D4E  
          __end_of_I2C_2_Master_Read 4C80                    ___wmul@multiplier 0001  
          __end_of_I2C_2_Master_Stop 4DD2                         setMotorPWM@m 000E  
        I2C_2_Master_Write@data_byte 0002                    ??_color_read_Blue 0007  
                  leftTURN@max_power 001D                         _TxBufReadCnt 00E7  
                          leftTURN@i 0019                            leftTURN@j 001B  
      __end_of_I2C_2_Master_RepStart 4DE6                   color_read_Blue@tmp 000A  
                __end_of_setMotorPWM 4338                           ?_rightTURN 0013  
                           __Hrparam 0000                             __Lrparam 0000  
                          forward@mL 0013                            forward@mR 0014  
                           _backward 3F12                           _ANSELDbits 0EA7  
                         _ANSELFbits 0EB4                          _maze_search 1FFC  
                           ___xxtofl 38E2                          _maze_return 29BC  
                 _custom_floatmodulo 4338                      ___lwdiv@divisor 0009  
         __end_of_switch_calibration 48A8                      ___lwdiv@counter 000B  
                           __ptext10 4BA8                             __ptext11 4DBC  
                           __ptext20 4450                             __ptext12 4DC8  
                           __ptext21 4BF8                             __ptext13 4DD2  
                           __ptext30 47F6                             __ptext22 24FC  
                           __ptext14 4DDC                             __ptext31 3C16  
                           __ptext23 2E7A                             __ptext15 4C3E  
                           __ptext40 408E                             __ptext32 3D94  
                           __ptext24 48A8                             __ptext16 4D4E  
                           __ptext33 3A96                             __ptext25 32A4  
                           __ptext17 183A                             __ptext34 3F12  
                           __ptext26 4556                             __ptext18 4338  
                           __ptext35 41E4                             __ptext27 29BC  
                           __ptext19 38E2                             __ptext36 4D76  
                           __ptext28 4952                             __ptext37 49E6  
                           __ptext29 363E                             __ptext38 4CF6  
                           __ptext39 4732          custom_floatmodulo@remainder 0064  
                       _SSP2CON1bits 0ED9                         _SSP2CON2bits 0EDA  
                           _leftTURN 3D94                  ?_custom_floatmodulo 0054  
                           isa$xinst 0000                           _RC4STAbits 0EE7  
               ??_custom_floatmodulo 005C                        maze_search@mL 00E1  
                      maze_search@mR 00E2                             forward@i 0019  
                           forward@j 001B                          _setMotorPWM 41E4  
                      maze_return@mL 0023                        maze_return@mR 0024  
                        ??_rightTURN 0015          __end_of_calibration_routine 38E2  
         custom_floatmodulo@quotient 0060                     _color_click_init 4C80  
                    _color_cardCheck 0E02                           _RGB_to_HSV 183A  
                  _Operation_History 013C                           _SSP2DATPPS 0E1D  
                         _SSP2CLKPPS 0E1C             ?_pause_until_RF2_pressed 0001  
                   color_cardCheck@H 00D3                     color_cardCheck@S 00D7  
                   color_cardCheck@V 00DB                     color_cardCheck@b 00C9  
                   color_cardCheck@c 00CD                     color_cardCheck@g 00C5  
                   color_cardCheck@r 00C1                        ___fladd@signs 000D  
                         _TX4STAbits 0EE8                  rightTURN@delay_time 001F  
                       ___fladd@aexp 000E                         ___fladd@bexp 000F  
