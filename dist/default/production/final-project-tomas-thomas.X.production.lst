

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 23:02:54 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 21/07/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataBANK0
    99   004664                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _temp
   103   004664  07                 	db	7
   104   000000                     _TX4REG	set	3812
   105   000000                     _RC4STAbits	set	3815
   106   000000                     _SP4BRGH	set	3814
   107   000000                     _TRISDbits	set	3972
   108   000000                     _LATEbits	set	3965
   109   000000                     _LATHbits	set	3968
   110   000000                     _SSP2CON2bits	set	3802
   111   000000                     _RX4PPS	set	3605
   112   000000                     _SSP2CLKPPS	set	3612
   113   000000                     _SSP2DATPPS	set	3613
   114   000000                     _RC7PPS	set	3689
   115   000000                     _RE2PPS	set	3700
   116   000000                     _LATAbits	set	3961
   117   000000                     _LATGbits	set	3967
   118   000000                     _TRISAbits	set	3969
   119   000000                     _TRISGbits	set	3975
   120   000000                     _TRISHbits	set	3976
   121   000000                     _PORTFbits	set	3982
   122   000000                     _TRISCbits	set	3971
   123   000000                     _TRISEbits	set	3973
   124   000000                     _TRISFbits	set	3974
   125   000000                     _LATCbits	set	3963
   126   000000                     _LATDbits	set	3964
   127   000000                     _LATFbits	set	3966
   128   000000                     _T2PR	set	4028
   129   000000                     _T2CONbits	set	4029
   130   000000                     _CCPR2H	set	4006
   131   000000                     _CCPR1H	set	4010
   132   000000                     _RE4PPS	set	3702
   133   000000                     _RG6PPS	set	3720
   134   000000                     _RD5PPS	set	3695
   135   000000                     _ANSELDbits	set	3751
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _CCPR4H	set	3873
   138   000000                     _CCPR3H	set	3877
   139   000000                     _T2CLKCONbits	set	4031
   140   000000                     _T2HLTbits	set	4030
   141   000000                     _CCP1CONbits	set	4011
   142   000000                     _CCPTMRS0bits	set	4013
   143   000000                     _CCP2CONbits	set	4007
   144   000000                     _CCP3CONbits	set	3878
   145   000000                     _CCP4CONbits	set	3874
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _SSP2ADD	set	3798
   148   000000                     _SSP2CON1bits	set	3801
   149   000000                     _RC4REG	set	3811
   150   000000                     _SP4BRGL	set	3813
   151   000000                     _TX4STAbits	set	3816
   152   000000                     _BAUD4CONbits	set	3817
   153   000000                     _SSP2CON2	set	3802
   154   000000                     _SSP2STAT	set	3800
   155   000000                     _PIE4bits	set	3629
   156   000000                     _PIR4bits	set	3639
   157   000000                     _RC0PPS	set	3682
   158   000000                     _RD6PPS	set	3696
   159                           
   160                           	psect	smallconst
   161   000E00                     __psmallconst:
   162                           	callstack 0
   163   000E00  00                 	db	0
   164   000E01                     STR_1:
   165   000E01  25                 	db	37
   166   000E02  75                 	db	117	;'u'
   167   000E03  2C                 	db	44
   168   000E04  20                 	db	32
   169   000E05  00                 	db	0
   170   000E06  00                 	db	0	; dummy byte at the end
   171   000000                     
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175   0044DC                     __pcinit:
   176                           	callstack 0
   177   0044DC                     start_initialization:
   178                           	callstack 0
   179   0044DC                     __initialization:
   180                           	callstack 0
   181                           
   182                           ; Initialize objects allocated to BANK0 (1 bytes)
   183                           ; load TBLPTR registers with __pidataBANK0
   184   0044DC  0E64               	movlw	low __pidataBANK0
   185   0044DE  6EF6               	movwf	tblptrl,c
   186   0044E0  0E46               	movlw	high __pidataBANK0
   187   0044E2  6EF7               	movwf	tblptrh,c
   188   0044E4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   189   0044E6  6EF8               	movwf	tblptru,c
   190   0044E8  0009               	tblrd		*+	;fetch initializer
   191   0044EA  CFF5 F0FC          	movff	tablat,__pdataBANK0
   192                           
   193                           ; Clear objects allocated to BANK1 (139 bytes)
   194   0044EE  EE01  F000         	lfsr	0,__pbssBANK1
   195   0044F2  0E8B               	movlw	139
   196   0044F4                     clear_0:
   197   0044F4  6AEE               	clrf	postinc0,c
   198   0044F6  06E8               	decf	wreg,f,c
   199   0044F8  E1FD               	bnz	clear_0
   200                           
   201                           ; Clear objects allocated to BANK0 (29 bytes)
   202   0044FA  EE00  F0DF         	lfsr	0,__pbssBANK0
   203   0044FE  0E1D               	movlw	29
   204   004500                     clear_1:
   205   004500  6AEE               	clrf	postinc0,c
   206   004502  06E8               	decf	wreg,f,c
   207   004504  E1FD               	bnz	clear_1
   208   004506                     end_of_initialization:
   209                           	callstack 0
   210   004506                     __end_of__initialization:
   211                           	callstack 0
   212   004506  0100               	movlb	0
   213   004508  EF43  F016         	goto	_main	;jump to C main() function
   214                           
   215                           	psect	bssBANK0
   216   0000DF                     __pbssBANK0:
   217                           	callstack 0
   218   0000DF                     _EUSART4RXbuf:
   219                           	callstack 0
   220   0000DF                     	ds	20
   221   0000F3                     _width:
   222                           	callstack 0
   223   0000F3                     	ds	2
   224   0000F5                     _prec:
   225                           	callstack 0
   226   0000F5                     	ds	2
   227   0000F7                     _flags:
   228                           	callstack 0
   229   0000F7                     	ds	1
   230   0000F8                     _TxBufReadCnt:
   231                           	callstack 0
   232   0000F8                     	ds	1
   233   0000F9                     _TxBufWriteCnt:
   234                           	callstack 0
   235   0000F9                     	ds	1
   236   0000FA                     _RxBufReadCnt:
   237                           	callstack 0
   238   0000FA                     	ds	1
   239   0000FB                     _RxBufWriteCnt:
   240                           	callstack 0
   241   0000FB                     	ds	1
   242                           
   243                           	psect	dataBANK0
   244   0000FC                     __pdataBANK0:
   245                           	callstack 0
   246   0000FC                     _temp:
   247                           	callstack 0
   248   0000FC                     	ds	1
   249                           
   250                           	psect	bssBANK1
   251   000100                     __pbssBANK1:
   252                           	callstack 0
   253   000100                     _EUSART4TXbuf:
   254                           	callstack 0
   255   000100                     	ds	60
   256   00013C                     _dbuf:
   257                           	callstack 0
   258   00013C                     	ds	32
   259   00015C                     	ds	20
   260   000170                     _motorR:
   261                           	callstack 0
   262   000170                     	ds	9
   263   000179                     _motorL:
   264                           	callstack 0
   265   000179                     	ds	9
   266   000182                     _calibration:
   267                           	callstack 0
   268   000182                     	ds	9
   269                           
   270                           	psect	cstackBANK1
   271   00018B                     __pcstackBANK1:
   272                           	callstack 0
   273   00018B                     main@senddata:
   274                           	callstack 0
   275                           
   276                           ; 20 bytes @ 0x0
   277   00018B                     	ds	20
   278   00019F                     main@Operation_History:
   279                           	callstack 0
   280                           
   281                           ; 20 bytes @ 0x14
   282   00019F                     	ds	20
   283   0001B3                     main@Forward_Count:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x28
   287   0001B3                     	ds	1
   288   0001B4                     main@i:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x29
   292   0001B4                     	ds	2
   293   0001B6                     main@Operation_Count:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x2B
   297   0001B6                     	ds	1
   298   0001B7                     main@Color_Value:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x2C
   302   0001B7                     	ds	2
   303                           
   304                           	psect	cstackBANK0
   305   000060                     __pcstackBANK0:
   306                           	callstack 0
   307   000060                     custom_floatmodulo@quotient:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x0
   311   000060                     	ds	4
   312   000064                     custom_floatmodulo@remainder:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x4
   316   000064                     	ds	4
   317   000068                     custom_floatmodulo@intPart:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x8
   321   000068                     	ds	2
   322   00006A                     RGB_to_HSV@R:
   323                           	callstack 0
   324                           
   325                           ; 4 bytes @ 0xA
   326   00006A                     	ds	4
   327   00006E                     RGB_to_HSV@G:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0xE
   331   00006E                     	ds	4
   332   000072                     RGB_to_HSV@B:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x12
   336   000072                     	ds	4
   337   000076                     RGB_to_HSV@C:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x16
   341   000076                     	ds	4
   342   00007A                     RGB_to_HSV@H:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x1A
   346   00007A                     	ds	1
   347   00007B                     RGB_to_HSV@S:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x1B
   351   00007B                     	ds	1
   352   00007C                     RGB_to_HSV@V:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x1C
   356   00007C                     	ds	1
   357   00007D                     RGB_to_HSV@c_norm:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0x1D
   361   00007D                     	ds	4
   362   000081                     _RGB_to_HSV$2676:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x21
   366   000081                     	ds	4
   367   000085                     _RGB_to_HSV$2677:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x25
   371   000085                     	ds	4
   372   000089                     _RGB_to_HSV$2678:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0x29
   376   000089                     	ds	4
   377   00008D                     _RGB_to_HSV$2680:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x2D
   381   00008D                     	ds	4
   382   000091                     _RGB_to_HSV$318:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x31
   386   000091                     	ds	4
   387   000095                     _RGB_to_HSV$319:
   388                           	callstack 0
   389                           
   390                           ; 4 bytes @ 0x35
   391   000095                     	ds	4
   392   000099                     RGB_to_HSV@minRGB:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x39
   396   000099                     	ds	4
   397   00009D                     _RGB_to_HSV$321:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x3D
   401   00009D                     	ds	4
   402   0000A1                     _RGB_to_HSV$322:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x41
   406   0000A1                     	ds	4
   407   0000A5                     _RGB_to_HSV$2679:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x45
   411   0000A5                     	ds	4
   412   0000A9                     RGB_to_HSV@H_temp:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x49
   416   0000A9                     	ds	4
   417   0000AD                     RGB_to_HSV@deltaRGB:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x4D
   421   0000AD                     	ds	4
   422   0000B1                     RGB_to_HSV@maxRGB:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x51
   426   0000B1                     	ds	4
   427   0000B5                     RGB_to_HSV@r:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x55
   431   0000B5                     	ds	4
   432   0000B9                     RGB_to_HSV@g:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x59
   436   0000B9                     	ds	4
   437   0000BD                     RGB_to_HSV@b:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x5D
   441   0000BD                     	ds	4
   442   0000C1                     color_cardCheck@r:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x61
   446   0000C1                     	ds	4
   447   0000C5                     color_cardCheck@g:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x65
   451   0000C5                     	ds	4
   452   0000C9                     color_cardCheck@b:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x69
   456   0000C9                     	ds	4
   457   0000CD                     color_cardCheck@c:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x6D
   461   0000CD                     	ds	4
   462   0000D1                     color_cardCheck@card_color:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x71
   466   0000D1                     	ds	2
   467   0000D3                     color_cardCheck@H:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x73
   471   0000D3                     	ds	4
   472   0000D7                     color_cardCheck@S:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x77
   476   0000D7                     	ds	4
   477   0000DB                     color_cardCheck@V:
   478                           	callstack 0
   479                           
   480                           ; 4 bytes @ 0x7B
   481   0000DB                     	ds	4
   482                           
   483                           	psect	cstackCOMRAM
   484   000001                     __pcstackCOMRAM:
   485                           	callstack 0
   486   000001                     ??_I2C_2_Master_Idle:
   487   000001                     ?___wmul:
   488                           	callstack 0
   489   000001                     ?___awdiv:
   490                           	callstack 0
   491   000001                     ?___lwmod:
   492                           	callstack 0
   493   000001                     ?___fladd:
   494                           	callstack 0
   495   000001                     ?___fltol:
   496                           	callstack 0
   497   000001                     sendCharSerial4@charToSend:
   498                           	callstack 0
   499   000001                     adjust_calibration@calibration_label:
   500                           	callstack 0
   501   000001                     switch_calibration@calibration_index:
   502                           	callstack 0
   503   000001                     initDCmotorsPWM@PWMperiod:
   504                           	callstack 0
   505   000001                     delay_ms_function@milliseconds:
   506                           	callstack 0
   507   000001                     ___wmul@multiplier:
   508                           	callstack 0
   509   000001                     ___awdiv@dividend:
   510                           	callstack 0
   511   000001                     ___lwmod@dividend:
   512                           	callstack 0
   513   000001                     fputc@c:
   514                           	callstack 0
   515   000001                     ___fleq@ff1:
   516                           	callstack 0
   517   000001                     ___flge@ff1:
   518                           	callstack 0
   519   000001                     ___fltol@f1:
   520                           	callstack 0
   521   000001                     ___fladd@b:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x0
   525   000001                     	ds	1
   526   000002                     ??_I2C_2_Master_Read:
   527   000002                     I2C_2_Master_Write@data_byte:
   528                           	callstack 0
   529   000002                     sendStringSerial4@string:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1
   533   000002                     	ds	1
   534   000003                     ??_adjust_calibration:
   535   000003                     ??_switch_calibration:
   536   000003                     ??_delay_ms_function:
   537   000003                     color_writetoaddr@value:
   538                           	callstack 0
   539   000003                     I2C_2_Master_Read@ack:
   540                           	callstack 0
   541   000003                     fputc@fp:
   542                           	callstack 0
   543   000003                     ___wmul@multiplicand:
   544                           	callstack 0
   545   000003                     ___awdiv@divisor:
   546                           	callstack 0
   547   000003                     ___lwmod@divisor:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x2
   551   000003                     	ds	1
   552   000004                     ??_fputc:
   553   000004                     color_writetoaddr@address:
   554                           	callstack 0
   555   000004                     I2C_2_Master_Read@tmp:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x3
   559   000004                     	ds	1
   560   000005                     ??_color_click_init:
   561   000005                     ??___fltol:
   562   000005                     ?_color_read_Red:
   563                           	callstack 0
   564   000005                     ?_color_read_Green:
   565                           	callstack 0
   566   000005                     ?_color_read_Blue:
   567                           	callstack 0
   568   000005                     ?_color_read_Clear:
   569                           	callstack 0
   570   000005                     ___awdiv@counter:
   571                           	callstack 0
   572   000005                     ___lwmod@counter:
   573                           	callstack 0
   574   000005                     ___wmul@product:
   575                           	callstack 0
   576   000005                     ___fleq@ff2:
   577                           	callstack 0
   578   000005                     ___flge@ff2:
   579                           	callstack 0
   580   000005                     ___fladd@a:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x4
   584   000005                     	ds	1
   585   000006                     ___awdiv@sign:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x5
   589   000006                     	ds	1
   590   000007                     ??_color_read_Red:
   591   000007                     ??_color_read_Green:
   592   000007                     ??_color_read_Blue:
   593   000007                     ??_color_read_Clear:
   594   000007                     ?___lwdiv:
   595                           	callstack 0
   596   000007                     ___awdiv@quotient:
   597                           	callstack 0
   598   000007                     ___lwdiv@dividend:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x6
   602   000007                     	ds	2
   603   000009                     ??___fladd:
   604   000009                     ??___fleq:
   605   000009                     ??___flge:
   606   000009                     ___fltol@sign1:
   607                           	callstack 0
   608   000009                     ___lwdiv@divisor:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x8
   612   000009                     	ds	1
   613   00000A                     ___fltol@exp1:
   614                           	callstack 0
   615   00000A                     color_read_Red@tmp:
   616                           	callstack 0
   617   00000A                     color_read_Green@tmp:
   618                           	callstack 0
   619   00000A                     color_read_Blue@tmp:
   620                           	callstack 0
   621   00000A                     color_read_Clear@tmp:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x9
   625   00000A                     	ds	1
   626   00000B                     ___lwdiv@quotient:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0xA
   630   00000B                     	ds	1
   631   00000C                     ?___xxtofl:
   632                           	callstack 0
   633   00000C                     ___xxtofl@val:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0xB
   637   00000C                     	ds	1
   638   00000D                     ___lwdiv@counter:
   639                           	callstack 0
   640   00000D                     ___fladd@signs:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0xC
   644   00000D                     	ds	1
   645   00000E                     ___fladd@aexp:
   646                           	callstack 0
   647   00000E                     vfpfcnvrt@fp:
   648                           	callstack 0
   649   00000E                     setMotorPWM@m:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xD
   653   00000E                     	ds	1
   654   00000F                     ___fladd@bexp:
   655                           	callstack 0
   656   00000F                     vfpfcnvrt@fmt:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0xE
   660   00000F                     	ds	1
   661   000010                     ??_setMotorPWM:
   662   000010                     ??___xxtofl:
   663   000010                     ___fladd@grs:
   664                           	callstack 0
   665   000010                     vfpfcnvrt@ap:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0xF
   669   000010                     	ds	1
   670   000011                     ??_vfpfcnvrt:
   671                           
   672                           ; 1 bytes @ 0x10
   673   000011                     	ds	1
   674   000012                     setMotorPWM@posDuty:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x11
   678   000012                     	ds	1
   679   000013                     setMotorPWM@negDuty:
   680                           	callstack 0
   681   000013                     vfpfcnvrt@convarg:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x12
   685   000013                     	ds	1
   686   000014                     ___xxtofl@sign:
   687                           	callstack 0
   688   000014                     forward@mL:
   689                           	callstack 0
   690   000014                     turnLEFT@mL:
   691                           	callstack 0
   692   000014                     turnRIGHT@mL:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x13
   696   000014                     	ds	1
   697   000015                     ___xxtofl@exp:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x14
   701   000015                     	ds	1
   702   000016                     forward@mR:
   703                           	callstack 0
   704   000016                     turnLEFT@mR:
   705                           	callstack 0
   706   000016                     turnRIGHT@mR:
   707                           	callstack 0
   708   000016                     ___xxtofl@arg:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x15
   712   000016                     	ds	1
   713   000017                     vfpfcnvrt@cp:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x16
   717   000017                     	ds	1
   718   000018                     ??_forward:
   719   000018                     ??_turnLEFT:
   720   000018                     ??_turnRIGHT:
   721   000018                     vfpfcnvrt@c:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x17
   725   000018                     	ds	1
   726   000019                     ?_vfprintf:
   727                           	callstack 0
   728   000019                     vfprintf@fp:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x18
   732   000019                     	ds	1
   733   00001A                     ?___flsub:
   734                           	callstack 0
   735   00001A                     vfprintf@fmt:
   736                           	callstack 0
   737   00001A                     ___flsub@b:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x19
   741   00001A                     	ds	1
   742   00001B                     forward@Distance_Calibration:
   743                           	callstack 0
   744   00001B                     turnLEFT@rotation_calibration:
   745                           	callstack 0
   746   00001B                     turnRIGHT@rotation_calibration:
   747                           	callstack 0
   748   00001B                     vfprintf@ap:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x1A
   752   00001B                     	ds	1
   753   00001C                     vfprintf@cfmt:
   754                           	callstack 0
   755   00001C                     forward@i:
   756                           	callstack 0
   757   00001C                     turnLEFT@i:
   758                           	callstack 0
   759   00001C                     turnRIGHT@i:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1B
   763   00001C                     	ds	1
   764   00001D                     ?_sprintf:
   765                           	callstack 0
   766   00001D                     sprintf@s:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x1C
   770   00001D                     	ds	1
   771   00001E                     forward@j:
   772                           	callstack 0
   773   00001E                     turnLEFT@j:
   774                           	callstack 0
   775   00001E                     turnRIGHT@j:
   776                           	callstack 0
   777   00001E                     ___flsub@a:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x1D
   781   00001E                     	ds	1
   782   00001F                     sprintf@fmt:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x1E
   786   00001F                     	ds	1
   787   000020                     forward@max_power:
   788                           	callstack 0
   789   000020                     turnLEFT@max_power:
   790                           	callstack 0
   791   000020                     turnRIGHT@max_power:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x1F
   795   000020                     	ds	2
   796   000022                     ?___fldiv:
   797                           	callstack 0
   798   000022                     sprintf@ap:
   799                           	callstack 0
   800   000022                     forward@delay_time:
   801                           	callstack 0
   802   000022                     turnLEFT@delay_time:
   803                           	callstack 0
   804   000022                     turnRIGHT@delay_time:
   805                           	callstack 0
   806   000022                     ___fldiv@b:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x21
   810   000022                     	ds	1
   811   000023                     sprintf@f:
   812                           	callstack 0
   813                           
   814                           ; 12 bytes @ 0x22
   815   000023                     	ds	3
   816   000026                     ___fldiv@a:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x25
   820   000026                     	ds	4
   821   00002A                     ??___fldiv:
   822                           
   823                           ; 1 bytes @ 0x29
   824   00002A                     	ds	4
   825   00002E                     ___fldiv@rem:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x2D
   829   00002E                     	ds	4
   830   000032                     ___fldiv@sign:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x31
   834   000032                     	ds	1
   835   000033                     ___fldiv@new_exp:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x32
   839   000033                     	ds	2
   840   000035                     ___fldiv@grs:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x34
   844   000035                     	ds	4
   845   000039                     ___fldiv@bexp:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x38
   849   000039                     	ds	1
   850   00003A                     ___fldiv@aexp:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x39
   854   00003A                     	ds	1
   855   00003B                     ?___flmul:
   856                           	callstack 0
   857   00003B                     ___flmul@b:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x3A
   861   00003B                     	ds	4
   862   00003F                     ___flmul@a:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x3E
   866   00003F                     	ds	4
   867   000043                     ??___flmul:
   868                           
   869                           ; 1 bytes @ 0x42
   870   000043                     	ds	4
   871   000047                     ___flmul@sign:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x46
   875   000047                     	ds	1
   876   000048                     ___flmul@grs:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x47
   880   000048                     	ds	4
   881   00004C                     ___flmul@aexp:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x4B
   885   00004C                     	ds	1
   886   00004D                     ___flmul@bexp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x4C
   890   00004D                     	ds	1
   891   00004E                     ___flmul@prod:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x4D
   895   00004E                     	ds	4
   896   000052                     ___flmul@temp:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x51
   900   000052                     	ds	2
   901   000054                     ?_custom_floatmodulo:
   902                           	callstack 0
   903   000054                     custom_floatmodulo@x:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x53
   907   000054                     	ds	4
   908   000058                     custom_floatmodulo@y:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x57
   912   000058                     	ds	4
   913   00005C                     ?_color_cardCheck:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x5B
   917   00005C                     	ds	2
   918   00005E                     ??_main:
   919                           
   920                           ; 1 bytes @ 0x5D
   921   00005E                     	ds	2
   922                           
   923 ;;
   924 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   925 ;;
   926 ;; *************** function _main *****************
   927 ;; Defined at:
   928 ;;		line 18 in file "main.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  i               2   41[BANK1 ] int 
   933 ;;  senddata       20    0[BANK1 ] unsigned char [20]
   934 ;;  Operation_Hi   20   20[BANK1 ] unsigned char [20]
   935 ;;  Color_Value     2   44[BANK1 ] int 
   936 ;;  PWMperiod       2    0        unsigned int 
   937 ;;  Operation_Co    1   43[BANK1 ] unsigned char 
   938 ;;  Forward_Coun    1   40[BANK1 ] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Locals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Totals:         2       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;Total ram usage:       48 bytes
   953 ;; Hardware stack levels required when called: 5
   954 ;; This function calls:
   955 ;;		_adjust_calibration
   956 ;;		_color_cardCheck
   957 ;;		_color_click_init
   958 ;;		_forward
   959 ;;		_initDCmotorsPWM
   960 ;;		_initUSART4
   961 ;;		_sendStringSerial4
   962 ;;		_sprintf
   963 ;;		_switch_calibration
   964 ;;		_turnLEFT
   965 ;;		_turnRIGHT
   966 ;; This function is called by:
   967 ;;		Startup code after reset
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text0
   972   002C86                     __ptext0:
   973                           	callstack 0
   974   002C86                     _main:
   975                           	callstack 26
   976   002C86                     
   977                           ;main.c: 20:     initDCmotorsPWM(PWMperiod);
   978   002C86  0E00               	movlw	0
   979   002C88  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   980   002C8A  0E63               	movlw	99
   981   002C8C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   982   002C8E  EC75  F020         	call	_initDCmotorsPWM	;wreg free
   983   002C92                     
   984                           ;main.c: 24:     motorL.power=0;
   985   002C92  0E00               	movlw	0
   986   002C94  0101               	movlb	1	; () banked
   987   002C96  6F79               	movwf	_motorL& (0+255),b
   988   002C98                     
   989                           ; BSR set to: 1
   990                           ;main.c: 25:     motorL.direction=1;
   991   002C98  0E01               	movlw	1
   992   002C9A  6F7A               	movwf	(_motorL+1)& (0+255),b
   993   002C9C                     
   994                           ; BSR set to: 1
   995                           ;main.c: 26:     motorL.brakemode=1;
   996   002C9C  0E01               	movlw	1
   997   002C9E  6F7B               	movwf	(_motorL+2)& (0+255),b
   998   002CA0                     
   999                           ; BSR set to: 1
  1000                           ;main.c: 27:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1001   002CA0  0EAA               	movlw	170
  1002   002CA2  6F7E               	movwf	(_motorL+5)& (0+255),b
  1003   002CA4  0E0F               	movlw	15
  1004   002CA6  6F7F               	movwf	(_motorL+6)& (0+255),b
  1005   002CA8                     
  1006                           ; BSR set to: 1
  1007                           ;main.c: 28:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1008   002CA8  0EA6               	movlw	166
  1009   002CAA  6F80               	movwf	(_motorL+7)& (0+255),b
  1010   002CAC  0E0F               	movlw	15
  1011   002CAE  6F81               	movwf	(_motorL+8)& (0+255),b
  1012   002CB0                     
  1013                           ; BSR set to: 1
  1014                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
  1015   002CB0  0E00               	movlw	0
  1016   002CB2  6F7D               	movwf	(_motorL+4)& (0+255),b
  1017   002CB4  0E63               	movlw	99
  1018   002CB6  6F7C               	movwf	(_motorL+3)& (0+255),b
  1019   002CB8                     
  1020                           ; BSR set to: 1
  1021                           ;main.c: 31:     motorR.power=0;
  1022   002CB8  0E00               	movlw	0
  1023   002CBA  6F70               	movwf	_motorR& (0+255),b
  1024   002CBC                     
  1025                           ; BSR set to: 1
  1026                           ;main.c: 32:     motorR.direction=1;
  1027   002CBC  0E01               	movlw	1
  1028   002CBE  6F71               	movwf	(_motorR+1)& (0+255),b
  1029   002CC0                     
  1030                           ; BSR set to: 1
  1031                           ;main.c: 33:     motorR.brakemode=1;
  1032   002CC0  0E01               	movlw	1
  1033   002CC2  6F72               	movwf	(_motorR+2)& (0+255),b
  1034   002CC4                     
  1035                           ; BSR set to: 1
  1036                           ;main.c: 34:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1037   002CC4  0E25               	movlw	37
  1038   002CC6  6F75               	movwf	(_motorR+5)& (0+255),b
  1039   002CC8  0E0F               	movlw	15
  1040   002CCA  6F76               	movwf	(_motorR+6)& (0+255),b
  1041   002CCC                     
  1042                           ; BSR set to: 1
  1043                           ;main.c: 35:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1044   002CCC  0E21               	movlw	33
  1045   002CCE  6F77               	movwf	(_motorR+7)& (0+255),b
  1046   002CD0  0E0F               	movlw	15
  1047   002CD2  6F78               	movwf	(_motorR+8)& (0+255),b
  1048   002CD4                     
  1049                           ; BSR set to: 1
  1050                           ;main.c: 36:     motorR.PWMperiod=PWMperiod;
  1051   002CD4  0E00               	movlw	0
  1052   002CD6  6F74               	movwf	(_motorR+4)& (0+255),b
  1053   002CD8  0E63               	movlw	99
  1054   002CDA  6F73               	movwf	(_motorR+3)& (0+255),b
  1055   002CDC                     
  1056                           ; BSR set to: 1
  1057                           ;main.c: 42:     TRISDbits.TRISD7 = 0;
  1058   002CDC  9E84               	bcf	132,7,c	;volatile
  1059   002CDE                     
  1060                           ; BSR set to: 1
  1061                           ;main.c: 43:     LATDbits.LATD7 = 0;
  1062   002CDE  9E7C               	bcf	124,7,c	;volatile
  1063   002CE0                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
  1066   002CE0  9688               	bcf	136,3,c	;volatile
  1067   002CE2                     
  1068                           ; BSR set to: 1
  1069                           ;main.c: 47:     LATHbits.LATH3 = 0;
  1070   002CE2  9680               	bcf	128,3,c	;volatile
  1071   002CE4                     
  1072                           ; BSR set to: 1
  1073                           ;main.c: 50:     TRISFbits.TRISF2=1;
  1074   002CE4  8486               	bsf	134,2,c	;volatile
  1075   002CE6                     
  1076                           ; BSR set to: 1
  1077                           ;main.c: 51:     ANSELFbits.ANSELF2=0;
  1078   002CE6  010E               	movlb	14	; () banked
  1079   002CE8  95B4               	bcf	180,2,b	;volatile
  1080   002CEA                     
  1081                           ; BSR set to: 14
  1082                           ;main.c: 54:     TRISFbits.TRISF3=1;
  1083   002CEA  8686               	bsf	134,3,c	;volatile
  1084   002CEC                     
  1085                           ; BSR set to: 14
  1086                           ;main.c: 55:     ANSELFbits.ANSELF3=0;
  1087   002CEC  97B4               	bcf	180,3,b	;volatile
  1088   002CEE                     
  1089                           ; BSR set to: 14
  1090                           ;main.c: 59:     calibration.index = 4;
  1091   002CEE  0E04               	movlw	4
  1092   002CF0  0101               	movlb	1	; () banked
  1093   002CF2  6F82               	movwf	_calibration& (0+255),b
  1094   002CF4                     
  1095                           ; BSR set to: 1
  1096                           ;main.c: 60:     calibration.over = 0;
  1097   002CF4  0E00               	movlw	0
  1098   002CF6  6F83               	movwf	(_calibration+1)& (0+255),b
  1099   002CF8                     
  1100                           ; BSR set to: 1
  1101                           ;main.c: 66:     calibration.left_90 = 60;
  1102   002CF8  0E3C               	movlw	60
  1103   002CFA  6F84               	movwf	(_calibration+2)& (0+255),b
  1104   002CFC                     
  1105                           ; BSR set to: 1
  1106                           ;main.c: 67:     calibration.right_90 = 60;
  1107   002CFC  0E3C               	movlw	60
  1108   002CFE  6F85               	movwf	(_calibration+3)& (0+255),b
  1109   002D00                     
  1110                           ; BSR set to: 1
  1111                           ;main.c: 68:     calibration.left_135 = 60;
  1112   002D00  0E3C               	movlw	60
  1113   002D02  6F86               	movwf	(_calibration+4)& (0+255),b
  1114   002D04                     
  1115                           ; BSR set to: 1
  1116                           ;main.c: 69:     calibration.right_135 = 10;
  1117   002D04  0E0A               	movlw	10
  1118   002D06  6F87               	movwf	(_calibration+5)& (0+255),b
  1119   002D08                     
  1120                           ; BSR set to: 1
  1121                           ;main.c: 70:     calibration.forward = 10;
  1122   002D08  0E0A               	movlw	10
  1123   002D0A  6F88               	movwf	(_calibration+6)& (0+255),b
  1124   002D0C                     
  1125                           ; BSR set to: 1
  1126                           ;main.c: 71:     calibration.forward_motorL = 20;
  1127   002D0C  0E14               	movlw	20
  1128   002D0E  6F89               	movwf	(_calibration+7)& (0+255),b
  1129   002D10                     
  1130                           ; BSR set to: 1
  1131                           ;main.c: 72:     calibration.forward_motorR = 20;
  1132   002D10  0E14               	movlw	20
  1133   002D12  6F8A               	movwf	(_calibration+8)& (0+255),b
  1134   002D14                     l4709:
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;main.c: 81:         if(calibration.index == 1){
  1138   002D14  0582               	decf	_calibration& (0+255),w,b
  1139   002D16  A4D8               	btfss	status,2,c
  1140   002D18  EF90  F016         	goto	u5181
  1141   002D1C  EF92  F016         	goto	u5180
  1142   002D20                     u5181:
  1143   002D20  EFAA  F016         	goto	l4717
  1144   002D24                     u5180:
  1145   002D24                     
  1146                           ; BSR set to: 1
  1147                           ;main.c: 82:             adjust_calibration(&calibration.right_90);
  1148   002D24  0E85               	movlw	low (_calibration+3)
  1149   002D26  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1150   002D28  0E01               	movlw	high (_calibration+3)
  1151   002D2A  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1152   002D2C  ECCC  F01C         	call	_adjust_calibration	;wreg free
  1153   002D30                     
  1154                           ;main.c: 83:             turnRIGHT(calibration.right_90, &motorL, &motorR);
  1155   002D30  0E79               	movlw	low _motorL
  1156   002D32  6E14               	movwf	turnRIGHT@mL^0,c
  1157   002D34  0E01               	movlw	high _motorL
  1158   002D36  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1159   002D38  0E70               	movlw	low _motorR
  1160   002D3A  6E16               	movwf	turnRIGHT@mR^0,c
  1161   002D3C  0E01               	movlw	high _motorR
  1162   002D3E  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1163   002D40  0101               	movlb	1	; () banked
  1164   002D42  5185               	movf	(_calibration+3)& (0+255),w,b
  1165   002D44  ECA4  F019         	call	_turnRIGHT
  1166   002D48                     
  1167                           ;main.c: 84:             switch_calibration(&calibration.index);
  1168   002D48  0E82               	movlw	low _calibration
  1169   002D4A  6E01               	movwf	switch_calibration@calibration_index^0,c
  1170   002D4C  0E01               	movlw	high _calibration
  1171   002D4E  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1172   002D50  ECC7  F01F         	call	_switch_calibration	;wreg free
  1173   002D54                     l4717:
  1174                           
  1175                           ;main.c: 88:         if(calibration.index == 2){
  1176   002D54  0E02               	movlw	2
  1177   002D56  0101               	movlb	1	; () banked
  1178   002D58  1982               	xorwf	_calibration& (0+255),w,b
  1179   002D5A  A4D8               	btfss	status,2,c
  1180   002D5C  EFB2  F016         	goto	u5191
  1181   002D60  EFB4  F016         	goto	u5190
  1182   002D64                     u5191:
  1183   002D64  EFCC  F016         	goto	l4725
  1184   002D68                     u5190:
  1185   002D68                     
  1186                           ; BSR set to: 1
  1187                           ;main.c: 89:             adjust_calibration(&calibration.left_90);
  1188   002D68  0E84               	movlw	low (_calibration+2)
  1189   002D6A  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1190   002D6C  0E01               	movlw	high (_calibration+2)
  1191   002D6E  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1192   002D70  ECCC  F01C         	call	_adjust_calibration	;wreg free
  1193   002D74                     
  1194                           ;main.c: 90:             turnLEFT(calibration.left_90, &motorL, &motorR);
  1195   002D74  0E79               	movlw	low _motorL
  1196   002D76  6E14               	movwf	turnLEFT@mL^0,c
  1197   002D78  0E01               	movlw	high _motorL
  1198   002D7A  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1199   002D7C  0E70               	movlw	low _motorR
  1200   002D7E  6E16               	movwf	turnLEFT@mR^0,c
  1201   002D80  0E01               	movlw	high _motorR
  1202   002D82  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1203   002D84  0101               	movlb	1	; () banked
  1204   002D86  5184               	movf	(_calibration+2)& (0+255),w,b
  1205   002D88  EC77  F01A         	call	_turnLEFT
  1206   002D8C                     
  1207                           ;main.c: 91:             switch_calibration(&calibration.index);
  1208   002D8C  0E82               	movlw	low _calibration
  1209   002D8E  6E01               	movwf	switch_calibration@calibration_index^0,c
  1210   002D90  0E01               	movlw	high _calibration
  1211   002D92  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1212   002D94  ECC7  F01F         	call	_switch_calibration	;wreg free
  1213   002D98                     l4725:
  1214                           
  1215                           ;main.c: 95:         if(calibration.index == 3){
  1216   002D98  0E03               	movlw	3
  1217   002D9A  0101               	movlb	1	; () banked
  1218   002D9C  1982               	xorwf	_calibration& (0+255),w,b
  1219   002D9E  A4D8               	btfss	status,2,c
  1220   002DA0  EFD4  F016         	goto	u5201
  1221   002DA4  EFD6  F016         	goto	u5200
  1222   002DA8                     u5201:
  1223   002DA8  EFEE  F016         	goto	l4733
  1224   002DAC                     u5200:
  1225   002DAC                     
  1226                           ; BSR set to: 1
  1227                           ;main.c: 96:             adjust_calibration(&calibration.forward);
  1228   002DAC  0E88               	movlw	low (_calibration+6)
  1229   002DAE  6E01               	movwf	adjust_calibration@calibration_label^0,c
  1230   002DB0  0E01               	movlw	high (_calibration+6)
  1231   002DB2  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  1232   002DB4  ECCC  F01C         	call	_adjust_calibration	;wreg free
  1233   002DB8                     
  1234                           ;main.c: 97:             forward(calibration.forward, &motorL, &motorR);
  1235   002DB8  0E79               	movlw	low _motorL
  1236   002DBA  6E14               	movwf	forward@mL^0,c
  1237   002DBC  0E01               	movlw	high _motorL
  1238   002DBE  6E15               	movwf	(forward@mL+1)^0,c
  1239   002DC0  0E70               	movlw	low _motorR
  1240   002DC2  6E16               	movwf	forward@mR^0,c
  1241   002DC4  0E01               	movlw	high _motorR
  1242   002DC6  6E17               	movwf	(forward@mR+1)^0,c
  1243   002DC8  0101               	movlb	1	; () banked
  1244   002DCA  5188               	movf	(_calibration+6)& (0+255),w,b
  1245   002DCC  ECD0  F018         	call	_forward
  1246   002DD0                     
  1247                           ;main.c: 98:             switch_calibration(&calibration.index);
  1248   002DD0  0E82               	movlw	low _calibration
  1249   002DD2  6E01               	movwf	switch_calibration@calibration_index^0,c
  1250   002DD4  0E01               	movlw	high _calibration
  1251   002DD6  6E02               	movwf	(switch_calibration@calibration_index+1)^0,c
  1252   002DD8  ECC7  F01F         	call	_switch_calibration	;wreg free
  1253   002DDC                     l4733:
  1254                           
  1255                           ;main.c: 106:         if(calibration.index == 4){
  1256   002DDC  0E04               	movlw	4
  1257   002DDE  0101               	movlb	1	; () banked
  1258   002DE0  1982               	xorwf	_calibration& (0+255),w,b
  1259   002DE2  A4D8               	btfss	status,2,c
  1260   002DE4  EFF6  F016         	goto	u5211
  1261   002DE8  EFF8  F016         	goto	u5210
  1262   002DEC                     u5211:
  1263   002DEC  EF8A  F016         	goto	l4709
  1264   002DF0                     u5210:
  1265   002DF0                     
  1266                           ; BSR set to: 1
  1267                           ;main.c: 114:     char Operation_Count = 0;
  1268   002DF0  0E00               	movlw	0
  1269   002DF2  6FB6               	movwf	main@Operation_Count& (0+255),b
  1270                           
  1271                           ;main.c: 115:     char Forward_Count = 0;
  1272   002DF4  0E00               	movlw	0
  1273   002DF6  6FB3               	movwf	main@Forward_Count& (0+255),b
  1274   002DF8                     
  1275                           ; BSR set to: 1
  1276                           ;main.c: 116:     char Operation_History[20] = {0};
  1277   002DF8  EE21  F09F         	lfsr	2,main@Operation_History
  1278   002DFC  0E13               	movlw	19
  1279   002DFE                     u5221:
  1280   002DFE  6ADE               	clrf	postinc2,c
  1281   002E00  06E8               	decf	wreg,f,c
  1282   002E02  E2FD               	bc	u5221
  1283   002E04                     
  1284                           ; BSR set to: 1
  1285                           ;main.c: 117:     int Color_Value;;main.c: 119:     color_click_init();
  1286   002E04  EC30  F022         	call	_color_click_init	;wreg free
  1287   002E08                     
  1288                           ;main.c: 120:     initUSART4();
  1289   002E08  EC01  F023         	call	_initUSART4	;wreg free
  1290   002E0C                     
  1291                           ;main.c: 124:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1292   002E0C  0E52               	movlw	82
  1293   002E0E  6E5F               	movwf	(??_main+1)^0,c
  1294   002E10  0E2B               	movlw	43
  1295   002E12  6E5E               	movwf	??_main^0,c
  1296   002E14  0E00               	movlw	0
  1297   002E16                     u5287:
  1298   002E16  2EE8               	decfsz	wreg,f,c
  1299   002E18  D7FE               	bra	u5287
  1300   002E1A  2E5E               	decfsz	??_main^0,f,c
  1301   002E1C  D7FC               	bra	u5287
  1302   002E1E  2E5F               	decfsz	(??_main+1)^0,f,c
  1303   002E20  D7FA               	bra	u5287
  1304   002E22  D000               	nop2	
  1305   002E24                     l4747:
  1306                           
  1307                           ;main.c: 129:         LATHbits.LATH3 = 1;
  1308   002E24  8680               	bsf	128,3,c	;volatile
  1309   002E26                     
  1310                           ;main.c: 130:         LATDbits.LATD7 = 1;
  1311   002E26  8E7C               	bsf	124,7,c	;volatile
  1312   002E28                     
  1313                           ;main.c: 134:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1314   002E28  0E52               	movlw	82
  1315   002E2A  6E5F               	movwf	(??_main+1)^0,c
  1316   002E2C  0E2B               	movlw	43
  1317   002E2E  6E5E               	movwf	??_main^0,c
  1318   002E30  0E00               	movlw	0
  1319   002E32                     u5297:
  1320   002E32  2EE8               	decfsz	wreg,f,c
  1321   002E34  D7FE               	bra	u5297
  1322   002E36  2E5E               	decfsz	??_main^0,f,c
  1323   002E38  D7FC               	bra	u5297
  1324   002E3A  2E5F               	decfsz	(??_main+1)^0,f,c
  1325   002E3C  D7FA               	bra	u5297
  1326   002E3E  D000               	nop2	
  1327   002E40                     
  1328                           ;main.c: 135:         Forward_Count++;
  1329   002E40  0101               	movlb	1	; () banked
  1330   002E42  2BB3               	incf	main@Forward_Count& (0+255),f,b
  1331   002E44                     
  1332                           ; BSR set to: 1
  1333                           ;main.c: 136:         Color_Value = color_cardCheck();
  1334   002E44  EC04  F007         	call	_color_cardCheck	;wreg free
  1335   002E48  C05C  F1B7         	movff	?_color_cardCheck,main@Color_Value
  1336   002E4C  C05D  F1B8         	movff	?_color_cardCheck+1,main@Color_Value+1
  1337   002E50                     
  1338                           ;main.c: 138:         LATHbits.LATH3 = 0;
  1339   002E50  9680               	bcf	128,3,c	;volatile
  1340   002E52                     
  1341                           ;main.c: 139:         LATDbits.LATD7 = 0;
  1342   002E52  9E7C               	bcf	124,7,c	;volatile
  1343   002E54                     
  1344                           ;main.c: 140:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1345   002E54  0E52               	movlw	82
  1346   002E56  6E5F               	movwf	(??_main+1)^0,c
  1347   002E58  0E2B               	movlw	43
  1348   002E5A  6E5E               	movwf	??_main^0,c
  1349   002E5C  0E00               	movlw	0
  1350   002E5E                     u5307:
  1351   002E5E  2EE8               	decfsz	wreg,f,c
  1352   002E60  D7FE               	bra	u5307
  1353   002E62  2E5E               	decfsz	??_main^0,f,c
  1354   002E64  D7FC               	bra	u5307
  1355   002E66  2E5F               	decfsz	(??_main+1)^0,f,c
  1356   002E68  D7FA               	bra	u5307
  1357   002E6A  D000               	nop2	
  1358   002E6C                     
  1359                           ;main.c: 142:         if(Color_Value != 0){
  1360   002E6C  0101               	movlb	1	; () banked
  1361   002E6E  51B7               	movf	main@Color_Value& (0+255),w,b
  1362   002E70  11B8               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1363   002E72  B4D8               	btfsc	status,2,c
  1364   002E74  EF3E  F017         	goto	u5231
  1365   002E78  EF40  F017         	goto	u5230
  1366   002E7C                     u5231:
  1367   002E7C  EFB7  F017         	goto	l4797
  1368   002E80                     u5230:
  1369   002E80                     
  1370                           ; BSR set to: 1
  1371                           ;main.c: 143:             Operation_History[Operation_Count] = Forward_Count + 10;
  1372   002E80  0E9F               	movlw	low main@Operation_History
  1373   002E82  25B6               	addwf	main@Operation_Count& (0+255),w,b
  1374   002E84  6ED9               	movwf	fsr2l,c
  1375   002E86  6ADA               	clrf	fsr2h,c
  1376   002E88  0E01               	movlw	high main@Operation_History
  1377   002E8A  22DA               	addwfc	fsr2h,f,c
  1378   002E8C  51B3               	movf	main@Forward_Count& (0+255),w,b
  1379   002E8E  0F0A               	addlw	10
  1380   002E90  6EDF               	movwf	indf2,c
  1381   002E92                     
  1382                           ; BSR set to: 1
  1383                           ;main.c: 144:             Forward_Count = 0;
  1384   002E92  0E00               	movlw	0
  1385   002E94  6FB3               	movwf	main@Forward_Count& (0+255),b
  1386   002E96                     
  1387                           ; BSR set to: 1
  1388                           ;main.c: 145:             Operation_Count++;
  1389   002E96  2BB6               	incf	main@Operation_Count& (0+255),f,b
  1390   002E98                     
  1391                           ; BSR set to: 1
  1392                           ;main.c: 147:             if(Color_Value == 1){
  1393   002E98  05B7               	decf	main@Color_Value& (0+255),w,b
  1394   002E9A  11B8               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1395   002E9C  A4D8               	btfss	status,2,c
  1396   002E9E  EF53  F017         	goto	u5241
  1397   002EA2  EF55  F017         	goto	u5240
  1398   002EA6                     u5241:
  1399   002EA6  EF6B  F017         	goto	l4779
  1400   002EAA                     u5240:
  1401   002EAA                     
  1402                           ; BSR set to: 1
  1403                           ;main.c: 148:                 Operation_History[Operation_Count] = Color_Value;
  1404   002EAA  0E9F               	movlw	low main@Operation_History
  1405   002EAC  25B6               	addwf	main@Operation_Count& (0+255),w,b
  1406   002EAE  6ED9               	movwf	fsr2l,c
  1407   002EB0  6ADA               	clrf	fsr2h,c
  1408   002EB2  0E01               	movlw	high main@Operation_History
  1409   002EB4  22DA               	addwfc	fsr2h,f,c
  1410   002EB6  C1B7  FFDF         	movff	main@Color_Value,indf2
  1411   002EBA                     
  1412                           ; BSR set to: 1
  1413                           ;main.c: 149:                 Operation_Count++;
  1414   002EBA  2BB6               	incf	main@Operation_Count& (0+255),f,b
  1415   002EBC                     
  1416                           ; BSR set to: 1
  1417                           ;main.c: 150:                 turnRIGHT(calibration.right_90, &motorL, &motorR);
  1418   002EBC  0E79               	movlw	low _motorL
  1419   002EBE  6E14               	movwf	turnRIGHT@mL^0,c
  1420   002EC0  0E01               	movlw	high _motorL
  1421   002EC2  6E15               	movwf	(turnRIGHT@mL+1)^0,c
  1422   002EC4  0E70               	movlw	low _motorR
  1423   002EC6  6E16               	movwf	turnRIGHT@mR^0,c
  1424   002EC8  0E01               	movlw	high _motorR
  1425   002ECA  6E17               	movwf	(turnRIGHT@mR+1)^0,c
  1426   002ECC  5185               	movf	(_calibration+3)& (0+255),w,b
  1427   002ECE  ECA4  F019         	call	_turnRIGHT
  1428                           
  1429                           ;main.c: 151:             }
  1430   002ED2  EFB7  F017         	goto	l4797
  1431   002ED6                     l4779:
  1432                           
  1433                           ; BSR set to: 1
  1434   002ED6  0E02               	movlw	2
  1435   002ED8  19B7               	xorwf	main@Color_Value& (0+255),w,b
  1436   002EDA  11B8               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1437   002EDC  A4D8               	btfss	status,2,c
  1438   002EDE  EF73  F017         	goto	u5251
  1439   002EE2  EF75  F017         	goto	u5250
  1440   002EE6                     u5251:
  1441   002EE6  EF8B  F017         	goto	l4787
  1442   002EEA                     u5250:
  1443   002EEA                     
  1444                           ; BSR set to: 1
  1445                           ;main.c: 154:                 Operation_History[Operation_Count] = Color_Value;
  1446   002EEA  0E9F               	movlw	low main@Operation_History
  1447   002EEC  25B6               	addwf	main@Operation_Count& (0+255),w,b
  1448   002EEE  6ED9               	movwf	fsr2l,c
  1449   002EF0  6ADA               	clrf	fsr2h,c
  1450   002EF2  0E01               	movlw	high main@Operation_History
  1451   002EF4  22DA               	addwfc	fsr2h,f,c
  1452   002EF6  C1B7  FFDF         	movff	main@Color_Value,indf2
  1453   002EFA                     
  1454                           ; BSR set to: 1
  1455                           ;main.c: 155:                 Operation_Count++;
  1456   002EFA  2BB6               	incf	main@Operation_Count& (0+255),f,b
  1457   002EFC                     
  1458                           ; BSR set to: 1
  1459                           ;main.c: 156:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1460   002EFC  0E79               	movlw	low _motorL
  1461   002EFE  6E14               	movwf	turnLEFT@mL^0,c
  1462   002F00  0E01               	movlw	high _motorL
  1463   002F02  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1464   002F04  0E70               	movlw	low _motorR
  1465   002F06  6E16               	movwf	turnLEFT@mR^0,c
  1466   002F08  0E01               	movlw	high _motorR
  1467   002F0A  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1468   002F0C  5184               	movf	(_calibration+2)& (0+255),w,b
  1469   002F0E  EC77  F01A         	call	_turnLEFT
  1470                           
  1471                           ;main.c: 157:             }
  1472   002F12  EFB7  F017         	goto	l4797
  1473   002F16                     l4787:
  1474                           
  1475                           ; BSR set to: 1
  1476   002F16  0E03               	movlw	3
  1477   002F18  19B7               	xorwf	main@Color_Value& (0+255),w,b
  1478   002F1A  11B8               	iorwf	(main@Color_Value+1)& (0+255),w,b
  1479   002F1C  A4D8               	btfss	status,2,c
  1480   002F1E  EF93  F017         	goto	u5261
  1481   002F22  EF95  F017         	goto	u5260
  1482   002F26                     u5261:
  1483   002F26  EFB7  F017         	goto	l347
  1484   002F2A                     u5260:
  1485   002F2A                     
  1486                           ; BSR set to: 1
  1487                           ;main.c: 159:                 Operation_History[Operation_Count] = Color_Value;
  1488   002F2A  0E9F               	movlw	low main@Operation_History
  1489   002F2C  25B6               	addwf	main@Operation_Count& (0+255),w,b
  1490   002F2E  6ED9               	movwf	fsr2l,c
  1491   002F30  6ADA               	clrf	fsr2h,c
  1492   002F32  0E01               	movlw	high main@Operation_History
  1493   002F34  22DA               	addwfc	fsr2h,f,c
  1494   002F36  C1B7  FFDF         	movff	main@Color_Value,indf2
  1495   002F3A                     
  1496                           ; BSR set to: 1
  1497                           ;main.c: 160:                 Operation_Count++;
  1498   002F3A  2BB6               	incf	main@Operation_Count& (0+255),f,b
  1499   002F3C                     
  1500                           ; BSR set to: 1
  1501                           ;main.c: 161:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1502   002F3C  0E79               	movlw	low _motorL
  1503   002F3E  6E14               	movwf	turnLEFT@mL^0,c
  1504   002F40  0E01               	movlw	high _motorL
  1505   002F42  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1506   002F44  0E70               	movlw	low _motorR
  1507   002F46  6E16               	movwf	turnLEFT@mR^0,c
  1508   002F48  0E01               	movlw	high _motorR
  1509   002F4A  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1510   002F4C  5184               	movf	(_calibration+2)& (0+255),w,b
  1511   002F4E  EC77  F01A         	call	_turnLEFT
  1512   002F52                     
  1513                           ;main.c: 162:                 turnLEFT(calibration.left_90, &motorL, &motorR);
  1514   002F52  0E79               	movlw	low _motorL
  1515   002F54  6E14               	movwf	turnLEFT@mL^0,c
  1516   002F56  0E01               	movlw	high _motorL
  1517   002F58  6E15               	movwf	(turnLEFT@mL+1)^0,c
  1518   002F5A  0E70               	movlw	low _motorR
  1519   002F5C  6E16               	movwf	turnLEFT@mR^0,c
  1520   002F5E  0E01               	movlw	high _motorR
  1521   002F60  6E17               	movwf	(turnLEFT@mR+1)^0,c
  1522   002F62  0101               	movlb	1	; () banked
  1523   002F64  5184               	movf	(_calibration+2)& (0+255),w,b
  1524   002F66  EC77  F01A         	call	_turnLEFT
  1525   002F6A  EFB7  F017         	goto	l4797
  1526   002F6E                     l347:
  1527   002F6E                     l4797:
  1528                           
  1529                           ;main.c: 168:          char senddata[20];;main.c: 170:          for (int i = 0; i < 10; 
      +                          i++) {
  1530   002F6E  0E00               	movlw	0
  1531   002F70  0101               	movlb	1	; () banked
  1532   002F72  6FB5               	movwf	(main@i+1)& (0+255),b
  1533   002F74  0E00               	movlw	0
  1534   002F76  6FB4               	movwf	main@i& (0+255),b
  1535   002F78                     l4803:
  1536                           
  1537                           ; BSR set to: 1
  1538                           ;main.c: 171:             sprintf(senddata, "%u, ", Operation_History[i]);
  1539   002F78  0E8B               	movlw	low main@senddata
  1540   002F7A  6E1D               	movwf	sprintf@s^0,c
  1541   002F7C  0E01               	movlw	high main@senddata
  1542   002F7E  6E1E               	movwf	(sprintf@s+1)^0,c
  1543   002F80  0E01               	movlw	low STR_1
  1544   002F82  6E1F               	movwf	sprintf@fmt^0,c
  1545   002F84  0E9F               	movlw	low main@Operation_History
  1546   002F86  25B4               	addwf	main@i& (0+255),w,b
  1547   002F88  6ED9               	movwf	fsr2l,c
  1548   002F8A  0E01               	movlw	high main@Operation_History
  1549   002F8C  21B5               	addwfc	(main@i+1)& (0+255),w,b
  1550   002F8E  6EDA               	movwf	fsr2h,c
  1551   002F90  50DF               	movf	indf2,w,c
  1552   002F92  6E5E               	movwf	??_main^0,c
  1553   002F94  505E               	movf	??_main^0,w,c
  1554   002F96  6E20               	movwf	(?_sprintf+3)^0,c
  1555   002F98  6A21               	clrf	(?_sprintf+4)^0,c
  1556   002F9A  EC50  F022         	call	_sprintf	;wreg free
  1557   002F9E                     
  1558                           ;main.c: 172:             sendStringSerial4(senddata);
  1559   002F9E  0E8B               	movlw	low main@senddata
  1560   002FA0  6E02               	movwf	sendStringSerial4@string^0,c
  1561   002FA2  0E01               	movlw	high main@senddata
  1562   002FA4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1563   002FA6  EC86  F022         	call	_sendStringSerial4	;wreg free
  1564   002FAA                     
  1565                           ;main.c: 173:             _delay((unsigned long)((50)*(64000000/4000.0)));
  1566   002FAA  0E05               	movlw	5
  1567   002FAC  6E5F               	movwf	(??_main+1)^0,c
  1568   002FAE  0E0F               	movlw	15
  1569   002FB0  6E5E               	movwf	??_main^0,c
  1570   002FB2  0EF1               	movlw	241
  1571   002FB4                     u5317:
  1572   002FB4  2EE8               	decfsz	wreg,f,c
  1573   002FB6  D7FE               	bra	u5317
  1574   002FB8  2E5E               	decfsz	??_main^0,f,c
  1575   002FBA  D7FC               	bra	u5317
  1576   002FBC  2E5F               	decfsz	(??_main+1)^0,f,c
  1577   002FBE  D7FA               	bra	u5317
  1578   002FC0  0000               	nop	
  1579   002FC2                     
  1580                           ;main.c: 174:         }
  1581   002FC2  0101               	movlb	1	; () banked
  1582   002FC4  4BB4               	infsnz	main@i& (0+255),f,b
  1583   002FC6  2BB5               	incf	(main@i+1)& (0+255),f,b
  1584   002FC8                     
  1585                           ; BSR set to: 1
  1586   002FC8  BFB5               	btfsc	(main@i+1)& (0+255),7,b
  1587   002FCA  EFF0  F017         	goto	u5271
  1588   002FCE  51B5               	movf	(main@i+1)& (0+255),w,b
  1589   002FD0  E109               	bnz	u5270
  1590   002FD2  0E0A               	movlw	10
  1591   002FD4  5DB4               	subwf	main@i& (0+255),w,b
  1592   002FD6  A0D8               	btfss	status,0,c
  1593   002FD8  EFF0  F017         	goto	u5271
  1594   002FDC  EFF2  F017         	goto	u5270
  1595   002FE0                     u5271:
  1596   002FE0  EFBC  F017         	goto	l4803
  1597   002FE4                     u5270:
  1598   002FE4  EF12  F017         	goto	l4747
  1599   002FE8  EF00  F000         	goto	start
  1600   002FEC                     __end_of_main:
  1601                           	callstack 0
  1602                           
  1603 ;; *************** function _turnRIGHT *****************
  1604 ;; Defined at:
  1605 ;;		line 206 in file "dc_motor_v1.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  rotation_cal    1    wreg     unsigned char 
  1608 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  1609 ;;		 -> motorL(9), 
  1610 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  1611 ;;		 -> motorR(9), 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  rotation_cal    1   26[COMRAM] unsigned char 
  1614 ;;  j               2   29[COMRAM] int 
  1615 ;;  i               2   27[COMRAM] int 
  1616 ;;  delay_time      2   33[COMRAM] int 
  1617 ;;  max_power       2   31[COMRAM] int 
  1618 ;;  acceleration    2    0        int 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;Total ram usage:       16 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 2
  1635 ;; This function calls:
  1636 ;;		___awdiv
  1637 ;;		_delay_ms_function
  1638 ;;		_setMotorPWM
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text1
  1645   003348                     __ptext1:
  1646                           	callstack 0
  1647   003348                     _turnRIGHT:
  1648                           	callstack 28
  1649                           
  1650                           ; BSR set to: 1
  1651                           ;incstack = 0
  1652                           ;turnRIGHT@rotation_calibration stored from wreg
  1653   003348  6E1B               	movwf	turnRIGHT@rotation_calibration^0,c
  1654   00334A                     
  1655                           ;dc_motor_v1.c: 207:     mL->direction = 1;
  1656   00334A  EE20 F001          	lfsr	2,1
  1657   00334E  5014               	movf	turnRIGHT@mL^0,w,c
  1658   003350  26D9               	addwf	fsr2l,f,c
  1659   003352  5015               	movf	(turnRIGHT@mL+1)^0,w,c
  1660   003354  22DA               	addwfc	fsr2h,f,c
  1661   003356  0E01               	movlw	1
  1662   003358  6EDF               	movwf	indf2,c
  1663                           
  1664                           ;dc_motor_v1.c: 208:     mR->direction = 0;
  1665   00335A  EE20 F001          	lfsr	2,1
  1666   00335E  5016               	movf	turnRIGHT@mR^0,w,c
  1667   003360  26D9               	addwf	fsr2l,f,c
  1668   003362  5017               	movf	(turnRIGHT@mR+1)^0,w,c
  1669   003364  22DA               	addwfc	fsr2h,f,c
  1670   003366  6ADF               	clrf	indf2,c
  1671   003368                     
  1672                           ;dc_motor_v1.c: 210:    int max_power = 20;
  1673   003368  0E00               	movlw	0
  1674   00336A  6E21               	movwf	(turnRIGHT@max_power+1)^0,c
  1675   00336C  0E14               	movlw	20
  1676   00336E  6E20               	movwf	turnRIGHT@max_power^0,c
  1677   003370                     
  1678                           ;dc_motor_v1.c: 212:     int delay_time = acceleration_time/max_power;
  1679   003370  0E00               	movlw	0
  1680   003372  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1681   003374  0E64               	movlw	100
  1682   003376  6E01               	movwf	___awdiv@dividend^0,c
  1683   003378  0E00               	movlw	0
  1684   00337A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1685   00337C  0E14               	movlw	20
  1686   00337E  6E03               	movwf	___awdiv@divisor^0,c
  1687   003380  EC08  F01F         	call	___awdiv	;wreg free
  1688   003384  C001  F022         	movff	?___awdiv,turnRIGHT@delay_time
  1689   003388  C002  F023         	movff	?___awdiv+1,turnRIGHT@delay_time+1
  1690   00338C                     
  1691                           ;dc_motor_v1.c: 215:     for(int i=0; i< max_power; i++){
  1692   00338C  0E00               	movlw	0
  1693   00338E  6E1D               	movwf	(turnRIGHT@i+1)^0,c
  1694   003390  0E00               	movlw	0
  1695   003392  6E1C               	movwf	turnRIGHT@i^0,c
  1696   003394  EFF8  F019         	goto	l4601
  1697   003398                     l4591:
  1698                           
  1699                           ;dc_motor_v1.c: 216:         mL->power = mL->power + 1;
  1700   003398  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  1701   00339C  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  1702   0033A0  50DF               	movf	indf2,w,c
  1703   0033A2  6E18               	movwf	??_turnRIGHT^0,c
  1704   0033A4  2818               	incf	??_turnRIGHT^0,w,c
  1705   0033A6  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  1706   0033AA  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  1707   0033AE  6EDF               	movwf	indf2,c
  1708                           
  1709                           ;dc_motor_v1.c: 217:         mR->power = mR->power + 1 ;
  1710   0033B0  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  1711   0033B4  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  1712   0033B8  50DF               	movf	indf2,w,c
  1713   0033BA  6E18               	movwf	??_turnRIGHT^0,c
  1714   0033BC  2818               	incf	??_turnRIGHT^0,w,c
  1715   0033BE  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  1716   0033C2  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  1717   0033C6  6EDF               	movwf	indf2,c
  1718   0033C8                     
  1719                           ;dc_motor_v1.c: 218:         setMotorPWM(mR);
  1720   0033C8  C016  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
  1721   0033CC  C017  F00F         	movff	turnRIGHT@mR+1,setMotorPWM@m+1
  1722   0033D0  EC16  F01C         	call	_setMotorPWM	;wreg free
  1723   0033D4                     
  1724                           ;dc_motor_v1.c: 219:         setMotorPWM(mL);
  1725   0033D4  C014  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
  1726   0033D8  C015  F00F         	movff	turnRIGHT@mL+1,setMotorPWM@m+1
  1727   0033DC  EC16  F01C         	call	_setMotorPWM	;wreg free
  1728   0033E0                     
  1729                           ;dc_motor_v1.c: 220:         delay_ms_function(delay_time);
  1730   0033E0  C022  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
  1731   0033E4  C023  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
  1732   0033E8  EC9E  F022         	call	_delay_ms_function	;wreg free
  1733   0033EC                     
  1734                           ;dc_motor_v1.c: 221:     }
  1735   0033EC  4A1C               	infsnz	turnRIGHT@i^0,f,c
  1736   0033EE  2A1D               	incf	(turnRIGHT@i+1)^0,f,c
  1737   0033F0                     l4601:
  1738   0033F0  5020               	movf	turnRIGHT@max_power^0,w,c
  1739   0033F2  5C1C               	subwf	turnRIGHT@i^0,w,c
  1740   0033F4  501D               	movf	(turnRIGHT@i+1)^0,w,c
  1741   0033F6  0A80               	xorlw	128
  1742   0033F8  6E18               	movwf	??_turnRIGHT^0,c
  1743   0033FA  5021               	movf	(turnRIGHT@max_power+1)^0,w,c
  1744   0033FC  0A80               	xorlw	128
  1745   0033FE  5818               	subwfb	??_turnRIGHT^0,w,c
  1746   003400  A0D8               	btfss	status,0,c
  1747   003402  EF05  F01A         	goto	u5081
  1748   003406  EF07  F01A         	goto	u5080
  1749   00340A                     u5081:
  1750   00340A  EFCC  F019         	goto	l4591
  1751   00340E                     u5080:
  1752   00340E                     
  1753                           ;dc_motor_v1.c: 224:     for(int j=0; j<rotation_calibration; j++){
  1754   00340E  0E00               	movlw	0
  1755   003410  6E1F               	movwf	(turnRIGHT@j+1)^0,c
  1756   003412  0E00               	movlw	0
  1757   003414  6E1E               	movwf	turnRIGHT@j^0,c
  1758   003416  EF16  F01A         	goto	l258
  1759   00341A                     l4605:
  1760                           
  1761                           ;dc_motor_v1.c: 225:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1762   00341A  0ED0               	movlw	208
  1763   00341C  6E18               	movwf	??_turnRIGHT^0,c
  1764   00341E  0ECA               	movlw	202
  1765   003420                     u5327:
  1766   003420  2EE8               	decfsz	wreg,f,c
  1767   003422  D7FE               	bra	u5327
  1768   003424  2E18               	decfsz	??_turnRIGHT^0,f,c
  1769   003426  D7FC               	bra	u5327
  1770   003428                     
  1771                           ;dc_motor_v1.c: 226:     }
  1772   003428  4A1E               	infsnz	turnRIGHT@j^0,f,c
  1773   00342A  2A1F               	incf	(turnRIGHT@j+1)^0,f,c
  1774   00342C                     l258:
  1775   00342C  501B               	movf	turnRIGHT@rotation_calibration^0,w,c
  1776   00342E  6E18               	movwf	??_turnRIGHT^0,c
  1777   003430  6A19               	clrf	(??_turnRIGHT+1)^0,c
  1778   003432  5018               	movf	??_turnRIGHT^0,w,c
  1779   003434  5C1E               	subwf	turnRIGHT@j^0,w,c
  1780   003436  501F               	movf	(turnRIGHT@j+1)^0,w,c
  1781   003438  0A80               	xorlw	128
  1782   00343A  6E1A               	movwf	(??_turnRIGHT+2)^0,c
  1783   00343C  5019               	movf	(??_turnRIGHT+1)^0,w,c
  1784   00343E  0A80               	xorlw	128
  1785   003440  581A               	subwfb	(??_turnRIGHT+2)^0,w,c
  1786   003442  A0D8               	btfss	status,0,c
  1787   003444  EF26  F01A         	goto	u5091
  1788   003448  EF28  F01A         	goto	u5090
  1789   00344C                     u5091:
  1790   00344C  EF0D  F01A         	goto	l4605
  1791   003450                     u5090:
  1792   003450  EF5E  F01A         	goto	l4623
  1793   003454                     l4609:
  1794                           
  1795                           ;dc_motor_v1.c: 230:         if(mR->power> 0 ){
  1796   003454  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  1797   003458  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  1798   00345C  50DF               	movf	indf2,w,c
  1799   00345E  B4D8               	btfsc	status,2,c
  1800   003460  EF34  F01A         	goto	u5101
  1801   003464  EF36  F01A         	goto	u5100
  1802   003468                     u5101:
  1803   003468  EF3B  F01A         	goto	l4613
  1804   00346C                     u5100:
  1805   00346C                     
  1806                           ;dc_motor_v1.c: 231:             mR->power--;
  1807   00346C  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  1808   003470  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  1809   003474  06DF               	decf	indf2,f,c
  1810   003476                     l4613:
  1811                           
  1812                           ;dc_motor_v1.c: 233:         if(mL->power> 0 ){
  1813   003476  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  1814   00347A  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  1815   00347E  50DF               	movf	indf2,w,c
  1816   003480  B4D8               	btfsc	status,2,c
  1817   003482  EF45  F01A         	goto	u5111
  1818   003486  EF47  F01A         	goto	u5110
  1819   00348A                     u5111:
  1820   00348A  EF4C  F01A         	goto	l4617
  1821   00348E                     u5110:
  1822   00348E                     
  1823                           ;dc_motor_v1.c: 234:             mL->power--;
  1824   00348E  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  1825   003492  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  1826   003496  06DF               	decf	indf2,f,c
  1827   003498                     l4617:
  1828                           
  1829                           ;dc_motor_v1.c: 236:         setMotorPWM(mR);
  1830   003498  C016  F00E         	movff	turnRIGHT@mR,setMotorPWM@m
  1831   00349C  C017  F00F         	movff	turnRIGHT@mR+1,setMotorPWM@m+1
  1832   0034A0  EC16  F01C         	call	_setMotorPWM	;wreg free
  1833   0034A4                     
  1834                           ;dc_motor_v1.c: 237:         setMotorPWM(mL);
  1835   0034A4  C014  F00E         	movff	turnRIGHT@mL,setMotorPWM@m
  1836   0034A8  C015  F00F         	movff	turnRIGHT@mL+1,setMotorPWM@m+1
  1837   0034AC  EC16  F01C         	call	_setMotorPWM	;wreg free
  1838   0034B0                     
  1839                           ;dc_motor_v1.c: 238:         delay_ms_function(delay_time);
  1840   0034B0  C022  F001         	movff	turnRIGHT@delay_time,delay_ms_function@milliseconds
  1841   0034B4  C023  F002         	movff	turnRIGHT@delay_time+1,delay_ms_function@milliseconds+1
  1842   0034B8  EC9E  F022         	call	_delay_ms_function	;wreg free
  1843   0034BC                     l4623:
  1844                           
  1845                           ;dc_motor_v1.c: 229:     while(mL->power || mR->power > 0){
  1846   0034BC  C014  FFD9         	movff	turnRIGHT@mL,fsr2l
  1847   0034C0  C015  FFDA         	movff	turnRIGHT@mL+1,fsr2h
  1848   0034C4  50DF               	movf	indf2,w,c
  1849   0034C6  A4D8               	btfss	status,2,c
  1850   0034C8  EF68  F01A         	goto	u5121
  1851   0034CC  EF6A  F01A         	goto	u5120
  1852   0034D0                     u5121:
  1853   0034D0  EF2A  F01A         	goto	l4609
  1854   0034D4                     u5120:
  1855   0034D4  C016  FFD9         	movff	turnRIGHT@mR,fsr2l
  1856   0034D8  C017  FFDA         	movff	turnRIGHT@mR+1,fsr2h
  1857   0034DC  50DF               	movf	indf2,w,c
  1858   0034DE  A4D8               	btfss	status,2,c
  1859   0034E0  EF74  F01A         	goto	u5131
  1860   0034E4  EF76  F01A         	goto	u5130
  1861   0034E8                     u5131:
  1862   0034E8  EF2A  F01A         	goto	l4609
  1863   0034EC                     u5130:
  1864   0034EC  0012               	return		;funcret
  1865   0034EE                     __end_of_turnRIGHT:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _turnLEFT *****************
  1869 ;; Defined at:
  1870 ;;		line 168 in file "dc_motor_v1.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  rotation_cal    1    wreg     unsigned char 
  1873 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  1874 ;;		 -> motorL(9), 
  1875 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  1876 ;;		 -> motorR(9), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  rotation_cal    1   26[COMRAM] unsigned char 
  1879 ;;  j               2   29[COMRAM] int 
  1880 ;;  i               2   27[COMRAM] int 
  1881 ;;  delay_time      2   33[COMRAM] int 
  1882 ;;  max_power       2   31[COMRAM] int 
  1883 ;;  acceleration    2    0        int 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1894 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1895 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;Total ram usage:       16 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 2
  1900 ;; This function calls:
  1901 ;;		___awdiv
  1902 ;;		_delay_ms_function
  1903 ;;		_setMotorPWM
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text2
  1910   0034EE                     __ptext2:
  1911                           	callstack 0
  1912   0034EE                     _turnLEFT:
  1913                           	callstack 28
  1914                           
  1915                           ;incstack = 0
  1916                           ;turnLEFT@rotation_calibration stored from wreg
  1917   0034EE  6E1B               	movwf	turnLEFT@rotation_calibration^0,c
  1918   0034F0                     
  1919                           ;dc_motor_v1.c: 169:     mL->direction = 0;
  1920   0034F0  EE20 F001          	lfsr	2,1
  1921   0034F4  5014               	movf	turnLEFT@mL^0,w,c
  1922   0034F6  26D9               	addwf	fsr2l,f,c
  1923   0034F8  5015               	movf	(turnLEFT@mL+1)^0,w,c
  1924   0034FA  22DA               	addwfc	fsr2h,f,c
  1925   0034FC  6ADF               	clrf	indf2,c
  1926                           
  1927                           ;dc_motor_v1.c: 170:     mR->direction = 1;
  1928   0034FE  EE20 F001          	lfsr	2,1
  1929   003502  5016               	movf	turnLEFT@mR^0,w,c
  1930   003504  26D9               	addwf	fsr2l,f,c
  1931   003506  5017               	movf	(turnLEFT@mR+1)^0,w,c
  1932   003508  22DA               	addwfc	fsr2h,f,c
  1933   00350A  0E01               	movlw	1
  1934   00350C  6EDF               	movwf	indf2,c
  1935   00350E                     
  1936                           ;dc_motor_v1.c: 172:     int max_power = 20;
  1937   00350E  0E00               	movlw	0
  1938   003510  6E21               	movwf	(turnLEFT@max_power+1)^0,c
  1939   003512  0E14               	movlw	20
  1940   003514  6E20               	movwf	turnLEFT@max_power^0,c
  1941   003516                     
  1942                           ;dc_motor_v1.c: 174:     int delay_time = acceleration_time/max_power;
  1943   003516  0E00               	movlw	0
  1944   003518  6E02               	movwf	(___awdiv@dividend+1)^0,c
  1945   00351A  0E64               	movlw	100
  1946   00351C  6E01               	movwf	___awdiv@dividend^0,c
  1947   00351E  0E00               	movlw	0
  1948   003520  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1949   003522  0E14               	movlw	20
  1950   003524  6E03               	movwf	___awdiv@divisor^0,c
  1951   003526  EC08  F01F         	call	___awdiv	;wreg free
  1952   00352A  C001  F022         	movff	?___awdiv,turnLEFT@delay_time
  1953   00352E  C002  F023         	movff	?___awdiv+1,turnLEFT@delay_time+1
  1954   003532                     
  1955                           ;dc_motor_v1.c: 177:     for(int i=0; i< max_power; i++){
  1956   003532  0E00               	movlw	0
  1957   003534  6E1D               	movwf	(turnLEFT@i+1)^0,c
  1958   003536  0E00               	movlw	0
  1959   003538  6E1C               	movwf	turnLEFT@i^0,c
  1960   00353A  EFCB  F01A         	goto	l4555
  1961   00353E                     l4545:
  1962                           
  1963                           ;dc_motor_v1.c: 178:         mL->power = mL->power + 1;
  1964   00353E  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  1965   003542  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  1966   003546  50DF               	movf	indf2,w,c
  1967   003548  6E18               	movwf	??_turnLEFT^0,c
  1968   00354A  2818               	incf	??_turnLEFT^0,w,c
  1969   00354C  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  1970   003550  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  1971   003554  6EDF               	movwf	indf2,c
  1972                           
  1973                           ;dc_motor_v1.c: 179:         mR->power = mR->power + 1 ;
  1974   003556  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  1975   00355A  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  1976   00355E  50DF               	movf	indf2,w,c
  1977   003560  6E18               	movwf	??_turnLEFT^0,c
  1978   003562  2818               	incf	??_turnLEFT^0,w,c
  1979   003564  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  1980   003568  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  1981   00356C  6EDF               	movwf	indf2,c
  1982   00356E                     
  1983                           ;dc_motor_v1.c: 180:         setMotorPWM(mR);
  1984   00356E  C016  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  1985   003572  C017  F00F         	movff	turnLEFT@mR+1,setMotorPWM@m+1
  1986   003576  EC16  F01C         	call	_setMotorPWM	;wreg free
  1987   00357A                     
  1988                           ;dc_motor_v1.c: 181:         setMotorPWM(mL);
  1989   00357A  C014  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  1990   00357E  C015  F00F         	movff	turnLEFT@mL+1,setMotorPWM@m+1
  1991   003582  EC16  F01C         	call	_setMotorPWM	;wreg free
  1992   003586                     
  1993                           ;dc_motor_v1.c: 182:         delay_ms_function(delay_time);
  1994   003586  C022  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  1995   00358A  C023  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  1996   00358E  EC9E  F022         	call	_delay_ms_function	;wreg free
  1997   003592                     
  1998                           ;dc_motor_v1.c: 183:     }
  1999   003592  4A1C               	infsnz	turnLEFT@i^0,f,c
  2000   003594  2A1D               	incf	(turnLEFT@i+1)^0,f,c
  2001   003596                     l4555:
  2002   003596  5020               	movf	turnLEFT@max_power^0,w,c
  2003   003598  5C1C               	subwf	turnLEFT@i^0,w,c
  2004   00359A  501D               	movf	(turnLEFT@i+1)^0,w,c
  2005   00359C  0A80               	xorlw	128
  2006   00359E  6E18               	movwf	??_turnLEFT^0,c
  2007   0035A0  5021               	movf	(turnLEFT@max_power+1)^0,w,c
  2008   0035A2  0A80               	xorlw	128
  2009   0035A4  5818               	subwfb	??_turnLEFT^0,w,c
  2010   0035A6  A0D8               	btfss	status,0,c
  2011   0035A8  EFD8  F01A         	goto	u5021
  2012   0035AC  EFDA  F01A         	goto	u5020
  2013   0035B0                     u5021:
  2014   0035B0  EF9F  F01A         	goto	l4545
  2015   0035B4                     u5020:
  2016   0035B4                     
  2017                           ;dc_motor_v1.c: 186:     for(int j=0; j<rotation_calibration; j++){
  2018   0035B4  0E00               	movlw	0
  2019   0035B6  6E1F               	movwf	(turnLEFT@j+1)^0,c
  2020   0035B8  0E00               	movlw	0
  2021   0035BA  6E1E               	movwf	turnLEFT@j^0,c
  2022   0035BC  EFE9  F01A         	goto	l244
  2023   0035C0                     l4559:
  2024                           
  2025                           ;dc_motor_v1.c: 187:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2026   0035C0  0ED0               	movlw	208
  2027   0035C2  6E18               	movwf	??_turnLEFT^0,c
  2028   0035C4  0ECA               	movlw	202
  2029   0035C6                     u5337:
  2030   0035C6  2EE8               	decfsz	wreg,f,c
  2031   0035C8  D7FE               	bra	u5337
  2032   0035CA  2E18               	decfsz	??_turnLEFT^0,f,c
  2033   0035CC  D7FC               	bra	u5337
  2034   0035CE                     
  2035                           ;dc_motor_v1.c: 188:     }
  2036   0035CE  4A1E               	infsnz	turnLEFT@j^0,f,c
  2037   0035D0  2A1F               	incf	(turnLEFT@j+1)^0,f,c
  2038   0035D2                     l244:
  2039   0035D2  501B               	movf	turnLEFT@rotation_calibration^0,w,c
  2040   0035D4  6E18               	movwf	??_turnLEFT^0,c
  2041   0035D6  6A19               	clrf	(??_turnLEFT+1)^0,c
  2042   0035D8  5018               	movf	??_turnLEFT^0,w,c
  2043   0035DA  5C1E               	subwf	turnLEFT@j^0,w,c
  2044   0035DC  501F               	movf	(turnLEFT@j+1)^0,w,c
  2045   0035DE  0A80               	xorlw	128
  2046   0035E0  6E1A               	movwf	(??_turnLEFT+2)^0,c
  2047   0035E2  5019               	movf	(??_turnLEFT+1)^0,w,c
  2048   0035E4  0A80               	xorlw	128
  2049   0035E6  581A               	subwfb	(??_turnLEFT+2)^0,w,c
  2050   0035E8  A0D8               	btfss	status,0,c
  2051   0035EA  EFF9  F01A         	goto	u5031
  2052   0035EE  EFFB  F01A         	goto	u5030
  2053   0035F2                     u5031:
  2054   0035F2  EFE0  F01A         	goto	l4559
  2055   0035F6                     u5030:
  2056   0035F6  EF31  F01B         	goto	l4577
  2057   0035FA                     l4563:
  2058                           
  2059                           ;dc_motor_v1.c: 192:         if(mR->power> 0 ){
  2060   0035FA  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2061   0035FE  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2062   003602  50DF               	movf	indf2,w,c
  2063   003604  B4D8               	btfsc	status,2,c
  2064   003606  EF07  F01B         	goto	u5041
  2065   00360A  EF09  F01B         	goto	u5040
  2066   00360E                     u5041:
  2067   00360E  EF0E  F01B         	goto	l4567
  2068   003612                     u5040:
  2069   003612                     
  2070                           ;dc_motor_v1.c: 193:             mR->power--;
  2071   003612  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2072   003616  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2073   00361A  06DF               	decf	indf2,f,c
  2074   00361C                     l4567:
  2075                           
  2076                           ;dc_motor_v1.c: 195:         if(mL->power> 0 ){
  2077   00361C  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2078   003620  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2079   003624  50DF               	movf	indf2,w,c
  2080   003626  B4D8               	btfsc	status,2,c
  2081   003628  EF18  F01B         	goto	u5051
  2082   00362C  EF1A  F01B         	goto	u5050
  2083   003630                     u5051:
  2084   003630  EF1F  F01B         	goto	l4571
  2085   003634                     u5050:
  2086   003634                     
  2087                           ;dc_motor_v1.c: 196:             mL->power--;
  2088   003634  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2089   003638  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2090   00363C  06DF               	decf	indf2,f,c
  2091   00363E                     l4571:
  2092                           
  2093                           ;dc_motor_v1.c: 198:         setMotorPWM(mR);
  2094   00363E  C016  F00E         	movff	turnLEFT@mR,setMotorPWM@m
  2095   003642  C017  F00F         	movff	turnLEFT@mR+1,setMotorPWM@m+1
  2096   003646  EC16  F01C         	call	_setMotorPWM	;wreg free
  2097   00364A                     
  2098                           ;dc_motor_v1.c: 199:         setMotorPWM(mL);
  2099   00364A  C014  F00E         	movff	turnLEFT@mL,setMotorPWM@m
  2100   00364E  C015  F00F         	movff	turnLEFT@mL+1,setMotorPWM@m+1
  2101   003652  EC16  F01C         	call	_setMotorPWM	;wreg free
  2102   003656                     
  2103                           ;dc_motor_v1.c: 200:         delay_ms_function(delay_time);
  2104   003656  C022  F001         	movff	turnLEFT@delay_time,delay_ms_function@milliseconds
  2105   00365A  C023  F002         	movff	turnLEFT@delay_time+1,delay_ms_function@milliseconds+1
  2106   00365E  EC9E  F022         	call	_delay_ms_function	;wreg free
  2107   003662                     l4577:
  2108                           
  2109                           ;dc_motor_v1.c: 191:     while(mL->power || mR->power > 0){
  2110   003662  C014  FFD9         	movff	turnLEFT@mL,fsr2l
  2111   003666  C015  FFDA         	movff	turnLEFT@mL+1,fsr2h
  2112   00366A  50DF               	movf	indf2,w,c
  2113   00366C  A4D8               	btfss	status,2,c
  2114   00366E  EF3B  F01B         	goto	u5061
  2115   003672  EF3D  F01B         	goto	u5060
  2116   003676                     u5061:
  2117   003676  EFFD  F01A         	goto	l4563
  2118   00367A                     u5060:
  2119   00367A  C016  FFD9         	movff	turnLEFT@mR,fsr2l
  2120   00367E  C017  FFDA         	movff	turnLEFT@mR+1,fsr2h
  2121   003682  50DF               	movf	indf2,w,c
  2122   003684  A4D8               	btfss	status,2,c
  2123   003686  EF47  F01B         	goto	u5071
  2124   00368A  EF49  F01B         	goto	u5070
  2125   00368E                     u5071:
  2126   00368E  EFFD  F01A         	goto	l4563
  2127   003692                     u5070:
  2128   003692  0012               	return		;funcret
  2129   003694                     __end_of_turnLEFT:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _switch_calibration *****************
  2133 ;; Defined at:
  2134 ;;		line 44 in file "calibration.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  calibration_    2    0[COMRAM] PTR int 
  2137 ;;		 -> calibration(9), 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;Total ram usage:        4 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text3
  2163   003F8E                     __ptext3:
  2164                           	callstack 0
  2165   003F8E                     _switch_calibration:
  2166                           	callstack 30
  2167   003F8E                     l137:
  2168                           
  2169                           ;calibration.c: 46:         if(!PORTFbits.RF2){
  2170   003F8E  B48E               	btfsc	142,2,c	;volatile
  2171   003F90  EFCC  F01F         	goto	u4941
  2172   003F94  EFCE  F01F         	goto	u4940
  2173   003F98                     u4941:
  2174   003F98  EFFE  F01F         	goto	l138
  2175   003F9C                     u4940:
  2176   003F9C                     
  2177                           ;calibration.c: 47:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2178   003F9C  0E11               	movlw	17
  2179   003F9E  6E04               	movwf	(??_switch_calibration+1)^0,c
  2180   003FA0  0E3C               	movlw	60
  2181   003FA2  6E03               	movwf	??_switch_calibration^0,c
  2182   003FA4  0ECB               	movlw	203
  2183   003FA6                     u5347:
  2184   003FA6  2EE8               	decfsz	wreg,f,c
  2185   003FA8  D7FE               	bra	u5347
  2186   003FAA  2E03               	decfsz	??_switch_calibration^0,f,c
  2187   003FAC  D7FC               	bra	u5347
  2188   003FAE  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2189   003FB0  D7FA               	bra	u5347
  2190   003FB2  0000               	nop	
  2191   003FB4                     
  2192                           ;calibration.c: 48:             *calibration_index = *calibration_index + 1;
  2193   003FB4  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  2194   003FB8  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  2195   003FBC  CFDE F003          	movff	postinc2,??_switch_calibration
  2196   003FC0  CFDD F004          	movff	postdec2,??_switch_calibration+1
  2197   003FC4  0E01               	movlw	1
  2198   003FC6  2603               	addwf	??_switch_calibration^0,f,c
  2199   003FC8  0E00               	movlw	0
  2200   003FCA  2204               	addwfc	(??_switch_calibration+1)^0,f,c
  2201   003FCC  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  2202   003FD0  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  2203   003FD4  C003  FFDE         	movff	??_switch_calibration,postinc2
  2204   003FD8  C004  FFDD         	movff	??_switch_calibration+1,postdec2
  2205   003FDC                     
  2206                           ;calibration.c: 49:             LATDbits.LATD7 = 1;
  2207   003FDC  8E7C               	bsf	124,7,c	;volatile
  2208   003FDE                     
  2209                           ;calibration.c: 50:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2210   003FDE  0E11               	movlw	17
  2211   003FE0  6E04               	movwf	(??_switch_calibration+1)^0,c
  2212   003FE2  0E3C               	movlw	60
  2213   003FE4  6E03               	movwf	??_switch_calibration^0,c
  2214   003FE6  0ECB               	movlw	203
  2215   003FE8                     u5357:
  2216   003FE8  2EE8               	decfsz	wreg,f,c
  2217   003FEA  D7FE               	bra	u5357
  2218   003FEC  2E03               	decfsz	??_switch_calibration^0,f,c
  2219   003FEE  D7FC               	bra	u5357
  2220   003FF0  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2221   003FF2  D7FA               	bra	u5357
  2222   003FF4  0000               	nop	
  2223   003FF6                     
  2224                           ;calibration.c: 51:             LATDbits.LATD7 = 0;
  2225   003FF6  9E7C               	bcf	124,7,c	;volatile
  2226                           
  2227                           ;calibration.c: 52:             break;
  2228   003FF8  EF1F  F020         	goto	l142
  2229   003FFC                     l138:
  2230                           
  2231                           ;calibration.c: 55:         if(!PORTFbits.RF3){
  2232   003FFC  B68E               	btfsc	142,3,c	;volatile
  2233   003FFE  EF03  F020         	goto	u4951
  2234   004002  EF05  F020         	goto	u4950
  2235   004006                     u4951:
  2236   004006  EFC7  F01F         	goto	l137
  2237   00400A                     u4950:
  2238   00400A                     
  2239                           ;calibration.c: 56:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2240   00400A  0E11               	movlw	17
  2241   00400C  6E04               	movwf	(??_switch_calibration+1)^0,c
  2242   00400E  0E3C               	movlw	60
  2243   004010  6E03               	movwf	??_switch_calibration^0,c
  2244   004012  0ECB               	movlw	203
  2245   004014                     u5367:
  2246   004014  2EE8               	decfsz	wreg,f,c
  2247   004016  D7FE               	bra	u5367
  2248   004018  2E03               	decfsz	??_switch_calibration^0,f,c
  2249   00401A  D7FC               	bra	u5367
  2250   00401C  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2251   00401E  D7FA               	bra	u5367
  2252   004020  0000               	nop	
  2253   004022                     
  2254                           ;calibration.c: 57:             LATHbits.LATH3 = 1;
  2255   004022  8680               	bsf	128,3,c	;volatile
  2256                           
  2257                           ;calibration.c: 58:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2258   004024  0E11               	movlw	17
  2259   004026  6E04               	movwf	(??_switch_calibration+1)^0,c
  2260   004028  0E3C               	movlw	60
  2261   00402A  6E03               	movwf	??_switch_calibration^0,c
  2262   00402C  0ECB               	movlw	203
  2263   00402E                     u5377:
  2264   00402E  2EE8               	decfsz	wreg,f,c
  2265   004030  D7FE               	bra	u5377
  2266   004032  2E03               	decfsz	??_switch_calibration^0,f,c
  2267   004034  D7FC               	bra	u5377
  2268   004036  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  2269   004038  D7FA               	bra	u5377
  2270   00403A  0000               	nop	
  2271   00403C                     
  2272                           ;calibration.c: 59:             LATHbits.LATH3 = 0;
  2273   00403C  9680               	bcf	128,3,c	;volatile
  2274   00403E                     l142:
  2275   00403E  0012               	return		;funcret
  2276   004040                     __end_of_switch_calibration:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _sprintf *****************
  2280 ;; Defined at:
  2281 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  s               2   28[COMRAM] PTR unsigned char 
  2284 ;;		 -> main@senddata(20), 
  2285 ;;  fmt             1   30[COMRAM] PTR const unsigned char 
  2286 ;;		 -> STR_1(5), 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  f              12   34[COMRAM] struct _IO_FILE
  2289 ;;  ret             2    0        int 
  2290 ;;  ap              1   33[COMRAM] PTR void [1]
  2291 ;;		 -> ?_sprintf(2), 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  2   28[COMRAM] int 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2301 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;Total ram usage:       18 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 4
  2308 ;; This function calls:
  2309 ;;		_vfprintf
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text4
  2316   0044A0                     __ptext4:
  2317                           	callstack 0
  2318   0044A0                     _sprintf:
  2319                           	callstack 26
  2320   0044A0  0E20               	movlw	low (?_sprintf+3)
  2321   0044A2  6E22               	movwf	sprintf@ap^0,c
  2322   0044A4  C01D  F023         	movff	sprintf@s,sprintf@f
  2323   0044A8  C01E  F024         	movff	sprintf@s+1,sprintf@f+1
  2324   0044AC  0E00               	movlw	0
  2325   0044AE  6E27               	movwf	(sprintf@f+4)^0,c
  2326   0044B0  0E00               	movlw	0
  2327   0044B2  6E26               	movwf	(sprintf@f+3)^0,c
  2328   0044B4  0E00               	movlw	0
  2329   0044B6  6E2E               	movwf	(sprintf@f+11)^0,c
  2330   0044B8  0E00               	movlw	0
  2331   0044BA  6E2D               	movwf	(sprintf@f+10)^0,c
  2332   0044BC  0E23               	movlw	low sprintf@f
  2333   0044BE  6E19               	movwf	vfprintf@fp^0,c
  2334   0044C0  C01F  F01A         	movff	sprintf@fmt,vfprintf@fmt
  2335   0044C4  0E22               	movlw	low sprintf@ap
  2336   0044C6  6E1B               	movwf	vfprintf@ap^0,c
  2337   0044C8  ECEE  F021         	call	_vfprintf	;wreg free
  2338   0044CC  5026               	movf	(sprintf@f+3)^0,w,c
  2339   0044CE  241D               	addwf	sprintf@s^0,w,c
  2340   0044D0  6ED9               	movwf	fsr2l,c
  2341   0044D2  5027               	movf	(sprintf@f+4)^0,w,c
  2342   0044D4  201E               	addwfc	(sprintf@s+1)^0,w,c
  2343   0044D6  6EDA               	movwf	fsr2h,c
  2344   0044D8  6ADF               	clrf	indf2,c
  2345   0044DA  0012               	return		;funcret
  2346   0044DC                     __end_of_sprintf:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _vfprintf *****************
  2350 ;; Defined at:
  2351 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  2354 ;;		 -> sprintf@f(12), 
  2355 ;;  fmt             1   25[COMRAM] PTR const unsigned char 
  2356 ;;		 -> STR_1(5), 
  2357 ;;  ap              1   26[COMRAM] PTR PTR void 
  2358 ;;		 -> sprintf@ap(1), 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  cfmt            1   27[COMRAM] PTR unsigned char 
  2361 ;;		 -> STR_1(5), 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  2   24[COMRAM] int 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2371 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;Total ram usage:        4 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 3
  2378 ;; This function calls:
  2379 ;;		_vfpfcnvrt
  2380 ;; This function is called by:
  2381 ;;		_sprintf
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text5
  2386   0043DC                     __ptext5:
  2387                           	callstack 0
  2388   0043DC                     _vfprintf:
  2389                           	callstack 26
  2390   0043DC                     
  2391                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2392   0043DC  C01A  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2395   0043E0  EFFA  F021         	goto	l3759
  2396   0043E4                     l3757:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2399   0043E4  C019  F00E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2400   0043E8  0E1C               	movlw	low vfprintf@cfmt
  2401   0043EA  6E0F               	movwf	vfpfcnvrt@fmt^0,c
  2402   0043EC  C01B  F010         	movff	vfprintf@ap,vfpfcnvrt@ap
  2403   0043F0  EC4A  F01B         	call	_vfpfcnvrt	;wreg free
  2404   0043F4                     l3759:
  2405                           
  2406                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2407   0043F4  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2408   0043F8                     	if	1	;There is more than 1 active tblptr byte
  2409   0043F8  0E0E               	movlw	high __smallconst
  2410   0043FA  6EF7               	movwf	tblptrh,c
  2411   0043FC                     	endif
  2412   0043FC                     	if	0	;tblptru may be non-zero
  2413   0043FC                     	endif
  2414   0043FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2415   0043FC  0E00               	movlw	low (__smallconst shr (0+16))
  2416   0043FE  6EF8               	movwf	tblptru,c
  2417   004400                     	endif
  2418   004400  0008               	tblrd		*
  2419   004402  50F5               	movf	tablat,w,c
  2420   004404  0900               	iorlw	0
  2421   004406  A4D8               	btfss	status,2,c
  2422   004408  EF08  F022         	goto	u3921
  2423   00440C  EF0A  F022         	goto	u3920
  2424   004410                     u3921:
  2425   004410  EFF2  F021         	goto	l3757
  2426   004414                     u3920:
  2427   004414                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2429   004414  0E00               	movlw	0
  2430   004416  6E1A               	movwf	(?_vfprintf+1)^0,c
  2431   004418  0E00               	movlw	0
  2432   00441A  6E19               	movwf	?_vfprintf^0,c
  2433   00441C  0012               	return		;funcret
  2434   00441E                     __end_of_vfprintf:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _vfpfcnvrt *****************
  2438 ;; Defined at:
  2439 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2442 ;;		 -> sprintf@f(12), 
  2443 ;;  fmt             1   14[COMRAM] PTR PTR unsigned char 
  2444 ;;		 -> vfprintf@cfmt(1), 
  2445 ;;  ap              1   15[COMRAM] PTR PTR void 
  2446 ;;		 -> sprintf@ap(1), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  convarg         4   18[COMRAM] struct .
  2449 ;;  c               1   23[COMRAM] unsigned char 
  2450 ;;  cp              1   22[COMRAM] PTR unsigned char 
  2451 ;;		 -> STR_1(5), 
  2452 ;;  done            1    0        _Bool 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2462 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;Total ram usage:       11 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 2
  2469 ;; This function calls:
  2470 ;;		___lwdiv
  2471 ;;		___lwmod
  2472 ;;		_fputc
  2473 ;; This function is called by:
  2474 ;;		_vfprintf
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text6
  2479   003694                     __ptext6:
  2480                           	callstack 0
  2481   003694                     _vfpfcnvrt:
  2482                           	callstack 26
  2483   003694                     
  2484                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2485   003694  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2486   003696  6ED9               	movwf	fsr2l,c
  2487   003698  6ADA               	clrf	fsr2h,c
  2488   00369A  CFDF FFF6          	movff	indf2,tblptrl
  2489   00369E                     	if	1	;There is more than 1 active tblptr byte
  2490   00369E  0E0E               	movlw	high __smallconst
  2491   0036A0  6EF7               	movwf	tblptrh,c
  2492   0036A2                     	endif
  2493   0036A2                     	if	0	;tblptru may be non-zero
  2494   0036A2                     	endif
  2495   0036A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2496   0036A2  0E00               	movlw	low (__smallconst shr (0+16))
  2497   0036A4  6EF8               	movwf	tblptru,c
  2498   0036A6                     	endif
  2499   0036A6  0008               	tblrd		*
  2500   0036A8  50F5               	movf	tablat,w,c
  2501   0036AA  0A25               	xorlw	37
  2502   0036AC  A4D8               	btfss	status,2,c
  2503   0036AE  EF5B  F01B         	goto	u3651
  2504   0036B2  EF5D  F01B         	goto	u3650
  2505   0036B6                     u3651:
  2506   0036B6  EF02  F01C         	goto	l3575
  2507   0036BA                     u3650:
  2508   0036BA                     
  2509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2510   0036BA  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2511   0036BC  6ED9               	movwf	fsr2l,c
  2512   0036BE  6ADA               	clrf	fsr2h,c
  2513   0036C0  2ADF               	incf	indf2,f,c
  2514   0036C2                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2516   0036C2  0E00               	movlw	0
  2517   0036C4  0100               	movlb	0	; () banked
  2518   0036C6  6FF4               	movwf	(_width+1)& (0+255),b
  2519   0036C8  0E00               	movlw	0
  2520   0036CA  6FF3               	movwf	_width& (0+255),b
  2521   0036CC  C0F3  F0F7         	movff	_width,_flags
  2522   0036D0                     
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2525   0036D0  69F5               	setf	_prec& (0+255),b
  2526   0036D2  69F6               	setf	(_prec+1)& (0+255),b
  2527   0036D4                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2530   0036D4  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2531   0036D6  6ED9               	movwf	fsr2l,c
  2532   0036D8  6ADA               	clrf	fsr2h,c
  2533   0036DA  50DF               	movf	indf2,w,c
  2534   0036DC  6E17               	movwf	vfpfcnvrt@cp^0,c
  2535   0036DE                     
  2536                           ; BSR set to: 0
  2537   0036DE  C017  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2538   0036E2                     	if	1	;There is more than 1 active tblptr byte
  2539   0036E2  0E0E               	movlw	high __smallconst
  2540   0036E4  6EF7               	movwf	tblptrh,c
  2541   0036E6                     	endif
  2542   0036E6                     	if	0	;tblptru may be non-zero
  2543   0036E6                     	endif
  2544   0036E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2545   0036E6  0E00               	movlw	low (__smallconst shr (0+16))
  2546   0036E8  6EF8               	movwf	tblptru,c
  2547   0036EA                     	endif
  2548   0036EA  0008               	tblrd		*
  2549   0036EC  50F5               	movf	tablat,w,c
  2550   0036EE  0A75               	xorlw	117
  2551   0036F0  A4D8               	btfss	status,2,c
  2552   0036F2  EF7D  F01B         	goto	u3661
  2553   0036F6  EF7F  F01B         	goto	u3660
  2554   0036FA                     u3661:
  2555   0036FA  EFFC  F01B         	goto	l3571
  2556   0036FE                     u3660:
  2557   0036FE                     
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2560   0036FE  5010               	movf	vfpfcnvrt@ap^0,w,c
  2561   003700  6ED9               	movwf	fsr2l,c
  2562   003702  6ADA               	clrf	fsr2h,c
  2563   003704  0E02               	movlw	2
  2564   003706  26DF               	addwf	indf2,f,c
  2565   003708  5CDF               	subwf	indf2,w,c
  2566   00370A  6ED9               	movwf	fsr2l,c
  2567   00370C  6ADA               	clrf	fsr2h,c
  2568   00370E  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  2569   003712  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  2570   003716                     
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2573   003716  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2574   003718  6ED9               	movwf	fsr2l,c
  2575   00371A  6ADA               	clrf	fsr2h,c
  2576   00371C  2817               	incf	vfpfcnvrt@cp^0,w,c
  2577   00371E  6EDF               	movwf	indf2,c
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2580   003720  EFE4  F01B         	goto	l3569
  2581   003724                     l3551:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2585   003724  0E20               	movlw	32
  2586   003726  6E18               	movwf	vfpfcnvrt@c^0,c
  2587   003728                     l3553:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2590   003728  0618               	decf	vfpfcnvrt@c^0,f,c
  2591   00372A  0E3C               	movlw	low _dbuf
  2592   00372C  2418               	addwf	vfpfcnvrt@c^0,w,c
  2593   00372E  6ED9               	movwf	fsr2l,c
  2594   003730  6ADA               	clrf	fsr2h,c
  2595   003732  0E01               	movlw	high _dbuf
  2596   003734  22DA               	addwfc	fsr2h,f,c
  2597   003736  C013  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  2598   00373A  C014  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  2599   00373E  0E00               	movlw	0
  2600   003740  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2601   003742  0E0A               	movlw	10
  2602   003744  6E03               	movwf	___lwmod@divisor^0,c
  2603   003746  ECF9  F020         	call	___lwmod	;wreg free
  2604   00374A  5001               	movf	?___lwmod^0,w,c
  2605   00374C  0F30               	addlw	48
  2606   00374E  6EDF               	movwf	indf2,c
  2607   003750                     
  2608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2609   003750  C013  F007         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  2610   003754  C014  F008         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  2611   003758  0E00               	movlw	0
  2612   00375A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2613   00375C  0E0A               	movlw	10
  2614   00375E  6E09               	movwf	___lwdiv@divisor^0,c
  2615   003760  ECBF  F020         	call	___lwdiv	;wreg free
  2616   003764  C007  F013         	movff	?___lwdiv,vfpfcnvrt@convarg
  2617   003768  C008  F014         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  2618   00376C                     
  2619                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2620   00376C  5013               	movf	vfpfcnvrt@convarg^0,w,c
  2621   00376E  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2622   003770  B4D8               	btfsc	status,2,c
  2623   003772  EFBD  F01B         	goto	u3671
  2624   003776  EFBF  F01B         	goto	u3670
  2625   00377A                     u3671:
  2626   00377A  EFD9  F01B         	goto	l3565
  2627   00377E                     u3670:
  2628   00377E  5018               	movf	vfpfcnvrt@c^0,w,c
  2629   003780  A4D8               	btfss	status,2,c
  2630   003782  EFC5  F01B         	goto	u3681
  2631   003786  EFC7  F01B         	goto	u3680
  2632   00378A                     u3681:
  2633   00378A  EF94  F01B         	goto	l3553
  2634   00378E                     u3680:
  2635   00378E  EFD9  F01B         	goto	l3565
  2636   003792                     l3561:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2639   003792  0E3C               	movlw	low _dbuf
  2640   003794  2418               	addwf	vfpfcnvrt@c^0,w,c
  2641   003796  6ED9               	movwf	fsr2l,c
  2642   003798  6ADA               	clrf	fsr2h,c
  2643   00379A  0E01               	movlw	high _dbuf
  2644   00379C  22DA               	addwfc	fsr2h,f,c
  2645   00379E  50DF               	movf	indf2,w,c
  2646   0037A0  6E11               	movwf	??_vfpfcnvrt^0,c
  2647   0037A2  5011               	movf	??_vfpfcnvrt^0,w,c
  2648   0037A4  6E01               	movwf	fputc@c^0,c
  2649   0037A6  6A02               	clrf	(fputc@c+1)^0,c
  2650   0037A8  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2651   0037AC  EC6A  F01F         	call	_fputc	;wreg free
  2652   0037B0  2A18               	incf	vfpfcnvrt@c^0,f,c
  2653   0037B2                     l3565:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2656   0037B2  0E20               	movlw	32
  2657   0037B4  1818               	xorwf	vfpfcnvrt@c^0,w,c
  2658   0037B6  A4D8               	btfss	status,2,c
  2659   0037B8  EFE0  F01B         	goto	u3691
  2660   0037BC  EFE2  F01B         	goto	u3690
  2661   0037C0                     u3691:
  2662   0037C0  EFC9  F01B         	goto	l3561
  2663   0037C4                     u3690:
  2664   0037C4  EF15  F01C         	goto	l1205
  2665   0037C8                     l3569:
  2666                           
  2667                           ; BSR set to: 0
  2668   0037C8  C017  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2669   0037CC                     	if	1	;There is more than 1 active tblptr byte
  2670   0037CC  0E0E               	movlw	high __smallconst
  2671   0037CE  6EF7               	movwf	tblptrh,c
  2672   0037D0                     	endif
  2673   0037D0                     	if	0	;tblptru may be non-zero
  2674   0037D0                     	endif
  2675   0037D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2676   0037D0  0E00               	movlw	low (__smallconst shr (0+16))
  2677   0037D2  6EF8               	movwf	tblptru,c
  2678   0037D4                     	endif
  2679   0037D4  0008               	tblrd		*
  2680   0037D6  50F5               	movf	tablat,w,c
  2681   0037D8  6E11               	movwf	??_vfpfcnvrt^0,c
  2682   0037DA  6A12               	clrf	(??_vfpfcnvrt+1)^0,c
  2683                           
  2684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2685                           ; Switch size 1, requested type "simple"
  2686                           ; Number of cases is 1, Range of values is 0 to 0
  2687                           ; switch strategies available:
  2688                           ; Name         Instructions Cycles
  2689                           ; simple_byte            4     3 (average)
  2690                           ;	Chosen strategy is simple_byte
  2691   0037DC  5012               	movf	(??_vfpfcnvrt+1)^0,w,c
  2692   0037DE  0A00               	xorlw	0	; case 0
  2693   0037E0  B4D8               	btfsc	status,2,c
  2694   0037E2  EFF5  F01B         	goto	l4843
  2695   0037E6  EFFC  F01B         	goto	l3571
  2696   0037EA                     l4843:
  2697                           
  2698                           ; BSR set to: 0
  2699                           ; Switch size 1, requested type "simple"
  2700                           ; Number of cases is 1, Range of values is 117 to 117
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte            4     3 (average)
  2704                           ;	Chosen strategy is simple_byte
  2705   0037EA  5011               	movf	??_vfpfcnvrt^0,w,c
  2706   0037EC  0A75               	xorlw	117	; case 117
  2707   0037EE  B4D8               	btfsc	status,2,c
  2708   0037F0  EF92  F01B         	goto	l3551
  2709   0037F4  EFFC  F01B         	goto	l3571
  2710   0037F8                     l3571:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2713   0037F8  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2714   0037FA  6ED9               	movwf	fsr2l,c
  2715   0037FC  6ADA               	clrf	fsr2h,c
  2716   0037FE  2ADF               	incf	indf2,f,c
  2717   003800  EF15  F01C         	goto	l1205
  2718   003804                     l3575:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2721   003804  500F               	movf	vfpfcnvrt@fmt^0,w,c
  2722   003806  6ED9               	movwf	fsr2l,c
  2723   003808  6ADA               	clrf	fsr2h,c
  2724   00380A  CFDF FFF6          	movff	indf2,tblptrl
  2725   00380E                     	if	1	;There is more than 1 active tblptr byte
  2726   00380E  0E0E               	movlw	high __smallconst
  2727   003810  6EF7               	movwf	tblptrh,c
  2728   003812                     	endif
  2729   003812                     	if	0	;tblptru may be non-zero
  2730   003812                     	endif
  2731   003812                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2732   003812  0E00               	movlw	low (__smallconst shr (0+16))
  2733   003814  6EF8               	movwf	tblptru,c
  2734   003816                     	endif
  2735   003816  0008               	tblrd		*
  2736   003818  50F5               	movf	tablat,w,c
  2737   00381A  6E01               	movwf	fputc@c^0,c
  2738   00381C  6A02               	clrf	(fputc@c+1)^0,c
  2739   00381E  C00E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2740   003822  EC6A  F01F         	call	_fputc	;wreg free
  2741   003826  EFFC  F01B         	goto	l3571
  2742   00382A                     l1205:
  2743   00382A  0012               	return		;funcret
  2744   00382C                     __end_of_vfpfcnvrt:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _fputc *****************
  2748 ;; Defined at:
  2749 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  c               2    0[COMRAM] int 
  2752 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2753 ;;		 -> sprintf@f(12), 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  2    0[COMRAM] int 
  2758 ;; Registers used:
  2759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2765 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2769 ;;Total ram usage:        8 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 1
  2772 ;; This function calls:
  2773 ;;		_putch
  2774 ;; This function is called by:
  2775 ;;		_vfpfcnvrt
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text7
  2780   003ED4                     __ptext7:
  2781                           	callstack 0
  2782   003ED4                     _fputc:
  2783                           	callstack 26
  2784   003ED4  5003               	movf	fputc@fp^0,w,c
  2785   003ED6  B4D8               	btfsc	status,2,c
  2786   003ED8  EF70  F01F         	goto	u3531
  2787   003EDC  EF72  F01F         	goto	u3530
  2788   003EE0                     u3531:
  2789   003EE0  EF7A  F01F         	goto	l3453
  2790   003EE4                     u3530:
  2791   003EE4  5003               	movf	fputc@fp^0,w,c
  2792   003EE6  A4D8               	btfss	status,2,c
  2793   003EE8  EF78  F01F         	goto	u3541
  2794   003EEC  EF7A  F01F         	goto	u3540
  2795   003EF0                     u3541:
  2796   003EF0  EF7F  F01F         	goto	l3455
  2797   003EF4                     u3540:
  2798   003EF4                     l3453:
  2799   003EF4  5001               	movf	fputc@c^0,w,c
  2800   003EF6  EC31  F023         	call	_putch
  2801   003EFA  EFC6  F01F         	goto	l1224
  2802   003EFE                     l3455:
  2803   003EFE  5003               	movf	fputc@fp^0,w,c
  2804   003F00  6ED9               	movwf	fsr2l,c
  2805   003F02  6ADA               	clrf	fsr2h,c
  2806   003F04  0E0A               	movlw	10
  2807   003F06  26D9               	addwf	fsr2l,f,c
  2808   003F08  50DE               	movf	postinc2,w,c
  2809   003F0A  10DE               	iorwf	postinc2,w,c
  2810   003F0C  B4D8               	btfsc	status,2,c
  2811   003F0E  EF8B  F01F         	goto	u3551
  2812   003F12  EF8D  F01F         	goto	u3550
  2813   003F16                     u3551:
  2814   003F16  EFA6  F01F         	goto	l3459
  2815   003F1A                     u3550:
  2816   003F1A  5003               	movf	fputc@fp^0,w,c
  2817   003F1C  6ED9               	movwf	fsr2l,c
  2818   003F1E  6ADA               	clrf	fsr2h,c
  2819   003F20  0E0A               	movlw	10
  2820   003F22  26D9               	addwf	fsr2l,f,c
  2821   003F24  5003               	movf	fputc@fp^0,w,c
  2822   003F26  6EE1               	movwf	fsr1l,c
  2823   003F28  6AE2               	clrf	fsr1h,c
  2824   003F2A  0E03               	movlw	3
  2825   003F2C  26E1               	addwf	fsr1l,f,c
  2826   003F2E  50DE               	movf	postinc2,w,c
  2827   003F30  5CE6               	subwf	postinc1,w,c
  2828   003F32  50E6               	movf	postinc1,w,c
  2829   003F34  0A80               	xorlw	128
  2830   003F36  6E08               	movwf	(??_fputc+4)^0,c
  2831   003F38  50DE               	movf	postinc2,w,c
  2832   003F3A  0A80               	xorlw	128
  2833   003F3C  5808               	subwfb	(??_fputc+4)^0,w,c
  2834   003F3E  B0D8               	btfsc	status,0,c
  2835   003F40  EFA4  F01F         	goto	u3561
  2836   003F44  EFA6  F01F         	goto	u3560
  2837   003F48                     u3561:
  2838   003F48  EFC6  F01F         	goto	l1224
  2839   003F4C                     u3560:
  2840   003F4C                     l3459:
  2841   003F4C  5003               	movf	fputc@fp^0,w,c
  2842   003F4E  6ED9               	movwf	fsr2l,c
  2843   003F50  6ADA               	clrf	fsr2h,c
  2844   003F52  0E03               	movlw	3
  2845   003F54  26D9               	addwf	fsr2l,f,c
  2846   003F56  CFDE F004          	movff	postinc2,??_fputc
  2847   003F5A  CFDD F005          	movff	postdec2,??_fputc+1
  2848   003F5E  5003               	movf	fputc@fp^0,w,c
  2849   003F60  6ED9               	movwf	fsr2l,c
  2850   003F62  6ADA               	clrf	fsr2h,c
  2851   003F64  CFDE F006          	movff	postinc2,??_fputc+2
  2852   003F68  CFDD F007          	movff	postdec2,??_fputc+3
  2853   003F6C  5004               	movf	??_fputc^0,w,c
  2854   003F6E  2406               	addwf	(??_fputc+2)^0,w,c
  2855   003F70  6ED9               	movwf	fsr2l,c
  2856   003F72  5005               	movf	(??_fputc+1)^0,w,c
  2857   003F74  2007               	addwfc	(??_fputc+3)^0,w,c
  2858   003F76  6EDA               	movwf	fsr2h,c
  2859   003F78  C001  FFDF         	movff	fputc@c,indf2
  2860   003F7C  5003               	movf	fputc@fp^0,w,c
  2861   003F7E  6ED9               	movwf	fsr2l,c
  2862   003F80  6ADA               	clrf	fsr2h,c
  2863   003F82  0E03               	movlw	3
  2864   003F84  26D9               	addwf	fsr2l,f,c
  2865   003F86  2ADE               	incf	postinc2,f,c
  2866   003F88  0E00               	movlw	0
  2867   003F8A  22DD               	addwfc	postdec2,f,c
  2868   003F8C                     l1224:
  2869   003F8C  0012               	return		;funcret
  2870   003F8E                     __end_of_fputc:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _putch *****************
  2874 ;; Defined at:
  2875 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  c               1    wreg     unsigned char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  c               1    0[COMRAM] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_fputc
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text8
  2903   004662                     __ptext8:
  2904                           	callstack 0
  2905   004662                     _putch:
  2906                           	callstack 26
  2907   004662  0012               	return		;funcret
  2908   004664                     __end_of_putch:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function ___lwmod *****************
  2912 ;; Defined at:
  2913 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  dividend        2    0[COMRAM] unsigned int 
  2916 ;;  divisor         2    2[COMRAM] unsigned int 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  counter         1    4[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  2    0[COMRAM] unsigned int 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;Total ram usage:        5 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_vfpfcnvrt
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text9
  2942   0041F2                     __ptext9:
  2943                           	callstack 0
  2944   0041F2                     ___lwmod:
  2945                           	callstack 27
  2946   0041F2  5003               	movf	___lwmod@divisor^0,w,c
  2947   0041F4  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2948   0041F6  B4D8               	btfsc	status,2,c
  2949   0041F8  EF00  F021         	goto	u3401
  2950   0041FC  EF02  F021         	goto	u3400
  2951   004200                     u3401:
  2952   004200  EF26  F021         	goto	l991
  2953   004204                     u3400:
  2954   004204  0E01               	movlw	1
  2955   004206  6E05               	movwf	___lwmod@counter^0,c
  2956   004208  EF0A  F021         	goto	l3393
  2957   00420C                     l3391:
  2958   00420C  90D8               	bcf	status,0,c
  2959   00420E  3603               	rlcf	___lwmod@divisor^0,f,c
  2960   004210  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2961   004212  2A05               	incf	___lwmod@counter^0,f,c
  2962   004214                     l3393:
  2963   004214  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2964   004216  EF0F  F021         	goto	u3411
  2965   00421A  EF11  F021         	goto	u3410
  2966   00421E                     u3411:
  2967   00421E  EF06  F021         	goto	l3391
  2968   004222                     u3410:
  2969   004222                     l3395:
  2970   004222  5003               	movf	___lwmod@divisor^0,w,c
  2971   004224  5C01               	subwf	___lwmod@dividend^0,w,c
  2972   004226  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2973   004228  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2974   00422A  A0D8               	btfss	status,0,c
  2975   00422C  EF1A  F021         	goto	u3421
  2976   004230  EF1C  F021         	goto	u3420
  2977   004234                     u3421:
  2978   004234  EF20  F021         	goto	l3399
  2979   004238                     u3420:
  2980   004238  5003               	movf	___lwmod@divisor^0,w,c
  2981   00423A  5E01               	subwf	___lwmod@dividend^0,f,c
  2982   00423C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2983   00423E  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2984   004240                     l3399:
  2985   004240  90D8               	bcf	status,0,c
  2986   004242  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2987   004244  3203               	rrcf	___lwmod@divisor^0,f,c
  2988   004246  2E05               	decfsz	___lwmod@counter^0,f,c
  2989   004248  EF11  F021         	goto	l3395
  2990   00424C                     l991:
  2991   00424C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2992   004250  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2993   004254  0012               	return		;funcret
  2994   004256                     __end_of___lwmod:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _sendStringSerial4 *****************
  2998 ;; Defined at:
  2999 ;;		line 94 in file "serial.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  string          2    1[COMRAM] PTR unsigned char 
  3002 ;;		 -> main@senddata(20), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 1
  3021 ;; This function calls:
  3022 ;;		_sendCharSerial4
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text10
  3029   00450C                     __ptext10:
  3030                           	callstack 0
  3031   00450C                     _sendStringSerial4:
  3032                           	callstack 29
  3033   00450C                     
  3034                           ;serial.c: 96:     while(*string != 0){
  3035   00450C  EF91  F022         	goto	l4155
  3036   004510                     l4151:
  3037                           
  3038                           ;serial.c: 97:   sendCharSerial4(*string++);
  3039   004510  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3040   004514  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3041   004518  50DF               	movf	indf2,w,c
  3042   00451A  EC10  F023         	call	_sendCharSerial4
  3043   00451E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3044   004520  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3045   004522                     l4155:
  3046                           
  3047                           ;serial.c: 96:     while(*string != 0){
  3048   004522  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3049   004526  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3050   00452A  50DF               	movf	indf2,w,c
  3051   00452C  A4D8               	btfss	status,2,c
  3052   00452E  EF9B  F022         	goto	u4641
  3053   004532  EF9D  F022         	goto	u4640
  3054   004536                     u4641:
  3055   004536  EF88  F022         	goto	l4151
  3056   00453A                     u4640:
  3057   00453A  0012               	return		;funcret
  3058   00453C                     __end_of_sendStringSerial4:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function _sendCharSerial4 *****************
  3062 ;; Defined at:
  3063 ;;		line 87 in file "serial.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  charToSend      1    wreg     unsigned char 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  charToSend      1    0[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;Total ram usage:        1 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_sendStringSerial4
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text11
  3091   004620                     __ptext11:
  3092                           	callstack 0
  3093   004620                     _sendCharSerial4:
  3094                           	callstack 29
  3095                           
  3096                           ;incstack = 0
  3097                           ;sendCharSerial4@charToSend stored from wreg
  3098   004620  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3099   004622                     l449:
  3100   004622  010E               	movlb	14	; () banked
  3101   004624  A537               	btfss	55,2,b	;volatile
  3102   004626  EF17  F023         	goto	u3851
  3103   00462A  EF19  F023         	goto	u3850
  3104   00462E                     u3851:
  3105   00462E  EF11  F023         	goto	l449
  3106   004632                     u3850:
  3107   004632                     
  3108                           ; BSR set to: 14
  3109                           ;serial.c: 89:     TX4REG = charToSend;
  3110   004632  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3111   004636                     
  3112                           ; BSR set to: 14
  3113   004636  0012               	return		;funcret
  3114   004638                     __end_of_sendCharSerial4:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _initUSART4 *****************
  3118 ;; Defined at:
  3119 ;;		line 57 in file "serial.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_main
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text12
  3147   004602                     __ptext12:
  3148                           	callstack 0
  3149   004602                     _initUSART4:
  3150                           	callstack 30
  3151   004602                     
  3152                           ;serial.c: 58:     RC0PPS = 0x12;
  3153   004602  0E12               	movlw	18
  3154   004604  010E               	movlb	14	; () banked
  3155   004606  6F62               	movwf	98,b	;volatile
  3156                           
  3157                           ;serial.c: 59:     RX4PPS = 0x11;
  3158   004608  0E11               	movlw	17
  3159   00460A  6F15               	movwf	21,b	;volatile
  3160   00460C                     
  3161                           ; BSR set to: 14
  3162                           ;serial.c: 61:     BAUD4CONbits.BRG16 = 0;
  3163   00460C  97E9               	bcf	233,3,b	;volatile
  3164   00460E                     
  3165                           ; BSR set to: 14
  3166                           ;serial.c: 62:     TX4STAbits.BRGH = 0;
  3167   00460E  95E8               	bcf	232,2,b	;volatile
  3168                           
  3169                           ;serial.c: 64:     SP4BRGL = 51;
  3170   004610  0E33               	movlw	51
  3171   004612  6FE5               	movwf	229,b	;volatile
  3172                           
  3173                           ;serial.c: 65:     SP4BRGH = 0;
  3174   004614  0E00               	movlw	0
  3175   004616  6FE6               	movwf	230,b	;volatile
  3176   004618                     
  3177                           ; BSR set to: 14
  3178                           ;serial.c: 73:     RC4STAbits.CREN = 1;
  3179   004618  89E7               	bsf	231,4,b	;volatile
  3180   00461A                     
  3181                           ; BSR set to: 14
  3182                           ;serial.c: 74:     TX4STAbits.TXEN = 1;
  3183   00461A  8BE8               	bsf	232,5,b	;volatile
  3184   00461C                     
  3185                           ; BSR set to: 14
  3186                           ;serial.c: 75:     RC4STAbits.SPEN = 1;
  3187   00461C  8FE7               	bsf	231,7,b	;volatile
  3188   00461E                     
  3189                           ; BSR set to: 14
  3190   00461E  0012               	return		;funcret
  3191   004620                     __end_of_initUSART4:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _initDCmotorsPWM *****************
  3195 ;; Defined at:
  3196 ;;		line 5 in file "dc_motor_v1.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3214 ;;Total ram usage:        2 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text13
  3224   0040EA                     __ptext13:
  3225                           	callstack 0
  3226   0040EA                     _initDCmotorsPWM:
  3227                           	callstack 30
  3228   0040EA                     
  3229                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  3230   0040EA  9485               	bcf	133,2,c	;volatile
  3231                           
  3232                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  3233   0040EC  9885               	bcf	133,4,c	;volatile
  3234                           
  3235                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  3236   0040EE  9E83               	bcf	131,7,c	;volatile
  3237                           
  3238                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  3239   0040F0  9C87               	bcf	135,6,c	;volatile
  3240                           
  3241                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  3242   0040F2  947D               	bcf	125,2,c	;volatile
  3243                           
  3244                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  3245   0040F4  987D               	bcf	125,4,c	;volatile
  3246                           
  3247                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  3248   0040F6  9E7B               	bcf	123,7,c	;volatile
  3249                           
  3250                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  3251   0040F8  9C7F               	bcf	127,6,c	;volatile
  3252   0040FA                     
  3253                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  3254   0040FA  0E05               	movlw	5
  3255   0040FC  010E               	movlb	14	; () banked
  3256   0040FE  6F74               	movwf	116,b	;volatile
  3257                           
  3258                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  3259   004100  0E06               	movlw	6
  3260   004102  6F76               	movwf	118,b	;volatile
  3261                           
  3262                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  3263   004104  0E07               	movlw	7
  3264   004106  6F69               	movwf	105,b	;volatile
  3265                           
  3266                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  3267   004108  0E08               	movlw	8
  3268   00410A  6F88               	movwf	136,b	;volatile
  3269                           
  3270                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  3271   00410C  50BD               	movf	189,w,c	;volatile
  3272   00410E  0B8F               	andlw	-113
  3273   004110  0940               	iorlw	64
  3274   004112  6EBD               	movwf	189,c	;volatile
  3275                           
  3276                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  3277   004114  0EE0               	movlw	-32
  3278   004116  16BE               	andwf	190,f,c	;volatile
  3279                           
  3280                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  3281   004118  50BF               	movf	191,w,c	;volatile
  3282   00411A  0BF0               	andlw	-16
  3283   00411C  0901               	iorlw	1
  3284   00411E  6EBF               	movwf	191,c	;volatile
  3285   004120                     
  3286                           ; BSR set to: 14
  3287                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  3288   004120  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3289   004124                     
  3290                           ; BSR set to: 14
  3291                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  3292   004124  8EBD               	bsf	189,7,c	;volatile
  3293                           
  3294                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  3295   004126  0E00               	movlw	0
  3296   004128  6EAA               	movwf	170,c	;volatile
  3297                           
  3298                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  3299   00412A  0E00               	movlw	0
  3300   00412C  6EA6               	movwf	166,c	;volatile
  3301                           
  3302                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  3303   00412E  0E00               	movlw	0
  3304   004130  010F               	movlb	15	; () banked
  3305   004132  6F25               	movwf	37,b	;volatile
  3306                           
  3307                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  3308   004134  0E00               	movlw	0
  3309   004136  6F21               	movwf	33,b	;volatile
  3310                           
  3311                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  3312   004138  0EFC               	movlw	-4
  3313   00413A  16AD               	andwf	173,f,c	;volatile
  3314                           
  3315                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  3316   00413C  0EF3               	movlw	-13
  3317   00413E  16AD               	andwf	173,f,c	;volatile
  3318                           
  3319                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  3320   004140  0ECF               	movlw	-49
  3321   004142  16AD               	andwf	173,f,c	;volatile
  3322                           
  3323                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  3324   004144  0E3F               	movlw	-193
  3325   004146  16AD               	andwf	173,f,c	;volatile
  3326   004148                     
  3327                           ; BSR set to: 15
  3328                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  3329   004148  88AB               	bsf	171,4,c	;volatile
  3330                           
  3331                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  3332   00414A  50AB               	movf	171,w,c	;volatile
  3333   00414C  0BF0               	andlw	-16
  3334   00414E  090C               	iorlw	12
  3335   004150  6EAB               	movwf	171,c	;volatile
  3336   004152                     
  3337                           ; BSR set to: 15
  3338                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  3339   004152  8EAB               	bsf	171,7,c	;volatile
  3340   004154                     
  3341                           ; BSR set to: 15
  3342                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  3343   004154  88A7               	bsf	167,4,c	;volatile
  3344                           
  3345                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  3346   004156  50A7               	movf	167,w,c	;volatile
  3347   004158  0BF0               	andlw	-16
  3348   00415A  090C               	iorlw	12
  3349   00415C  6EA7               	movwf	167,c	;volatile
  3350   00415E                     
  3351                           ; BSR set to: 15
  3352                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  3353   00415E  8EA7               	bsf	167,7,c	;volatile
  3354   004160                     
  3355                           ; BSR set to: 15
  3356                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  3357   004160  8926               	bsf	38,4,b	;volatile
  3358                           
  3359                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  3360   004162  5126               	movf	38,w,b	;volatile
  3361   004164  0BF0               	andlw	-16
  3362   004166  090C               	iorlw	12
  3363   004168  6F26               	movwf	38,b	;volatile
  3364   00416A                     
  3365                           ; BSR set to: 15
  3366                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  3367   00416A  8F26               	bsf	38,7,b	;volatile
  3368   00416C                     
  3369                           ; BSR set to: 15
  3370                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  3371   00416C  8922               	bsf	34,4,b	;volatile
  3372                           
  3373                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  3374   00416E  5122               	movf	34,w,b	;volatile
  3375   004170  0BF0               	andlw	-16
  3376   004172  090C               	iorlw	12
  3377   004174  6F22               	movwf	34,b	;volatile
  3378   004176                     
  3379                           ; BSR set to: 15
  3380                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  3381   004176  8F22               	bsf	34,7,b	;volatile
  3382   004178                     
  3383                           ; BSR set to: 15
  3384                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  3385   004178  9688               	bcf	136,3,c	;volatile
  3386   00417A                     
  3387                           ; BSR set to: 15
  3388                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  3389   00417A  9680               	bcf	128,3,c	;volatile
  3390   00417C                     
  3391                           ; BSR set to: 15
  3392   00417C  0012               	return		;funcret
  3393   00417E                     __end_of_initDCmotorsPWM:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _forward *****************
  3397 ;; Defined at:
  3398 ;;		line 122 in file "dc_motor_v1.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  Distance_Cal    1    wreg     unsigned char 
  3401 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  3402 ;;		 -> motorL(9), 
  3403 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  3404 ;;		 -> motorR(9), 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  Distance_Cal    1   26[COMRAM] unsigned char 
  3407 ;;  j               2   29[COMRAM] int 
  3408 ;;  i               2   27[COMRAM] int 
  3409 ;;  delay_time      2   33[COMRAM] int 
  3410 ;;  max_power       2   31[COMRAM] int 
  3411 ;;  acceleration    2    0        int 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;Total ram usage:       16 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 2
  3428 ;; This function calls:
  3429 ;;		___awdiv
  3430 ;;		_delay_ms_function
  3431 ;;		_setMotorPWM
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text14
  3438   0031A0                     __ptext14:
  3439                           	callstack 0
  3440   0031A0                     _forward:
  3441                           	callstack 28
  3442                           
  3443                           ; BSR set to: 15
  3444                           ;incstack = 0
  3445                           ;forward@Distance_Calibration stored from wreg
  3446   0031A0  6E1B               	movwf	forward@Distance_Calibration^0,c
  3447   0031A2                     
  3448                           ;dc_motor_v1.c: 123:     mL->direction = 1;
  3449   0031A2  EE20 F001          	lfsr	2,1
  3450   0031A6  5014               	movf	forward@mL^0,w,c
  3451   0031A8  26D9               	addwf	fsr2l,f,c
  3452   0031AA  5015               	movf	(forward@mL+1)^0,w,c
  3453   0031AC  22DA               	addwfc	fsr2h,f,c
  3454   0031AE  0E01               	movlw	1
  3455   0031B0  6EDF               	movwf	indf2,c
  3456                           
  3457                           ;dc_motor_v1.c: 124:     mR->direction = 1;
  3458   0031B2  EE20 F001          	lfsr	2,1
  3459   0031B6  5016               	movf	forward@mR^0,w,c
  3460   0031B8  26D9               	addwf	fsr2l,f,c
  3461   0031BA  5017               	movf	(forward@mR+1)^0,w,c
  3462   0031BC  22DA               	addwfc	fsr2h,f,c
  3463   0031BE  0E01               	movlw	1
  3464   0031C0  6EDF               	movwf	indf2,c
  3465   0031C2                     
  3466                           ;dc_motor_v1.c: 131:     int max_power = 20;
  3467   0031C2  0E00               	movlw	0
  3468   0031C4  6E21               	movwf	(forward@max_power+1)^0,c
  3469   0031C6  0E14               	movlw	20
  3470   0031C8  6E20               	movwf	forward@max_power^0,c
  3471   0031CA                     
  3472                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  3473   0031CA  0E00               	movlw	0
  3474   0031CC  6E02               	movwf	(___awdiv@dividend+1)^0,c
  3475   0031CE  0E64               	movlw	100
  3476   0031D0  6E01               	movwf	___awdiv@dividend^0,c
  3477   0031D2  0E00               	movlw	0
  3478   0031D4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3479   0031D6  0E14               	movlw	20
  3480   0031D8  6E03               	movwf	___awdiv@divisor^0,c
  3481   0031DA  EC08  F01F         	call	___awdiv	;wreg free
  3482   0031DE  C001  F022         	movff	?___awdiv,forward@delay_time
  3483   0031E2  C002  F023         	movff	?___awdiv+1,forward@delay_time+1
  3484   0031E6                     
  3485                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  3486   0031E6  0E00               	movlw	0
  3487   0031E8  6E1D               	movwf	(forward@i+1)^0,c
  3488   0031EA  0E00               	movlw	0
  3489   0031EC  6E1C               	movwf	forward@i^0,c
  3490   0031EE  EF25  F019         	goto	l4509
  3491   0031F2                     l4499:
  3492                           
  3493                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  3494   0031F2  C014  FFD9         	movff	forward@mL,fsr2l
  3495   0031F6  C015  FFDA         	movff	forward@mL+1,fsr2h
  3496   0031FA  50DF               	movf	indf2,w,c
  3497   0031FC  6E18               	movwf	??_forward^0,c
  3498   0031FE  2818               	incf	??_forward^0,w,c
  3499   003200  C014  FFD9         	movff	forward@mL,fsr2l
  3500   003204  C015  FFDA         	movff	forward@mL+1,fsr2h
  3501   003208  6EDF               	movwf	indf2,c
  3502                           
  3503                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  3504   00320A  C016  FFD9         	movff	forward@mR,fsr2l
  3505   00320E  C017  FFDA         	movff	forward@mR+1,fsr2h
  3506   003212  50DF               	movf	indf2,w,c
  3507   003214  6E18               	movwf	??_forward^0,c
  3508   003216  2818               	incf	??_forward^0,w,c
  3509   003218  C016  FFD9         	movff	forward@mR,fsr2l
  3510   00321C  C017  FFDA         	movff	forward@mR+1,fsr2h
  3511   003220  6EDF               	movwf	indf2,c
  3512   003222                     
  3513                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  3514   003222  C016  F00E         	movff	forward@mR,setMotorPWM@m
  3515   003226  C017  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  3516   00322A  EC16  F01C         	call	_setMotorPWM	;wreg free
  3517   00322E                     
  3518                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  3519   00322E  C014  F00E         	movff	forward@mL,setMotorPWM@m
  3520   003232  C015  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  3521   003236  EC16  F01C         	call	_setMotorPWM	;wreg free
  3522   00323A                     
  3523                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  3524   00323A  C022  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  3525   00323E  C023  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  3526   003242  EC9E  F022         	call	_delay_ms_function	;wreg free
  3527   003246                     
  3528                           ;dc_motor_v1.c: 142:     }
  3529   003246  4A1C               	infsnz	forward@i^0,f,c
  3530   003248  2A1D               	incf	(forward@i+1)^0,f,c
  3531   00324A                     l4509:
  3532   00324A  5020               	movf	forward@max_power^0,w,c
  3533   00324C  5C1C               	subwf	forward@i^0,w,c
  3534   00324E  501D               	movf	(forward@i+1)^0,w,c
  3535   003250  0A80               	xorlw	128
  3536   003252  6E18               	movwf	??_forward^0,c
  3537   003254  5021               	movf	(forward@max_power+1)^0,w,c
  3538   003256  0A80               	xorlw	128
  3539   003258  5818               	subwfb	??_forward^0,w,c
  3540   00325A  A0D8               	btfss	status,0,c
  3541   00325C  EF32  F019         	goto	u4961
  3542   003260  EF34  F019         	goto	u4960
  3543   003264                     u4961:
  3544   003264  EFF9  F018         	goto	l4499
  3545   003268                     u4960:
  3546   003268                     
  3547                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  3548   003268  0E00               	movlw	0
  3549   00326A  6E1F               	movwf	(forward@j+1)^0,c
  3550   00326C  0E00               	movlw	0
  3551   00326E  6E1E               	movwf	forward@j^0,c
  3552   003270  EF43  F019         	goto	l230
  3553   003274                     l4513:
  3554                           
  3555                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3556   003274  0ED0               	movlw	208
  3557   003276  6E18               	movwf	??_forward^0,c
  3558   003278  0ECA               	movlw	202
  3559   00327A                     u5387:
  3560   00327A  2EE8               	decfsz	wreg,f,c
  3561   00327C  D7FE               	bra	u5387
  3562   00327E  2E18               	decfsz	??_forward^0,f,c
  3563   003280  D7FC               	bra	u5387
  3564   003282                     
  3565                           ;dc_motor_v1.c: 149:     }
  3566   003282  4A1E               	infsnz	forward@j^0,f,c
  3567   003284  2A1F               	incf	(forward@j+1)^0,f,c
  3568   003286                     l230:
  3569   003286  501B               	movf	forward@Distance_Calibration^0,w,c
  3570   003288  6E18               	movwf	??_forward^0,c
  3571   00328A  6A19               	clrf	(??_forward+1)^0,c
  3572   00328C  5018               	movf	??_forward^0,w,c
  3573   00328E  5C1E               	subwf	forward@j^0,w,c
  3574   003290  501F               	movf	(forward@j+1)^0,w,c
  3575   003292  0A80               	xorlw	128
  3576   003294  6E1A               	movwf	(??_forward+2)^0,c
  3577   003296  5019               	movf	(??_forward+1)^0,w,c
  3578   003298  0A80               	xorlw	128
  3579   00329A  581A               	subwfb	(??_forward+2)^0,w,c
  3580   00329C  A0D8               	btfss	status,0,c
  3581   00329E  EF53  F019         	goto	u4971
  3582   0032A2  EF55  F019         	goto	u4970
  3583   0032A6                     u4971:
  3584   0032A6  EF3A  F019         	goto	l4513
  3585   0032AA                     u4970:
  3586   0032AA  EF8B  F019         	goto	l4531
  3587   0032AE                     l4517:
  3588                           
  3589                           ;dc_motor_v1.c: 153:         if(mR->power> 0 ){
  3590   0032AE  C016  FFD9         	movff	forward@mR,fsr2l
  3591   0032B2  C017  FFDA         	movff	forward@mR+1,fsr2h
  3592   0032B6  50DF               	movf	indf2,w,c
  3593   0032B8  B4D8               	btfsc	status,2,c
  3594   0032BA  EF61  F019         	goto	u4981
  3595   0032BE  EF63  F019         	goto	u4980
  3596   0032C2                     u4981:
  3597   0032C2  EF68  F019         	goto	l4521
  3598   0032C6                     u4980:
  3599   0032C6                     
  3600                           ;dc_motor_v1.c: 154:             mR->power--;
  3601   0032C6  C016  FFD9         	movff	forward@mR,fsr2l
  3602   0032CA  C017  FFDA         	movff	forward@mR+1,fsr2h
  3603   0032CE  06DF               	decf	indf2,f,c
  3604   0032D0                     l4521:
  3605                           
  3606                           ;dc_motor_v1.c: 156:         if(mL->power> 0 ){
  3607   0032D0  C014  FFD9         	movff	forward@mL,fsr2l
  3608   0032D4  C015  FFDA         	movff	forward@mL+1,fsr2h
  3609   0032D8  50DF               	movf	indf2,w,c
  3610   0032DA  B4D8               	btfsc	status,2,c
  3611   0032DC  EF72  F019         	goto	u4991
  3612   0032E0  EF74  F019         	goto	u4990
  3613   0032E4                     u4991:
  3614   0032E4  EF79  F019         	goto	l4525
  3615   0032E8                     u4990:
  3616   0032E8                     
  3617                           ;dc_motor_v1.c: 157:             mL->power--;
  3618   0032E8  C014  FFD9         	movff	forward@mL,fsr2l
  3619   0032EC  C015  FFDA         	movff	forward@mL+1,fsr2h
  3620   0032F0  06DF               	decf	indf2,f,c
  3621   0032F2                     l4525:
  3622                           
  3623                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  3624   0032F2  C016  F00E         	movff	forward@mR,setMotorPWM@m
  3625   0032F6  C017  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  3626   0032FA  EC16  F01C         	call	_setMotorPWM	;wreg free
  3627   0032FE                     
  3628                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  3629   0032FE  C014  F00E         	movff	forward@mL,setMotorPWM@m
  3630   003302  C015  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  3631   003306  EC16  F01C         	call	_setMotorPWM	;wreg free
  3632   00330A                     
  3633                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  3634   00330A  C022  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  3635   00330E  C023  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  3636   003312  EC9E  F022         	call	_delay_ms_function	;wreg free
  3637   003316                     l4531:
  3638                           
  3639                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  3640   003316  C014  FFD9         	movff	forward@mL,fsr2l
  3641   00331A  C015  FFDA         	movff	forward@mL+1,fsr2h
  3642   00331E  50DF               	movf	indf2,w,c
  3643   003320  A4D8               	btfss	status,2,c
  3644   003322  EF95  F019         	goto	u5001
  3645   003326  EF97  F019         	goto	u5000
  3646   00332A                     u5001:
  3647   00332A  EF57  F019         	goto	l4517
  3648   00332E                     u5000:
  3649   00332E  C016  FFD9         	movff	forward@mR,fsr2l
  3650   003332  C017  FFDA         	movff	forward@mR+1,fsr2h
  3651   003336  50DF               	movf	indf2,w,c
  3652   003338  A4D8               	btfss	status,2,c
  3653   00333A  EFA1  F019         	goto	u5011
  3654   00333E  EFA3  F019         	goto	u5010
  3655   003342                     u5011:
  3656   003342  EF57  F019         	goto	l4517
  3657   003346                     u5010:
  3658   003346  0012               	return		;funcret
  3659   003348                     __end_of_forward:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _setMotorPWM *****************
  3663 ;; Defined at:
  3664 ;;		line 75 in file "dc_motor_v1.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  m               2   13[COMRAM] PTR struct DC_motor
  3667 ;;		 -> motorR(9), motorL(9), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  negDuty         1   18[COMRAM] unsigned char 
  3670 ;;  posDuty         1   17[COMRAM] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;Total ram usage:        6 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 1
  3687 ;; This function calls:
  3688 ;;		___lwdiv
  3689 ;;		___wmul
  3690 ;; This function is called by:
  3691 ;;		_forward
  3692 ;;		_turnLEFT
  3693 ;;		_turnRIGHT
  3694 ;;		_stop
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text15
  3699   00382C                     __ptext15:
  3700                           	callstack 0
  3701   00382C                     _setMotorPWM:
  3702                           	callstack 28
  3703   00382C                     
  3704                           ;dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 76: {;dc_motor_v1.c: 77
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 79:     if(m->brakemode) {
  3705   00382C  EE20 F002          	lfsr	2,2
  3706   003830  500E               	movf	setMotorPWM@m^0,w,c
  3707   003832  26D9               	addwf	fsr2l,f,c
  3708   003834  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3709   003836  22DA               	addwfc	fsr2h,f,c
  3710   003838  50DF               	movf	indf2,w,c
  3711   00383A  B4D8               	btfsc	status,2,c
  3712   00383C  EF22  F01C         	goto	u4861
  3713   003840  EF24  F01C         	goto	u4860
  3714   003844                     u4861:
  3715   003844  EF58  F01C         	goto	l4423
  3716   003848                     u4860:
  3717   003848                     
  3718                           ;dc_motor_v1.c: 80:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  3719   003848  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  3720   00384C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3721   003850  50DF               	movf	indf2,w,c
  3722   003852  6E10               	movwf	??_setMotorPWM^0,c
  3723   003854  5010               	movf	??_setMotorPWM^0,w,c
  3724   003856  6E01               	movwf	___wmul@multiplier^0,c
  3725   003858  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3726   00385A  EE20 F003          	lfsr	2,3
  3727   00385E  500E               	movf	setMotorPWM@m^0,w,c
  3728   003860  26D9               	addwf	fsr2l,f,c
  3729   003862  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3730   003864  22DA               	addwfc	fsr2h,f,c
  3731   003866  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3732   00386A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3733   00386E  ECDE  F022         	call	___wmul	;wreg free
  3734   003872  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3735   003876  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3736   00387A  0E00               	movlw	0
  3737   00387C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3738   00387E  0E64               	movlw	100
  3739   003880  6E09               	movwf	___lwdiv@divisor^0,c
  3740   003882  ECBF  F020         	call	___lwdiv	;wreg free
  3741   003886  EE20 F003          	lfsr	2,3
  3742   00388A  500E               	movf	setMotorPWM@m^0,w,c
  3743   00388C  26D9               	addwf	fsr2l,f,c
  3744   00388E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3745   003890  22DA               	addwfc	fsr2h,f,c
  3746   003892  50DF               	movf	indf2,w,c
  3747   003894  6E11               	movwf	(??_setMotorPWM+1)^0,c
  3748   003896  5007               	movf	?___lwdiv^0,w,c
  3749   003898  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  3750   00389A  6E12               	movwf	setMotorPWM@posDuty^0,c
  3751   00389C                     
  3752                           ;dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  3753   00389C  EE20 F003          	lfsr	2,3
  3754   0038A0  500E               	movf	setMotorPWM@m^0,w,c
  3755   0038A2  26D9               	addwf	fsr2l,f,c
  3756   0038A4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3757   0038A6  22DA               	addwfc	fsr2h,f,c
  3758   0038A8  50DF               	movf	indf2,w,c
  3759   0038AA  6E13               	movwf	setMotorPWM@negDuty^0,c
  3760                           
  3761                           ;dc_motor_v1.c: 82:     }
  3762   0038AC  EF7B  F01C         	goto	l4427
  3763   0038B0                     l4423:
  3764                           
  3765                           ;dc_motor_v1.c: 84:         posDuty=0;
  3766   0038B0  0E00               	movlw	0
  3767   0038B2  6E12               	movwf	setMotorPWM@posDuty^0,c
  3768   0038B4                     
  3769                           ;dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  3770   0038B4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  3771   0038B8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3772   0038BC  50DF               	movf	indf2,w,c
  3773   0038BE  6E10               	movwf	??_setMotorPWM^0,c
  3774   0038C0  5010               	movf	??_setMotorPWM^0,w,c
  3775   0038C2  6E01               	movwf	___wmul@multiplier^0,c
  3776   0038C4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3777   0038C6  EE20 F003          	lfsr	2,3
  3778   0038CA  500E               	movf	setMotorPWM@m^0,w,c
  3779   0038CC  26D9               	addwf	fsr2l,f,c
  3780   0038CE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3781   0038D0  22DA               	addwfc	fsr2h,f,c
  3782   0038D2  CFDE F003          	movff	postinc2,___wmul@multiplicand
  3783   0038D6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  3784   0038DA  ECDE  F022         	call	___wmul	;wreg free
  3785   0038DE  C001  F007         	movff	?___wmul,___lwdiv@dividend
  3786   0038E2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  3787   0038E6  0E00               	movlw	0
  3788   0038E8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  3789   0038EA  0E64               	movlw	100
  3790   0038EC  6E09               	movwf	___lwdiv@divisor^0,c
  3791   0038EE  ECBF  F020         	call	___lwdiv	;wreg free
  3792   0038F2  5007               	movf	?___lwdiv^0,w,c
  3793   0038F4  6E13               	movwf	setMotorPWM@negDuty^0,c
  3794   0038F6                     l4427:
  3795                           
  3796                           ;dc_motor_v1.c: 88:     if (m->direction) {
  3797   0038F6  EE20 F001          	lfsr	2,1
  3798   0038FA  500E               	movf	setMotorPWM@m^0,w,c
  3799   0038FC  26D9               	addwf	fsr2l,f,c
  3800   0038FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3801   003900  22DA               	addwfc	fsr2h,f,c
  3802   003902  50DF               	movf	indf2,w,c
  3803   003904  B4D8               	btfsc	status,2,c
  3804   003906  EF87  F01C         	goto	u4871
  3805   00390A  EF89  F01C         	goto	u4870
  3806   00390E                     u4871:
  3807   00390E  EFAB  F01C         	goto	l4431
  3808   003912                     u4870:
  3809   003912                     
  3810                           ;dc_motor_v1.c: 89:         *(m->posDutyHighByte)=posDuty;
  3811   003912  EE20 F005          	lfsr	2,5
  3812   003916  500E               	movf	setMotorPWM@m^0,w,c
  3813   003918  26D9               	addwf	fsr2l,f,c
  3814   00391A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3815   00391C  22DA               	addwfc	fsr2h,f,c
  3816   00391E  CFDE F010          	movff	postinc2,??_setMotorPWM
  3817   003922  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3818   003926  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3819   00392A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3820   00392E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  3821                           
  3822                           ;dc_motor_v1.c: 90:         *(m->negDutyHighByte)=negDuty;
  3823   003932  EE20 F007          	lfsr	2,7
  3824   003936  500E               	movf	setMotorPWM@m^0,w,c
  3825   003938  26D9               	addwf	fsr2l,f,c
  3826   00393A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3827   00393C  22DA               	addwfc	fsr2h,f,c
  3828   00393E  CFDE F010          	movff	postinc2,??_setMotorPWM
  3829   003942  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3830   003946  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3831   00394A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3832   00394E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  3833                           
  3834                           ;dc_motor_v1.c: 91:     } else {
  3835   003952  EFCB  F01C         	goto	l216
  3836   003956                     l4431:
  3837                           
  3838                           ;dc_motor_v1.c: 92:         *(m->posDutyHighByte)=negDuty;
  3839   003956  EE20 F005          	lfsr	2,5
  3840   00395A  500E               	movf	setMotorPWM@m^0,w,c
  3841   00395C  26D9               	addwf	fsr2l,f,c
  3842   00395E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3843   003960  22DA               	addwfc	fsr2h,f,c
  3844   003962  CFDE F010          	movff	postinc2,??_setMotorPWM
  3845   003966  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3846   00396A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3847   00396E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3848   003972  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  3849                           
  3850                           ;dc_motor_v1.c: 93:         *(m->negDutyHighByte)=posDuty;
  3851   003976  EE20 F007          	lfsr	2,7
  3852   00397A  500E               	movf	setMotorPWM@m^0,w,c
  3853   00397C  26D9               	addwf	fsr2l,f,c
  3854   00397E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  3855   003980  22DA               	addwfc	fsr2h,f,c
  3856   003982  CFDE F010          	movff	postinc2,??_setMotorPWM
  3857   003986  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  3858   00398A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  3859   00398E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3860   003992  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  3861   003996                     l216:
  3862   003996  0012               	return		;funcret
  3863   003998                     __end_of_setMotorPWM:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function ___wmul *****************
  3867 ;; Defined at:
  3868 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  multiplier      2    0[COMRAM] unsigned int 
  3871 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  product         2    4[COMRAM] unsigned int 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    0[COMRAM] unsigned int 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0, prodl, prodh
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;Total ram usage:        6 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_setMotorPWM
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text16
  3897   0045BC                     __ptext16:
  3898                           	callstack 0
  3899   0045BC                     ___wmul:
  3900                           	callstack 28
  3901   0045BC  5001               	movf	___wmul@multiplier^0,w,c
  3902   0045BE  0203               	mulwf	___wmul@multiplicand^0,c
  3903   0045C0  CFF3 F005          	movff	prodl,___wmul@product
  3904   0045C4  CFF4 F006          	movff	prodh,___wmul@product+1
  3905   0045C8  5001               	movf	___wmul@multiplier^0,w,c
  3906   0045CA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3907   0045CC  50F3               	movf	243,w,c
  3908   0045CE  2606               	addwf	(___wmul@product+1)^0,f,c
  3909   0045D0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3910   0045D2  0203               	mulwf	___wmul@multiplicand^0,c
  3911   0045D4  50F3               	movf	243,w,c
  3912   0045D6  2606               	addwf	(___wmul@product+1)^0,f,c
  3913   0045D8  C005  F001         	movff	___wmul@product,?___wmul
  3914   0045DC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3915   0045E0  0012               	return		;funcret
  3916   0045E2                     __end_of___wmul:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function ___lwdiv *****************
  3920 ;; Defined at:
  3921 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  dividend        2    6[COMRAM] unsigned int 
  3924 ;;  divisor         2    8[COMRAM] unsigned int 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  quotient        2   10[COMRAM] unsigned int 
  3927 ;;  counter         1   12[COMRAM] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  2    6[COMRAM] unsigned int 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;Total ram usage:        7 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_setMotorPWM
  3947 ;;		_vfpfcnvrt
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text17
  3952   00417E                     __ptext17:
  3953                           	callstack 0
  3954   00417E                     ___lwdiv:
  3955                           	callstack 28
  3956   00417E  0E00               	movlw	0
  3957   004180  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3958   004182  0E00               	movlw	0
  3959   004184  6E0B               	movwf	___lwdiv@quotient^0,c
  3960   004186  5009               	movf	___lwdiv@divisor^0,w,c
  3961   004188  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3962   00418A  B4D8               	btfsc	status,2,c
  3963   00418C  EFCA  F020         	goto	u3371
  3964   004190  EFCC  F020         	goto	u3370
  3965   004194                     u3371:
  3966   004194  EFF4  F020         	goto	l981
  3967   004198                     u3370:
  3968   004198  0E01               	movlw	1
  3969   00419A  6E0D               	movwf	___lwdiv@counter^0,c
  3970   00419C  EFD4  F020         	goto	l3373
  3971   0041A0                     l3371:
  3972   0041A0  90D8               	bcf	status,0,c
  3973   0041A2  3609               	rlcf	___lwdiv@divisor^0,f,c
  3974   0041A4  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3975   0041A6  2A0D               	incf	___lwdiv@counter^0,f,c
  3976   0041A8                     l3373:
  3977   0041A8  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3978   0041AA  EFD9  F020         	goto	u3381
  3979   0041AE  EFDB  F020         	goto	u3380
  3980   0041B2                     u3381:
  3981   0041B2  EFD0  F020         	goto	l3371
  3982   0041B6                     u3380:
  3983   0041B6                     l3375:
  3984   0041B6  90D8               	bcf	status,0,c
  3985   0041B8  360B               	rlcf	___lwdiv@quotient^0,f,c
  3986   0041BA  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3987   0041BC  5009               	movf	___lwdiv@divisor^0,w,c
  3988   0041BE  5C07               	subwf	___lwdiv@dividend^0,w,c
  3989   0041C0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3990   0041C2  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3991   0041C4  A0D8               	btfss	status,0,c
  3992   0041C6  EFE7  F020         	goto	u3391
  3993   0041CA  EFE9  F020         	goto	u3390
  3994   0041CE                     u3391:
  3995   0041CE  EFEE  F020         	goto	l3383
  3996   0041D2                     u3390:
  3997   0041D2  5009               	movf	___lwdiv@divisor^0,w,c
  3998   0041D4  5E07               	subwf	___lwdiv@dividend^0,f,c
  3999   0041D6  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4000   0041D8  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4001   0041DA  800B               	bsf	___lwdiv@quotient^0,0,c
  4002   0041DC                     l3383:
  4003   0041DC  90D8               	bcf	status,0,c
  4004   0041DE  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4005   0041E0  3209               	rrcf	___lwdiv@divisor^0,f,c
  4006   0041E2  2E0D               	decfsz	___lwdiv@counter^0,f,c
  4007   0041E4  EFDB  F020         	goto	l3375
  4008   0041E8                     l981:
  4009   0041E8  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  4010   0041EC  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4011   0041F0  0012               	return		;funcret
  4012   0041F2                     __end_of___lwdiv:
  4013                           	callstack 0
  4014                           
  4015 ;; *************** function _delay_ms_function *****************
  4016 ;; Defined at:
  4017 ;;		line 67 in file "dc_motor_v1.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  milliseconds    2    0[COMRAM] unsigned int 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;		None
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;Total ram usage:        3 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_forward
  4041 ;;		_turnLEFT
  4042 ;;		_turnRIGHT
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text18
  4047   00453C                     __ptext18:
  4048                           	callstack 0
  4049   00453C                     _delay_ms_function:
  4050                           	callstack 29
  4051   00453C                     
  4052                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  4053   00453C  EFAB  F022         	goto	l206
  4054   004540                     l3687:
  4055                           
  4056                           ;dc_motor_v1.c: 69:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4057   004540  0E15               	movlw	21
  4058   004542  6E03               	movwf	??_delay_ms_function^0,c
  4059   004544  0EC6               	movlw	198
  4060   004546                     u5397:
  4061   004546  2EE8               	decfsz	wreg,f,c
  4062   004548  D7FE               	bra	u5397
  4063   00454A  2E03               	decfsz	??_delay_ms_function^0,f,c
  4064   00454C  D7FC               	bra	u5397
  4065   00454E  D000               	nop2	
  4066   004550                     
  4067                           ;dc_motor_v1.c: 70:         milliseconds--;
  4068   004550  0601               	decf	delay_ms_function@milliseconds^0,f,c
  4069   004552  A0D8               	btfss	status,0,c
  4070   004554  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  4071   004556                     l206:
  4072                           
  4073                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  4074   004556  5001               	movf	delay_ms_function@milliseconds^0,w,c
  4075   004558  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  4076   00455A  A4D8               	btfss	status,2,c
  4077   00455C  EFB2  F022         	goto	u3821
  4078   004560  EFB4  F022         	goto	u3820
  4079   004564                     u3821:
  4080   004564  EFA0  F022         	goto	l3687
  4081   004568                     u3820:
  4082   004568  0012               	return		;funcret
  4083   00456A                     __end_of_delay_ms_function:
  4084                           	callstack 0
  4085                           
  4086 ;; *************** function ___awdiv *****************
  4087 ;; Defined at:
  4088 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  dividend        2    0[COMRAM] int 
  4091 ;;  divisor         2    2[COMRAM] int 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  quotient        2    6[COMRAM] int 
  4094 ;;  sign            1    5[COMRAM] unsigned char 
  4095 ;;  counter         1    4[COMRAM] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  2    0[COMRAM] int 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;Total ram usage:        8 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_forward
  4115 ;;		_turnLEFT
  4116 ;;		_turnRIGHT
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text19
  4121   003E10                     __ptext19:
  4122                           	callstack 0
  4123   003E10                     ___awdiv:
  4124                           	callstack 29
  4125   003E10  0E00               	movlw	0
  4126   003E12  6E06               	movwf	___awdiv@sign^0,c
  4127   003E14  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4128   003E16  EF11  F01F         	goto	u3860
  4129   003E1A  EF0F  F01F         	goto	u3861
  4130   003E1E                     u3861:
  4131   003E1E  EF17  F01F         	goto	l3719
  4132   003E22                     u3860:
  4133   003E22  6C03               	negf	___awdiv@divisor^0,c
  4134   003E24  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4135   003E26  B0D8               	btfsc	status,0,c
  4136   003E28  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4137   003E2A  0E01               	movlw	1
  4138   003E2C  6E06               	movwf	___awdiv@sign^0,c
  4139   003E2E                     l3719:
  4140   003E2E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4141   003E30  EF1E  F01F         	goto	u3870
  4142   003E34  EF1C  F01F         	goto	u3871
  4143   003E38                     u3871:
  4144   003E38  EF24  F01F         	goto	l3725
  4145   003E3C                     u3870:
  4146   003E3C  6C01               	negf	___awdiv@dividend^0,c
  4147   003E3E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4148   003E40  B0D8               	btfsc	status,0,c
  4149   003E42  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4150   003E44  0E01               	movlw	1
  4151   003E46  1A06               	xorwf	___awdiv@sign^0,f,c
  4152   003E48                     l3725:
  4153   003E48  0E00               	movlw	0
  4154   003E4A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4155   003E4C  0E00               	movlw	0
  4156   003E4E  6E07               	movwf	___awdiv@quotient^0,c
  4157   003E50  5003               	movf	___awdiv@divisor^0,w,c
  4158   003E52  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4159   003E54  B4D8               	btfsc	status,2,c
  4160   003E56  EF2F  F01F         	goto	u3881
  4161   003E5A  EF31  F01F         	goto	u3880
  4162   003E5E                     u3881:
  4163   003E5E  EF59  F01F         	goto	l3747
  4164   003E62                     u3880:
  4165   003E62  0E01               	movlw	1
  4166   003E64  6E05               	movwf	___awdiv@counter^0,c
  4167   003E66  EF39  F01F         	goto	l3733
  4168   003E6A                     l3731:
  4169   003E6A  90D8               	bcf	status,0,c
  4170   003E6C  3603               	rlcf	___awdiv@divisor^0,f,c
  4171   003E6E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4172   003E70  2A05               	incf	___awdiv@counter^0,f,c
  4173   003E72                     l3733:
  4174   003E72  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4175   003E74  EF3E  F01F         	goto	u3891
  4176   003E78  EF40  F01F         	goto	u3890
  4177   003E7C                     u3891:
  4178   003E7C  EF35  F01F         	goto	l3731
  4179   003E80                     u3890:
  4180   003E80                     l3735:
  4181   003E80  90D8               	bcf	status,0,c
  4182   003E82  3607               	rlcf	___awdiv@quotient^0,f,c
  4183   003E84  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4184   003E86  5003               	movf	___awdiv@divisor^0,w,c
  4185   003E88  5C01               	subwf	___awdiv@dividend^0,w,c
  4186   003E8A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4187   003E8C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4188   003E8E  A0D8               	btfss	status,0,c
  4189   003E90  EF4C  F01F         	goto	u3901
  4190   003E94  EF4E  F01F         	goto	u3900
  4191   003E98                     u3901:
  4192   003E98  EF53  F01F         	goto	l3743
  4193   003E9C                     u3900:
  4194   003E9C  5003               	movf	___awdiv@divisor^0,w,c
  4195   003E9E  5E01               	subwf	___awdiv@dividend^0,f,c
  4196   003EA0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4197   003EA2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4198   003EA4  8007               	bsf	___awdiv@quotient^0,0,c
  4199   003EA6                     l3743:
  4200   003EA6  90D8               	bcf	status,0,c
  4201   003EA8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4202   003EAA  3203               	rrcf	___awdiv@divisor^0,f,c
  4203   003EAC  2E05               	decfsz	___awdiv@counter^0,f,c
  4204   003EAE  EF40  F01F         	goto	l3735
  4205   003EB2                     l3747:
  4206   003EB2  5006               	movf	___awdiv@sign^0,w,c
  4207   003EB4  B4D8               	btfsc	status,2,c
  4208   003EB6  EF5F  F01F         	goto	u3911
  4209   003EBA  EF61  F01F         	goto	u3910
  4210   003EBE                     u3911:
  4211   003EBE  EF65  F01F         	goto	l3751
  4212   003EC2                     u3910:
  4213   003EC2  6C07               	negf	___awdiv@quotient^0,c
  4214   003EC4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4215   003EC6  B0D8               	btfsc	status,0,c
  4216   003EC8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4217   003ECA                     l3751:
  4218   003ECA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4219   003ECE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4220   003ED2  0012               	return		;funcret
  4221   003ED4                     __end_of___awdiv:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _color_click_init *****************
  4225 ;; Defined at:
  4226 ;;		line 7 in file "color.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;Total ram usage:        1 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 3
  4247 ;; This function calls:
  4248 ;;		_I2C_2_Master_Init
  4249 ;;		_color_writetoaddr
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text20
  4256   004460                     __ptext20:
  4257                           	callstack 0
  4258   004460                     _color_click_init:
  4259                           	callstack 27
  4260   004460                     
  4261                           ;color.c: 10:     I2C_2_Master_Init();
  4262   004460  ECB5  F022         	call	_I2C_2_Master_Init	;wreg free
  4263   004464                     
  4264                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  4265   004464  0E01               	movlw	1
  4266   004466  6E03               	movwf	color_writetoaddr@value^0,c
  4267   004468  0E00               	movlw	0
  4268   00446A  ECF1  F022         	call	_color_writetoaddr
  4269   00446E                     
  4270                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4271   00446E  0E3F               	movlw	63
  4272   004470  6E05               	movwf	??_color_click_init^0,c
  4273   004472  0E55               	movlw	85
  4274   004474                     u5407:
  4275   004474  2EE8               	decfsz	wreg,f,c
  4276   004476  D7FE               	bra	u5407
  4277   004478  2E05               	decfsz	??_color_click_init^0,f,c
  4278   00447A  D7FC               	bra	u5407
  4279   00447C  0000               	nop	
  4280   00447E                     
  4281                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  4282   00447E  0E03               	movlw	3
  4283   004480  6E03               	movwf	color_writetoaddr@value^0,c
  4284   004482  0E00               	movlw	0
  4285   004484  ECF1  F022         	call	_color_writetoaddr
  4286   004488                     
  4287                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  4288   004488  0ED5               	movlw	213
  4289   00448A  6E03               	movwf	color_writetoaddr@value^0,c
  4290   00448C  0E01               	movlw	1
  4291   00448E  ECF1  F022         	call	_color_writetoaddr
  4292   004492                     
  4293                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  4294   004492  9287               	bcf	135,1,c	;volatile
  4295   004494                     
  4296                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  4297   004494  9881               	bcf	129,4,c	;volatile
  4298   004496                     
  4299                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  4300   004496  9E86               	bcf	134,7,c	;volatile
  4301   004498                     
  4302                           ;color.c: 30:     LATGbits.LATG1 = 1;
  4303   004498  827F               	bsf	127,1,c	;volatile
  4304   00449A                     
  4305                           ;color.c: 31:     LATAbits.LATA4 = 1;
  4306   00449A  8879               	bsf	121,4,c	;volatile
  4307   00449C                     
  4308                           ;color.c: 32:     LATFbits.LATF7 = 1;
  4309   00449C  8E7E               	bsf	126,7,c	;volatile
  4310   00449E  0012               	return		;funcret
  4311   0044A0                     __end_of_color_click_init:
  4312                           	callstack 0
  4313                           
  4314 ;; *************** function _color_writetoaddr *****************
  4315 ;; Defined at:
  4316 ;;		line 37 in file "color.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  address         1    wreg     unsigned char 
  4319 ;;  value           1    2[COMRAM] unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  address         1    3[COMRAM] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4331 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4335 ;;Total ram usage:        2 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 2
  4338 ;; This function calls:
  4339 ;;		_I2C_2_Master_Start
  4340 ;;		_I2C_2_Master_Stop
  4341 ;;		_I2C_2_Master_Write
  4342 ;; This function is called by:
  4343 ;;		_color_click_init
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text21
  4348   0045E2                     __ptext21:
  4349                           	callstack 0
  4350   0045E2                     _color_writetoaddr:
  4351                           	callstack 27
  4352                           
  4353                           ;incstack = 0
  4354                           ;color_writetoaddr@address stored from wreg
  4355   0045E2  6E04               	movwf	color_writetoaddr@address^0,c
  4356   0045E4                     
  4357                           ;color.c: 38:     I2C_2_Master_Start();
  4358   0045E4  EC27  F023         	call	_I2C_2_Master_Start	;wreg free
  4359                           
  4360                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  4361   0045E8  0E52               	movlw	82
  4362   0045EA  EC1C  F023         	call	_I2C_2_Master_Write
  4363                           
  4364                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  4365   0045EE  5004               	movf	color_writetoaddr@address^0,w,c
  4366   0045F0  0980               	iorlw	128
  4367   0045F2  EC1C  F023         	call	_I2C_2_Master_Write
  4368                           
  4369                           ;color.c: 41:     I2C_2_Master_Write(value);
  4370   0045F6  5003               	movf	color_writetoaddr@value^0,w,c
  4371   0045F8  EC1C  F023         	call	_I2C_2_Master_Write
  4372                           
  4373                           ;color.c: 42:     I2C_2_Master_Stop();
  4374   0045FC  EC22  F023         	call	_I2C_2_Master_Stop	;wreg free
  4375   004600  0012               	return		;funcret
  4376   004602                     __end_of_color_writetoaddr:
  4377                           	callstack 0
  4378                           
  4379 ;; *************** function _I2C_2_Master_Init *****************
  4380 ;; Defined at:
  4381 ;;		line 4 in file "i2c.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      void 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;Total ram usage:        0 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_color_click_init
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text22
  4409   00456A                     __ptext22:
  4410                           	callstack 0
  4411   00456A                     _I2C_2_Master_Init:
  4412                           	callstack 29
  4413   00456A                     
  4414                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4415   00456A  010E               	movlb	14	; () banked
  4416   00456C  51D9               	movf	217,w,b	;volatile
  4417   00456E  0BF0               	andlw	-16
  4418   004570  0908               	iorlw	8
  4419   004572  6FD9               	movwf	217,b	;volatile
  4420   004574                     
  4421                           ; BSR set to: 14
  4422                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4423   004574  8BD9               	bsf	217,5,b	;volatile
  4424                           
  4425                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4426   004576  0E9F               	movlw	159
  4427   004578  6FD6               	movwf	214,b	;volatile
  4428   00457A                     
  4429                           ; BSR set to: 14
  4430                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4431   00457A  8A84               	bsf	132,5,c	;volatile
  4432   00457C                     
  4433                           ; BSR set to: 14
  4434                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4435   00457C  8C84               	bsf	132,6,c	;volatile
  4436   00457E                     
  4437                           ; BSR set to: 14
  4438                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4439   00457E  9BA7               	bcf	167,5,b	;volatile
  4440   004580                     
  4441                           ; BSR set to: 14
  4442                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4443   004580  9DA7               	bcf	167,6,b	;volatile
  4444                           
  4445                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4446   004582  0E1D               	movlw	29
  4447   004584  6F1D               	movwf	29,b	;volatile
  4448                           
  4449                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4450   004586  0E1E               	movlw	30
  4451   004588  6F1C               	movwf	28,b	;volatile
  4452                           
  4453                           ;i2c.c: 18:   RD5PPS=0x1C;
  4454   00458A  0E1C               	movlw	28
  4455   00458C  6F6F               	movwf	111,b	;volatile
  4456                           
  4457                           ;i2c.c: 19:   RD6PPS=0x1B;
  4458   00458E  0E1B               	movlw	27
  4459   004590  6F70               	movwf	112,b	;volatile
  4460   004592                     
  4461                           ; BSR set to: 14
  4462   004592  0012               	return		;funcret
  4463   004594                     __end_of_I2C_2_Master_Init:
  4464                           	callstack 0
  4465                           
  4466 ;; *************** function _color_cardCheck *****************
  4467 ;; Defined at:
  4468 ;;		line 171 in file "color.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;		None
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  V               4  123[BANK0 ] float 
  4473 ;;  S               4  119[BANK0 ] float 
  4474 ;;  H               4  115[BANK0 ] float 
  4475 ;;  c               4  109[BANK0 ] float 
  4476 ;;  b               4  105[BANK0 ] float 
  4477 ;;  g               4  101[BANK0 ] float 
  4478 ;;  r               4   97[BANK0 ] float 
  4479 ;;  card_color      2  113[BANK0 ] unsigned int 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  2   91[COMRAM] unsigned int 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;Total ram usage:       32 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 4
  4496 ;; This function calls:
  4497 ;;		_RGB_to_HSV
  4498 ;;		___flge
  4499 ;;		___xxtofl
  4500 ;;		_color_read_Blue
  4501 ;;		_color_read_Clear
  4502 ;;		_color_read_Green
  4503 ;;		_color_read_Red
  4504 ;; This function is called by:
  4505 ;;		_main
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text23
  4510   000E08                     __ptext23:
  4511                           	callstack 0
  4512   000E08                     _color_cardCheck:
  4513                           	callstack 26
  4514   000E08                     
  4515                           ;color.c: 174:     float r = color_read_Red();
  4516   000E08  EC2B  F021         	call	_color_read_Red	;wreg free
  4517   000E0C  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  4518   000E10  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  4519   000E14  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4520   000E16  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4521   000E18  0E00               	movlw	0
  4522   000E1A  ECF6  F017         	call	___xxtofl
  4523   000E1E  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  4524   000E22  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  4525   000E26  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  4526   000E2A  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  4527                           
  4528                           ;color.c: 175:     float g = color_read_Green();
  4529   000E2E  EC53  F021         	call	_color_read_Green	;wreg free
  4530   000E32  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  4531   000E36  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  4532   000E3A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4533   000E3C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4534   000E3E  0E00               	movlw	0
  4535   000E40  ECF6  F017         	call	___xxtofl
  4536   000E44  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  4537   000E48  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  4538   000E4C  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  4539   000E50  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  4540                           
  4541                           ;color.c: 176:     float b = color_read_Blue();
  4542   000E54  ECA3  F021         	call	_color_read_Blue	;wreg free
  4543   000E58  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  4544   000E5C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  4545   000E60  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4546   000E62  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4547   000E64  0E00               	movlw	0
  4548   000E66  ECF6  F017         	call	___xxtofl
  4549   000E6A  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  4550   000E6E  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  4551   000E72  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  4552   000E76  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  4553                           
  4554                           ;color.c: 179:     float c = color_read_Clear();
  4555   000E7A  EC7B  F021         	call	_color_read_Clear	;wreg free
  4556   000E7E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  4557   000E82  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  4558   000E86  6A0E               	clrf	(___xxtofl@val+2)^0,c
  4559   000E88  6A0F               	clrf	(___xxtofl@val+3)^0,c
  4560   000E8A  0E00               	movlw	0
  4561   000E8C  ECF6  F017         	call	___xxtofl
  4562   000E90  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  4563   000E94  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  4564   000E98  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  4565   000E9C  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  4566   000EA0                     
  4567                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  4568   000EA0  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  4569   000EA4  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  4570   000EA8  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  4571   000EAC  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  4572   000EB0  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  4573   000EB4  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  4574   000EB8  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  4575   000EBC  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  4576   000EC0  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  4577   000EC4  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  4578   000EC8  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  4579   000ECC  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  4580   000ED0  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  4581   000ED4  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  4582   000ED8  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  4583   000EDC  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  4584   000EE0  0ED3               	movlw	low color_cardCheck@H
  4585   000EE2  0100               	movlb	0	; () banked
  4586   000EE4  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  4587   000EE6  0ED7               	movlw	low color_cardCheck@S
  4588   000EE8  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  4589   000EEA  0EDB               	movlw	low color_cardCheck@V
  4590   000EEC  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  4591   000EEE  EC20  F00C         	call	_RGB_to_HSV	;wreg free
  4592   000EF2                     
  4593                           ;color.c: 195:     unsigned int card_color = 0;
  4594   000EF2  0E00               	movlw	0
  4595   000EF4  0100               	movlb	0	; () banked
  4596   000EF6  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4597   000EF8  0E00               	movlw	0
  4598   000EFA  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4599   000EFC                     
  4600                           ; BSR set to: 0
  4601                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  4602   000EFC  0E00               	movlw	0
  4603   000EFE  6E01               	movwf	___flge@ff1^0,c
  4604   000F00  0E80               	movlw	128
  4605   000F02  6E02               	movwf	(___flge@ff1+1)^0,c
  4606   000F04  0EB1               	movlw	177
  4607   000F06  6E03               	movwf	(___flge@ff1+2)^0,c
  4608   000F08  0E43               	movlw	67
  4609   000F0A  6E04               	movwf	(___flge@ff1+3)^0,c
  4610   000F0C  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4611   000F10  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4612   000F14  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4613   000F18  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4614   000F1C  EC86  F01E         	call	___flge	;wreg free
  4615   000F20  B0D8               	btfsc	status,0,c
  4616   000F22  EF95  F007         	goto	u3931
  4617   000F26  EF97  F007         	goto	u3930
  4618   000F2A                     u3931:
  4619   000F2A  EF1B  F008         	goto	l3807
  4620   000F2E                     u3930:
  4621   000F2E  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4622   000F32  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4623   000F36  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4624   000F3A  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4625   000F3E  0E00               	movlw	0
  4626   000F40  6E05               	movwf	___flge@ff2^0,c
  4627   000F42  0E00               	movlw	0
  4628   000F44  6E06               	movwf	(___flge@ff2+1)^0,c
  4629   000F46  0EB4               	movlw	180
  4630   000F48  6E07               	movwf	(___flge@ff2+2)^0,c
  4631   000F4A  0E43               	movlw	67
  4632   000F4C  6E08               	movwf	(___flge@ff2+3)^0,c
  4633   000F4E  EC86  F01E         	call	___flge	;wreg free
  4634   000F52  B0D8               	btfsc	status,0,c
  4635   000F54  EFAE  F007         	goto	u3941
  4636   000F58  EFB0  F007         	goto	u3940
  4637   000F5C                     u3941:
  4638   000F5C  EF1B  F008         	goto	l3807
  4639   000F60                     u3940:
  4640   000F60  0E00               	movlw	0
  4641   000F62  6E01               	movwf	___flge@ff1^0,c
  4642   000F64  0E00               	movlw	0
  4643   000F66  6E02               	movwf	(___flge@ff1+1)^0,c
  4644   000F68  0EAA               	movlw	170
  4645   000F6A  6E03               	movwf	(___flge@ff1+2)^0,c
  4646   000F6C  0E42               	movlw	66
  4647   000F6E  6E04               	movwf	(___flge@ff1+3)^0,c
  4648   000F70  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4649   000F74  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4650   000F78  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4651   000F7C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4652   000F80  EC86  F01E         	call	___flge	;wreg free
  4653   000F84  B0D8               	btfsc	status,0,c
  4654   000F86  EFC7  F007         	goto	u3951
  4655   000F8A  EFC9  F007         	goto	u3950
  4656   000F8E                     u3951:
  4657   000F8E  EF1B  F008         	goto	l3807
  4658   000F92                     u3950:
  4659   000F92  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4660   000F96  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4661   000F9A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4662   000F9E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4663   000FA2  0E00               	movlw	0
  4664   000FA4  6E05               	movwf	___flge@ff2^0,c
  4665   000FA6  0E00               	movlw	0
  4666   000FA8  6E06               	movwf	(___flge@ff2+1)^0,c
  4667   000FAA  0EB4               	movlw	180
  4668   000FAC  6E07               	movwf	(___flge@ff2+2)^0,c
  4669   000FAE  0E42               	movlw	66
  4670   000FB0  6E08               	movwf	(___flge@ff2+3)^0,c
  4671   000FB2  EC86  F01E         	call	___flge	;wreg free
  4672   000FB6  B0D8               	btfsc	status,0,c
  4673   000FB8  EFE0  F007         	goto	u3961
  4674   000FBC  EFE2  F007         	goto	u3960
  4675   000FC0                     u3961:
  4676   000FC0  EF1B  F008         	goto	l3807
  4677   000FC4                     u3960:
  4678   000FC4  0E00               	movlw	0
  4679   000FC6  6E01               	movwf	___flge@ff1^0,c
  4680   000FC8  0E00               	movlw	0
  4681   000FCA  6E02               	movwf	(___flge@ff1+1)^0,c
  4682   000FCC  0EA0               	movlw	160
  4683   000FCE  6E03               	movwf	(___flge@ff1+2)^0,c
  4684   000FD0  0E42               	movlw	66
  4685   000FD2  6E04               	movwf	(___flge@ff1+3)^0,c
  4686   000FD4  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4687   000FD8  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4688   000FDC  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4689   000FE0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4690   000FE4  EC86  F01E         	call	___flge	;wreg free
  4691   000FE8  B0D8               	btfsc	status,0,c
  4692   000FEA  EFF9  F007         	goto	u3971
  4693   000FEE  EFFB  F007         	goto	u3970
  4694   000FF2                     u3971:
  4695   000FF2  EF1B  F008         	goto	l3807
  4696   000FF6                     u3970:
  4697   000FF6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4698   000FFA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4699   000FFE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4700   001002  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4701   001006  0E00               	movlw	0
  4702   001008  6E05               	movwf	___flge@ff2^0,c
  4703   00100A  0E00               	movlw	0
  4704   00100C  6E06               	movwf	(___flge@ff2+1)^0,c
  4705   00100E  0EAA               	movlw	170
  4706   001010  6E07               	movwf	(___flge@ff2+2)^0,c
  4707   001012  0E42               	movlw	66
  4708   001014  6E08               	movwf	(___flge@ff2+3)^0,c
  4709   001016  EC86  F01E         	call	___flge	;wreg free
  4710   00101A  B0D8               	btfsc	status,0,c
  4711   00101C  EF12  F008         	goto	u3981
  4712   001020  EF14  F008         	goto	u3980
  4713   001024                     u3981:
  4714   001024  EF1B  F008         	goto	l3807
  4715   001028                     u3980:
  4716   001028  0E00               	movlw	0
  4717   00102A  0100               	movlb	0	; () banked
  4718   00102C  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4719   00102E  0E01               	movlw	1
  4720   001030  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4721   001032  EF1B  F00C         	goto	l3899
  4722   001036                     l3807:
  4723   001036  0E00               	movlw	0
  4724   001038  6E01               	movwf	___flge@ff1^0,c
  4725   00103A  0E00               	movlw	0
  4726   00103C  6E02               	movwf	(___flge@ff1+1)^0,c
  4727   00103E  0E86               	movlw	134
  4728   001040  6E03               	movwf	(___flge@ff1+2)^0,c
  4729   001042  0E42               	movlw	66
  4730   001044  6E04               	movwf	(___flge@ff1+3)^0,c
  4731   001046  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4732   00104A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4733   00104E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4734   001052  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4735   001056  EC86  F01E         	call	___flge	;wreg free
  4736   00105A  B0D8               	btfsc	status,0,c
  4737   00105C  EF32  F008         	goto	u3991
  4738   001060  EF34  F008         	goto	u3990
  4739   001064                     u3991:
  4740   001064  EFB8  F008         	goto	l3821
  4741   001068                     u3990:
  4742   001068  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4743   00106C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4744   001070  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4745   001074  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4746   001078  0E00               	movlw	0
  4747   00107A  6E05               	movwf	___flge@ff2^0,c
  4748   00107C  0E00               	movlw	0
  4749   00107E  6E06               	movwf	(___flge@ff2+1)^0,c
  4750   001080  0E9E               	movlw	158
  4751   001082  6E07               	movwf	(___flge@ff2+2)^0,c
  4752   001084  0E42               	movlw	66
  4753   001086  6E08               	movwf	(___flge@ff2+3)^0,c
  4754   001088  EC86  F01E         	call	___flge	;wreg free
  4755   00108C  B0D8               	btfsc	status,0,c
  4756   00108E  EF4B  F008         	goto	u4001
  4757   001092  EF4D  F008         	goto	u4000
  4758   001096                     u4001:
  4759   001096  EFB8  F008         	goto	l3821
  4760   00109A                     u4000:
  4761   00109A  0E00               	movlw	0
  4762   00109C  6E01               	movwf	___flge@ff1^0,c
  4763   00109E  0E00               	movlw	0
  4764   0010A0  6E02               	movwf	(___flge@ff1+1)^0,c
  4765   0010A2  0E48               	movlw	72
  4766   0010A4  6E03               	movwf	(___flge@ff1+2)^0,c
  4767   0010A6  0E42               	movlw	66
  4768   0010A8  6E04               	movwf	(___flge@ff1+3)^0,c
  4769   0010AA  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4770   0010AE  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4771   0010B2  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4772   0010B6  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4773   0010BA  EC86  F01E         	call	___flge	;wreg free
  4774   0010BE  B0D8               	btfsc	status,0,c
  4775   0010C0  EF64  F008         	goto	u4011
  4776   0010C4  EF66  F008         	goto	u4010
  4777   0010C8                     u4011:
  4778   0010C8  EFB8  F008         	goto	l3821
  4779   0010CC                     u4010:
  4780   0010CC  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4781   0010D0  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4782   0010D4  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4783   0010D8  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4784   0010DC  0E00               	movlw	0
  4785   0010DE  6E05               	movwf	___flge@ff2^0,c
  4786   0010E0  0E00               	movlw	0
  4787   0010E2  6E06               	movwf	(___flge@ff2+1)^0,c
  4788   0010E4  0E64               	movlw	100
  4789   0010E6  6E07               	movwf	(___flge@ff2+2)^0,c
  4790   0010E8  0E42               	movlw	66
  4791   0010EA  6E08               	movwf	(___flge@ff2+3)^0,c
  4792   0010EC  EC86  F01E         	call	___flge	;wreg free
  4793   0010F0  B0D8               	btfsc	status,0,c
  4794   0010F2  EF7D  F008         	goto	u4021
  4795   0010F6  EF7F  F008         	goto	u4020
  4796   0010FA                     u4021:
  4797   0010FA  EFB8  F008         	goto	l3821
  4798   0010FE                     u4020:
  4799   0010FE  0E00               	movlw	0
  4800   001100  6E01               	movwf	___flge@ff1^0,c
  4801   001102  0E00               	movlw	0
  4802   001104  6E02               	movwf	(___flge@ff1+1)^0,c
  4803   001106  0E20               	movlw	32
  4804   001108  6E03               	movwf	(___flge@ff1+2)^0,c
  4805   00110A  0E42               	movlw	66
  4806   00110C  6E04               	movwf	(___flge@ff1+3)^0,c
  4807   00110E  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4808   001112  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4809   001116  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4810   00111A  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4811   00111E  EC86  F01E         	call	___flge	;wreg free
  4812   001122  B0D8               	btfsc	status,0,c
  4813   001124  EF96  F008         	goto	u4031
  4814   001128  EF98  F008         	goto	u4030
  4815   00112C                     u4031:
  4816   00112C  EFB8  F008         	goto	l3821
  4817   001130                     u4030:
  4818   001130  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4819   001134  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4820   001138  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4821   00113C  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4822   001140  0E00               	movlw	0
  4823   001142  6E05               	movwf	___flge@ff2^0,c
  4824   001144  0E00               	movlw	0
  4825   001146  6E06               	movwf	(___flge@ff2+1)^0,c
  4826   001148  0E38               	movlw	56
  4827   00114A  6E07               	movwf	(___flge@ff2+2)^0,c
  4828   00114C  0E42               	movlw	66
  4829   00114E  6E08               	movwf	(___flge@ff2+3)^0,c
  4830   001150  EC86  F01E         	call	___flge	;wreg free
  4831   001154  B0D8               	btfsc	status,0,c
  4832   001156  EFAF  F008         	goto	u4041
  4833   00115A  EFB1  F008         	goto	u4040
  4834   00115E                     u4041:
  4835   00115E  EFB8  F008         	goto	l3821
  4836   001162                     u4040:
  4837   001162  0E00               	movlw	0
  4838   001164  0100               	movlb	0	; () banked
  4839   001166  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4840   001168  0E02               	movlw	2
  4841   00116A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4842   00116C  EF1B  F00C         	goto	l3899
  4843   001170                     l3821:
  4844   001170  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4845   001174  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4846   001178  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4847   00117C  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4848   001180  0E00               	movlw	0
  4849   001182  6E05               	movwf	___flge@ff2^0,c
  4850   001184  0E00               	movlw	0
  4851   001186  6E06               	movwf	(___flge@ff2+1)^0,c
  4852   001188  0E20               	movlw	32
  4853   00118A  6E07               	movwf	(___flge@ff2+2)^0,c
  4854   00118C  0E41               	movlw	65
  4855   00118E  6E08               	movwf	(___flge@ff2+3)^0,c
  4856   001190  EC86  F01E         	call	___flge	;wreg free
  4857   001194  B0D8               	btfsc	status,0,c
  4858   001196  EFCF  F008         	goto	u4051
  4859   00119A  EFD1  F008         	goto	u4050
  4860   00119E                     u4051:
  4861   00119E  EF0A  F009         	goto	l3829
  4862   0011A2                     u4050:
  4863   0011A2  0E00               	movlw	0
  4864   0011A4  6E01               	movwf	___flge@ff1^0,c
  4865   0011A6  0E00               	movlw	0
  4866   0011A8  6E02               	movwf	(___flge@ff1+1)^0,c
  4867   0011AA  0EF0               	movlw	240
  4868   0011AC  6E03               	movwf	(___flge@ff1+2)^0,c
  4869   0011AE  0E41               	movlw	65
  4870   0011B0  6E04               	movwf	(___flge@ff1+3)^0,c
  4871   0011B2  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4872   0011B6  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4873   0011BA  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4874   0011BE  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4875   0011C2  EC86  F01E         	call	___flge	;wreg free
  4876   0011C6  B0D8               	btfsc	status,0,c
  4877   0011C8  EFE8  F008         	goto	u4061
  4878   0011CC  EFEA  F008         	goto	u4060
  4879   0011D0                     u4061:
  4880   0011D0  EF0A  F009         	goto	l3829
  4881   0011D4                     u4060:
  4882   0011D4  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  4883   0011D8  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  4884   0011DC  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  4885   0011E0  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  4886   0011E4  0E00               	movlw	0
  4887   0011E6  6E05               	movwf	___flge@ff2^0,c
  4888   0011E8  0E00               	movlw	0
  4889   0011EA  6E06               	movwf	(___flge@ff2+1)^0,c
  4890   0011EC  0E0C               	movlw	12
  4891   0011EE  6E07               	movwf	(___flge@ff2+2)^0,c
  4892   0011F0  0E42               	movlw	66
  4893   0011F2  6E08               	movwf	(___flge@ff2+3)^0,c
  4894   0011F4  EC86  F01E         	call	___flge	;wreg free
  4895   0011F8  B0D8               	btfsc	status,0,c
  4896   0011FA  EF01  F009         	goto	u4071
  4897   0011FE  EF03  F009         	goto	u4070
  4898   001202                     u4071:
  4899   001202  EF0A  F009         	goto	l3829
  4900   001206                     u4070:
  4901   001206  0E00               	movlw	0
  4902   001208  0100               	movlb	0	; () banked
  4903   00120A  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  4904   00120C  0E03               	movlw	3
  4905   00120E  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  4906   001210  EF1B  F00C         	goto	l3899
  4907   001214                     l3829:
  4908   001214  0E00               	movlw	0
  4909   001216  6E01               	movwf	___flge@ff1^0,c
  4910   001218  0E00               	movlw	0
  4911   00121A  6E02               	movwf	(___flge@ff1+1)^0,c
  4912   00121C  0EA0               	movlw	160
  4913   00121E  6E03               	movwf	(___flge@ff1+2)^0,c
  4914   001220  0E41               	movlw	65
  4915   001222  6E04               	movwf	(___flge@ff1+3)^0,c
  4916   001224  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  4917   001228  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  4918   00122C  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  4919   001230  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  4920   001234  EC86  F01E         	call	___flge	;wreg free
  4921   001238  B0D8               	btfsc	status,0,c
  4922   00123A  EF21  F009         	goto	u4081
  4923   00123E  EF23  F009         	goto	u4080
  4924   001242                     u4081:
  4925   001242  EFA7  F009         	goto	l3843
  4926   001246                     u4080:
  4927   001246  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  4928   00124A  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  4929   00124E  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  4930   001252  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  4931   001256  0E00               	movlw	0
  4932   001258  6E05               	movwf	___flge@ff2^0,c
  4933   00125A  0E00               	movlw	0
  4934   00125C  6E06               	movwf	(___flge@ff2+1)^0,c
  4935   00125E  0EC8               	movlw	200
  4936   001260  6E07               	movwf	(___flge@ff2+2)^0,c
  4937   001262  0E41               	movlw	65
  4938   001264  6E08               	movwf	(___flge@ff2+3)^0,c
  4939   001266  EC86  F01E         	call	___flge	;wreg free
  4940   00126A  B0D8               	btfsc	status,0,c
  4941   00126C  EF3A  F009         	goto	u4091
  4942   001270  EF3C  F009         	goto	u4090
  4943   001274                     u4091:
  4944   001274  EFA7  F009         	goto	l3843
  4945   001278                     u4090:
  4946   001278  0E00               	movlw	0
  4947   00127A  6E01               	movwf	___flge@ff1^0,c
  4948   00127C  0E00               	movlw	0
  4949   00127E  6E02               	movwf	(___flge@ff1+1)^0,c
  4950   001280  0E82               	movlw	130
  4951   001282  6E03               	movwf	(___flge@ff1+2)^0,c
  4952   001284  0E42               	movlw	66
  4953   001286  6E04               	movwf	(___flge@ff1+3)^0,c
  4954   001288  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  4955   00128C  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  4956   001290  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  4957   001294  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  4958   001298  EC86  F01E         	call	___flge	;wreg free
  4959   00129C  B0D8               	btfsc	status,0,c
  4960   00129E  EF53  F009         	goto	u4101
  4961   0012A2  EF55  F009         	goto	u4100
  4962   0012A6                     u4101:
  4963   0012A6  EFA7  F009         	goto	l3843
  4964   0012AA                     u4100:
  4965   0012AA  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  4966   0012AE  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  4967   0012B2  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  4968   0012B6  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  4969   0012BA  0E00               	movlw	0
  4970   0012BC  6E05               	movwf	___flge@ff2^0,c
  4971   0012BE  0E00               	movlw	0
  4972   0012C0  6E06               	movwf	(___flge@ff2+1)^0,c
  4973   0012C2  0E8C               	movlw	140
  4974   0012C4  6E07               	movwf	(___flge@ff2+2)^0,c
  4975   0012C6  0E42               	movlw	66
  4976   0012C8  6E08               	movwf	(___flge@ff2+3)^0,c
  4977   0012CA  EC86  F01E         	call	___flge	;wreg free
  4978   0012CE  B0D8               	btfsc	status,0,c
  4979   0012D0  EF6C  F009         	goto	u4111
  4980   0012D4  EF6E  F009         	goto	u4110
  4981   0012D8                     u4111:
  4982   0012D8  EFA7  F009         	goto	l3843
  4983   0012DC                     u4110:
  4984   0012DC  0E00               	movlw	0
  4985   0012DE  6E01               	movwf	___flge@ff1^0,c
  4986   0012E0  0E00               	movlw	0
  4987   0012E2  6E02               	movwf	(___flge@ff1+1)^0,c
  4988   0012E4  0E58               	movlw	88
  4989   0012E6  6E03               	movwf	(___flge@ff1+2)^0,c
  4990   0012E8  0E42               	movlw	66
  4991   0012EA  6E04               	movwf	(___flge@ff1+3)^0,c
  4992   0012EC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  4993   0012F0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  4994   0012F4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  4995   0012F8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  4996   0012FC  EC86  F01E         	call	___flge	;wreg free
  4997   001300  B0D8               	btfsc	status,0,c
  4998   001302  EF85  F009         	goto	u4121
  4999   001306  EF87  F009         	goto	u4120
  5000   00130A                     u4121:
  5001   00130A  EFA7  F009         	goto	l3843
  5002   00130E                     u4120:
  5003   00130E  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5004   001312  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5005   001316  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5006   00131A  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5007   00131E  0E00               	movlw	0
  5008   001320  6E05               	movwf	___flge@ff2^0,c
  5009   001322  0E00               	movlw	0
  5010   001324  6E06               	movwf	(___flge@ff2+1)^0,c
  5011   001326  0E64               	movlw	100
  5012   001328  6E07               	movwf	(___flge@ff2+2)^0,c
  5013   00132A  0E42               	movlw	66
  5014   00132C  6E08               	movwf	(___flge@ff2+3)^0,c
  5015   00132E  EC86  F01E         	call	___flge	;wreg free
  5016   001332  B0D8               	btfsc	status,0,c
  5017   001334  EF9E  F009         	goto	u4131
  5018   001338  EFA0  F009         	goto	u4130
  5019   00133C                     u4131:
  5020   00133C  EFA7  F009         	goto	l3843
  5021   001340                     u4130:
  5022   001340  0E00               	movlw	0
  5023   001342  0100               	movlb	0	; () banked
  5024   001344  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5025   001346  0E04               	movlw	4
  5026   001348  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5027   00134A  EF1B  F00C         	goto	l3899
  5028   00134E                     l3843:
  5029   00134E  0E00               	movlw	0
  5030   001350  6E01               	movwf	___flge@ff1^0,c
  5031   001352  0E00               	movlw	0
  5032   001354  6E02               	movwf	(___flge@ff1+1)^0,c
  5033   001356  0E50               	movlw	80
  5034   001358  6E03               	movwf	(___flge@ff1+2)^0,c
  5035   00135A  0E41               	movlw	65
  5036   00135C  6E04               	movwf	(___flge@ff1+3)^0,c
  5037   00135E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5038   001362  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5039   001366  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5040   00136A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5041   00136E  EC86  F01E         	call	___flge	;wreg free
  5042   001372  B0D8               	btfsc	status,0,c
  5043   001374  EFBE  F009         	goto	u4141
  5044   001378  EFC0  F009         	goto	u4140
  5045   00137C                     u4141:
  5046   00137C  EF44  F00A         	goto	l3857
  5047   001380                     u4140:
  5048   001380  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5049   001384  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5050   001388  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5051   00138C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5052   001390  0E00               	movlw	0
  5053   001392  6E05               	movwf	___flge@ff2^0,c
  5054   001394  0E00               	movlw	0
  5055   001396  6E06               	movwf	(___flge@ff2+1)^0,c
  5056   001398  0E90               	movlw	144
  5057   00139A  6E07               	movwf	(___flge@ff2+2)^0,c
  5058   00139C  0E41               	movlw	65
  5059   00139E  6E08               	movwf	(___flge@ff2+3)^0,c
  5060   0013A0  EC86  F01E         	call	___flge	;wreg free
  5061   0013A4  B0D8               	btfsc	status,0,c
  5062   0013A6  EFD7  F009         	goto	u4151
  5063   0013AA  EFD9  F009         	goto	u4150
  5064   0013AE                     u4151:
  5065   0013AE  EF44  F00A         	goto	l3857
  5066   0013B2                     u4150:
  5067   0013B2  0E00               	movlw	0
  5068   0013B4  6E01               	movwf	___flge@ff1^0,c
  5069   0013B6  0E00               	movlw	0
  5070   0013B8  6E02               	movwf	(___flge@ff1+1)^0,c
  5071   0013BA  0E5C               	movlw	92
  5072   0013BC  6E03               	movwf	(___flge@ff1+2)^0,c
  5073   0013BE  0E42               	movlw	66
  5074   0013C0  6E04               	movwf	(___flge@ff1+3)^0,c
  5075   0013C2  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5076   0013C6  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5077   0013CA  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5078   0013CE  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5079   0013D2  EC86  F01E         	call	___flge	;wreg free
  5080   0013D6  B0D8               	btfsc	status,0,c
  5081   0013D8  EFF0  F009         	goto	u4161
  5082   0013DC  EFF2  F009         	goto	u4160
  5083   0013E0                     u4161:
  5084   0013E0  EF44  F00A         	goto	l3857
  5085   0013E4                     u4160:
  5086   0013E4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5087   0013E8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5088   0013EC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5089   0013F0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5090   0013F4  0E00               	movlw	0
  5091   0013F6  6E05               	movwf	___flge@ff2^0,c
  5092   0013F8  0E00               	movlw	0
  5093   0013FA  6E06               	movwf	(___flge@ff2+1)^0,c
  5094   0013FC  0E70               	movlw	112
  5095   0013FE  6E07               	movwf	(___flge@ff2+2)^0,c
  5096   001400  0E42               	movlw	66
  5097   001402  6E08               	movwf	(___flge@ff2+3)^0,c
  5098   001404  EC86  F01E         	call	___flge	;wreg free
  5099   001408  B0D8               	btfsc	status,0,c
  5100   00140A  EF09  F00A         	goto	u4171
  5101   00140E  EF0B  F00A         	goto	u4170
  5102   001412                     u4171:
  5103   001412  EF44  F00A         	goto	l3857
  5104   001416                     u4170:
  5105   001416  0E00               	movlw	0
  5106   001418  6E01               	movwf	___flge@ff1^0,c
  5107   00141A  0E00               	movlw	0
  5108   00141C  6E02               	movwf	(___flge@ff1+1)^0,c
  5109   00141E  0E48               	movlw	72
  5110   001420  6E03               	movwf	(___flge@ff1+2)^0,c
  5111   001422  0E42               	movlw	66
  5112   001424  6E04               	movwf	(___flge@ff1+3)^0,c
  5113   001426  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5114   00142A  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5115   00142E  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5116   001432  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5117   001436  EC86  F01E         	call	___flge	;wreg free
  5118   00143A  B0D8               	btfsc	status,0,c
  5119   00143C  EF22  F00A         	goto	u4181
  5120   001440  EF24  F00A         	goto	u4180
  5121   001444                     u4181:
  5122   001444  EF44  F00A         	goto	l3857
  5123   001448                     u4180:
  5124   001448  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5125   00144C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5126   001450  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5127   001454  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5128   001458  0E00               	movlw	0
  5129   00145A  6E05               	movwf	___flge@ff2^0,c
  5130   00145C  0E00               	movlw	0
  5131   00145E  6E06               	movwf	(___flge@ff2+1)^0,c
  5132   001460  0E58               	movlw	88
  5133   001462  6E07               	movwf	(___flge@ff2+2)^0,c
  5134   001464  0E42               	movlw	66
  5135   001466  6E08               	movwf	(___flge@ff2+3)^0,c
  5136   001468  EC86  F01E         	call	___flge	;wreg free
  5137   00146C  B0D8               	btfsc	status,0,c
  5138   00146E  EF3B  F00A         	goto	u4191
  5139   001472  EF3D  F00A         	goto	u4190
  5140   001476                     u4191:
  5141   001476  EF44  F00A         	goto	l3857
  5142   00147A                     u4190:
  5143   00147A  0E00               	movlw	0
  5144   00147C  0100               	movlb	0	; () banked
  5145   00147E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5146   001480  0E05               	movlw	5
  5147   001482  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5148   001484  EF1B  F00C         	goto	l3899
  5149   001488                     l3857:
  5150   001488  0E00               	movlw	0
  5151   00148A  6E01               	movwf	___flge@ff1^0,c
  5152   00148C  0E00               	movlw	0
  5153   00148E  6E02               	movwf	(___flge@ff1+1)^0,c
  5154   001490  0EA0               	movlw	160
  5155   001492  6E03               	movwf	(___flge@ff1+2)^0,c
  5156   001494  0E40               	movlw	64
  5157   001496  6E04               	movwf	(___flge@ff1+3)^0,c
  5158   001498  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5159   00149C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5160   0014A0  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5161   0014A4  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5162   0014A8  EC86  F01E         	call	___flge	;wreg free
  5163   0014AC  B0D8               	btfsc	status,0,c
  5164   0014AE  EF5B  F00A         	goto	u4201
  5165   0014B2  EF5D  F00A         	goto	u4200
  5166   0014B6                     u4201:
  5167   0014B6  EFE1  F00A         	goto	l3871
  5168   0014BA                     u4200:
  5169   0014BA  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5170   0014BE  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5171   0014C2  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5172   0014C6  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5173   0014CA  0E00               	movlw	0
  5174   0014CC  6E05               	movwf	___flge@ff2^0,c
  5175   0014CE  0E00               	movlw	0
  5176   0014D0  6E06               	movwf	(___flge@ff2+1)^0,c
  5177   0014D2  0E20               	movlw	32
  5178   0014D4  6E07               	movwf	(___flge@ff2+2)^0,c
  5179   0014D6  0E41               	movlw	65
  5180   0014D8  6E08               	movwf	(___flge@ff2+3)^0,c
  5181   0014DA  EC86  F01E         	call	___flge	;wreg free
  5182   0014DE  B0D8               	btfsc	status,0,c
  5183   0014E0  EF74  F00A         	goto	u4211
  5184   0014E4  EF76  F00A         	goto	u4210
  5185   0014E8                     u4211:
  5186   0014E8  EFE1  F00A         	goto	l3871
  5187   0014EC                     u4210:
  5188   0014EC  0E00               	movlw	0
  5189   0014EE  6E01               	movwf	___flge@ff1^0,c
  5190   0014F0  0E00               	movlw	0
  5191   0014F2  6E02               	movwf	(___flge@ff1+1)^0,c
  5192   0014F4  0E8C               	movlw	140
  5193   0014F6  6E03               	movwf	(___flge@ff1+2)^0,c
  5194   0014F8  0E42               	movlw	66
  5195   0014FA  6E04               	movwf	(___flge@ff1+3)^0,c
  5196   0014FC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5197   001500  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5198   001504  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5199   001508  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5200   00150C  EC86  F01E         	call	___flge	;wreg free
  5201   001510  B0D8               	btfsc	status,0,c
  5202   001512  EF8D  F00A         	goto	u4221
  5203   001516  EF8F  F00A         	goto	u4220
  5204   00151A                     u4221:
  5205   00151A  EFE1  F00A         	goto	l3871
  5206   00151E                     u4220:
  5207   00151E  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5208   001522  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5209   001526  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5210   00152A  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5211   00152E  0E00               	movlw	0
  5212   001530  6E05               	movwf	___flge@ff2^0,c
  5213   001532  0E00               	movlw	0
  5214   001534  6E06               	movwf	(___flge@ff2+1)^0,c
  5215   001536  0E96               	movlw	150
  5216   001538  6E07               	movwf	(___flge@ff2+2)^0,c
  5217   00153A  0E42               	movlw	66
  5218   00153C  6E08               	movwf	(___flge@ff2+3)^0,c
  5219   00153E  EC86  F01E         	call	___flge	;wreg free
  5220   001542  B0D8               	btfsc	status,0,c
  5221   001544  EFA6  F00A         	goto	u4231
  5222   001548  EFA8  F00A         	goto	u4230
  5223   00154C                     u4231:
  5224   00154C  EFE1  F00A         	goto	l3871
  5225   001550                     u4230:
  5226   001550  0E00               	movlw	0
  5227   001552  6E01               	movwf	___flge@ff1^0,c
  5228   001554  0E00               	movlw	0
  5229   001556  6E02               	movwf	(___flge@ff1+1)^0,c
  5230   001558  0E78               	movlw	120
  5231   00155A  6E03               	movwf	(___flge@ff1+2)^0,c
  5232   00155C  0E42               	movlw	66
  5233   00155E  6E04               	movwf	(___flge@ff1+3)^0,c
  5234   001560  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5235   001564  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5236   001568  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5237   00156C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5238   001570  EC86  F01E         	call	___flge	;wreg free
  5239   001574  B0D8               	btfsc	status,0,c
  5240   001576  EFBF  F00A         	goto	u4241
  5241   00157A  EFC1  F00A         	goto	u4240
  5242   00157E                     u4241:
  5243   00157E  EFE1  F00A         	goto	l3871
  5244   001582                     u4240:
  5245   001582  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5246   001586  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5247   00158A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5248   00158E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5249   001592  0E00               	movlw	0
  5250   001594  6E05               	movwf	___flge@ff2^0,c
  5251   001596  0E00               	movlw	0
  5252   001598  6E06               	movwf	(___flge@ff2+1)^0,c
  5253   00159A  0E86               	movlw	134
  5254   00159C  6E07               	movwf	(___flge@ff2+2)^0,c
  5255   00159E  0E42               	movlw	66
  5256   0015A0  6E08               	movwf	(___flge@ff2+3)^0,c
  5257   0015A2  EC86  F01E         	call	___flge	;wreg free
  5258   0015A6  B0D8               	btfsc	status,0,c
  5259   0015A8  EFD8  F00A         	goto	u4251
  5260   0015AC  EFDA  F00A         	goto	u4250
  5261   0015B0                     u4251:
  5262   0015B0  EFE1  F00A         	goto	l3871
  5263   0015B4                     u4250:
  5264   0015B4  0E00               	movlw	0
  5265   0015B6  0100               	movlb	0	; () banked
  5266   0015B8  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5267   0015BA  0E06               	movlw	6
  5268   0015BC  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5269   0015BE  EF1B  F00C         	goto	l3899
  5270   0015C2                     l3871:
  5271   0015C2  0E00               	movlw	0
  5272   0015C4  6E01               	movwf	___flge@ff1^0,c
  5273   0015C6  0E00               	movlw	0
  5274   0015C8  6E02               	movwf	(___flge@ff1+1)^0,c
  5275   0015CA  0E94               	movlw	148
  5276   0015CC  6E03               	movwf	(___flge@ff1+2)^0,c
  5277   0015CE  0E42               	movlw	66
  5278   0015D0  6E04               	movwf	(___flge@ff1+3)^0,c
  5279   0015D2  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5280   0015D6  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5281   0015DA  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5282   0015DE  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5283   0015E2  EC86  F01E         	call	___flge	;wreg free
  5284   0015E6  B0D8               	btfsc	status,0,c
  5285   0015E8  EFF8  F00A         	goto	u4261
  5286   0015EC  EFFA  F00A         	goto	u4260
  5287   0015F0                     u4261:
  5288   0015F0  EF7E  F00B         	goto	l3885
  5289   0015F4                     u4260:
  5290   0015F4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5291   0015F8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5292   0015FC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5293   001600  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5294   001604  0E00               	movlw	0
  5295   001606  6E05               	movwf	___flge@ff2^0,c
  5296   001608  0E00               	movlw	0
  5297   00160A  6E06               	movwf	(___flge@ff2+1)^0,c
  5298   00160C  0EAA               	movlw	170
  5299   00160E  6E07               	movwf	(___flge@ff2+2)^0,c
  5300   001610  0E42               	movlw	66
  5301   001612  6E08               	movwf	(___flge@ff2+3)^0,c
  5302   001614  EC86  F01E         	call	___flge	;wreg free
  5303   001618  B0D8               	btfsc	status,0,c
  5304   00161A  EF11  F00B         	goto	u4271
  5305   00161E  EF13  F00B         	goto	u4270
  5306   001622                     u4271:
  5307   001622  EF7E  F00B         	goto	l3885
  5308   001626                     u4270:
  5309   001626  0E00               	movlw	0
  5310   001628  6E01               	movwf	___flge@ff1^0,c
  5311   00162A  0E00               	movlw	0
  5312   00162C  6E02               	movwf	(___flge@ff1+1)^0,c
  5313   00162E  0EE0               	movlw	224
  5314   001630  6E03               	movwf	(___flge@ff1+2)^0,c
  5315   001632  0E41               	movlw	65
  5316   001634  6E04               	movwf	(___flge@ff1+3)^0,c
  5317   001636  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5318   00163A  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5319   00163E  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5320   001642  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5321   001646  EC86  F01E         	call	___flge	;wreg free
  5322   00164A  B0D8               	btfsc	status,0,c
  5323   00164C  EF2A  F00B         	goto	u4281
  5324   001650  EF2C  F00B         	goto	u4280
  5325   001654                     u4281:
  5326   001654  EF7E  F00B         	goto	l3885
  5327   001658                     u4280:
  5328   001658  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5329   00165C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5330   001660  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5331   001664  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5332   001668  0E00               	movlw	0
  5333   00166A  6E05               	movwf	___flge@ff2^0,c
  5334   00166C  0E00               	movlw	0
  5335   00166E  6E06               	movwf	(___flge@ff2+1)^0,c
  5336   001670  0E04               	movlw	4
  5337   001672  6E07               	movwf	(___flge@ff2+2)^0,c
  5338   001674  0E42               	movlw	66
  5339   001676  6E08               	movwf	(___flge@ff2+3)^0,c
  5340   001678  EC86  F01E         	call	___flge	;wreg free
  5341   00167C  B0D8               	btfsc	status,0,c
  5342   00167E  EF43  F00B         	goto	u4291
  5343   001682  EF45  F00B         	goto	u4290
  5344   001686                     u4291:
  5345   001686  EF7E  F00B         	goto	l3885
  5346   00168A                     u4290:
  5347   00168A  0E00               	movlw	0
  5348   00168C  6E01               	movwf	___flge@ff1^0,c
  5349   00168E  0E00               	movlw	0
  5350   001690  6E02               	movwf	(___flge@ff1+1)^0,c
  5351   001692  0E14               	movlw	20
  5352   001694  6E03               	movwf	(___flge@ff1+2)^0,c
  5353   001696  0E42               	movlw	66
  5354   001698  6E04               	movwf	(___flge@ff1+3)^0,c
  5355   00169A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5356   00169E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5357   0016A2  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5358   0016A6  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5359   0016AA  EC86  F01E         	call	___flge	;wreg free
  5360   0016AE  B0D8               	btfsc	status,0,c
  5361   0016B0  EF5C  F00B         	goto	u4301
  5362   0016B4  EF5E  F00B         	goto	u4300
  5363   0016B8                     u4301:
  5364   0016B8  EF7E  F00B         	goto	l3885
  5365   0016BC                     u4300:
  5366   0016BC  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5367   0016C0  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5368   0016C4  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5369   0016C8  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5370   0016CC  0E00               	movlw	0
  5371   0016CE  6E05               	movwf	___flge@ff2^0,c
  5372   0016D0  0E00               	movlw	0
  5373   0016D2  6E06               	movwf	(___flge@ff2+1)^0,c
  5374   0016D4  0E28               	movlw	40
  5375   0016D6  6E07               	movwf	(___flge@ff2+2)^0,c
  5376   0016D8  0E42               	movlw	66
  5377   0016DA  6E08               	movwf	(___flge@ff2+3)^0,c
  5378   0016DC  EC86  F01E         	call	___flge	;wreg free
  5379   0016E0  B0D8               	btfsc	status,0,c
  5380   0016E2  EF75  F00B         	goto	u4311
  5381   0016E6  EF77  F00B         	goto	u4310
  5382   0016EA                     u4311:
  5383   0016EA  EF7E  F00B         	goto	l3885
  5384   0016EE                     u4310:
  5385   0016EE  0E00               	movlw	0
  5386   0016F0  0100               	movlb	0	; () banked
  5387   0016F2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5388   0016F4  0E07               	movlw	7
  5389   0016F6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5390   0016F8  EF1B  F00C         	goto	l3899
  5391   0016FC                     l3885:
  5392   0016FC  0E00               	movlw	0
  5393   0016FE  6E01               	movwf	___flge@ff1^0,c
  5394   001700  0E00               	movlw	0
  5395   001702  6E02               	movwf	(___flge@ff1+1)^0,c
  5396   001704  0EB0               	movlw	176
  5397   001706  6E03               	movwf	(___flge@ff1+2)^0,c
  5398   001708  0E41               	movlw	65
  5399   00170A  6E04               	movwf	(___flge@ff1+3)^0,c
  5400   00170C  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  5401   001710  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  5402   001714  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  5403   001718  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  5404   00171C  EC86  F01E         	call	___flge	;wreg free
  5405   001720  B0D8               	btfsc	status,0,c
  5406   001722  EF95  F00B         	goto	u4321
  5407   001726  EF97  F00B         	goto	u4320
  5408   00172A                     u4321:
  5409   00172A  EF1B  F00C         	goto	l99
  5410   00172E                     u4320:
  5411   00172E  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  5412   001732  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  5413   001736  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  5414   00173A  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  5415   00173E  0E00               	movlw	0
  5416   001740  6E05               	movwf	___flge@ff2^0,c
  5417   001742  0E00               	movlw	0
  5418   001744  6E06               	movwf	(___flge@ff2+1)^0,c
  5419   001746  0ED8               	movlw	216
  5420   001748  6E07               	movwf	(___flge@ff2+2)^0,c
  5421   00174A  0E41               	movlw	65
  5422   00174C  6E08               	movwf	(___flge@ff2+3)^0,c
  5423   00174E  EC86  F01E         	call	___flge	;wreg free
  5424   001752  B0D8               	btfsc	status,0,c
  5425   001754  EFAE  F00B         	goto	u4331
  5426   001758  EFB0  F00B         	goto	u4330
  5427   00175C                     u4331:
  5428   00175C  EF1B  F00C         	goto	l99
  5429   001760                     u4330:
  5430   001760  0E00               	movlw	0
  5431   001762  6E01               	movwf	___flge@ff1^0,c
  5432   001764  0E00               	movlw	0
  5433   001766  6E02               	movwf	(___flge@ff1+1)^0,c
  5434   001768  0E40               	movlw	64
  5435   00176A  6E03               	movwf	(___flge@ff1+2)^0,c
  5436   00176C  0E42               	movlw	66
  5437   00176E  6E04               	movwf	(___flge@ff1+3)^0,c
  5438   001770  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  5439   001774  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  5440   001778  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  5441   00177C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  5442   001780  EC86  F01E         	call	___flge	;wreg free
  5443   001784  B0D8               	btfsc	status,0,c
  5444   001786  EFC7  F00B         	goto	u4341
  5445   00178A  EFC9  F00B         	goto	u4340
  5446   00178E                     u4341:
  5447   00178E  EF1B  F00C         	goto	l99
  5448   001792                     u4340:
  5449   001792  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  5450   001796  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  5451   00179A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  5452   00179E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  5453   0017A2  0E00               	movlw	0
  5454   0017A4  6E05               	movwf	___flge@ff2^0,c
  5455   0017A6  0E00               	movlw	0
  5456   0017A8  6E06               	movwf	(___flge@ff2+1)^0,c
  5457   0017AA  0E54               	movlw	84
  5458   0017AC  6E07               	movwf	(___flge@ff2+2)^0,c
  5459   0017AE  0E42               	movlw	66
  5460   0017B0  6E08               	movwf	(___flge@ff2+3)^0,c
  5461   0017B2  EC86  F01E         	call	___flge	;wreg free
  5462   0017B6  B0D8               	btfsc	status,0,c
  5463   0017B8  EFE0  F00B         	goto	u4351
  5464   0017BC  EFE2  F00B         	goto	u4350
  5465   0017C0                     u4351:
  5466   0017C0  EF1B  F00C         	goto	l99
  5467   0017C4                     u4350:
  5468   0017C4  0E00               	movlw	0
  5469   0017C6  6E01               	movwf	___flge@ff1^0,c
  5470   0017C8  0E00               	movlw	0
  5471   0017CA  6E02               	movwf	(___flge@ff1+1)^0,c
  5472   0017CC  0E34               	movlw	52
  5473   0017CE  6E03               	movwf	(___flge@ff1+2)^0,c
  5474   0017D0  0E42               	movlw	66
  5475   0017D2  6E04               	movwf	(___flge@ff1+3)^0,c
  5476   0017D4  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  5477   0017D8  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  5478   0017DC  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  5479   0017E0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  5480   0017E4  EC86  F01E         	call	___flge	;wreg free
  5481   0017E8  B0D8               	btfsc	status,0,c
  5482   0017EA  EFF9  F00B         	goto	u4361
  5483   0017EE  EFFB  F00B         	goto	u4360
  5484   0017F2                     u4361:
  5485   0017F2  EF1B  F00C         	goto	l99
  5486   0017F6                     u4360:
  5487   0017F6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  5488   0017FA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  5489   0017FE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  5490   001802  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  5491   001806  0E00               	movlw	0
  5492   001808  6E05               	movwf	___flge@ff2^0,c
  5493   00180A  0E00               	movlw	0
  5494   00180C  6E06               	movwf	(___flge@ff2+1)^0,c
  5495   00180E  0E48               	movlw	72
  5496   001810  6E07               	movwf	(___flge@ff2+2)^0,c
  5497   001812  0E42               	movlw	66
  5498   001814  6E08               	movwf	(___flge@ff2+3)^0,c
  5499   001816  EC86  F01E         	call	___flge	;wreg free
  5500   00181A  B0D8               	btfsc	status,0,c
  5501   00181C  EF12  F00C         	goto	u4371
  5502   001820  EF14  F00C         	goto	u4370
  5503   001824                     u4371:
  5504   001824  EF1B  F00C         	goto	l99
  5505   001828                     u4370:
  5506   001828  0E00               	movlw	0
  5507   00182A  0100               	movlb	0	; () banked
  5508   00182C  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  5509   00182E  0E08               	movlw	8
  5510   001830  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  5511   001832  EF1B  F00C         	goto	l3899
  5512   001836                     l99:
  5513   001836                     l3899:
  5514                           
  5515                           ;color.c: 222:     return card_color;
  5516   001836  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  5517   00183A  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  5518   00183E  0012               	return		;funcret
  5519   001840                     __end_of_color_cardCheck:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _color_read_Red *****************
  5523 ;; Defined at:
  5524 ;;		line 46 in file "color.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  tmp             2    9[COMRAM] unsigned int 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  2    4[COMRAM] unsigned int 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0, cstack
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;Total ram usage:        7 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 2
  5545 ;; This function calls:
  5546 ;;		_I2C_2_Master_Read
  5547 ;;		_I2C_2_Master_RepStart
  5548 ;;		_I2C_2_Master_Start
  5549 ;;		_I2C_2_Master_Stop
  5550 ;;		_I2C_2_Master_Write
  5551 ;; This function is called by:
  5552 ;;		_color_cardCheck
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text24
  5557   004256                     __ptext24:
  5558                           	callstack 0
  5559   004256                     _color_read_Red:
  5560                           	callstack 27
  5561   004256                     
  5562                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  5563   004256  EC27  F023         	call	_I2C_2_Master_Start	;wreg free
  5564                           
  5565                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  5566   00425A  0E52               	movlw	82
  5567   00425C  EC1C  F023         	call	_I2C_2_Master_Write
  5568                           
  5569                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  5570   004260  0EB6               	movlw	182
  5571   004262  EC1C  F023         	call	_I2C_2_Master_Write
  5572                           
  5573                           ;color.c: 52:  I2C_2_Master_RepStart();
  5574   004266  EC2C  F023         	call	_I2C_2_Master_RepStart	;wreg free
  5575                           
  5576                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  5577   00426A  0E53               	movlw	83
  5578   00426C  EC1C  F023         	call	_I2C_2_Master_Write
  5579                           
  5580                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  5581   004270  0E01               	movlw	1
  5582   004272  EC0F  F022         	call	_I2C_2_Master_Read
  5583   004276  6E07               	movwf	??_color_read_Red^0,c
  5584   004278  5007               	movf	??_color_read_Red^0,w,c
  5585   00427A  6E0A               	movwf	color_read_Red@tmp^0,c
  5586   00427C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5587                           
  5588                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5589   00427E  0E00               	movlw	0
  5590   004280  EC0F  F022         	call	_I2C_2_Master_Read
  5591   004284  6E07               	movwf	??_color_read_Red^0,c
  5592   004286  5007               	movf	??_color_read_Red^0,w,c
  5593   004288  6E09               	movwf	(??_color_read_Red+2)^0,c
  5594   00428A  6A08               	clrf	(??_color_read_Red+1)^0,c
  5595   00428C  500A               	movf	color_read_Red@tmp^0,w,c
  5596   00428E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5597   004290  6E0A               	movwf	color_read_Red@tmp^0,c
  5598   004292  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5599   004294  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5600   004296  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5601                           
  5602                           ;color.c: 56:  I2C_2_Master_Stop();
  5603   004298  EC22  F023         	call	_I2C_2_Master_Stop	;wreg free
  5604   00429C                     
  5605                           ;color.c: 57:  return tmp;
  5606   00429C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5607   0042A0  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5608   0042A4  0012               	return		;funcret
  5609   0042A6                     __end_of_color_read_Red:
  5610                           	callstack 0
  5611                           
  5612 ;; *************** function _color_read_Green *****************
  5613 ;; Defined at:
  5614 ;;		line 60 in file "color.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  tmp             2    9[COMRAM] unsigned int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  2    4[COMRAM] unsigned int 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5630 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;Total ram usage:        7 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 2
  5635 ;; This function calls:
  5636 ;;		_I2C_2_Master_Read
  5637 ;;		_I2C_2_Master_RepStart
  5638 ;;		_I2C_2_Master_Start
  5639 ;;		_I2C_2_Master_Stop
  5640 ;;		_I2C_2_Master_Write
  5641 ;; This function is called by:
  5642 ;;		_color_cardCheck
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text25
  5647   0042A6                     __ptext25:
  5648                           	callstack 0
  5649   0042A6                     _color_read_Green:
  5650                           	callstack 27
  5651   0042A6                     
  5652                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  5653   0042A6  EC27  F023         	call	_I2C_2_Master_Start	;wreg free
  5654                           
  5655                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  5656   0042AA  0E52               	movlw	82
  5657   0042AC  EC1C  F023         	call	_I2C_2_Master_Write
  5658                           
  5659                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  5660   0042B0  0EB8               	movlw	184
  5661   0042B2  EC1C  F023         	call	_I2C_2_Master_Write
  5662                           
  5663                           ;color.c: 66:  I2C_2_Master_RepStart();
  5664   0042B6  EC2C  F023         	call	_I2C_2_Master_RepStart	;wreg free
  5665                           
  5666                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  5667   0042BA  0E53               	movlw	83
  5668   0042BC  EC1C  F023         	call	_I2C_2_Master_Write
  5669                           
  5670                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  5671   0042C0  0E01               	movlw	1
  5672   0042C2  EC0F  F022         	call	_I2C_2_Master_Read
  5673   0042C6  6E07               	movwf	??_color_read_Green^0,c
  5674   0042C8  5007               	movf	??_color_read_Green^0,w,c
  5675   0042CA  6E0A               	movwf	color_read_Green@tmp^0,c
  5676   0042CC  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5677                           
  5678                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5679   0042CE  0E00               	movlw	0
  5680   0042D0  EC0F  F022         	call	_I2C_2_Master_Read
  5681   0042D4  6E07               	movwf	??_color_read_Green^0,c
  5682   0042D6  5007               	movf	??_color_read_Green^0,w,c
  5683   0042D8  6E09               	movwf	(??_color_read_Green+2)^0,c
  5684   0042DA  6A08               	clrf	(??_color_read_Green+1)^0,c
  5685   0042DC  500A               	movf	color_read_Green@tmp^0,w,c
  5686   0042DE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5687   0042E0  6E0A               	movwf	color_read_Green@tmp^0,c
  5688   0042E2  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5689   0042E4  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5690   0042E6  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5691                           
  5692                           ;color.c: 70:  I2C_2_Master_Stop();
  5693   0042E8  EC22  F023         	call	_I2C_2_Master_Stop	;wreg free
  5694   0042EC                     
  5695                           ;color.c: 71:  return tmp;
  5696   0042EC  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5697   0042F0  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5698   0042F4  0012               	return		;funcret
  5699   0042F6                     __end_of_color_read_Green:
  5700                           	callstack 0
  5701                           
  5702 ;; *************** function _color_read_Clear *****************
  5703 ;; Defined at:
  5704 ;;		line 88 in file "color.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;		None
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  tmp             2    9[COMRAM] unsigned int 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  2    4[COMRAM] unsigned int 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5720 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5721 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5722 ;;Total ram usage:        7 bytes
  5723 ;; Hardware stack levels used: 1
  5724 ;; Hardware stack levels required when called: 2
  5725 ;; This function calls:
  5726 ;;		_I2C_2_Master_Read
  5727 ;;		_I2C_2_Master_RepStart
  5728 ;;		_I2C_2_Master_Start
  5729 ;;		_I2C_2_Master_Stop
  5730 ;;		_I2C_2_Master_Write
  5731 ;; This function is called by:
  5732 ;;		_color_cardCheck
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text26
  5737   0042F6                     __ptext26:
  5738                           	callstack 0
  5739   0042F6                     _color_read_Clear:
  5740                           	callstack 27
  5741   0042F6                     
  5742                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  5743   0042F6  EC27  F023         	call	_I2C_2_Master_Start	;wreg free
  5744                           
  5745                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  5746   0042FA  0E52               	movlw	82
  5747   0042FC  EC1C  F023         	call	_I2C_2_Master_Write
  5748                           
  5749                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  5750   004300  0EB4               	movlw	180
  5751   004302  EC1C  F023         	call	_I2C_2_Master_Write
  5752                           
  5753                           ;color.c: 96:  I2C_2_Master_RepStart();
  5754   004306  EC2C  F023         	call	_I2C_2_Master_RepStart	;wreg free
  5755                           
  5756                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  5757   00430A  0E53               	movlw	83
  5758   00430C  EC1C  F023         	call	_I2C_2_Master_Write
  5759                           
  5760                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  5761   004310  0E01               	movlw	1
  5762   004312  EC0F  F022         	call	_I2C_2_Master_Read
  5763   004316  6E07               	movwf	??_color_read_Clear^0,c
  5764   004318  5007               	movf	??_color_read_Clear^0,w,c
  5765   00431A  6E0A               	movwf	color_read_Clear@tmp^0,c
  5766   00431C  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  5767                           
  5768                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5769   00431E  0E00               	movlw	0
  5770   004320  EC0F  F022         	call	_I2C_2_Master_Read
  5771   004324  6E07               	movwf	??_color_read_Clear^0,c
  5772   004326  5007               	movf	??_color_read_Clear^0,w,c
  5773   004328  6E09               	movwf	(??_color_read_Clear+2)^0,c
  5774   00432A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  5775   00432C  500A               	movf	color_read_Clear@tmp^0,w,c
  5776   00432E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  5777   004330  6E0A               	movwf	color_read_Clear@tmp^0,c
  5778   004332  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  5779   004334  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  5780   004336  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  5781                           
  5782                           ;color.c: 100:  I2C_2_Master_Stop();
  5783   004338  EC22  F023         	call	_I2C_2_Master_Stop	;wreg free
  5784   00433C                     
  5785                           ;color.c: 101:  return tmp;
  5786   00433C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  5787   004340  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5788   004344  0012               	return		;funcret
  5789   004346                     __end_of_color_read_Clear:
  5790                           	callstack 0
  5791                           
  5792 ;; *************** function _color_read_Blue *****************
  5793 ;; Defined at:
  5794 ;;		line 74 in file "color.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  tmp             2    9[COMRAM] unsigned int 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  2    4[COMRAM] unsigned int 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;Total ram usage:        7 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 2
  5815 ;; This function calls:
  5816 ;;		_I2C_2_Master_Read
  5817 ;;		_I2C_2_Master_RepStart
  5818 ;;		_I2C_2_Master_Start
  5819 ;;		_I2C_2_Master_Stop
  5820 ;;		_I2C_2_Master_Write
  5821 ;; This function is called by:
  5822 ;;		_color_cardCheck
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text27
  5827   004346                     __ptext27:
  5828                           	callstack 0
  5829   004346                     _color_read_Blue:
  5830                           	callstack 27
  5831   004346                     
  5832                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  5833   004346  EC27  F023         	call	_I2C_2_Master_Start	;wreg free
  5834                           
  5835                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  5836   00434A  0E52               	movlw	82
  5837   00434C  EC1C  F023         	call	_I2C_2_Master_Write
  5838                           
  5839                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  5840   004350  0EBA               	movlw	186
  5841   004352  EC1C  F023         	call	_I2C_2_Master_Write
  5842                           
  5843                           ;color.c: 80:  I2C_2_Master_RepStart();
  5844   004356  EC2C  F023         	call	_I2C_2_Master_RepStart	;wreg free
  5845                           
  5846                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  5847   00435A  0E53               	movlw	83
  5848   00435C  EC1C  F023         	call	_I2C_2_Master_Write
  5849                           
  5850                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  5851   004360  0E01               	movlw	1
  5852   004362  EC0F  F022         	call	_I2C_2_Master_Read
  5853   004366  6E07               	movwf	??_color_read_Blue^0,c
  5854   004368  5007               	movf	??_color_read_Blue^0,w,c
  5855   00436A  6E0A               	movwf	color_read_Blue@tmp^0,c
  5856   00436C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5857                           
  5858                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5859   00436E  0E00               	movlw	0
  5860   004370  EC0F  F022         	call	_I2C_2_Master_Read
  5861   004374  6E07               	movwf	??_color_read_Blue^0,c
  5862   004376  5007               	movf	??_color_read_Blue^0,w,c
  5863   004378  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5864   00437A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5865   00437C  500A               	movf	color_read_Blue@tmp^0,w,c
  5866   00437E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5867   004380  6E0A               	movwf	color_read_Blue@tmp^0,c
  5868   004382  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5869   004384  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5870   004386  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5871                           
  5872                           ;color.c: 84:  I2C_2_Master_Stop();
  5873   004388  EC22  F023         	call	_I2C_2_Master_Stop	;wreg free
  5874   00438C                     
  5875                           ;color.c: 85:  return tmp;
  5876   00438C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5877   004390  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5878   004394  0012               	return		;funcret
  5879   004396                     __end_of_color_read_Blue:
  5880                           	callstack 0
  5881                           
  5882 ;; *************** function _I2C_2_Master_Write *****************
  5883 ;; Defined at:
  5884 ;;		line 45 in file "i2c.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  data_byte       1    wreg     unsigned char 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  data_byte       1    1[COMRAM] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;Total ram usage:        1 bytes
  5903 ;; Hardware stack levels used: 1
  5904 ;; Hardware stack levels required when called: 1
  5905 ;; This function calls:
  5906 ;;		_I2C_2_Master_Idle
  5907 ;; This function is called by:
  5908 ;;		_color_writetoaddr
  5909 ;;		_color_read_Red
  5910 ;;		_color_read_Green
  5911 ;;		_color_read_Blue
  5912 ;;		_color_read_Clear
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text28
  5917   004638                     __ptext28:
  5918                           	callstack 0
  5919   004638                     _I2C_2_Master_Write:
  5920                           	callstack 27
  5921                           
  5922                           ;incstack = 0
  5923                           ;I2C_2_Master_Write@data_byte stored from wreg
  5924   004638  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5925   00463A                     
  5926                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5927   00463A  ECCA  F022         	call	_I2C_2_Master_Idle	;wreg free
  5928   00463E                     
  5929                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5930   00463E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5931   004642  0012               	return		;funcret
  5932   004644                     __end_of_I2C_2_Master_Write:
  5933                           	callstack 0
  5934                           
  5935 ;; *************** function _I2C_2_Master_Stop *****************
  5936 ;; Defined at:
  5937 ;;		line 39 in file "i2c.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;		None
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      void 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;Total ram usage:        0 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 1
  5958 ;; This function calls:
  5959 ;;		_I2C_2_Master_Idle
  5960 ;; This function is called by:
  5961 ;;		_color_writetoaddr
  5962 ;;		_color_read_Red
  5963 ;;		_color_read_Green
  5964 ;;		_color_read_Blue
  5965 ;;		_color_read_Clear
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text29
  5970   004644                     __ptext29:
  5971                           	callstack 0
  5972   004644                     _I2C_2_Master_Stop:
  5973                           	callstack 27
  5974   004644                     
  5975                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5976   004644  ECCA  F022         	call	_I2C_2_Master_Idle	;wreg free
  5977   004648                     
  5978                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5979   004648  010E               	movlb	14	; () banked
  5980   00464A  85DA               	bsf	218,2,b	;volatile
  5981   00464C                     
  5982                           ; BSR set to: 14
  5983   00464C  0012               	return		;funcret
  5984   00464E                     __end_of_I2C_2_Master_Stop:
  5985                           	callstack 0
  5986                           
  5987 ;; *************** function _I2C_2_Master_Start *****************
  5988 ;; Defined at:
  5989 ;;		line 27 in file "i2c.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;		None
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      void 
  5996 ;; Registers used:
  5997 ;;		wreg, status,2, status,0, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;Total ram usage:        0 bytes
  6008 ;; Hardware stack levels used: 1
  6009 ;; Hardware stack levels required when called: 1
  6010 ;; This function calls:
  6011 ;;		_I2C_2_Master_Idle
  6012 ;; This function is called by:
  6013 ;;		_color_writetoaddr
  6014 ;;		_color_read_Red
  6015 ;;		_color_read_Green
  6016 ;;		_color_read_Blue
  6017 ;;		_color_read_Clear
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text30
  6022   00464E                     __ptext30:
  6023                           	callstack 0
  6024   00464E                     _I2C_2_Master_Start:
  6025                           	callstack 27
  6026   00464E                     
  6027                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6028   00464E  ECCA  F022         	call	_I2C_2_Master_Idle	;wreg free
  6029   004652                     
  6030                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6031   004652  010E               	movlb	14	; () banked
  6032   004654  81DA               	bsf	218,0,b	;volatile
  6033   004656                     
  6034                           ; BSR set to: 14
  6035   004656  0012               	return		;funcret
  6036   004658                     __end_of_I2C_2_Master_Start:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _I2C_2_Master_RepStart *****************
  6040 ;; Defined at:
  6041 ;;		line 33 in file "i2c.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;		None
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      void 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;Total ram usage:        0 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 1
  6062 ;; This function calls:
  6063 ;;		_I2C_2_Master_Idle
  6064 ;; This function is called by:
  6065 ;;		_color_read_Red
  6066 ;;		_color_read_Green
  6067 ;;		_color_read_Blue
  6068 ;;		_color_read_Clear
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text31
  6073   004658                     __ptext31:
  6074                           	callstack 0
  6075   004658                     _I2C_2_Master_RepStart:
  6076                           	callstack 27
  6077   004658                     
  6078                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6079   004658  ECCA  F022         	call	_I2C_2_Master_Idle	;wreg free
  6080   00465C                     
  6081                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6082   00465C  010E               	movlb	14	; () banked
  6083   00465E  83DA               	bsf	218,1,b	;volatile
  6084   004660                     
  6085                           ; BSR set to: 14
  6086   004660  0012               	return		;funcret
  6087   004662                     __end_of_I2C_2_Master_RepStart:
  6088                           	callstack 0
  6089                           
  6090 ;; *************** function _I2C_2_Master_Read *****************
  6091 ;; Defined at:
  6092 ;;		line 51 in file "i2c.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;  ack             1    wreg     unsigned char 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  ack             1    2[COMRAM] unsigned char 
  6097 ;;  tmp             1    3[COMRAM] unsigned char 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  1    wreg      unsigned char 
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6111 ;;Total ram usage:        3 bytes
  6112 ;; Hardware stack levels used: 1
  6113 ;; Hardware stack levels required when called: 1
  6114 ;; This function calls:
  6115 ;;		_I2C_2_Master_Idle
  6116 ;; This function is called by:
  6117 ;;		_color_read_Red
  6118 ;;		_color_read_Green
  6119 ;;		_color_read_Blue
  6120 ;;		_color_read_Clear
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text32
  6125   00441E                     __ptext32:
  6126                           	callstack 0
  6127   00441E                     _I2C_2_Master_Read:
  6128                           	callstack 27
  6129                           
  6130                           ; BSR set to: 14
  6131                           ;incstack = 0
  6132                           ;I2C_2_Master_Read@ack stored from wreg
  6133   00441E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6134   004420                     
  6135                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6136   004420  ECCA  F022         	call	_I2C_2_Master_Idle	;wreg free
  6137   004424                     
  6138                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6139   004424  010E               	movlb	14	; () banked
  6140   004426  87DA               	bsf	218,3,b	;volatile
  6141                           
  6142                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6143   004428  ECCA  F022         	call	_I2C_2_Master_Idle	;wreg free
  6144   00442C                     
  6145                           ;i2c.c: 57:   tmp = SSP2BUF;
  6146   00442C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6147                           
  6148                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6149   004430  ECCA  F022         	call	_I2C_2_Master_Idle	;wreg free
  6150   004434                     
  6151                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6152   004434  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6153   004436  B4D8               	btfsc	status,2,c
  6154   004438  EF20  F022         	goto	u3571
  6155   00443C  EF24  F022         	goto	u3570
  6156   004440                     u3571:
  6157   004440  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6158   004442  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6159   004444  EF25  F022         	goto	u3588
  6160   004448                     u3570:
  6161   004448  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6162   00444A                     u3588:
  6163   00444A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6164   00444C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6165   00444E  010E               	movlb	14	; () banked
  6166   004450  51DA               	movf	218,w,b	;volatile
  6167   004452  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6168   004454  0BDF               	andlw	-33
  6169   004456  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6170   004458  6FDA               	movwf	218,b	;volatile
  6171   00445A                     
  6172                           ; BSR set to: 14
  6173                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6174   00445A  89DA               	bsf	218,4,b	;volatile
  6175   00445C                     
  6176                           ; BSR set to: 14
  6177                           ;i2c.c: 61:   return tmp;
  6178   00445C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6179   00445E                     
  6180                           ; BSR set to: 14
  6181   00445E  0012               	return		;funcret
  6182   004460                     __end_of_I2C_2_Master_Read:
  6183                           	callstack 0
  6184                           
  6185 ;; *************** function _I2C_2_Master_Idle *****************
  6186 ;; Defined at:
  6187 ;;		line 22 in file "i2c.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg, status,2, status,0
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;Total ram usage:        1 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_I2C_2_Master_Start
  6211 ;;		_I2C_2_Master_RepStart
  6212 ;;		_I2C_2_Master_Stop
  6213 ;;		_I2C_2_Master_Write
  6214 ;;		_I2C_2_Master_Read
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text33
  6219   004594                     __ptext33:
  6220                           	callstack 0
  6221   004594                     _I2C_2_Master_Idle:
  6222                           	callstack 27
  6223   004594                     l385:
  6224   004594  010E               	movlb	14	; () banked
  6225   004596  B5D8               	btfsc	216,2,b	;volatile
  6226   004598  EFD0  F022         	goto	u2831
  6227   00459C  EFD2  F022         	goto	u2830
  6228   0045A0                     u2831:
  6229   0045A0  EFCA  F022         	goto	l385
  6230   0045A4                     u2830:
  6231   0045A4                     
  6232                           ; BSR set to: 14
  6233   0045A4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6234   0045A8  0E1F               	movlw	31
  6235   0045AA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6236   0045AC  A4D8               	btfss	status,2,c
  6237   0045AE  EFDB  F022         	goto	u2841
  6238   0045B2  EFDD  F022         	goto	u2840
  6239   0045B6                     u2841:
  6240   0045B6  EFCA  F022         	goto	l385
  6241   0045BA                     u2840:
  6242   0045BA                     
  6243                           ; BSR set to: 14
  6244   0045BA  0012               	return		;funcret
  6245   0045BC                     __end_of_I2C_2_Master_Idle:
  6246                           	callstack 0
  6247                           
  6248 ;; *************** function _RGB_to_HSV *****************
  6249 ;; Defined at:
  6250 ;;		line 125 in file "color.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  R               4   10[BANK0 ] float 
  6253 ;;  G               4   14[BANK0 ] float 
  6254 ;;  B               4   18[BANK0 ] float 
  6255 ;;  C               4   22[BANK0 ] float 
  6256 ;;  H               1   26[BANK0 ] PTR float 
  6257 ;;		 -> color_cardCheck@H(4), 
  6258 ;;  S               1   27[BANK0 ] PTR float 
  6259 ;;		 -> color_cardCheck@S(4), 
  6260 ;;  V               1   28[BANK0 ] PTR float 
  6261 ;;		 -> color_cardCheck@V(4), 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  b               4   93[BANK0 ] float 
  6264 ;;  g               4   89[BANK0 ] float 
  6265 ;;  r               4   85[BANK0 ] float 
  6266 ;;  maxRGB          4   81[BANK0 ] float 
  6267 ;;  deltaRGB        4   77[BANK0 ] float 
  6268 ;;  H_temp          4   73[BANK0 ] float 
  6269 ;;  minRGB          4   57[BANK0 ] float 
  6270 ;;  c_norm          4   29[BANK0 ] float 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6280 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6281 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;Total ram usage:       87 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; Hardware stack levels required when called: 3
  6287 ;; This function calls:
  6288 ;;		___fladd
  6289 ;;		___fldiv
  6290 ;;		___fleq
  6291 ;;		___flge
  6292 ;;		___flmul
  6293 ;;		___flsub
  6294 ;;		_custom_floatmodulo
  6295 ;; This function is called by:
  6296 ;;		_color_cardCheck
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text34
  6301   001840                     __ptext34:
  6302                           	callstack 0
  6303   001840                     _RGB_to_HSV:
  6304                           	callstack 26
  6305   001840                     
  6306                           ;color.c: 128:     float r = R/65535.0;
  6307   001840  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  6308   001844  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  6309   001848  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  6310   00184C  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  6311   001850  0E00               	movlw	0
  6312   001852  6E26               	movwf	___fldiv@a^0,c
  6313   001854  0EFF               	movlw	255
  6314   001856  6E27               	movwf	(___fldiv@a+1)^0,c
  6315   001858  0E7F               	movlw	127
  6316   00185A  6E28               	movwf	(___fldiv@a+2)^0,c
  6317   00185C  0E47               	movlw	71
  6318   00185E  6E29               	movwf	(___fldiv@a+3)^0,c
  6319   001860  EC76  F014         	call	___fldiv	;wreg free
  6320   001864  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  6321   001868  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  6322   00186C  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  6323   001870  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  6324                           
  6325                           ;color.c: 129:     float g = G/65535.0;
  6326   001874  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  6327   001878  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  6328   00187C  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  6329   001880  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  6330   001884  0E00               	movlw	0
  6331   001886  6E26               	movwf	___fldiv@a^0,c
  6332   001888  0EFF               	movlw	255
  6333   00188A  6E27               	movwf	(___fldiv@a+1)^0,c
  6334   00188C  0E7F               	movlw	127
  6335   00188E  6E28               	movwf	(___fldiv@a+2)^0,c
  6336   001890  0E47               	movlw	71
  6337   001892  6E29               	movwf	(___fldiv@a+3)^0,c
  6338   001894  EC76  F014         	call	___fldiv	;wreg free
  6339   001898  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  6340   00189C  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  6341   0018A0  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  6342   0018A4  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  6343                           
  6344                           ;color.c: 130:     float b = B/65535.0;
  6345   0018A8  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  6346   0018AC  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  6347   0018B0  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  6348   0018B4  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  6349   0018B8  0E00               	movlw	0
  6350   0018BA  6E26               	movwf	___fldiv@a^0,c
  6351   0018BC  0EFF               	movlw	255
  6352   0018BE  6E27               	movwf	(___fldiv@a+1)^0,c
  6353   0018C0  0E7F               	movlw	127
  6354   0018C2  6E28               	movwf	(___fldiv@a+2)^0,c
  6355   0018C4  0E47               	movlw	71
  6356   0018C6  6E29               	movwf	(___fldiv@a+3)^0,c
  6357   0018C8  EC76  F014         	call	___fldiv	;wreg free
  6358   0018CC  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  6359   0018D0  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  6360   0018D4  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  6361   0018D8  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  6362                           
  6363                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  6364   0018DC  0E00               	movlw	0
  6365   0018DE  6E26               	movwf	___fldiv@a^0,c
  6366   0018E0  0EFF               	movlw	255
  6367   0018E2  6E27               	movwf	(___fldiv@a+1)^0,c
  6368   0018E4  0E7F               	movlw	127
  6369   0018E6  6E28               	movwf	(___fldiv@a+2)^0,c
  6370   0018E8  0E47               	movlw	71
  6371   0018EA  6E29               	movwf	(___fldiv@a+3)^0,c
  6372   0018EC  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  6373   0018F0  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  6374   0018F4  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  6375   0018F8  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  6376   0018FC  EC76  F014         	call	___fldiv	;wreg free
  6377   001900  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2676
  6378   001904  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2676+1
  6379   001908  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2676+2
  6380   00190C  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2676+3
  6381                           
  6382                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  6383   001910  0E00               	movlw	0
  6384   001912  6E22               	movwf	___fldiv@b^0,c
  6385   001914  0E00               	movlw	0
  6386   001916  6E23               	movwf	(___fldiv@b+1)^0,c
  6387   001918  0E80               	movlw	128
  6388   00191A  6E24               	movwf	(___fldiv@b+2)^0,c
  6389   00191C  0E3F               	movlw	63
  6390   00191E  6E25               	movwf	(___fldiv@b+3)^0,c
  6391   001920  C081  F026         	movff	_RGB_to_HSV$2676,___fldiv@a
  6392   001924  C082  F027         	movff	_RGB_to_HSV$2676+1,___fldiv@a+1
  6393   001928  C083  F028         	movff	_RGB_to_HSV$2676+2,___fldiv@a+2
  6394   00192C  C084  F029         	movff	_RGB_to_HSV$2676+3,___fldiv@a+3
  6395   001930  EC76  F014         	call	___fldiv	;wreg free
  6396   001934  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  6397   001938  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  6398   00193C  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  6399   001940  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  6400                           
  6401                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  6402   001944  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  6403   001948  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6404   00194C  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6405   001950  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6406   001954  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  6407   001958  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6408   00195C  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6409   001960  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6410   001964  EC86  F01E         	call	___flge	;wreg free
  6411   001968  A0D8               	btfss	status,0,c
  6412   00196A  EFB9  F00C         	goto	u3701
  6413   00196E  EFBB  F00C         	goto	u3700
  6414   001972                     u3701:
  6415   001972  EFF0  F00C         	goto	l3631
  6416   001976                     u3700:
  6417   001976  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  6418   00197A  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6419   00197E  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6420   001982  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6421   001986  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  6422   00198A  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6423   00198E  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6424   001992  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6425   001996  EC86  F01E         	call	___flge	;wreg free
  6426   00199A  A0D8               	btfss	status,0,c
  6427   00199C  EFD2  F00C         	goto	u3711
  6428   0019A0  EFD4  F00C         	goto	u3710
  6429   0019A4                     u3711:
  6430   0019A4  EFDE  F00C         	goto	l58
  6431   0019A8                     u3710:
  6432   0019A8  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  6433   0019AC  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  6434   0019B0  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  6435   0019B4  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  6436   0019B8  EFE6  F00C         	goto	l60
  6437   0019BC                     l58:
  6438   0019BC  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  6439   0019C0  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  6440   0019C4  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  6441   0019C8  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  6442   0019CC                     l60:
  6443   0019CC  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  6444   0019D0  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  6445   0019D4  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  6446   0019D8  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  6447   0019DC  EF23  F00D         	goto	l3635
  6448   0019E0                     l3631:
  6449   0019E0  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  6450   0019E4  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  6451   0019E8  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  6452   0019EC  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  6453   0019F0  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  6454   0019F4  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  6455   0019F8  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  6456   0019FC  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  6457   001A00  EC86  F01E         	call	___flge	;wreg free
  6458   001A04  A0D8               	btfss	status,0,c
  6459   001A06  EF07  F00D         	goto	u3721
  6460   001A0A  EF09  F00D         	goto	u3720
  6461   001A0E                     u3721:
  6462   001A0E  EF13  F00D         	goto	l62
  6463   001A12                     u3720:
  6464   001A12  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  6465   001A16  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  6466   001A1A  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  6467   001A1E  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  6468   001A22  EF1B  F00D         	goto	l64
  6469   001A26                     l62:
  6470   001A26  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  6471   001A2A  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  6472   001A2E  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  6473   001A32  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  6474   001A36                     l64:
  6475   001A36  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  6476   001A3A  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  6477   001A3E  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  6478   001A42  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  6479   001A46                     l3635:
  6480                           
  6481                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  6482   001A46  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  6483   001A4A  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6484   001A4E  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6485   001A52  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6486   001A56  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  6487   001A5A  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  6488   001A5E  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  6489   001A62  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  6490   001A66  EC86  F01E         	call	___flge	;wreg free
  6491   001A6A  A0D8               	btfss	status,0,c
  6492   001A6C  EF3A  F00D         	goto	u3731
  6493   001A70  EF3C  F00D         	goto	u3730
  6494   001A74                     u3731:
  6495   001A74  EF71  F00D         	goto	l3641
  6496   001A78                     u3730:
  6497   001A78  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  6498   001A7C  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  6499   001A80  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  6500   001A84  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  6501   001A88  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  6502   001A8C  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6503   001A90  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6504   001A94  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6505   001A98  EC86  F01E         	call	___flge	;wreg free
  6506   001A9C  A0D8               	btfss	status,0,c
  6507   001A9E  EF53  F00D         	goto	u3741
  6508   001AA2  EF55  F00D         	goto	u3740
  6509   001AA6                     u3741:
  6510   001AA6  EF5F  F00D         	goto	l70
  6511   001AAA                     u3740:
  6512   001AAA  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  6513   001AAE  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  6514   001AB2  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  6515   001AB6  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  6516   001ABA  EF67  F00D         	goto	l72
  6517   001ABE                     l70:
  6518   001ABE  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  6519   001AC2  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  6520   001AC6  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  6521   001ACA  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  6522   001ACE                     l72:
  6523   001ACE  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  6524   001AD2  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  6525   001AD6  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  6526   001ADA  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  6527   001ADE  EFA4  F00D         	goto	l3645
  6528   001AE2                     l3641:
  6529   001AE2  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  6530   001AE6  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  6531   001AEA  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  6532   001AEE  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  6533   001AF2  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  6534   001AF6  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  6535   001AFA  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  6536   001AFE  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  6537   001B02  EC86  F01E         	call	___flge	;wreg free
  6538   001B06  A0D8               	btfss	status,0,c
  6539   001B08  EF88  F00D         	goto	u3751
  6540   001B0C  EF8A  F00D         	goto	u3750
  6541   001B10                     u3751:
  6542   001B10  EF94  F00D         	goto	l74
  6543   001B14                     u3750:
  6544   001B14  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  6545   001B18  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  6546   001B1C  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  6547   001B20  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  6548   001B24  EF9C  F00D         	goto	l76
  6549   001B28                     l74:
  6550   001B28  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  6551   001B2C  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  6552   001B30  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  6553   001B34  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  6554   001B38                     l76:
  6555   001B38  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  6556   001B3C  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  6557   001B40  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  6558   001B44  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  6559   001B48                     l3645:
  6560                           
  6561                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  6562   001B48  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  6563   001B4C  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  6564   001B50  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  6565   001B54  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  6566   001B58  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  6567   001B5C  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  6568   001B60  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  6569   001B64  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  6570   001B68  ECCB  F021         	call	___flsub	;wreg free
  6571   001B6C  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  6572   001B70  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  6573   001B74  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  6574   001B78  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  6575                           
  6576                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  6577   001B7C  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  6578   001B80  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  6579   001B84  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  6580   001B88  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  6581   001B8C  0E00               	movlw	0
  6582   001B8E  6E05               	movwf	___fleq@ff2^0,c
  6583   001B90  0E00               	movlw	0
  6584   001B92  6E06               	movwf	(___fleq@ff2+1)^0,c
  6585   001B94  0E00               	movlw	0
  6586   001B96  6E07               	movwf	(___fleq@ff2+2)^0,c
  6587   001B98  0E00               	movlw	0
  6588   001B9A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6589   001B9C  EC20  F020         	call	___fleq	;wreg free
  6590   001BA0  A0D8               	btfss	status,0,c
  6591   001BA2  EFD5  F00D         	goto	u3761
  6592   001BA6  EFD7  F00D         	goto	u3760
  6593   001BAA                     u3761:
  6594   001BAA  EFE2  F00D         	goto	l3649
  6595   001BAE                     u3760:
  6596   001BAE  0E00               	movlw	0
  6597   001BB0  0100               	movlb	0	; () banked
  6598   001BB2  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  6599   001BB4  0E00               	movlw	0
  6600   001BB6  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  6601   001BB8  0E00               	movlw	0
  6602   001BBA  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  6603   001BBC  0E00               	movlw	0
  6604   001BBE  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  6605   001BC0  EF43  F00F         	goto	l3669
  6606   001BC4                     l3649:
  6607   001BC4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6608   001BC8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6609   001BCC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6610   001BD0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6611   001BD4  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  6612   001BD8  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  6613   001BDC  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  6614   001BE0  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  6615   001BE4  EC20  F020         	call	___fleq	;wreg free
  6616   001BE8  A0D8               	btfss	status,0,c
  6617   001BEA  EFF9  F00D         	goto	u3771
  6618   001BEE  EFFB  F00D         	goto	u3770
  6619   001BF2                     u3771:
  6620   001BF2  EF5D  F00E         	goto	l3657
  6621   001BF6                     u3770:
  6622   001BF6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6623   001BFA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6624   001BFE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6625   001C02  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6626   001C06  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  6627   001C0A  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  6628   001C0E  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  6629   001C12  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  6630   001C16  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  6631   001C1A  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  6632   001C1E  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  6633   001C22  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  6634   001C26  ECCB  F021         	call	___flsub	;wreg free
  6635   001C2A  C01A  F022         	movff	?___flsub,___fldiv@b
  6636   001C2E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6637   001C32  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6638   001C36  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6639   001C3A  EC76  F014         	call	___fldiv	;wreg free
  6640   001C3E  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2677
  6641   001C42  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2677+1
  6642   001C46  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2677+2
  6643   001C4A  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2677+3
  6644   001C4E  0E00               	movlw	0
  6645   001C50  6E58               	movwf	custom_floatmodulo@y^0,c
  6646   001C52  0E00               	movlw	0
  6647   001C54  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  6648   001C56  0EC0               	movlw	192
  6649   001C58  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  6650   001C5A  0E40               	movlw	64
  6651   001C5C  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  6652   001C5E  C085  F054         	movff	_RGB_to_HSV$2677,custom_floatmodulo@x
  6653   001C62  C086  F055         	movff	_RGB_to_HSV$2677+1,custom_floatmodulo@x+1
  6654   001C66  C087  F056         	movff	_RGB_to_HSV$2677+2,custom_floatmodulo@x+2
  6655   001C6A  C088  F057         	movff	_RGB_to_HSV$2677+3,custom_floatmodulo@x+3
  6656   001C6E  EC77  F01D         	call	_custom_floatmodulo	;wreg free
  6657   001C72  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2678
  6658   001C76  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2678+1
  6659   001C7A  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2678+2
  6660   001C7E  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2678+3
  6661   001C82  C089  F03B         	movff	_RGB_to_HSV$2678,___flmul@b
  6662   001C86  C08A  F03C         	movff	_RGB_to_HSV$2678+1,___flmul@b+1
  6663   001C8A  C08B  F03D         	movff	_RGB_to_HSV$2678+2,___flmul@b+2
  6664   001C8E  C08C  F03E         	movff	_RGB_to_HSV$2678+3,___flmul@b+3
  6665   001C92  0E00               	movlw	0
  6666   001C94  6E3F               	movwf	___flmul@a^0,c
  6667   001C96  0E00               	movlw	0
  6668   001C98  6E40               	movwf	(___flmul@a+1)^0,c
  6669   001C9A  0E70               	movlw	112
  6670   001C9C  6E41               	movwf	(___flmul@a+2)^0,c
  6671   001C9E  0E42               	movlw	66
  6672   001CA0  6E42               	movwf	(___flmul@a+3)^0,c
  6673   001CA2  EC61  F012         	call	___flmul	;wreg free
  6674   001CA6  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6675   001CAA  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6676   001CAE  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6677   001CB2  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6678   001CB6  EF43  F00F         	goto	l3669
  6679   001CBA                     l3657:
  6680   001CBA  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6681   001CBE  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6682   001CC2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6683   001CC6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6684   001CCA  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  6685   001CCE  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  6686   001CD2  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  6687   001CD6  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  6688   001CDA  EC20  F020         	call	___fleq	;wreg free
  6689   001CDE  A0D8               	btfss	status,0,c
  6690   001CE0  EF74  F00E         	goto	u3781
  6691   001CE4  EF76  F00E         	goto	u3780
  6692   001CE8                     u3781:
  6693   001CE8  EFD0  F00E         	goto	l3663
  6694   001CEC                     u3780:
  6695   001CEC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6696   001CF0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6697   001CF4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6698   001CF8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6699   001CFC  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  6700   001D00  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  6701   001D04  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  6702   001D08  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  6703   001D0C  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  6704   001D10  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  6705   001D14  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  6706   001D18  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  6707   001D1C  ECCB  F021         	call	___flsub	;wreg free
  6708   001D20  C01A  F022         	movff	?___flsub,___fldiv@b
  6709   001D24  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6710   001D28  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6711   001D2C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6712   001D30  EC76  F014         	call	___fldiv	;wreg free
  6713   001D34  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2679
  6714   001D38  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2679+1
  6715   001D3C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2679+2
  6716   001D40  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2679+3
  6717   001D44  0E00               	movlw	0
  6718   001D46  6E05               	movwf	___fladd@a^0,c
  6719   001D48  0E00               	movlw	0
  6720   001D4A  6E06               	movwf	(___fladd@a+1)^0,c
  6721   001D4C  0E00               	movlw	0
  6722   001D4E  6E07               	movwf	(___fladd@a+2)^0,c
  6723   001D50  0E40               	movlw	64
  6724   001D52  6E08               	movwf	(___fladd@a+3)^0,c
  6725   001D54  C0A5  F001         	movff	_RGB_to_HSV$2679,___fladd@b
  6726   001D58  C0A6  F002         	movff	_RGB_to_HSV$2679+1,___fladd@b+1
  6727   001D5C  C0A7  F003         	movff	_RGB_to_HSV$2679+2,___fladd@b+2
  6728   001D60  C0A8  F004         	movff	_RGB_to_HSV$2679+3,___fladd@b+3
  6729   001D64  EC01  F010         	call	___fladd	;wreg free
  6730   001D68  C001  F03B         	movff	?___fladd,___flmul@b
  6731   001D6C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  6732   001D70  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  6733   001D74  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  6734   001D78  0E00               	movlw	0
  6735   001D7A  6E3F               	movwf	___flmul@a^0,c
  6736   001D7C  0E00               	movlw	0
  6737   001D7E  6E40               	movwf	(___flmul@a+1)^0,c
  6738   001D80  0E70               	movlw	112
  6739   001D82  6E41               	movwf	(___flmul@a+2)^0,c
  6740   001D84  0E42               	movlw	66
  6741   001D86  6E42               	movwf	(___flmul@a+3)^0,c
  6742   001D88  EC61  F012         	call	___flmul	;wreg free
  6743   001D8C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6744   001D90  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6745   001D94  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6746   001D98  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6747   001D9C  EF43  F00F         	goto	l3669
  6748   001DA0                     l3663:
  6749   001DA0  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6750   001DA4  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6751   001DA8  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6752   001DAC  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6753   001DB0  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  6754   001DB4  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  6755   001DB8  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  6756   001DBC  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  6757   001DC0  EC20  F020         	call	___fleq	;wreg free
  6758   001DC4  A0D8               	btfss	status,0,c
  6759   001DC6  EFE7  F00E         	goto	u3791
  6760   001DCA  EFE9  F00E         	goto	u3790
  6761   001DCE                     u3791:
  6762   001DCE  EF43  F00F         	goto	l80
  6763   001DD2                     u3790:
  6764   001DD2  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  6765   001DD6  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  6766   001DDA  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  6767   001DDE  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  6768   001DE2  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  6769   001DE6  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  6770   001DEA  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  6771   001DEE  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  6772   001DF2  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  6773   001DF6  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  6774   001DFA  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  6775   001DFE  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  6776   001E02  ECCB  F021         	call	___flsub	;wreg free
  6777   001E06  C01A  F022         	movff	?___flsub,___fldiv@b
  6778   001E0A  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  6779   001E0E  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  6780   001E12  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  6781   001E16  EC76  F014         	call	___fldiv	;wreg free
  6782   001E1A  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2679
  6783   001E1E  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2679+1
  6784   001E22  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2679+2
  6785   001E26  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2679+3
  6786   001E2A  0E00               	movlw	0
  6787   001E2C  6E05               	movwf	___fladd@a^0,c
  6788   001E2E  0E00               	movlw	0
  6789   001E30  6E06               	movwf	(___fladd@a+1)^0,c
  6790   001E32  0E80               	movlw	128
  6791   001E34  6E07               	movwf	(___fladd@a+2)^0,c
  6792   001E36  0E40               	movlw	64
  6793   001E38  6E08               	movwf	(___fladd@a+3)^0,c
  6794   001E3A  C0A5  F001         	movff	_RGB_to_HSV$2679,___fladd@b
  6795   001E3E  C0A6  F002         	movff	_RGB_to_HSV$2679+1,___fladd@b+1
  6796   001E42  C0A7  F003         	movff	_RGB_to_HSV$2679+2,___fladd@b+2
  6797   001E46  C0A8  F004         	movff	_RGB_to_HSV$2679+3,___fladd@b+3
  6798   001E4A  EC01  F010         	call	___fladd	;wreg free
  6799   001E4E  C001  F03B         	movff	?___fladd,___flmul@b
  6800   001E52  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  6801   001E56  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  6802   001E5A  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  6803   001E5E  0E00               	movlw	0
  6804   001E60  6E3F               	movwf	___flmul@a^0,c
  6805   001E62  0E00               	movlw	0
  6806   001E64  6E40               	movwf	(___flmul@a+1)^0,c
  6807   001E66  0E70               	movlw	112
  6808   001E68  6E41               	movwf	(___flmul@a+2)^0,c
  6809   001E6A  0E42               	movlw	66
  6810   001E6C  6E42               	movwf	(___flmul@a+3)^0,c
  6811   001E6E  EC61  F012         	call	___flmul	;wreg free
  6812   001E72  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  6813   001E76  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  6814   001E7A  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  6815   001E7E  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  6816   001E82  EF43  F00F         	goto	l3669
  6817   001E86                     l80:
  6818   001E86                     l3669:
  6819                           
  6820                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  6821   001E86  0100               	movlb	0	; () banked
  6822   001E88  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  6823   001E8A  EF4B  F00F         	goto	u3800
  6824   001E8E  EF49  F00F         	goto	u3801
  6825   001E92                     u3801:
  6826   001E92  EF65  F00F         	goto	l3673
  6827   001E96                     u3800:
  6828   001E96                     
  6829                           ; BSR set to: 0
  6830   001E96  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  6831   001E9A  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  6832   001E9E  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  6833   001EA2  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  6834   001EA6  0E00               	movlw	0
  6835   001EA8  6E05               	movwf	___fladd@a^0,c
  6836   001EAA  0E00               	movlw	0
  6837   001EAC  6E06               	movwf	(___fladd@a+1)^0,c
  6838   001EAE  0EB4               	movlw	180
  6839   001EB0  6E07               	movwf	(___fladd@a+2)^0,c
  6840   001EB2  0E43               	movlw	67
  6841   001EB4  6E08               	movwf	(___fladd@a+3)^0,c
  6842   001EB6  EC01  F010         	call	___fladd	;wreg free
  6843   001EBA  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  6844   001EBE  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  6845   001EC2  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  6846   001EC6  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  6847   001ECA                     l3673:
  6848                           
  6849                           ;color.c: 158:     *H = H_temp;
  6850   001ECA  0100               	movlb	0	; () banked
  6851   001ECC  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  6852   001ECE  6ED9               	movwf	fsr2l,c
  6853   001ED0  6ADA               	clrf	fsr2h,c
  6854   001ED2  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  6855   001ED6  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  6856   001EDA  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  6857   001EDE  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  6858   001EE2                     
  6859                           ; BSR set to: 0
  6860                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  6861   001EE2  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  6862   001EE6  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  6863   001EEA  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  6864   001EEE  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  6865   001EF2  0E00               	movlw	0
  6866   001EF4  6E05               	movwf	___fleq@ff2^0,c
  6867   001EF6  0E00               	movlw	0
  6868   001EF8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6869   001EFA  0E00               	movlw	0
  6870   001EFC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6871   001EFE  0E00               	movlw	0
  6872   001F00  6E08               	movwf	(___fleq@ff2+3)^0,c
  6873   001F02  EC20  F020         	call	___fleq	;wreg free
  6874   001F06  A0D8               	btfss	status,0,c
  6875   001F08  EF88  F00F         	goto	u3811
  6876   001F0C  EF8A  F00F         	goto	u3810
  6877   001F10                     u3811:
  6878   001F10  EF98  F00F         	goto	l3679
  6879   001F14                     u3810:
  6880   001F14  0100               	movlb	0	; () banked
  6881   001F16  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6882   001F18  6ED9               	movwf	fsr2l,c
  6883   001F1A  6ADA               	clrf	fsr2h,c
  6884   001F1C  0E00               	movlw	0
  6885   001F1E  6EDE               	movwf	postinc2,c
  6886   001F20  0E00               	movlw	0
  6887   001F22  6EDE               	movwf	postinc2,c
  6888   001F24  0E00               	movlw	0
  6889   001F26  6EDE               	movwf	postinc2,c
  6890   001F28  0E00               	movlw	0
  6891   001F2A  6EDD               	movwf	postdec2,c
  6892   001F2C  EFC8  F00F         	goto	l3681
  6893   001F30                     l3679:
  6894                           
  6895                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  6896   001F30  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  6897   001F34  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  6898   001F38  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  6899   001F3C  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  6900   001F40  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  6901   001F44  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  6902   001F48  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  6903   001F4C  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  6904   001F50  EC76  F014         	call	___fldiv	;wreg free
  6905   001F54  C022  F03B         	movff	?___fldiv,___flmul@b
  6906   001F58  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  6907   001F5C  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  6908   001F60  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  6909   001F64  0E00               	movlw	0
  6910   001F66  6E3F               	movwf	___flmul@a^0,c
  6911   001F68  0E00               	movlw	0
  6912   001F6A  6E40               	movwf	(___flmul@a+1)^0,c
  6913   001F6C  0EC8               	movlw	200
  6914   001F6E  6E41               	movwf	(___flmul@a+2)^0,c
  6915   001F70  0E42               	movlw	66
  6916   001F72  6E42               	movwf	(___flmul@a+3)^0,c
  6917   001F74  EC61  F012         	call	___flmul	;wreg free
  6918   001F78  0100               	movlb	0	; () banked
  6919   001F7A  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  6920   001F7C  6ED9               	movwf	fsr2l,c
  6921   001F7E  6ADA               	clrf	fsr2h,c
  6922   001F80  C03B  FFDE         	movff	?___flmul,postinc2
  6923   001F84  C03C  FFDE         	movff	?___flmul+1,postinc2
  6924   001F88  C03D  FFDE         	movff	?___flmul+2,postinc2
  6925   001F8C  C03E  FFDE         	movff	?___flmul+3,postinc2
  6926   001F90                     l3681:
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  6930   001F90  0E00               	movlw	0
  6931   001F92  6E3F               	movwf	___flmul@a^0,c
  6932   001F94  0E00               	movlw	0
  6933   001F96  6E40               	movwf	(___flmul@a+1)^0,c
  6934   001F98  0EC8               	movlw	200
  6935   001F9A  6E41               	movwf	(___flmul@a+2)^0,c
  6936   001F9C  0E42               	movlw	66
  6937   001F9E  6E42               	movwf	(___flmul@a+3)^0,c
  6938   001FA0  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  6939   001FA4  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  6940   001FA8  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  6941   001FAC  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  6942   001FB0  EC61  F012         	call	___flmul	;wreg free
  6943   001FB4  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2680
  6944   001FB8  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2680+1
  6945   001FBC  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2680+2
  6946   001FC0  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2680+3
  6947   001FC4                     
  6948                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  6949   001FC4  C08D  F03B         	movff	_RGB_to_HSV$2680,___flmul@b
  6950   001FC8  C08E  F03C         	movff	_RGB_to_HSV$2680+1,___flmul@b+1
  6951   001FCC  C08F  F03D         	movff	_RGB_to_HSV$2680+2,___flmul@b+2
  6952   001FD0  C090  F03E         	movff	_RGB_to_HSV$2680+3,___flmul@b+3
  6953   001FD4  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  6954   001FD8  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  6955   001FDC  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  6956   001FE0  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  6957   001FE4  EC61  F012         	call	___flmul	;wreg free
  6958   001FE8  0100               	movlb	0	; () banked
  6959   001FEA  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  6960   001FEC  6ED9               	movwf	fsr2l,c
  6961   001FEE  6ADA               	clrf	fsr2h,c
  6962   001FF0  C03B  FFDE         	movff	?___flmul,postinc2
  6963   001FF4  C03C  FFDE         	movff	?___flmul+1,postinc2
  6964   001FF8  C03D  FFDE         	movff	?___flmul+2,postinc2
  6965   001FFC  C03E  FFDE         	movff	?___flmul+3,postinc2
  6966   002000                     
  6967                           ; BSR set to: 0
  6968   002000  0012               	return		;funcret
  6969   002002                     __end_of_RGB_to_HSV:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _custom_floatmodulo *****************
  6973 ;; Defined at:
  6974 ;;		line 106 in file "color.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  x               4   83[COMRAM] float 
  6977 ;;  y               4   87[COMRAM] float 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  remainder       4    4[BANK0 ] float 
  6980 ;;  quotient        4    0[BANK0 ] float 
  6981 ;;  intPart         2    8[BANK0 ] int 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  4   83[COMRAM] float 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;Total ram usage:       18 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 2
  6998 ;; This function calls:
  6999 ;;		___fldiv
  7000 ;;		___fleq
  7001 ;;		___flmul
  7002 ;;		___flsub
  7003 ;;		___fltol
  7004 ;;		___xxtofl
  7005 ;; This function is called by:
  7006 ;;		_RGB_to_HSV
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text35
  7011   003AEE                     __ptext35:
  7012                           	callstack 0
  7013   003AEE                     _custom_floatmodulo:
  7014                           	callstack 26
  7015   003AEE                     
  7016                           ;color.c: 108:     if (y == 0.0) {
  7017   003AEE  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  7018   003AF2  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  7019   003AF6  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  7020   003AFA  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  7021   003AFE  0E00               	movlw	0
  7022   003B00  6E05               	movwf	___fleq@ff2^0,c
  7023   003B02  0E00               	movlw	0
  7024   003B04  6E06               	movwf	(___fleq@ff2+1)^0,c
  7025   003B06  0E00               	movlw	0
  7026   003B08  6E07               	movwf	(___fleq@ff2+2)^0,c
  7027   003B0A  0E00               	movlw	0
  7028   003B0C  6E08               	movwf	(___fleq@ff2+3)^0,c
  7029   003B0E  EC20  F020         	call	___fleq	;wreg free
  7030   003B12  A0D8               	btfss	status,0,c
  7031   003B14  EF8E  F01D         	goto	u3591
  7032   003B18  EF90  F01D         	goto	u3590
  7033   003B1C                     u3591:
  7034   003B1C  EF9A  F01D         	goto	l3499
  7035   003B20                     u3590:
  7036   003B20                     
  7037                           ;color.c: 109:         return 0.0;
  7038   003B20  0E00               	movlw	0
  7039   003B22  6E54               	movwf	?_custom_floatmodulo^0,c
  7040   003B24  0E00               	movlw	0
  7041   003B26  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  7042   003B28  0E00               	movlw	0
  7043   003B2A  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  7044   003B2C  0E00               	movlw	0
  7045   003B2E  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  7046   003B30  EF02  F01E         	goto	l50
  7047   003B34                     l3499:
  7048                           
  7049                           ;color.c: 113:     float quotient = x / y;
  7050   003B34  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  7051   003B38  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  7052   003B3C  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  7053   003B40  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  7054   003B44  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  7055   003B48  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  7056   003B4C  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  7057   003B50  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  7058   003B54  EC76  F014         	call	___fldiv	;wreg free
  7059   003B58  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  7060   003B5C  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  7061   003B60  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  7062   003B64  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  7063                           
  7064                           ;color.c: 116:     int intPart = (int)quotient;
  7065   003B68  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  7066   003B6C  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  7067   003B70  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  7068   003B74  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  7069   003B78  EC03  F01E         	call	___fltol	;wreg free
  7070   003B7C  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  7071   003B80  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  7072   003B84                     
  7073                           ;color.c: 119:     float remainder = x - intPart * y;
  7074   003B84  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  7075   003B88  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  7076   003B8C  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  7077   003B90  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  7078   003B94  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  7079   003B98  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  7080   003B9C  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  7081   003BA0  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  7082   003BA4  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  7083   003BA8  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  7084   003BAC  0E00               	movlw	0
  7085   003BAE  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  7086   003BB0  0EFF               	movlw	-1
  7087   003BB2  6E0E               	movwf	(___xxtofl@val+2)^0,c
  7088   003BB4  6E0F               	movwf	(___xxtofl@val+3)^0,c
  7089   003BB6  0E01               	movlw	1
  7090   003BB8  ECF6  F017         	call	___xxtofl
  7091   003BBC  C00C  F03B         	movff	?___xxtofl,___flmul@b
  7092   003BC0  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  7093   003BC4  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  7094   003BC8  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  7095   003BCC  EC61  F012         	call	___flmul	;wreg free
  7096   003BD0  C03B  F01E         	movff	?___flmul,___flsub@a
  7097   003BD4  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  7098   003BD8  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  7099   003BDC  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  7100   003BE0  ECCB  F021         	call	___flsub	;wreg free
  7101   003BE4  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  7102   003BE8  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  7103   003BEC  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  7104   003BF0  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  7105   003BF4                     
  7106                           ;color.c: 121:     return remainder;
  7107   003BF4  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  7108   003BF8  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  7109   003BFC  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  7110   003C00  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  7111   003C04                     l50:
  7112   003C04  0012               	return		;funcret
  7113   003C06                     __end_of_custom_floatmodulo:
  7114                           	callstack 0
  7115                           
  7116 ;; *************** function ___xxtofl *****************
  7117 ;; Defined at:
  7118 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;  sign            1    wreg     unsigned char 
  7121 ;;  val             4   11[COMRAM] long 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  sign            1   19[COMRAM] unsigned char 
  7124 ;;  arg             4   21[COMRAM] unsigned long 
  7125 ;;  exp             1   20[COMRAM] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  4   11[COMRAM] unsigned char 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7136 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7137 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;Total ram usage:       14 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_custom_floatmodulo
  7145 ;;		_color_cardCheck
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text36
  7150   002FEC                     __ptext36:
  7151                           	callstack 0
  7152   002FEC                     ___xxtofl:
  7153                           	callstack 29
  7154                           
  7155                           ;incstack = 0
  7156                           ;___xxtofl@sign stored from wreg
  7157   002FEC  6E14               	movwf	___xxtofl@sign^0,c
  7158   002FEE  5014               	movf	___xxtofl@sign^0,w,c
  7159   002FF0  B4D8               	btfsc	status,2,c
  7160   002FF2  EFFD  F017         	goto	u3431
  7161   002FF6  EFFF  F017         	goto	u3430
  7162   002FFA                     u3431:
  7163   002FFA  EF21  F018         	goto	l1145
  7164   002FFE                     u3430:
  7165   002FFE  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7166   003000  EF06  F018         	goto	u3440
  7167   003004  EF04  F018         	goto	u3441
  7168   003008                     u3441:
  7169   003008  EF21  F018         	goto	l1145
  7170   00300C                     u3440:
  7171   00300C  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  7172   003010  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  7173   003014  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  7174   003018  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  7175   00301C  1E10               	comf	??___xxtofl^0,f,c
  7176   00301E  1E11               	comf	(??___xxtofl+1)^0,f,c
  7177   003020  1E12               	comf	(??___xxtofl+2)^0,f,c
  7178   003022  1E13               	comf	(??___xxtofl+3)^0,f,c
  7179   003024  2A10               	incf	??___xxtofl^0,f,c
  7180   003026  0E00               	movlw	0
  7181   003028  2211               	addwfc	(??___xxtofl+1)^0,f,c
  7182   00302A  2212               	addwfc	(??___xxtofl+2)^0,f,c
  7183   00302C  2213               	addwfc	(??___xxtofl+3)^0,f,c
  7184   00302E  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  7185   003032  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  7186   003036  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  7187   00303A  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  7188   00303E  EF29  F018         	goto	l3409
  7189   003042                     l1145:
  7190   003042  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  7191   003046  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7192   00304A  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7193   00304E  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7194   003052                     l3409:
  7195   003052  500C               	movf	___xxtofl@val^0,w,c
  7196   003054  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  7197   003056  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  7198   003058  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  7199   00305A  A4D8               	btfss	status,2,c
  7200   00305C  EF32  F018         	goto	u3451
  7201   003060  EF34  F018         	goto	u3450
  7202   003064                     u3451:
  7203   003064  EF3E  F018         	goto	l3415
  7204   003068                     u3450:
  7205   003068  0E00               	movlw	0
  7206   00306A  6E0C               	movwf	?___xxtofl^0,c
  7207   00306C  0E00               	movlw	0
  7208   00306E  6E0D               	movwf	(?___xxtofl+1)^0,c
  7209   003070  0E00               	movlw	0
  7210   003072  6E0E               	movwf	(?___xxtofl+2)^0,c
  7211   003074  0E00               	movlw	0
  7212   003076  6E0F               	movwf	(?___xxtofl+3)^0,c
  7213   003078  EFCF  F018         	goto	l1148
  7214   00307C                     l3415:
  7215   00307C  0E96               	movlw	150
  7216   00307E  6E15               	movwf	___xxtofl@exp^0,c
  7217   003080  EF48  F018         	goto	l3419
  7218   003084                     l3417:
  7219   003084  2A15               	incf	___xxtofl@exp^0,f,c
  7220   003086  90D8               	bcf	status,0,c
  7221   003088  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7222   00308A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7223   00308C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7224   00308E  3216               	rrcf	___xxtofl@arg^0,f,c
  7225   003090                     l3419:
  7226   003090  0E00               	movlw	0
  7227   003092  1416               	andwf	___xxtofl@arg^0,w,c
  7228   003094  6E10               	movwf	??___xxtofl^0,c
  7229   003096  0E00               	movlw	0
  7230   003098  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7231   00309A  6E11               	movwf	(??___xxtofl+1)^0,c
  7232   00309C  0E00               	movlw	0
  7233   00309E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7234   0030A0  6E12               	movwf	(??___xxtofl+2)^0,c
  7235   0030A2  0EFE               	movlw	254
  7236   0030A4  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7237   0030A6  6E13               	movwf	(??___xxtofl+3)^0,c
  7238   0030A8  5010               	movf	??___xxtofl^0,w,c
  7239   0030AA  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7240   0030AC  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7241   0030AE  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7242   0030B0  A4D8               	btfss	status,2,c
  7243   0030B2  EF5D  F018         	goto	u3461
  7244   0030B6  EF5F  F018         	goto	u3460
  7245   0030BA                     u3461:
  7246   0030BA  EF42  F018         	goto	l3417
  7247   0030BE                     u3460:
  7248   0030BE  EF6D  F018         	goto	l1152
  7249   0030C2                     l3421:
  7250   0030C2  2A15               	incf	___xxtofl@exp^0,f,c
  7251   0030C4  0E01               	movlw	1
  7252   0030C6  2616               	addwf	___xxtofl@arg^0,f,c
  7253   0030C8  0E00               	movlw	0
  7254   0030CA  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  7255   0030CC  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  7256   0030CE  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  7257   0030D0  90D8               	bcf	status,0,c
  7258   0030D2  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  7259   0030D4  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  7260   0030D6  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  7261   0030D8  3216               	rrcf	___xxtofl@arg^0,f,c
  7262   0030DA                     l1152:
  7263   0030DA  0E00               	movlw	0
  7264   0030DC  1416               	andwf	___xxtofl@arg^0,w,c
  7265   0030DE  6E10               	movwf	??___xxtofl^0,c
  7266   0030E0  0E00               	movlw	0
  7267   0030E2  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  7268   0030E4  6E11               	movwf	(??___xxtofl+1)^0,c
  7269   0030E6  0E00               	movlw	0
  7270   0030E8  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  7271   0030EA  6E12               	movwf	(??___xxtofl+2)^0,c
  7272   0030EC  0EFF               	movlw	255
  7273   0030EE  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  7274   0030F0  6E13               	movwf	(??___xxtofl+3)^0,c
  7275   0030F2  5010               	movf	??___xxtofl^0,w,c
  7276   0030F4  1011               	iorwf	(??___xxtofl+1)^0,w,c
  7277   0030F6  1012               	iorwf	(??___xxtofl+2)^0,w,c
  7278   0030F8  1013               	iorwf	(??___xxtofl+3)^0,w,c
  7279   0030FA  A4D8               	btfss	status,2,c
  7280   0030FC  EF82  F018         	goto	u3471
  7281   003100  EF84  F018         	goto	u3470
  7282   003104                     u3471:
  7283   003104  EF61  F018         	goto	l3421
  7284   003108                     u3470:
  7285   003108  EF8C  F018         	goto	l3429
  7286   00310C                     l3427:
  7287   00310C  0615               	decf	___xxtofl@exp^0,f,c
  7288   00310E  90D8               	bcf	status,0,c
  7289   003110  3616               	rlcf	___xxtofl@arg^0,f,c
  7290   003112  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  7291   003114  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  7292   003116  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  7293   003118                     l3429:
  7294   003118  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  7295   00311A  EF91  F018         	goto	u3481
  7296   00311E  EF93  F018         	goto	u3480
  7297   003122                     u3481:
  7298   003122  EF9B  F018         	goto	l1159
  7299   003126                     u3480:
  7300   003126  0E02               	movlw	2
  7301   003128  6015               	cpfslt	___xxtofl@exp^0,c
  7302   00312A  EF99  F018         	goto	u3491
  7303   00312E  EF9B  F018         	goto	u3490
  7304   003132                     u3491:
  7305   003132  EF86  F018         	goto	l3427
  7306   003136                     u3490:
  7307   003136                     l1159:
  7308   003136  B015               	btfsc	___xxtofl@exp^0,0,c
  7309   003138  EFA0  F018         	goto	u3501
  7310   00313C  EFA2  F018         	goto	u3500
  7311   003140                     u3501:
  7312   003140  EFA3  F018         	goto	l3435
  7313   003144                     u3500:
  7314   003144  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  7315   003146                     l3435:
  7316   003146  90D8               	bcf	status,0,c
  7317   003148  3215               	rrcf	___xxtofl@exp^0,f,c
  7318   00314A  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  7319   00314E  6A11               	clrf	(??___xxtofl+1)^0,c
  7320   003150  6A12               	clrf	(??___xxtofl+2)^0,c
  7321   003152  6A13               	clrf	(??___xxtofl+3)^0,c
  7322   003154  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  7323   003158  6A12               	clrf	(??___xxtofl+2)^0,c
  7324   00315A  6A11               	clrf	(??___xxtofl+1)^0,c
  7325   00315C  6A10               	clrf	??___xxtofl^0,c
  7326   00315E  5010               	movf	??___xxtofl^0,w,c
  7327   003160  1216               	iorwf	___xxtofl@arg^0,f,c
  7328   003162  5011               	movf	(??___xxtofl+1)^0,w,c
  7329   003164  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  7330   003166  5012               	movf	(??___xxtofl+2)^0,w,c
  7331   003168  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  7332   00316A  5013               	movf	(??___xxtofl+3)^0,w,c
  7333   00316C  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  7334   00316E  5014               	movf	___xxtofl@sign^0,w,c
  7335   003170  B4D8               	btfsc	status,2,c
  7336   003172  EFBD  F018         	goto	u3511
  7337   003176  EFBF  F018         	goto	u3510
  7338   00317A                     u3511:
  7339   00317A  EFC7  F018         	goto	l3445
  7340   00317E                     u3510:
  7341   00317E  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  7342   003180  EFC6  F018         	goto	u3520
  7343   003184  EFC4  F018         	goto	u3521
  7344   003188                     u3521:
  7345   003188  EFC7  F018         	goto	l3445
  7346   00318C                     u3520:
  7347   00318C  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  7348   00318E                     l3445:
  7349   00318E  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  7350   003192  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7351   003196  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7352   00319A  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7353   00319E                     l1148:
  7354   00319E  0012               	return		;funcret
  7355   0031A0                     __end_of___xxtofl:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function ___fltol *****************
  7359 ;; Defined at:
  7360 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  f1              4    0[COMRAM] unsigned char 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  exp1            1    9[COMRAM] unsigned char 
  7365 ;;  sign1           1    8[COMRAM] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  4    0[COMRAM] long 
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;Total ram usage:       10 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_custom_floatmodulo
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text37
  7389   003C06                     __ptext37:
  7390                           	callstack 0
  7391   003C06                     ___fltol:
  7392                           	callstack 27
  7393   003C06  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7394   003C08  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7395   003C0A  6E0A               	movwf	___fltol@exp1^0,c
  7396   003C0C  500A               	movf	___fltol@exp1^0,w,c
  7397   003C0E  A4D8               	btfss	status,2,c
  7398   003C10  EF0C  F01E         	goto	u3301
  7399   003C14  EF0E  F01E         	goto	u3300
  7400   003C18                     u3301:
  7401   003C18  EF18  F01E         	goto	l3327
  7402   003C1C                     u3300:
  7403   003C1C                     l3323:
  7404   003C1C  0E00               	movlw	0
  7405   003C1E  6E01               	movwf	?___fltol^0,c
  7406   003C20  0E00               	movlw	0
  7407   003C22  6E02               	movwf	(?___fltol+1)^0,c
  7408   003C24  0E00               	movlw	0
  7409   003C26  6E03               	movwf	(?___fltol+2)^0,c
  7410   003C28  0E00               	movlw	0
  7411   003C2A  6E04               	movwf	(?___fltol+3)^0,c
  7412   003C2C  EF85  F01E         	goto	l787
  7413   003C30                     l3327:
  7414   003C30  C001  F005         	movff	___fltol@f1,??___fltol
  7415   003C34  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7416   003C38  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7417   003C3C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7418   003C40  0E20               	movlw	32
  7419   003C42  EF28  F01E         	goto	u3310
  7420   003C46                     u3315:
  7421   003C46  90D8               	bcf	status,0,c
  7422   003C48  3208               	rrcf	(??___fltol+3)^0,f,c
  7423   003C4A  3207               	rrcf	(??___fltol+2)^0,f,c
  7424   003C4C  3206               	rrcf	(??___fltol+1)^0,f,c
  7425   003C4E  3205               	rrcf	??___fltol^0,f,c
  7426   003C50                     u3310:
  7427   003C50  2EE8               	decfsz	wreg,f,c
  7428   003C52  EF23  F01E         	goto	u3315
  7429   003C56  5005               	movf	??___fltol^0,w,c
  7430   003C58  6E09               	movwf	___fltol@sign1^0,c
  7431   003C5A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7432   003C5C  0EFF               	movlw	255
  7433   003C5E  1601               	andwf	___fltol@f1^0,f,c
  7434   003C60  0EFF               	movlw	255
  7435   003C62  1602               	andwf	(___fltol@f1+1)^0,f,c
  7436   003C64  0EFF               	movlw	255
  7437   003C66  1603               	andwf	(___fltol@f1+2)^0,f,c
  7438   003C68  0E00               	movlw	0
  7439   003C6A  1604               	andwf	(___fltol@f1+3)^0,f,c
  7440   003C6C  0E96               	movlw	150
  7441   003C6E  5E0A               	subwf	___fltol@exp1^0,f,c
  7442   003C70  BE0A               	btfsc	___fltol@exp1^0,7,c
  7443   003C72  EF3F  F01E         	goto	u3320
  7444   003C76  EF3D  F01E         	goto	u3321
  7445   003C7A                     u3321:
  7446   003C7A  EF55  F01E         	goto	l3347
  7447   003C7E                     u3320:
  7448   003C7E  500A               	movf	___fltol@exp1^0,w,c
  7449   003C80  0A80               	xorlw	128
  7450   003C82  0F97               	addlw	151
  7451   003C84  B0D8               	btfsc	status,0,c
  7452   003C86  EF47  F01E         	goto	u3331
  7453   003C8A  EF49  F01E         	goto	u3330
  7454   003C8E                     u3331:
  7455   003C8E  EF4B  F01E         	goto	l3343
  7456   003C92                     u3330:
  7457   003C92  EF0E  F01E         	goto	l3323
  7458   003C96                     l3343:
  7459   003C96  90D8               	bcf	status,0,c
  7460   003C98  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7461   003C9A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7462   003C9C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7463   003C9E  3201               	rrcf	___fltol@f1^0,f,c
  7464   003CA0  3E0A               	incfsz	___fltol@exp1^0,f,c
  7465   003CA2  EF4B  F01E         	goto	l3343
  7466   003CA6  EF6D  F01E         	goto	l3357
  7467   003CAA                     l3347:
  7468   003CAA  0E1F               	movlw	31
  7469   003CAC  640A               	cpfsgt	___fltol@exp1^0,c
  7470   003CAE  EF5B  F01E         	goto	u3341
  7471   003CB2  EF5D  F01E         	goto	u3340
  7472   003CB6                     u3341:
  7473   003CB6  EF65  F01E         	goto	l3355
  7474   003CBA                     u3340:
  7475   003CBA  EF0E  F01E         	goto	l3323
  7476   003CBE                     l3353:
  7477   003CBE  90D8               	bcf	status,0,c
  7478   003CC0  3601               	rlcf	___fltol@f1^0,f,c
  7479   003CC2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7480   003CC4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7481   003CC6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7482   003CC8  060A               	decf	___fltol@exp1^0,f,c
  7483   003CCA                     l3355:
  7484   003CCA  500A               	movf	___fltol@exp1^0,w,c
  7485   003CCC  A4D8               	btfss	status,2,c
  7486   003CCE  EF6B  F01E         	goto	u3351
  7487   003CD2  EF6D  F01E         	goto	u3350
  7488   003CD6                     u3351:
  7489   003CD6  EF5F  F01E         	goto	l3353
  7490   003CDA                     u3350:
  7491   003CDA                     l3357:
  7492   003CDA  5009               	movf	___fltol@sign1^0,w,c
  7493   003CDC  B4D8               	btfsc	status,2,c
  7494   003CDE  EF73  F01E         	goto	u3361
  7495   003CE2  EF75  F01E         	goto	u3360
  7496   003CE6                     u3361:
  7497   003CE6  EF7D  F01E         	goto	l3361
  7498   003CEA                     u3360:
  7499   003CEA  1E04               	comf	(___fltol@f1+3)^0,f,c
  7500   003CEC  1E03               	comf	(___fltol@f1+2)^0,f,c
  7501   003CEE  1E02               	comf	(___fltol@f1+1)^0,f,c
  7502   003CF0  6C01               	negf	___fltol@f1^0,c
  7503   003CF2  0E00               	movlw	0
  7504   003CF4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7505   003CF6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7506   003CF8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7507   003CFA                     l3361:
  7508   003CFA  C001  F001         	movff	___fltol@f1,?___fltol
  7509   003CFE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7510   003D02  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7511   003D06  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7512   003D0A                     l787:
  7513   003D0A  0012               	return		;funcret
  7514   003D0C                     __end_of___fltol:
  7515                           	callstack 0
  7516                           
  7517 ;; *************** function ___flsub *****************
  7518 ;; Defined at:
  7519 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  b               4   25[COMRAM] long 
  7522 ;;  a               4   29[COMRAM] long 
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  4   25[COMRAM] long 
  7527 ;; Registers used:
  7528 ;;		wreg, status,2, status,0, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7534 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7538 ;;Total ram usage:        8 bytes
  7539 ;; Hardware stack levels used: 1
  7540 ;; Hardware stack levels required when called: 1
  7541 ;; This function calls:
  7542 ;;		___fladd
  7543 ;; This function is called by:
  7544 ;;		_custom_floatmodulo
  7545 ;;		_RGB_to_HSV
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           	psect	text38
  7550   004396                     __ptext38:
  7551                           	callstack 0
  7552   004396                     ___flsub:
  7553                           	callstack 26
  7554   004396  0E00               	movlw	0
  7555   004398  1A1E               	xorwf	___flsub@a^0,f,c
  7556   00439A  0E00               	movlw	0
  7557   00439C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7558   00439E  0E00               	movlw	0
  7559   0043A0  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7560   0043A2  0E80               	movlw	128
  7561   0043A4  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7562   0043A6  C01A  F001         	movff	___flsub@b,___fladd@b
  7563   0043AA  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7564   0043AE  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7565   0043B2  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7566   0043B6  C01E  F005         	movff	___flsub@a,___fladd@a
  7567   0043BA  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7568   0043BE  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7569   0043C2  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7570   0043C6  EC01  F010         	call	___fladd	;wreg free
  7571   0043CA  C001  F01A         	movff	?___fladd,?___flsub
  7572   0043CE  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7573   0043D2  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7574   0043D6  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7575   0043DA  0012               	return		;funcret
  7576   0043DC                     __end_of___flsub:
  7577                           	callstack 0
  7578                           
  7579 ;; *************** function ___fladd *****************
  7580 ;; Defined at:
  7581 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  b               4    0[COMRAM] long 
  7584 ;;  a               4    4[COMRAM] long 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;  grs             1   15[COMRAM] unsigned char 
  7587 ;;  bexp            1   14[COMRAM] unsigned char 
  7588 ;;  aexp            1   13[COMRAM] unsigned char 
  7589 ;;  signs           1   12[COMRAM] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  4    0[COMRAM] unsigned char 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7600 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;Total ram usage:       16 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_RGB_to_HSV
  7609 ;;		___flsub
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text39
  7614   002002                     __ptext39:
  7615                           	callstack 0
  7616   002002                     ___fladd:
  7617                           	callstack 26
  7618   002002  5004               	movf	(___fladd@b+3)^0,w,c
  7619   002004  0B80               	andlw	128
  7620   002006  6E0D               	movwf	___fladd@signs^0,c
  7621   002008  5004               	movf	(___fladd@b+3)^0,w,c
  7622   00200A  2404               	addwf	(___fladd@b+3)^0,w,c
  7623   00200C  6E0F               	movwf	___fladd@bexp^0,c
  7624   00200E  AE03               	btfss	(___fladd@b+2)^0,7,c
  7625   002010  EF0C  F010         	goto	u2441
  7626   002014  EF0E  F010         	goto	u2440
  7627   002018                     u2441:
  7628   002018  EF0F  F010         	goto	l2831
  7629   00201C                     u2440:
  7630   00201C  800F               	bsf	___fladd@bexp^0,0,c
  7631   00201E                     l2831:
  7632   00201E  500F               	movf	___fladd@bexp^0,w,c
  7633   002020  B4D8               	btfsc	status,2,c
  7634   002022  EF15  F010         	goto	u2451
  7635   002026  EF17  F010         	goto	u2450
  7636   00202A                     u2451:
  7637   00202A  EF2C  F010         	goto	l2841
  7638   00202E                     u2450:
  7639   00202E  280F               	incf	___fladd@bexp^0,w,c
  7640   002030  A4D8               	btfss	status,2,c
  7641   002032  EF1D  F010         	goto	u2461
  7642   002036  EF1F  F010         	goto	u2460
  7643   00203A                     u2461:
  7644   00203A  EF27  F010         	goto	l2837
  7645   00203E                     u2460:
  7646   00203E  0E00               	movlw	0
  7647   002040  6E01               	movwf	___fladd@b^0,c
  7648   002042  0E00               	movlw	0
  7649   002044  6E02               	movwf	(___fladd@b+1)^0,c
  7650   002046  0E00               	movlw	0
  7651   002048  6E03               	movwf	(___fladd@b+2)^0,c
  7652   00204A  0E00               	movlw	0
  7653   00204C  6E04               	movwf	(___fladd@b+3)^0,c
  7654   00204E                     l2837:
  7655   00204E  8E03               	bsf	(___fladd@b+2)^0,7,c
  7656   002050  0E00               	movlw	0
  7657   002052  6E04               	movwf	(___fladd@b+3)^0,c
  7658   002054  EF34  F010         	goto	l2843
  7659   002058                     l2841:
  7660   002058  0E00               	movlw	0
  7661   00205A  6E01               	movwf	___fladd@b^0,c
  7662   00205C  0E00               	movlw	0
  7663   00205E  6E02               	movwf	(___fladd@b+1)^0,c
  7664   002060  0E00               	movlw	0
  7665   002062  6E03               	movwf	(___fladd@b+2)^0,c
  7666   002064  0E00               	movlw	0
  7667   002066  6E04               	movwf	(___fladd@b+3)^0,c
  7668   002068                     l2843:
  7669   002068  5008               	movf	(___fladd@a+3)^0,w,c
  7670   00206A  0B80               	andlw	128
  7671   00206C  6E0E               	movwf	___fladd@aexp^0,c
  7672   00206E  500D               	movf	___fladd@signs^0,w,c
  7673   002070  180E               	xorwf	___fladd@aexp^0,w,c
  7674   002072  B4D8               	btfsc	status,2,c
  7675   002074  EF3E  F010         	goto	u2471
  7676   002078  EF40  F010         	goto	u2470
  7677   00207C                     u2471:
  7678   00207C  EF41  F010         	goto	l2849
  7679   002080                     u2470:
  7680   002080  8C0D               	bsf	___fladd@signs^0,6,c
  7681   002082                     l2849:
  7682   002082  5008               	movf	(___fladd@a+3)^0,w,c
  7683   002084  2408               	addwf	(___fladd@a+3)^0,w,c
  7684   002086  6E0E               	movwf	___fladd@aexp^0,c
  7685   002088  AE07               	btfss	(___fladd@a+2)^0,7,c
  7686   00208A  EF49  F010         	goto	u2481
  7687   00208E  EF4B  F010         	goto	u2480
  7688   002092                     u2481:
  7689   002092  EF4C  F010         	goto	l2855
  7690   002096                     u2480:
  7691   002096  800E               	bsf	___fladd@aexp^0,0,c
  7692   002098                     l2855:
  7693   002098  500E               	movf	___fladd@aexp^0,w,c
  7694   00209A  B4D8               	btfsc	status,2,c
  7695   00209C  EF52  F010         	goto	u2491
  7696   0020A0  EF54  F010         	goto	u2490
  7697   0020A4                     u2491:
  7698   0020A4  EF69  F010         	goto	l2865
  7699   0020A8                     u2490:
  7700   0020A8  280E               	incf	___fladd@aexp^0,w,c
  7701   0020AA  A4D8               	btfss	status,2,c
  7702   0020AC  EF5A  F010         	goto	u2501
  7703   0020B0  EF5C  F010         	goto	u2500
  7704   0020B4                     u2501:
  7705   0020B4  EF64  F010         	goto	l2861
  7706   0020B8                     u2500:
  7707   0020B8  0E00               	movlw	0
  7708   0020BA  6E05               	movwf	___fladd@a^0,c
  7709   0020BC  0E00               	movlw	0
  7710   0020BE  6E06               	movwf	(___fladd@a+1)^0,c
  7711   0020C0  0E00               	movlw	0
  7712   0020C2  6E07               	movwf	(___fladd@a+2)^0,c
  7713   0020C4  0E00               	movlw	0
  7714   0020C6  6E08               	movwf	(___fladd@a+3)^0,c
  7715   0020C8                     l2861:
  7716   0020C8  8E07               	bsf	(___fladd@a+2)^0,7,c
  7717   0020CA  0E00               	movlw	0
  7718   0020CC  6E08               	movwf	(___fladd@a+3)^0,c
  7719   0020CE  EF71  F010         	goto	l2867
  7720   0020D2                     l2865:
  7721   0020D2  0E00               	movlw	0
  7722   0020D4  6E05               	movwf	___fladd@a^0,c
  7723   0020D6  0E00               	movlw	0
  7724   0020D8  6E06               	movwf	(___fladd@a+1)^0,c
  7725   0020DA  0E00               	movlw	0
  7726   0020DC  6E07               	movwf	(___fladd@a+2)^0,c
  7727   0020DE  0E00               	movlw	0
  7728   0020E0  6E08               	movwf	(___fladd@a+3)^0,c
  7729   0020E2                     l2867:
  7730   0020E2  500F               	movf	___fladd@bexp^0,w,c
  7731   0020E4  5C0E               	subwf	___fladd@aexp^0,w,c
  7732   0020E6  B0D8               	btfsc	status,0,c
  7733   0020E8  EF78  F010         	goto	u2511
  7734   0020EC  EF7A  F010         	goto	u2510
  7735   0020F0                     u2511:
  7736   0020F0  EFA1  F010         	goto	l2903
  7737   0020F4                     u2510:
  7738   0020F4  AC0D               	btfss	___fladd@signs^0,6,c
  7739   0020F6  EF7F  F010         	goto	u2521
  7740   0020FA  EF81  F010         	goto	u2520
  7741   0020FE                     u2521:
  7742   0020FE  EF83  F010         	goto	l2873
  7743   002102                     u2520:
  7744   002102  0E80               	movlw	128
  7745   002104  1A0D               	xorwf	___fladd@signs^0,f,c
  7746   002106                     l2873:
  7747   002106  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7748   00210A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7749   00210E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7750   002112  C001  F010         	movff	___fladd@b,___fladd@grs
  7751   002116  C005  F001         	movff	___fladd@a,___fladd@b
  7752   00211A  C010  F005         	movff	___fladd@grs,___fladd@a
  7753   00211E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7754   002122  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7755   002126  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7756   00212A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7757   00212E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7758   002132  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7759   002136  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7760   00213A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7761   00213E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7762   002142                     l2903:
  7763   002142  0E00               	movlw	0
  7764   002144  6E10               	movwf	___fladd@grs^0,c
  7765   002146  500F               	movf	___fladd@bexp^0,w,c
  7766   002148  C00E  F009         	movff	___fladd@aexp,??___fladd
  7767   00214C  6A0A               	clrf	(??___fladd+1)^0,c
  7768   00214E  5E09               	subwf	??___fladd^0,f,c
  7769   002150  0E00               	movlw	0
  7770   002152  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7771   002154  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7772   002156  EFB6  F010         	goto	u2531
  7773   00215A  500A               	movf	(??___fladd+1)^0,w,c
  7774   00215C  E109               	bnz	u2530
  7775   00215E  0E1A               	movlw	26
  7776   002160  5C09               	subwf	??___fladd^0,w,c
  7777   002162  A0D8               	btfss	status,0,c
  7778   002164  EFB6  F010         	goto	u2531
  7779   002168  EFB8  F010         	goto	u2530
  7780   00216C                     u2531:
  7781   00216C  EFEF  F010         	goto	l1019
  7782   002170                     u2530:
  7783   002170  5001               	movf	___fladd@b^0,w,c
  7784   002172  1002               	iorwf	(___fladd@b+1)^0,w,c
  7785   002174  1003               	iorwf	(___fladd@b+2)^0,w,c
  7786   002176  1004               	iorwf	(___fladd@b+3)^0,w,c
  7787   002178  A4D8               	btfss	status,2,c
  7788   00217A  EFC1  F010         	goto	u2541
  7789   00217E  EFC4  F010         	goto	u2540
  7790   002182                     u2541:
  7791   002182  0E01               	movlw	1
  7792   002184  EFC5  F010         	goto	u2550
  7793   002188                     u2540:
  7794   002188  0E00               	movlw	0
  7795   00218A                     u2550:
  7796   00218A  6E10               	movwf	___fladd@grs^0,c
  7797   00218C  0E00               	movlw	0
  7798   00218E  6E01               	movwf	___fladd@b^0,c
  7799   002190  0E00               	movlw	0
  7800   002192  6E02               	movwf	(___fladd@b+1)^0,c
  7801   002194  0E00               	movlw	0
  7802   002196  6E03               	movwf	(___fladd@b+2)^0,c
  7803   002198  0E00               	movlw	0
  7804   00219A  6E04               	movwf	(___fladd@b+3)^0,c
  7805   00219C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7806   0021A0  EFF8  F010         	goto	l1018
  7807   0021A4                     l1020:
  7808   0021A4  A010               	btfss	___fladd@grs^0,0,c
  7809   0021A6  EFD7  F010         	goto	u2561
  7810   0021AA  EFD9  F010         	goto	u2560
  7811   0021AE                     u2561:
  7812   0021AE  EFDF  F010         	goto	l2915
  7813   0021B2                     u2560:
  7814   0021B2  90D8               	bcf	status,0,c
  7815   0021B4  3010               	rrcf	___fladd@grs^0,w,c
  7816   0021B6  0901               	iorlw	1
  7817   0021B8  6E10               	movwf	___fladd@grs^0,c
  7818   0021BA  EFE1  F010         	goto	l2917
  7819   0021BE                     l2915:
  7820   0021BE  90D8               	bcf	status,0,c
  7821   0021C0  3210               	rrcf	___fladd@grs^0,f,c
  7822   0021C2                     l2917:
  7823   0021C2  A001               	btfss	___fladd@b^0,0,c
  7824   0021C4  EFE6  F010         	goto	u2571
  7825   0021C8  EFE8  F010         	goto	u2570
  7826   0021CC                     u2571:
  7827   0021CC  EFE9  F010         	goto	l2921
  7828   0021D0                     u2570:
  7829   0021D0  8E10               	bsf	___fladd@grs^0,7,c
  7830   0021D2                     l2921:
  7831   0021D2  3404               	rlcf	(___fladd@b+3)^0,w,c
  7832   0021D4  3204               	rrcf	(___fladd@b+3)^0,f,c
  7833   0021D6  3203               	rrcf	(___fladd@b+2)^0,f,c
  7834   0021D8  3202               	rrcf	(___fladd@b+1)^0,f,c
  7835   0021DA  3201               	rrcf	___fladd@b^0,f,c
  7836   0021DC  2A0F               	incf	___fladd@bexp^0,f,c
  7837   0021DE                     l1019:
  7838   0021DE  500E               	movf	___fladd@aexp^0,w,c
  7839   0021E0  5C0F               	subwf	___fladd@bexp^0,w,c
  7840   0021E2  A0D8               	btfss	status,0,c
  7841   0021E4  EFF6  F010         	goto	u2581
  7842   0021E8  EFF8  F010         	goto	u2580
  7843   0021EC                     u2581:
  7844   0021EC  EFD2  F010         	goto	l1020
  7845   0021F0                     u2580:
  7846   0021F0                     l1018:
  7847   0021F0  BC0D               	btfsc	___fladd@signs^0,6,c
  7848   0021F2  EFFD  F010         	goto	u2591
  7849   0021F6  EFFF  F010         	goto	u2590
  7850   0021FA                     u2591:
  7851   0021FA  EF3F  F011         	goto	l2949
  7852   0021FE                     u2590:
  7853   0021FE  500F               	movf	___fladd@bexp^0,w,c
  7854   002200  A4D8               	btfss	status,2,c
  7855   002202  EF05  F011         	goto	u2601
  7856   002206  EF07  F011         	goto	u2600
  7857   00220A                     u2601:
  7858   00220A  EF11  F011         	goto	l2931
  7859   00220E                     u2600:
  7860   00220E  0E00               	movlw	0
  7861   002210  6E01               	movwf	?___fladd^0,c
  7862   002212  0E00               	movlw	0
  7863   002214  6E02               	movwf	(?___fladd+1)^0,c
  7864   002216  0E00               	movlw	0
  7865   002218  6E03               	movwf	(?___fladd+2)^0,c
  7866   00221A  0E00               	movlw	0
  7867   00221C  6E04               	movwf	(?___fladd+3)^0,c
  7868   00221E  EF60  F012         	goto	l1027
  7869   002222                     l2931:
  7870   002222  5005               	movf	___fladd@a^0,w,c
  7871   002224  2601               	addwf	___fladd@b^0,f,c
  7872   002226  5006               	movf	(___fladd@a+1)^0,w,c
  7873   002228  2202               	addwfc	(___fladd@b+1)^0,f,c
  7874   00222A  5007               	movf	(___fladd@a+2)^0,w,c
  7875   00222C  2203               	addwfc	(___fladd@b+2)^0,f,c
  7876   00222E  5008               	movf	(___fladd@a+3)^0,w,c
  7877   002230  2204               	addwfc	(___fladd@b+3)^0,f,c
  7878   002232  A004               	btfss	(___fladd@b+3)^0,0,c
  7879   002234  EF1E  F011         	goto	u2611
  7880   002238  EF20  F011         	goto	u2610
  7881   00223C                     u2611:
  7882   00223C  EFCC  F011         	goto	l2985
  7883   002240                     u2610:
  7884   002240  A010               	btfss	___fladd@grs^0,0,c
  7885   002242  EF25  F011         	goto	u2621
  7886   002246  EF27  F011         	goto	u2620
  7887   00224A                     u2621:
  7888   00224A  EF2D  F011         	goto	l2939
  7889   00224E                     u2620:
  7890   00224E  90D8               	bcf	status,0,c
  7891   002250  3010               	rrcf	___fladd@grs^0,w,c
  7892   002252  0901               	iorlw	1
  7893   002254  6E10               	movwf	___fladd@grs^0,c
  7894   002256  EF2F  F011         	goto	l2941
  7895   00225A                     l2939:
  7896   00225A  90D8               	bcf	status,0,c
  7897   00225C  3210               	rrcf	___fladd@grs^0,f,c
  7898   00225E                     l2941:
  7899   00225E  A001               	btfss	___fladd@b^0,0,c
  7900   002260  EF34  F011         	goto	u2631
  7901   002264  EF36  F011         	goto	u2630
  7902   002268                     u2631:
  7903   002268  EF37  F011         	goto	l2945
  7904   00226C                     u2630:
  7905   00226C  8E10               	bsf	___fladd@grs^0,7,c
  7906   00226E                     l2945:
  7907   00226E  3404               	rlcf	(___fladd@b+3)^0,w,c
  7908   002270  3204               	rrcf	(___fladd@b+3)^0,f,c
  7909   002272  3203               	rrcf	(___fladd@b+2)^0,f,c
  7910   002274  3202               	rrcf	(___fladd@b+1)^0,f,c
  7911   002276  3201               	rrcf	___fladd@b^0,f,c
  7912   002278  2A0F               	incf	___fladd@bexp^0,f,c
  7913   00227A  EFCC  F011         	goto	l2985
  7914   00227E                     l2949:
  7915   00227E  5005               	movf	___fladd@a^0,w,c
  7916   002280  5C01               	subwf	___fladd@b^0,w,c
  7917   002282  5006               	movf	(___fladd@a+1)^0,w,c
  7918   002284  5802               	subwfb	(___fladd@b+1)^0,w,c
  7919   002286  5007               	movf	(___fladd@a+2)^0,w,c
  7920   002288  5803               	subwfb	(___fladd@b+2)^0,w,c
  7921   00228A  5004               	movf	(___fladd@b+3)^0,w,c
  7922   00228C  0A80               	xorlw	128
  7923   00228E  6E09               	movwf	??___fladd^0,c
  7924   002290  5008               	movf	(___fladd@a+3)^0,w,c
  7925   002292  0A80               	xorlw	128
  7926   002294  5809               	subwfb	??___fladd^0,w,c
  7927   002296  B0D8               	btfsc	status,0,c
  7928   002298  EF50  F011         	goto	u2641
  7929   00229C  EF52  F011         	goto	u2640
  7930   0022A0                     u2641:
  7931   0022A0  EF7D  F011         	goto	l2959
  7932   0022A4                     u2640:
  7933   0022A4  5001               	movf	___fladd@b^0,w,c
  7934   0022A6  5C05               	subwf	___fladd@a^0,w,c
  7935   0022A8  6E09               	movwf	??___fladd^0,c
  7936   0022AA  5002               	movf	(___fladd@b+1)^0,w,c
  7937   0022AC  5806               	subwfb	(___fladd@a+1)^0,w,c
  7938   0022AE  6E0A               	movwf	(??___fladd+1)^0,c
  7939   0022B0  5003               	movf	(___fladd@b+2)^0,w,c
  7940   0022B2  5807               	subwfb	(___fladd@a+2)^0,w,c
  7941   0022B4  6E0B               	movwf	(??___fladd+2)^0,c
  7942   0022B6  5004               	movf	(___fladd@b+3)^0,w,c
  7943   0022B8  5808               	subwfb	(___fladd@a+3)^0,w,c
  7944   0022BA  6E0C               	movwf	(??___fladd+3)^0,c
  7945   0022BC  0EFF               	movlw	255
  7946   0022BE  2409               	addwf	??___fladd^0,w,c
  7947   0022C0  6E01               	movwf	___fladd@b^0,c
  7948   0022C2  0EFF               	movlw	255
  7949   0022C4  200A               	addwfc	(??___fladd+1)^0,w,c
  7950   0022C6  6E02               	movwf	(___fladd@b+1)^0,c
  7951   0022C8  0EFF               	movlw	255
  7952   0022CA  200B               	addwfc	(??___fladd+2)^0,w,c
  7953   0022CC  6E03               	movwf	(___fladd@b+2)^0,c
  7954   0022CE  0EFF               	movlw	255
  7955   0022D0  200C               	addwfc	(??___fladd+3)^0,w,c
  7956   0022D2  6E04               	movwf	(___fladd@b+3)^0,c
  7957   0022D4  0E80               	movlw	128
  7958   0022D6  1A0D               	xorwf	___fladd@signs^0,f,c
  7959   0022D8  6C10               	negf	___fladd@grs^0,c
  7960   0022DA  5010               	movf	___fladd@grs^0,w,c
  7961   0022DC  A4D8               	btfss	status,2,c
  7962   0022DE  EF73  F011         	goto	u2651
  7963   0022E2  EF75  F011         	goto	u2650
  7964   0022E6                     u2651:
  7965   0022E6  EF85  F011         	goto	l1035
  7966   0022EA                     u2650:
  7967   0022EA  0E01               	movlw	1
  7968   0022EC  2601               	addwf	___fladd@b^0,f,c
  7969   0022EE  0E00               	movlw	0
  7970   0022F0  2202               	addwfc	(___fladd@b+1)^0,f,c
  7971   0022F2  2203               	addwfc	(___fladd@b+2)^0,f,c
  7972   0022F4  2204               	addwfc	(___fladd@b+3)^0,f,c
  7973   0022F6  EF85  F011         	goto	l1035
  7974   0022FA                     l2959:
  7975   0022FA  5005               	movf	___fladd@a^0,w,c
  7976   0022FC  5E01               	subwf	___fladd@b^0,f,c
  7977   0022FE  5006               	movf	(___fladd@a+1)^0,w,c
  7978   002300  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7979   002302  5007               	movf	(___fladd@a+2)^0,w,c
  7980   002304  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7981   002306  5008               	movf	(___fladd@a+3)^0,w,c
  7982   002308  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7983   00230A                     l1035:
  7984   00230A  5001               	movf	___fladd@b^0,w,c
  7985   00230C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7986   00230E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7987   002310  1004               	iorwf	(___fladd@b+3)^0,w,c
  7988   002312  A4D8               	btfss	status,2,c
  7989   002314  EF8E  F011         	goto	u2661
  7990   002318  EF90  F011         	goto	u2660
  7991   00231C                     u2661:
  7992   00231C  EFC5  F011         	goto	l2983
  7993   002320                     u2660:
  7994   002320  5010               	movf	___fladd@grs^0,w,c
  7995   002322  A4D8               	btfss	status,2,c
  7996   002324  EF96  F011         	goto	u2671
  7997   002328  EF98  F011         	goto	u2670
  7998   00232C                     u2671:
  7999   00232C  EFC5  F011         	goto	l2983
  8000   002330                     u2670:
  8001   002330  0E00               	movlw	0
  8002   002332  6E01               	movwf	?___fladd^0,c
  8003   002334  0E00               	movlw	0
  8004   002336  6E02               	movwf	(?___fladd+1)^0,c
  8005   002338  0E00               	movlw	0
  8006   00233A  6E03               	movwf	(?___fladd+2)^0,c
  8007   00233C  0E00               	movlw	0
  8008   00233E  6E04               	movwf	(?___fladd+3)^0,c
  8009   002340  EF60  F012         	goto	l1027
  8010   002344                     l2967:
  8011   002344  90D8               	bcf	status,0,c
  8012   002346  3601               	rlcf	___fladd@b^0,f,c
  8013   002348  3602               	rlcf	(___fladd@b+1)^0,f,c
  8014   00234A  3603               	rlcf	(___fladd@b+2)^0,f,c
  8015   00234C  3604               	rlcf	(___fladd@b+3)^0,f,c
  8016   00234E  AE10               	btfss	___fladd@grs^0,7,c
  8017   002350  EFAC  F011         	goto	u2681
  8018   002354  EFAE  F011         	goto	u2680
  8019   002358                     u2681:
  8020   002358  EFAF  F011         	goto	l2973
  8021   00235C                     u2680:
  8022   00235C  8001               	bsf	___fladd@b^0,0,c
  8023   00235E                     l2973:
  8024   00235E  A010               	btfss	___fladd@grs^0,0,c
  8025   002360  EFB4  F011         	goto	u2691
  8026   002364  EFB6  F011         	goto	u2690
  8027   002368                     u2691:
  8028   002368  EFBA  F011         	goto	l2977
  8029   00236C                     u2690:
  8030   00236C  80D8               	bsf	status,0,c
  8031   00236E  3610               	rlcf	___fladd@grs^0,f,c
  8032   002370  EFBC  F011         	goto	l2979
  8033   002374                     l2977:
  8034   002374  90D8               	bcf	status,0,c
  8035   002376  3610               	rlcf	___fladd@grs^0,f,c
  8036   002378                     l2979:
  8037   002378  500F               	movf	___fladd@bexp^0,w,c
  8038   00237A  B4D8               	btfsc	status,2,c
  8039   00237C  EFC2  F011         	goto	u2701
  8040   002380  EFC4  F011         	goto	u2700
  8041   002384                     u2701:
  8042   002384  EFC5  F011         	goto	l2983
  8043   002388                     u2700:
  8044   002388  060F               	decf	___fladd@bexp^0,f,c
  8045   00238A                     l2983:
  8046   00238A  AE03               	btfss	(___fladd@b+2)^0,7,c
  8047   00238C  EFCA  F011         	goto	u2711
  8048   002390  EFCC  F011         	goto	u2710
  8049   002394                     u2711:
  8050   002394  EFA2  F011         	goto	l2967
  8051   002398                     u2710:
  8052   002398                     l2985:
  8053   002398  0E00               	movlw	0
  8054   00239A  6E0E               	movwf	___fladd@aexp^0,c
  8055   00239C  AE10               	btfss	___fladd@grs^0,7,c
  8056   00239E  EFD3  F011         	goto	u2721
  8057   0023A2  EFD5  F011         	goto	u2720
  8058   0023A6                     u2721:
  8059   0023A6  EFED  F011         	goto	l1044
  8060   0023AA                     u2720:
  8061   0023AA  C010  F009         	movff	___fladd@grs,??___fladd
  8062   0023AE  0E7F               	movlw	127
  8063   0023B0  1609               	andwf	??___fladd^0,f,c
  8064   0023B2  B4D8               	btfsc	status,2,c
  8065   0023B4  EFDE  F011         	goto	u2731
  8066   0023B8  EFE0  F011         	goto	u2730
  8067   0023BC                     u2731:
  8068   0023BC  EFE4  F011         	goto	l1045
  8069   0023C0                     u2730:
  8070   0023C0                     l2991:
  8071   0023C0  0E01               	movlw	1
  8072   0023C2  6E0E               	movwf	___fladd@aexp^0,c
  8073   0023C4  EFED  F011         	goto	l1044
  8074   0023C8                     l1045:
  8075   0023C8  A001               	btfss	___fladd@b^0,0,c
  8076   0023CA  EFE9  F011         	goto	u2741
  8077   0023CE  EFEB  F011         	goto	u2740
  8078   0023D2                     u2741:
  8079   0023D2  EFED  F011         	goto	l1044
  8080   0023D6                     u2740:
  8081   0023D6  EFE0  F011         	goto	l2991
  8082   0023DA                     l1044:
  8083   0023DA  500E               	movf	___fladd@aexp^0,w,c
  8084   0023DC  B4D8               	btfsc	status,2,c
  8085   0023DE  EFF3  F011         	goto	u2751
  8086   0023E2  EFF5  F011         	goto	u2750
  8087   0023E6                     u2751:
  8088   0023E6  EF20  F012         	goto	l3003
  8089   0023EA                     u2750:
  8090   0023EA  0E01               	movlw	1
  8091   0023EC  2601               	addwf	___fladd@b^0,f,c
  8092   0023EE  0E00               	movlw	0
  8093   0023F0  2202               	addwfc	(___fladd@b+1)^0,f,c
  8094   0023F2  2203               	addwfc	(___fladd@b+2)^0,f,c
  8095   0023F4  2204               	addwfc	(___fladd@b+3)^0,f,c
  8096   0023F6  A004               	btfss	(___fladd@b+3)^0,0,c
  8097   0023F8  EF00  F012         	goto	u2761
  8098   0023FC  EF02  F012         	goto	u2760
  8099   002400                     u2761:
  8100   002400  EF20  F012         	goto	l3003
  8101   002404                     u2760:
  8102   002404  C001  F009         	movff	___fladd@b,??___fladd
  8103   002408  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8104   00240C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8105   002410  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8106   002414  340C               	rlcf	(??___fladd+3)^0,w,c
  8107   002416  320C               	rrcf	(??___fladd+3)^0,f,c
  8108   002418  320B               	rrcf	(??___fladd+2)^0,f,c
  8109   00241A  320A               	rrcf	(??___fladd+1)^0,f,c
  8110   00241C  3209               	rrcf	??___fladd^0,f,c
  8111   00241E  C009  F001         	movff	??___fladd,___fladd@b
  8112   002422  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8113   002426  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8114   00242A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8115   00242E  280F               	incf	___fladd@bexp^0,w,c
  8116   002430  B4D8               	btfsc	status,2,c
  8117   002432  EF1D  F012         	goto	u2771
  8118   002436  EF1F  F012         	goto	u2770
  8119   00243A                     u2771:
  8120   00243A  EF20  F012         	goto	l3003
  8121   00243E                     u2770:
  8122   00243E  2A0F               	incf	___fladd@bexp^0,f,c
  8123   002440                     l3003:
  8124   002440  280F               	incf	___fladd@bexp^0,w,c
  8125   002442  B4D8               	btfsc	status,2,c
  8126   002444  EF26  F012         	goto	u2781
  8127   002448  EF28  F012         	goto	u2780
  8128   00244C                     u2781:
  8129   00244C  EF30  F012         	goto	l3007
  8130   002450                     u2780:
  8131   002450  500F               	movf	___fladd@bexp^0,w,c
  8132   002452  A4D8               	btfss	status,2,c
  8133   002454  EF2E  F012         	goto	u2791
  8134   002458  EF30  F012         	goto	u2790
  8135   00245C                     u2791:
  8136   00245C  EF42  F012         	goto	l3011
  8137   002460                     u2790:
  8138   002460                     l3007:
  8139   002460  0E00               	movlw	0
  8140   002462  6E01               	movwf	___fladd@b^0,c
  8141   002464  0E00               	movlw	0
  8142   002466  6E02               	movwf	(___fladd@b+1)^0,c
  8143   002468  0E00               	movlw	0
  8144   00246A  6E03               	movwf	(___fladd@b+2)^0,c
  8145   00246C  0E00               	movlw	0
  8146   00246E  6E04               	movwf	(___fladd@b+3)^0,c
  8147   002470  500F               	movf	___fladd@bexp^0,w,c
  8148   002472  A4D8               	btfss	status,2,c
  8149   002474  EF3E  F012         	goto	u2801
  8150   002478  EF40  F012         	goto	u2800
  8151   00247C                     u2801:
  8152   00247C  EF42  F012         	goto	l3011
  8153   002480                     u2800:
  8154   002480  0E00               	movlw	0
  8155   002482  6E0D               	movwf	___fladd@signs^0,c
  8156   002484                     l3011:
  8157   002484  A00F               	btfss	___fladd@bexp^0,0,c
  8158   002486  EF47  F012         	goto	u2811
  8159   00248A  EF49  F012         	goto	u2810
  8160   00248E                     u2811:
  8161   00248E  EF4C  F012         	goto	l3015
  8162   002492                     u2810:
  8163   002492  8E03               	bsf	(___fladd@b+2)^0,7,c
  8164   002494  EF4D  F012         	goto	l3017
  8165   002498                     l3015:
  8166   002498  9E03               	bcf	(___fladd@b+2)^0,7,c
  8167   00249A                     l3017:
  8168   00249A  90D8               	bcf	status,0,c
  8169   00249C  300F               	rrcf	___fladd@bexp^0,w,c
  8170   00249E  6E04               	movwf	(___fladd@b+3)^0,c
  8171   0024A0  AE0D               	btfss	___fladd@signs^0,7,c
  8172   0024A2  EF55  F012         	goto	u2821
  8173   0024A6  EF57  F012         	goto	u2820
  8174   0024AA                     u2821:
  8175   0024AA  EF58  F012         	goto	l3023
  8176   0024AE                     u2820:
  8177   0024AE  8E04               	bsf	(___fladd@b+3)^0,7,c
  8178   0024B0                     l3023:
  8179   0024B0  C001  F001         	movff	___fladd@b,?___fladd
  8180   0024B4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8181   0024B8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8182   0024BC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8183   0024C0                     l1027:
  8184   0024C0  0012               	return		;funcret
  8185   0024C2                     __end_of___fladd:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function ___flmul *****************
  8189 ;; Defined at:
  8190 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  b               4   58[COMRAM] unsigned char 
  8193 ;;  a               4   62[COMRAM] unsigned char 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  prod            4   77[COMRAM] struct .
  8196 ;;  grs             4   71[COMRAM] unsigned long 
  8197 ;;  temp            2   81[COMRAM] struct .
  8198 ;;  bexp            1   76[COMRAM] unsigned char 
  8199 ;;  aexp            1   75[COMRAM] unsigned char 
  8200 ;;  sign            1   70[COMRAM] unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  4   58[COMRAM] unsigned char 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, prodl, prodh
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8210 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;Total ram usage:       25 bytes
  8215 ;; Hardware stack levels used: 1
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_custom_floatmodulo
  8220 ;;		_RGB_to_HSV
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text40
  8225   0024C2                     __ptext40:
  8226                           	callstack 0
  8227   0024C2                     ___flmul:
  8228                           	callstack 27
  8229   0024C2  503E               	movf	(___flmul@b+3)^0,w,c
  8230   0024C4  0B80               	andlw	128
  8231   0024C6  6E47               	movwf	___flmul@sign^0,c
  8232   0024C8  503E               	movf	(___flmul@b+3)^0,w,c
  8233   0024CA  243E               	addwf	(___flmul@b+3)^0,w,c
  8234   0024CC  6E4D               	movwf	___flmul@bexp^0,c
  8235   0024CE  AE3D               	btfss	(___flmul@b+2)^0,7,c
  8236   0024D0  EF6C  F012         	goto	u3081
  8237   0024D4  EF6E  F012         	goto	u3080
  8238   0024D8                     u3081:
  8239   0024D8  EF6F  F012         	goto	l3175
  8240   0024DC                     u3080:
  8241   0024DC  804D               	bsf	___flmul@bexp^0,0,c
  8242   0024DE                     l3175:
  8243   0024DE  504D               	movf	___flmul@bexp^0,w,c
  8244   0024E0  B4D8               	btfsc	status,2,c
  8245   0024E2  EF75  F012         	goto	u3091
  8246   0024E6  EF77  F012         	goto	u3090
  8247   0024EA                     u3091:
  8248   0024EA  EF8A  F012         	goto	l3183
  8249   0024EE                     u3090:
  8250   0024EE  284D               	incf	___flmul@bexp^0,w,c
  8251   0024F0  A4D8               	btfss	status,2,c
  8252   0024F2  EF7D  F012         	goto	u3101
  8253   0024F6  EF7F  F012         	goto	u3100
  8254   0024FA                     u3101:
  8255   0024FA  EF87  F012         	goto	l3181
  8256   0024FE                     u3100:
  8257   0024FE  0E00               	movlw	0
  8258   002500  6E3B               	movwf	___flmul@b^0,c
  8259   002502  0E00               	movlw	0
  8260   002504  6E3C               	movwf	(___flmul@b+1)^0,c
  8261   002506  0E00               	movlw	0
  8262   002508  6E3D               	movwf	(___flmul@b+2)^0,c
  8263   00250A  0E00               	movlw	0
  8264   00250C  6E3E               	movwf	(___flmul@b+3)^0,c
  8265   00250E                     l3181:
  8266   00250E  8E3D               	bsf	(___flmul@b+2)^0,7,c
  8267   002510  EF92  F012         	goto	l3185
  8268   002514                     l3183:
  8269   002514  0E00               	movlw	0
  8270   002516  6E3B               	movwf	___flmul@b^0,c
  8271   002518  0E00               	movlw	0
  8272   00251A  6E3C               	movwf	(___flmul@b+1)^0,c
  8273   00251C  0E00               	movlw	0
  8274   00251E  6E3D               	movwf	(___flmul@b+2)^0,c
  8275   002520  0E00               	movlw	0
  8276   002522  6E3E               	movwf	(___flmul@b+3)^0,c
  8277   002524                     l3185:
  8278   002524  5042               	movf	(___flmul@a+3)^0,w,c
  8279   002526  0B80               	andlw	128
  8280   002528  1A47               	xorwf	___flmul@sign^0,f,c
  8281   00252A  5042               	movf	(___flmul@a+3)^0,w,c
  8282   00252C  2442               	addwf	(___flmul@a+3)^0,w,c
  8283   00252E  6E4C               	movwf	___flmul@aexp^0,c
  8284   002530  AE41               	btfss	(___flmul@a+2)^0,7,c
  8285   002532  EF9D  F012         	goto	u3111
  8286   002536  EF9F  F012         	goto	u3110
  8287   00253A                     u3111:
  8288   00253A  EFA0  F012         	goto	l3193
  8289   00253E                     u3110:
  8290   00253E  804C               	bsf	___flmul@aexp^0,0,c
  8291   002540                     l3193:
  8292   002540  504C               	movf	___flmul@aexp^0,w,c
  8293   002542  B4D8               	btfsc	status,2,c
  8294   002544  EFA6  F012         	goto	u3121
  8295   002548  EFA8  F012         	goto	u3120
  8296   00254C                     u3121:
  8297   00254C  EFBB  F012         	goto	l3201
  8298   002550                     u3120:
  8299   002550  284C               	incf	___flmul@aexp^0,w,c
  8300   002552  A4D8               	btfss	status,2,c
  8301   002554  EFAE  F012         	goto	u3131
  8302   002558  EFB0  F012         	goto	u3130
  8303   00255C                     u3131:
  8304   00255C  EFB8  F012         	goto	l3199
  8305   002560                     u3130:
  8306   002560  0E00               	movlw	0
  8307   002562  6E3F               	movwf	___flmul@a^0,c
  8308   002564  0E00               	movlw	0
  8309   002566  6E40               	movwf	(___flmul@a+1)^0,c
  8310   002568  0E00               	movlw	0
  8311   00256A  6E41               	movwf	(___flmul@a+2)^0,c
  8312   00256C  0E00               	movlw	0
  8313   00256E  6E42               	movwf	(___flmul@a+3)^0,c
  8314   002570                     l3199:
  8315   002570  8E41               	bsf	(___flmul@a+2)^0,7,c
  8316   002572  EFC3  F012         	goto	l1104
  8317   002576                     l3201:
  8318   002576  0E00               	movlw	0
  8319   002578  6E3F               	movwf	___flmul@a^0,c
  8320   00257A  0E00               	movlw	0
  8321   00257C  6E40               	movwf	(___flmul@a+1)^0,c
  8322   00257E  0E00               	movlw	0
  8323   002580  6E41               	movwf	(___flmul@a+2)^0,c
  8324   002582  0E00               	movlw	0
  8325   002584  6E42               	movwf	(___flmul@a+3)^0,c
  8326   002586                     l1104:
  8327   002586  504C               	movf	___flmul@aexp^0,w,c
  8328   002588  B4D8               	btfsc	status,2,c
  8329   00258A  EFC9  F012         	goto	u3141
  8330   00258E  EFCB  F012         	goto	u3140
  8331   002592                     u3141:
  8332   002592  EFD3  F012         	goto	l3205
  8333   002596                     u3140:
  8334   002596  504D               	movf	___flmul@bexp^0,w,c
  8335   002598  A4D8               	btfss	status,2,c
  8336   00259A  EFD1  F012         	goto	u3151
  8337   00259E  EFD3  F012         	goto	u3150
  8338   0025A2                     u3151:
  8339   0025A2  EFDD  F012         	goto	l3209
  8340   0025A6                     u3150:
  8341   0025A6                     l3205:
  8342   0025A6  0E00               	movlw	0
  8343   0025A8  6E3B               	movwf	?___flmul^0,c
  8344   0025AA  0E00               	movlw	0
  8345   0025AC  6E3C               	movwf	(?___flmul+1)^0,c
  8346   0025AE  0E00               	movlw	0
  8347   0025B0  6E3D               	movwf	(?___flmul+2)^0,c
  8348   0025B2  0E00               	movlw	0
  8349   0025B4  6E3E               	movwf	(?___flmul+3)^0,c
  8350   0025B6  EF75  F014         	goto	l1108
  8351   0025BA                     l3209:
  8352   0025BA  5041               	movf	(___flmul@a+2)^0,w,c
  8353   0025BC  023B               	mulwf	___flmul@b^0,c
  8354   0025BE  CFF3 F052          	movff	prodl,___flmul@temp
  8355   0025C2  CFF4 F053          	movff	prodh,___flmul@temp+1
  8356   0025C6  5052               	movf	___flmul@temp^0,w,c
  8357   0025C8  6E48               	movwf	___flmul@grs^0,c
  8358   0025CA  6A49               	clrf	(___flmul@grs+1)^0,c
  8359   0025CC  6A4A               	clrf	(___flmul@grs+2)^0,c
  8360   0025CE  6A4B               	clrf	(___flmul@grs+3)^0,c
  8361   0025D0  5053               	movf	(___flmul@temp+1)^0,w,c
  8362   0025D2  6E4E               	movwf	___flmul@prod^0,c
  8363   0025D4  6A4F               	clrf	(___flmul@prod+1)^0,c
  8364   0025D6  6A50               	clrf	(___flmul@prod+2)^0,c
  8365   0025D8  6A51               	clrf	(___flmul@prod+3)^0,c
  8366   0025DA  5040               	movf	(___flmul@a+1)^0,w,c
  8367   0025DC  023C               	mulwf	(___flmul@b+1)^0,c
  8368   0025DE  CFF3 F052          	movff	prodl,___flmul@temp
  8369   0025E2  CFF4 F053          	movff	prodh,___flmul@temp+1
  8370   0025E6  5052               	movf	___flmul@temp^0,w,c
  8371   0025E8  2648               	addwf	___flmul@grs^0,f,c
  8372   0025EA  0E00               	movlw	0
  8373   0025EC  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8374   0025EE  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8375   0025F0  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8376   0025F2  5053               	movf	(___flmul@temp+1)^0,w,c
  8377   0025F4  264E               	addwf	___flmul@prod^0,f,c
  8378   0025F6  0E00               	movlw	0
  8379   0025F8  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8380   0025FA  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8381   0025FC  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8382   0025FE  503F               	movf	___flmul@a^0,w,c
  8383   002600  023D               	mulwf	(___flmul@b+2)^0,c
  8384   002602  CFF3 F052          	movff	prodl,___flmul@temp
  8385   002606  CFF4 F053          	movff	prodh,___flmul@temp+1
  8386   00260A  5052               	movf	___flmul@temp^0,w,c
  8387   00260C  2648               	addwf	___flmul@grs^0,f,c
  8388   00260E  0E00               	movlw	0
  8389   002610  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8390   002612  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8391   002614  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8392   002616  5053               	movf	(___flmul@temp+1)^0,w,c
  8393   002618  264E               	addwf	___flmul@prod^0,f,c
  8394   00261A  0E00               	movlw	0
  8395   00261C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8396   00261E  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8397   002620  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8398   002622  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8399   002626  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8400   00262A  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8401   00262E  6A48               	clrf	___flmul@grs^0,c
  8402   002630  503F               	movf	___flmul@a^0,w,c
  8403   002632  023C               	mulwf	(___flmul@b+1)^0,c
  8404   002634  CFF3 F052          	movff	prodl,___flmul@temp
  8405   002638  CFF4 F053          	movff	prodh,___flmul@temp+1
  8406   00263C  5052               	movf	___flmul@temp^0,w,c
  8407   00263E  2648               	addwf	___flmul@grs^0,f,c
  8408   002640  5053               	movf	(___flmul@temp+1)^0,w,c
  8409   002642  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8410   002644  0E00               	movlw	0
  8411   002646  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8412   002648  0E00               	movlw	0
  8413   00264A  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8414   00264C  5040               	movf	(___flmul@a+1)^0,w,c
  8415   00264E  023B               	mulwf	___flmul@b^0,c
  8416   002650  CFF3 F052          	movff	prodl,___flmul@temp
  8417   002654  CFF4 F053          	movff	prodh,___flmul@temp+1
  8418   002658  5052               	movf	___flmul@temp^0,w,c
  8419   00265A  2648               	addwf	___flmul@grs^0,f,c
  8420   00265C  5053               	movf	(___flmul@temp+1)^0,w,c
  8421   00265E  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8422   002660  0E00               	movlw	0
  8423   002662  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8424   002664  0E00               	movlw	0
  8425   002666  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8426   002668  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8427   00266C  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8428   002670  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8429   002674  6A48               	clrf	___flmul@grs^0,c
  8430   002676  503F               	movf	___flmul@a^0,w,c
  8431   002678  023B               	mulwf	___flmul@b^0,c
  8432   00267A  CFF3 F052          	movff	prodl,___flmul@temp
  8433   00267E  CFF4 F053          	movff	prodh,___flmul@temp+1
  8434   002682  5052               	movf	___flmul@temp^0,w,c
  8435   002684  2648               	addwf	___flmul@grs^0,f,c
  8436   002686  5053               	movf	(___flmul@temp+1)^0,w,c
  8437   002688  2249               	addwfc	(___flmul@grs+1)^0,f,c
  8438   00268A  0E00               	movlw	0
  8439   00268C  224A               	addwfc	(___flmul@grs+2)^0,f,c
  8440   00268E  0E00               	movlw	0
  8441   002690  224B               	addwfc	(___flmul@grs+3)^0,f,c
  8442   002692  5041               	movf	(___flmul@a+2)^0,w,c
  8443   002694  023C               	mulwf	(___flmul@b+1)^0,c
  8444   002696  CFF3 F052          	movff	prodl,___flmul@temp
  8445   00269A  CFF4 F053          	movff	prodh,___flmul@temp+1
  8446   00269E  5052               	movf	___flmul@temp^0,w,c
  8447   0026A0  264E               	addwf	___flmul@prod^0,f,c
  8448   0026A2  5053               	movf	(___flmul@temp+1)^0,w,c
  8449   0026A4  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8450   0026A6  0E00               	movlw	0
  8451   0026A8  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8452   0026AA  0E00               	movlw	0
  8453   0026AC  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8454   0026AE  5040               	movf	(___flmul@a+1)^0,w,c
  8455   0026B0  023D               	mulwf	(___flmul@b+2)^0,c
  8456   0026B2  CFF3 F052          	movff	prodl,___flmul@temp
  8457   0026B6  CFF4 F053          	movff	prodh,___flmul@temp+1
  8458   0026BA  5052               	movf	___flmul@temp^0,w,c
  8459   0026BC  264E               	addwf	___flmul@prod^0,f,c
  8460   0026BE  5053               	movf	(___flmul@temp+1)^0,w,c
  8461   0026C0  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8462   0026C2  0E00               	movlw	0
  8463   0026C4  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8464   0026C6  0E00               	movlw	0
  8465   0026C8  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8466   0026CA  5041               	movf	(___flmul@a+2)^0,w,c
  8467   0026CC  023D               	mulwf	(___flmul@b+2)^0,c
  8468   0026CE  CFF3 F052          	movff	prodl,___flmul@temp
  8469   0026D2  CFF4 F053          	movff	prodh,___flmul@temp+1
  8470   0026D6  5052               	movf	___flmul@temp^0,w,c
  8471   0026D8  6E43               	movwf	??___flmul^0,c
  8472   0026DA  5053               	movf	(___flmul@temp+1)^0,w,c
  8473   0026DC  6E44               	movwf	(??___flmul+1)^0,c
  8474   0026DE  6A45               	clrf	(??___flmul+2)^0,c
  8475   0026E0  6A46               	clrf	(??___flmul+3)^0,c
  8476   0026E2  C045  F046         	movff	??___flmul+2,??___flmul+3
  8477   0026E6  C044  F045         	movff	??___flmul+1,??___flmul+2
  8478   0026EA  C043  F044         	movff	??___flmul,??___flmul+1
  8479   0026EE  6A43               	clrf	??___flmul^0,c
  8480   0026F0  5043               	movf	??___flmul^0,w,c
  8481   0026F2  264E               	addwf	___flmul@prod^0,f,c
  8482   0026F4  5044               	movf	(??___flmul+1)^0,w,c
  8483   0026F6  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8484   0026F8  5045               	movf	(??___flmul+2)^0,w,c
  8485   0026FA  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8486   0026FC  5046               	movf	(??___flmul+3)^0,w,c
  8487   0026FE  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8488   002700  C048  F043         	movff	___flmul@grs,??___flmul
  8489   002704  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  8490   002708  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  8491   00270C  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  8492   002710  0E19               	movlw	25
  8493   002712  EF90  F013         	goto	u3160
  8494   002716                     u3165:
  8495   002716  90D8               	bcf	status,0,c
  8496   002718  3246               	rrcf	(??___flmul+3)^0,f,c
  8497   00271A  3245               	rrcf	(??___flmul+2)^0,f,c
  8498   00271C  3244               	rrcf	(??___flmul+1)^0,f,c
  8499   00271E  3243               	rrcf	??___flmul^0,f,c
  8500   002720                     u3160:
  8501   002720  2EE8               	decfsz	wreg,f,c
  8502   002722  EF8B  F013         	goto	u3165
  8503   002726  5043               	movf	??___flmul^0,w,c
  8504   002728  264E               	addwf	___flmul@prod^0,f,c
  8505   00272A  5044               	movf	(??___flmul+1)^0,w,c
  8506   00272C  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8507   00272E  5045               	movf	(??___flmul+2)^0,w,c
  8508   002730  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8509   002732  5046               	movf	(??___flmul+3)^0,w,c
  8510   002734  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8511   002736  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  8512   00273A  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  8513   00273E  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  8514   002742  6A48               	clrf	___flmul@grs^0,c
  8515   002744  504C               	movf	___flmul@aexp^0,w,c
  8516   002746  C04D  F043         	movff	___flmul@bexp,??___flmul
  8517   00274A  6A44               	clrf	(??___flmul+1)^0,c
  8518   00274C  2643               	addwf	??___flmul^0,f,c
  8519   00274E  0E00               	movlw	0
  8520   002750  2244               	addwfc	(??___flmul+1)^0,f,c
  8521   002752  0E82               	movlw	130
  8522   002754  2443               	addwf	??___flmul^0,w,c
  8523   002756  6E52               	movwf	___flmul@temp^0,c
  8524   002758  0EFF               	movlw	255
  8525   00275A  2044               	addwfc	(??___flmul+1)^0,w,c
  8526   00275C  6E53               	movwf	(___flmul@temp+1)^0,c
  8527   00275E  EFC6  F013         	goto	l3257
  8528   002762                     l3251:
  8529   002762  90D8               	bcf	status,0,c
  8530   002764  364E               	rlcf	___flmul@prod^0,f,c
  8531   002766  364F               	rlcf	(___flmul@prod+1)^0,f,c
  8532   002768  3650               	rlcf	(___flmul@prod+2)^0,f,c
  8533   00276A  3651               	rlcf	(___flmul@prod+3)^0,f,c
  8534   00276C  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8535   00276E  EFBB  F013         	goto	u3171
  8536   002772  EFBD  F013         	goto	u3170
  8537   002776                     u3171:
  8538   002776  EFBE  F013         	goto	l1111
  8539   00277A                     u3170:
  8540   00277A  804E               	bsf	___flmul@prod^0,0,c
  8541   00277C                     l1111:
  8542   00277C  90D8               	bcf	status,0,c
  8543   00277E  3648               	rlcf	___flmul@grs^0,f,c
  8544   002780  3649               	rlcf	(___flmul@grs+1)^0,f,c
  8545   002782  364A               	rlcf	(___flmul@grs+2)^0,f,c
  8546   002784  364B               	rlcf	(___flmul@grs+3)^0,f,c
  8547   002786  0652               	decf	___flmul@temp^0,f,c
  8548   002788  A0D8               	btfss	status,0,c
  8549   00278A  0653               	decf	(___flmul@temp+1)^0,f,c
  8550   00278C                     l3257:
  8551   00278C  AE50               	btfss	(___flmul@prod+2)^0,7,c
  8552   00278E  EFCB  F013         	goto	u3181
  8553   002792  EFCD  F013         	goto	u3180
  8554   002796                     u3181:
  8555   002796  EFB1  F013         	goto	l3251
  8556   00279A                     u3180:
  8557   00279A  0E00               	movlw	0
  8558   00279C  6E4C               	movwf	___flmul@aexp^0,c
  8559   00279E  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  8560   0027A0  EFD4  F013         	goto	u3191
  8561   0027A4  EFD6  F013         	goto	u3190
  8562   0027A8                     u3191:
  8563   0027A8  EFFA  F013         	goto	l1113
  8564   0027AC                     u3190:
  8565   0027AC  0EFF               	movlw	255
  8566   0027AE  1448               	andwf	___flmul@grs^0,w,c
  8567   0027B0  6E43               	movwf	??___flmul^0,c
  8568   0027B2  0EFF               	movlw	255
  8569   0027B4  1449               	andwf	(___flmul@grs+1)^0,w,c
  8570   0027B6  6E44               	movwf	(??___flmul+1)^0,c
  8571   0027B8  0EFF               	movlw	255
  8572   0027BA  144A               	andwf	(___flmul@grs+2)^0,w,c
  8573   0027BC  6E45               	movwf	(??___flmul+2)^0,c
  8574   0027BE  0E7F               	movlw	127
  8575   0027C0  144B               	andwf	(___flmul@grs+3)^0,w,c
  8576   0027C2  6E46               	movwf	(??___flmul+3)^0,c
  8577   0027C4  5043               	movf	??___flmul^0,w,c
  8578   0027C6  1044               	iorwf	(??___flmul+1)^0,w,c
  8579   0027C8  1045               	iorwf	(??___flmul+2)^0,w,c
  8580   0027CA  1046               	iorwf	(??___flmul+3)^0,w,c
  8581   0027CC  B4D8               	btfsc	status,2,c
  8582   0027CE  EFEB  F013         	goto	u3201
  8583   0027D2  EFED  F013         	goto	u3200
  8584   0027D6                     u3201:
  8585   0027D6  EFF1  F013         	goto	l1114
  8586   0027DA                     u3200:
  8587   0027DA                     l3265:
  8588   0027DA  0E01               	movlw	1
  8589   0027DC  6E4C               	movwf	___flmul@aexp^0,c
  8590   0027DE  EFFA  F013         	goto	l1113
  8591   0027E2                     l1114:
  8592   0027E2  A04E               	btfss	___flmul@prod^0,0,c
  8593   0027E4  EFF6  F013         	goto	u3211
  8594   0027E8  EFF8  F013         	goto	u3210
  8595   0027EC                     u3211:
  8596   0027EC  EFFA  F013         	goto	l1113
  8597   0027F0                     u3210:
  8598   0027F0  EFED  F013         	goto	l3265
  8599   0027F4                     l1113:
  8600   0027F4  504C               	movf	___flmul@aexp^0,w,c
  8601   0027F6  B4D8               	btfsc	status,2,c
  8602   0027F8  EF00  F014         	goto	u3221
  8603   0027FC  EF02  F014         	goto	u3220
  8604   002800                     u3221:
  8605   002800  EF26  F014         	goto	l3277
  8606   002804                     u3220:
  8607   002804  0E01               	movlw	1
  8608   002806  264E               	addwf	___flmul@prod^0,f,c
  8609   002808  0E00               	movlw	0
  8610   00280A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  8611   00280C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  8612   00280E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  8613   002810  A051               	btfss	(___flmul@prod+3)^0,0,c
  8614   002812  EF0D  F014         	goto	u3231
  8615   002816  EF0F  F014         	goto	u3230
  8616   00281A                     u3231:
  8617   00281A  EF26  F014         	goto	l3277
  8618   00281E                     u3230:
  8619   00281E  C04E  F043         	movff	___flmul@prod,??___flmul
  8620   002822  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  8621   002826  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  8622   00282A  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  8623   00282E  3446               	rlcf	(??___flmul+3)^0,w,c
  8624   002830  3246               	rrcf	(??___flmul+3)^0,f,c
  8625   002832  3245               	rrcf	(??___flmul+2)^0,f,c
  8626   002834  3244               	rrcf	(??___flmul+1)^0,f,c
  8627   002836  3243               	rrcf	??___flmul^0,f,c
  8628   002838  C043  F04E         	movff	??___flmul,___flmul@prod
  8629   00283C  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  8630   002840  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  8631   002844  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  8632   002848  4A52               	infsnz	___flmul@temp^0,f,c
  8633   00284A  2A53               	incf	(___flmul@temp+1)^0,f,c
  8634   00284C                     l3277:
  8635   00284C  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  8636   00284E  EF31  F014         	goto	u3241
  8637   002852  5053               	movf	(___flmul@temp+1)^0,w,c
  8638   002854  E108               	bnz	u3240
  8639   002856  2852               	incf	___flmul@temp^0,w,c
  8640   002858  A0D8               	btfss	status,0,c
  8641   00285A  EF31  F014         	goto	u3241
  8642   00285E  EF33  F014         	goto	u3240
  8643   002862                     u3241:
  8644   002862  EF3D  F014         	goto	l3281
  8645   002866                     u3240:
  8646   002866  0E00               	movlw	0
  8647   002868  6E4E               	movwf	___flmul@prod^0,c
  8648   00286A  0E00               	movlw	0
  8649   00286C  6E4F               	movwf	(___flmul@prod+1)^0,c
  8650   00286E  0E80               	movlw	128
  8651   002870  6E50               	movwf	(___flmul@prod+2)^0,c
  8652   002872  0E7F               	movlw	127
  8653   002874  6E51               	movwf	(___flmul@prod+3)^0,c
  8654   002876  EF6B  F014         	goto	l3293
  8655   00287A                     l3281:
  8656   00287A  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  8657   00287C  EF4A  F014         	goto	u3250
  8658   002880  5053               	movf	(___flmul@temp+1)^0,w,c
  8659   002882  E106               	bnz	u3251
  8660   002884  0452               	decf	___flmul@temp^0,w,c
  8661   002886  B0D8               	btfsc	status,0,c
  8662   002888  EF48  F014         	goto	u3251
  8663   00288C  EF4A  F014         	goto	u3250
  8664   002890                     u3251:
  8665   002890  EF56  F014         	goto	l1121
  8666   002894                     u3250:
  8667   002894  0E00               	movlw	0
  8668   002896  6E4E               	movwf	___flmul@prod^0,c
  8669   002898  0E00               	movlw	0
  8670   00289A  6E4F               	movwf	(___flmul@prod+1)^0,c
  8671   00289C  0E00               	movlw	0
  8672   00289E  6E50               	movwf	(___flmul@prod+2)^0,c
  8673   0028A0  0E00               	movlw	0
  8674   0028A2  6E51               	movwf	(___flmul@prod+3)^0,c
  8675   0028A4  0E00               	movlw	0
  8676   0028A6  6E47               	movwf	___flmul@sign^0,c
  8677   0028A8  EF6B  F014         	goto	l3293
  8678   0028AC                     l1121:
  8679   0028AC  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  8680   0028B0  0EFF               	movlw	255
  8681   0028B2  164E               	andwf	___flmul@prod^0,f,c
  8682   0028B4  0EFF               	movlw	255
  8683   0028B6  164F               	andwf	(___flmul@prod+1)^0,f,c
  8684   0028B8  0E7F               	movlw	127
  8685   0028BA  1650               	andwf	(___flmul@prod+2)^0,f,c
  8686   0028BC  0E00               	movlw	0
  8687   0028BE  1651               	andwf	(___flmul@prod+3)^0,f,c
  8688   0028C0  A04D               	btfss	___flmul@bexp^0,0,c
  8689   0028C2  EF65  F014         	goto	u3261
  8690   0028C6  EF67  F014         	goto	u3260
  8691   0028CA                     u3261:
  8692   0028CA  EF68  F014         	goto	l3291
  8693   0028CE                     u3260:
  8694   0028CE  8E50               	bsf	(___flmul@prod+2)^0,7,c
  8695   0028D0                     l3291:
  8696   0028D0  90D8               	bcf	status,0,c
  8697   0028D2  304D               	rrcf	___flmul@bexp^0,w,c
  8698   0028D4  6E51               	movwf	(___flmul@prod+3)^0,c
  8699   0028D6                     l3293:
  8700   0028D6  5047               	movf	___flmul@sign^0,w,c
  8701   0028D8  1251               	iorwf	(___flmul@prod+3)^0,f,c
  8702   0028DA  C04E  F03B         	movff	___flmul@prod,?___flmul
  8703   0028DE  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  8704   0028E2  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  8705   0028E6  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  8706   0028EA                     l1108:
  8707   0028EA  0012               	return		;funcret
  8708   0028EC                     __end_of___flmul:
  8709                           	callstack 0
  8710                           
  8711 ;; *************** function ___fleq *****************
  8712 ;; Defined at:
  8713 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  ff1             4    0[COMRAM] unsigned char 
  8716 ;;  ff2             4    4[COMRAM] unsigned char 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;		None               void
  8721 ;; Registers used:
  8722 ;;		wreg, status,2, status,0
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;Total ram usage:       12 bytes
  8733 ;; Hardware stack levels used: 1
  8734 ;; This function calls:
  8735 ;;		Nothing
  8736 ;; This function is called by:
  8737 ;;		_custom_floatmodulo
  8738 ;;		_RGB_to_HSV
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           	psect	text41
  8743   004040                     __ptext41:
  8744                           	callstack 0
  8745   004040                     ___fleq:
  8746                           	callstack 27
  8747   004040  0E00               	movlw	0
  8748   004042  1401               	andwf	___fleq@ff1^0,w,c
  8749   004044  6E09               	movwf	??___fleq^0,c
  8750   004046  0E00               	movlw	0
  8751   004048  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8752   00404A  6E0A               	movwf	(??___fleq+1)^0,c
  8753   00404C  0E80               	movlw	128
  8754   00404E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8755   004050  6E0B               	movwf	(??___fleq+2)^0,c
  8756   004052  0E7F               	movlw	127
  8757   004054  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8758   004056  6E0C               	movwf	(??___fleq+3)^0,c
  8759   004058  5009               	movf	??___fleq^0,w,c
  8760   00405A  100A               	iorwf	(??___fleq+1)^0,w,c
  8761   00405C  100B               	iorwf	(??___fleq+2)^0,w,c
  8762   00405E  100C               	iorwf	(??___fleq+3)^0,w,c
  8763   004060  A4D8               	btfss	status,2,c
  8764   004062  EF35  F020         	goto	u3271
  8765   004066  EF37  F020         	goto	u3270
  8766   00406A                     u3271:
  8767   00406A  EF3F  F020         	goto	l3309
  8768   00406E                     u3270:
  8769   00406E  0E00               	movlw	0
  8770   004070  6E01               	movwf	___fleq@ff1^0,c
  8771   004072  0E00               	movlw	0
  8772   004074  6E02               	movwf	(___fleq@ff1+1)^0,c
  8773   004076  0E00               	movlw	0
  8774   004078  6E03               	movwf	(___fleq@ff1+2)^0,c
  8775   00407A  0E00               	movlw	0
  8776   00407C  6E04               	movwf	(___fleq@ff1+3)^0,c
  8777   00407E                     l3309:
  8778   00407E  0E00               	movlw	0
  8779   004080  1405               	andwf	___fleq@ff2^0,w,c
  8780   004082  6E09               	movwf	??___fleq^0,c
  8781   004084  0E00               	movlw	0
  8782   004086  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8783   004088  6E0A               	movwf	(??___fleq+1)^0,c
  8784   00408A  0E80               	movlw	128
  8785   00408C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8786   00408E  6E0B               	movwf	(??___fleq+2)^0,c
  8787   004090  0E7F               	movlw	127
  8788   004092  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8789   004094  6E0C               	movwf	(??___fleq+3)^0,c
  8790   004096  5009               	movf	??___fleq^0,w,c
  8791   004098  100A               	iorwf	(??___fleq+1)^0,w,c
  8792   00409A  100B               	iorwf	(??___fleq+2)^0,w,c
  8793   00409C  100C               	iorwf	(??___fleq+3)^0,w,c
  8794   00409E  A4D8               	btfss	status,2,c
  8795   0040A0  EF54  F020         	goto	u3281
  8796   0040A4  EF56  F020         	goto	u3280
  8797   0040A8                     u3281:
  8798   0040A8  EF5E  F020         	goto	l3313
  8799   0040AC                     u3280:
  8800   0040AC  0E00               	movlw	0
  8801   0040AE  6E05               	movwf	___fleq@ff2^0,c
  8802   0040B0  0E00               	movlw	0
  8803   0040B2  6E06               	movwf	(___fleq@ff2+1)^0,c
  8804   0040B4  0E00               	movlw	0
  8805   0040B6  6E07               	movwf	(___fleq@ff2+2)^0,c
  8806   0040B8  0E00               	movlw	0
  8807   0040BA  6E08               	movwf	(___fleq@ff2+3)^0,c
  8808   0040BC                     l3313:
  8809   0040BC  5005               	movf	___fleq@ff2^0,w,c
  8810   0040BE  1801               	xorwf	___fleq@ff1^0,w,c
  8811   0040C0  E10F               	bnz	u3290
  8812   0040C2  5006               	movf	(___fleq@ff2+1)^0,w,c
  8813   0040C4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8814   0040C6  E10C               	bnz	u3290
  8815   0040C8  5007               	movf	(___fleq@ff2+2)^0,w,c
  8816   0040CA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8817   0040CC  E109               	bnz	u3290
  8818   0040CE  5008               	movf	(___fleq@ff2+3)^0,w,c
  8819   0040D0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8820   0040D2  B4D8               	btfsc	status,2,c
  8821   0040D4  EF6E  F020         	goto	u3291
  8822   0040D8  EF70  F020         	goto	u3290
  8823   0040DC                     u3291:
  8824   0040DC  EF73  F020         	goto	l3317
  8825   0040E0                     u3290:
  8826   0040E0  90D8               	bcf	status,0,c
  8827   0040E2  EF74  F020         	goto	l749
  8828   0040E6                     l3317:
  8829   0040E6  80D8               	bsf	status,0,c
  8830   0040E8                     l749:
  8831   0040E8  0012               	return		;funcret
  8832   0040EA                     __end_of___fleq:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function ___fldiv *****************
  8836 ;; Defined at:
  8837 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  b               4   33[COMRAM] unsigned char 
  8840 ;;  a               4   37[COMRAM] unsigned char 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  grs             4   52[COMRAM] unsigned long 
  8843 ;;  rem             4   45[COMRAM] unsigned long 
  8844 ;;  new_exp         2   50[COMRAM] short 
  8845 ;;  aexp            1   57[COMRAM] unsigned char 
  8846 ;;  bexp            1   56[COMRAM] unsigned char 
  8847 ;;  sign            1   49[COMRAM] unsigned char 
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  4   33[COMRAM] unsigned char 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2, status,0
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8857 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;Total ram usage:       25 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_custom_floatmodulo
  8867 ;;		_RGB_to_HSV
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text42
  8872   0028EC                     __ptext42:
  8873                           	callstack 0
  8874   0028EC                     ___fldiv:
  8875                           	callstack 27
  8876   0028EC  5025               	movf	(___fldiv@b+3)^0,w,c
  8877   0028EE  0B80               	andlw	128
  8878   0028F0  6E32               	movwf	___fldiv@sign^0,c
  8879   0028F2  5025               	movf	(___fldiv@b+3)^0,w,c
  8880   0028F4  2425               	addwf	(___fldiv@b+3)^0,w,c
  8881   0028F6  6E39               	movwf	___fldiv@bexp^0,c
  8882   0028F8  AE24               	btfss	(___fldiv@b+2)^0,7,c
  8883   0028FA  EF81  F014         	goto	u2851
  8884   0028FE  EF83  F014         	goto	u2850
  8885   002902                     u2851:
  8886   002902  EF84  F014         	goto	l3037
  8887   002906                     u2850:
  8888   002906  8039               	bsf	___fldiv@bexp^0,0,c
  8889   002908                     l3037:
  8890   002908  5039               	movf	___fldiv@bexp^0,w,c
  8891   00290A  B4D8               	btfsc	status,2,c
  8892   00290C  EF8A  F014         	goto	u2861
  8893   002910  EF8C  F014         	goto	u2860
  8894   002914                     u2861:
  8895   002914  EFA1  F014         	goto	l3047
  8896   002918                     u2860:
  8897   002918  2839               	incf	___fldiv@bexp^0,w,c
  8898   00291A  A4D8               	btfss	status,2,c
  8899   00291C  EF92  F014         	goto	u2871
  8900   002920  EF94  F014         	goto	u2870
  8901   002924                     u2871:
  8902   002924  EF9C  F014         	goto	l3043
  8903   002928                     u2870:
  8904   002928  0E00               	movlw	0
  8905   00292A  6E22               	movwf	___fldiv@b^0,c
  8906   00292C  0E00               	movlw	0
  8907   00292E  6E23               	movwf	(___fldiv@b+1)^0,c
  8908   002930  0E00               	movlw	0
  8909   002932  6E24               	movwf	(___fldiv@b+2)^0,c
  8910   002934  0E00               	movlw	0
  8911   002936  6E25               	movwf	(___fldiv@b+3)^0,c
  8912   002938                     l3043:
  8913   002938  8E24               	bsf	(___fldiv@b+2)^0,7,c
  8914   00293A  0E00               	movlw	0
  8915   00293C  6E25               	movwf	(___fldiv@b+3)^0,c
  8916   00293E  EFA9  F014         	goto	l3049
  8917   002942                     l3047:
  8918   002942  0E00               	movlw	0
  8919   002944  6E22               	movwf	___fldiv@b^0,c
  8920   002946  0E00               	movlw	0
  8921   002948  6E23               	movwf	(___fldiv@b+1)^0,c
  8922   00294A  0E00               	movlw	0
  8923   00294C  6E24               	movwf	(___fldiv@b+2)^0,c
  8924   00294E  0E00               	movlw	0
  8925   002950  6E25               	movwf	(___fldiv@b+3)^0,c
  8926   002952                     l3049:
  8927   002952  5029               	movf	(___fldiv@a+3)^0,w,c
  8928   002954  0B80               	andlw	128
  8929   002956  1A32               	xorwf	___fldiv@sign^0,f,c
  8930   002958  5029               	movf	(___fldiv@a+3)^0,w,c
  8931   00295A  2429               	addwf	(___fldiv@a+3)^0,w,c
  8932   00295C  6E3A               	movwf	___fldiv@aexp^0,c
  8933   00295E  AE28               	btfss	(___fldiv@a+2)^0,7,c
  8934   002960  EFB4  F014         	goto	u2881
  8935   002964  EFB6  F014         	goto	u2880
  8936   002968                     u2881:
  8937   002968  EFB7  F014         	goto	l3057
  8938   00296C                     u2880:
  8939   00296C  803A               	bsf	___fldiv@aexp^0,0,c
  8940   00296E                     l3057:
  8941   00296E  503A               	movf	___fldiv@aexp^0,w,c
  8942   002970  B4D8               	btfsc	status,2,c
  8943   002972  EFBD  F014         	goto	u2891
  8944   002976  EFBF  F014         	goto	u2890
  8945   00297A                     u2891:
  8946   00297A  EFD4  F014         	goto	l3067
  8947   00297E                     u2890:
  8948   00297E  283A               	incf	___fldiv@aexp^0,w,c
  8949   002980  A4D8               	btfss	status,2,c
  8950   002982  EFC5  F014         	goto	u2901
  8951   002986  EFC7  F014         	goto	u2900
  8952   00298A                     u2901:
  8953   00298A  EFCF  F014         	goto	l3063
  8954   00298E                     u2900:
  8955   00298E  0E00               	movlw	0
  8956   002990  6E26               	movwf	___fldiv@a^0,c
  8957   002992  0E00               	movlw	0
  8958   002994  6E27               	movwf	(___fldiv@a+1)^0,c
  8959   002996  0E00               	movlw	0
  8960   002998  6E28               	movwf	(___fldiv@a+2)^0,c
  8961   00299A  0E00               	movlw	0
  8962   00299C  6E29               	movwf	(___fldiv@a+3)^0,c
  8963   00299E                     l3063:
  8964   00299E  8E28               	bsf	(___fldiv@a+2)^0,7,c
  8965   0029A0  0E00               	movlw	0
  8966   0029A2  6E29               	movwf	(___fldiv@a+3)^0,c
  8967   0029A4  EFDC  F014         	goto	l3069
  8968   0029A8                     l3067:
  8969   0029A8  0E00               	movlw	0
  8970   0029AA  6E26               	movwf	___fldiv@a^0,c
  8971   0029AC  0E00               	movlw	0
  8972   0029AE  6E27               	movwf	(___fldiv@a+1)^0,c
  8973   0029B0  0E00               	movlw	0
  8974   0029B2  6E28               	movwf	(___fldiv@a+2)^0,c
  8975   0029B4  0E00               	movlw	0
  8976   0029B6  6E29               	movwf	(___fldiv@a+3)^0,c
  8977   0029B8                     l3069:
  8978   0029B8  5026               	movf	___fldiv@a^0,w,c
  8979   0029BA  1027               	iorwf	(___fldiv@a+1)^0,w,c
  8980   0029BC  1028               	iorwf	(___fldiv@a+2)^0,w,c
  8981   0029BE  1029               	iorwf	(___fldiv@a+3)^0,w,c
  8982   0029C0  A4D8               	btfss	status,2,c
  8983   0029C2  EFE5  F014         	goto	u2911
  8984   0029C6  EFE7  F014         	goto	u2910
  8985   0029CA                     u2911:
  8986   0029CA  EFFF  F014         	goto	l3081
  8987   0029CE                     u2910:
  8988   0029CE  0E00               	movlw	0
  8989   0029D0  6E22               	movwf	___fldiv@b^0,c
  8990   0029D2  0E00               	movlw	0
  8991   0029D4  6E23               	movwf	(___fldiv@b+1)^0,c
  8992   0029D6  0E00               	movlw	0
  8993   0029D8  6E24               	movwf	(___fldiv@b+2)^0,c
  8994   0029DA  0E00               	movlw	0
  8995   0029DC  6E25               	movwf	(___fldiv@b+3)^0,c
  8996   0029DE  0E80               	movlw	128
  8997   0029E0  1224               	iorwf	(___fldiv@b+2)^0,f,c
  8998   0029E2  0E7F               	movlw	127
  8999   0029E4  1225               	iorwf	(___fldiv@b+3)^0,f,c
  9000   0029E6                     l3075:
  9001   0029E6  5032               	movf	___fldiv@sign^0,w,c
  9002   0029E8  1225               	iorwf	(___fldiv@b+3)^0,f,c
  9003   0029EA  C022  F022         	movff	___fldiv@b,?___fldiv
  9004   0029EE  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  9005   0029F2  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  9006   0029F6  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  9007   0029FA  EF42  F016         	goto	l1072
  9008   0029FE                     l3081:
  9009   0029FE  5039               	movf	___fldiv@bexp^0,w,c
  9010   002A00  A4D8               	btfss	status,2,c
  9011   002A02  EF05  F015         	goto	u2921
  9012   002A06  EF07  F015         	goto	u2920
  9013   002A0A                     u2921:
  9014   002A0A  EF11  F015         	goto	l3089
  9015   002A0E                     u2920:
  9016   002A0E  0E00               	movlw	0
  9017   002A10  6E22               	movwf	?___fldiv^0,c
  9018   002A12  0E00               	movlw	0
  9019   002A14  6E23               	movwf	(?___fldiv+1)^0,c
  9020   002A16  0E00               	movlw	0
  9021   002A18  6E24               	movwf	(?___fldiv+2)^0,c
  9022   002A1A  0E00               	movlw	0
  9023   002A1C  6E25               	movwf	(?___fldiv+3)^0,c
  9024   002A1E  EF42  F016         	goto	l1072
  9025   002A22                     l3089:
  9026   002A22  503A               	movf	___fldiv@aexp^0,w,c
  9027   002A24  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  9028   002A28  6A2B               	clrf	(??___fldiv+1)^0,c
  9029   002A2A  5E2A               	subwf	??___fldiv^0,f,c
  9030   002A2C  0E00               	movlw	0
  9031   002A2E  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  9032   002A30  0E7F               	movlw	127
  9033   002A32  242A               	addwf	??___fldiv^0,w,c
  9034   002A34  6E33               	movwf	___fldiv@new_exp^0,c
  9035   002A36  0E00               	movlw	0
  9036   002A38  202B               	addwfc	(??___fldiv+1)^0,w,c
  9037   002A3A  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9038   002A3C  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  9039   002A40  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  9040   002A44  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  9041   002A48  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  9042   002A4C  0E00               	movlw	0
  9043   002A4E  6E22               	movwf	___fldiv@b^0,c
  9044   002A50  0E00               	movlw	0
  9045   002A52  6E23               	movwf	(___fldiv@b+1)^0,c
  9046   002A54  0E00               	movlw	0
  9047   002A56  6E24               	movwf	(___fldiv@b+2)^0,c
  9048   002A58  0E00               	movlw	0
  9049   002A5A  6E25               	movwf	(___fldiv@b+3)^0,c
  9050   002A5C  0E00               	movlw	0
  9051   002A5E  6E35               	movwf	___fldiv@grs^0,c
  9052   002A60  0E00               	movlw	0
  9053   002A62  6E36               	movwf	(___fldiv@grs+1)^0,c
  9054   002A64  0E00               	movlw	0
  9055   002A66  6E37               	movwf	(___fldiv@grs+2)^0,c
  9056   002A68  0E00               	movlw	0
  9057   002A6A  6E38               	movwf	(___fldiv@grs+3)^0,c
  9058   002A6C  0E00               	movlw	0
  9059   002A6E  6E3A               	movwf	___fldiv@aexp^0,c
  9060   002A70  EF72  F015         	goto	l1074
  9061   002A74                     l3099:
  9062   002A74  503A               	movf	___fldiv@aexp^0,w,c
  9063   002A76  B4D8               	btfsc	status,2,c
  9064   002A78  EF40  F015         	goto	u2931
  9065   002A7C  EF42  F015         	goto	u2930
  9066   002A80                     u2931:
  9067   002A80  EF59  F015         	goto	l3107
  9068   002A84                     u2930:
  9069   002A84  90D8               	bcf	status,0,c
  9070   002A86  362E               	rlcf	___fldiv@rem^0,f,c
  9071   002A88  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  9072   002A8A  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  9073   002A8C  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  9074   002A8E  90D8               	bcf	status,0,c
  9075   002A90  3622               	rlcf	___fldiv@b^0,f,c
  9076   002A92  3623               	rlcf	(___fldiv@b+1)^0,f,c
  9077   002A94  3624               	rlcf	(___fldiv@b+2)^0,f,c
  9078   002A96  3625               	rlcf	(___fldiv@b+3)^0,f,c
  9079   002A98  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9080   002A9A  EF51  F015         	goto	u2941
  9081   002A9E  EF53  F015         	goto	u2940
  9082   002AA2                     u2941:
  9083   002AA2  EF54  F015         	goto	l1077
  9084   002AA6                     u2940:
  9085   002AA6  8022               	bsf	___fldiv@b^0,0,c
  9086   002AA8                     l1077:
  9087   002AA8  90D8               	bcf	status,0,c
  9088   002AAA  3635               	rlcf	___fldiv@grs^0,f,c
  9089   002AAC  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  9090   002AAE  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  9091   002AB0  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  9092   002AB2                     l3107:
  9093   002AB2  5026               	movf	___fldiv@a^0,w,c
  9094   002AB4  5C2E               	subwf	___fldiv@rem^0,w,c
  9095   002AB6  5027               	movf	(___fldiv@a+1)^0,w,c
  9096   002AB8  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  9097   002ABA  5028               	movf	(___fldiv@a+2)^0,w,c
  9098   002ABC  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  9099   002ABE  5029               	movf	(___fldiv@a+3)^0,w,c
  9100   002AC0  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  9101   002AC2  A0D8               	btfss	status,0,c
  9102   002AC4  EF66  F015         	goto	u2951
  9103   002AC8  EF68  F015         	goto	u2950
  9104   002ACC                     u2951:
  9105   002ACC  EF71  F015         	goto	l3113
  9106   002AD0                     u2950:
  9107   002AD0  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  9108   002AD2  5026               	movf	___fldiv@a^0,w,c
  9109   002AD4  5E2E               	subwf	___fldiv@rem^0,f,c
  9110   002AD6  5027               	movf	(___fldiv@a+1)^0,w,c
  9111   002AD8  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  9112   002ADA  5028               	movf	(___fldiv@a+2)^0,w,c
  9113   002ADC  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  9114   002ADE  5029               	movf	(___fldiv@a+3)^0,w,c
  9115   002AE0  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  9116   002AE2                     l3113:
  9117   002AE2  2A3A               	incf	___fldiv@aexp^0,f,c
  9118   002AE4                     l1074:
  9119   002AE4  0E19               	movlw	25
  9120   002AE6  643A               	cpfsgt	___fldiv@aexp^0,c
  9121   002AE8  EF78  F015         	goto	u2961
  9122   002AEC  EF7A  F015         	goto	u2960
  9123   002AF0                     u2961:
  9124   002AF0  EF3A  F015         	goto	l3099
  9125   002AF4                     u2960:
  9126   002AF4  502E               	movf	___fldiv@rem^0,w,c
  9127   002AF6  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  9128   002AF8  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  9129   002AFA  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  9130   002AFC  B4D8               	btfsc	status,2,c
  9131   002AFE  EF83  F015         	goto	u2971
  9132   002B02  EF85  F015         	goto	u2970
  9133   002B06                     u2971:
  9134   002B06  EF9D  F015         	goto	l3125
  9135   002B0A                     u2970:
  9136   002B0A  8035               	bsf	___fldiv@grs^0,0,c
  9137   002B0C  EF9D  F015         	goto	l3125
  9138   002B10                     l3119:
  9139   002B10  90D8               	bcf	status,0,c
  9140   002B12  3622               	rlcf	___fldiv@b^0,f,c
  9141   002B14  3623               	rlcf	(___fldiv@b+1)^0,f,c
  9142   002B16  3624               	rlcf	(___fldiv@b+2)^0,f,c
  9143   002B18  3625               	rlcf	(___fldiv@b+3)^0,f,c
  9144   002B1A  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9145   002B1C  EF92  F015         	goto	u2981
  9146   002B20  EF94  F015         	goto	u2980
  9147   002B24                     u2981:
  9148   002B24  EF95  F015         	goto	l1083
  9149   002B28                     u2980:
  9150   002B28  8022               	bsf	___fldiv@b^0,0,c
  9151   002B2A                     l1083:
  9152   002B2A  90D8               	bcf	status,0,c
  9153   002B2C  3635               	rlcf	___fldiv@grs^0,f,c
  9154   002B2E  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  9155   002B30  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  9156   002B32  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  9157   002B34  0633               	decf	___fldiv@new_exp^0,f,c
  9158   002B36  A0D8               	btfss	status,0,c
  9159   002B38  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  9160   002B3A                     l3125:
  9161   002B3A  AE24               	btfss	(___fldiv@b+2)^0,7,c
  9162   002B3C  EFA2  F015         	goto	u2991
  9163   002B40  EFA4  F015         	goto	u2990
  9164   002B44                     u2991:
  9165   002B44  EF88  F015         	goto	l3119
  9166   002B48                     u2990:
  9167   002B48  0E00               	movlw	0
  9168   002B4A  6E3A               	movwf	___fldiv@aexp^0,c
  9169   002B4C  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  9170   002B4E  EFAB  F015         	goto	u3001
  9171   002B52  EFAD  F015         	goto	u3000
  9172   002B56                     u3001:
  9173   002B56  EFD1  F015         	goto	l1085
  9174   002B5A                     u3000:
  9175   002B5A  0EFF               	movlw	255
  9176   002B5C  1435               	andwf	___fldiv@grs^0,w,c
  9177   002B5E  6E2A               	movwf	??___fldiv^0,c
  9178   002B60  0EFF               	movlw	255
  9179   002B62  1436               	andwf	(___fldiv@grs+1)^0,w,c
  9180   002B64  6E2B               	movwf	(??___fldiv+1)^0,c
  9181   002B66  0EFF               	movlw	255
  9182   002B68  1437               	andwf	(___fldiv@grs+2)^0,w,c
  9183   002B6A  6E2C               	movwf	(??___fldiv+2)^0,c
  9184   002B6C  0E7F               	movlw	127
  9185   002B6E  1438               	andwf	(___fldiv@grs+3)^0,w,c
  9186   002B70  6E2D               	movwf	(??___fldiv+3)^0,c
  9187   002B72  502A               	movf	??___fldiv^0,w,c
  9188   002B74  102B               	iorwf	(??___fldiv+1)^0,w,c
  9189   002B76  102C               	iorwf	(??___fldiv+2)^0,w,c
  9190   002B78  102D               	iorwf	(??___fldiv+3)^0,w,c
  9191   002B7A  B4D8               	btfsc	status,2,c
  9192   002B7C  EFC2  F015         	goto	u3011
  9193   002B80  EFC4  F015         	goto	u3010
  9194   002B84                     u3011:
  9195   002B84  EFC8  F015         	goto	l1086
  9196   002B88                     u3010:
  9197   002B88                     l3133:
  9198   002B88  0E01               	movlw	1
  9199   002B8A  6E3A               	movwf	___fldiv@aexp^0,c
  9200   002B8C  EFD1  F015         	goto	l1085
  9201   002B90                     l1086:
  9202   002B90  A022               	btfss	___fldiv@b^0,0,c
  9203   002B92  EFCD  F015         	goto	u3021
  9204   002B96  EFCF  F015         	goto	u3020
  9205   002B9A                     u3021:
  9206   002B9A  EFD1  F015         	goto	l1085
  9207   002B9E                     u3020:
  9208   002B9E  EFC4  F015         	goto	l3133
  9209   002BA2                     l1085:
  9210   002BA2  503A               	movf	___fldiv@aexp^0,w,c
  9211   002BA4  B4D8               	btfsc	status,2,c
  9212   002BA6  EFD7  F015         	goto	u3031
  9213   002BAA  EFD9  F015         	goto	u3030
  9214   002BAE                     u3031:
  9215   002BAE  EFFD  F015         	goto	l3145
  9216   002BB2                     u3030:
  9217   002BB2  0E01               	movlw	1
  9218   002BB4  2622               	addwf	___fldiv@b^0,f,c
  9219   002BB6  0E00               	movlw	0
  9220   002BB8  2223               	addwfc	(___fldiv@b+1)^0,f,c
  9221   002BBA  2224               	addwfc	(___fldiv@b+2)^0,f,c
  9222   002BBC  2225               	addwfc	(___fldiv@b+3)^0,f,c
  9223   002BBE  A025               	btfss	(___fldiv@b+3)^0,0,c
  9224   002BC0  EFE4  F015         	goto	u3041
  9225   002BC4  EFE6  F015         	goto	u3040
  9226   002BC8                     u3041:
  9227   002BC8  EFFD  F015         	goto	l3145
  9228   002BCC                     u3040:
  9229   002BCC  C022  F02A         	movff	___fldiv@b,??___fldiv
  9230   002BD0  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  9231   002BD4  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  9232   002BD8  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  9233   002BDC  342D               	rlcf	(??___fldiv+3)^0,w,c
  9234   002BDE  322D               	rrcf	(??___fldiv+3)^0,f,c
  9235   002BE0  322C               	rrcf	(??___fldiv+2)^0,f,c
  9236   002BE2  322B               	rrcf	(??___fldiv+1)^0,f,c
  9237   002BE4  322A               	rrcf	??___fldiv^0,f,c
  9238   002BE6  C02A  F022         	movff	??___fldiv,___fldiv@b
  9239   002BEA  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  9240   002BEE  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  9241   002BF2  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  9242   002BF6  4A33               	infsnz	___fldiv@new_exp^0,f,c
  9243   002BF8  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  9244   002BFA                     l3145:
  9245   002BFA  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9246   002BFC  EF08  F016         	goto	u3051
  9247   002C00  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9248   002C02  E108               	bnz	u3050
  9249   002C04  2833               	incf	___fldiv@new_exp^0,w,c
  9250   002C06  A0D8               	btfss	status,0,c
  9251   002C08  EF08  F016         	goto	u3051
  9252   002C0C  EF0A  F016         	goto	u3050
  9253   002C10                     u3051:
  9254   002C10  EF15  F016         	goto	l3149
  9255   002C14                     u3050:
  9256   002C14  0E00               	movlw	0
  9257   002C16  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9258   002C18  6833               	setf	___fldiv@new_exp^0,c
  9259   002C1A  0E00               	movlw	0
  9260   002C1C  6E22               	movwf	___fldiv@b^0,c
  9261   002C1E  0E00               	movlw	0
  9262   002C20  6E23               	movwf	(___fldiv@b+1)^0,c
  9263   002C22  0E00               	movlw	0
  9264   002C24  6E24               	movwf	(___fldiv@b+2)^0,c
  9265   002C26  0E00               	movlw	0
  9266   002C28  6E25               	movwf	(___fldiv@b+3)^0,c
  9267   002C2A                     l3149:
  9268   002C2A  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9269   002C2C  EF22  F016         	goto	u3060
  9270   002C30  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  9271   002C32  E106               	bnz	u3061
  9272   002C34  0433               	decf	___fldiv@new_exp^0,w,c
  9273   002C36  B0D8               	btfsc	status,0,c
  9274   002C38  EF20  F016         	goto	u3061
  9275   002C3C  EF22  F016         	goto	u3060
  9276   002C40                     u3061:
  9277   002C40  EF30  F016         	goto	l3153
  9278   002C44                     u3060:
  9279   002C44  0E00               	movlw	0
  9280   002C46  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  9281   002C48  0E00               	movlw	0
  9282   002C4A  6E33               	movwf	___fldiv@new_exp^0,c
  9283   002C4C  0E00               	movlw	0
  9284   002C4E  6E22               	movwf	___fldiv@b^0,c
  9285   002C50  0E00               	movlw	0
  9286   002C52  6E23               	movwf	(___fldiv@b+1)^0,c
  9287   002C54  0E00               	movlw	0
  9288   002C56  6E24               	movwf	(___fldiv@b+2)^0,c
  9289   002C58  0E00               	movlw	0
  9290   002C5A  6E25               	movwf	(___fldiv@b+3)^0,c
  9291   002C5C  0E00               	movlw	0
  9292   002C5E  6E32               	movwf	___fldiv@sign^0,c
  9293   002C60                     l3153:
  9294   002C60  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  9295   002C64  A039               	btfss	___fldiv@bexp^0,0,c
  9296   002C66  EF37  F016         	goto	u3071
  9297   002C6A  EF39  F016         	goto	u3070
  9298   002C6E                     u3071:
  9299   002C6E  EF3C  F016         	goto	l3159
  9300   002C72                     u3070:
  9301   002C72  8E24               	bsf	(___fldiv@b+2)^0,7,c
  9302   002C74  EF3D  F016         	goto	l3161
  9303   002C78                     l3159:
  9304   002C78  9E24               	bcf	(___fldiv@b+2)^0,7,c
  9305   002C7A                     l3161:
  9306   002C7A  90D8               	bcf	status,0,c
  9307   002C7C  3039               	rrcf	___fldiv@bexp^0,w,c
  9308   002C7E  6E25               	movwf	(___fldiv@b+3)^0,c
  9309   002C80  EFF3  F014         	goto	l3075
  9310   002C84                     l1072:
  9311   002C84  0012               	return		;funcret
  9312   002C86                     __end_of___fldiv:
  9313                           	callstack 0
  9314                           
  9315 ;; *************** function ___flge *****************
  9316 ;; Defined at:
  9317 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  ff1             4    0[COMRAM] unsigned char 
  9320 ;;  ff2             4    4[COMRAM] unsigned char 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;		None               void
  9325 ;; Registers used:
  9326 ;;		wreg, status,2, status,0
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9335 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9336 ;;Total ram usage:       12 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; This function calls:
  9339 ;;		Nothing
  9340 ;; This function is called by:
  9341 ;;		_RGB_to_HSV
  9342 ;;		_color_cardCheck
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text43
  9347   003D0C                     __ptext43:
  9348                           	callstack 0
  9349   003D0C                     ___flge:
  9350                           	callstack 29
  9351   003D0C  0E00               	movlw	0
  9352   003D0E  1401               	andwf	___flge@ff1^0,w,c
  9353   003D10  6E09               	movwf	??___flge^0,c
  9354   003D12  0E00               	movlw	0
  9355   003D14  1402               	andwf	(___flge@ff1+1)^0,w,c
  9356   003D16  6E0A               	movwf	(??___flge+1)^0,c
  9357   003D18  0E80               	movlw	128
  9358   003D1A  1403               	andwf	(___flge@ff1+2)^0,w,c
  9359   003D1C  6E0B               	movwf	(??___flge+2)^0,c
  9360   003D1E  0E7F               	movlw	127
  9361   003D20  1404               	andwf	(___flge@ff1+3)^0,w,c
  9362   003D22  6E0C               	movwf	(??___flge+3)^0,c
  9363   003D24  5009               	movf	??___flge^0,w,c
  9364   003D26  100A               	iorwf	(??___flge+1)^0,w,c
  9365   003D28  100B               	iorwf	(??___flge+2)^0,w,c
  9366   003D2A  100C               	iorwf	(??___flge+3)^0,w,c
  9367   003D2C  A4D8               	btfss	status,2,c
  9368   003D2E  EF9B  F01E         	goto	u3601
  9369   003D32  EF9D  F01E         	goto	u3600
  9370   003D36                     u3601:
  9371   003D36  EFA5  F01E         	goto	l3517
  9372   003D3A                     u3600:
  9373   003D3A  0E00               	movlw	0
  9374   003D3C  6E01               	movwf	___flge@ff1^0,c
  9375   003D3E  0E00               	movlw	0
  9376   003D40  6E02               	movwf	(___flge@ff1+1)^0,c
  9377   003D42  0E00               	movlw	0
  9378   003D44  6E03               	movwf	(___flge@ff1+2)^0,c
  9379   003D46  0E00               	movlw	0
  9380   003D48  6E04               	movwf	(___flge@ff1+3)^0,c
  9381   003D4A                     l3517:
  9382   003D4A  0E00               	movlw	0
  9383   003D4C  1405               	andwf	___flge@ff2^0,w,c
  9384   003D4E  6E09               	movwf	??___flge^0,c
  9385   003D50  0E00               	movlw	0
  9386   003D52  1406               	andwf	(___flge@ff2+1)^0,w,c
  9387   003D54  6E0A               	movwf	(??___flge+1)^0,c
  9388   003D56  0E80               	movlw	128
  9389   003D58  1407               	andwf	(___flge@ff2+2)^0,w,c
  9390   003D5A  6E0B               	movwf	(??___flge+2)^0,c
  9391   003D5C  0E7F               	movlw	127
  9392   003D5E  1408               	andwf	(___flge@ff2+3)^0,w,c
  9393   003D60  6E0C               	movwf	(??___flge+3)^0,c
  9394   003D62  5009               	movf	??___flge^0,w,c
  9395   003D64  100A               	iorwf	(??___flge+1)^0,w,c
  9396   003D66  100B               	iorwf	(??___flge+2)^0,w,c
  9397   003D68  100C               	iorwf	(??___flge+3)^0,w,c
  9398   003D6A  A4D8               	btfss	status,2,c
  9399   003D6C  EFBA  F01E         	goto	u3611
  9400   003D70  EFBC  F01E         	goto	u3610
  9401   003D74                     u3611:
  9402   003D74  EFC4  F01E         	goto	l3521
  9403   003D78                     u3610:
  9404   003D78  0E00               	movlw	0
  9405   003D7A  6E05               	movwf	___flge@ff2^0,c
  9406   003D7C  0E00               	movlw	0
  9407   003D7E  6E06               	movwf	(___flge@ff2+1)^0,c
  9408   003D80  0E00               	movlw	0
  9409   003D82  6E07               	movwf	(___flge@ff2+2)^0,c
  9410   003D84  0E00               	movlw	0
  9411   003D86  6E08               	movwf	(___flge@ff2+3)^0,c
  9412   003D88                     l3521:
  9413   003D88  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9414   003D8A  EFC9  F01E         	goto	u3621
  9415   003D8E  EFCB  F01E         	goto	u3620
  9416   003D92                     u3621:
  9417   003D92  EFD4  F01E         	goto	l3525
  9418   003D96                     u3620:
  9419   003D96  6C01               	negf	___flge@ff1^0,c
  9420   003D98  1E02               	comf	(___flge@ff1+1)^0,f,c
  9421   003D9A  B0D8               	btfsc	status,0,c
  9422   003D9C  2A02               	incf	(___flge@ff1+1)^0,f,c
  9423   003D9E  1E03               	comf	(___flge@ff1+2)^0,f,c
  9424   003DA0  B0D8               	btfsc	status,0,c
  9425   003DA2  2A03               	incf	(___flge@ff1+2)^0,f,c
  9426   003DA4  0E80               	movlw	128
  9427   003DA6  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9428   003DA8                     l3525:
  9429   003DA8  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9430   003DAA  EFD9  F01E         	goto	u3631
  9431   003DAE  EFDB  F01E         	goto	u3630
  9432   003DB2                     u3631:
  9433   003DB2  EFE4  F01E         	goto	l755
  9434   003DB6                     u3630:
  9435   003DB6  6C05               	negf	___flge@ff2^0,c
  9436   003DB8  1E06               	comf	(___flge@ff2+1)^0,f,c
  9437   003DBA  B0D8               	btfsc	status,0,c
  9438   003DBC  2A06               	incf	(___flge@ff2+1)^0,f,c
  9439   003DBE  1E07               	comf	(___flge@ff2+2)^0,f,c
  9440   003DC0  B0D8               	btfsc	status,0,c
  9441   003DC2  2A07               	incf	(___flge@ff2+2)^0,f,c
  9442   003DC4  0E80               	movlw	128
  9443   003DC6  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9444   003DC8                     l755:
  9445   003DC8  0E00               	movlw	0
  9446   003DCA  1A01               	xorwf	___flge@ff1^0,f,c
  9447   003DCC  0E00               	movlw	0
  9448   003DCE  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9449   003DD0  0E00               	movlw	0
  9450   003DD2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9451   003DD4  0E80               	movlw	128
  9452   003DD6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  9453   003DD8  0E00               	movlw	0
  9454   003DDA  1A05               	xorwf	___flge@ff2^0,f,c
  9455   003DDC  0E00               	movlw	0
  9456   003DDE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  9457   003DE0  0E00               	movlw	0
  9458   003DE2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  9459   003DE4  0E80               	movlw	128
  9460   003DE6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  9461   003DE8  5005               	movf	___flge@ff2^0,w,c
  9462   003DEA  5C01               	subwf	___flge@ff1^0,w,c
  9463   003DEC  5006               	movf	(___flge@ff2+1)^0,w,c
  9464   003DEE  5802               	subwfb	(___flge@ff1+1)^0,w,c
  9465   003DF0  5007               	movf	(___flge@ff2+2)^0,w,c
  9466   003DF2  5803               	subwfb	(___flge@ff1+2)^0,w,c
  9467   003DF4  5008               	movf	(___flge@ff2+3)^0,w,c
  9468   003DF6  5804               	subwfb	(___flge@ff1+3)^0,w,c
  9469   003DF8  B0D8               	btfsc	status,0,c
  9470   003DFA  EF01  F01F         	goto	u3641
  9471   003DFE  EF03  F01F         	goto	u3640
  9472   003E02                     u3641:
  9473   003E02  EF06  F01F         	goto	l3531
  9474   003E06                     u3640:
  9475   003E06  90D8               	bcf	status,0,c
  9476   003E08  EF07  F01F         	goto	l760
  9477   003E0C                     l3531:
  9478   003E0C  80D8               	bsf	status,0,c
  9479   003E0E                     l760:
  9480   003E0E  0012               	return		;funcret
  9481   003E10                     __end_of___flge:
  9482                           	callstack 0
  9483                           
  9484 ;; *************** function _adjust_calibration *****************
  9485 ;; Defined at:
  9486 ;;		line 6 in file "calibration.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  calibration_    2    0[COMRAM] PTR int 
  9489 ;;		 -> calibration(9), 
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;		None
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      void 
  9494 ;; Registers used:
  9495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9504 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9505 ;;Total ram usage:        6 bytes
  9506 ;; Hardware stack levels used: 1
  9507 ;; This function calls:
  9508 ;;		Nothing
  9509 ;; This function is called by:
  9510 ;;		_main
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text44
  9515   003998                     __ptext44:
  9516                           	callstack 0
  9517   003998                     _adjust_calibration:
  9518                           	callstack 30
  9519   003998                     l124:
  9520                           
  9521                           ;calibration.c: 11:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
  9522   003998  A68E               	btfss	142,3,c	;volatile
  9523   00399A  EFD1  F01C         	goto	u4881
  9524   00399E  EFD3  F01C         	goto	u4880
  9525   0039A2                     u4881:
  9526   0039A2  EFDA  F01C         	goto	l4435
  9527   0039A6                     u4880:
  9528   0039A6  B48E               	btfsc	142,2,c	;volatile
  9529   0039A8  EFD8  F01C         	goto	u4891
  9530   0039AC  EFDA  F01C         	goto	u4890
  9531   0039B0                     u4891:
  9532   0039B0  EFCC  F01C         	goto	l124
  9533   0039B4                     u4890:
  9534   0039B4                     l4435:
  9535                           
  9536                           ;calibration.c: 12:             _delay((unsigned long)((100)*(64000000/4000.0)));
  9537   0039B4  0E09               	movlw	9
  9538   0039B6  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9539   0039B8  0E1E               	movlw	30
  9540   0039BA  6E03               	movwf	??_adjust_calibration^0,c
  9541   0039BC  0EE4               	movlw	228
  9542   0039BE                     u5417:
  9543   0039BE  2EE8               	decfsz	wreg,f,c
  9544   0039C0  D7FE               	bra	u5417
  9545   0039C2  2E03               	decfsz	??_adjust_calibration^0,f,c
  9546   0039C4  D7FC               	bra	u5417
  9547   0039C6  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9548   0039C8  D7FA               	bra	u5417
  9549   0039CA  D000               	nop2	
  9550   0039CC                     
  9551                           ;calibration.c: 14:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
  9552   0039CC  B68E               	btfsc	142,3,c	;volatile
  9553   0039CE  EFEB  F01C         	goto	u4901
  9554   0039D2  EFED  F01C         	goto	u4900
  9555   0039D6                     u4901:
  9556   0039D6  EF06  F01D         	goto	l128
  9557   0039DA                     u4900:
  9558   0039DA  B48E               	btfsc	142,2,c	;volatile
  9559   0039DC  EFF2  F01C         	goto	u4911
  9560   0039E0  EFF4  F01C         	goto	u4910
  9561   0039E4                     u4911:
  9562   0039E4  EF06  F01D         	goto	l128
  9563   0039E8                     u4910:
  9564   0039E8                     
  9565                           ;calibration.c: 16:                 LATHbits.LATH3 = 1;
  9566   0039E8  8680               	bsf	128,3,c	;volatile
  9567                           
  9568                           ;calibration.c: 17:                 LATDbits.LATD7 = 1;
  9569   0039EA  8E7C               	bsf	124,7,c	;volatile
  9570   0039EC                     
  9571                           ;calibration.c: 18:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  9572   0039EC  0E52               	movlw	82
  9573   0039EE  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9574   0039F0  0E2B               	movlw	43
  9575   0039F2  6E03               	movwf	??_adjust_calibration^0,c
  9576   0039F4  0E00               	movlw	0
  9577   0039F6                     u5427:
  9578   0039F6  2EE8               	decfsz	wreg,f,c
  9579   0039F8  D7FE               	bra	u5427
  9580   0039FA  2E03               	decfsz	??_adjust_calibration^0,f,c
  9581   0039FC  D7FC               	bra	u5427
  9582   0039FE  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9583   003A00  D7FA               	bra	u5427
  9584   003A02  D000               	nop2	
  9585   003A04                     
  9586                           ;calibration.c: 19:                 LATHbits.LATH3 = 0;
  9587   003A04  9680               	bcf	128,3,c	;volatile
  9588   003A06                     
  9589                           ;calibration.c: 20:                 LATDbits.LATD7 = 0;
  9590   003A06  9E7C               	bcf	124,7,c	;volatile
  9591                           
  9592                           ;calibration.c: 21:                 break;
  9593   003A08  EF76  F01D         	goto	l134
  9594   003A0C                     l128:
  9595                           
  9596                           ;calibration.c: 24:                 if(!PORTFbits.RF2){
  9597   003A0C  B48E               	btfsc	142,2,c	;volatile
  9598   003A0E  EF0B  F01D         	goto	u4921
  9599   003A12  EF0D  F01D         	goto	u4920
  9600   003A16                     u4921:
  9601   003A16  EF3B  F01D         	goto	l4461
  9602   003A1A                     u4920:
  9603   003A1A                     
  9604                           ;calibration.c: 25:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9605   003A1A  0E11               	movlw	17
  9606   003A1C  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9607   003A1E  0E3C               	movlw	60
  9608   003A20  6E03               	movwf	??_adjust_calibration^0,c
  9609   003A22  0ECB               	movlw	203
  9610   003A24                     u5437:
  9611   003A24  2EE8               	decfsz	wreg,f,c
  9612   003A26  D7FE               	bra	u5437
  9613   003A28  2E03               	decfsz	??_adjust_calibration^0,f,c
  9614   003A2A  D7FC               	bra	u5437
  9615   003A2C  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9616   003A2E  D7FA               	bra	u5437
  9617   003A30  0000               	nop	
  9618   003A32                     
  9619                           ;calibration.c: 26:                     *calibration_label = *calibration_label + 5;
  9620   003A32  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9621   003A36  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9622   003A3A  CFDE F003          	movff	postinc2,??_adjust_calibration
  9623   003A3E  CFDD F004          	movff	postdec2,??_adjust_calibration+1
  9624   003A42  0E05               	movlw	5
  9625   003A44  2603               	addwf	??_adjust_calibration^0,f,c
  9626   003A46  0E00               	movlw	0
  9627   003A48  2204               	addwfc	(??_adjust_calibration+1)^0,f,c
  9628   003A4A  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9629   003A4E  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9630   003A52  C003  FFDE         	movff	??_adjust_calibration,postinc2
  9631   003A56  C004  FFDD         	movff	??_adjust_calibration+1,postdec2
  9632   003A5A                     
  9633                           ;calibration.c: 27:                     LATDbits.LATD7 = 1;
  9634   003A5A  8E7C               	bsf	124,7,c	;volatile
  9635   003A5C                     
  9636                           ;calibration.c: 28:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9637   003A5C  0E11               	movlw	17
  9638   003A5E  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9639   003A60  0E3C               	movlw	60
  9640   003A62  6E03               	movwf	??_adjust_calibration^0,c
  9641   003A64  0ECB               	movlw	203
  9642   003A66                     u5447:
  9643   003A66  2EE8               	decfsz	wreg,f,c
  9644   003A68  D7FE               	bra	u5447
  9645   003A6A  2E03               	decfsz	??_adjust_calibration^0,f,c
  9646   003A6C  D7FC               	bra	u5447
  9647   003A6E  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9648   003A70  D7FA               	bra	u5447
  9649   003A72  0000               	nop	
  9650   003A74                     
  9651                           ;calibration.c: 29:                     LATDbits.LATD7 = 0;
  9652   003A74  9E7C               	bcf	124,7,c	;volatile
  9653   003A76                     l4461:
  9654                           
  9655                           ;calibration.c: 32:                 if(!PORTFbits.RF3){
  9656   003A76  B68E               	btfsc	142,3,c	;volatile
  9657   003A78  EF40  F01D         	goto	u4931
  9658   003A7C  EF42  F01D         	goto	u4930
  9659   003A80                     u4931:
  9660   003A80  EF74  F01D         	goto	l125
  9661   003A84                     u4930:
  9662   003A84                     
  9663                           ;calibration.c: 33:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9664   003A84  0E11               	movlw	17
  9665   003A86  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9666   003A88  0E3C               	movlw	60
  9667   003A8A  6E03               	movwf	??_adjust_calibration^0,c
  9668   003A8C  0ECB               	movlw	203
  9669   003A8E                     u5457:
  9670   003A8E  2EE8               	decfsz	wreg,f,c
  9671   003A90  D7FE               	bra	u5457
  9672   003A92  2E03               	decfsz	??_adjust_calibration^0,f,c
  9673   003A94  D7FC               	bra	u5457
  9674   003A96  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9675   003A98  D7FA               	bra	u5457
  9676   003A9A  0000               	nop	
  9677   003A9C                     
  9678                           ;calibration.c: 34:                     *calibration_label = *calibration_label - 5;
  9679   003A9C  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9680   003AA0  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9681   003AA4  CFDE F003          	movff	postinc2,??_adjust_calibration
  9682   003AA8  CFDD F004          	movff	postdec2,??_adjust_calibration+1
  9683   003AAC  0EFB               	movlw	251
  9684   003AAE  2403               	addwf	??_adjust_calibration^0,w,c
  9685   003AB0  6E05               	movwf	(??_adjust_calibration+2)^0,c
  9686   003AB2  0EFF               	movlw	255
  9687   003AB4  2004               	addwfc	(??_adjust_calibration+1)^0,w,c
  9688   003AB6  6E06               	movwf	(??_adjust_calibration+3)^0,c
  9689   003AB8  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
  9690   003ABC  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
  9691   003AC0  C005  FFDE         	movff	??_adjust_calibration+2,postinc2
  9692   003AC4  C006  FFDD         	movff	??_adjust_calibration+3,postdec2
  9693   003AC8                     
  9694                           ;calibration.c: 35:                     LATHbits.LATH3 = 1;
  9695   003AC8  8680               	bsf	128,3,c	;volatile
  9696   003ACA                     
  9697                           ;calibration.c: 36:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
  9698   003ACA  0E11               	movlw	17
  9699   003ACC  6E04               	movwf	(??_adjust_calibration+1)^0,c
  9700   003ACE  0E3C               	movlw	60
  9701   003AD0  6E03               	movwf	??_adjust_calibration^0,c
  9702   003AD2  0ECB               	movlw	203
  9703   003AD4                     u5467:
  9704   003AD4  2EE8               	decfsz	wreg,f,c
  9705   003AD6  D7FE               	bra	u5467
  9706   003AD8  2E03               	decfsz	??_adjust_calibration^0,f,c
  9707   003ADA  D7FC               	bra	u5467
  9708   003ADC  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
  9709   003ADE  D7FA               	bra	u5467
  9710   003AE0  0000               	nop	
  9711   003AE2                     
  9712                           ;calibration.c: 37:                     LATHbits.LATH3 = 0;
  9713   003AE2  9680               	bcf	128,3,c	;volatile
  9714   003AE4  EFCC  F01C         	goto	l124
  9715   003AE8                     l125:
  9716   003AE8  EFCC  F01C         	goto	l124
  9717   003AEC                     l134:
  9718   003AEC  0012               	return		;funcret
  9719   003AEE                     __end_of_adjust_calibration:
  9720                           	callstack 0
  9721                           
  9722                           	psect	rparam
  9723   000000                     
  9724                           	psect	config
  9725                           
  9726                           ;Config register CONFIG1L @ 0x300000
  9727                           ;	External Oscillator mode Selection bits
  9728                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9729                           ;	Power-up default value for COSC bits
  9730                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9731   300000                     	org	3145728
  9732   300000  AA                 	db	170
  9733                           
  9734                           ;Config register CONFIG1H @ 0x300001
  9735                           ;	unspecified, using default values
  9736                           ;	Clock Out Enable bit
  9737                           ;	CLKOUTEN = 0x1, unprogrammed default
  9738                           ;	Clock Switch Enable bit
  9739                           ;	CSWEN = 0x1, unprogrammed default
  9740                           ;	Fail-Safe Clock Monitor Enable bit
  9741                           ;	FCMEN = 0x1, unprogrammed default
  9742   300001                     	org	3145729
  9743   300001  FF                 	db	255
  9744                           
  9745                           ;Config register CONFIG3L @ 0x300004
  9746                           ;	WDT Period Select bits
  9747                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9748                           ;	WDT operating mode
  9749                           ;	WDTE = OFF, WDT Disabled
  9750   300004                     	org	3145732
  9751   300004  9F                 	db	159
  9752                           
  9753                           ;Config register CONFIG3H @ 0x300005
  9754                           ;	unspecified, using default values
  9755                           ;	WDT Window Select bits
  9756                           ;	WDTCWS = 0x7, unprogrammed default
  9757                           ;	WDT input clock selector
  9758                           ;	WDTCCS = 0x7, unprogrammed default
  9759   300005                     	org	3145733
  9760   300005  FF                 	db	255
  9761                           tosu	equ	0xFFF
  9762                           tosh	equ	0xFFE
  9763                           tosl	equ	0xFFD
  9764                           stkptr	equ	0xFFC
  9765                           pclatu	equ	0xFFB
  9766                           pclath	equ	0xFFA
  9767                           pcl	equ	0xFF9
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodh	equ	0xFF4
  9773                           prodl	equ	0xFF3
  9774                           indf0	equ	0xFEF
  9775                           postinc0	equ	0xFEE
  9776                           postdec0	equ	0xFED
  9777                           preinc0	equ	0xFEC
  9778                           plusw0	equ	0xFEB
  9779                           fsr0h	equ	0xFEA
  9780                           fsr0l	equ	0xFE9
  9781                           wreg	equ	0xFE8
  9782                           indf1	equ	0xFE7
  9783                           postinc1	equ	0xFE6
  9784                           postdec1	equ	0xFE5
  9785                           preinc1	equ	0xFE4
  9786                           plusw1	equ	0xFE3
  9787                           fsr1h	equ	0xFE2
  9788                           fsr1l	equ	0xFE1
  9789                           bsr	equ	0xFE0
  9790                           indf2	equ	0xFDF
  9791                           postinc2	equ	0xFDE
  9792                           postdec2	equ	0xFDD
  9793                           preinc2	equ	0xFDC
  9794                           plusw2	equ	0xFDB
  9795                           fsr2h	equ	0xFDA
  9796                           fsr2l	equ	0xFD9
  9797                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        1
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    127     157
    BANK1           256     46     185
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    S2312$buffer	PTR unsigned char  size(2) Largest target is 0

    S2312$source	PTR const unsigned char  size(2) Largest target is 0

    S350DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    S350DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@senddata(BANK1[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), motorR(BANK1[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@senddata(BANK1[20]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    switch_calibration@calibration_index	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    turnLEFT@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLEFT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLEFT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnLEFT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRIGHT@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRIGHT@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    turnRIGHT@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_color_cardCheck
    _turnRIGHT->_setMotorPWM
    _turnLEFT->_setMotorPWM
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___lwdiv
    _sendStringSerial4->_sendCharSerial4
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0   65141
                                             93 COMRAM     2     2      0
                                              0 BANK1     46    46      0
                 _adjust_calibration
                    _color_cardCheck
                   _color_click_init
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
                 _switch_calibration
                           _turnLEFT
                          _turnRIGHT
 ---------------------------------------------------------------------------------
 (1) _turnRIGHT                                           18    14      4    4993
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLEFT                                            18    14      4    5353
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _switch_calibration                                   4     2      2     332
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    2977
                                             28 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2626
                                             24 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    2276
                                             13 COMRAM    11     8      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _forward                                             18    14      4    4813
                                             19 COMRAM    16    12      4
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2633
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     510
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _delay_ms_function                                    3     1      2     479
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_cardCheck                                     32    30      2   44885
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RGB_to_HSV                                          87    68     19   34610
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (3) _custom_floatmodulo                                  18    10      8   11664
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2656
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2767
                                             33 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _adjust_calibration                                   6     4      2     394
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adjust_calibration
   _color_cardCheck
     _RGB_to_HSV
       ___fladd
       ___fldiv
         ___flsub (ARG)
           ___fladd
           ___xxtofl (ARG)
             _color_read_Blue (ARG)
               _I2C_2_Master_Read
                 _I2C_2_Master_Idle
               _I2C_2_Master_RepStart
                 _I2C_2_Master_Idle
               _I2C_2_Master_Start
                 _I2C_2_Master_Idle
               _I2C_2_Master_Stop
                 _I2C_2_Master_Idle
               _I2C_2_Master_Write
                 _I2C_2_Master_Idle
             _color_read_Clear (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Green (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
             _color_read_Red (ARG)
               _I2C_2_Master_Read
               _I2C_2_Master_RepStart
               _I2C_2_Master_Start
               _I2C_2_Master_Stop
               _I2C_2_Master_Write
       ___fleq
       ___flge
       ___flmul
         ___fladd (ARG)
         ___fldiv (ARG)
         ___flsub (ARG)
         ___xxtofl (ARG)
       ___flsub
       _custom_floatmodulo
         ___fldiv
         ___fleq
         ___flmul
         ___flsub
         ___fltol
         ___xxtofl
     ___flge
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _forward
     ___awdiv
     _delay_ms_function
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _switch_calibration
   _turnLEFT
     ___awdiv
     _delay_ms_function
     _setMotorPWM
   _turnRIGHT
     ___awdiv
     _delay_ms_function
     _setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2E      B9       7       72.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7F      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B5      58        0.0%
DATA                 0      0     1B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 23:02:54 2024

                     _color_read_Red 4256                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4346                                   l31 449E  
                                 l40 42F4                                   l50 3C04  
                                 l34 4600                                   l43 4394  
                                 l60 19CC                                   l37 42A4  
                                 l70 1ABE                                   l62 1A26  
                                 l46 4344                                   l80 1E86  
                                 l72 1ACE                                   l64 1A36  
                                 l74 1B28                                   l58 19BC  
                                 l76 1B38                                   l87 2000  
                                 l99 1836                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                     _color_read_Clear 42F6  
                   _color_read_Green 42A6                                  l105 183E  
                                l203 417C                                  l124 3998  
                                l125 3AE8                                  l134 3AEC  
                                l206 4556                                  l230 3286  
                                l142 403E                                  l128 3A0C  
                                l400 4642                                  l216 3996  
                                l209 4568                                  l137 3F8E  
                                l138 3FFC                                  l403 445E  
                                l252 3692                                  l244 35D2  
                                l238 3346                                  l440 461E  
                                l266 34EC                                  l258 342C  
                                l347 2F6E                                  l452 4636  
                                l382 4592                                  l391 4656  
                                l385 4594                                  l721 3ED2  
                                l449 4622                                  l394 4660  
                                l490 45E0                                  l458 453A  
                                l388 45BA                                  l397 464C  
                                l760 3E0E                                  l755 3DC8  
                                l749 40E8                                  l787 3D0A  
                                l981 41E8                                  l991 424C  
                                l988 41F0                                  l998 4254  
                                wreg 0FE8                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
         __end_of_adjust_calibration 3AEE                         ___fltol@exp1 000A  
                               l1020 21A4                                 l1111 277C  
                               l1104 2586                                 l1121 28AC  
                               l1113 27F4                                 l1114 27E2  
                               l1018 21F0                                 l1035 230A  
                               l1027 24C0                                 l1019 21DE  
                               l1108 28EA                                 l1044 23DA  
                               l1060 43DA                                 l1212 441C  
                               l1045 23C8                                 l1205 382A  
                               l1072 2C84                                 l1152 30DA  
                               l1224 3F8C                                 l3001 243E  
                               l1145 3042                                 l1074 2AE4  
                               l1083 2B2A                                 l3011 2484  
                               l3003 2440                                 l1235 4662  
                               l1148 319E                                 l1085 2BA2  
                               l1077 2AA8                                 l3101 2A84  
                               l3021 24AE                                 l3013 2492  
                               l3005 2450                                 l1086 2B90  
                               l3111 2AD2                                 l3103 2A98  
                               l3031 28EC                                 l3023 24B0  
                               l3015 2498                                 l3007 2460  
                               l1159 3136                                 l1168 44DA  
                               l3121 2B1A                                 l3113 2AE2  
                               l3105 2AA6                                 l3041 2928  
                               l3033 28F8                                 l3201 2576  
                               l3017 249A                                 l3009 2480  
                               l3131 2B5A                                 l3123 2B28  
                               l3115 2AF4                                 l3107 2AB2  
                               l3051 2958                                 l3043 2938  
                               l3035 2906                                 l3211 25C6  
                               l3203 2596                                 l3019 24A0  
                               l3027 4594                                 l3141 2BCC  
                               l3133 2B88                                 l3117 2B0A  
                               l3125 2B3A                                 l3109 2AD0  
                               l3061 298E                                 l3053 295E  
                               l3045 293A                                 l3037 2908  
                               l3221 2616                                 l3213 25D0  
                               l3205 25A6                                 l3301 43A6  
                               l3029 45A4                                 l3151 2C44  
                               l3143 2BF6                                 l3127 2B48  
                               l3119 2B10                                 l3071 29CE  
                               l3063 299E                                 l3055 296C  
                               l3039 2918                                 l3047 2942  
                               l3311 40AC                                 l3231 2658  
                               l3223 2622                                 l3215 25E6  
                               l3161 2C7A                                 l3153 2C60  
                               l3137 2BB2                                 l3145 2BFA  
                               l3129 2B4C                                 l3073 29DE  
                               l3081 29FE                                 l3065 29A0  
                               l3057 296E                                 l3049 2952  
                               l3313 40BC                                 l3305 4040  
                               l3241 26BA                                 l3233 2668  
                               l3225 2630                                 l3217 25F2  
                               l3209 25BA                                 l3321 3C06  
                               l3401 4246                                 l3155 2C64  
                               l3147 2C14                                 l3139 2BBE  
                               l3091 2A3C                                 l3083 2A0E  
                               l3075 29E6                                 l3059 297E  
                               l3067 29A8                                 l3315 40E0  
                               l3307 406E                                 l3251 2762  
                               l3243 26D6                                 l3235 2682  
                               l3227 263C                                 l3219 260A  
                               l3171 24CE                                 l3331 3C5C  
                               l3323 3C1C                                 l3411 3068  
                               l3403 2FEE                                 l4131 4618  
                               l3157 2C72                                 l3149 2C2A  
                               l3093 2A4C                                 l3085 2A0E  
                               l3077 29EA                                 l3069 29B8  
                               l3317 40E6                                 l3309 407E  
                               l3261 279E                                 l3253 276C  
                               l3245 2700                                 l3237 2692  
                               l3229 264C                                 l3181 250E  
                               l3173 24DC                                 l3333 3C6C  
                               l3421 30C2                                 l3405 2FFE  
                               l3501 3B84                                 l4133 461A  
                               l4125 4602                                 l4141 44B4  
                               l3159 2C78                                 l3095 2A5C  
                               l3271 2810                                 l3263 27AC  
                               l3255 277A                                 l3247 2736  
                               l3239 26AE                                 l3191 253E  
                               l3183 2514                                 l3175 24DE  
                               l3343 3C96                                 l3335 3C70  
                               l3327 3C30                                 l3431 3126  
                               l3423 30C4                                 l3415 307C  
                               l3407 300C                                 l3503 3BF4  
                               l4135 461C                                 l4127 460C  
                               l4151 4510                                 l4143 44BC  
                               l3521 3D88                                 l3513 3D0C  
                               l3097 2A6C                                 l3089 2A22  
                               l3281 287A                                 l3273 281E  
                               l3265 27DA                                 l3257 278C  
                               l3249 2744                                 l3193 2540  
                               l3185 2524                                 l3177 24EE  
                               l3169 24C2                                 l3361 3CFA  
                               l3353 3CBE                                 l3345 3CA0  
                               l3337 3C7E                                 l3329 3C5A  
                               l3441 317E                                 l3433 3144  
                               l3425 30D0                                 l3417 3084  
                               l3409 3052                                 l3601 4256  
                               l4129 460E                                 l4153 451E  
                               l4145 44CC                                 l4137 44A0  
                               l3531 3E0C                                 l3523 3D96  
                               l3515 3D3A                                 l3099 2A74  
                               l3291 28D0                                 l3283 2894  
                               l3275 2848                                 l3259 279A  
                               l3195 2550                                 l3187 252A  
                               l3179 24FE                                 l3355 3CCA  
                               l3347 3CAA                                 l3443 318C  
                               l3435 3146                                 l3427 310C  
                               l3419 3090                                 l3603 429C  
                               l3371 41A0                                 l3507 45BC  
                               l4155 4522                                 l3451 3EE4  
                               l4139 44AC                                 l3525 3DA8  
                               l3517 3D4A                                 l3285 28B0  
                               l3293 28D6                                 l3269 2804  
                               l3277 284C                                 l3197 2560  
                               l3189 2530                                 l2901 213E  
                               l3357 3CDA                                 l3445 318E  
                               l3437 314A                                 l3429 3118  
                               l3613 4346                                 l3621 433C  
                               l3381 41DA                                 l3373 41A8  
                               l3365 417E                                 l3509 45D8  
                               l4421 389C                                 l4501 3222  
                               l4149 450C                                 l3453 3EF4  
                               l3541 36D0                                 l3527 3DB6  
                               l3519 3D78                                 l3295 28DA  
                               l3287 28C0                                 l3279 2866  
                               l3199 2570                                 l2911 219C  
                               l2903 2142                                 l2831 201E  
                               l3359 3CEA                                 l3439 316E  
                               l3631 19E0                                 l3463 464E  
                               l3471 4644                                 l3615 438C  
                               l3607 42A6                                 l3711 3E10  
                               l3383 41DC                                 l3375 41B6  
                               l3367 4186                                 l4431 3956  
                               l4423 38B0                                 l4511 3268  
                               l4503 322E                                 l3391 420C  
                               l3455 3EFE                                 l3551 3724  
                               l3543 36D4                                 l3535 3694  
                               l4441 39E8                                 l4433 39A6  
                               l3529 3E06                                 l3289 28CE  
                               l2921 21D2                                 l2913 21B2  
                               l2905 2146                                 l2833 202E  
                               l2841 2058                                 l2825 2002  
                               l3641 1AE2                                 l3633 1A12  
                               l3625 1840                                 l3481 4424  
                               l3465 4652                                 l3473 4648  
                               l3609 42EC                                 l3801 0FC4  
                               l3721 3E3C                                 l3713 3E14  
                               l3385 41E2                                 l3377 41BC  
                               l3369 4198                                 l4425 38B4  
                               l4417 382C                                 l4521 32D0  
                               l4513 3274                                 l4505 323A  
                               l3393 4214                                 l3457 3F1A  
                               l3449 3ED4                                 l3561 3792  
                               l3553 3728                                 l3545 36DE  
                               l3537 36BA                                 l4601 33F0  
                               l4451 3A1A                                 l4443 39EC  
                               l4435 39B4                                 l2931 2222  
                               l2923 21DC                                 l2915 21BE  
                               l2907 2170                                 l2851 2088  
                               l2843 2068                                 l2835 203E  
                               l2827 200E                                 l3299 4396  
                               l3651 1BF6                                 l3643 1B14  
                               l3635 1A46                                 l3627 1976  
                               l3483 442C                                 l3475 4658  
                               l3467 463A                                 l3619 42F6  
                               l3811 109A                                 l3803 0FF6  
                               l3731 3E6A                                 l3723 3E44  
                               l3715 3E22                                 l3379 41D2  
                               l4427 38F6                                 l4419 3848  
                               l4523 32E8                                 l4531 3316  
                               l4515 3282                                 l4507 3246  
                               l3707 4622                                 l3395 4222  
                               l3387 41F2                                 l3459 3F4C  
                               l3563 37B0                                 l3555 3750  
                               l3547 36FE                                 l3571 37F8  
                               l3539 36C2                                 l4611 346C  
                               l4603 340E                                 l4453 3A32  
                               l4461 3A76                                 l4445 3A04  
                               l4437 39CC                                 l2941 225E  
                               l2933 2232                                 l2925 21FE  
                               l2917 21C2                                 l2909 218C  
                               l2861 20C8                                 l2853 2096  
                               l2845 206E                                 l2837 204E  
                               l2829 201C                                 l3493 3AEE  
                               l3661 1D44                                 l3653 1C4E  
                               l3645 1B48                                 l3637 1A78  
                               l3629 19A8                                 l3485 4434  
                               l3477 465C                                 l3469 463E  
                               l3813 10CC                                 l3821 1170  
                               l3805 1028                                 l3741 3EA4  
                               l3733 3E72                                 l3725 3E48  
                               l3717 3E2A                                 l4429 3912  
                               l4533 332E                                 l4525 32F2  
                               l4517 32AE                                 l4509 324A  
                               l3709 4632                                 l3397 4238  
                               l3389 4204                                 l3565 37B2  
                               l3557 376C                                 l3549 3716  
                               l4541 3516                                 l4621 34B0  
                               l4613 3476                                 l4605 341A  
                               l4701 2D04                                 l4471 3AE2  
                               l4463 3A84                                 l4455 3A5A  
                               l4447 3A06                                 l4439 39DA  
                               l2951 22A4                                 l2943 226C  
                               l2935 2240                                 l2927 220E  
                               l2919 21D0                                 l2871 2102  
                               l2863 20CA                                 l2855 2098  
                               l2847 2080                                 l2839 2050  
                               l3495 3B20                                 l3671 1E96  
                               l3663 1DA0                                 l3655 1C82  
                               l3647 1BAE                                 l3639 1AAA  
                               l3487 445A                                 l3479 4420  
                               l3831 1246                                 l3823 11A2  
                               l3815 10FE                                 l3807 1036  
                               l3591 457A                                 l3751 3ECA  
                               l3743 3EA6                                 l3735 3E80  
                               l3727 3E50                                 l3719 3E2E  
                               l4527 32FE                                 l4519 32C6  
                               l3399 4240                                 l3559 377E  
                               l3575 3804                                 l4551 3586  
                               l4543 3532                                 l4535 34F0  
                               l4615 348E                                 l4623 34BC  
                               l4607 3428                                 l4711 2D24  
                               l4703 2D08                                 l4465 3A9C  
                               l4457 3A5C                                 l2961 2320  
                               l2953 22D8                                 l2945 226E  
                               l2937 224E                                 l2881 2116  
                               l2873 2106                                 l2857 20A8  
                               l2865 20D2                                 l2849 2082  
                               l3681 1F90                                 l3673 1ECA  
                               l3665 1DD2                                 l3657 1CBA  
                               l3649 1BC4                                 l3489 445C  
                               l3841 1340                                 l3833 1278  
                               l3825 11D4                                 l3817 1130  
                               l3809 1068                                 l3593 457C  
                               l3745 3EAC                                 l3737 3E86  
                               l3729 3E62                                 l4529 330A  
                               l3569 37C8                                 l3761 4414  
                               l4481 3FF6                                 l4473 3F9C  
                               l4561 35CE                                 l4553 3592  
                               l4545 353E                                 l4537 350E  
                               l4625 34D4                                 l4617 3498  
                               l4609 3454                                 l4721 2D74  
                               l4713 2D30                                 l4705 2D0C  
                               l4467 3AC8                                 l4459 3A74  
                               l2971 235C                                 l2963 2330  
                               l2955 22DA                                 l2947 2278  
                               l2939 225A                                 l2891 212A  
                               l2883 211A                                 l2875 210A  
                               l2867 20E2                                 l2859 20B8  
                               l3499 3B34                                 l3683 1FC4  
                               l3675 1EE2                                 l3667 1E2A  
                               l3659 1CEC                                 l3851 1416  
                               l3835 12AA                                 l3843 134E  
                               l3827 1206                                 l3819 1162  
                               l3595 457E                                 l3587 456A  
                               l3771 447E                                 l3739 3E9C  
                               l3747 3EB2                                 l4491 31C2  
                               l3755 43DC                                 l4483 400A  
                               l4475 3FB4                                 l4571 363E  
                               l4563 35FA                                 l4547 356E  
                               l4555 3596                                 l4539 3516  
                               l4619 34A4                                 l4811 2FC8  
                               l4803 2F78                                 l4731 2DD0  
                               l4723 2D8C                                 l4715 2D48  
                               l4707 2D10                                 l4651 2C92  
                               l4469 3ACA                                 l2981 2388  
                               l2973 235E                                 l2957 22EA  
                               l2949 227E                                 l2893 212E  
                               l2885 211E                                 l2877 210E  
                               l2869 20F4                                 l3677 1F14  
                               l3669 1E86                                 l3861 14EC  
                               l3853 1448                                 l3845 1380  
                               l3837 12DC                                 l3829 1214  
                               l3597 4580                                 l3589 4574  
                               l3781 4498                                 l3773 4488  
                               l3765 4460                                 l3749 3EC2  
                               l3685 453C                                 l4493 31CA  
                               l3757 43E4                                 l4485 4022  
                               l4477 3FDC                                 l4573 364A  
                               l4565 3612                                 l4557 35B4  
                               l4549 357A                                 l4581 334A  
                               l4805 2F9E                                 l4741 2E04  
                               l4733 2DDC                                 l4725 2D98  
                               l4717 2D54                                 l4709 2D14  
                               l4661 2CB0                                 l4653 2C98  
                               l2991 23C0                                 l2975 236C  
                               l2967 2344                                 l2983 238A  
                               l2959 22FA                                 l2895 2132  
                               l2887 2122                                 l2879 2112  
                               l3679 1F30                                 l3863 151E  
                               l3871 15C2                                 l3855 147A  
                               l3847 13B2                                 l3839 130E  
                               l3791 0EF2                                 l3599 45E4  
                               l3783 449A                                 l3775 4492  
                               l3767 4464                                 l3687 4540  
                               l4495 31CA                                 l3759 43F4  
                               l4487 403C                                 l4479 3FDE  
                               l4575 3656                                 l4567 361C  
                               l4559 35C0                                 l4591 3398  
                               l4583 3368                                 l4807 2FAA  
                               l4751 2E28                                 l4743 2E08  
                               l4727 2DAC                                 l4719 2D68  
                               l4671 2CCC                                 l4663 2CB8  
                               l4655 2C9C                                 l4647 2C86  
                               l2977 2374                                 l2969 234E  
                               l2985 2398                                 l2897 2136  
                               l2889 2126                                 l3881 16BC  
                               l3873 15F4                                 l3865 1550  
                               l3849 13E4                                 l3857 1488  
                               l3793 0EFC                                 l3785 449C  
                               l3777 4494                                 l3769 446E  
                               l3689 4550                                 l4497 31E6  
                               l4489 31A2                                 l3961 40FA  
                               l4569 3634                                 l4577 3662  
                               l4593 33C8                                 l4585 3370  
                               l4809 2FC2                                 l4761 2E54  
                               l4753 2E40                                 l4745 2E0C  
                               l4737 2DF0                                 l4729 2DB8  
                               l4681 2CE2                                 l4673 2CD4  
                               l4665 2CBC                                 l4657 2CA0  
                               l4649 2C86                                 l2995 23EA  
                               l2987 239C                                 l2979 2378  
                               l2899 213A                                 l3891 1792  
                               l3883 16EE                                 l3875 1626  
                               l3867 1582                                 l3859 14BA  
                               l3795 0F2E                                 l3787 0E08  
                               l3779 4496                                 l4499 31F2  
                               l3971 4154                                 l3963 4120  
                               l4843 37EA                                 l4579 367A  
                               l4595 33D4                                 l4587 3370  
                               l4771 2E98                                 l4763 2E6C  
                               l4755 2E44                                 l4747 2E24  
                               l4739 2DF8                                 l4691 2CEE  
                               l4683 2CE4                                 l4675 2CDC  
                               l4667 2CC0                                 l4659 2CA8  
                               l2997 23F6                                 l2989 23AA  
                               l3893 17C4                                 l3877 1658  
                               l3885 16FC                                 l3869 15B4  
                               l3797 0F60                                 l3789 0EA0  
                               l3981 4176                                 l3973 415E  
                               l3965 4124                                 l4597 33E0  
                               l4589 338C                                 l4781 2EEA  
                               l4773 2EAA                                 l4765 2E80  
                               l4757 2E50                                 l4749 2E26  
                               l4693 2CF4                                 l4685 2CE6  
                               l4677 2CDE                                 l4669 2CC4  
                               l2999 2404                                 l3895 17F6  
                               l3887 172E                                 l3879 168A  
                               l3799 0F92                                 l3983 4178  
                               l3975 4160                                 l3967 4148  
                               l3959 40EA                                 l4599 33EC  
                               l4791 2F3A                                 l4783 2EFA  
                               l4775 2EBA                                 l4767 2E92  
                               l4759 2E52                                 l4695 2CF8  
                               l4687 2CEA                                 l4679 2CE0  
                               l3897 1828                                 l3889 1760  
                               l3985 417A                                 l3977 416A  
                               l3969 4152                                 l4793 2F3C  
                               l4785 2EFC                                 l4777 2EBC  
                               l4769 2E96                                 l4697 2CFC  
                               l4689 2CEC                                 l3899 1836  
                               l3979 416C                                 l4795 2F52  
                               l4787 2F16                                 l4779 2ED6  
                               l4699 2D00                                 l4789 2F2A  
                               l4797 2F6E                                 STR_1 0E01  
                               u3000 2B5A                                 u3001 2B56  
                               u3010 2B88                                 u3011 2B84  
                               u3020 2B9E                                 u3100 24FE  
                               u3021 2B9A                                 u3101 24FA  
                               u3030 2BB2                                 u3110 253E  
                               u3031 2BAE                                 u3111 253A  
                               u3040 2BCC                                 u3200 27DA  
                               u3120 2550                                 u4000 109A  
                       _BAUD4CONbits 0EE9                                 u3041 2BC8  
                               u3201 27D6                                 u3121 254C  
                               u4001 1096                                 u3050 2C14  
                               u3210 27F0                                 u3130 2560  
                               u4010 10CC                                 u3051 2C10  
                               u3211 27EC                                 u3131 255C  
                               u4011 10C8                                 u3060 2C44  
                               u3220 2804                                 u3140 2596  
                               u2500 20B8                                 u3300 3C1C  
                               u4100 12AA                                 u4020 10FE  
                               u3061 2C40                                 u3221 2800  
                               u3141 2592                                 u2501 20B4  
                               u3301 3C18                                 u4101 12A6  
                               u4021 10FA                                 u3070 2C72  
                               u3230 281E                                 u3150 25A6  
                               u2510 20F4                                 u3310 3C50  
                               u4110 12DC                                 u4030 1130  
                               u3071 2C6E                                 u3231 281A  
                               u3151 25A2                                 u2511 20F0  
                               u4111 12D8                                 u4031 112C  
                               u3240 2866                                 u3160 2720  
                               u3080 24DC                                 u2600 220E  
                               u2520 2102                                 u2440 201C  
                               u3320 3C7E                                 u4200 14BA  
                               u4120 130E                                 u4040 1162  
                               u5000 332E                                 u3400 4204  
                               u3241 2862                                 u3081 24D8  
                               u2601 220A                                 u2521 20FE  
                               u2441 2018                                 u3321 3C7A  
                               u4201 14B6                                 u4121 130A  
                               u4041 115E                                 u5001 332A  
                               u3401 4200                                 u3250 2894  
                               u3170 277A                                 u3090 24EE  
                               u2610 2240                                 u2530 2170  
                               u2450 202E                                 u3330 3C92  
                               u4210 14EC                                 u4130 1340  
                               u4050 11A2                                 u5010 3346  
                               u3410 4222                                 _T2PR 0FBC  
                               u3251 2890                                 u3171 2776  
                               u3091 24EA                                 u2611 223C  
                               u2531 216C                                 u2451 202A  
                               u3331 3C8E                                 u3315 3C46  
                               u4211 14E8                                 u4131 133C  
                               u4051 119E                                 u5011 3342  
                               u3411 421E                                 u3260 28CE  
                               u3180 279A                                 u2700 2388  
                               u2620 224E                                 u2540 2188  
                               u2460 203E                                 u3340 3CBA  
                               u3500 3144                                 u4300 16BC  
                               u4220 151E                                 u4140 1380  
                               u4060 11D4                                 u3420 4238  
                               u5020 35B4                                 u5100 346C  
                               u3261 28CA                                 u3181 2796  
                               u3165 2716                                 u2701 2384  
                               u2621 224A                                 u2541 2182  
                               u2461 203A                                 u3341 3CB6  
                               u3501 3140                                 u4301 16B8  
                               u4221 151A                                 u4141 137C  
                               u4061 11D0                                 u3421 4234  
                               u5021 35B0                                 u5101 3468  
                               u3270 406E                                 u3190 27AC  
                               u2710 2398                                 u2630 226C  
                               u2550 218A                                 u2470 2080  
                               u3350 3CDA                                 u3510 317E  
                               u3430 2FFE                                 u4310 16EE  
                               u4230 1550                                 u4150 13B2  
                               u4070 1206                                 u5030 35F6  
                               u5110 348E                                 u3271 406A  
                               u3191 27A8                                 u2711 2394  
                               u2631 2268                                 u2471 207C  
                               u3351 3CD6                                 u3511 317A  
                               u3431 2FFA                                 u4311 16EA  
                               u4231 154C                                 u4151 13AE  
                               u4071 1202                                 u5031 35F2  
                               u5111 348A                                 u3600 3D3A  
                               u3280 40AC                                 u2800 2480  
                               u2720 23AA                                 u2640 22A4  
                               u2560 21B2                                 u2480 2096  
                               u3360 3CEA                                 u3520 318C  
                               u3440 300C                                 u4320 172E  
                               u4240 1582                                 u4160 13E4  
                               u4080 1246                                 u5040 3612  
                               u5120 34D4                                 u5200 2DAC  
                               u3601 3D36                                 u3281 40A8  
                               u2801 247C                                 u2721 23A6  
                               u2641 22A0                                 u2561 21AE  
                               u2481 2092                                 u3361 3CE6  
                               u3521 3188                                 u3441 3008  
                               u4321 172A                                 u4241 157E  
                               u4161 13E0                                 u4081 1242  
                               u5041 360E                                 u5121 34D0  
                               u5201 2DA8                                 u3610 3D78  
                               u3290 40E0                                 u2810 2492  
                               u2730 23C0                                 u2650 22EA  
                               u2570 21D0                                 u2490 20A8  
                               u3450 3068                                 u4330 1760  
                               u4250 15B4                                 u4170 1416  
                               u4090 1278                                 u3370 4198  
                               u3530 3EE4                                 u5050 3634  
                               u5130 34EC                                 u5210 2DF0  
                               u3611 3D74                                 u3291 40DC  
                               u2811 248E                                 u2731 23BC  
                               u2651 22E6                                 u2571 21CC  
                               u2491 20A4                                 u3451 3064  
                               u4331 175C                                 u4251 15B0  
                               u4171 1412                                 u4091 1274  
                               u3371 4194                                 u3531 3EE0  
                               u5051 3630                                 u5131 34E8  
                               u5211 2DEC                                 u3620 3D96  
                               u2900 298E                                 u2820 24AE  
                               u2740 23D6                                 u2660 2320  
                               u2580 21F0                                 u3460 30BE  
                               u3700 1976                                 u4340 1792  
                               u4260 15F4                                 u4180 1448  
                               u3380 41B6                                 u3540 3EF4  
                               u5060 367A                                 u3621 3D92  
                               u2901 298A                                 u2821 24AA  
                               u2741 23D2                                 u2661 231C  
                               u2581 21EC                                 u3461 30BA  
                               u3701 1972                                 u4341 178E  
                               u4261 15F0                                 u4181 1444  
                               u3381 41B2                                 u3541 3EF0  
                               u5061 3676                                 u5221 2DFE  
                               u3630 3DB6                                 u2910 29CE  
                               u2750 23EA                                 u2670 2330  
                               u2590 21FE                                 u3470 3108  
                               u3710 19A8                                 u2830 45A4  
                               u4350 17C4                                 u4270 1626  
                               u4190 147A                                 u3390 41D2  
                               u3550 3F1A                                 u5070 3692  
                               u5230 2E80                                 u3631 3DB2  
                               u2911 29CA                                 u2751 23E6  
                               u2671 232C                                 u2591 21FA  
                               u3471 3104                                 u3711 19A4  
                               u2831 45A0                                 u4351 17C0  
                               u4271 1622                                 u4191 1476  
                               u3391 41CE                                 u3551 3F16  
                               u5071 368E                                 u5231 2E7C  
                               u3640 3E06                                 u2920 2A0E  
                               u2760 2404                                 u2680 235C  
                               u3480 3126                                 u3800 1E96  
                               u3720 1A12                                 u2840 45BA  
                               u4360 17F6                                 u4280 1658  
                               u3560 3F4C                                 u5080 340E  
                               u5240 2EAA                                 u3641 3E02  
                               u2921 2A0A                                 u2761 2400  
                               u2681 2358                                 u3481 3122  
                               u3801 1E92                                 u3721 1A0E  
                               u2841 45B6                                 u4361 17F2  
                               u4281 1654                                 u3561 3F48  
                               u5081 340A                                 u5241 2EA6  
                               u2930 2A84                                 u2850 2906  
                               u2770 243E                                 u2690 236C  
                               u3490 3136                                 u3810 1F14  
                               u3730 1A78                                 u3570 4448  
                               u4370 1828                                 u4290 168A  
                               u3650 36BA                                 u5090 3450  
                               u5250 2EEA                                 u2931 2A80  
                               u2851 2902                                 u2771 243A  
                               u2691 2368                                 u3491 3132  
                               u3811 1F10                                 u3731 1A74  
                               u3571 4440                                 u4371 1824  
                               u4291 1686                                 u3651 36B6  
                               u5091 344C                                 u5251 2EE6  
                               u5307 2E5E                                 u2940 2AA6  
                               u2860 2918                                 u2780 2450  
                               u3740 1AAA                                 u3900 3E9C  
                               u3820 4568                                 u3660 36FE  
                               u5260 2F2A                                 u5180 2D24  
                               u2941 2AA2                                 u2861 2914  
                               u2781 244C                                 u3741 1AA6  
                               u3901 3E98                                 u3821 4564  
                               u3661 36FA                                 u5317 2FB4  
                               u5261 2F26                                 u5181 2D20  
                               u2950 2AD0                                 u2870 2928  
                               u2790 2460                                 u3590 3B20  
                               u3750 1B14                                 u3910 3EC2  
                               u3670 377E                                 u5270 2FE4  
                               u5190 2D68                                 u2951 2ACC  
                               u2871 2924                                 u2791 245C  
                               u3591 3B1C                                 u3751 1B10  
                               u5407 4474                                 u3911 3EBE  
                               u3671 377A                                 u5327 3420  
                               u5271 2FE0                                 u5191 2D64  
                               u2960 2AF4                                 u2880 296C  
                               u3760 1BAE                                 u4640 453A  
                               u3680 378E                                 u3920 4414  
                               u5417 39BE                                 u2961 2AF0  
                               u2881 2968                                 u3761 1BAA  
                               u4641 4536                                 u3681 378A  
                               u3921 4410                                 u5337 35C6  
                               u2970 2B0A                                 u2890 297E  
                               u3770 1BF6                                 u3930 0F2E  
                               u3850 4632                                 u3690 37C4  
                               u5427 39F6                                 u2971 2B06  
                               u2891 297A                                 u3771 1BF2  
                               u3931 0F2A                                 u3851 462E  
                               u3691 37C0                                 u5347 3FA6  
                               u4900 39DA                                 u2980 2B28  
                               u3780 1CEC                                 u3588 444A  
                               u3940 0F60                                 u3860 3E22  
                               u5437 3A24                                 u4901 39D6  
                               u2981 2B24                                 u3781 1CE8  
                               u3941 0F5C                                 u3861 3E1E  
                               u5357 3FE8                                 u4910 39E8  
                               u2990 2B48                                 u3790 1DD2  
                               u3950 0F92                                 u3870 3E3C  
                               u5447 3A66                                 u4911 39E4  
                               u2991 2B44                                 u3791 1DCE  
                               u3951 0F8E                                 u3871 3E38  
                               u5367 4014                                 u5287 2E16  
                               u4920 3A1A                                 u3960 0FC4  
                               u3880 3E62                                 u5457 3A8E  
                               u4921 3A16                                 u3961 0FC0  
                               u3881 3E5E                                 u5377 402E  
                               u5297 2E32                                 u4930 3A84  
                               u3970 0FF6                                 u3890 3E80  
                               u5467 3AD4                                 u4931 3A80  
                               u3971 0FF2                                 u3891 3E7C  
                               u5387 327A                                 u3980 1028  
                               u4860 3848                                 u4940 3F9C  
                               u3981 1024                                 u5397 4546  
                               u4861 3844                                 u4941 3F98  
                               u3990 1068                                 u4870 3912  
                               u4950 400A                                 u3991 1064  
                               u4871 390E                                 u4951 4006  
                               u4880 39A6                                 u4960 3268  
                               u4881 39A2                                 u4961 3264  
                               u4890 39B4                                 u4970 32AA  
                               u4891 39B0                                 u4971 32A6  
                               u4980 32C6                                 u4981 32C2  
                               u4990 32E8                                 u4991 32E4  
                               _dbuf 013C                                 _main 2C86  
                               _prec 00F5                                 _temp 00FC  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                    ___fldiv@new_exp 0033               __end_of_color_read_Red 42A6  
                       ___param_bank 0000              __end_of_color_cardCheck 1840  
                      ___fltol@sign1 0009                      __end_of___fladd 24C2  
                              ?_main 0001                      __end_of___fldiv 2C86  
                    __end_of___awdiv 3ED4                      __end_of___flmul 28EC  
                    __end_of___flsub 43DC                      __end_of___fltol 3D0C  
                    ___awdiv@divisor 0003                          ?_RGB_to_HSV 006A  
                    __end_of___lwdiv 41F2                      __end_of___lwmod 4256  
                    ___awdiv@counter 0005                         vfpfcnvrt@fmt 000F  
            __end_of_sendCharSerial4 4638           __end_of_I2C_2_Master_Start 4658  
         __end_of_I2C_2_Master_Write 4644                                _flags 00F7  
                       main@senddata 018B                                _fputc 3ED4  
                    __end_of_forward 3348                                _width 00F3  
                              _putch 4662                                main@i 01B4  
                              tablat 0FF5                                status 0FD8  
                    __end_of_sprintf 44DC              __end_of_color_read_Blue 4396  
              _I2C_2_Master_RepStart 4658                   _switch_calibration 3F8E  
                    ?_color_read_Red 0005                      __initialization 44DC  
                    main@Color_Value 01B7                         __end_of_main 2FEC  
                ?_switch_calibration 0001                               ??_main 005E  
                      __activetblptr 0003                  main@Operation_Count 01B6  
                       ?_setMotorPWM 000E                               ?_fputc 0001  
                             _CCPR1H 0FAA                               _CCPR2H 0FA6  
                             _CCPR3H 0F25                               _CCPR4H 0F21  
                   ___awdiv@dividend 0001                 ??_switch_calibration 0003  
                             ?_putch 0001                               _RC0PPS 0E62  
                             _RC4REG 0EE3                               _RE2PPS 0E74  
                             _RD5PPS 0E6F                               _RC7PPS 0E69  
                             _RD6PPS 0E70                               _RE4PPS 0E76  
                             _RG6PPS 0E88             __end_of_color_click_init 44A0  
                             _RX4PPS 0E15                     forward@max_power 0020  
                             _TX4REG 0EE4                     __end_of___xxtofl 31A0  
                       _CCPTMRS0bits 0FAD                         vfprintf@cfmt 001C  
                             ___flge 3D0C                               ___fleq 4040  
                   ?_color_cardCheck 005C                            ??___fladd 0009  
                             ___wmul 45BC                            ??___fldiv 002A  
                          ??___awdiv 0005                            ??___flmul 0043  
                          ??___flsub 0022                            ??___fltol 0005  
                          ??___lwdiv 000B                            ??___lwmod 0005  
      delay_ms_function@milliseconds 0001                               clear_0 44F4  
                             clear_1 4500                     ___awdiv@quotient 0007  
                             _motorL 0179                               _motorR 0170  
                             isa$std 0001                               fputc@c 0001  
                          ??_forward 0018                         __mediumconst 0000  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                     ?_sendCharSerial4 0001  
                             putch@c 0001                     __end_of_vfprintf 441E  
                  ??_initDCmotorsPWM 0003                            ??_sprintf 0022  
                   __end_of_turnLEFT 3694                           ___flge@ff1 0001  
                         ___flge@ff2 0005                         ___xxtofl@arg 0016  
                       ___xxtofl@exp 0015                         ___xxtofl@val 000C  
                         ___fleq@ff1 0001                           ___fleq@ff2 0005  
                         __accesstop 0060              __end_of__initialization 4506  
           __end_of_color_read_Clear 4346             __end_of_color_read_Green 42F6  
             ?_I2C_2_Master_RepStart 0001                        ___rparam_used 0001  
                         ___fltol@f1 0001                     ?_color_read_Blue 0005  
                     __pcstackCOMRAM 0001                         __pidataBANK0 4664  
                      __end_of_fputc 3F8E                        __end_of_putch 4664  
                  forward@delay_time 0022                       _RGB_to_HSV$321 009D  
                     _RGB_to_HSV$322 00A1                       _RGB_to_HSV$318 0091  
                     _RGB_to_HSV$319 0095                   RGB_to_HSV@deltaRGB 00AD  
                            ??_fputc 0004                              ??_putch 0001  
                         __pbssBANK0 00DF                           __pbssBANK1 0100  
                  _color_writetoaddr 45E2                         _T2CLKCONbits 0FBF  
                 _adjust_calibration 3998                              ?___flge 0001  
                            ?___fleq 0001                   ?_color_writetoaddr 0003  
                            ?___wmul 0001                  ?_adjust_calibration 0001  
                ??_color_writetoaddr 0004                         ??_RGB_to_HSV 005C  
                  _delay_ms_function 453C                            ?___xxtofl 000C  
                 ?_delay_ms_function 0001                              _SP4BRGH 0EE6  
                            _SP4BRGL 0EE5                              _SSP2ADD 0ED6  
                            _SSP2BUF 0ED5                  ??_delay_ms_function 0003  
               ??_adjust_calibration 0003               color_writetoaddr@value 0003  
       turnLEFT@rotation_calibration 001B                     ??_color_read_Red 0007  
          __end_of_color_writetoaddr 4602                          RGB_to_HSV@B 0072  
                        RGB_to_HSV@C 0076                          RGB_to_HSV@G 006E  
                        RGB_to_HSV@H 007A                          RGB_to_HSV@R 006A  
                        RGB_to_HSV@S 007B                          RGB_to_HSV@V 007C  
                        RGB_to_HSV@b 00BD                          RGB_to_HSV@g 00B9  
                 _I2C_2_Master_Start 464E                          RGB_to_HSV@r 00B5  
                         _initUSART4 4602                   _I2C_2_Master_Write 4638  
                            __Hparam 0000                   __end_of_RGB_to_HSV 2002  
                            __Lparam 0000                    color_read_Red@tmp 000A  
            sendStringSerial4@string 0002                              ___fladd 2002  
                            ___fldiv 28EC                              ___awdiv 3E10  
                            ___flmul 24C2                              ___flsub 4396  
                            ___fltol 3C06                  ?_I2C_2_Master_Start 0001  
                            ___lwdiv 417E                  ?_I2C_2_Master_Write 0001  
                            ___lwmod 41F2                            ?_vfprintf 0019  
                       __psmallconst 0E00                            ?_turnLEFT 0014  
          __end_of_delay_ms_function 456A                              __pcinit 44DC  
                            __ramtop 0E00                              __ptext0 2C86  
                            __ptext1 3348                              __ptext2 34EE  
                            __ptext3 3F8E                              __ptext4 44A0  
                            __ptext5 43DC                              __ptext6 3694  
                            __ptext7 3ED4                              __ptext8 4662  
                            __ptext9 41F2                            _T2CONbits 0FBD  
                            _forward 31A0                           ??___xxtofl 0010  
                          _T2HLTbits 0FBE                        _RxBufWriteCnt 00FB  
                            _sprintf 44A0                 ??_I2C_2_Master_Start 0002  
               ??_I2C_2_Master_Write 0002                 end_of_initialization 4506  
                            fputc@fp 0003                    ?_color_click_init 0001  
                 ??_color_click_init 0005                    __end_of_vfpfcnvrt 382C  
                            postdec2 0FDD                              postinc0 0FEE  
                            postinc1 0FE6                              postinc2 0FDE  
                   vfpfcnvrt@convarg 0013                           main@F14550 015C  
                         ??_vfprintf 001C                           ??_turnLEFT 0018  
                  __end_of_turnRIGHT 34EE                      _initDCmotorsPWM 40EA  
                 turnRIGHT@max_power 0020                            _PORTFbits 0F8E  
                 setMotorPWM@negDuty 0013                          ___fladd@grs 0010  
                      ___xxtofl@sign 0014                            _TRISAbits 0F81  
                 setMotorPWM@posDuty 0012                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 0001  
switch_calibration@calibration_index 0001                          ___fldiv@grs 0035  
                        ___fldiv@rem 002E             color_writetoaddr@address 0004  
            ??_I2C_2_Master_RepStart 0002                          ___flmul@grs 0048  
                        _CCP1CONbits 0FAB                    ?_color_read_Clear 0005  
                       _EUSART4RXbuf 00DF                         _EUSART4TXbuf 0100  
                        _CCP2CONbits 0FA7                    ?_color_read_Green 0005  
                        _CCP3CONbits 0F26                          ?_initUSART4 0001  
        forward@Distance_Calibration 001B                          _CCP4CONbits 0F22  
          sendCharSerial4@charToSend 0001                   ??_color_read_Clear 0007  
                 ??_color_read_Green 0007           __end_of_custom_floatmodulo 3C06  
                     __end_of___flge 3E10                       __end_of___fleq 40EA  
                        vfpfcnvrt@ap 0010                          vfpfcnvrt@cp 0017  
                        vfpfcnvrt@fp 000E                       __end_of___wmul 45E2  
          color_cardCheck@card_color 00D1                     RGB_to_HSV@H_temp 00A9  
                color_read_Clear@tmp 000A                  start_initialization 44DC  
                      _TxBufWriteCnt 00F9                     RGB_to_HSV@c_norm 007D  
                   RGB_to_HSV@maxRGB 00B1                     RGB_to_HSV@minRGB 0099  
                    _RGB_to_HSV$2680 008D                      _RGB_to_HSV$2676 0081  
                    _RGB_to_HSV$2677 0085                      _RGB_to_HSV$2678 0089  
                    _RGB_to_HSV$2679 00A5                  color_read_Green@tmp 000A  
                 turnLEFT@delay_time 0022              __end_of_initDCmotorsPWM 417E  
                        vfprintf@fmt 001A                             ??___flge 0009  
                           ??___fleq 0009                             ??___wmul 0005  
                custom_floatmodulo@x 0054                  custom_floatmodulo@y 0058  
                        __pdataBANK0 00FC                          _calibration 0182  
                          ___fladd@a 0005                            ___fladd@b 0001  
                          ___fldiv@a 0026                            ___fldiv@b 0022  
                          ___flmul@a 003F                            ___flmul@b 003B  
                          ___flsub@a 001E                            ___flsub@b 001A  
                      __pcstackBANK0 0060                        __pcstackBANK1 018B  
              main@Operation_History 019F            custom_floatmodulo@intPart 0068  
                   ___lwdiv@dividend 0007                          turnRIGHT@mL 0014  
                        turnRIGHT@mR 0016                             ?___fladd 0001  
                           ?___fldiv 0022                             ?___awdiv 0001  
                           ?___flmul 003B                             ?___flsub 001A  
                           ?___fltol 0001                             ?___lwdiv 0007  
                           ?___lwmod 0001                 I2C_2_Master_Read@ack 0003  
               I2C_2_Master_Read@tmp 0004                          __smallconst 0E00  
                           ?_forward 0014                    _I2C_2_Master_Idle 4594  
                  _I2C_2_Master_Init 456A                    _I2C_2_Master_Read 441E  
                  _I2C_2_Master_Stop 4644                         _RxBufReadCnt 00FA  
                 ?_I2C_2_Master_Idle 0001                   ?_I2C_2_Master_Init 0001  
                 ?_I2C_2_Master_Read 0001                        ??_setMotorPWM 0010  
                 ?_I2C_2_Master_Stop 0001                     ___lwdiv@quotient 000B  
           initDCmotorsPWM@PWMperiod 0001                             ?_sprintf 001D  
                  ??_color_cardCheck 005E                    _sendStringSerial4 450C  
                ??_I2C_2_Master_Idle 0001                  ??_I2C_2_Master_Init 0001  
                ??_I2C_2_Master_Read 0002                       ___wmul@product 0005  
                           _LATAbits 0F79                  ??_I2C_2_Master_Stop 0002  
                           _LATCbits 0F7B                             _LATDbits 0F7C  
                           _LATEbits 0F7D                             _LATFbits 0F7E  
                           _LATGbits 0F7F                             _LATHbits 0F80  
                 ?_sendStringSerial4 0002                             _PIE4bits 0E2D  
                           _PIR4bits 0E37                     ?_initDCmotorsPWM 0001  
                  ??_sendCharSerial4 0001                             _SSP2CON2 0EDA  
                ??_sendStringSerial4 0004                             _SSP2STAT 0ED8  
                          _vfpfcnvrt 3694            __end_of_I2C_2_Master_Idle 45BC  
          __end_of_I2C_2_Master_Init 4594            __end_of_I2C_2_Master_Read 4460  
                  ___wmul@multiplier 0001            __end_of_I2C_2_Master_Stop 464E  
                       setMotorPWM@m 000E          I2C_2_Master_Write@data_byte 0002  
      turnRIGHT@rotation_calibration 001B                            _turnRIGHT 3348  
                  ??_color_read_Blue 0007                         _TxBufReadCnt 00F8  
                         vfpfcnvrt@c 0018            __end_of_sendStringSerial4 453C  
      __end_of_I2C_2_Master_RepStart 4662                   color_read_Blue@tmp 000A  
                __end_of_setMotorPWM 3998                         ??_initUSART4 0001  
                           __Hrparam 0000                           vfprintf@ap 001B  
                           __Lrparam 0000                           vfprintf@fp 0019  
                          forward@mL 0014                            forward@mR 0016  
                         ?_vfpfcnvrt 000E                           _ANSELDbits 0EA7  
                         _ANSELFbits 0EB4                           sprintf@fmt 001F  
                         turnLEFT@mL 0014                           turnLEFT@mR 0016  
                           ___xxtofl 2FEC                           ?_turnRIGHT 0014  
                 _custom_floatmodulo 3AEE                      ___lwdiv@divisor 0009  
                         turnRIGHT@i 001C                           turnRIGHT@j 001E  
         __end_of_switch_calibration 4040                   __end_of_initUSART4 4620  
                    ___lwdiv@counter 000D                             __ptext10 450C  
                           __ptext11 4620                             __ptext20 4460  
                           __ptext12 4602                             __ptext21 45E2  
                           __ptext13 40EA                             __ptext30 464E  
                           __ptext22 456A                             __ptext14 31A0  
                           __ptext31 4658                             __ptext23 0E08  
                           __ptext15 382C                             __ptext40 24C2  
                           __ptext32 441E                             __ptext24 4256  
                           __ptext16 45BC                             __ptext41 4040  
                           __ptext33 4594                             __ptext25 42A6  
                           __ptext17 417E                             __ptext42 28EC  
                           __ptext34 1840                             __ptext26 42F6  
                           __ptext18 453C                             __ptext43 3D0C  
                           __ptext35 3AEE                             __ptext27 4346  
                           __ptext19 3E10                             __ptext44 3998  
                           __ptext36 2FEC                             __ptext28 4638  
                           __ptext37 3C06                             __ptext29 4644  
                           __ptext38 4396                             __ptext39 2002  
        custom_floatmodulo@remainder 0064                    turnLEFT@max_power 0020  
                       _SSP2CON1bits 0ED9                         _SSP2CON2bits 0EDA  
                ?_custom_floatmodulo 0054                             isa$xinst 0000  
                         _RC4STAbits 0EE7                             _vfprintf 43DC  
               ??_custom_floatmodulo 005C                             _turnLEFT 34EE  
                turnRIGHT@delay_time 0022                    main@Forward_Count 01B3  
                           forward@i 001C                             forward@j 001E  
                        _setMotorPWM 382C                            sprintf@ap 0022  
                          turnLEFT@i 001C                            turnLEFT@j 001E  
                   ___lwmod@dividend 0001           custom_floatmodulo@quotient 0060  
                        ??_vfpfcnvrt 0011                     _color_click_init 4460  
                    _color_cardCheck 0E08                             sprintf@f 0023  
                         _RGB_to_HSV 1840                             sprintf@s 001D  
                         _SSP2DATPPS 0E1D                           _SSP2CLKPPS 0E1C  
                    ___lwmod@divisor 0003                          ??_turnRIGHT 0018  
                    ___lwmod@counter 0005                     color_cardCheck@H 00D3  
                   color_cardCheck@S 00D7                     color_cardCheck@V 00DB  
                   color_cardCheck@b 00C9                     color_cardCheck@c 00CD  
                   color_cardCheck@g 00C5                     color_cardCheck@r 00C1  
                      ___fladd@signs 000D                           _TX4STAbits 0EE8  
                    _sendCharSerial4 4620                         ___fladd@aexp 000E  
                       ___fladd@bexp 000F  
