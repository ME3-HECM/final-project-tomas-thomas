

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 22:49:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataBANK0
    94   004D34                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _length
    98   004D34  32                 	db	50
    99                           
   100                           ;initializer for _temp
   101   004D35  07                 	db	7
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _TRISDbits	set	3972
   106   000000                     _LATEbits	set	3965
   107   000000                     _LATHbits	set	3968
   108   000000                     _SSP2CON2bits	set	3802
   109   000000                     _RX4PPS	set	3605
   110   000000                     _SSP2CLKPPS	set	3612
   111   000000                     _SSP2DATPPS	set	3613
   112   000000                     _RC7PPS	set	3689
   113   000000                     _RE2PPS	set	3700
   114   000000                     _LATAbits	set	3961
   115   000000                     _LATGbits	set	3967
   116   000000                     _TRISAbits	set	3969
   117   000000                     _TRISGbits	set	3975
   118   000000                     _TRISHbits	set	3976
   119   000000                     _PORTFbits	set	3982
   120   000000                     _TRISCbits	set	3971
   121   000000                     _TRISEbits	set	3973
   122   000000                     _TRISFbits	set	3974
   123   000000                     _LATCbits	set	3963
   124   000000                     _LATDbits	set	3964
   125   000000                     _LATFbits	set	3966
   126   000000                     _T2PR	set	4028
   127   000000                     _T2CONbits	set	4029
   128   000000                     _CCPR2H	set	4006
   129   000000                     _CCPR1H	set	4010
   130   000000                     _RE4PPS	set	3702
   131   000000                     _RG6PPS	set	3720
   132   000000                     _RD5PPS	set	3695
   133   000000                     _ANSELDbits	set	3751
   134   000000                     _ANSELFbits	set	3764
   135   000000                     _CCPR4H	set	3873
   136   000000                     _CCPR3H	set	3877
   137   000000                     _T2CLKCONbits	set	4031
   138   000000                     _T2HLTbits	set	4030
   139   000000                     _CCP1CONbits	set	4011
   140   000000                     _CCPTMRS0bits	set	4013
   141   000000                     _CCP2CONbits	set	4007
   142   000000                     _CCP3CONbits	set	3878
   143   000000                     _CCP4CONbits	set	3874
   144   000000                     _SSP2BUF	set	3797
   145   000000                     _SSP2ADD	set	3798
   146   000000                     _SSP2CON1bits	set	3801
   147   000000                     _RC4REG	set	3811
   148   000000                     _SP4BRGL	set	3813
   149   000000                     _TX4STAbits	set	3816
   150   000000                     _BAUD4CONbits	set	3817
   151   000000                     _SSP2CON2	set	3802
   152   000000                     _SSP2STAT	set	3800
   153   000000                     _PIE4bits	set	3629
   154   000000                     _PIR4bits	set	3639
   155   000000                     _RC0PPS	set	3682
   156   000000                     _RD6PPS	set	3696
   157                           
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161   004C0E                     __pcinit:
   162                           	callstack 0
   163   004C0E                     start_initialization:
   164                           	callstack 0
   165   004C0E                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Initialize objects allocated to BANK0 (2 bytes)
   169                           ; load TBLPTR registers with __pidataBANK0
   170   004C0E  0E34               	movlw	low __pidataBANK0
   171   004C10  6EF6               	movwf	tblptrl,c
   172   004C12  0E4D               	movlw	high __pidataBANK0
   173   004C14  6EF7               	movwf	tblptrh,c
   174   004C16  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   175   004C18  6EF8               	movwf	tblptru,c
   176   004C1A  0009               	tblrd		*+	;fetch initializer
   177   004C1C  CFF5 F0FD          	movff	tablat,__pdataBANK0
   178   004C20  0009               	tblrd		*+	;fetch initializer
   179   004C22  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   180                           
   181                           ; Clear objects allocated to BANK1 (139 bytes)
   182   004C26  EE01  F000         	lfsr	0,__pbssBANK1
   183   004C2A  0E8B               	movlw	139
   184   004C2C                     clear_0:
   185   004C2C  6AEE               	clrf	postinc0,c
   186   004C2E  06E8               	decf	wreg,f,c
   187   004C30  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (26 bytes)
   190   004C32  EE00  F0E3         	lfsr	0,__pbssBANK0
   191   004C36  0E1A               	movlw	26
   192   004C38                     clear_1:
   193   004C38  6AEE               	clrf	postinc0,c
   194   004C3A  06E8               	decf	wreg,f,c
   195   004C3C  E1FD               	bnz	clear_1
   196   004C3E                     end_of_initialization:
   197                           	callstack 0
   198   004C3E                     __end_of__initialization:
   199                           	callstack 0
   200   004C3E  0100               	movlb	0
   201   004C40  EFD4  F022         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssBANK0
   204   0000E3                     __pbssBANK0:
   205                           	callstack 0
   206   0000E3                     _Color_Value:
   207                           	callstack 0
   208   0000E3                     	ds	2
   209   0000E5                     _Forward_Count:
   210                           	callstack 0
   211   0000E5                     	ds	1
   212   0000E6                     _Operation_Count:
   213                           	callstack 0
   214   0000E6                     	ds	1
   215   0000E7                     _TxBufReadCnt:
   216                           	callstack 0
   217   0000E7                     	ds	1
   218   0000E8                     _TxBufWriteCnt:
   219                           	callstack 0
   220   0000E8                     	ds	1
   221   0000E9                     _RxBufReadCnt:
   222                           	callstack 0
   223   0000E9                     	ds	1
   224   0000EA                     _RxBufWriteCnt:
   225                           	callstack 0
   226   0000EA                     	ds	1
   227   0000EB                     _motorR:
   228                           	callstack 0
   229   0000EB                     	ds	9
   230   0000F4                     _motorL:
   231                           	callstack 0
   232   0000F4                     	ds	9
   233                           
   234                           	psect	dataBANK0
   235   0000FD                     __pdataBANK0:
   236                           	callstack 0
   237   0000FD                     _length:
   238                           	callstack 0
   239   0000FD                     	ds	1
   240   0000FE                     _temp:
   241                           	callstack 0
   242   0000FE                     	ds	1
   243                           
   244                           	psect	bssBANK1
   245   000100                     __pbssBANK1:
   246                           	callstack 0
   247   000100                     _EUSART4TXbuf:
   248                           	callstack 0
   249   000100                     	ds	60
   250   00013C                     _Operation_History:
   251                           	callstack 0
   252   00013C                     	ds	50
   253   00016E                     _EUSART4RXbuf:
   254                           	callstack 0
   255   00016E                     	ds	20
   256   000182                     _calibration:
   257                           	callstack 0
   258   000182                     	ds	9
   259                           
   260                           	psect	cstackBANK0
   261   000060                     __pcstackBANK0:
   262                           	callstack 0
   263   000060                     custom_floatmodulo@quotient:
   264                           	callstack 0
   265                           
   266                           ; 4 bytes @ 0x0
   267   000060                     	ds	4
   268   000064                     custom_floatmodulo@remainder:
   269                           	callstack 0
   270                           
   271                           ; 4 bytes @ 0x4
   272   000064                     	ds	4
   273   000068                     custom_floatmodulo@intPart:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x8
   277   000068                     	ds	2
   278   00006A                     RGB_to_HSV@R:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0xA
   282   00006A                     	ds	4
   283   00006E                     RGB_to_HSV@G:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0xE
   287   00006E                     	ds	4
   288   000072                     RGB_to_HSV@B:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x12
   292   000072                     	ds	4
   293   000076                     RGB_to_HSV@C:
   294                           	callstack 0
   295                           
   296                           ; 4 bytes @ 0x16
   297   000076                     	ds	4
   298   00007A                     RGB_to_HSV@H:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x1A
   302   00007A                     	ds	1
   303   00007B                     RGB_to_HSV@S:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x1B
   307   00007B                     	ds	1
   308   00007C                     RGB_to_HSV@V:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x1C
   312   00007C                     	ds	1
   313   00007D                     RGB_to_HSV@c_norm:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x1D
   317   00007D                     	ds	4
   318   000081                     _RGB_to_HSV$2717:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0x21
   322   000081                     	ds	4
   323   000085                     _RGB_to_HSV$2718:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x25
   327   000085                     	ds	4
   328   000089                     _RGB_to_HSV$2719:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x29
   332   000089                     	ds	4
   333   00008D                     _RGB_to_HSV$2721:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x2D
   337   00008D                     	ds	4
   338   000091                     _RGB_to_HSV$318:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x31
   342   000091                     	ds	4
   343   000095                     _RGB_to_HSV$319:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x35
   347   000095                     	ds	4
   348   000099                     RGB_to_HSV@minRGB:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x39
   352   000099                     	ds	4
   353   00009D                     _RGB_to_HSV$321:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x3D
   357   00009D                     	ds	4
   358   0000A1                     _RGB_to_HSV$322:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x41
   362   0000A1                     	ds	4
   363   0000A5                     _RGB_to_HSV$2720:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x45
   367   0000A5                     	ds	4
   368   0000A9                     RGB_to_HSV@H_temp:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x49
   372   0000A9                     	ds	4
   373   0000AD                     RGB_to_HSV@deltaRGB:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x4D
   377   0000AD                     	ds	4
   378   0000B1                     RGB_to_HSV@maxRGB:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x51
   382   0000B1                     	ds	4
   383   0000B5                     RGB_to_HSV@r:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x55
   387   0000B5                     	ds	4
   388   0000B9                     RGB_to_HSV@g:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x59
   392   0000B9                     	ds	4
   393   0000BD                     RGB_to_HSV@b:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x5D
   397   0000BD                     	ds	4
   398   0000C1                     color_cardCheck@r:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0x61
   402   0000C1                     	ds	4
   403   0000C5                     color_cardCheck@g:
   404                           	callstack 0
   405                           
   406                           ; 4 bytes @ 0x65
   407   0000C5                     	ds	4
   408   0000C9                     color_cardCheck@b:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x69
   412   0000C9                     	ds	4
   413   0000CD                     color_cardCheck@c:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x6D
   417   0000CD                     	ds	4
   418   0000D1                     color_cardCheck@card_color:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x71
   422   0000D1                     	ds	2
   423   0000D3                     color_cardCheck@H:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x73
   427   0000D3                     	ds	4
   428   0000D7                     color_cardCheck@S:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x77
   432   0000D7                     	ds	4
   433   0000DB                     color_cardCheck@V:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x7B
   437   0000DB                     	ds	4
   438   0000DF                     maze_search@c:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x7F
   442   0000DF                     	ds	2
   443   0000E1                     maze_search@mL:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x81
   447   0000E1                     	ds	1
   448   0000E2                     maze_search@mR:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x82
   452   0000E2                     	ds	1
   453                           
   454                           	psect	cstackCOMRAM
   455   000001                     __pcstackCOMRAM:
   456                           	callstack 0
   457   000001                     ??_pause_until_RF2_pressed:
   458   000001                     ??_I2C_2_Master_Idle:
   459   000001                     ?___wmul:
   460                           	callstack 0
   461   000001                     ?___awdiv:
   462                           	callstack 0
   463   000001                     ?___fladd:
   464                           	callstack 0
   465   000001                     ?___fltol:
   466                           	callstack 0
   467   000001                     adjust_calibration@calibration_label:
   468                           	callstack 0
   469   000001                     switch_calibration@calibration_index:
   470                           	callstack 0
   471   000001                     initDCmotorsPWM@PWMperiod:
   472                           	callstack 0
   473   000001                     delay_ms_function@milliseconds:
   474                           	callstack 0
   475   000001                     ___wmul@multiplier:
   476                           	callstack 0
   477   000001                     ___awdiv@dividend:
   478                           	callstack 0
   479   000001                     ___fleq@ff1:
   480                           	callstack 0
   481   000001                     ___flge@ff1:
   482                           	callstack 0
   483   000001                     ___fltol@f1:
   484                           	callstack 0
   485   000001                     ___fladd@b:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x0
   489   000001                     	ds	1
   490   000002                     ??_I2C_2_Master_Read:
   491   000002                     I2C_2_Master_Write@data_byte:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x1
   495   000002                     	ds	1
   496   000003                     ??_adjust_calibration:
   497   000003                     ??_switch_calibration:
   498   000003                     ??_delay_ms_function:
   499   000003                     color_writetoaddr@value:
   500                           	callstack 0
   501   000003                     I2C_2_Master_Read@ack:
   502                           	callstack 0
   503   000003                     ___wmul@multiplicand:
   504                           	callstack 0
   505   000003                     ___awdiv@divisor:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x2
   509   000003                     	ds	1
   510   000004                     color_writetoaddr@address:
   511                           	callstack 0
   512   000004                     I2C_2_Master_Read@tmp:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x3
   516   000004                     	ds	1
   517   000005                     ??_color_click_init:
   518   000005                     ??___fltol:
   519   000005                     ?_color_read_Red:
   520                           	callstack 0
   521   000005                     ?_color_read_Green:
   522                           	callstack 0
   523   000005                     ?_color_read_Blue:
   524                           	callstack 0
   525   000005                     ?_color_read_Clear:
   526                           	callstack 0
   527   000005                     ___awdiv@counter:
   528                           	callstack 0
   529   000005                     ___wmul@product:
   530                           	callstack 0
   531   000005                     ___fleq@ff2:
   532                           	callstack 0
   533   000005                     ___flge@ff2:
   534                           	callstack 0
   535   000005                     ___fladd@a:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x4
   539   000005                     	ds	1
   540   000006                     ___awdiv@sign:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x5
   544   000006                     	ds	1
   545   000007                     ??_color_read_Red:
   546   000007                     ??_color_read_Green:
   547   000007                     ??_color_read_Blue:
   548   000007                     ??_color_read_Clear:
   549   000007                     ?___lwdiv:
   550                           	callstack 0
   551   000007                     ___awdiv@quotient:
   552                           	callstack 0
   553   000007                     ___lwdiv@dividend:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x6
   557   000007                     	ds	2
   558   000009                     ??___fladd:
   559   000009                     ??___fleq:
   560   000009                     ??___flge:
   561   000009                     ___fltol@sign1:
   562                           	callstack 0
   563   000009                     ___lwdiv@divisor:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x8
   567   000009                     	ds	1
   568   00000A                     ___fltol@exp1:
   569                           	callstack 0
   570   00000A                     color_read_Red@tmp:
   571                           	callstack 0
   572   00000A                     color_read_Green@tmp:
   573                           	callstack 0
   574   00000A                     color_read_Blue@tmp:
   575                           	callstack 0
   576   00000A                     color_read_Clear@tmp:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x9
   580   00000A                     	ds	1
   581   00000B                     ___lwdiv@quotient:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xA
   585   00000B                     	ds	1
   586   00000C                     ?___xxtofl:
   587                           	callstack 0
   588   00000C                     ___xxtofl@val:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0xB
   592   00000C                     	ds	1
   593   00000D                     ___lwdiv@counter:
   594                           	callstack 0
   595   00000D                     ___fladd@signs:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0xC
   599   00000D                     	ds	1
   600   00000E                     setMotorPWM@m:
   601                           	callstack 0
   602   00000E                     ___fladd@aexp:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0xD
   606   00000E                     	ds	1
   607   00000F                     ??_setMotorPWM:
   608   00000F                     ___fladd@bexp:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0xE
   612   00000F                     	ds	1
   613   000010                     ??___xxtofl:
   614   000010                     ___fladd@grs:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0xF
   618   000010                     	ds	1
   619   000011                     setMotorPWM@posDuty:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x10
   623   000011                     	ds	1
   624   000012                     setMotorPWM@negDuty:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x11
   628   000012                     	ds	1
   629   000013                     forward@mL:
   630                           	callstack 0
   631   000013                     backward@mL:
   632                           	callstack 0
   633   000013                     leftTURN@mL:
   634                           	callstack 0
   635   000013                     rightTURN@mL:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x12
   639   000013                     	ds	1
   640   000014                     forward@mR:
   641                           	callstack 0
   642   000014                     backward@mR:
   643                           	callstack 0
   644   000014                     leftTURN@mR:
   645                           	callstack 0
   646   000014                     rightTURN@mR:
   647                           	callstack 0
   648   000014                     ___xxtofl@sign:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x13
   652   000014                     	ds	1
   653   000015                     ??_rightTURN:
   654   000015                     ??_leftTURN:
   655   000015                     ??_forward:
   656   000015                     ??_backward:
   657   000015                     ___xxtofl@exp:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x14
   661   000015                     	ds	1
   662   000016                     ___xxtofl@arg:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x15
   666   000016                     	ds	2
   667   000018                     forward@Distance_Calibration:
   668                           	callstack 0
   669   000018                     backward@Distance_Calibration:
   670                           	callstack 0
   671   000018                     leftTURN@rotation_calibration:
   672                           	callstack 0
   673   000018                     rightTURN@rotation_calibration:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x17
   677   000018                     	ds	1
   678   000019                     forward@i:
   679                           	callstack 0
   680   000019                     backward@i:
   681                           	callstack 0
   682   000019                     leftTURN@i:
   683                           	callstack 0
   684   000019                     rightTURN@i:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x18
   688   000019                     	ds	1
   689   00001A                     ?___flsub:
   690                           	callstack 0
   691   00001A                     ___flsub@b:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x19
   695   00001A                     	ds	1
   696   00001B                     forward@j:
   697                           	callstack 0
   698   00001B                     backward@j:
   699                           	callstack 0
   700   00001B                     leftTURN@j:
   701                           	callstack 0
   702   00001B                     rightTURN@j:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x1A
   706   00001B                     	ds	2
   707   00001D                     forward@max_power:
   708                           	callstack 0
   709   00001D                     backward@max_power:
   710                           	callstack 0
   711   00001D                     leftTURN@max_power:
   712                           	callstack 0
   713   00001D                     rightTURN@max_power:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x1C
   717   00001D                     	ds	1
   718   00001E                     ___flsub@a:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x1D
   722   00001E                     	ds	1
   723   00001F                     forward@delay_time:
   724                           	callstack 0
   725   00001F                     backward@delay_time:
   726                           	callstack 0
   727   00001F                     leftTURN@delay_time:
   728                           	callstack 0
   729   00001F                     rightTURN@delay_time:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x1E
   733   00001F                     	ds	2
   734   000021                     calibration_routine@c:
   735                           	callstack 0
   736   000021                     maze_return@c:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x20
   740   000021                     	ds	1
   741   000022                     ?___fldiv:
   742                           	callstack 0
   743   000022                     ___fldiv@b:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x21
   747   000022                     	ds	1
   748   000023                     calibration_routine@mL:
   749                           	callstack 0
   750   000023                     maze_return@mL:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x22
   754   000023                     	ds	1
   755   000024                     calibration_routine@mR:
   756                           	callstack 0
   757   000024                     maze_return@mR:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x23
   761   000024                     	ds	1
   762   000025                     ??_maze_return:
   763   000025                     
   764                           ; 1 bytes @ 0x24
   765   000025                     	ds	1
   766   000026                     ___fldiv@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x25
   770   000026                     	ds	2
   771   000028                     maze_return@distance_back:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x27
   775   000028                     	ds	1
   776   000029                     maze_return@j:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x28
   780   000029                     	ds	1
   781   00002A                     ??___fldiv:
   782                           
   783                           ; 1 bytes @ 0x29
   784   00002A                     	ds	1
   785   00002B                     maze_return@i_2041:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x2A
   789   00002B                     	ds	2
   790   00002D                     maze_return@i:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2C
   794   00002D                     	ds	1
   795   00002E                     ___fldiv@rem:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x2D
   799   00002E                     	ds	4
   800   000032                     ___fldiv@sign:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x31
   804   000032                     	ds	1
   805   000033                     ___fldiv@new_exp:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x32
   809   000033                     	ds	2
   810   000035                     ___fldiv@grs:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x34
   814   000035                     	ds	4
   815   000039                     ___fldiv@bexp:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x38
   819   000039                     	ds	1
   820   00003A                     ___fldiv@aexp:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x39
   824   00003A                     	ds	1
   825   00003B                     ?___flmul:
   826                           	callstack 0
   827   00003B                     ___flmul@b:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x3A
   831   00003B                     	ds	4
   832   00003F                     ___flmul@a:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x3E
   836   00003F                     	ds	4
   837   000043                     ??___flmul:
   838                           
   839                           ; 1 bytes @ 0x42
   840   000043                     	ds	4
   841   000047                     ___flmul@sign:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x46
   845   000047                     	ds	1
   846   000048                     ___flmul@grs:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x47
   850   000048                     	ds	4
   851   00004C                     ___flmul@aexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x4B
   855   00004C                     	ds	1
   856   00004D                     ___flmul@bexp:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x4C
   860   00004D                     	ds	1
   861   00004E                     ___flmul@prod:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x4D
   865   00004E                     	ds	4
   866   000052                     ___flmul@temp:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x51
   870   000052                     	ds	2
   871   000054                     ?_custom_floatmodulo:
   872                           	callstack 0
   873   000054                     custom_floatmodulo@x:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x53
   877   000054                     	ds	4
   878   000058                     custom_floatmodulo@y:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x57
   882   000058                     	ds	4
   883   00005C                     ?_color_cardCheck:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x5B
   887   00005C                     	ds	2
   888   00005E                     ??_maze_search:
   889   00005E                     
   890                           ; 1 bytes @ 0x5D
   891   00005E                     	ds	2
   892   000060                     
   893                           ; 1 bytes @ 0x5F
   894 ;;
   895 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   896 ;;
   897 ;; *************** function _main *****************
   898 ;; Defined at:
   899 ;;		line 19 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  PWMperiod       2    0        unsigned int 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels required when called: 6
   919 ;; This function calls:
   920 ;;		_calibration_routine
   921 ;;		_initDCmotorsPWM
   922 ;;		_maze_return
   923 ;;		_maze_search
   924 ;;		_pause_until_RF2_pressed
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931   0045A8                     __ptext0:
   932                           	callstack 0
   933   0045A8                     _main:
   934                           	callstack 25
   935   0045A8                     
   936                           ;main.c: 21:     initDCmotorsPWM(PWMperiod);
   937   0045A8  0E00               	movlw	0
   938   0045AA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   939   0045AC  0E63               	movlw	99
   940   0045AE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   941   0045B0  EC50  F024         	call	_initDCmotorsPWM	;wreg free
   942   0045B4                     
   943                           ;main.c: 24:     motorL.power=0;
   944   0045B4  0E00               	movlw	0
   945   0045B6  0100               	movlb	0	; () banked
   946   0045B8  6FF4               	movwf	_motorL& (0+255),b
   947   0045BA                     
   948                           ; BSR set to: 0
   949                           ;main.c: 25:     motorL.direction=1;
   950   0045BA  0E01               	movlw	1
   951   0045BC  6FF5               	movwf	(_motorL+1)& (0+255),b
   952   0045BE                     
   953                           ; BSR set to: 0
   954                           ;main.c: 26:     motorL.brakemode=1;
   955   0045BE  0E01               	movlw	1
   956   0045C0  6FF6               	movwf	(_motorL+2)& (0+255),b
   957   0045C2                     
   958                           ; BSR set to: 0
   959                           ;main.c: 27:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   960   0045C2  0EAA               	movlw	170
   961   0045C4  6FF9               	movwf	(_motorL+5)& (0+255),b
   962   0045C6  0E0F               	movlw	15
   963   0045C8  6FFA               	movwf	(_motorL+6)& (0+255),b
   964   0045CA                     
   965                           ; BSR set to: 0
   966                           ;main.c: 28:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   967   0045CA  0EA6               	movlw	166
   968   0045CC  6FFB               	movwf	(_motorL+7)& (0+255),b
   969   0045CE  0E0F               	movlw	15
   970   0045D0  6FFC               	movwf	(_motorL+8)& (0+255),b
   971   0045D2                     
   972                           ; BSR set to: 0
   973                           ;main.c: 29:     motorL.PWMperiod=PWMperiod;
   974   0045D2  0E00               	movlw	0
   975   0045D4  6FF8               	movwf	(_motorL+4)& (0+255),b
   976   0045D6  0E63               	movlw	99
   977   0045D8  6FF7               	movwf	(_motorL+3)& (0+255),b
   978   0045DA                     
   979                           ; BSR set to: 0
   980                           ;main.c: 31:     motorR.power=0;
   981   0045DA  0E00               	movlw	0
   982   0045DC  6FEB               	movwf	_motorR& (0+255),b
   983   0045DE                     
   984                           ; BSR set to: 0
   985                           ;main.c: 32:     motorR.direction=1;
   986   0045DE  0E01               	movlw	1
   987   0045E0  6FEC               	movwf	(_motorR+1)& (0+255),b
   988   0045E2                     
   989                           ; BSR set to: 0
   990                           ;main.c: 33:     motorR.brakemode=1;
   991   0045E2  0E01               	movlw	1
   992   0045E4  6FED               	movwf	(_motorR+2)& (0+255),b
   993   0045E6                     
   994                           ; BSR set to: 0
   995                           ;main.c: 34:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   996   0045E6  0E25               	movlw	37
   997   0045E8  6FF0               	movwf	(_motorR+5)& (0+255),b
   998   0045EA  0E0F               	movlw	15
   999   0045EC  6FF1               	movwf	(_motorR+6)& (0+255),b
  1000   0045EE                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 35:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1003   0045EE  0E21               	movlw	33
  1004   0045F0  6FF2               	movwf	(_motorR+7)& (0+255),b
  1005   0045F2  0E0F               	movlw	15
  1006   0045F4  6FF3               	movwf	(_motorR+8)& (0+255),b
  1007   0045F6                     
  1008                           ; BSR set to: 0
  1009                           ;main.c: 36:     motorR.PWMperiod=PWMperiod;
  1010   0045F6  0E00               	movlw	0
  1011   0045F8  6FEF               	movwf	(_motorR+4)& (0+255),b
  1012   0045FA  0E63               	movlw	99
  1013   0045FC  6FEE               	movwf	(_motorR+3)& (0+255),b
  1014   0045FE                     
  1015                           ; BSR set to: 0
  1016                           ;main.c: 42:     TRISDbits.TRISD7 = 0;
  1017   0045FE  9E84               	bcf	132,7,c	;volatile
  1018   004600                     
  1019                           ; BSR set to: 0
  1020                           ;main.c: 43:     LATDbits.LATD7 = 0;
  1021   004600  9E7C               	bcf	124,7,c	;volatile
  1022   004602                     
  1023                           ; BSR set to: 0
  1024                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
  1025   004602  9688               	bcf	136,3,c	;volatile
  1026   004604                     
  1027                           ; BSR set to: 0
  1028                           ;main.c: 47:     LATHbits.LATH3 = 0;
  1029   004604  9680               	bcf	128,3,c	;volatile
  1030   004606                     
  1031                           ; BSR set to: 0
  1032                           ;main.c: 50:     TRISFbits.TRISF2=1;
  1033   004606  8486               	bsf	134,2,c	;volatile
  1034   004608                     
  1035                           ; BSR set to: 0
  1036                           ;main.c: 51:     ANSELFbits.ANSELF2=0;
  1037   004608  010E               	movlb	14	; () banked
  1038   00460A  95B4               	bcf	180,2,b	;volatile
  1039   00460C                     
  1040                           ; BSR set to: 14
  1041                           ;main.c: 54:     TRISFbits.TRISF3=1;
  1042   00460C  8686               	bsf	134,3,c	;volatile
  1043   00460E                     
  1044                           ; BSR set to: 14
  1045                           ;main.c: 55:     ANSELFbits.ANSELF3=0;
  1046   00460E  97B4               	bcf	180,3,b	;volatile
  1047   004610                     
  1048                           ; BSR set to: 14
  1049                           ;main.c: 59:     calibration.index = 1;
  1050   004610  0E01               	movlw	1
  1051   004612  0101               	movlb	1	; () banked
  1052   004614  6F82               	movwf	_calibration& (0+255),b
  1053   004616                     
  1054                           ; BSR set to: 1
  1055                           ;main.c: 61:     calibration.right_90 = 25;
  1056   004616  0E19               	movlw	25
  1057   004618  6F83               	movwf	(_calibration+1)& (0+255),b
  1058   00461A                     
  1059                           ; BSR set to: 1
  1060                           ;main.c: 62:     calibration.left_90 = 25;
  1061   00461A  0E19               	movlw	25
  1062   00461C  6F84               	movwf	(_calibration+2)& (0+255),b
  1063   00461E                     
  1064                           ; BSR set to: 1
  1065                           ;main.c: 64:     calibration.right_135 = 40;
  1066   00461E  0E28               	movlw	40
  1067   004620  6F85               	movwf	(_calibration+3)& (0+255),b
  1068   004622                     
  1069                           ; BSR set to: 1
  1070                           ;main.c: 65:     calibration.left_135 = 40;
  1071   004622  0E28               	movlw	40
  1072   004624  6F86               	movwf	(_calibration+4)& (0+255),b
  1073   004626                     
  1074                           ; BSR set to: 1
  1075                           ;main.c: 67:     calibration.forward_one = 100;
  1076   004626  0E64               	movlw	100
  1077   004628  6F87               	movwf	(_calibration+5)& (0+255),b
  1078   00462A                     
  1079                           ; BSR set to: 1
  1080                           ;main.c: 68:     calibration.backward_one = 100;
  1081   00462A  0E64               	movlw	100
  1082   00462C  6F88               	movwf	(_calibration+6)& (0+255),b
  1083   00462E                     
  1084                           ; BSR set to: 1
  1085                           ;main.c: 70:     calibration.forward_half = 20;
  1086   00462E  0E14               	movlw	20
  1087   004630  6F89               	movwf	(_calibration+7)& (0+255),b
  1088   004632                     
  1089                           ; BSR set to: 1
  1090                           ;main.c: 71:     calibration.backward_half = 20;
  1091   004632  0E14               	movlw	20
  1092   004634  6F8A               	movwf	(_calibration+8)& (0+255),b
  1093   004636                     l5000:
  1094                           
  1095                           ;main.c: 78:         pause_until_RF2_pressed();
  1096   004636  ECD4  F024         	call	_pause_until_RF2_pressed	;wreg free
  1097   00463A                     
  1098                           ;main.c: 80:         calibration_routine(&calibration, &motorL, &motorR);
  1099   00463A  0E82               	movlw	low _calibration
  1100   00463C  6E21               	movwf	calibration_routine@c^0,c
  1101   00463E  0E01               	movlw	high _calibration
  1102   004640  6E22               	movwf	(calibration_routine@c+1)^0,c
  1103   004642  0EF4               	movlw	low _motorL
  1104   004644  6E23               	movwf	calibration_routine@mL^0,c
  1105   004646  0EEB               	movlw	low _motorR
  1106   004648  6E24               	movwf	calibration_routine@mR^0,c
  1107   00464A  ECC5  F01A         	call	_calibration_routine	;wreg free
  1108   00464E                     
  1109                           ;main.c: 82:         maze_search(&calibration, &motorL, &motorR);
  1110   00464E  0E82               	movlw	low _calibration
  1111   004650  0100               	movlb	0	; () banked
  1112   004652  6FDF               	movwf	maze_search@c& (0+255),b
  1113   004654  0E01               	movlw	high _calibration
  1114   004656  6FE0               	movwf	(maze_search@c+1)& (0+255),b
  1115   004658  0EF4               	movlw	low _motorL
  1116   00465A  6FE1               	movwf	maze_search@mL& (0+255),b
  1117   00465C  0EEB               	movlw	low _motorR
  1118   00465E  6FE2               	movwf	maze_search@mR& (0+255),b
  1119   004660  ECED  F016         	call	_maze_search	;wreg free
  1120   004664                     
  1121                           ;main.c: 84:         maze_return(&calibration, &motorL, &motorR);
  1122   004664  0E82               	movlw	low _calibration
  1123   004666  6E21               	movwf	maze_return@c^0,c
  1124   004668  0E01               	movlw	high _calibration
  1125   00466A  6E22               	movwf	(maze_return@c+1)^0,c
  1126   00466C  0EF4               	movlw	low _motorL
  1127   00466E  6E23               	movwf	maze_return@mL^0,c
  1128   004670  0EEB               	movlw	low _motorR
  1129   004672  6E24               	movwf	maze_return@mR^0,c
  1130   004674  ECFE  F00F         	call	_maze_return	;wreg free
  1131   004678  EF1B  F023         	goto	l5000
  1132   00467C  EF00  F000         	goto	start
  1133   004680                     __end_of_main:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _pause_until_RF2_pressed *****************
  1137 ;; Defined at:
  1138 ;;		line 6 in file "calibration.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text1
  1166   0049A8                     __ptext1:
  1167                           	callstack 0
  1168   0049A8                     _pause_until_RF2_pressed:
  1169                           	callstack 30
  1170   0049A8                     l132:
  1171                           
  1172                           ;calibration.c: 9:         LATDbits.LATD7 = 1;
  1173   0049A8  8E7C               	bsf	124,7,c	;volatile
  1174   0049AA                     
  1175                           ;calibration.c: 10:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1176   0049AA  0E09               	movlw	9
  1177   0049AC  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1178   0049AE  0E1E               	movlw	30
  1179   0049B0  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1180   0049B2  0EE4               	movlw	228
  1181   0049B4                     u5507:
  1182   0049B4  2EE8               	decfsz	wreg,f,c
  1183   0049B6  D7FE               	bra	u5507
  1184   0049B8  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1185   0049BA  D7FC               	bra	u5507
  1186   0049BC  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1187   0049BE  D7FA               	bra	u5507
  1188   0049C0  D000               	nop2	
  1189   0049C2                     
  1190                           ;calibration.c: 11:         LATDbits.LATD7 = 0;
  1191   0049C2  9E7C               	bcf	124,7,c	;volatile
  1192                           
  1193                           ;calibration.c: 12:         _delay((unsigned long)((100)*(64000000/4000.0)));
  1194   0049C4  0E09               	movlw	9
  1195   0049C6  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1196   0049C8  0E1E               	movlw	30
  1197   0049CA  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1198   0049CC  0EE4               	movlw	228
  1199   0049CE                     u5517:
  1200   0049CE  2EE8               	decfsz	wreg,f,c
  1201   0049D0  D7FE               	bra	u5517
  1202   0049D2  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1203   0049D4  D7FC               	bra	u5517
  1204   0049D6  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1205   0049D8  D7FA               	bra	u5517
  1206   0049DA  D000               	nop2	
  1207   0049DC                     
  1208                           ;calibration.c: 14:         if(!PORTFbits.RF2){
  1209   0049DC  B48E               	btfsc	142,2,c	;volatile
  1210   0049DE  EFF3  F024         	goto	u4701
  1211   0049E2  EFF5  F024         	goto	u4700
  1212   0049E6                     u4701:
  1213   0049E6  EFD4  F024         	goto	l132
  1214   0049EA                     u4700:
  1215   0049EA                     
  1216                           ;calibration.c: 15:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1217   0049EA  0E11               	movlw	17
  1218   0049EC  6E02               	movwf	(??_pause_until_RF2_pressed+1)^0,c
  1219   0049EE  0E3C               	movlw	60
  1220   0049F0  6E01               	movwf	??_pause_until_RF2_pressed^0,c
  1221   0049F2  0ECB               	movlw	203
  1222   0049F4                     u5527:
  1223   0049F4  2EE8               	decfsz	wreg,f,c
  1224   0049F6  D7FE               	bra	u5527
  1225   0049F8  2E01               	decfsz	??_pause_until_RF2_pressed^0,f,c
  1226   0049FA  D7FC               	bra	u5527
  1227   0049FC  2E02               	decfsz	(??_pause_until_RF2_pressed+1)^0,f,c
  1228   0049FE  D7FA               	bra	u5527
  1229   004A00  0000               	nop	
  1230   004A02                     
  1231                           ;calibration.c: 16:         LATDbits.LATD7 = 0;
  1232   004A02  9E7C               	bcf	124,7,c	;volatile
  1233   004A04  0012               	return		;funcret
  1234   004A06                     __end_of_pause_until_RF2_pressed:
  1235                           	callstack 0
  1236                           
  1237 ;; *************** function _maze_search *****************
  1238 ;; Defined at:
  1239 ;;		line 8 in file "pathfinder_file.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  c               2  127[BANK0 ] PTR struct calibration_s
  1242 ;;		 -> calibration(9), 
  1243 ;;  mL              1  129[BANK0 ] PTR struct DC_motor
  1244 ;;		 -> motorL(9), 
  1245 ;;  mR              1  130[BANK0 ] PTR struct DC_motor
  1246 ;;		 -> motorR(9), 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;Total ram usage:        6 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 5
  1265 ;; This function calls:
  1266 ;;		_backward
  1267 ;;		_color_cardCheck
  1268 ;;		_color_click_init
  1269 ;;		_forward
  1270 ;;		_leftTURN
  1271 ;;		_rightTURN
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text2
  1278   002DDA                     __ptext2:
  1279                           	callstack 0
  1280   002DDA                     _maze_search:
  1281                           	callstack 25
  1282   002DDA                     
  1283                           ;pathfinder_file.c: 9:     color_click_init();
  1284   002DDA  ECE7  F025         	call	_color_click_init	;wreg free
  1285   002DDE                     l4746:
  1286                           
  1287                           ;pathfinder_file.c: 12:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1288   002DDE  0E29               	movlw	41
  1289   002DE0  6E5F               	movwf	(??_maze_search+1)^0,c
  1290   002DE2  0E96               	movlw	150
  1291   002DE4  6E5E               	movwf	??_maze_search^0,c
  1292   002DE6  0E7F               	movlw	127
  1293   002DE8                     u5537:
  1294   002DE8  2EE8               	decfsz	wreg,f,c
  1295   002DEA  D7FE               	bra	u5537
  1296   002DEC  2E5E               	decfsz	??_maze_search^0,f,c
  1297   002DEE  D7FC               	bra	u5537
  1298   002DF0  2E5F               	decfsz	(??_maze_search+1)^0,f,c
  1299   002DF2  D7FA               	bra	u5537
  1300   002DF4  0000               	nop	
  1301   002DF6                     
  1302                           ;pathfinder_file.c: 13:         LATHbits.LATH3 = 1;
  1303   002DF6  8680               	bsf	128,3,c	;volatile
  1304   002DF8                     
  1305                           ;pathfinder_file.c: 14:         LATDbits.LATD7 = 1;
  1306   002DF8  8E7C               	bsf	124,7,c	;volatile
  1307   002DFA                     
  1308                           ;pathfinder_file.c: 16:         forward(c->forward_one, mL, mR);
  1309   002DFA  C0E1  F013         	movff	maze_search@mL,forward@mL
  1310   002DFE  C0E2  F014         	movff	maze_search@mR,forward@mR
  1311   002E02  0100               	movlb	0	; () banked
  1312   002E04  EE20 F005          	lfsr	2,5
  1313   002E08  51DF               	movf	maze_search@c& (0+255),w,b
  1314   002E0A  26D9               	addwf	fsr2l,f,c
  1315   002E0C  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1316   002E0E  22DA               	addwfc	fsr2h,f,c
  1317   002E10  50DF               	movf	indf2,w,c
  1318   002E12  ECF2  F01C         	call	_forward
  1319   002E16                     
  1320                           ;pathfinder_file.c: 17:         Forward_Count++;
  1321   002E16  0100               	movlb	0	; () banked
  1322   002E18  2BE5               	incf	_Forward_Count& (0+255),f,b
  1323   002E1A                     
  1324                           ; BSR set to: 0
  1325                           ;pathfinder_file.c: 18:         Color_Value = color_cardCheck();
  1326   002E1A  EC01  F007         	call	_color_cardCheck	;wreg free
  1327   002E1E  C05C  F0E3         	movff	?_color_cardCheck,_Color_Value
  1328   002E22  C05D  F0E4         	movff	?_color_cardCheck+1,_Color_Value+1
  1329   002E26                     
  1330                           ;pathfinder_file.c: 20:         LATHbits.LATH3 = 0;
  1331   002E26  9680               	bcf	128,3,c	;volatile
  1332   002E28                     
  1333                           ;pathfinder_file.c: 21:         LATDbits.LATD7 = 0;
  1334   002E28  9E7C               	bcf	124,7,c	;volatile
  1335   002E2A                     
  1336                           ;pathfinder_file.c: 24:         if(Color_Value != 0){
  1337   002E2A  0100               	movlb	0	; () banked
  1338   002E2C  51E3               	movf	_Color_Value& (0+255),w,b
  1339   002E2E  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1340   002E30  B4D8               	btfsc	status,2,c
  1341   002E32  EF1D  F017         	goto	u5291
  1342   002E36  EF1F  F017         	goto	u5290
  1343   002E3A                     u5291:
  1344   002E3A  EFEF  F016         	goto	l4746
  1345   002E3E                     u5290:
  1346   002E3E                     
  1347                           ; BSR set to: 0
  1348                           ;pathfinder_file.c: 26:             Operation_History[Operation_Count] = Forward_Count +
      +                           10;
  1349   002E3E  0E3C               	movlw	low _Operation_History
  1350   002E40  25E6               	addwf	_Operation_Count& (0+255),w,b
  1351   002E42  6ED9               	movwf	fsr2l,c
  1352   002E44  6ADA               	clrf	fsr2h,c
  1353   002E46  0E01               	movlw	high _Operation_History
  1354   002E48  22DA               	addwfc	fsr2h,f,c
  1355   002E4A  51E5               	movf	_Forward_Count& (0+255),w,b
  1356   002E4C  0F0A               	addlw	10
  1357   002E4E  6EDF               	movwf	indf2,c
  1358   002E50                     
  1359                           ; BSR set to: 0
  1360                           ;pathfinder_file.c: 27:             Forward_Count = 0;
  1361   002E50  0E00               	movlw	0
  1362   002E52  6FE5               	movwf	_Forward_Count& (0+255),b
  1363   002E54                     
  1364                           ; BSR set to: 0
  1365                           ;pathfinder_file.c: 28:             Operation_Count++;
  1366   002E54  2BE6               	incf	_Operation_Count& (0+255),f,b
  1367   002E56                     
  1368                           ; BSR set to: 0
  1369                           ;pathfinder_file.c: 30:             if(Color_Value == 1){
  1370   002E56  05E3               	decf	_Color_Value& (0+255),w,b
  1371   002E58  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1372   002E5A  A4D8               	btfss	status,2,c
  1373   002E5C  EF32  F017         	goto	u5301
  1374   002E60  EF34  F017         	goto	u5300
  1375   002E64                     u5301:
  1376   002E64  EF5A  F017         	goto	l4780
  1377   002E68                     u5300:
  1378   002E68                     
  1379                           ; BSR set to: 0
  1380                           ;pathfinder_file.c: 31:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1381   002E68  0E3C               	movlw	low _Operation_History
  1382   002E6A  25E6               	addwf	_Operation_Count& (0+255),w,b
  1383   002E6C  6ED9               	movwf	fsr2l,c
  1384   002E6E  6ADA               	clrf	fsr2h,c
  1385   002E70  0E01               	movlw	high _Operation_History
  1386   002E72  22DA               	addwfc	fsr2h,f,c
  1387   002E74  C0E3  FFDF         	movff	_Color_Value,indf2
  1388   002E78                     
  1389                           ; BSR set to: 0
  1390                           ;pathfinder_file.c: 32:                 Operation_Count++;
  1391   002E78  2BE6               	incf	_Operation_Count& (0+255),f,b
  1392   002E7A                     
  1393                           ; BSR set to: 0
  1394                           ;pathfinder_file.c: 33:                 backward(c->backward_half, mL, mR);
  1395   002E7A  C0E1  F013         	movff	maze_search@mL,backward@mL
  1396   002E7E  C0E2  F014         	movff	maze_search@mR,backward@mR
  1397   002E82  EE20 F008          	lfsr	2,8
  1398   002E86  51DF               	movf	maze_search@c& (0+255),w,b
  1399   002E88  26D9               	addwf	fsr2l,f,c
  1400   002E8A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1401   002E8C  22DA               	addwfc	fsr2h,f,c
  1402   002E8E  50DF               	movf	indf2,w,c
  1403   002E90  EC30  F01F         	call	_backward
  1404   002E94                     
  1405                           ;pathfinder_file.c: 34:                 rightTURN(c->right_90, mL, mR);
  1406   002E94  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1407   002E98  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1408   002E9C  0100               	movlb	0	; () banked
  1409   002E9E  EE20 F001          	lfsr	2,1
  1410   002EA2  51DF               	movf	maze_search@c& (0+255),w,b
  1411   002EA4  26D9               	addwf	fsr2l,f,c
  1412   002EA6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1413   002EA8  22DA               	addwfc	fsr2h,f,c
  1414   002EAA  50DF               	movf	indf2,w,c
  1415   002EAC  ECB2  F01D         	call	_rightTURN
  1416                           
  1417                           ;pathfinder_file.c: 35:             }
  1418   002EB0  EFEF  F016         	goto	l4746
  1419   002EB4                     l4780:
  1420                           
  1421                           ; BSR set to: 0
  1422   002EB4  0E02               	movlw	2
  1423   002EB6  19E3               	xorwf	_Color_Value& (0+255),w,b
  1424   002EB8  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1425   002EBA  A4D8               	btfss	status,2,c
  1426   002EBC  EF62  F017         	goto	u5311
  1427   002EC0  EF64  F017         	goto	u5310
  1428   002EC4                     u5311:
  1429   002EC4  EF8A  F017         	goto	l4790
  1430   002EC8                     u5310:
  1431   002EC8                     
  1432                           ; BSR set to: 0
  1433                           ;pathfinder_file.c: 38:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1434   002EC8  0E3C               	movlw	low _Operation_History
  1435   002ECA  25E6               	addwf	_Operation_Count& (0+255),w,b
  1436   002ECC  6ED9               	movwf	fsr2l,c
  1437   002ECE  6ADA               	clrf	fsr2h,c
  1438   002ED0  0E01               	movlw	high _Operation_History
  1439   002ED2  22DA               	addwfc	fsr2h,f,c
  1440   002ED4  C0E3  FFDF         	movff	_Color_Value,indf2
  1441   002ED8                     
  1442                           ; BSR set to: 0
  1443                           ;pathfinder_file.c: 39:                 Operation_Count++;
  1444   002ED8  2BE6               	incf	_Operation_Count& (0+255),f,b
  1445   002EDA                     
  1446                           ; BSR set to: 0
  1447                           ;pathfinder_file.c: 40:                 backward(c->backward_half, mL, mR);
  1448   002EDA  C0E1  F013         	movff	maze_search@mL,backward@mL
  1449   002EDE  C0E2  F014         	movff	maze_search@mR,backward@mR
  1450   002EE2  EE20 F008          	lfsr	2,8
  1451   002EE6  51DF               	movf	maze_search@c& (0+255),w,b
  1452   002EE8  26D9               	addwf	fsr2l,f,c
  1453   002EEA  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1454   002EEC  22DA               	addwfc	fsr2h,f,c
  1455   002EEE  50DF               	movf	indf2,w,c
  1456   002EF0  EC30  F01F         	call	_backward
  1457   002EF4                     
  1458                           ;pathfinder_file.c: 41:                 leftTURN(c->left_90, mL, mR);
  1459   002EF4  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1460   002EF8  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1461   002EFC  0100               	movlb	0	; () banked
  1462   002EFE  EE20 F002          	lfsr	2,2
  1463   002F02  51DF               	movf	maze_search@c& (0+255),w,b
  1464   002F04  26D9               	addwf	fsr2l,f,c
  1465   002F06  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1466   002F08  22DA               	addwfc	fsr2h,f,c
  1467   002F0A  50DF               	movf	indf2,w,c
  1468   002F0C  EC71  F01E         	call	_leftTURN
  1469                           
  1470                           ;pathfinder_file.c: 42:             }
  1471   002F10  EFEF  F016         	goto	l4746
  1472   002F14                     l4790:
  1473                           
  1474                           ; BSR set to: 0
  1475   002F14  0E03               	movlw	3
  1476   002F16  19E3               	xorwf	_Color_Value& (0+255),w,b
  1477   002F18  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1478   002F1A  A4D8               	btfss	status,2,c
  1479   002F1C  EF92  F017         	goto	u5321
  1480   002F20  EF94  F017         	goto	u5320
  1481   002F24                     u5321:
  1482   002F24  EFC8  F017         	goto	l4802
  1483   002F28                     u5320:
  1484   002F28                     
  1485                           ; BSR set to: 0
  1486                           ;pathfinder_file.c: 45:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1487   002F28  0E3C               	movlw	low _Operation_History
  1488   002F2A  25E6               	addwf	_Operation_Count& (0+255),w,b
  1489   002F2C  6ED9               	movwf	fsr2l,c
  1490   002F2E  6ADA               	clrf	fsr2h,c
  1491   002F30  0E01               	movlw	high _Operation_History
  1492   002F32  22DA               	addwfc	fsr2h,f,c
  1493   002F34  C0E3  FFDF         	movff	_Color_Value,indf2
  1494   002F38                     
  1495                           ; BSR set to: 0
  1496                           ;pathfinder_file.c: 46:                 Operation_Count++;
  1497   002F38  2BE6               	incf	_Operation_Count& (0+255),f,b
  1498   002F3A                     
  1499                           ; BSR set to: 0
  1500                           ;pathfinder_file.c: 47:                 backward(c->backward_half, mL, mR);
  1501   002F3A  C0E1  F013         	movff	maze_search@mL,backward@mL
  1502   002F3E  C0E2  F014         	movff	maze_search@mR,backward@mR
  1503   002F42  EE20 F008          	lfsr	2,8
  1504   002F46  51DF               	movf	maze_search@c& (0+255),w,b
  1505   002F48  26D9               	addwf	fsr2l,f,c
  1506   002F4A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1507   002F4C  22DA               	addwfc	fsr2h,f,c
  1508   002F4E  50DF               	movf	indf2,w,c
  1509   002F50  EC30  F01F         	call	_backward
  1510   002F54                     
  1511                           ;pathfinder_file.c: 48:                 rightTURN(c->right_90, mL, mR);
  1512   002F54  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1513   002F58  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1514   002F5C  0100               	movlb	0	; () banked
  1515   002F5E  EE20 F001          	lfsr	2,1
  1516   002F62  51DF               	movf	maze_search@c& (0+255),w,b
  1517   002F64  26D9               	addwf	fsr2l,f,c
  1518   002F66  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1519   002F68  22DA               	addwfc	fsr2h,f,c
  1520   002F6A  50DF               	movf	indf2,w,c
  1521   002F6C  ECB2  F01D         	call	_rightTURN
  1522   002F70                     
  1523                           ;pathfinder_file.c: 49:                 rightTURN(c->right_90, mL, mR);
  1524   002F70  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1525   002F74  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1526   002F78  0100               	movlb	0	; () banked
  1527   002F7A  EE20 F001          	lfsr	2,1
  1528   002F7E  51DF               	movf	maze_search@c& (0+255),w,b
  1529   002F80  26D9               	addwf	fsr2l,f,c
  1530   002F82  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1531   002F84  22DA               	addwfc	fsr2h,f,c
  1532   002F86  50DF               	movf	indf2,w,c
  1533   002F88  ECB2  F01D         	call	_rightTURN
  1534                           
  1535                           ;pathfinder_file.c: 50:             }
  1536   002F8C  EFEF  F016         	goto	l4746
  1537   002F90                     l4802:
  1538                           
  1539                           ; BSR set to: 0
  1540   002F90  0E04               	movlw	4
  1541   002F92  19E3               	xorwf	_Color_Value& (0+255),w,b
  1542   002F94  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1543   002F96  A4D8               	btfss	status,2,c
  1544   002F98  EFD0  F017         	goto	u5331
  1545   002F9C  EFD2  F017         	goto	u5330
  1546   002FA0                     u5331:
  1547   002FA0  EF06  F018         	goto	l4814
  1548   002FA4                     u5330:
  1549   002FA4                     
  1550                           ; BSR set to: 0
  1551                           ;pathfinder_file.c: 53:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1552   002FA4  0E3C               	movlw	low _Operation_History
  1553   002FA6  25E6               	addwf	_Operation_Count& (0+255),w,b
  1554   002FA8  6ED9               	movwf	fsr2l,c
  1555   002FAA  6ADA               	clrf	fsr2h,c
  1556   002FAC  0E01               	movlw	high _Operation_History
  1557   002FAE  22DA               	addwfc	fsr2h,f,c
  1558   002FB0  C0E3  FFDF         	movff	_Color_Value,indf2
  1559   002FB4                     
  1560                           ; BSR set to: 0
  1561                           ;pathfinder_file.c: 54:                 Operation_Count++;
  1562   002FB4  2BE6               	incf	_Operation_Count& (0+255),f,b
  1563   002FB6                     
  1564                           ; BSR set to: 0
  1565                           ;pathfinder_file.c: 55:                 backward(c->backward_half, mL, mR);
  1566   002FB6  C0E1  F013         	movff	maze_search@mL,backward@mL
  1567   002FBA  C0E2  F014         	movff	maze_search@mR,backward@mR
  1568   002FBE  EE20 F008          	lfsr	2,8
  1569   002FC2  51DF               	movf	maze_search@c& (0+255),w,b
  1570   002FC4  26D9               	addwf	fsr2l,f,c
  1571   002FC6  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1572   002FC8  22DA               	addwfc	fsr2h,f,c
  1573   002FCA  50DF               	movf	indf2,w,c
  1574   002FCC  EC30  F01F         	call	_backward
  1575   002FD0                     
  1576                           ;pathfinder_file.c: 56:                 backward(c->backward_one, mL, mR);
  1577   002FD0  C0E1  F013         	movff	maze_search@mL,backward@mL
  1578   002FD4  C0E2  F014         	movff	maze_search@mR,backward@mR
  1579   002FD8  0100               	movlb	0	; () banked
  1580   002FDA  EE20 F006          	lfsr	2,6
  1581   002FDE  51DF               	movf	maze_search@c& (0+255),w,b
  1582   002FE0  26D9               	addwf	fsr2l,f,c
  1583   002FE2  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1584   002FE4  22DA               	addwfc	fsr2h,f,c
  1585   002FE6  50DF               	movf	indf2,w,c
  1586   002FE8  EC30  F01F         	call	_backward
  1587   002FEC                     
  1588                           ;pathfinder_file.c: 57:                 rightTURN(c->right_90, mL, mR);
  1589   002FEC  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1590   002FF0  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1591   002FF4  0100               	movlb	0	; () banked
  1592   002FF6  EE20 F001          	lfsr	2,1
  1593   002FFA  51DF               	movf	maze_search@c& (0+255),w,b
  1594   002FFC  26D9               	addwf	fsr2l,f,c
  1595   002FFE  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1596   003000  22DA               	addwfc	fsr2h,f,c
  1597   003002  50DF               	movf	indf2,w,c
  1598   003004  ECB2  F01D         	call	_rightTURN
  1599                           
  1600                           ;pathfinder_file.c: 58:             }
  1601   003008  EFEF  F016         	goto	l4746
  1602   00300C                     l4814:
  1603                           
  1604                           ; BSR set to: 0
  1605   00300C  0E05               	movlw	5
  1606   00300E  19E3               	xorwf	_Color_Value& (0+255),w,b
  1607   003010  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1608   003012  A4D8               	btfss	status,2,c
  1609   003014  EF0E  F018         	goto	u5341
  1610   003018  EF10  F018         	goto	u5340
  1611   00301C                     u5341:
  1612   00301C  EF44  F018         	goto	l4826
  1613   003020                     u5340:
  1614   003020                     
  1615                           ; BSR set to: 0
  1616                           ;pathfinder_file.c: 61:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1617   003020  0E3C               	movlw	low _Operation_History
  1618   003022  25E6               	addwf	_Operation_Count& (0+255),w,b
  1619   003024  6ED9               	movwf	fsr2l,c
  1620   003026  6ADA               	clrf	fsr2h,c
  1621   003028  0E01               	movlw	high _Operation_History
  1622   00302A  22DA               	addwfc	fsr2h,f,c
  1623   00302C  C0E3  FFDF         	movff	_Color_Value,indf2
  1624   003030                     
  1625                           ; BSR set to: 0
  1626                           ;pathfinder_file.c: 62:                 Operation_Count++;
  1627   003030  2BE6               	incf	_Operation_Count& (0+255),f,b
  1628   003032                     
  1629                           ; BSR set to: 0
  1630                           ;pathfinder_file.c: 63:                 backward(c->backward_half, mL, mR);
  1631   003032  C0E1  F013         	movff	maze_search@mL,backward@mL
  1632   003036  C0E2  F014         	movff	maze_search@mR,backward@mR
  1633   00303A  EE20 F008          	lfsr	2,8
  1634   00303E  51DF               	movf	maze_search@c& (0+255),w,b
  1635   003040  26D9               	addwf	fsr2l,f,c
  1636   003042  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1637   003044  22DA               	addwfc	fsr2h,f,c
  1638   003046  50DF               	movf	indf2,w,c
  1639   003048  EC30  F01F         	call	_backward
  1640   00304C                     
  1641                           ;pathfinder_file.c: 64:                 backward(c->backward_one, mL, mR);
  1642   00304C  C0E1  F013         	movff	maze_search@mL,backward@mL
  1643   003050  C0E2  F014         	movff	maze_search@mR,backward@mR
  1644   003054  0100               	movlb	0	; () banked
  1645   003056  EE20 F006          	lfsr	2,6
  1646   00305A  51DF               	movf	maze_search@c& (0+255),w,b
  1647   00305C  26D9               	addwf	fsr2l,f,c
  1648   00305E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1649   003060  22DA               	addwfc	fsr2h,f,c
  1650   003062  50DF               	movf	indf2,w,c
  1651   003064  EC30  F01F         	call	_backward
  1652   003068                     
  1653                           ;pathfinder_file.c: 65:                 leftTURN(c->left_90, mL, mR);
  1654   003068  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1655   00306C  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1656   003070  0100               	movlb	0	; () banked
  1657   003072  EE20 F002          	lfsr	2,2
  1658   003076  51DF               	movf	maze_search@c& (0+255),w,b
  1659   003078  26D9               	addwf	fsr2l,f,c
  1660   00307A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1661   00307C  22DA               	addwfc	fsr2h,f,c
  1662   00307E  50DF               	movf	indf2,w,c
  1663   003080  EC71  F01E         	call	_leftTURN
  1664                           
  1665                           ;pathfinder_file.c: 66:             }
  1666   003084  EFEF  F016         	goto	l4746
  1667   003088                     l4826:
  1668                           
  1669                           ; BSR set to: 0
  1670   003088  0E06               	movlw	6
  1671   00308A  19E3               	xorwf	_Color_Value& (0+255),w,b
  1672   00308C  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1673   00308E  A4D8               	btfss	status,2,c
  1674   003090  EF4C  F018         	goto	u5351
  1675   003094  EF4E  F018         	goto	u5350
  1676   003098                     u5351:
  1677   003098  EF74  F018         	goto	l4836
  1678   00309C                     u5350:
  1679   00309C                     
  1680                           ; BSR set to: 0
  1681                           ;pathfinder_file.c: 69:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1682   00309C  0E3C               	movlw	low _Operation_History
  1683   00309E  25E6               	addwf	_Operation_Count& (0+255),w,b
  1684   0030A0  6ED9               	movwf	fsr2l,c
  1685   0030A2  6ADA               	clrf	fsr2h,c
  1686   0030A4  0E01               	movlw	high _Operation_History
  1687   0030A6  22DA               	addwfc	fsr2h,f,c
  1688   0030A8  C0E3  FFDF         	movff	_Color_Value,indf2
  1689   0030AC                     
  1690                           ; BSR set to: 0
  1691                           ;pathfinder_file.c: 70:                 Operation_Count++;
  1692   0030AC  2BE6               	incf	_Operation_Count& (0+255),f,b
  1693   0030AE                     
  1694                           ; BSR set to: 0
  1695                           ;pathfinder_file.c: 71:                 backward(c->backward_half, mL, mR);
  1696   0030AE  C0E1  F013         	movff	maze_search@mL,backward@mL
  1697   0030B2  C0E2  F014         	movff	maze_search@mR,backward@mR
  1698   0030B6  EE20 F008          	lfsr	2,8
  1699   0030BA  51DF               	movf	maze_search@c& (0+255),w,b
  1700   0030BC  26D9               	addwf	fsr2l,f,c
  1701   0030BE  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1702   0030C0  22DA               	addwfc	fsr2h,f,c
  1703   0030C2  50DF               	movf	indf2,w,c
  1704   0030C4  EC30  F01F         	call	_backward
  1705   0030C8                     
  1706                           ;pathfinder_file.c: 72:                 rightTURN(c->right_135, mL, mR);
  1707   0030C8  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1708   0030CC  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1709   0030D0  0100               	movlb	0	; () banked
  1710   0030D2  EE20 F003          	lfsr	2,3
  1711   0030D6  51DF               	movf	maze_search@c& (0+255),w,b
  1712   0030D8  26D9               	addwf	fsr2l,f,c
  1713   0030DA  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1714   0030DC  22DA               	addwfc	fsr2h,f,c
  1715   0030DE  50DF               	movf	indf2,w,c
  1716   0030E0  ECB2  F01D         	call	_rightTURN
  1717                           
  1718                           ;pathfinder_file.c: 73:             }
  1719   0030E4  EFEF  F016         	goto	l4746
  1720   0030E8                     l4836:
  1721                           
  1722                           ; BSR set to: 0
  1723   0030E8  0E07               	movlw	7
  1724   0030EA  19E3               	xorwf	_Color_Value& (0+255),w,b
  1725   0030EC  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1726   0030EE  A4D8               	btfss	status,2,c
  1727   0030F0  EF7C  F018         	goto	u5361
  1728   0030F4  EF7E  F018         	goto	u5360
  1729   0030F8                     u5361:
  1730   0030F8  EFA4  F018         	goto	l4846
  1731   0030FC                     u5360:
  1732   0030FC                     
  1733                           ; BSR set to: 0
  1734                           ;pathfinder_file.c: 76:                 Operation_History[Operation_Count] = Color_Value
      +                          ;
  1735   0030FC  0E3C               	movlw	low _Operation_History
  1736   0030FE  25E6               	addwf	_Operation_Count& (0+255),w,b
  1737   003100  6ED9               	movwf	fsr2l,c
  1738   003102  6ADA               	clrf	fsr2h,c
  1739   003104  0E01               	movlw	high _Operation_History
  1740   003106  22DA               	addwfc	fsr2h,f,c
  1741   003108  C0E3  FFDF         	movff	_Color_Value,indf2
  1742   00310C                     
  1743                           ; BSR set to: 0
  1744                           ;pathfinder_file.c: 77:                 Operation_Count++;
  1745   00310C  2BE6               	incf	_Operation_Count& (0+255),f,b
  1746   00310E                     
  1747                           ; BSR set to: 0
  1748                           ;pathfinder_file.c: 78:                 backward(c->backward_half, mL, mR);
  1749   00310E  C0E1  F013         	movff	maze_search@mL,backward@mL
  1750   003112  C0E2  F014         	movff	maze_search@mR,backward@mR
  1751   003116  EE20 F008          	lfsr	2,8
  1752   00311A  51DF               	movf	maze_search@c& (0+255),w,b
  1753   00311C  26D9               	addwf	fsr2l,f,c
  1754   00311E  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1755   003120  22DA               	addwfc	fsr2h,f,c
  1756   003122  50DF               	movf	indf2,w,c
  1757   003124  EC30  F01F         	call	_backward
  1758   003128                     
  1759                           ;pathfinder_file.c: 79:                 leftTURN(c->left_135, mL, mR);
  1760   003128  C0E1  F013         	movff	maze_search@mL,leftTURN@mL
  1761   00312C  C0E2  F014         	movff	maze_search@mR,leftTURN@mR
  1762   003130  0100               	movlb	0	; () banked
  1763   003132  EE20 F004          	lfsr	2,4
  1764   003136  51DF               	movf	maze_search@c& (0+255),w,b
  1765   003138  26D9               	addwf	fsr2l,f,c
  1766   00313A  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1767   00313C  22DA               	addwfc	fsr2h,f,c
  1768   00313E  50DF               	movf	indf2,w,c
  1769   003140  EC71  F01E         	call	_leftTURN
  1770                           
  1771                           ;pathfinder_file.c: 80:             }
  1772   003144  EFEF  F016         	goto	l4746
  1773   003148                     l4846:
  1774                           
  1775                           ; BSR set to: 0
  1776   003148  0E08               	movlw	8
  1777   00314A  19E3               	xorwf	_Color_Value& (0+255),w,b
  1778   00314C  11E4               	iorwf	(_Color_Value+1)& (0+255),w,b
  1779   00314E  A4D8               	btfss	status,2,c
  1780   003150  EFAC  F018         	goto	u5371
  1781   003154  EFAE  F018         	goto	u5370
  1782   003158                     u5371:
  1783   003158  EFF5  F018         	goto	l560
  1784   00315C                     u5370:
  1785   00315C                     
  1786                           ; BSR set to: 0
  1787                           ;pathfinder_file.c: 84:                 backward(c->backward_half, mL, mR);
  1788   00315C  C0E1  F013         	movff	maze_search@mL,backward@mL
  1789   003160  C0E2  F014         	movff	maze_search@mR,backward@mR
  1790   003164  EE20 F008          	lfsr	2,8
  1791   003168  51DF               	movf	maze_search@c& (0+255),w,b
  1792   00316A  26D9               	addwf	fsr2l,f,c
  1793   00316C  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1794   00316E  22DA               	addwfc	fsr2h,f,c
  1795   003170  50DF               	movf	indf2,w,c
  1796   003172  EC30  F01F         	call	_backward
  1797                           
  1798                           ;pathfinder_file.c: 86:                 rightTURN(c->right_90, mL, mR);
  1799   003176  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1800   00317A  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1801   00317E  0100               	movlb	0	; () banked
  1802   003180  EE20 F001          	lfsr	2,1
  1803   003184  51DF               	movf	maze_search@c& (0+255),w,b
  1804   003186  26D9               	addwf	fsr2l,f,c
  1805   003188  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1806   00318A  22DA               	addwfc	fsr2h,f,c
  1807   00318C  50DF               	movf	indf2,w,c
  1808   00318E  ECB2  F01D         	call	_rightTURN
  1809                           
  1810                           ;pathfinder_file.c: 87:                 rightTURN(c->right_90, mL, mR);
  1811   003192  C0E1  F013         	movff	maze_search@mL,rightTURN@mL
  1812   003196  C0E2  F014         	movff	maze_search@mR,rightTURN@mR
  1813   00319A  0100               	movlb	0	; () banked
  1814   00319C  EE20 F001          	lfsr	2,1
  1815   0031A0  51DF               	movf	maze_search@c& (0+255),w,b
  1816   0031A2  26D9               	addwf	fsr2l,f,c
  1817   0031A4  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1818   0031A6  22DA               	addwfc	fsr2h,f,c
  1819   0031A8  50DF               	movf	indf2,w,c
  1820   0031AA  ECB2  F01D         	call	_rightTURN
  1821                           
  1822                           ;pathfinder_file.c: 88:                 backward(c->backward_one, mL, mR);
  1823   0031AE  C0E1  F013         	movff	maze_search@mL,backward@mL
  1824   0031B2  C0E2  F014         	movff	maze_search@mR,backward@mR
  1825   0031B6  0100               	movlb	0	; () banked
  1826   0031B8  EE20 F006          	lfsr	2,6
  1827   0031BC  51DF               	movf	maze_search@c& (0+255),w,b
  1828   0031BE  26D9               	addwf	fsr2l,f,c
  1829   0031C0  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1830   0031C2  22DA               	addwfc	fsr2h,f,c
  1831   0031C4  50DF               	movf	indf2,w,c
  1832   0031C6  EC30  F01F         	call	_backward
  1833                           
  1834                           ;pathfinder_file.c: 89:                 forward(c->forward_half, mL, mR);
  1835   0031CA  C0E1  F013         	movff	maze_search@mL,forward@mL
  1836   0031CE  C0E2  F014         	movff	maze_search@mR,forward@mR
  1837   0031D2  0100               	movlb	0	; () banked
  1838   0031D4  EE20 F007          	lfsr	2,7
  1839   0031D8  51DF               	movf	maze_search@c& (0+255),w,b
  1840   0031DA  26D9               	addwf	fsr2l,f,c
  1841   0031DC  51E0               	movf	(maze_search@c+1)& (0+255),w,b
  1842   0031DE  22DA               	addwfc	fsr2h,f,c
  1843   0031E0  50DF               	movf	indf2,w,c
  1844   0031E2  ECF2  F01C         	call	_forward
  1845                           
  1846                           ;pathfinder_file.c: 90:                 break;
  1847   0031E6  EFF7  F018         	goto	l568
  1848   0031EA                     l560:
  1849                           
  1850                           ; BSR set to: 0
  1851   0031EA  EFEF  F016         	goto	l4746
  1852   0031EE                     l568:
  1853   0031EE  0012               	return		;funcret
  1854   0031F0                     __end_of_maze_search:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _color_click_init *****************
  1858 ;; Defined at:
  1859 ;;		line 7 in file "color.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;Total ram usage:        1 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 3
  1880 ;; This function calls:
  1881 ;;		_I2C_2_Master_Init
  1882 ;;		_color_writetoaddr
  1883 ;; This function is called by:
  1884 ;;		_maze_search
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text3
  1889   004BCE                     __ptext3:
  1890                           	callstack 0
  1891   004BCE                     _color_click_init:
  1892                           	callstack 26
  1893   004BCE                     
  1894                           ;color.c: 10:     I2C_2_Master_Init();
  1895   004BCE  EC39  F026         	call	_I2C_2_Master_Init	;wreg free
  1896   004BD2                     
  1897                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1898   004BD2  0E01               	movlw	1
  1899   004BD4  6E03               	movwf	color_writetoaddr@value^0,c
  1900   004BD6  0E00               	movlw	0
  1901   004BD8  EC75  F026         	call	_color_writetoaddr
  1902   004BDC                     
  1903                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1904   004BDC  0E3F               	movlw	63
  1905   004BDE  6E05               	movwf	??_color_click_init^0,c
  1906   004BE0  0E55               	movlw	85
  1907   004BE2                     u5547:
  1908   004BE2  2EE8               	decfsz	wreg,f,c
  1909   004BE4  D7FE               	bra	u5547
  1910   004BE6  2E05               	decfsz	??_color_click_init^0,f,c
  1911   004BE8  D7FC               	bra	u5547
  1912   004BEA  0000               	nop	
  1913   004BEC                     
  1914                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1915   004BEC  0E03               	movlw	3
  1916   004BEE  6E03               	movwf	color_writetoaddr@value^0,c
  1917   004BF0  0E00               	movlw	0
  1918   004BF2  EC75  F026         	call	_color_writetoaddr
  1919   004BF6                     
  1920                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1921   004BF6  0ED5               	movlw	213
  1922   004BF8  6E03               	movwf	color_writetoaddr@value^0,c
  1923   004BFA  0E01               	movlw	1
  1924   004BFC  EC75  F026         	call	_color_writetoaddr
  1925   004C00                     
  1926                           ;color.c: 25:     TRISGbits.TRISG1 = 0;
  1927   004C00  9287               	bcf	135,1,c	;volatile
  1928   004C02                     
  1929                           ;color.c: 26:     TRISAbits.TRISA4 = 0;
  1930   004C02  9881               	bcf	129,4,c	;volatile
  1931   004C04                     
  1932                           ;color.c: 27:     TRISFbits.TRISF7 = 0;
  1933   004C04  9E86               	bcf	134,7,c	;volatile
  1934   004C06                     
  1935                           ;color.c: 30:     LATGbits.LATG1 = 1;
  1936   004C06  827F               	bsf	127,1,c	;volatile
  1937   004C08                     
  1938                           ;color.c: 31:     LATAbits.LATA4 = 1;
  1939   004C08  8879               	bsf	121,4,c	;volatile
  1940   004C0A                     
  1941                           ;color.c: 32:     LATFbits.LATF7 = 1;
  1942   004C0A  8E7E               	bsf	126,7,c	;volatile
  1943   004C0C  0012               	return		;funcret
  1944   004C0E                     __end_of_color_click_init:
  1945                           	callstack 0
  1946                           
  1947 ;; *************** function _color_writetoaddr *****************
  1948 ;; Defined at:
  1949 ;;		line 37 in file "color.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  address         1    wreg     unsigned char 
  1952 ;;  value           1    2[COMRAM] unsigned char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  address         1    3[COMRAM] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;Total ram usage:        2 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 2
  1971 ;; This function calls:
  1972 ;;		_I2C_2_Master_Start
  1973 ;;		_I2C_2_Master_Stop
  1974 ;;		_I2C_2_Master_Write
  1975 ;; This function is called by:
  1976 ;;		_color_click_init
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text4
  1981   004CEA                     __ptext4:
  1982                           	callstack 0
  1983   004CEA                     _color_writetoaddr:
  1984                           	callstack 26
  1985                           
  1986                           ;incstack = 0
  1987                           ;color_writetoaddr@address stored from wreg
  1988   004CEA  6E04               	movwf	color_writetoaddr@address^0,c
  1989   004CEC                     
  1990                           ;color.c: 38:     I2C_2_Master_Start();
  1991   004CEC  EC90  F026         	call	_I2C_2_Master_Start	;wreg free
  1992                           
  1993                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  1994   004CF0  0E52               	movlw	82
  1995   004CF2  EC85  F026         	call	_I2C_2_Master_Write
  1996                           
  1997                           ;color.c: 40:     I2C_2_Master_Write(0x80 | address);
  1998   004CF6  5004               	movf	color_writetoaddr@address^0,w,c
  1999   004CF8  0980               	iorlw	128
  2000   004CFA  EC85  F026         	call	_I2C_2_Master_Write
  2001                           
  2002                           ;color.c: 41:     I2C_2_Master_Write(value);
  2003   004CFE  5003               	movf	color_writetoaddr@value^0,w,c
  2004   004D00  EC85  F026         	call	_I2C_2_Master_Write
  2005                           
  2006                           ;color.c: 42:     I2C_2_Master_Stop();
  2007   004D04  EC8B  F026         	call	_I2C_2_Master_Stop	;wreg free
  2008   004D08  0012               	return		;funcret
  2009   004D0A                     __end_of_color_writetoaddr:
  2010                           	callstack 0
  2011                           
  2012 ;; *************** function _I2C_2_Master_Init *****************
  2013 ;; Defined at:
  2014 ;;		line 4 in file "i2c.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_color_click_init
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text5
  2042   004C72                     __ptext5:
  2043                           	callstack 0
  2044   004C72                     _I2C_2_Master_Init:
  2045                           	callstack 28
  2046   004C72                     
  2047                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2048   004C72  010E               	movlb	14	; () banked
  2049   004C74  51D9               	movf	217,w,b	;volatile
  2050   004C76  0BF0               	andlw	-16
  2051   004C78  0908               	iorlw	8
  2052   004C7A  6FD9               	movwf	217,b	;volatile
  2053   004C7C                     
  2054                           ; BSR set to: 14
  2055                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2056   004C7C  8BD9               	bsf	217,5,b	;volatile
  2057                           
  2058                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2059   004C7E  0E9F               	movlw	159
  2060   004C80  6FD6               	movwf	214,b	;volatile
  2061   004C82                     
  2062                           ; BSR set to: 14
  2063                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2064   004C82  8A84               	bsf	132,5,c	;volatile
  2065   004C84                     
  2066                           ; BSR set to: 14
  2067                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2068   004C84  8C84               	bsf	132,6,c	;volatile
  2069   004C86                     
  2070                           ; BSR set to: 14
  2071                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2072   004C86  9BA7               	bcf	167,5,b	;volatile
  2073   004C88                     
  2074                           ; BSR set to: 14
  2075                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2076   004C88  9DA7               	bcf	167,6,b	;volatile
  2077                           
  2078                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2079   004C8A  0E1D               	movlw	29
  2080   004C8C  6F1D               	movwf	29,b	;volatile
  2081                           
  2082                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2083   004C8E  0E1E               	movlw	30
  2084   004C90  6F1C               	movwf	28,b	;volatile
  2085                           
  2086                           ;i2c.c: 18:   RD5PPS=0x1C;
  2087   004C92  0E1C               	movlw	28
  2088   004C94  6F6F               	movwf	111,b	;volatile
  2089                           
  2090                           ;i2c.c: 19:   RD6PPS=0x1B;
  2091   004C96  0E1B               	movlw	27
  2092   004C98  6F70               	movwf	112,b	;volatile
  2093   004C9A                     
  2094                           ; BSR set to: 14
  2095   004C9A  0012               	return		;funcret
  2096   004C9C                     __end_of_I2C_2_Master_Init:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _color_cardCheck *****************
  2100 ;; Defined at:
  2101 ;;		line 171 in file "color.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  V               4  123[BANK0 ] float 
  2106 ;;  S               4  119[BANK0 ] float 
  2107 ;;  H               4  115[BANK0 ] float 
  2108 ;;  c               4  109[BANK0 ] float 
  2109 ;;  b               4  105[BANK0 ] float 
  2110 ;;  g               4  101[BANK0 ] float 
  2111 ;;  r               4   97[BANK0 ] float 
  2112 ;;  card_color      2  113[BANK0 ] unsigned int 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2   91[COMRAM] unsigned int 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;Total ram usage:       32 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; Hardware stack levels required when called: 4
  2129 ;; This function calls:
  2130 ;;		_RGB_to_HSV
  2131 ;;		___flge
  2132 ;;		___xxtofl
  2133 ;;		_color_read_Blue
  2134 ;;		_color_read_Clear
  2135 ;;		_color_read_Green
  2136 ;;		_color_read_Red
  2137 ;; This function is called by:
  2138 ;;		_maze_search
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text6
  2143   000E02                     __ptext6:
  2144                           	callstack 0
  2145   000E02                     _color_cardCheck:
  2146                           	callstack 25
  2147   000E02                     
  2148                           ;color.c: 174:     float r = color_read_Red();
  2149   000E02  EC03  F025         	call	_color_read_Red	;wreg free
  2150   000E06  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2151   000E0A  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2152   000E0E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2153   000E10  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2154   000E12  0E00               	movlw	0
  2155   000E14  EC18  F01C         	call	___xxtofl
  2156   000E18  C00C  F0C1         	movff	?___xxtofl,color_cardCheck@r
  2157   000E1C  C00D  F0C2         	movff	?___xxtofl+1,color_cardCheck@r+1
  2158   000E20  C00E  F0C3         	movff	?___xxtofl+2,color_cardCheck@r+2
  2159   000E24  C00F  F0C4         	movff	?___xxtofl+3,color_cardCheck@r+3
  2160                           
  2161                           ;color.c: 175:     float g = color_read_Green();
  2162   000E28  EC2B  F025         	call	_color_read_Green	;wreg free
  2163   000E2C  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2164   000E30  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2165   000E34  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2166   000E36  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2167   000E38  0E00               	movlw	0
  2168   000E3A  EC18  F01C         	call	___xxtofl
  2169   000E3E  C00C  F0C5         	movff	?___xxtofl,color_cardCheck@g
  2170   000E42  C00D  F0C6         	movff	?___xxtofl+1,color_cardCheck@g+1
  2171   000E46  C00E  F0C7         	movff	?___xxtofl+2,color_cardCheck@g+2
  2172   000E4A  C00F  F0C8         	movff	?___xxtofl+3,color_cardCheck@g+3
  2173                           
  2174                           ;color.c: 176:     float b = color_read_Blue();
  2175   000E4E  EC7B  F025         	call	_color_read_Blue	;wreg free
  2176   000E52  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2177   000E56  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2178   000E5A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2179   000E5C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2180   000E5E  0E00               	movlw	0
  2181   000E60  EC18  F01C         	call	___xxtofl
  2182   000E64  C00C  F0C9         	movff	?___xxtofl,color_cardCheck@b
  2183   000E68  C00D  F0CA         	movff	?___xxtofl+1,color_cardCheck@b+1
  2184   000E6C  C00E  F0CB         	movff	?___xxtofl+2,color_cardCheck@b+2
  2185   000E70  C00F  F0CC         	movff	?___xxtofl+3,color_cardCheck@b+3
  2186                           
  2187                           ;color.c: 179:     float c = color_read_Clear();
  2188   000E74  EC53  F025         	call	_color_read_Clear	;wreg free
  2189   000E78  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2190   000E7C  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2191   000E80  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2192   000E82  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2193   000E84  0E00               	movlw	0
  2194   000E86  EC18  F01C         	call	___xxtofl
  2195   000E8A  C00C  F0CD         	movff	?___xxtofl,color_cardCheck@c
  2196   000E8E  C00D  F0CE         	movff	?___xxtofl+1,color_cardCheck@c+1
  2197   000E92  C00E  F0CF         	movff	?___xxtofl+2,color_cardCheck@c+2
  2198   000E96  C00F  F0D0         	movff	?___xxtofl+3,color_cardCheck@c+3
  2199   000E9A                     
  2200                           ;color.c: 182:     float H;;color.c: 183:     float S;;color.c: 184:     float V;;color.
      +                          c: 186:     RGB_to_HSV(r,g,b,c,&H,&S,&V);
  2201   000E9A  C0C1  F06A         	movff	color_cardCheck@r,RGB_to_HSV@R
  2202   000E9E  C0C2  F06B         	movff	color_cardCheck@r+1,RGB_to_HSV@R+1
  2203   000EA2  C0C3  F06C         	movff	color_cardCheck@r+2,RGB_to_HSV@R+2
  2204   000EA6  C0C4  F06D         	movff	color_cardCheck@r+3,RGB_to_HSV@R+3
  2205   000EAA  C0C5  F06E         	movff	color_cardCheck@g,RGB_to_HSV@G
  2206   000EAE  C0C6  F06F         	movff	color_cardCheck@g+1,RGB_to_HSV@G+1
  2207   000EB2  C0C7  F070         	movff	color_cardCheck@g+2,RGB_to_HSV@G+2
  2208   000EB6  C0C8  F071         	movff	color_cardCheck@g+3,RGB_to_HSV@G+3
  2209   000EBA  C0C9  F072         	movff	color_cardCheck@b,RGB_to_HSV@B
  2210   000EBE  C0CA  F073         	movff	color_cardCheck@b+1,RGB_to_HSV@B+1
  2211   000EC2  C0CB  F074         	movff	color_cardCheck@b+2,RGB_to_HSV@B+2
  2212   000EC6  C0CC  F075         	movff	color_cardCheck@b+3,RGB_to_HSV@B+3
  2213   000ECA  C0CD  F076         	movff	color_cardCheck@c,RGB_to_HSV@C
  2214   000ECE  C0CE  F077         	movff	color_cardCheck@c+1,RGB_to_HSV@C+1
  2215   000ED2  C0CF  F078         	movff	color_cardCheck@c+2,RGB_to_HSV@C+2
  2216   000ED6  C0D0  F079         	movff	color_cardCheck@c+3,RGB_to_HSV@C+3
  2217   000EDA  0ED3               	movlw	low color_cardCheck@H
  2218   000EDC  0100               	movlb	0	; () banked
  2219   000EDE  6F7A               	movwf	RGB_to_HSV@H& (0+255),b
  2220   000EE0  0ED7               	movlw	low color_cardCheck@S
  2221   000EE2  6F7B               	movwf	RGB_to_HSV@S& (0+255),b
  2222   000EE4  0EDB               	movlw	low color_cardCheck@V
  2223   000EE6  6F7C               	movwf	RGB_to_HSV@V& (0+255),b
  2224   000EE8  EC1D  F00C         	call	_RGB_to_HSV	;wreg free
  2225   000EEC                     
  2226                           ;color.c: 195:     unsigned int card_color = 0;
  2227   000EEC  0E00               	movlw	0
  2228   000EEE  0100               	movlb	0	; () banked
  2229   000EF0  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2230   000EF2  0E00               	movlw	0
  2231   000EF4  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2232   000EF6                     
  2233                           ; BSR set to: 0
  2234                           ;color.c: 198:     if (H>355 && H<360 && S>85 && S<90 && V>80 && V<85) {card_color = 1;}
  2235   000EF6  0E00               	movlw	0
  2236   000EF8  6E01               	movwf	___flge@ff1^0,c
  2237   000EFA  0E80               	movlw	128
  2238   000EFC  6E02               	movwf	(___flge@ff1+1)^0,c
  2239   000EFE  0EB1               	movlw	177
  2240   000F00  6E03               	movwf	(___flge@ff1+2)^0,c
  2241   000F02  0E43               	movlw	67
  2242   000F04  6E04               	movwf	(___flge@ff1+3)^0,c
  2243   000F06  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2244   000F0A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2245   000F0E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2246   000F12  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2247   000F16  EC52  F022         	call	___flge	;wreg free
  2248   000F1A  B0D8               	btfsc	status,0,c
  2249   000F1C  EF92  F007         	goto	u3931
  2250   000F20  EF94  F007         	goto	u3930
  2251   000F24                     u3931:
  2252   000F24  EF18  F008         	goto	l3850
  2253   000F28                     u3930:
  2254   000F28  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2255   000F2C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2256   000F30  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2257   000F34  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2258   000F38  0E00               	movlw	0
  2259   000F3A  6E05               	movwf	___flge@ff2^0,c
  2260   000F3C  0E00               	movlw	0
  2261   000F3E  6E06               	movwf	(___flge@ff2+1)^0,c
  2262   000F40  0EB4               	movlw	180
  2263   000F42  6E07               	movwf	(___flge@ff2+2)^0,c
  2264   000F44  0E43               	movlw	67
  2265   000F46  6E08               	movwf	(___flge@ff2+3)^0,c
  2266   000F48  EC52  F022         	call	___flge	;wreg free
  2267   000F4C  B0D8               	btfsc	status,0,c
  2268   000F4E  EFAB  F007         	goto	u3941
  2269   000F52  EFAD  F007         	goto	u3940
  2270   000F56                     u3941:
  2271   000F56  EF18  F008         	goto	l3850
  2272   000F5A                     u3940:
  2273   000F5A  0E00               	movlw	0
  2274   000F5C  6E01               	movwf	___flge@ff1^0,c
  2275   000F5E  0E00               	movlw	0
  2276   000F60  6E02               	movwf	(___flge@ff1+1)^0,c
  2277   000F62  0EAA               	movlw	170
  2278   000F64  6E03               	movwf	(___flge@ff1+2)^0,c
  2279   000F66  0E42               	movlw	66
  2280   000F68  6E04               	movwf	(___flge@ff1+3)^0,c
  2281   000F6A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2282   000F6E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2283   000F72  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2284   000F76  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2285   000F7A  EC52  F022         	call	___flge	;wreg free
  2286   000F7E  B0D8               	btfsc	status,0,c
  2287   000F80  EFC4  F007         	goto	u3951
  2288   000F84  EFC6  F007         	goto	u3950
  2289   000F88                     u3951:
  2290   000F88  EF18  F008         	goto	l3850
  2291   000F8C                     u3950:
  2292   000F8C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2293   000F90  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2294   000F94  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2295   000F98  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2296   000F9C  0E00               	movlw	0
  2297   000F9E  6E05               	movwf	___flge@ff2^0,c
  2298   000FA0  0E00               	movlw	0
  2299   000FA2  6E06               	movwf	(___flge@ff2+1)^0,c
  2300   000FA4  0EB4               	movlw	180
  2301   000FA6  6E07               	movwf	(___flge@ff2+2)^0,c
  2302   000FA8  0E42               	movlw	66
  2303   000FAA  6E08               	movwf	(___flge@ff2+3)^0,c
  2304   000FAC  EC52  F022         	call	___flge	;wreg free
  2305   000FB0  B0D8               	btfsc	status,0,c
  2306   000FB2  EFDD  F007         	goto	u3961
  2307   000FB6  EFDF  F007         	goto	u3960
  2308   000FBA                     u3961:
  2309   000FBA  EF18  F008         	goto	l3850
  2310   000FBE                     u3960:
  2311   000FBE  0E00               	movlw	0
  2312   000FC0  6E01               	movwf	___flge@ff1^0,c
  2313   000FC2  0E00               	movlw	0
  2314   000FC4  6E02               	movwf	(___flge@ff1+1)^0,c
  2315   000FC6  0EA0               	movlw	160
  2316   000FC8  6E03               	movwf	(___flge@ff1+2)^0,c
  2317   000FCA  0E42               	movlw	66
  2318   000FCC  6E04               	movwf	(___flge@ff1+3)^0,c
  2319   000FCE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2320   000FD2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2321   000FD6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2322   000FDA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2323   000FDE  EC52  F022         	call	___flge	;wreg free
  2324   000FE2  B0D8               	btfsc	status,0,c
  2325   000FE4  EFF6  F007         	goto	u3971
  2326   000FE8  EFF8  F007         	goto	u3970
  2327   000FEC                     u3971:
  2328   000FEC  EF18  F008         	goto	l3850
  2329   000FF0                     u3970:
  2330   000FF0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2331   000FF4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2332   000FF8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2333   000FFC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2334   001000  0E00               	movlw	0
  2335   001002  6E05               	movwf	___flge@ff2^0,c
  2336   001004  0E00               	movlw	0
  2337   001006  6E06               	movwf	(___flge@ff2+1)^0,c
  2338   001008  0EAA               	movlw	170
  2339   00100A  6E07               	movwf	(___flge@ff2+2)^0,c
  2340   00100C  0E42               	movlw	66
  2341   00100E  6E08               	movwf	(___flge@ff2+3)^0,c
  2342   001010  EC52  F022         	call	___flge	;wreg free
  2343   001014  B0D8               	btfsc	status,0,c
  2344   001016  EF0F  F008         	goto	u3981
  2345   00101A  EF11  F008         	goto	u3980
  2346   00101E                     u3981:
  2347   00101E  EF18  F008         	goto	l3850
  2348   001022                     u3980:
  2349   001022  0E00               	movlw	0
  2350   001024  0100               	movlb	0	; () banked
  2351   001026  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2352   001028  0E01               	movlw	1
  2353   00102A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2354   00102C  EF18  F00C         	goto	l3942
  2355   001030                     l3850:
  2356   001030  0E00               	movlw	0
  2357   001032  6E01               	movwf	___flge@ff1^0,c
  2358   001034  0E00               	movlw	0
  2359   001036  6E02               	movwf	(___flge@ff1+1)^0,c
  2360   001038  0E86               	movlw	134
  2361   00103A  6E03               	movwf	(___flge@ff1+2)^0,c
  2362   00103C  0E42               	movlw	66
  2363   00103E  6E04               	movwf	(___flge@ff1+3)^0,c
  2364   001040  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2365   001044  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2366   001048  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2367   00104C  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2368   001050  EC52  F022         	call	___flge	;wreg free
  2369   001054  B0D8               	btfsc	status,0,c
  2370   001056  EF2F  F008         	goto	u3991
  2371   00105A  EF31  F008         	goto	u3990
  2372   00105E                     u3991:
  2373   00105E  EFB5  F008         	goto	l3864
  2374   001062                     u3990:
  2375   001062  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2376   001066  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2377   00106A  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2378   00106E  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2379   001072  0E00               	movlw	0
  2380   001074  6E05               	movwf	___flge@ff2^0,c
  2381   001076  0E00               	movlw	0
  2382   001078  6E06               	movwf	(___flge@ff2+1)^0,c
  2383   00107A  0E9E               	movlw	158
  2384   00107C  6E07               	movwf	(___flge@ff2+2)^0,c
  2385   00107E  0E42               	movlw	66
  2386   001080  6E08               	movwf	(___flge@ff2+3)^0,c
  2387   001082  EC52  F022         	call	___flge	;wreg free
  2388   001086  B0D8               	btfsc	status,0,c
  2389   001088  EF48  F008         	goto	u4001
  2390   00108C  EF4A  F008         	goto	u4000
  2391   001090                     u4001:
  2392   001090  EFB5  F008         	goto	l3864
  2393   001094                     u4000:
  2394   001094  0E00               	movlw	0
  2395   001096  6E01               	movwf	___flge@ff1^0,c
  2396   001098  0E00               	movlw	0
  2397   00109A  6E02               	movwf	(___flge@ff1+1)^0,c
  2398   00109C  0E48               	movlw	72
  2399   00109E  6E03               	movwf	(___flge@ff1+2)^0,c
  2400   0010A0  0E42               	movlw	66
  2401   0010A2  6E04               	movwf	(___flge@ff1+3)^0,c
  2402   0010A4  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2403   0010A8  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2404   0010AC  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2405   0010B0  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2406   0010B4  EC52  F022         	call	___flge	;wreg free
  2407   0010B8  B0D8               	btfsc	status,0,c
  2408   0010BA  EF61  F008         	goto	u4011
  2409   0010BE  EF63  F008         	goto	u4010
  2410   0010C2                     u4011:
  2411   0010C2  EFB5  F008         	goto	l3864
  2412   0010C6                     u4010:
  2413   0010C6  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2414   0010CA  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2415   0010CE  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2416   0010D2  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2417   0010D6  0E00               	movlw	0
  2418   0010D8  6E05               	movwf	___flge@ff2^0,c
  2419   0010DA  0E00               	movlw	0
  2420   0010DC  6E06               	movwf	(___flge@ff2+1)^0,c
  2421   0010DE  0E64               	movlw	100
  2422   0010E0  6E07               	movwf	(___flge@ff2+2)^0,c
  2423   0010E2  0E42               	movlw	66
  2424   0010E4  6E08               	movwf	(___flge@ff2+3)^0,c
  2425   0010E6  EC52  F022         	call	___flge	;wreg free
  2426   0010EA  B0D8               	btfsc	status,0,c
  2427   0010EC  EF7A  F008         	goto	u4021
  2428   0010F0  EF7C  F008         	goto	u4020
  2429   0010F4                     u4021:
  2430   0010F4  EFB5  F008         	goto	l3864
  2431   0010F8                     u4020:
  2432   0010F8  0E00               	movlw	0
  2433   0010FA  6E01               	movwf	___flge@ff1^0,c
  2434   0010FC  0E00               	movlw	0
  2435   0010FE  6E02               	movwf	(___flge@ff1+1)^0,c
  2436   001100  0E20               	movlw	32
  2437   001102  6E03               	movwf	(___flge@ff1+2)^0,c
  2438   001104  0E42               	movlw	66
  2439   001106  6E04               	movwf	(___flge@ff1+3)^0,c
  2440   001108  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2441   00110C  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2442   001110  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2443   001114  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2444   001118  EC52  F022         	call	___flge	;wreg free
  2445   00111C  B0D8               	btfsc	status,0,c
  2446   00111E  EF93  F008         	goto	u4031
  2447   001122  EF95  F008         	goto	u4030
  2448   001126                     u4031:
  2449   001126  EFB5  F008         	goto	l3864
  2450   00112A                     u4030:
  2451   00112A  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2452   00112E  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2453   001132  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2454   001136  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2455   00113A  0E00               	movlw	0
  2456   00113C  6E05               	movwf	___flge@ff2^0,c
  2457   00113E  0E00               	movlw	0
  2458   001140  6E06               	movwf	(___flge@ff2+1)^0,c
  2459   001142  0E38               	movlw	56
  2460   001144  6E07               	movwf	(___flge@ff2+2)^0,c
  2461   001146  0E42               	movlw	66
  2462   001148  6E08               	movwf	(___flge@ff2+3)^0,c
  2463   00114A  EC52  F022         	call	___flge	;wreg free
  2464   00114E  B0D8               	btfsc	status,0,c
  2465   001150  EFAC  F008         	goto	u4041
  2466   001154  EFAE  F008         	goto	u4040
  2467   001158                     u4041:
  2468   001158  EFB5  F008         	goto	l3864
  2469   00115C                     u4040:
  2470   00115C  0E00               	movlw	0
  2471   00115E  0100               	movlb	0	; () banked
  2472   001160  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2473   001162  0E02               	movlw	2
  2474   001164  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2475   001166  EF18  F00C         	goto	l3942
  2476   00116A                     l3864:
  2477   00116A  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2478   00116E  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2479   001172  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2480   001176  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2481   00117A  0E00               	movlw	0
  2482   00117C  6E05               	movwf	___flge@ff2^0,c
  2483   00117E  0E00               	movlw	0
  2484   001180  6E06               	movwf	(___flge@ff2+1)^0,c
  2485   001182  0E20               	movlw	32
  2486   001184  6E07               	movwf	(___flge@ff2+2)^0,c
  2487   001186  0E41               	movlw	65
  2488   001188  6E08               	movwf	(___flge@ff2+3)^0,c
  2489   00118A  EC52  F022         	call	___flge	;wreg free
  2490   00118E  B0D8               	btfsc	status,0,c
  2491   001190  EFCC  F008         	goto	u4051
  2492   001194  EFCE  F008         	goto	u4050
  2493   001198                     u4051:
  2494   001198  EF07  F009         	goto	l3872
  2495   00119C                     u4050:
  2496   00119C  0E00               	movlw	0
  2497   00119E  6E01               	movwf	___flge@ff1^0,c
  2498   0011A0  0E00               	movlw	0
  2499   0011A2  6E02               	movwf	(___flge@ff1+1)^0,c
  2500   0011A4  0EF0               	movlw	240
  2501   0011A6  6E03               	movwf	(___flge@ff1+2)^0,c
  2502   0011A8  0E41               	movlw	65
  2503   0011AA  6E04               	movwf	(___flge@ff1+3)^0,c
  2504   0011AC  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2505   0011B0  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2506   0011B4  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2507   0011B8  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2508   0011BC  EC52  F022         	call	___flge	;wreg free
  2509   0011C0  B0D8               	btfsc	status,0,c
  2510   0011C2  EFE5  F008         	goto	u4061
  2511   0011C6  EFE7  F008         	goto	u4060
  2512   0011CA                     u4061:
  2513   0011CA  EF07  F009         	goto	l3872
  2514   0011CE                     u4060:
  2515   0011CE  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2516   0011D2  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2517   0011D6  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2518   0011DA  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2519   0011DE  0E00               	movlw	0
  2520   0011E0  6E05               	movwf	___flge@ff2^0,c
  2521   0011E2  0E00               	movlw	0
  2522   0011E4  6E06               	movwf	(___flge@ff2+1)^0,c
  2523   0011E6  0E0C               	movlw	12
  2524   0011E8  6E07               	movwf	(___flge@ff2+2)^0,c
  2525   0011EA  0E42               	movlw	66
  2526   0011EC  6E08               	movwf	(___flge@ff2+3)^0,c
  2527   0011EE  EC52  F022         	call	___flge	;wreg free
  2528   0011F2  B0D8               	btfsc	status,0,c
  2529   0011F4  EFFE  F008         	goto	u4071
  2530   0011F8  EF00  F009         	goto	u4070
  2531   0011FC                     u4071:
  2532   0011FC  EF07  F009         	goto	l3872
  2533   001200                     u4070:
  2534   001200  0E00               	movlw	0
  2535   001202  0100               	movlb	0	; () banked
  2536   001204  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2537   001206  0E03               	movlw	3
  2538   001208  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2539   00120A  EF18  F00C         	goto	l3942
  2540   00120E                     l3872:
  2541   00120E  0E00               	movlw	0
  2542   001210  6E01               	movwf	___flge@ff1^0,c
  2543   001212  0E00               	movlw	0
  2544   001214  6E02               	movwf	(___flge@ff1+1)^0,c
  2545   001216  0EA0               	movlw	160
  2546   001218  6E03               	movwf	(___flge@ff1+2)^0,c
  2547   00121A  0E41               	movlw	65
  2548   00121C  6E04               	movwf	(___flge@ff1+3)^0,c
  2549   00121E  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2550   001222  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2551   001226  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2552   00122A  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2553   00122E  EC52  F022         	call	___flge	;wreg free
  2554   001232  B0D8               	btfsc	status,0,c
  2555   001234  EF1E  F009         	goto	u4081
  2556   001238  EF20  F009         	goto	u4080
  2557   00123C                     u4081:
  2558   00123C  EFA4  F009         	goto	l3886
  2559   001240                     u4080:
  2560   001240  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2561   001244  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2562   001248  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2563   00124C  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2564   001250  0E00               	movlw	0
  2565   001252  6E05               	movwf	___flge@ff2^0,c
  2566   001254  0E00               	movlw	0
  2567   001256  6E06               	movwf	(___flge@ff2+1)^0,c
  2568   001258  0EC8               	movlw	200
  2569   00125A  6E07               	movwf	(___flge@ff2+2)^0,c
  2570   00125C  0E41               	movlw	65
  2571   00125E  6E08               	movwf	(___flge@ff2+3)^0,c
  2572   001260  EC52  F022         	call	___flge	;wreg free
  2573   001264  B0D8               	btfsc	status,0,c
  2574   001266  EF37  F009         	goto	u4091
  2575   00126A  EF39  F009         	goto	u4090
  2576   00126E                     u4091:
  2577   00126E  EFA4  F009         	goto	l3886
  2578   001272                     u4090:
  2579   001272  0E00               	movlw	0
  2580   001274  6E01               	movwf	___flge@ff1^0,c
  2581   001276  0E00               	movlw	0
  2582   001278  6E02               	movwf	(___flge@ff1+1)^0,c
  2583   00127A  0E82               	movlw	130
  2584   00127C  6E03               	movwf	(___flge@ff1+2)^0,c
  2585   00127E  0E42               	movlw	66
  2586   001280  6E04               	movwf	(___flge@ff1+3)^0,c
  2587   001282  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2588   001286  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2589   00128A  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2590   00128E  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2591   001292  EC52  F022         	call	___flge	;wreg free
  2592   001296  B0D8               	btfsc	status,0,c
  2593   001298  EF50  F009         	goto	u4101
  2594   00129C  EF52  F009         	goto	u4100
  2595   0012A0                     u4101:
  2596   0012A0  EFA4  F009         	goto	l3886
  2597   0012A4                     u4100:
  2598   0012A4  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2599   0012A8  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2600   0012AC  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2601   0012B0  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2602   0012B4  0E00               	movlw	0
  2603   0012B6  6E05               	movwf	___flge@ff2^0,c
  2604   0012B8  0E00               	movlw	0
  2605   0012BA  6E06               	movwf	(___flge@ff2+1)^0,c
  2606   0012BC  0E8C               	movlw	140
  2607   0012BE  6E07               	movwf	(___flge@ff2+2)^0,c
  2608   0012C0  0E42               	movlw	66
  2609   0012C2  6E08               	movwf	(___flge@ff2+3)^0,c
  2610   0012C4  EC52  F022         	call	___flge	;wreg free
  2611   0012C8  B0D8               	btfsc	status,0,c
  2612   0012CA  EF69  F009         	goto	u4111
  2613   0012CE  EF6B  F009         	goto	u4110
  2614   0012D2                     u4111:
  2615   0012D2  EFA4  F009         	goto	l3886
  2616   0012D6                     u4110:
  2617   0012D6  0E00               	movlw	0
  2618   0012D8  6E01               	movwf	___flge@ff1^0,c
  2619   0012DA  0E00               	movlw	0
  2620   0012DC  6E02               	movwf	(___flge@ff1+1)^0,c
  2621   0012DE  0E58               	movlw	88
  2622   0012E0  6E03               	movwf	(___flge@ff1+2)^0,c
  2623   0012E2  0E42               	movlw	66
  2624   0012E4  6E04               	movwf	(___flge@ff1+3)^0,c
  2625   0012E6  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2626   0012EA  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2627   0012EE  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2628   0012F2  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2629   0012F6  EC52  F022         	call	___flge	;wreg free
  2630   0012FA  B0D8               	btfsc	status,0,c
  2631   0012FC  EF82  F009         	goto	u4121
  2632   001300  EF84  F009         	goto	u4120
  2633   001304                     u4121:
  2634   001304  EFA4  F009         	goto	l3886
  2635   001308                     u4120:
  2636   001308  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2637   00130C  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2638   001310  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2639   001314  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2640   001318  0E00               	movlw	0
  2641   00131A  6E05               	movwf	___flge@ff2^0,c
  2642   00131C  0E00               	movlw	0
  2643   00131E  6E06               	movwf	(___flge@ff2+1)^0,c
  2644   001320  0E64               	movlw	100
  2645   001322  6E07               	movwf	(___flge@ff2+2)^0,c
  2646   001324  0E42               	movlw	66
  2647   001326  6E08               	movwf	(___flge@ff2+3)^0,c
  2648   001328  EC52  F022         	call	___flge	;wreg free
  2649   00132C  B0D8               	btfsc	status,0,c
  2650   00132E  EF9B  F009         	goto	u4131
  2651   001332  EF9D  F009         	goto	u4130
  2652   001336                     u4131:
  2653   001336  EFA4  F009         	goto	l3886
  2654   00133A                     u4130:
  2655   00133A  0E00               	movlw	0
  2656   00133C  0100               	movlb	0	; () banked
  2657   00133E  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2658   001340  0E04               	movlw	4
  2659   001342  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2660   001344  EF18  F00C         	goto	l3942
  2661   001348                     l3886:
  2662   001348  0E00               	movlw	0
  2663   00134A  6E01               	movwf	___flge@ff1^0,c
  2664   00134C  0E00               	movlw	0
  2665   00134E  6E02               	movwf	(___flge@ff1+1)^0,c
  2666   001350  0E50               	movlw	80
  2667   001352  6E03               	movwf	(___flge@ff1+2)^0,c
  2668   001354  0E41               	movlw	65
  2669   001356  6E04               	movwf	(___flge@ff1+3)^0,c
  2670   001358  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2671   00135C  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2672   001360  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2673   001364  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2674   001368  EC52  F022         	call	___flge	;wreg free
  2675   00136C  B0D8               	btfsc	status,0,c
  2676   00136E  EFBB  F009         	goto	u4141
  2677   001372  EFBD  F009         	goto	u4140
  2678   001376                     u4141:
  2679   001376  EF41  F00A         	goto	l3900
  2680   00137A                     u4140:
  2681   00137A  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2682   00137E  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2683   001382  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2684   001386  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2685   00138A  0E00               	movlw	0
  2686   00138C  6E05               	movwf	___flge@ff2^0,c
  2687   00138E  0E00               	movlw	0
  2688   001390  6E06               	movwf	(___flge@ff2+1)^0,c
  2689   001392  0E90               	movlw	144
  2690   001394  6E07               	movwf	(___flge@ff2+2)^0,c
  2691   001396  0E41               	movlw	65
  2692   001398  6E08               	movwf	(___flge@ff2+3)^0,c
  2693   00139A  EC52  F022         	call	___flge	;wreg free
  2694   00139E  B0D8               	btfsc	status,0,c
  2695   0013A0  EFD4  F009         	goto	u4151
  2696   0013A4  EFD6  F009         	goto	u4150
  2697   0013A8                     u4151:
  2698   0013A8  EF41  F00A         	goto	l3900
  2699   0013AC                     u4150:
  2700   0013AC  0E00               	movlw	0
  2701   0013AE  6E01               	movwf	___flge@ff1^0,c
  2702   0013B0  0E00               	movlw	0
  2703   0013B2  6E02               	movwf	(___flge@ff1+1)^0,c
  2704   0013B4  0E5C               	movlw	92
  2705   0013B6  6E03               	movwf	(___flge@ff1+2)^0,c
  2706   0013B8  0E42               	movlw	66
  2707   0013BA  6E04               	movwf	(___flge@ff1+3)^0,c
  2708   0013BC  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2709   0013C0  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2710   0013C4  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2711   0013C8  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2712   0013CC  EC52  F022         	call	___flge	;wreg free
  2713   0013D0  B0D8               	btfsc	status,0,c
  2714   0013D2  EFED  F009         	goto	u4161
  2715   0013D6  EFEF  F009         	goto	u4160
  2716   0013DA                     u4161:
  2717   0013DA  EF41  F00A         	goto	l3900
  2718   0013DE                     u4160:
  2719   0013DE  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2720   0013E2  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2721   0013E6  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2722   0013EA  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2723   0013EE  0E00               	movlw	0
  2724   0013F0  6E05               	movwf	___flge@ff2^0,c
  2725   0013F2  0E00               	movlw	0
  2726   0013F4  6E06               	movwf	(___flge@ff2+1)^0,c
  2727   0013F6  0E70               	movlw	112
  2728   0013F8  6E07               	movwf	(___flge@ff2+2)^0,c
  2729   0013FA  0E42               	movlw	66
  2730   0013FC  6E08               	movwf	(___flge@ff2+3)^0,c
  2731   0013FE  EC52  F022         	call	___flge	;wreg free
  2732   001402  B0D8               	btfsc	status,0,c
  2733   001404  EF06  F00A         	goto	u4171
  2734   001408  EF08  F00A         	goto	u4170
  2735   00140C                     u4171:
  2736   00140C  EF41  F00A         	goto	l3900
  2737   001410                     u4170:
  2738   001410  0E00               	movlw	0
  2739   001412  6E01               	movwf	___flge@ff1^0,c
  2740   001414  0E00               	movlw	0
  2741   001416  6E02               	movwf	(___flge@ff1+1)^0,c
  2742   001418  0E48               	movlw	72
  2743   00141A  6E03               	movwf	(___flge@ff1+2)^0,c
  2744   00141C  0E42               	movlw	66
  2745   00141E  6E04               	movwf	(___flge@ff1+3)^0,c
  2746   001420  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2747   001424  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2748   001428  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2749   00142C  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2750   001430  EC52  F022         	call	___flge	;wreg free
  2751   001434  B0D8               	btfsc	status,0,c
  2752   001436  EF1F  F00A         	goto	u4181
  2753   00143A  EF21  F00A         	goto	u4180
  2754   00143E                     u4181:
  2755   00143E  EF41  F00A         	goto	l3900
  2756   001442                     u4180:
  2757   001442  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2758   001446  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2759   00144A  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2760   00144E  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2761   001452  0E00               	movlw	0
  2762   001454  6E05               	movwf	___flge@ff2^0,c
  2763   001456  0E00               	movlw	0
  2764   001458  6E06               	movwf	(___flge@ff2+1)^0,c
  2765   00145A  0E58               	movlw	88
  2766   00145C  6E07               	movwf	(___flge@ff2+2)^0,c
  2767   00145E  0E42               	movlw	66
  2768   001460  6E08               	movwf	(___flge@ff2+3)^0,c
  2769   001462  EC52  F022         	call	___flge	;wreg free
  2770   001466  B0D8               	btfsc	status,0,c
  2771   001468  EF38  F00A         	goto	u4191
  2772   00146C  EF3A  F00A         	goto	u4190
  2773   001470                     u4191:
  2774   001470  EF41  F00A         	goto	l3900
  2775   001474                     u4190:
  2776   001474  0E00               	movlw	0
  2777   001476  0100               	movlb	0	; () banked
  2778   001478  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2779   00147A  0E05               	movlw	5
  2780   00147C  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2781   00147E  EF18  F00C         	goto	l3942
  2782   001482                     l3900:
  2783   001482  0E00               	movlw	0
  2784   001484  6E01               	movwf	___flge@ff1^0,c
  2785   001486  0E00               	movlw	0
  2786   001488  6E02               	movwf	(___flge@ff1+1)^0,c
  2787   00148A  0EA0               	movlw	160
  2788   00148C  6E03               	movwf	(___flge@ff1+2)^0,c
  2789   00148E  0E40               	movlw	64
  2790   001490  6E04               	movwf	(___flge@ff1+3)^0,c
  2791   001492  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2792   001496  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2793   00149A  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2794   00149E  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2795   0014A2  EC52  F022         	call	___flge	;wreg free
  2796   0014A6  B0D8               	btfsc	status,0,c
  2797   0014A8  EF58  F00A         	goto	u4201
  2798   0014AC  EF5A  F00A         	goto	u4200
  2799   0014B0                     u4201:
  2800   0014B0  EFDE  F00A         	goto	l3914
  2801   0014B4                     u4200:
  2802   0014B4  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2803   0014B8  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2804   0014BC  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2805   0014C0  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2806   0014C4  0E00               	movlw	0
  2807   0014C6  6E05               	movwf	___flge@ff2^0,c
  2808   0014C8  0E00               	movlw	0
  2809   0014CA  6E06               	movwf	(___flge@ff2+1)^0,c
  2810   0014CC  0E20               	movlw	32
  2811   0014CE  6E07               	movwf	(___flge@ff2+2)^0,c
  2812   0014D0  0E41               	movlw	65
  2813   0014D2  6E08               	movwf	(___flge@ff2+3)^0,c
  2814   0014D4  EC52  F022         	call	___flge	;wreg free
  2815   0014D8  B0D8               	btfsc	status,0,c
  2816   0014DA  EF71  F00A         	goto	u4211
  2817   0014DE  EF73  F00A         	goto	u4210
  2818   0014E2                     u4211:
  2819   0014E2  EFDE  F00A         	goto	l3914
  2820   0014E6                     u4210:
  2821   0014E6  0E00               	movlw	0
  2822   0014E8  6E01               	movwf	___flge@ff1^0,c
  2823   0014EA  0E00               	movlw	0
  2824   0014EC  6E02               	movwf	(___flge@ff1+1)^0,c
  2825   0014EE  0E8C               	movlw	140
  2826   0014F0  6E03               	movwf	(___flge@ff1+2)^0,c
  2827   0014F2  0E42               	movlw	66
  2828   0014F4  6E04               	movwf	(___flge@ff1+3)^0,c
  2829   0014F6  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2830   0014FA  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2831   0014FE  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2832   001502  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2833   001506  EC52  F022         	call	___flge	;wreg free
  2834   00150A  B0D8               	btfsc	status,0,c
  2835   00150C  EF8A  F00A         	goto	u4221
  2836   001510  EF8C  F00A         	goto	u4220
  2837   001514                     u4221:
  2838   001514  EFDE  F00A         	goto	l3914
  2839   001518                     u4220:
  2840   001518  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2841   00151C  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2842   001520  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2843   001524  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2844   001528  0E00               	movlw	0
  2845   00152A  6E05               	movwf	___flge@ff2^0,c
  2846   00152C  0E00               	movlw	0
  2847   00152E  6E06               	movwf	(___flge@ff2+1)^0,c
  2848   001530  0E96               	movlw	150
  2849   001532  6E07               	movwf	(___flge@ff2+2)^0,c
  2850   001534  0E42               	movlw	66
  2851   001536  6E08               	movwf	(___flge@ff2+3)^0,c
  2852   001538  EC52  F022         	call	___flge	;wreg free
  2853   00153C  B0D8               	btfsc	status,0,c
  2854   00153E  EFA3  F00A         	goto	u4231
  2855   001542  EFA5  F00A         	goto	u4230
  2856   001546                     u4231:
  2857   001546  EFDE  F00A         	goto	l3914
  2858   00154A                     u4230:
  2859   00154A  0E00               	movlw	0
  2860   00154C  6E01               	movwf	___flge@ff1^0,c
  2861   00154E  0E00               	movlw	0
  2862   001550  6E02               	movwf	(___flge@ff1+1)^0,c
  2863   001552  0E78               	movlw	120
  2864   001554  6E03               	movwf	(___flge@ff1+2)^0,c
  2865   001556  0E42               	movlw	66
  2866   001558  6E04               	movwf	(___flge@ff1+3)^0,c
  2867   00155A  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2868   00155E  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2869   001562  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2870   001566  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2871   00156A  EC52  F022         	call	___flge	;wreg free
  2872   00156E  B0D8               	btfsc	status,0,c
  2873   001570  EFBC  F00A         	goto	u4241
  2874   001574  EFBE  F00A         	goto	u4240
  2875   001578                     u4241:
  2876   001578  EFDE  F00A         	goto	l3914
  2877   00157C                     u4240:
  2878   00157C  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  2879   001580  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  2880   001584  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  2881   001588  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  2882   00158C  0E00               	movlw	0
  2883   00158E  6E05               	movwf	___flge@ff2^0,c
  2884   001590  0E00               	movlw	0
  2885   001592  6E06               	movwf	(___flge@ff2+1)^0,c
  2886   001594  0E86               	movlw	134
  2887   001596  6E07               	movwf	(___flge@ff2+2)^0,c
  2888   001598  0E42               	movlw	66
  2889   00159A  6E08               	movwf	(___flge@ff2+3)^0,c
  2890   00159C  EC52  F022         	call	___flge	;wreg free
  2891   0015A0  B0D8               	btfsc	status,0,c
  2892   0015A2  EFD5  F00A         	goto	u4251
  2893   0015A6  EFD7  F00A         	goto	u4250
  2894   0015AA                     u4251:
  2895   0015AA  EFDE  F00A         	goto	l3914
  2896   0015AE                     u4250:
  2897   0015AE  0E00               	movlw	0
  2898   0015B0  0100               	movlb	0	; () banked
  2899   0015B2  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  2900   0015B4  0E06               	movlw	6
  2901   0015B6  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  2902   0015B8  EF18  F00C         	goto	l3942
  2903   0015BC                     l3914:
  2904   0015BC  0E00               	movlw	0
  2905   0015BE  6E01               	movwf	___flge@ff1^0,c
  2906   0015C0  0E00               	movlw	0
  2907   0015C2  6E02               	movwf	(___flge@ff1+1)^0,c
  2908   0015C4  0E94               	movlw	148
  2909   0015C6  6E03               	movwf	(___flge@ff1+2)^0,c
  2910   0015C8  0E42               	movlw	66
  2911   0015CA  6E04               	movwf	(___flge@ff1+3)^0,c
  2912   0015CC  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  2913   0015D0  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  2914   0015D4  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  2915   0015D8  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  2916   0015DC  EC52  F022         	call	___flge	;wreg free
  2917   0015E0  B0D8               	btfsc	status,0,c
  2918   0015E2  EFF5  F00A         	goto	u4261
  2919   0015E6  EFF7  F00A         	goto	u4260
  2920   0015EA                     u4261:
  2921   0015EA  EF7B  F00B         	goto	l3928
  2922   0015EE                     u4260:
  2923   0015EE  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  2924   0015F2  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  2925   0015F6  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  2926   0015FA  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  2927   0015FE  0E00               	movlw	0
  2928   001600  6E05               	movwf	___flge@ff2^0,c
  2929   001602  0E00               	movlw	0
  2930   001604  6E06               	movwf	(___flge@ff2+1)^0,c
  2931   001606  0EAA               	movlw	170
  2932   001608  6E07               	movwf	(___flge@ff2+2)^0,c
  2933   00160A  0E42               	movlw	66
  2934   00160C  6E08               	movwf	(___flge@ff2+3)^0,c
  2935   00160E  EC52  F022         	call	___flge	;wreg free
  2936   001612  B0D8               	btfsc	status,0,c
  2937   001614  EF0E  F00B         	goto	u4271
  2938   001618  EF10  F00B         	goto	u4270
  2939   00161C                     u4271:
  2940   00161C  EF7B  F00B         	goto	l3928
  2941   001620                     u4270:
  2942   001620  0E00               	movlw	0
  2943   001622  6E01               	movwf	___flge@ff1^0,c
  2944   001624  0E00               	movlw	0
  2945   001626  6E02               	movwf	(___flge@ff1+1)^0,c
  2946   001628  0EE0               	movlw	224
  2947   00162A  6E03               	movwf	(___flge@ff1+2)^0,c
  2948   00162C  0E41               	movlw	65
  2949   00162E  6E04               	movwf	(___flge@ff1+3)^0,c
  2950   001630  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  2951   001634  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  2952   001638  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  2953   00163C  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  2954   001640  EC52  F022         	call	___flge	;wreg free
  2955   001644  B0D8               	btfsc	status,0,c
  2956   001646  EF27  F00B         	goto	u4281
  2957   00164A  EF29  F00B         	goto	u4280
  2958   00164E                     u4281:
  2959   00164E  EF7B  F00B         	goto	l3928
  2960   001652                     u4280:
  2961   001652  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  2962   001656  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  2963   00165A  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  2964   00165E  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  2965   001662  0E00               	movlw	0
  2966   001664  6E05               	movwf	___flge@ff2^0,c
  2967   001666  0E00               	movlw	0
  2968   001668  6E06               	movwf	(___flge@ff2+1)^0,c
  2969   00166A  0E04               	movlw	4
  2970   00166C  6E07               	movwf	(___flge@ff2+2)^0,c
  2971   00166E  0E42               	movlw	66
  2972   001670  6E08               	movwf	(___flge@ff2+3)^0,c
  2973   001672  EC52  F022         	call	___flge	;wreg free
  2974   001676  B0D8               	btfsc	status,0,c
  2975   001678  EF40  F00B         	goto	u4291
  2976   00167C  EF42  F00B         	goto	u4290
  2977   001680                     u4291:
  2978   001680  EF7B  F00B         	goto	l3928
  2979   001684                     u4290:
  2980   001684  0E00               	movlw	0
  2981   001686  6E01               	movwf	___flge@ff1^0,c
  2982   001688  0E00               	movlw	0
  2983   00168A  6E02               	movwf	(___flge@ff1+1)^0,c
  2984   00168C  0E14               	movlw	20
  2985   00168E  6E03               	movwf	(___flge@ff1+2)^0,c
  2986   001690  0E42               	movlw	66
  2987   001692  6E04               	movwf	(___flge@ff1+3)^0,c
  2988   001694  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  2989   001698  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  2990   00169C  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  2991   0016A0  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  2992   0016A4  EC52  F022         	call	___flge	;wreg free
  2993   0016A8  B0D8               	btfsc	status,0,c
  2994   0016AA  EF59  F00B         	goto	u4301
  2995   0016AE  EF5B  F00B         	goto	u4300
  2996   0016B2                     u4301:
  2997   0016B2  EF7B  F00B         	goto	l3928
  2998   0016B6                     u4300:
  2999   0016B6  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3000   0016BA  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3001   0016BE  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3002   0016C2  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3003   0016C6  0E00               	movlw	0
  3004   0016C8  6E05               	movwf	___flge@ff2^0,c
  3005   0016CA  0E00               	movlw	0
  3006   0016CC  6E06               	movwf	(___flge@ff2+1)^0,c
  3007   0016CE  0E28               	movlw	40
  3008   0016D0  6E07               	movwf	(___flge@ff2+2)^0,c
  3009   0016D2  0E42               	movlw	66
  3010   0016D4  6E08               	movwf	(___flge@ff2+3)^0,c
  3011   0016D6  EC52  F022         	call	___flge	;wreg free
  3012   0016DA  B0D8               	btfsc	status,0,c
  3013   0016DC  EF72  F00B         	goto	u4311
  3014   0016E0  EF74  F00B         	goto	u4310
  3015   0016E4                     u4311:
  3016   0016E4  EF7B  F00B         	goto	l3928
  3017   0016E8                     u4310:
  3018   0016E8  0E00               	movlw	0
  3019   0016EA  0100               	movlb	0	; () banked
  3020   0016EC  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3021   0016EE  0E07               	movlw	7
  3022   0016F0  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3023   0016F2  EF18  F00C         	goto	l3942
  3024   0016F6                     l3928:
  3025   0016F6  0E00               	movlw	0
  3026   0016F8  6E01               	movwf	___flge@ff1^0,c
  3027   0016FA  0E00               	movlw	0
  3028   0016FC  6E02               	movwf	(___flge@ff1+1)^0,c
  3029   0016FE  0EB0               	movlw	176
  3030   001700  6E03               	movwf	(___flge@ff1+2)^0,c
  3031   001702  0E41               	movlw	65
  3032   001704  6E04               	movwf	(___flge@ff1+3)^0,c
  3033   001706  C0D3  F005         	movff	color_cardCheck@H,___flge@ff2
  3034   00170A  C0D4  F006         	movff	color_cardCheck@H+1,___flge@ff2+1
  3035   00170E  C0D5  F007         	movff	color_cardCheck@H+2,___flge@ff2+2
  3036   001712  C0D6  F008         	movff	color_cardCheck@H+3,___flge@ff2+3
  3037   001716  EC52  F022         	call	___flge	;wreg free
  3038   00171A  B0D8               	btfsc	status,0,c
  3039   00171C  EF92  F00B         	goto	u4321
  3040   001720  EF94  F00B         	goto	u4320
  3041   001724                     u4321:
  3042   001724  EF18  F00C         	goto	l99
  3043   001728                     u4320:
  3044   001728  C0D3  F001         	movff	color_cardCheck@H,___flge@ff1
  3045   00172C  C0D4  F002         	movff	color_cardCheck@H+1,___flge@ff1+1
  3046   001730  C0D5  F003         	movff	color_cardCheck@H+2,___flge@ff1+2
  3047   001734  C0D6  F004         	movff	color_cardCheck@H+3,___flge@ff1+3
  3048   001738  0E00               	movlw	0
  3049   00173A  6E05               	movwf	___flge@ff2^0,c
  3050   00173C  0E00               	movlw	0
  3051   00173E  6E06               	movwf	(___flge@ff2+1)^0,c
  3052   001740  0ED8               	movlw	216
  3053   001742  6E07               	movwf	(___flge@ff2+2)^0,c
  3054   001744  0E41               	movlw	65
  3055   001746  6E08               	movwf	(___flge@ff2+3)^0,c
  3056   001748  EC52  F022         	call	___flge	;wreg free
  3057   00174C  B0D8               	btfsc	status,0,c
  3058   00174E  EFAB  F00B         	goto	u4331
  3059   001752  EFAD  F00B         	goto	u4330
  3060   001756                     u4331:
  3061   001756  EF18  F00C         	goto	l99
  3062   00175A                     u4330:
  3063   00175A  0E00               	movlw	0
  3064   00175C  6E01               	movwf	___flge@ff1^0,c
  3065   00175E  0E00               	movlw	0
  3066   001760  6E02               	movwf	(___flge@ff1+1)^0,c
  3067   001762  0E40               	movlw	64
  3068   001764  6E03               	movwf	(___flge@ff1+2)^0,c
  3069   001766  0E42               	movlw	66
  3070   001768  6E04               	movwf	(___flge@ff1+3)^0,c
  3071   00176A  C0D7  F005         	movff	color_cardCheck@S,___flge@ff2
  3072   00176E  C0D8  F006         	movff	color_cardCheck@S+1,___flge@ff2+1
  3073   001772  C0D9  F007         	movff	color_cardCheck@S+2,___flge@ff2+2
  3074   001776  C0DA  F008         	movff	color_cardCheck@S+3,___flge@ff2+3
  3075   00177A  EC52  F022         	call	___flge	;wreg free
  3076   00177E  B0D8               	btfsc	status,0,c
  3077   001780  EFC4  F00B         	goto	u4341
  3078   001784  EFC6  F00B         	goto	u4340
  3079   001788                     u4341:
  3080   001788  EF18  F00C         	goto	l99
  3081   00178C                     u4340:
  3082   00178C  C0D7  F001         	movff	color_cardCheck@S,___flge@ff1
  3083   001790  C0D8  F002         	movff	color_cardCheck@S+1,___flge@ff1+1
  3084   001794  C0D9  F003         	movff	color_cardCheck@S+2,___flge@ff1+2
  3085   001798  C0DA  F004         	movff	color_cardCheck@S+3,___flge@ff1+3
  3086   00179C  0E00               	movlw	0
  3087   00179E  6E05               	movwf	___flge@ff2^0,c
  3088   0017A0  0E00               	movlw	0
  3089   0017A2  6E06               	movwf	(___flge@ff2+1)^0,c
  3090   0017A4  0E54               	movlw	84
  3091   0017A6  6E07               	movwf	(___flge@ff2+2)^0,c
  3092   0017A8  0E42               	movlw	66
  3093   0017AA  6E08               	movwf	(___flge@ff2+3)^0,c
  3094   0017AC  EC52  F022         	call	___flge	;wreg free
  3095   0017B0  B0D8               	btfsc	status,0,c
  3096   0017B2  EFDD  F00B         	goto	u4351
  3097   0017B6  EFDF  F00B         	goto	u4350
  3098   0017BA                     u4351:
  3099   0017BA  EF18  F00C         	goto	l99
  3100   0017BE                     u4350:
  3101   0017BE  0E00               	movlw	0
  3102   0017C0  6E01               	movwf	___flge@ff1^0,c
  3103   0017C2  0E00               	movlw	0
  3104   0017C4  6E02               	movwf	(___flge@ff1+1)^0,c
  3105   0017C6  0E34               	movlw	52
  3106   0017C8  6E03               	movwf	(___flge@ff1+2)^0,c
  3107   0017CA  0E42               	movlw	66
  3108   0017CC  6E04               	movwf	(___flge@ff1+3)^0,c
  3109   0017CE  C0DB  F005         	movff	color_cardCheck@V,___flge@ff2
  3110   0017D2  C0DC  F006         	movff	color_cardCheck@V+1,___flge@ff2+1
  3111   0017D6  C0DD  F007         	movff	color_cardCheck@V+2,___flge@ff2+2
  3112   0017DA  C0DE  F008         	movff	color_cardCheck@V+3,___flge@ff2+3
  3113   0017DE  EC52  F022         	call	___flge	;wreg free
  3114   0017E2  B0D8               	btfsc	status,0,c
  3115   0017E4  EFF6  F00B         	goto	u4361
  3116   0017E8  EFF8  F00B         	goto	u4360
  3117   0017EC                     u4361:
  3118   0017EC  EF18  F00C         	goto	l99
  3119   0017F0                     u4360:
  3120   0017F0  C0DB  F001         	movff	color_cardCheck@V,___flge@ff1
  3121   0017F4  C0DC  F002         	movff	color_cardCheck@V+1,___flge@ff1+1
  3122   0017F8  C0DD  F003         	movff	color_cardCheck@V+2,___flge@ff1+2
  3123   0017FC  C0DE  F004         	movff	color_cardCheck@V+3,___flge@ff1+3
  3124   001800  0E00               	movlw	0
  3125   001802  6E05               	movwf	___flge@ff2^0,c
  3126   001804  0E00               	movlw	0
  3127   001806  6E06               	movwf	(___flge@ff2+1)^0,c
  3128   001808  0E48               	movlw	72
  3129   00180A  6E07               	movwf	(___flge@ff2+2)^0,c
  3130   00180C  0E42               	movlw	66
  3131   00180E  6E08               	movwf	(___flge@ff2+3)^0,c
  3132   001810  EC52  F022         	call	___flge	;wreg free
  3133   001814  B0D8               	btfsc	status,0,c
  3134   001816  EF0F  F00C         	goto	u4371
  3135   00181A  EF11  F00C         	goto	u4370
  3136   00181E                     u4371:
  3137   00181E  EF18  F00C         	goto	l99
  3138   001822                     u4370:
  3139   001822  0E00               	movlw	0
  3140   001824  0100               	movlb	0	; () banked
  3141   001826  6FD2               	movwf	(color_cardCheck@card_color+1)& (0+255),b
  3142   001828  0E08               	movlw	8
  3143   00182A  6FD1               	movwf	color_cardCheck@card_color& (0+255),b
  3144   00182C  EF18  F00C         	goto	l3942
  3145   001830                     l99:
  3146   001830                     l3942:
  3147                           
  3148                           ;color.c: 222:     return card_color;
  3149   001830  C0D1  F05C         	movff	color_cardCheck@card_color,?_color_cardCheck
  3150   001834  C0D2  F05D         	movff	color_cardCheck@card_color+1,?_color_cardCheck+1
  3151   001838  0012               	return		;funcret
  3152   00183A                     __end_of_color_cardCheck:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _color_read_Red *****************
  3156 ;; Defined at:
  3157 ;;		line 46 in file "color.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  tmp             2    9[COMRAM] unsigned int 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  2    4[COMRAM] unsigned int 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3173 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;Total ram usage:        7 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 2
  3178 ;; This function calls:
  3179 ;;		_I2C_2_Master_Read
  3180 ;;		_I2C_2_Master_RepStart
  3181 ;;		_I2C_2_Master_Start
  3182 ;;		_I2C_2_Master_Stop
  3183 ;;		_I2C_2_Master_Write
  3184 ;; This function is called by:
  3185 ;;		_color_cardCheck
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text7
  3190   004A06                     __ptext7:
  3191                           	callstack 0
  3192   004A06                     _color_read_Red:
  3193                           	callstack 26
  3194   004A06                     
  3195                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  3196   004A06  EC90  F026         	call	_I2C_2_Master_Start	;wreg free
  3197                           
  3198                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  3199   004A0A  0E52               	movlw	82
  3200   004A0C  EC85  F026         	call	_I2C_2_Master_Write
  3201                           
  3202                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x16);
  3203   004A10  0EB6               	movlw	182
  3204   004A12  EC85  F026         	call	_I2C_2_Master_Write
  3205                           
  3206                           ;color.c: 52:  I2C_2_Master_RepStart();
  3207   004A16  EC95  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3208                           
  3209                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  3210   004A1A  0E53               	movlw	83
  3211   004A1C  EC85  F026         	call	_I2C_2_Master_Write
  3212                           
  3213                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  3214   004A20  0E01               	movlw	1
  3215   004A22  ECC6  F025         	call	_I2C_2_Master_Read
  3216   004A26  6E07               	movwf	??_color_read_Red^0,c
  3217   004A28  5007               	movf	??_color_read_Red^0,w,c
  3218   004A2A  6E0A               	movwf	color_read_Red@tmp^0,c
  3219   004A2C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3220                           
  3221                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3222   004A2E  0E00               	movlw	0
  3223   004A30  ECC6  F025         	call	_I2C_2_Master_Read
  3224   004A34  6E07               	movwf	??_color_read_Red^0,c
  3225   004A36  5007               	movf	??_color_read_Red^0,w,c
  3226   004A38  6E09               	movwf	(??_color_read_Red+2)^0,c
  3227   004A3A  6A08               	clrf	(??_color_read_Red+1)^0,c
  3228   004A3C  500A               	movf	color_read_Red@tmp^0,w,c
  3229   004A3E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3230   004A40  6E0A               	movwf	color_read_Red@tmp^0,c
  3231   004A42  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3232   004A44  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3233   004A46  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3234                           
  3235                           ;color.c: 56:  I2C_2_Master_Stop();
  3236   004A48  EC8B  F026         	call	_I2C_2_Master_Stop	;wreg free
  3237   004A4C                     
  3238                           ;color.c: 57:  return tmp;
  3239   004A4C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3240   004A50  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3241   004A54  0012               	return		;funcret
  3242   004A56                     __end_of_color_read_Red:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _color_read_Green *****************
  3246 ;; Defined at:
  3247 ;;		line 60 in file "color.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  tmp             2    9[COMRAM] unsigned int 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    4[COMRAM] unsigned int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;Total ram usage:        7 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 2
  3268 ;; This function calls:
  3269 ;;		_I2C_2_Master_Read
  3270 ;;		_I2C_2_Master_RepStart
  3271 ;;		_I2C_2_Master_Start
  3272 ;;		_I2C_2_Master_Stop
  3273 ;;		_I2C_2_Master_Write
  3274 ;; This function is called by:
  3275 ;;		_color_cardCheck
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text8
  3280   004A56                     __ptext8:
  3281                           	callstack 0
  3282   004A56                     _color_read_Green:
  3283                           	callstack 26
  3284   004A56                     
  3285                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  3286   004A56  EC90  F026         	call	_I2C_2_Master_Start	;wreg free
  3287                           
  3288                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  3289   004A5A  0E52               	movlw	82
  3290   004A5C  EC85  F026         	call	_I2C_2_Master_Write
  3291                           
  3292                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  3293   004A60  0EB8               	movlw	184
  3294   004A62  EC85  F026         	call	_I2C_2_Master_Write
  3295                           
  3296                           ;color.c: 66:  I2C_2_Master_RepStart();
  3297   004A66  EC95  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3298                           
  3299                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  3300   004A6A  0E53               	movlw	83
  3301   004A6C  EC85  F026         	call	_I2C_2_Master_Write
  3302                           
  3303                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  3304   004A70  0E01               	movlw	1
  3305   004A72  ECC6  F025         	call	_I2C_2_Master_Read
  3306   004A76  6E07               	movwf	??_color_read_Green^0,c
  3307   004A78  5007               	movf	??_color_read_Green^0,w,c
  3308   004A7A  6E0A               	movwf	color_read_Green@tmp^0,c
  3309   004A7C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3310                           
  3311                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3312   004A7E  0E00               	movlw	0
  3313   004A80  ECC6  F025         	call	_I2C_2_Master_Read
  3314   004A84  6E07               	movwf	??_color_read_Green^0,c
  3315   004A86  5007               	movf	??_color_read_Green^0,w,c
  3316   004A88  6E09               	movwf	(??_color_read_Green+2)^0,c
  3317   004A8A  6A08               	clrf	(??_color_read_Green+1)^0,c
  3318   004A8C  500A               	movf	color_read_Green@tmp^0,w,c
  3319   004A8E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3320   004A90  6E0A               	movwf	color_read_Green@tmp^0,c
  3321   004A92  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3322   004A94  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3323   004A96  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3324                           
  3325                           ;color.c: 70:  I2C_2_Master_Stop();
  3326   004A98  EC8B  F026         	call	_I2C_2_Master_Stop	;wreg free
  3327   004A9C                     
  3328                           ;color.c: 71:  return tmp;
  3329   004A9C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3330   004AA0  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3331   004AA4  0012               	return		;funcret
  3332   004AA6                     __end_of_color_read_Green:
  3333                           	callstack 0
  3334                           
  3335 ;; *************** function _color_read_Clear *****************
  3336 ;; Defined at:
  3337 ;;		line 88 in file "color.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  tmp             2    9[COMRAM] unsigned int 
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  2    4[COMRAM] unsigned int 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;Total ram usage:        7 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 2
  3358 ;; This function calls:
  3359 ;;		_I2C_2_Master_Read
  3360 ;;		_I2C_2_Master_RepStart
  3361 ;;		_I2C_2_Master_Start
  3362 ;;		_I2C_2_Master_Stop
  3363 ;;		_I2C_2_Master_Write
  3364 ;; This function is called by:
  3365 ;;		_color_cardCheck
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text9
  3370   004AA6                     __ptext9:
  3371                           	callstack 0
  3372   004AA6                     _color_read_Clear:
  3373                           	callstack 26
  3374   004AA6                     
  3375                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  3376   004AA6  EC90  F026         	call	_I2C_2_Master_Start	;wreg free
  3377                           
  3378                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  3379   004AAA  0E52               	movlw	82
  3380   004AAC  EC85  F026         	call	_I2C_2_Master_Write
  3381                           
  3382                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x14);
  3383   004AB0  0EB4               	movlw	180
  3384   004AB2  EC85  F026         	call	_I2C_2_Master_Write
  3385                           
  3386                           ;color.c: 96:  I2C_2_Master_RepStart();
  3387   004AB6  EC95  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3388                           
  3389                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  3390   004ABA  0E53               	movlw	83
  3391   004ABC  EC85  F026         	call	_I2C_2_Master_Write
  3392                           
  3393                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  3394   004AC0  0E01               	movlw	1
  3395   004AC2  ECC6  F025         	call	_I2C_2_Master_Read
  3396   004AC6  6E07               	movwf	??_color_read_Clear^0,c
  3397   004AC8  5007               	movf	??_color_read_Clear^0,w,c
  3398   004ACA  6E0A               	movwf	color_read_Clear@tmp^0,c
  3399   004ACC  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3400                           
  3401                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3402   004ACE  0E00               	movlw	0
  3403   004AD0  ECC6  F025         	call	_I2C_2_Master_Read
  3404   004AD4  6E07               	movwf	??_color_read_Clear^0,c
  3405   004AD6  5007               	movf	??_color_read_Clear^0,w,c
  3406   004AD8  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3407   004ADA  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3408   004ADC  500A               	movf	color_read_Clear@tmp^0,w,c
  3409   004ADE  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3410   004AE0  6E0A               	movwf	color_read_Clear@tmp^0,c
  3411   004AE2  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3412   004AE4  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3413   004AE6  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3414                           
  3415                           ;color.c: 100:  I2C_2_Master_Stop();
  3416   004AE8  EC8B  F026         	call	_I2C_2_Master_Stop	;wreg free
  3417   004AEC                     
  3418                           ;color.c: 101:  return tmp;
  3419   004AEC  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3420   004AF0  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3421   004AF4  0012               	return		;funcret
  3422   004AF6                     __end_of_color_read_Clear:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _color_read_Blue *****************
  3426 ;; Defined at:
  3427 ;;		line 74 in file "color.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  tmp             2    9[COMRAM] unsigned int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2    4[COMRAM] unsigned int 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:        7 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 2
  3448 ;; This function calls:
  3449 ;;		_I2C_2_Master_Read
  3450 ;;		_I2C_2_Master_RepStart
  3451 ;;		_I2C_2_Master_Start
  3452 ;;		_I2C_2_Master_Stop
  3453 ;;		_I2C_2_Master_Write
  3454 ;; This function is called by:
  3455 ;;		_color_cardCheck
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text10
  3460   004AF6                     __ptext10:
  3461                           	callstack 0
  3462   004AF6                     _color_read_Blue:
  3463                           	callstack 26
  3464   004AF6                     
  3465                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  3466   004AF6  EC90  F026         	call	_I2C_2_Master_Start	;wreg free
  3467                           
  3468                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  3469   004AFA  0E52               	movlw	82
  3470   004AFC  EC85  F026         	call	_I2C_2_Master_Write
  3471                           
  3472                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x1A);
  3473   004B00  0EBA               	movlw	186
  3474   004B02  EC85  F026         	call	_I2C_2_Master_Write
  3475                           
  3476                           ;color.c: 80:  I2C_2_Master_RepStart();
  3477   004B06  EC95  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3478                           
  3479                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  3480   004B0A  0E53               	movlw	83
  3481   004B0C  EC85  F026         	call	_I2C_2_Master_Write
  3482                           
  3483                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  3484   004B10  0E01               	movlw	1
  3485   004B12  ECC6  F025         	call	_I2C_2_Master_Read
  3486   004B16  6E07               	movwf	??_color_read_Blue^0,c
  3487   004B18  5007               	movf	??_color_read_Blue^0,w,c
  3488   004B1A  6E0A               	movwf	color_read_Blue@tmp^0,c
  3489   004B1C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3490                           
  3491                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3492   004B1E  0E00               	movlw	0
  3493   004B20  ECC6  F025         	call	_I2C_2_Master_Read
  3494   004B24  6E07               	movwf	??_color_read_Blue^0,c
  3495   004B26  5007               	movf	??_color_read_Blue^0,w,c
  3496   004B28  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3497   004B2A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3498   004B2C  500A               	movf	color_read_Blue@tmp^0,w,c
  3499   004B2E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3500   004B30  6E0A               	movwf	color_read_Blue@tmp^0,c
  3501   004B32  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3502   004B34  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3503   004B36  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3504                           
  3505                           ;color.c: 84:  I2C_2_Master_Stop();
  3506   004B38  EC8B  F026         	call	_I2C_2_Master_Stop	;wreg free
  3507   004B3C                     
  3508                           ;color.c: 85:  return tmp;
  3509   004B3C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3510   004B40  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3511   004B44  0012               	return		;funcret
  3512   004B46                     __end_of_color_read_Blue:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _I2C_2_Master_Write *****************
  3516 ;; Defined at:
  3517 ;;		line 45 in file "i2c.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  data_byte       1    wreg     unsigned char 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  data_byte       1    1[COMRAM] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;Total ram usage:        1 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; Hardware stack levels required when called: 1
  3538 ;; This function calls:
  3539 ;;		_I2C_2_Master_Idle
  3540 ;; This function is called by:
  3541 ;;		_color_writetoaddr
  3542 ;;		_color_read_Red
  3543 ;;		_color_read_Green
  3544 ;;		_color_read_Blue
  3545 ;;		_color_read_Clear
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text11
  3550   004D0A                     __ptext11:
  3551                           	callstack 0
  3552   004D0A                     _I2C_2_Master_Write:
  3553                           	callstack 26
  3554                           
  3555                           ;incstack = 0
  3556                           ;I2C_2_Master_Write@data_byte stored from wreg
  3557   004D0A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3558   004D0C                     
  3559                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3560   004D0C  EC4E  F026         	call	_I2C_2_Master_Idle	;wreg free
  3561   004D10                     
  3562                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3563   004D10  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3564   004D14  0012               	return		;funcret
  3565   004D16                     __end_of_I2C_2_Master_Write:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _I2C_2_Master_Stop *****************
  3569 ;; Defined at:
  3570 ;;		line 39 in file "i2c.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 1
  3591 ;; This function calls:
  3592 ;;		_I2C_2_Master_Idle
  3593 ;; This function is called by:
  3594 ;;		_color_writetoaddr
  3595 ;;		_color_read_Red
  3596 ;;		_color_read_Green
  3597 ;;		_color_read_Blue
  3598 ;;		_color_read_Clear
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text12
  3603   004D16                     __ptext12:
  3604                           	callstack 0
  3605   004D16                     _I2C_2_Master_Stop:
  3606                           	callstack 26
  3607   004D16                     
  3608                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3609   004D16  EC4E  F026         	call	_I2C_2_Master_Idle	;wreg free
  3610   004D1A                     
  3611                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3612   004D1A  010E               	movlb	14	; () banked
  3613   004D1C  85DA               	bsf	218,2,b	;volatile
  3614   004D1E                     
  3615                           ; BSR set to: 14
  3616   004D1E  0012               	return		;funcret
  3617   004D20                     __end_of_I2C_2_Master_Stop:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _I2C_2_Master_Start *****************
  3621 ;; Defined at:
  3622 ;;		line 27 in file "i2c.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		_I2C_2_Master_Idle
  3645 ;; This function is called by:
  3646 ;;		_color_writetoaddr
  3647 ;;		_color_read_Red
  3648 ;;		_color_read_Green
  3649 ;;		_color_read_Blue
  3650 ;;		_color_read_Clear
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text13
  3655   004D20                     __ptext13:
  3656                           	callstack 0
  3657   004D20                     _I2C_2_Master_Start:
  3658                           	callstack 26
  3659   004D20                     
  3660                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3661   004D20  EC4E  F026         	call	_I2C_2_Master_Idle	;wreg free
  3662   004D24                     
  3663                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3664   004D24  010E               	movlb	14	; () banked
  3665   004D26  81DA               	bsf	218,0,b	;volatile
  3666   004D28                     
  3667                           ; BSR set to: 14
  3668   004D28  0012               	return		;funcret
  3669   004D2A                     __end_of_I2C_2_Master_Start:
  3670                           	callstack 0
  3671                           
  3672 ;; *************** function _I2C_2_Master_RepStart *****************
  3673 ;; Defined at:
  3674 ;;		line 33 in file "i2c.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 1
  3695 ;; This function calls:
  3696 ;;		_I2C_2_Master_Idle
  3697 ;; This function is called by:
  3698 ;;		_color_read_Red
  3699 ;;		_color_read_Green
  3700 ;;		_color_read_Blue
  3701 ;;		_color_read_Clear
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text14
  3706   004D2A                     __ptext14:
  3707                           	callstack 0
  3708   004D2A                     _I2C_2_Master_RepStart:
  3709                           	callstack 26
  3710   004D2A                     
  3711                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3712   004D2A  EC4E  F026         	call	_I2C_2_Master_Idle	;wreg free
  3713   004D2E                     
  3714                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3715   004D2E  010E               	movlb	14	; () banked
  3716   004D30  83DA               	bsf	218,1,b	;volatile
  3717   004D32                     
  3718                           ; BSR set to: 14
  3719   004D32  0012               	return		;funcret
  3720   004D34                     __end_of_I2C_2_Master_RepStart:
  3721                           	callstack 0
  3722                           
  3723 ;; *************** function _I2C_2_Master_Read *****************
  3724 ;; Defined at:
  3725 ;;		line 51 in file "i2c.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  ack             1    wreg     unsigned char 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  ack             1    2[COMRAM] unsigned char 
  3730 ;;  tmp             1    3[COMRAM] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      unsigned char 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;Total ram usage:        3 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 1
  3747 ;; This function calls:
  3748 ;;		_I2C_2_Master_Idle
  3749 ;; This function is called by:
  3750 ;;		_color_read_Red
  3751 ;;		_color_read_Green
  3752 ;;		_color_read_Blue
  3753 ;;		_color_read_Clear
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text15
  3758   004B8C                     __ptext15:
  3759                           	callstack 0
  3760   004B8C                     _I2C_2_Master_Read:
  3761                           	callstack 26
  3762                           
  3763                           ; BSR set to: 14
  3764                           ;incstack = 0
  3765                           ;I2C_2_Master_Read@ack stored from wreg
  3766   004B8C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3767   004B8E                     
  3768                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3769   004B8E  EC4E  F026         	call	_I2C_2_Master_Idle	;wreg free
  3770   004B92                     
  3771                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3772   004B92  010E               	movlb	14	; () banked
  3773   004B94  87DA               	bsf	218,3,b	;volatile
  3774                           
  3775                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3776   004B96  EC4E  F026         	call	_I2C_2_Master_Idle	;wreg free
  3777   004B9A                     
  3778                           ;i2c.c: 57:   tmp = SSP2BUF;
  3779   004B9A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3780                           
  3781                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3782   004B9E  EC4E  F026         	call	_I2C_2_Master_Idle	;wreg free
  3783   004BA2                     
  3784                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3785   004BA2  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3786   004BA4  B4D8               	btfsc	status,2,c
  3787   004BA6  EFD7  F025         	goto	u3611
  3788   004BAA  EFDB  F025         	goto	u3610
  3789   004BAE                     u3611:
  3790   004BAE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3791   004BB0  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3792   004BB2  EFDC  F025         	goto	u3628
  3793   004BB6                     u3610:
  3794   004BB6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3795   004BB8                     u3628:
  3796   004BB8  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3797   004BBA  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3798   004BBC  010E               	movlb	14	; () banked
  3799   004BBE  51DA               	movf	218,w,b	;volatile
  3800   004BC0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3801   004BC2  0BDF               	andlw	-33
  3802   004BC4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3803   004BC6  6FDA               	movwf	218,b	;volatile
  3804   004BC8                     
  3805                           ; BSR set to: 14
  3806                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3807   004BC8  89DA               	bsf	218,4,b	;volatile
  3808   004BCA                     
  3809                           ; BSR set to: 14
  3810                           ;i2c.c: 61:   return tmp;
  3811   004BCA  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3812   004BCC                     
  3813                           ; BSR set to: 14
  3814   004BCC  0012               	return		;funcret
  3815   004BCE                     __end_of_I2C_2_Master_Read:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function _I2C_2_Master_Idle *****************
  3819 ;; Defined at:
  3820 ;;		line 22 in file "i2c.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;Total ram usage:        1 bytes
  3839 ;; Hardware stack levels used: 1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_I2C_2_Master_Start
  3844 ;;		_I2C_2_Master_RepStart
  3845 ;;		_I2C_2_Master_Stop
  3846 ;;		_I2C_2_Master_Write
  3847 ;;		_I2C_2_Master_Read
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text16
  3852   004C9C                     __ptext16:
  3853                           	callstack 0
  3854   004C9C                     _I2C_2_Master_Idle:
  3855                           	callstack 26
  3856   004C9C                     l408:
  3857   004C9C  010E               	movlb	14	; () banked
  3858   004C9E  B5D8               	btfsc	216,2,b	;volatile
  3859   004CA0  EF54  F026         	goto	u2971
  3860   004CA4  EF56  F026         	goto	u2970
  3861   004CA8                     u2971:
  3862   004CA8  EF4E  F026         	goto	l408
  3863   004CAC                     u2970:
  3864   004CAC                     
  3865                           ; BSR set to: 14
  3866   004CAC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3867   004CB0  0E1F               	movlw	31
  3868   004CB2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3869   004CB4  A4D8               	btfss	status,2,c
  3870   004CB6  EF5F  F026         	goto	u2981
  3871   004CBA  EF61  F026         	goto	u2980
  3872   004CBE                     u2981:
  3873   004CBE  EF4E  F026         	goto	l408
  3874   004CC2                     u2980:
  3875   004CC2                     
  3876                           ; BSR set to: 14
  3877   004CC2  0012               	return		;funcret
  3878   004CC4                     __end_of_I2C_2_Master_Idle:
  3879                           	callstack 0
  3880                           
  3881 ;; *************** function _RGB_to_HSV *****************
  3882 ;; Defined at:
  3883 ;;		line 125 in file "color.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  R               4   10[BANK0 ] float 
  3886 ;;  G               4   14[BANK0 ] float 
  3887 ;;  B               4   18[BANK0 ] float 
  3888 ;;  C               4   22[BANK0 ] float 
  3889 ;;  H               1   26[BANK0 ] PTR float 
  3890 ;;		 -> color_cardCheck@H(4), 
  3891 ;;  S               1   27[BANK0 ] PTR float 
  3892 ;;		 -> color_cardCheck@S(4), 
  3893 ;;  V               1   28[BANK0 ] PTR float 
  3894 ;;		 -> color_cardCheck@V(4), 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  b               4   93[BANK0 ] float 
  3897 ;;  g               4   89[BANK0 ] float 
  3898 ;;  r               4   85[BANK0 ] float 
  3899 ;;  maxRGB          4   81[BANK0 ] float 
  3900 ;;  deltaRGB        4   77[BANK0 ] float 
  3901 ;;  H_temp          4   73[BANK0 ] float 
  3902 ;;  minRGB          4   57[BANK0 ] float 
  3903 ;;  c_norm          4   29[BANK0 ] float 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3913 ;;      Params:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Totals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;Total ram usage:       87 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 3
  3920 ;; This function calls:
  3921 ;;		___fladd
  3922 ;;		___fldiv
  3923 ;;		___fleq
  3924 ;;		___flge
  3925 ;;		___flmul
  3926 ;;		___flsub
  3927 ;;		_custom_floatmodulo
  3928 ;; This function is called by:
  3929 ;;		_color_cardCheck
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text17
  3934   00183A                     __ptext17:
  3935                           	callstack 0
  3936   00183A                     _RGB_to_HSV:
  3937                           	callstack 25
  3938   00183A                     
  3939                           ;color.c: 128:     float r = R/65535.0;
  3940   00183A  C06A  F022         	movff	RGB_to_HSV@R,___fldiv@b
  3941   00183E  C06B  F023         	movff	RGB_to_HSV@R+1,___fldiv@b+1
  3942   001842  C06C  F024         	movff	RGB_to_HSV@R+2,___fldiv@b+2
  3943   001846  C06D  F025         	movff	RGB_to_HSV@R+3,___fldiv@b+3
  3944   00184A  0E00               	movlw	0
  3945   00184C  6E26               	movwf	___fldiv@a^0,c
  3946   00184E  0EFF               	movlw	255
  3947   001850  6E27               	movwf	(___fldiv@a+1)^0,c
  3948   001852  0E7F               	movlw	127
  3949   001854  6E28               	movwf	(___fldiv@a+2)^0,c
  3950   001856  0E47               	movlw	71
  3951   001858  6E29               	movwf	(___fldiv@a+3)^0,c
  3952   00185A  ECF8  F018         	call	___fldiv	;wreg free
  3953   00185E  C022  F0B5         	movff	?___fldiv,RGB_to_HSV@r
  3954   001862  C023  F0B6         	movff	?___fldiv+1,RGB_to_HSV@r+1
  3955   001866  C024  F0B7         	movff	?___fldiv+2,RGB_to_HSV@r+2
  3956   00186A  C025  F0B8         	movff	?___fldiv+3,RGB_to_HSV@r+3
  3957                           
  3958                           ;color.c: 129:     float g = G/65535.0;
  3959   00186E  C06E  F022         	movff	RGB_to_HSV@G,___fldiv@b
  3960   001872  C06F  F023         	movff	RGB_to_HSV@G+1,___fldiv@b+1
  3961   001876  C070  F024         	movff	RGB_to_HSV@G+2,___fldiv@b+2
  3962   00187A  C071  F025         	movff	RGB_to_HSV@G+3,___fldiv@b+3
  3963   00187E  0E00               	movlw	0
  3964   001880  6E26               	movwf	___fldiv@a^0,c
  3965   001882  0EFF               	movlw	255
  3966   001884  6E27               	movwf	(___fldiv@a+1)^0,c
  3967   001886  0E7F               	movlw	127
  3968   001888  6E28               	movwf	(___fldiv@a+2)^0,c
  3969   00188A  0E47               	movlw	71
  3970   00188C  6E29               	movwf	(___fldiv@a+3)^0,c
  3971   00188E  ECF8  F018         	call	___fldiv	;wreg free
  3972   001892  C022  F0B9         	movff	?___fldiv,RGB_to_HSV@g
  3973   001896  C023  F0BA         	movff	?___fldiv+1,RGB_to_HSV@g+1
  3974   00189A  C024  F0BB         	movff	?___fldiv+2,RGB_to_HSV@g+2
  3975   00189E  C025  F0BC         	movff	?___fldiv+3,RGB_to_HSV@g+3
  3976                           
  3977                           ;color.c: 130:     float b = B/65535.0;
  3978   0018A2  C072  F022         	movff	RGB_to_HSV@B,___fldiv@b
  3979   0018A6  C073  F023         	movff	RGB_to_HSV@B+1,___fldiv@b+1
  3980   0018AA  C074  F024         	movff	RGB_to_HSV@B+2,___fldiv@b+2
  3981   0018AE  C075  F025         	movff	RGB_to_HSV@B+3,___fldiv@b+3
  3982   0018B2  0E00               	movlw	0
  3983   0018B4  6E26               	movwf	___fldiv@a^0,c
  3984   0018B6  0EFF               	movlw	255
  3985   0018B8  6E27               	movwf	(___fldiv@a+1)^0,c
  3986   0018BA  0E7F               	movlw	127
  3987   0018BC  6E28               	movwf	(___fldiv@a+2)^0,c
  3988   0018BE  0E47               	movlw	71
  3989   0018C0  6E29               	movwf	(___fldiv@a+3)^0,c
  3990   0018C2  ECF8  F018         	call	___fldiv	;wreg free
  3991   0018C6  C022  F0BD         	movff	?___fldiv,RGB_to_HSV@b
  3992   0018CA  C023  F0BE         	movff	?___fldiv+1,RGB_to_HSV@b+1
  3993   0018CE  C024  F0BF         	movff	?___fldiv+2,RGB_to_HSV@b+2
  3994   0018D2  C025  F0C0         	movff	?___fldiv+3,RGB_to_HSV@b+3
  3995                           
  3996                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  3997   0018D6  0E00               	movlw	0
  3998   0018D8  6E26               	movwf	___fldiv@a^0,c
  3999   0018DA  0EFF               	movlw	255
  4000   0018DC  6E27               	movwf	(___fldiv@a+1)^0,c
  4001   0018DE  0E7F               	movlw	127
  4002   0018E0  6E28               	movwf	(___fldiv@a+2)^0,c
  4003   0018E2  0E47               	movlw	71
  4004   0018E4  6E29               	movwf	(___fldiv@a+3)^0,c
  4005   0018E6  C076  F022         	movff	RGB_to_HSV@C,___fldiv@b
  4006   0018EA  C077  F023         	movff	RGB_to_HSV@C+1,___fldiv@b+1
  4007   0018EE  C078  F024         	movff	RGB_to_HSV@C+2,___fldiv@b+2
  4008   0018F2  C079  F025         	movff	RGB_to_HSV@C+3,___fldiv@b+3
  4009   0018F6  ECF8  F018         	call	___fldiv	;wreg free
  4010   0018FA  C022  F081         	movff	?___fldiv,_RGB_to_HSV$2717
  4011   0018FE  C023  F082         	movff	?___fldiv+1,_RGB_to_HSV$2717+1
  4012   001902  C024  F083         	movff	?___fldiv+2,_RGB_to_HSV$2717+2
  4013   001906  C025  F084         	movff	?___fldiv+3,_RGB_to_HSV$2717+3
  4014                           
  4015                           ;color.c: 135:     float c_norm = 1.0 /(C/65535.0);
  4016   00190A  0E00               	movlw	0
  4017   00190C  6E22               	movwf	___fldiv@b^0,c
  4018   00190E  0E00               	movlw	0
  4019   001910  6E23               	movwf	(___fldiv@b+1)^0,c
  4020   001912  0E80               	movlw	128
  4021   001914  6E24               	movwf	(___fldiv@b+2)^0,c
  4022   001916  0E3F               	movlw	63
  4023   001918  6E25               	movwf	(___fldiv@b+3)^0,c
  4024   00191A  C081  F026         	movff	_RGB_to_HSV$2717,___fldiv@a
  4025   00191E  C082  F027         	movff	_RGB_to_HSV$2717+1,___fldiv@a+1
  4026   001922  C083  F028         	movff	_RGB_to_HSV$2717+2,___fldiv@a+2
  4027   001926  C084  F029         	movff	_RGB_to_HSV$2717+3,___fldiv@a+3
  4028   00192A  ECF8  F018         	call	___fldiv	;wreg free
  4029   00192E  C022  F07D         	movff	?___fldiv,RGB_to_HSV@c_norm
  4030   001932  C023  F07E         	movff	?___fldiv+1,RGB_to_HSV@c_norm+1
  4031   001936  C024  F07F         	movff	?___fldiv+2,RGB_to_HSV@c_norm+2
  4032   00193A  C025  F080         	movff	?___fldiv+3,RGB_to_HSV@c_norm+3
  4033                           
  4034                           ;color.c: 138:     float maxRGB = (r > g) ? ((r > b) ? r : b) : ((g > b) ? g : b);
  4035   00193E  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4036   001942  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4037   001946  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4038   00194A  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4039   00194E  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4040   001952  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4041   001956  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4042   00195A  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4043   00195E  EC52  F022         	call	___flge	;wreg free
  4044   001962  A0D8               	btfss	status,0,c
  4045   001964  EFB6  F00C         	goto	u3721
  4046   001968  EFB8  F00C         	goto	u3720
  4047   00196C                     u3721:
  4048   00196C  EFED  F00C         	goto	l3688
  4049   001970                     u3720:
  4050   001970  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4051   001974  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4052   001978  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4053   00197C  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4054   001980  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4055   001984  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4056   001988  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4057   00198C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4058   001990  EC52  F022         	call	___flge	;wreg free
  4059   001994  A0D8               	btfss	status,0,c
  4060   001996  EFCF  F00C         	goto	u3731
  4061   00199A  EFD1  F00C         	goto	u3730
  4062   00199E                     u3731:
  4063   00199E  EFDB  F00C         	goto	l58
  4064   0019A2                     u3730:
  4065   0019A2  C0BD  F091         	movff	RGB_to_HSV@b,_RGB_to_HSV$318
  4066   0019A6  C0BE  F092         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$318+1
  4067   0019AA  C0BF  F093         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$318+2
  4068   0019AE  C0C0  F094         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$318+3
  4069   0019B2  EFE3  F00C         	goto	l60
  4070   0019B6                     l58:
  4071   0019B6  C0B9  F091         	movff	RGB_to_HSV@g,_RGB_to_HSV$318
  4072   0019BA  C0BA  F092         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$318+1
  4073   0019BE  C0BB  F093         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$318+2
  4074   0019C2  C0BC  F094         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$318+3
  4075   0019C6                     l60:
  4076   0019C6  C091  F0B1         	movff	_RGB_to_HSV$318,RGB_to_HSV@maxRGB
  4077   0019CA  C092  F0B2         	movff	_RGB_to_HSV$318+1,RGB_to_HSV@maxRGB+1
  4078   0019CE  C093  F0B3         	movff	_RGB_to_HSV$318+2,RGB_to_HSV@maxRGB+2
  4079   0019D2  C094  F0B4         	movff	_RGB_to_HSV$318+3,RGB_to_HSV@maxRGB+3
  4080   0019D6  EF20  F00D         	goto	l3692
  4081   0019DA                     l3688:
  4082   0019DA  C0BD  F001         	movff	RGB_to_HSV@b,___flge@ff1
  4083   0019DE  C0BE  F002         	movff	RGB_to_HSV@b+1,___flge@ff1+1
  4084   0019E2  C0BF  F003         	movff	RGB_to_HSV@b+2,___flge@ff1+2
  4085   0019E6  C0C0  F004         	movff	RGB_to_HSV@b+3,___flge@ff1+3
  4086   0019EA  C0B5  F005         	movff	RGB_to_HSV@r,___flge@ff2
  4087   0019EE  C0B6  F006         	movff	RGB_to_HSV@r+1,___flge@ff2+1
  4088   0019F2  C0B7  F007         	movff	RGB_to_HSV@r+2,___flge@ff2+2
  4089   0019F6  C0B8  F008         	movff	RGB_to_HSV@r+3,___flge@ff2+3
  4090   0019FA  EC52  F022         	call	___flge	;wreg free
  4091   0019FE  A0D8               	btfss	status,0,c
  4092   001A00  EF04  F00D         	goto	u3741
  4093   001A04  EF06  F00D         	goto	u3740
  4094   001A08                     u3741:
  4095   001A08  EF10  F00D         	goto	l62
  4096   001A0C                     u3740:
  4097   001A0C  C0BD  F095         	movff	RGB_to_HSV@b,_RGB_to_HSV$319
  4098   001A10  C0BE  F096         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$319+1
  4099   001A14  C0BF  F097         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$319+2
  4100   001A18  C0C0  F098         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$319+3
  4101   001A1C  EF18  F00D         	goto	l64
  4102   001A20                     l62:
  4103   001A20  C0B5  F095         	movff	RGB_to_HSV@r,_RGB_to_HSV$319
  4104   001A24  C0B6  F096         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$319+1
  4105   001A28  C0B7  F097         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$319+2
  4106   001A2C  C0B8  F098         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$319+3
  4107   001A30                     l64:
  4108   001A30  C095  F0B1         	movff	_RGB_to_HSV$319,RGB_to_HSV@maxRGB
  4109   001A34  C096  F0B2         	movff	_RGB_to_HSV$319+1,RGB_to_HSV@maxRGB+1
  4110   001A38  C097  F0B3         	movff	_RGB_to_HSV$319+2,RGB_to_HSV@maxRGB+2
  4111   001A3C  C098  F0B4         	movff	_RGB_to_HSV$319+3,RGB_to_HSV@maxRGB+3
  4112   001A40                     l3692:
  4113                           
  4114                           ;color.c: 139:     float minRGB = (r < g) ? ((r < b) ? r : b) : ((g < b) ? g : b);
  4115   001A40  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4116   001A44  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4117   001A48  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4118   001A4C  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4119   001A50  C0B9  F005         	movff	RGB_to_HSV@g,___flge@ff2
  4120   001A54  C0BA  F006         	movff	RGB_to_HSV@g+1,___flge@ff2+1
  4121   001A58  C0BB  F007         	movff	RGB_to_HSV@g+2,___flge@ff2+2
  4122   001A5C  C0BC  F008         	movff	RGB_to_HSV@g+3,___flge@ff2+3
  4123   001A60  EC52  F022         	call	___flge	;wreg free
  4124   001A64  A0D8               	btfss	status,0,c
  4125   001A66  EF37  F00D         	goto	u3751
  4126   001A6A  EF39  F00D         	goto	u3750
  4127   001A6E                     u3751:
  4128   001A6E  EF6E  F00D         	goto	l3698
  4129   001A72                     u3750:
  4130   001A72  C0B9  F001         	movff	RGB_to_HSV@g,___flge@ff1
  4131   001A76  C0BA  F002         	movff	RGB_to_HSV@g+1,___flge@ff1+1
  4132   001A7A  C0BB  F003         	movff	RGB_to_HSV@g+2,___flge@ff1+2
  4133   001A7E  C0BC  F004         	movff	RGB_to_HSV@g+3,___flge@ff1+3
  4134   001A82  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4135   001A86  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4136   001A8A  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4137   001A8E  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4138   001A92  EC52  F022         	call	___flge	;wreg free
  4139   001A96  A0D8               	btfss	status,0,c
  4140   001A98  EF50  F00D         	goto	u3761
  4141   001A9C  EF52  F00D         	goto	u3760
  4142   001AA0                     u3761:
  4143   001AA0  EF5C  F00D         	goto	l70
  4144   001AA4                     u3760:
  4145   001AA4  C0BD  F09D         	movff	RGB_to_HSV@b,_RGB_to_HSV$321
  4146   001AA8  C0BE  F09E         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$321+1
  4147   001AAC  C0BF  F09F         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$321+2
  4148   001AB0  C0C0  F0A0         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$321+3
  4149   001AB4  EF64  F00D         	goto	l72
  4150   001AB8                     l70:
  4151   001AB8  C0B9  F09D         	movff	RGB_to_HSV@g,_RGB_to_HSV$321
  4152   001ABC  C0BA  F09E         	movff	RGB_to_HSV@g+1,_RGB_to_HSV$321+1
  4153   001AC0  C0BB  F09F         	movff	RGB_to_HSV@g+2,_RGB_to_HSV$321+2
  4154   001AC4  C0BC  F0A0         	movff	RGB_to_HSV@g+3,_RGB_to_HSV$321+3
  4155   001AC8                     l72:
  4156   001AC8  C09D  F099         	movff	_RGB_to_HSV$321,RGB_to_HSV@minRGB
  4157   001ACC  C09E  F09A         	movff	_RGB_to_HSV$321+1,RGB_to_HSV@minRGB+1
  4158   001AD0  C09F  F09B         	movff	_RGB_to_HSV$321+2,RGB_to_HSV@minRGB+2
  4159   001AD4  C0A0  F09C         	movff	_RGB_to_HSV$321+3,RGB_to_HSV@minRGB+3
  4160   001AD8  EFA1  F00D         	goto	l3702
  4161   001ADC                     l3698:
  4162   001ADC  C0B5  F001         	movff	RGB_to_HSV@r,___flge@ff1
  4163   001AE0  C0B6  F002         	movff	RGB_to_HSV@r+1,___flge@ff1+1
  4164   001AE4  C0B7  F003         	movff	RGB_to_HSV@r+2,___flge@ff1+2
  4165   001AE8  C0B8  F004         	movff	RGB_to_HSV@r+3,___flge@ff1+3
  4166   001AEC  C0BD  F005         	movff	RGB_to_HSV@b,___flge@ff2
  4167   001AF0  C0BE  F006         	movff	RGB_to_HSV@b+1,___flge@ff2+1
  4168   001AF4  C0BF  F007         	movff	RGB_to_HSV@b+2,___flge@ff2+2
  4169   001AF8  C0C0  F008         	movff	RGB_to_HSV@b+3,___flge@ff2+3
  4170   001AFC  EC52  F022         	call	___flge	;wreg free
  4171   001B00  A0D8               	btfss	status,0,c
  4172   001B02  EF85  F00D         	goto	u3771
  4173   001B06  EF87  F00D         	goto	u3770
  4174   001B0A                     u3771:
  4175   001B0A  EF91  F00D         	goto	l74
  4176   001B0E                     u3770:
  4177   001B0E  C0BD  F0A1         	movff	RGB_to_HSV@b,_RGB_to_HSV$322
  4178   001B12  C0BE  F0A2         	movff	RGB_to_HSV@b+1,_RGB_to_HSV$322+1
  4179   001B16  C0BF  F0A3         	movff	RGB_to_HSV@b+2,_RGB_to_HSV$322+2
  4180   001B1A  C0C0  F0A4         	movff	RGB_to_HSV@b+3,_RGB_to_HSV$322+3
  4181   001B1E  EF99  F00D         	goto	l76
  4182   001B22                     l74:
  4183   001B22  C0B5  F0A1         	movff	RGB_to_HSV@r,_RGB_to_HSV$322
  4184   001B26  C0B6  F0A2         	movff	RGB_to_HSV@r+1,_RGB_to_HSV$322+1
  4185   001B2A  C0B7  F0A3         	movff	RGB_to_HSV@r+2,_RGB_to_HSV$322+2
  4186   001B2E  C0B8  F0A4         	movff	RGB_to_HSV@r+3,_RGB_to_HSV$322+3
  4187   001B32                     l76:
  4188   001B32  C0A1  F099         	movff	_RGB_to_HSV$322,RGB_to_HSV@minRGB
  4189   001B36  C0A2  F09A         	movff	_RGB_to_HSV$322+1,RGB_to_HSV@minRGB+1
  4190   001B3A  C0A3  F09B         	movff	_RGB_to_HSV$322+2,RGB_to_HSV@minRGB+2
  4191   001B3E  C0A4  F09C         	movff	_RGB_to_HSV$322+3,RGB_to_HSV@minRGB+3
  4192   001B42                     l3702:
  4193                           
  4194                           ;color.c: 140:     float deltaRGB = maxRGB - minRGB;
  4195   001B42  C0B1  F01A         	movff	RGB_to_HSV@maxRGB,___flsub@b
  4196   001B46  C0B2  F01B         	movff	RGB_to_HSV@maxRGB+1,___flsub@b+1
  4197   001B4A  C0B3  F01C         	movff	RGB_to_HSV@maxRGB+2,___flsub@b+2
  4198   001B4E  C0B4  F01D         	movff	RGB_to_HSV@maxRGB+3,___flsub@b+3
  4199   001B52  C099  F01E         	movff	RGB_to_HSV@minRGB,___flsub@a
  4200   001B56  C09A  F01F         	movff	RGB_to_HSV@minRGB+1,___flsub@a+1
  4201   001B5A  C09B  F020         	movff	RGB_to_HSV@minRGB+2,___flsub@a+2
  4202   001B5E  C09C  F021         	movff	RGB_to_HSV@minRGB+3,___flsub@a+3
  4203   001B62  ECA3  F025         	call	___flsub	;wreg free
  4204   001B66  C01A  F0AD         	movff	?___flsub,RGB_to_HSV@deltaRGB
  4205   001B6A  C01B  F0AE         	movff	?___flsub+1,RGB_to_HSV@deltaRGB+1
  4206   001B6E  C01C  F0AF         	movff	?___flsub+2,RGB_to_HSV@deltaRGB+2
  4207   001B72  C01D  F0B0         	movff	?___flsub+3,RGB_to_HSV@deltaRGB+3
  4208                           
  4209                           ;color.c: 145:     float H_temp;;color.c: 147:     if (deltaRGB == 0) {H_temp = 0;}
  4210   001B76  C0AD  F001         	movff	RGB_to_HSV@deltaRGB,___fleq@ff1
  4211   001B7A  C0AE  F002         	movff	RGB_to_HSV@deltaRGB+1,___fleq@ff1+1
  4212   001B7E  C0AF  F003         	movff	RGB_to_HSV@deltaRGB+2,___fleq@ff1+2
  4213   001B82  C0B0  F004         	movff	RGB_to_HSV@deltaRGB+3,___fleq@ff1+3
  4214   001B86  0E00               	movlw	0
  4215   001B88  6E05               	movwf	___fleq@ff2^0,c
  4216   001B8A  0E00               	movlw	0
  4217   001B8C  6E06               	movwf	(___fleq@ff2+1)^0,c
  4218   001B8E  0E00               	movlw	0
  4219   001B90  6E07               	movwf	(___fleq@ff2+2)^0,c
  4220   001B92  0E00               	movlw	0
  4221   001B94  6E08               	movwf	(___fleq@ff2+3)^0,c
  4222   001B96  ECFB  F023         	call	___fleq	;wreg free
  4223   001B9A  A0D8               	btfss	status,0,c
  4224   001B9C  EFD2  F00D         	goto	u3781
  4225   001BA0  EFD4  F00D         	goto	u3780
  4226   001BA4                     u3781:
  4227   001BA4  EFDF  F00D         	goto	l3706
  4228   001BA8                     u3780:
  4229   001BA8  0E00               	movlw	0
  4230   001BAA  0100               	movlb	0	; () banked
  4231   001BAC  6FA9               	movwf	RGB_to_HSV@H_temp& (0+255),b
  4232   001BAE  0E00               	movlw	0
  4233   001BB0  6FAA               	movwf	(RGB_to_HSV@H_temp+1)& (0+255),b
  4234   001BB2  0E00               	movlw	0
  4235   001BB4  6FAB               	movwf	(RGB_to_HSV@H_temp+2)& (0+255),b
  4236   001BB6  0E00               	movlw	0
  4237   001BB8  6FAC               	movwf	(RGB_to_HSV@H_temp+3)& (0+255),b
  4238   001BBA  EF40  F00F         	goto	l3726
  4239   001BBE                     l3706:
  4240   001BBE  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4241   001BC2  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4242   001BC6  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4243   001BCA  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4244   001BCE  C0B5  F005         	movff	RGB_to_HSV@r,___fleq@ff2
  4245   001BD2  C0B6  F006         	movff	RGB_to_HSV@r+1,___fleq@ff2+1
  4246   001BD6  C0B7  F007         	movff	RGB_to_HSV@r+2,___fleq@ff2+2
  4247   001BDA  C0B8  F008         	movff	RGB_to_HSV@r+3,___fleq@ff2+3
  4248   001BDE  ECFB  F023         	call	___fleq	;wreg free
  4249   001BE2  A0D8               	btfss	status,0,c
  4250   001BE4  EFF6  F00D         	goto	u3791
  4251   001BE8  EFF8  F00D         	goto	u3790
  4252   001BEC                     u3791:
  4253   001BEC  EF5A  F00E         	goto	l3714
  4254   001BF0                     u3790:
  4255   001BF0  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4256   001BF4  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4257   001BF8  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4258   001BFC  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4259   001C00  C0BD  F01E         	movff	RGB_to_HSV@b,___flsub@a
  4260   001C04  C0BE  F01F         	movff	RGB_to_HSV@b+1,___flsub@a+1
  4261   001C08  C0BF  F020         	movff	RGB_to_HSV@b+2,___flsub@a+2
  4262   001C0C  C0C0  F021         	movff	RGB_to_HSV@b+3,___flsub@a+3
  4263   001C10  C0B9  F01A         	movff	RGB_to_HSV@g,___flsub@b
  4264   001C14  C0BA  F01B         	movff	RGB_to_HSV@g+1,___flsub@b+1
  4265   001C18  C0BB  F01C         	movff	RGB_to_HSV@g+2,___flsub@b+2
  4266   001C1C  C0BC  F01D         	movff	RGB_to_HSV@g+3,___flsub@b+3
  4267   001C20  ECA3  F025         	call	___flsub	;wreg free
  4268   001C24  C01A  F022         	movff	?___flsub,___fldiv@b
  4269   001C28  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4270   001C2C  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4271   001C30  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4272   001C34  ECF8  F018         	call	___fldiv	;wreg free
  4273   001C38  C022  F085         	movff	?___fldiv,_RGB_to_HSV$2718
  4274   001C3C  C023  F086         	movff	?___fldiv+1,_RGB_to_HSV$2718+1
  4275   001C40  C024  F087         	movff	?___fldiv+2,_RGB_to_HSV$2718+2
  4276   001C44  C025  F088         	movff	?___fldiv+3,_RGB_to_HSV$2718+3
  4277   001C48  0E00               	movlw	0
  4278   001C4A  6E58               	movwf	custom_floatmodulo@y^0,c
  4279   001C4C  0E00               	movlw	0
  4280   001C4E  6E59               	movwf	(custom_floatmodulo@y+1)^0,c
  4281   001C50  0EC0               	movlw	192
  4282   001C52  6E5A               	movwf	(custom_floatmodulo@y+2)^0,c
  4283   001C54  0E40               	movlw	64
  4284   001C56  6E5B               	movwf	(custom_floatmodulo@y+3)^0,c
  4285   001C58  C085  F054         	movff	_RGB_to_HSV$2718,custom_floatmodulo@x
  4286   001C5C  C086  F055         	movff	_RGB_to_HSV$2718+1,custom_floatmodulo@x+1
  4287   001C60  C087  F056         	movff	_RGB_to_HSV$2718+2,custom_floatmodulo@x+2
  4288   001C64  C088  F057         	movff	_RGB_to_HSV$2718+3,custom_floatmodulo@x+3
  4289   001C68  EC43  F021         	call	_custom_floatmodulo	;wreg free
  4290   001C6C  C054  F089         	movff	?_custom_floatmodulo,_RGB_to_HSV$2719
  4291   001C70  C055  F08A         	movff	?_custom_floatmodulo+1,_RGB_to_HSV$2719+1
  4292   001C74  C056  F08B         	movff	?_custom_floatmodulo+2,_RGB_to_HSV$2719+2
  4293   001C78  C057  F08C         	movff	?_custom_floatmodulo+3,_RGB_to_HSV$2719+3
  4294   001C7C  C089  F03B         	movff	_RGB_to_HSV$2719,___flmul@b
  4295   001C80  C08A  F03C         	movff	_RGB_to_HSV$2719+1,___flmul@b+1
  4296   001C84  C08B  F03D         	movff	_RGB_to_HSV$2719+2,___flmul@b+2
  4297   001C88  C08C  F03E         	movff	_RGB_to_HSV$2719+3,___flmul@b+3
  4298   001C8C  0E00               	movlw	0
  4299   001C8E  6E3F               	movwf	___flmul@a^0,c
  4300   001C90  0E00               	movlw	0
  4301   001C92  6E40               	movwf	(___flmul@a+1)^0,c
  4302   001C94  0E70               	movlw	112
  4303   001C96  6E41               	movwf	(___flmul@a+2)^0,c
  4304   001C98  0E42               	movlw	66
  4305   001C9A  6E42               	movwf	(___flmul@a+3)^0,c
  4306   001C9C  ECD8  F014         	call	___flmul	;wreg free
  4307   001CA0  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4308   001CA4  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4309   001CA8  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4310   001CAC  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4311   001CB0  EF40  F00F         	goto	l3726
  4312   001CB4                     l3714:
  4313   001CB4  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4314   001CB8  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4315   001CBC  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4316   001CC0  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4317   001CC4  C0B9  F005         	movff	RGB_to_HSV@g,___fleq@ff2
  4318   001CC8  C0BA  F006         	movff	RGB_to_HSV@g+1,___fleq@ff2+1
  4319   001CCC  C0BB  F007         	movff	RGB_to_HSV@g+2,___fleq@ff2+2
  4320   001CD0  C0BC  F008         	movff	RGB_to_HSV@g+3,___fleq@ff2+3
  4321   001CD4  ECFB  F023         	call	___fleq	;wreg free
  4322   001CD8  A0D8               	btfss	status,0,c
  4323   001CDA  EF71  F00E         	goto	u3801
  4324   001CDE  EF73  F00E         	goto	u3800
  4325   001CE2                     u3801:
  4326   001CE2  EFCD  F00E         	goto	l3720
  4327   001CE6                     u3800:
  4328   001CE6  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4329   001CEA  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4330   001CEE  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4331   001CF2  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4332   001CF6  C0B5  F01E         	movff	RGB_to_HSV@r,___flsub@a
  4333   001CFA  C0B6  F01F         	movff	RGB_to_HSV@r+1,___flsub@a+1
  4334   001CFE  C0B7  F020         	movff	RGB_to_HSV@r+2,___flsub@a+2
  4335   001D02  C0B8  F021         	movff	RGB_to_HSV@r+3,___flsub@a+3
  4336   001D06  C0BD  F01A         	movff	RGB_to_HSV@b,___flsub@b
  4337   001D0A  C0BE  F01B         	movff	RGB_to_HSV@b+1,___flsub@b+1
  4338   001D0E  C0BF  F01C         	movff	RGB_to_HSV@b+2,___flsub@b+2
  4339   001D12  C0C0  F01D         	movff	RGB_to_HSV@b+3,___flsub@b+3
  4340   001D16  ECA3  F025         	call	___flsub	;wreg free
  4341   001D1A  C01A  F022         	movff	?___flsub,___fldiv@b
  4342   001D1E  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4343   001D22  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4344   001D26  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4345   001D2A  ECF8  F018         	call	___fldiv	;wreg free
  4346   001D2E  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2720
  4347   001D32  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2720+1
  4348   001D36  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2720+2
  4349   001D3A  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2720+3
  4350   001D3E  0E00               	movlw	0
  4351   001D40  6E05               	movwf	___fladd@a^0,c
  4352   001D42  0E00               	movlw	0
  4353   001D44  6E06               	movwf	(___fladd@a+1)^0,c
  4354   001D46  0E00               	movlw	0
  4355   001D48  6E07               	movwf	(___fladd@a+2)^0,c
  4356   001D4A  0E40               	movlw	64
  4357   001D4C  6E08               	movwf	(___fladd@a+3)^0,c
  4358   001D4E  C0A5  F001         	movff	_RGB_to_HSV$2720,___fladd@b
  4359   001D52  C0A6  F002         	movff	_RGB_to_HSV$2720+1,___fladd@b+1
  4360   001D56  C0A7  F003         	movff	_RGB_to_HSV$2720+2,___fladd@b+2
  4361   001D5A  C0A8  F004         	movff	_RGB_to_HSV$2720+3,___fladd@b+3
  4362   001D5E  EC78  F012         	call	___fladd	;wreg free
  4363   001D62  C001  F03B         	movff	?___fladd,___flmul@b
  4364   001D66  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4365   001D6A  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4366   001D6E  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4367   001D72  0E00               	movlw	0
  4368   001D74  6E3F               	movwf	___flmul@a^0,c
  4369   001D76  0E00               	movlw	0
  4370   001D78  6E40               	movwf	(___flmul@a+1)^0,c
  4371   001D7A  0E70               	movlw	112
  4372   001D7C  6E41               	movwf	(___flmul@a+2)^0,c
  4373   001D7E  0E42               	movlw	66
  4374   001D80  6E42               	movwf	(___flmul@a+3)^0,c
  4375   001D82  ECD8  F014         	call	___flmul	;wreg free
  4376   001D86  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4377   001D8A  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4378   001D8E  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4379   001D92  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4380   001D96  EF40  F00F         	goto	l3726
  4381   001D9A                     l3720:
  4382   001D9A  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4383   001D9E  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4384   001DA2  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4385   001DA6  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4386   001DAA  C0BD  F005         	movff	RGB_to_HSV@b,___fleq@ff2
  4387   001DAE  C0BE  F006         	movff	RGB_to_HSV@b+1,___fleq@ff2+1
  4388   001DB2  C0BF  F007         	movff	RGB_to_HSV@b+2,___fleq@ff2+2
  4389   001DB6  C0C0  F008         	movff	RGB_to_HSV@b+3,___fleq@ff2+3
  4390   001DBA  ECFB  F023         	call	___fleq	;wreg free
  4391   001DBE  A0D8               	btfss	status,0,c
  4392   001DC0  EFE4  F00E         	goto	u3811
  4393   001DC4  EFE6  F00E         	goto	u3810
  4394   001DC8                     u3811:
  4395   001DC8  EF40  F00F         	goto	l80
  4396   001DCC                     u3810:
  4397   001DCC  C0AD  F026         	movff	RGB_to_HSV@deltaRGB,___fldiv@a
  4398   001DD0  C0AE  F027         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@a+1
  4399   001DD4  C0AF  F028         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@a+2
  4400   001DD8  C0B0  F029         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@a+3
  4401   001DDC  C0B9  F01E         	movff	RGB_to_HSV@g,___flsub@a
  4402   001DE0  C0BA  F01F         	movff	RGB_to_HSV@g+1,___flsub@a+1
  4403   001DE4  C0BB  F020         	movff	RGB_to_HSV@g+2,___flsub@a+2
  4404   001DE8  C0BC  F021         	movff	RGB_to_HSV@g+3,___flsub@a+3
  4405   001DEC  C0B5  F01A         	movff	RGB_to_HSV@r,___flsub@b
  4406   001DF0  C0B6  F01B         	movff	RGB_to_HSV@r+1,___flsub@b+1
  4407   001DF4  C0B7  F01C         	movff	RGB_to_HSV@r+2,___flsub@b+2
  4408   001DF8  C0B8  F01D         	movff	RGB_to_HSV@r+3,___flsub@b+3
  4409   001DFC  ECA3  F025         	call	___flsub	;wreg free
  4410   001E00  C01A  F022         	movff	?___flsub,___fldiv@b
  4411   001E04  C01B  F023         	movff	?___flsub+1,___fldiv@b+1
  4412   001E08  C01C  F024         	movff	?___flsub+2,___fldiv@b+2
  4413   001E0C  C01D  F025         	movff	?___flsub+3,___fldiv@b+3
  4414   001E10  ECF8  F018         	call	___fldiv	;wreg free
  4415   001E14  C022  F0A5         	movff	?___fldiv,_RGB_to_HSV$2720
  4416   001E18  C023  F0A6         	movff	?___fldiv+1,_RGB_to_HSV$2720+1
  4417   001E1C  C024  F0A7         	movff	?___fldiv+2,_RGB_to_HSV$2720+2
  4418   001E20  C025  F0A8         	movff	?___fldiv+3,_RGB_to_HSV$2720+3
  4419   001E24  0E00               	movlw	0
  4420   001E26  6E05               	movwf	___fladd@a^0,c
  4421   001E28  0E00               	movlw	0
  4422   001E2A  6E06               	movwf	(___fladd@a+1)^0,c
  4423   001E2C  0E80               	movlw	128
  4424   001E2E  6E07               	movwf	(___fladd@a+2)^0,c
  4425   001E30  0E40               	movlw	64
  4426   001E32  6E08               	movwf	(___fladd@a+3)^0,c
  4427   001E34  C0A5  F001         	movff	_RGB_to_HSV$2720,___fladd@b
  4428   001E38  C0A6  F002         	movff	_RGB_to_HSV$2720+1,___fladd@b+1
  4429   001E3C  C0A7  F003         	movff	_RGB_to_HSV$2720+2,___fladd@b+2
  4430   001E40  C0A8  F004         	movff	_RGB_to_HSV$2720+3,___fladd@b+3
  4431   001E44  EC78  F012         	call	___fladd	;wreg free
  4432   001E48  C001  F03B         	movff	?___fladd,___flmul@b
  4433   001E4C  C002  F03C         	movff	?___fladd+1,___flmul@b+1
  4434   001E50  C003  F03D         	movff	?___fladd+2,___flmul@b+2
  4435   001E54  C004  F03E         	movff	?___fladd+3,___flmul@b+3
  4436   001E58  0E00               	movlw	0
  4437   001E5A  6E3F               	movwf	___flmul@a^0,c
  4438   001E5C  0E00               	movlw	0
  4439   001E5E  6E40               	movwf	(___flmul@a+1)^0,c
  4440   001E60  0E70               	movlw	112
  4441   001E62  6E41               	movwf	(___flmul@a+2)^0,c
  4442   001E64  0E42               	movlw	66
  4443   001E66  6E42               	movwf	(___flmul@a+3)^0,c
  4444   001E68  ECD8  F014         	call	___flmul	;wreg free
  4445   001E6C  C03B  F0A9         	movff	?___flmul,RGB_to_HSV@H_temp
  4446   001E70  C03C  F0AA         	movff	?___flmul+1,RGB_to_HSV@H_temp+1
  4447   001E74  C03D  F0AB         	movff	?___flmul+2,RGB_to_HSV@H_temp+2
  4448   001E78  C03E  F0AC         	movff	?___flmul+3,RGB_to_HSV@H_temp+3
  4449   001E7C  EF40  F00F         	goto	l3726
  4450   001E80                     l80:
  4451   001E80                     l3726:
  4452                           
  4453                           ;color.c: 155:     if (H_temp < 0) {H_temp = H_temp + 360;}
  4454   001E80  0100               	movlb	0	; () banked
  4455   001E82  BFAC               	btfsc	(RGB_to_HSV@H_temp+3)& (0+255),7,b
  4456   001E84  EF48  F00F         	goto	u3820
  4457   001E88  EF46  F00F         	goto	u3821
  4458   001E8C                     u3821:
  4459   001E8C  EF62  F00F         	goto	l3730
  4460   001E90                     u3820:
  4461   001E90                     
  4462                           ; BSR set to: 0
  4463   001E90  C0A9  F001         	movff	RGB_to_HSV@H_temp,___fladd@b
  4464   001E94  C0AA  F002         	movff	RGB_to_HSV@H_temp+1,___fladd@b+1
  4465   001E98  C0AB  F003         	movff	RGB_to_HSV@H_temp+2,___fladd@b+2
  4466   001E9C  C0AC  F004         	movff	RGB_to_HSV@H_temp+3,___fladd@b+3
  4467   001EA0  0E00               	movlw	0
  4468   001EA2  6E05               	movwf	___fladd@a^0,c
  4469   001EA4  0E00               	movlw	0
  4470   001EA6  6E06               	movwf	(___fladd@a+1)^0,c
  4471   001EA8  0EB4               	movlw	180
  4472   001EAA  6E07               	movwf	(___fladd@a+2)^0,c
  4473   001EAC  0E43               	movlw	67
  4474   001EAE  6E08               	movwf	(___fladd@a+3)^0,c
  4475   001EB0  EC78  F012         	call	___fladd	;wreg free
  4476   001EB4  C001  F0A9         	movff	?___fladd,RGB_to_HSV@H_temp
  4477   001EB8  C002  F0AA         	movff	?___fladd+1,RGB_to_HSV@H_temp+1
  4478   001EBC  C003  F0AB         	movff	?___fladd+2,RGB_to_HSV@H_temp+2
  4479   001EC0  C004  F0AC         	movff	?___fladd+3,RGB_to_HSV@H_temp+3
  4480   001EC4                     l3730:
  4481                           
  4482                           ;color.c: 158:     *H = H_temp;
  4483   001EC4  0100               	movlb	0	; () banked
  4484   001EC6  517A               	movf	RGB_to_HSV@H& (0+255),w,b
  4485   001EC8  6ED9               	movwf	fsr2l,c
  4486   001ECA  6ADA               	clrf	fsr2h,c
  4487   001ECC  C0A9  FFDE         	movff	RGB_to_HSV@H_temp,postinc2
  4488   001ED0  C0AA  FFDE         	movff	RGB_to_HSV@H_temp+1,postinc2
  4489   001ED4  C0AB  FFDE         	movff	RGB_to_HSV@H_temp+2,postinc2
  4490   001ED8  C0AC  FFDE         	movff	RGB_to_HSV@H_temp+3,postinc2
  4491   001EDC                     
  4492                           ; BSR set to: 0
  4493                           ;color.c: 161:     if (maxRGB == 0) {*S = 0;}
  4494   001EDC  C0B1  F001         	movff	RGB_to_HSV@maxRGB,___fleq@ff1
  4495   001EE0  C0B2  F002         	movff	RGB_to_HSV@maxRGB+1,___fleq@ff1+1
  4496   001EE4  C0B3  F003         	movff	RGB_to_HSV@maxRGB+2,___fleq@ff1+2
  4497   001EE8  C0B4  F004         	movff	RGB_to_HSV@maxRGB+3,___fleq@ff1+3
  4498   001EEC  0E00               	movlw	0
  4499   001EEE  6E05               	movwf	___fleq@ff2^0,c
  4500   001EF0  0E00               	movlw	0
  4501   001EF2  6E06               	movwf	(___fleq@ff2+1)^0,c
  4502   001EF4  0E00               	movlw	0
  4503   001EF6  6E07               	movwf	(___fleq@ff2+2)^0,c
  4504   001EF8  0E00               	movlw	0
  4505   001EFA  6E08               	movwf	(___fleq@ff2+3)^0,c
  4506   001EFC  ECFB  F023         	call	___fleq	;wreg free
  4507   001F00  A0D8               	btfss	status,0,c
  4508   001F02  EF85  F00F         	goto	u3831
  4509   001F06  EF87  F00F         	goto	u3830
  4510   001F0A                     u3831:
  4511   001F0A  EF95  F00F         	goto	l3736
  4512   001F0E                     u3830:
  4513   001F0E  0100               	movlb	0	; () banked
  4514   001F10  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4515   001F12  6ED9               	movwf	fsr2l,c
  4516   001F14  6ADA               	clrf	fsr2h,c
  4517   001F16  0E00               	movlw	0
  4518   001F18  6EDE               	movwf	postinc2,c
  4519   001F1A  0E00               	movlw	0
  4520   001F1C  6EDE               	movwf	postinc2,c
  4521   001F1E  0E00               	movlw	0
  4522   001F20  6EDE               	movwf	postinc2,c
  4523   001F22  0E00               	movlw	0
  4524   001F24  6EDD               	movwf	postdec2,c
  4525   001F26  EFC5  F00F         	goto	l3738
  4526   001F2A                     l3736:
  4527                           
  4528                           ;color.c: 164:         *S = (deltaRGB/maxRGB) * 100.0;
  4529   001F2A  C0B1  F026         	movff	RGB_to_HSV@maxRGB,___fldiv@a
  4530   001F2E  C0B2  F027         	movff	RGB_to_HSV@maxRGB+1,___fldiv@a+1
  4531   001F32  C0B3  F028         	movff	RGB_to_HSV@maxRGB+2,___fldiv@a+2
  4532   001F36  C0B4  F029         	movff	RGB_to_HSV@maxRGB+3,___fldiv@a+3
  4533   001F3A  C0AD  F022         	movff	RGB_to_HSV@deltaRGB,___fldiv@b
  4534   001F3E  C0AE  F023         	movff	RGB_to_HSV@deltaRGB+1,___fldiv@b+1
  4535   001F42  C0AF  F024         	movff	RGB_to_HSV@deltaRGB+2,___fldiv@b+2
  4536   001F46  C0B0  F025         	movff	RGB_to_HSV@deltaRGB+3,___fldiv@b+3
  4537   001F4A  ECF8  F018         	call	___fldiv	;wreg free
  4538   001F4E  C022  F03B         	movff	?___fldiv,___flmul@b
  4539   001F52  C023  F03C         	movff	?___fldiv+1,___flmul@b+1
  4540   001F56  C024  F03D         	movff	?___fldiv+2,___flmul@b+2
  4541   001F5A  C025  F03E         	movff	?___fldiv+3,___flmul@b+3
  4542   001F5E  0E00               	movlw	0
  4543   001F60  6E3F               	movwf	___flmul@a^0,c
  4544   001F62  0E00               	movlw	0
  4545   001F64  6E40               	movwf	(___flmul@a+1)^0,c
  4546   001F66  0EC8               	movlw	200
  4547   001F68  6E41               	movwf	(___flmul@a+2)^0,c
  4548   001F6A  0E42               	movlw	66
  4549   001F6C  6E42               	movwf	(___flmul@a+3)^0,c
  4550   001F6E  ECD8  F014         	call	___flmul	;wreg free
  4551   001F72  0100               	movlb	0	; () banked
  4552   001F74  517B               	movf	RGB_to_HSV@S& (0+255),w,b
  4553   001F76  6ED9               	movwf	fsr2l,c
  4554   001F78  6ADA               	clrf	fsr2h,c
  4555   001F7A  C03B  FFDE         	movff	?___flmul,postinc2
  4556   001F7E  C03C  FFDE         	movff	?___flmul+1,postinc2
  4557   001F82  C03D  FFDE         	movff	?___flmul+2,postinc2
  4558   001F86  C03E  FFDE         	movff	?___flmul+3,postinc2
  4559   001F8A                     l3738:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4563   001F8A  0E00               	movlw	0
  4564   001F8C  6E3F               	movwf	___flmul@a^0,c
  4565   001F8E  0E00               	movlw	0
  4566   001F90  6E40               	movwf	(___flmul@a+1)^0,c
  4567   001F92  0EC8               	movlw	200
  4568   001F94  6E41               	movwf	(___flmul@a+2)^0,c
  4569   001F96  0E42               	movlw	66
  4570   001F98  6E42               	movwf	(___flmul@a+3)^0,c
  4571   001F9A  C0B1  F03B         	movff	RGB_to_HSV@maxRGB,___flmul@b
  4572   001F9E  C0B2  F03C         	movff	RGB_to_HSV@maxRGB+1,___flmul@b+1
  4573   001FA2  C0B3  F03D         	movff	RGB_to_HSV@maxRGB+2,___flmul@b+2
  4574   001FA6  C0B4  F03E         	movff	RGB_to_HSV@maxRGB+3,___flmul@b+3
  4575   001FAA  ECD8  F014         	call	___flmul	;wreg free
  4576   001FAE  C03B  F08D         	movff	?___flmul,_RGB_to_HSV$2721
  4577   001FB2  C03C  F08E         	movff	?___flmul+1,_RGB_to_HSV$2721+1
  4578   001FB6  C03D  F08F         	movff	?___flmul+2,_RGB_to_HSV$2721+2
  4579   001FBA  C03E  F090         	movff	?___flmul+3,_RGB_to_HSV$2721+3
  4580   001FBE                     
  4581                           ;color.c: 168:     *V = maxRGB * 100.0 * c_norm;
  4582   001FBE  C08D  F03B         	movff	_RGB_to_HSV$2721,___flmul@b
  4583   001FC2  C08E  F03C         	movff	_RGB_to_HSV$2721+1,___flmul@b+1
  4584   001FC6  C08F  F03D         	movff	_RGB_to_HSV$2721+2,___flmul@b+2
  4585   001FCA  C090  F03E         	movff	_RGB_to_HSV$2721+3,___flmul@b+3
  4586   001FCE  C07D  F03F         	movff	RGB_to_HSV@c_norm,___flmul@a
  4587   001FD2  C07E  F040         	movff	RGB_to_HSV@c_norm+1,___flmul@a+1
  4588   001FD6  C07F  F041         	movff	RGB_to_HSV@c_norm+2,___flmul@a+2
  4589   001FDA  C080  F042         	movff	RGB_to_HSV@c_norm+3,___flmul@a+3
  4590   001FDE  ECD8  F014         	call	___flmul	;wreg free
  4591   001FE2  0100               	movlb	0	; () banked
  4592   001FE4  517C               	movf	RGB_to_HSV@V& (0+255),w,b
  4593   001FE6  6ED9               	movwf	fsr2l,c
  4594   001FE8  6ADA               	clrf	fsr2h,c
  4595   001FEA  C03B  FFDE         	movff	?___flmul,postinc2
  4596   001FEE  C03C  FFDE         	movff	?___flmul+1,postinc2
  4597   001FF2  C03D  FFDE         	movff	?___flmul+2,postinc2
  4598   001FF6  C03E  FFDE         	movff	?___flmul+3,postinc2
  4599   001FFA                     
  4600                           ; BSR set to: 0
  4601   001FFA  0012               	return		;funcret
  4602   001FFC                     __end_of_RGB_to_HSV:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function _custom_floatmodulo *****************
  4606 ;; Defined at:
  4607 ;;		line 106 in file "color.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  x               4   83[COMRAM] float 
  4610 ;;  y               4   87[COMRAM] float 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  remainder       4    4[BANK0 ] float 
  4613 ;;  quotient        4    0[BANK0 ] float 
  4614 ;;  intPart         2    8[BANK0 ] int 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  4   83[COMRAM] float 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4624 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4628 ;;Total ram usage:       18 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 2
  4631 ;; This function calls:
  4632 ;;		___fldiv
  4633 ;;		___fleq
  4634 ;;		___flmul
  4635 ;;		___flsub
  4636 ;;		___fltol
  4637 ;;		___xxtofl
  4638 ;; This function is called by:
  4639 ;;		_RGB_to_HSV
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text18
  4644   004286                     __ptext18:
  4645                           	callstack 0
  4646   004286                     _custom_floatmodulo:
  4647                           	callstack 25
  4648   004286                     
  4649                           ;color.c: 108:     if (y == 0.0) {
  4650   004286  C058  F001         	movff	custom_floatmodulo@y,___fleq@ff1
  4651   00428A  C059  F002         	movff	custom_floatmodulo@y+1,___fleq@ff1+1
  4652   00428E  C05A  F003         	movff	custom_floatmodulo@y+2,___fleq@ff1+2
  4653   004292  C05B  F004         	movff	custom_floatmodulo@y+3,___fleq@ff1+3
  4654   004296  0E00               	movlw	0
  4655   004298  6E05               	movwf	___fleq@ff2^0,c
  4656   00429A  0E00               	movlw	0
  4657   00429C  6E06               	movwf	(___fleq@ff2+1)^0,c
  4658   00429E  0E00               	movlw	0
  4659   0042A0  6E07               	movwf	(___fleq@ff2+2)^0,c
  4660   0042A2  0E00               	movlw	0
  4661   0042A4  6E08               	movwf	(___fleq@ff2+3)^0,c
  4662   0042A6  ECFB  F023         	call	___fleq	;wreg free
  4663   0042AA  A0D8               	btfss	status,0,c
  4664   0042AC  EF5A  F021         	goto	u3631
  4665   0042B0  EF5C  F021         	goto	u3630
  4666   0042B4                     u3631:
  4667   0042B4  EF66  F021         	goto	l3586
  4668   0042B8                     u3630:
  4669   0042B8                     
  4670                           ;color.c: 109:         return 0.0;
  4671   0042B8  0E00               	movlw	0
  4672   0042BA  6E54               	movwf	?_custom_floatmodulo^0,c
  4673   0042BC  0E00               	movlw	0
  4674   0042BE  6E55               	movwf	(?_custom_floatmodulo+1)^0,c
  4675   0042C0  0E00               	movlw	0
  4676   0042C2  6E56               	movwf	(?_custom_floatmodulo+2)^0,c
  4677   0042C4  0E00               	movlw	0
  4678   0042C6  6E57               	movwf	(?_custom_floatmodulo+3)^0,c
  4679   0042C8  EFCE  F021         	goto	l50
  4680   0042CC                     l3586:
  4681                           
  4682                           ;color.c: 113:     float quotient = x / y;
  4683   0042CC  C054  F022         	movff	custom_floatmodulo@x,___fldiv@b
  4684   0042D0  C055  F023         	movff	custom_floatmodulo@x+1,___fldiv@b+1
  4685   0042D4  C056  F024         	movff	custom_floatmodulo@x+2,___fldiv@b+2
  4686   0042D8  C057  F025         	movff	custom_floatmodulo@x+3,___fldiv@b+3
  4687   0042DC  C058  F026         	movff	custom_floatmodulo@y,___fldiv@a
  4688   0042E0  C059  F027         	movff	custom_floatmodulo@y+1,___fldiv@a+1
  4689   0042E4  C05A  F028         	movff	custom_floatmodulo@y+2,___fldiv@a+2
  4690   0042E8  C05B  F029         	movff	custom_floatmodulo@y+3,___fldiv@a+3
  4691   0042EC  ECF8  F018         	call	___fldiv	;wreg free
  4692   0042F0  C022  F060         	movff	?___fldiv,custom_floatmodulo@quotient
  4693   0042F4  C023  F061         	movff	?___fldiv+1,custom_floatmodulo@quotient+1
  4694   0042F8  C024  F062         	movff	?___fldiv+2,custom_floatmodulo@quotient+2
  4695   0042FC  C025  F063         	movff	?___fldiv+3,custom_floatmodulo@quotient+3
  4696                           
  4697                           ;color.c: 116:     int intPart = (int)quotient;
  4698   004300  C060  F001         	movff	custom_floatmodulo@quotient,___fltol@f1
  4699   004304  C061  F002         	movff	custom_floatmodulo@quotient+1,___fltol@f1+1
  4700   004308  C062  F003         	movff	custom_floatmodulo@quotient+2,___fltol@f1+2
  4701   00430C  C063  F004         	movff	custom_floatmodulo@quotient+3,___fltol@f1+3
  4702   004310  ECCF  F021         	call	___fltol	;wreg free
  4703   004314  C001  F068         	movff	?___fltol,custom_floatmodulo@intPart
  4704   004318  C002  F069         	movff	?___fltol+1,custom_floatmodulo@intPart+1
  4705   00431C                     
  4706                           ;color.c: 119:     float remainder = x - intPart * y;
  4707   00431C  C054  F01A         	movff	custom_floatmodulo@x,___flsub@b
  4708   004320  C055  F01B         	movff	custom_floatmodulo@x+1,___flsub@b+1
  4709   004324  C056  F01C         	movff	custom_floatmodulo@x+2,___flsub@b+2
  4710   004328  C057  F01D         	movff	custom_floatmodulo@x+3,___flsub@b+3
  4711   00432C  C058  F03F         	movff	custom_floatmodulo@y,___flmul@a
  4712   004330  C059  F040         	movff	custom_floatmodulo@y+1,___flmul@a+1
  4713   004334  C05A  F041         	movff	custom_floatmodulo@y+2,___flmul@a+2
  4714   004338  C05B  F042         	movff	custom_floatmodulo@y+3,___flmul@a+3
  4715   00433C  C068  F00C         	movff	custom_floatmodulo@intPart,___xxtofl@val
  4716   004340  C069  F00D         	movff	custom_floatmodulo@intPart+1,___xxtofl@val+1
  4717   004344  0E00               	movlw	0
  4718   004346  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  4719   004348  0EFF               	movlw	-1
  4720   00434A  6E0E               	movwf	(___xxtofl@val+2)^0,c
  4721   00434C  6E0F               	movwf	(___xxtofl@val+3)^0,c
  4722   00434E  0E01               	movlw	1
  4723   004350  EC18  F01C         	call	___xxtofl
  4724   004354  C00C  F03B         	movff	?___xxtofl,___flmul@b
  4725   004358  C00D  F03C         	movff	?___xxtofl+1,___flmul@b+1
  4726   00435C  C00E  F03D         	movff	?___xxtofl+2,___flmul@b+2
  4727   004360  C00F  F03E         	movff	?___xxtofl+3,___flmul@b+3
  4728   004364  ECD8  F014         	call	___flmul	;wreg free
  4729   004368  C03B  F01E         	movff	?___flmul,___flsub@a
  4730   00436C  C03C  F01F         	movff	?___flmul+1,___flsub@a+1
  4731   004370  C03D  F020         	movff	?___flmul+2,___flsub@a+2
  4732   004374  C03E  F021         	movff	?___flmul+3,___flsub@a+3
  4733   004378  ECA3  F025         	call	___flsub	;wreg free
  4734   00437C  C01A  F064         	movff	?___flsub,custom_floatmodulo@remainder
  4735   004380  C01B  F065         	movff	?___flsub+1,custom_floatmodulo@remainder+1
  4736   004384  C01C  F066         	movff	?___flsub+2,custom_floatmodulo@remainder+2
  4737   004388  C01D  F067         	movff	?___flsub+3,custom_floatmodulo@remainder+3
  4738   00438C                     
  4739                           ;color.c: 121:     return remainder;
  4740   00438C  C064  F054         	movff	custom_floatmodulo@remainder,?_custom_floatmodulo
  4741   004390  C065  F055         	movff	custom_floatmodulo@remainder+1,?_custom_floatmodulo+1
  4742   004394  C066  F056         	movff	custom_floatmodulo@remainder+2,?_custom_floatmodulo+2
  4743   004398  C067  F057         	movff	custom_floatmodulo@remainder+3,?_custom_floatmodulo+3
  4744   00439C                     l50:
  4745   00439C  0012               	return		;funcret
  4746   00439E                     __end_of_custom_floatmodulo:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function ___xxtofl *****************
  4750 ;; Defined at:
  4751 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  sign            1    wreg     unsigned char 
  4754 ;;  val             4   11[COMRAM] long 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  sign            1   19[COMRAM] unsigned char 
  4757 ;;  arg             4   21[COMRAM] unsigned long 
  4758 ;;  exp             1   20[COMRAM] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  4   11[COMRAM] unsigned char 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4769 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4771 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4772 ;;Total ram usage:       14 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_custom_floatmodulo
  4778 ;;		_color_cardCheck
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text19
  4783   003830                     __ptext19:
  4784                           	callstack 0
  4785   003830                     ___xxtofl:
  4786                           	callstack 28
  4787                           
  4788                           ;incstack = 0
  4789                           ;___xxtofl@sign stored from wreg
  4790   003830  6E14               	movwf	___xxtofl@sign^0,c
  4791   003832  5014               	movf	___xxtofl@sign^0,w,c
  4792   003834  B4D8               	btfsc	status,2,c
  4793   003836  EF1F  F01C         	goto	u3511
  4794   00383A  EF21  F01C         	goto	u3510
  4795   00383E                     u3511:
  4796   00383E  EF43  F01C         	goto	l1258
  4797   003842                     u3510:
  4798   003842  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4799   003844  EF28  F01C         	goto	u3520
  4800   003848  EF26  F01C         	goto	u3521
  4801   00384C                     u3521:
  4802   00384C  EF43  F01C         	goto	l1258
  4803   003850                     u3520:
  4804   003850  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4805   003854  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4806   003858  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4807   00385C  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4808   003860  1E10               	comf	??___xxtofl^0,f,c
  4809   003862  1E11               	comf	(??___xxtofl+1)^0,f,c
  4810   003864  1E12               	comf	(??___xxtofl+2)^0,f,c
  4811   003866  1E13               	comf	(??___xxtofl+3)^0,f,c
  4812   003868  2A10               	incf	??___xxtofl^0,f,c
  4813   00386A  0E00               	movlw	0
  4814   00386C  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4815   00386E  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4816   003870  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4817   003872  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4818   003876  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4819   00387A  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4820   00387E  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4821   003882  EF4B  F01C         	goto	l3510
  4822   003886                     l1258:
  4823   003886  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4824   00388A  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4825   00388E  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4826   003892  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4827   003896                     l3510:
  4828   003896  500C               	movf	___xxtofl@val^0,w,c
  4829   003898  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4830   00389A  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4831   00389C  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4832   00389E  A4D8               	btfss	status,2,c
  4833   0038A0  EF54  F01C         	goto	u3531
  4834   0038A4  EF56  F01C         	goto	u3530
  4835   0038A8                     u3531:
  4836   0038A8  EF60  F01C         	goto	l3516
  4837   0038AC                     u3530:
  4838   0038AC  0E00               	movlw	0
  4839   0038AE  6E0C               	movwf	?___xxtofl^0,c
  4840   0038B0  0E00               	movlw	0
  4841   0038B2  6E0D               	movwf	(?___xxtofl+1)^0,c
  4842   0038B4  0E00               	movlw	0
  4843   0038B6  6E0E               	movwf	(?___xxtofl+2)^0,c
  4844   0038B8  0E00               	movlw	0
  4845   0038BA  6E0F               	movwf	(?___xxtofl+3)^0,c
  4846   0038BC  EFF1  F01C         	goto	l1261
  4847   0038C0                     l3516:
  4848   0038C0  0E96               	movlw	150
  4849   0038C2  6E15               	movwf	___xxtofl@exp^0,c
  4850   0038C4  EF6A  F01C         	goto	l3520
  4851   0038C8                     l3518:
  4852   0038C8  2A15               	incf	___xxtofl@exp^0,f,c
  4853   0038CA  90D8               	bcf	status,0,c
  4854   0038CC  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4855   0038CE  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4856   0038D0  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4857   0038D2  3216               	rrcf	___xxtofl@arg^0,f,c
  4858   0038D4                     l3520:
  4859   0038D4  0E00               	movlw	0
  4860   0038D6  1416               	andwf	___xxtofl@arg^0,w,c
  4861   0038D8  6E10               	movwf	??___xxtofl^0,c
  4862   0038DA  0E00               	movlw	0
  4863   0038DC  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4864   0038DE  6E11               	movwf	(??___xxtofl+1)^0,c
  4865   0038E0  0E00               	movlw	0
  4866   0038E2  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4867   0038E4  6E12               	movwf	(??___xxtofl+2)^0,c
  4868   0038E6  0EFE               	movlw	254
  4869   0038E8  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4870   0038EA  6E13               	movwf	(??___xxtofl+3)^0,c
  4871   0038EC  5010               	movf	??___xxtofl^0,w,c
  4872   0038EE  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4873   0038F0  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4874   0038F2  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4875   0038F4  A4D8               	btfss	status,2,c
  4876   0038F6  EF7F  F01C         	goto	u3541
  4877   0038FA  EF81  F01C         	goto	u3540
  4878   0038FE                     u3541:
  4879   0038FE  EF64  F01C         	goto	l3518
  4880   003902                     u3540:
  4881   003902  EF8F  F01C         	goto	l1265
  4882   003906                     l3522:
  4883   003906  2A15               	incf	___xxtofl@exp^0,f,c
  4884   003908  0E01               	movlw	1
  4885   00390A  2616               	addwf	___xxtofl@arg^0,f,c
  4886   00390C  0E00               	movlw	0
  4887   00390E  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  4888   003910  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  4889   003912  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  4890   003914  90D8               	bcf	status,0,c
  4891   003916  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4892   003918  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4893   00391A  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4894   00391C  3216               	rrcf	___xxtofl@arg^0,f,c
  4895   00391E                     l1265:
  4896   00391E  0E00               	movlw	0
  4897   003920  1416               	andwf	___xxtofl@arg^0,w,c
  4898   003922  6E10               	movwf	??___xxtofl^0,c
  4899   003924  0E00               	movlw	0
  4900   003926  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4901   003928  6E11               	movwf	(??___xxtofl+1)^0,c
  4902   00392A  0E00               	movlw	0
  4903   00392C  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4904   00392E  6E12               	movwf	(??___xxtofl+2)^0,c
  4905   003930  0EFF               	movlw	255
  4906   003932  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4907   003934  6E13               	movwf	(??___xxtofl+3)^0,c
  4908   003936  5010               	movf	??___xxtofl^0,w,c
  4909   003938  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4910   00393A  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4911   00393C  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4912   00393E  A4D8               	btfss	status,2,c
  4913   003940  EFA4  F01C         	goto	u3551
  4914   003944  EFA6  F01C         	goto	u3550
  4915   003948                     u3551:
  4916   003948  EF83  F01C         	goto	l3522
  4917   00394C                     u3550:
  4918   00394C  EFAE  F01C         	goto	l3530
  4919   003950                     l3528:
  4920   003950  0615               	decf	___xxtofl@exp^0,f,c
  4921   003952  90D8               	bcf	status,0,c
  4922   003954  3616               	rlcf	___xxtofl@arg^0,f,c
  4923   003956  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  4924   003958  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  4925   00395A  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  4926   00395C                     l3530:
  4927   00395C  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  4928   00395E  EFB3  F01C         	goto	u3561
  4929   003962  EFB5  F01C         	goto	u3560
  4930   003966                     u3561:
  4931   003966  EFBD  F01C         	goto	l1272
  4932   00396A                     u3560:
  4933   00396A  0E02               	movlw	2
  4934   00396C  6015               	cpfslt	___xxtofl@exp^0,c
  4935   00396E  EFBB  F01C         	goto	u3571
  4936   003972  EFBD  F01C         	goto	u3570
  4937   003976                     u3571:
  4938   003976  EFA8  F01C         	goto	l3528
  4939   00397A                     u3570:
  4940   00397A                     l1272:
  4941   00397A  B015               	btfsc	___xxtofl@exp^0,0,c
  4942   00397C  EFC2  F01C         	goto	u3581
  4943   003980  EFC4  F01C         	goto	u3580
  4944   003984                     u3581:
  4945   003984  EFC5  F01C         	goto	l3536
  4946   003988                     u3580:
  4947   003988  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  4948   00398A                     l3536:
  4949   00398A  90D8               	bcf	status,0,c
  4950   00398C  3215               	rrcf	___xxtofl@exp^0,f,c
  4951   00398E  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  4952   003992  6A11               	clrf	(??___xxtofl+1)^0,c
  4953   003994  6A12               	clrf	(??___xxtofl+2)^0,c
  4954   003996  6A13               	clrf	(??___xxtofl+3)^0,c
  4955   003998  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  4956   00399C  6A12               	clrf	(??___xxtofl+2)^0,c
  4957   00399E  6A11               	clrf	(??___xxtofl+1)^0,c
  4958   0039A0  6A10               	clrf	??___xxtofl^0,c
  4959   0039A2  5010               	movf	??___xxtofl^0,w,c
  4960   0039A4  1216               	iorwf	___xxtofl@arg^0,f,c
  4961   0039A6  5011               	movf	(??___xxtofl+1)^0,w,c
  4962   0039A8  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  4963   0039AA  5012               	movf	(??___xxtofl+2)^0,w,c
  4964   0039AC  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  4965   0039AE  5013               	movf	(??___xxtofl+3)^0,w,c
  4966   0039B0  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  4967   0039B2  5014               	movf	___xxtofl@sign^0,w,c
  4968   0039B4  B4D8               	btfsc	status,2,c
  4969   0039B6  EFDF  F01C         	goto	u3591
  4970   0039BA  EFE1  F01C         	goto	u3590
  4971   0039BE                     u3591:
  4972   0039BE  EFE9  F01C         	goto	l3546
  4973   0039C2                     u3590:
  4974   0039C2  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4975   0039C4  EFE8  F01C         	goto	u3600
  4976   0039C8  EFE6  F01C         	goto	u3601
  4977   0039CC                     u3601:
  4978   0039CC  EFE9  F01C         	goto	l3546
  4979   0039D0                     u3600:
  4980   0039D0  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  4981   0039D2                     l3546:
  4982   0039D2  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  4983   0039D6  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  4984   0039DA  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  4985   0039DE  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  4986   0039E2                     l1261:
  4987   0039E2  0012               	return		;funcret
  4988   0039E4                     __end_of___xxtofl:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function ___fltol *****************
  4992 ;; Defined at:
  4993 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  f1              4    0[COMRAM] unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  exp1            1    9[COMRAM] unsigned char 
  4998 ;;  sign1           1    8[COMRAM] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  4    0[COMRAM] long 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;Total ram usage:       10 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_custom_floatmodulo
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text20
  5022   00439E                     __ptext20:
  5023                           	callstack 0
  5024   00439E                     ___fltol:
  5025                           	callstack 26
  5026   00439E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5027   0043A0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5028   0043A2  6E0A               	movwf	___fltol@exp1^0,c
  5029   0043A4  500A               	movf	___fltol@exp1^0,w,c
  5030   0043A6  A4D8               	btfss	status,2,c
  5031   0043A8  EFD8  F021         	goto	u3441
  5032   0043AC  EFDA  F021         	goto	u3440
  5033   0043B0                     u3441:
  5034   0043B0  EFE4  F021         	goto	l3466
  5035   0043B4                     u3440:
  5036   0043B4                     l3462:
  5037   0043B4  0E00               	movlw	0
  5038   0043B6  6E01               	movwf	?___fltol^0,c
  5039   0043B8  0E00               	movlw	0
  5040   0043BA  6E02               	movwf	(?___fltol+1)^0,c
  5041   0043BC  0E00               	movlw	0
  5042   0043BE  6E03               	movwf	(?___fltol+2)^0,c
  5043   0043C0  0E00               	movlw	0
  5044   0043C2  6E04               	movwf	(?___fltol+3)^0,c
  5045   0043C4  EF51  F022         	goto	l900
  5046   0043C8                     l3466:
  5047   0043C8  C001  F005         	movff	___fltol@f1,??___fltol
  5048   0043CC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5049   0043D0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5050   0043D4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5051   0043D8  0E20               	movlw	32
  5052   0043DA  EFF4  F021         	goto	u3450
  5053   0043DE                     u3455:
  5054   0043DE  90D8               	bcf	status,0,c
  5055   0043E0  3208               	rrcf	(??___fltol+3)^0,f,c
  5056   0043E2  3207               	rrcf	(??___fltol+2)^0,f,c
  5057   0043E4  3206               	rrcf	(??___fltol+1)^0,f,c
  5058   0043E6  3205               	rrcf	??___fltol^0,f,c
  5059   0043E8                     u3450:
  5060   0043E8  2EE8               	decfsz	wreg,f,c
  5061   0043EA  EFEF  F021         	goto	u3455
  5062   0043EE  5005               	movf	??___fltol^0,w,c
  5063   0043F0  6E09               	movwf	___fltol@sign1^0,c
  5064   0043F2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5065   0043F4  0EFF               	movlw	255
  5066   0043F6  1601               	andwf	___fltol@f1^0,f,c
  5067   0043F8  0EFF               	movlw	255
  5068   0043FA  1602               	andwf	(___fltol@f1+1)^0,f,c
  5069   0043FC  0EFF               	movlw	255
  5070   0043FE  1603               	andwf	(___fltol@f1+2)^0,f,c
  5071   004400  0E00               	movlw	0
  5072   004402  1604               	andwf	(___fltol@f1+3)^0,f,c
  5073   004404  0E96               	movlw	150
  5074   004406  5E0A               	subwf	___fltol@exp1^0,f,c
  5075   004408  BE0A               	btfsc	___fltol@exp1^0,7,c
  5076   00440A  EF0B  F022         	goto	u3460
  5077   00440E  EF09  F022         	goto	u3461
  5078   004412                     u3461:
  5079   004412  EF21  F022         	goto	l3486
  5080   004416                     u3460:
  5081   004416  500A               	movf	___fltol@exp1^0,w,c
  5082   004418  0A80               	xorlw	128
  5083   00441A  0F97               	addlw	151
  5084   00441C  B0D8               	btfsc	status,0,c
  5085   00441E  EF13  F022         	goto	u3471
  5086   004422  EF15  F022         	goto	u3470
  5087   004426                     u3471:
  5088   004426  EF17  F022         	goto	l3482
  5089   00442A                     u3470:
  5090   00442A  EFDA  F021         	goto	l3462
  5091   00442E                     l3482:
  5092   00442E  90D8               	bcf	status,0,c
  5093   004430  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5094   004432  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5095   004434  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5096   004436  3201               	rrcf	___fltol@f1^0,f,c
  5097   004438  3E0A               	incfsz	___fltol@exp1^0,f,c
  5098   00443A  EF17  F022         	goto	l3482
  5099   00443E  EF39  F022         	goto	l3496
  5100   004442                     l3486:
  5101   004442  0E1F               	movlw	31
  5102   004444  640A               	cpfsgt	___fltol@exp1^0,c
  5103   004446  EF27  F022         	goto	u3481
  5104   00444A  EF29  F022         	goto	u3480
  5105   00444E                     u3481:
  5106   00444E  EF31  F022         	goto	l3494
  5107   004452                     u3480:
  5108   004452  EFDA  F021         	goto	l3462
  5109   004456                     l3492:
  5110   004456  90D8               	bcf	status,0,c
  5111   004458  3601               	rlcf	___fltol@f1^0,f,c
  5112   00445A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5113   00445C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5114   00445E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5115   004460  060A               	decf	___fltol@exp1^0,f,c
  5116   004462                     l3494:
  5117   004462  500A               	movf	___fltol@exp1^0,w,c
  5118   004464  A4D8               	btfss	status,2,c
  5119   004466  EF37  F022         	goto	u3491
  5120   00446A  EF39  F022         	goto	u3490
  5121   00446E                     u3491:
  5122   00446E  EF2B  F022         	goto	l3492
  5123   004472                     u3490:
  5124   004472                     l3496:
  5125   004472  5009               	movf	___fltol@sign1^0,w,c
  5126   004474  B4D8               	btfsc	status,2,c
  5127   004476  EF3F  F022         	goto	u3501
  5128   00447A  EF41  F022         	goto	u3500
  5129   00447E                     u3501:
  5130   00447E  EF49  F022         	goto	l3500
  5131   004482                     u3500:
  5132   004482  1E04               	comf	(___fltol@f1+3)^0,f,c
  5133   004484  1E03               	comf	(___fltol@f1+2)^0,f,c
  5134   004486  1E02               	comf	(___fltol@f1+1)^0,f,c
  5135   004488  6C01               	negf	___fltol@f1^0,c
  5136   00448A  0E00               	movlw	0
  5137   00448C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5138   00448E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5139   004490  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5140   004492                     l3500:
  5141   004492  C001  F001         	movff	___fltol@f1,?___fltol
  5142   004496  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5143   00449A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5144   00449E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5145   0044A2                     l900:
  5146   0044A2  0012               	return		;funcret
  5147   0044A4                     __end_of___fltol:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function ___flsub *****************
  5151 ;; Defined at:
  5152 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  b               4   25[COMRAM] long 
  5155 ;;  a               4   29[COMRAM] long 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;		None
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  4   25[COMRAM] long 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5167 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;Total ram usage:        8 bytes
  5172 ;; Hardware stack levels used: 1
  5173 ;; Hardware stack levels required when called: 1
  5174 ;; This function calls:
  5175 ;;		___fladd
  5176 ;; This function is called by:
  5177 ;;		_custom_floatmodulo
  5178 ;;		_RGB_to_HSV
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text21
  5183   004B46                     __ptext21:
  5184                           	callstack 0
  5185   004B46                     ___flsub:
  5186                           	callstack 25
  5187   004B46  0E00               	movlw	0
  5188   004B48  1A1E               	xorwf	___flsub@a^0,f,c
  5189   004B4A  0E00               	movlw	0
  5190   004B4C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5191   004B4E  0E00               	movlw	0
  5192   004B50  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5193   004B52  0E80               	movlw	128
  5194   004B54  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5195   004B56  C01A  F001         	movff	___flsub@b,___fladd@b
  5196   004B5A  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5197   004B5E  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5198   004B62  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5199   004B66  C01E  F005         	movff	___flsub@a,___fladd@a
  5200   004B6A  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5201   004B6E  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5202   004B72  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5203   004B76  EC78  F012         	call	___fladd	;wreg free
  5204   004B7A  C001  F01A         	movff	?___fladd,?___flsub
  5205   004B7E  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5206   004B82  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5207   004B86  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5208   004B8A  0012               	return		;funcret
  5209   004B8C                     __end_of___flsub:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function ___fladd *****************
  5213 ;; Defined at:
  5214 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  b               4    0[COMRAM] long 
  5217 ;;  a               4    4[COMRAM] long 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  grs             1   15[COMRAM] unsigned char 
  5220 ;;  bexp            1   14[COMRAM] unsigned char 
  5221 ;;  aexp            1   13[COMRAM] unsigned char 
  5222 ;;  signs           1   12[COMRAM] unsigned char 
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  4    0[COMRAM] unsigned char 
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5232 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5234 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;Total ram usage:       16 bytes
  5237 ;; Hardware stack levels used: 1
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_RGB_to_HSV
  5242 ;;		___flsub
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text22
  5247   0024F0                     __ptext22:
  5248                           	callstack 0
  5249   0024F0                     ___fladd:
  5250                           	callstack 25
  5251   0024F0  5004               	movf	(___fladd@b+3)^0,w,c
  5252   0024F2  0B80               	andlw	128
  5253   0024F4  6E0D               	movwf	___fladd@signs^0,c
  5254   0024F6  5004               	movf	(___fladd@b+3)^0,w,c
  5255   0024F8  2404               	addwf	(___fladd@b+3)^0,w,c
  5256   0024FA  6E0F               	movwf	___fladd@bexp^0,c
  5257   0024FC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5258   0024FE  EF83  F012         	goto	u2581
  5259   002502  EF85  F012         	goto	u2580
  5260   002506                     u2581:
  5261   002506  EF86  F012         	goto	l2970
  5262   00250A                     u2580:
  5263   00250A  800F               	bsf	___fladd@bexp^0,0,c
  5264   00250C                     l2970:
  5265   00250C  500F               	movf	___fladd@bexp^0,w,c
  5266   00250E  B4D8               	btfsc	status,2,c
  5267   002510  EF8C  F012         	goto	u2591
  5268   002514  EF8E  F012         	goto	u2590
  5269   002518                     u2591:
  5270   002518  EFA3  F012         	goto	l2980
  5271   00251C                     u2590:
  5272   00251C  280F               	incf	___fladd@bexp^0,w,c
  5273   00251E  A4D8               	btfss	status,2,c
  5274   002520  EF94  F012         	goto	u2601
  5275   002524  EF96  F012         	goto	u2600
  5276   002528                     u2601:
  5277   002528  EF9E  F012         	goto	l2976
  5278   00252C                     u2600:
  5279   00252C  0E00               	movlw	0
  5280   00252E  6E01               	movwf	___fladd@b^0,c
  5281   002530  0E00               	movlw	0
  5282   002532  6E02               	movwf	(___fladd@b+1)^0,c
  5283   002534  0E00               	movlw	0
  5284   002536  6E03               	movwf	(___fladd@b+2)^0,c
  5285   002538  0E00               	movlw	0
  5286   00253A  6E04               	movwf	(___fladd@b+3)^0,c
  5287   00253C                     l2976:
  5288   00253C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5289   00253E  0E00               	movlw	0
  5290   002540  6E04               	movwf	(___fladd@b+3)^0,c
  5291   002542  EFAB  F012         	goto	l2982
  5292   002546                     l2980:
  5293   002546  0E00               	movlw	0
  5294   002548  6E01               	movwf	___fladd@b^0,c
  5295   00254A  0E00               	movlw	0
  5296   00254C  6E02               	movwf	(___fladd@b+1)^0,c
  5297   00254E  0E00               	movlw	0
  5298   002550  6E03               	movwf	(___fladd@b+2)^0,c
  5299   002552  0E00               	movlw	0
  5300   002554  6E04               	movwf	(___fladd@b+3)^0,c
  5301   002556                     l2982:
  5302   002556  5008               	movf	(___fladd@a+3)^0,w,c
  5303   002558  0B80               	andlw	128
  5304   00255A  6E0E               	movwf	___fladd@aexp^0,c
  5305   00255C  500D               	movf	___fladd@signs^0,w,c
  5306   00255E  180E               	xorwf	___fladd@aexp^0,w,c
  5307   002560  B4D8               	btfsc	status,2,c
  5308   002562  EFB5  F012         	goto	u2611
  5309   002566  EFB7  F012         	goto	u2610
  5310   00256A                     u2611:
  5311   00256A  EFB8  F012         	goto	l2988
  5312   00256E                     u2610:
  5313   00256E  8C0D               	bsf	___fladd@signs^0,6,c
  5314   002570                     l2988:
  5315   002570  5008               	movf	(___fladd@a+3)^0,w,c
  5316   002572  2408               	addwf	(___fladd@a+3)^0,w,c
  5317   002574  6E0E               	movwf	___fladd@aexp^0,c
  5318   002576  AE07               	btfss	(___fladd@a+2)^0,7,c
  5319   002578  EFC0  F012         	goto	u2621
  5320   00257C  EFC2  F012         	goto	u2620
  5321   002580                     u2621:
  5322   002580  EFC3  F012         	goto	l2994
  5323   002584                     u2620:
  5324   002584  800E               	bsf	___fladd@aexp^0,0,c
  5325   002586                     l2994:
  5326   002586  500E               	movf	___fladd@aexp^0,w,c
  5327   002588  B4D8               	btfsc	status,2,c
  5328   00258A  EFC9  F012         	goto	u2631
  5329   00258E  EFCB  F012         	goto	u2630
  5330   002592                     u2631:
  5331   002592  EFE0  F012         	goto	l3004
  5332   002596                     u2630:
  5333   002596  280E               	incf	___fladd@aexp^0,w,c
  5334   002598  A4D8               	btfss	status,2,c
  5335   00259A  EFD1  F012         	goto	u2641
  5336   00259E  EFD3  F012         	goto	u2640
  5337   0025A2                     u2641:
  5338   0025A2  EFDB  F012         	goto	l3000
  5339   0025A6                     u2640:
  5340   0025A6  0E00               	movlw	0
  5341   0025A8  6E05               	movwf	___fladd@a^0,c
  5342   0025AA  0E00               	movlw	0
  5343   0025AC  6E06               	movwf	(___fladd@a+1)^0,c
  5344   0025AE  0E00               	movlw	0
  5345   0025B0  6E07               	movwf	(___fladd@a+2)^0,c
  5346   0025B2  0E00               	movlw	0
  5347   0025B4  6E08               	movwf	(___fladd@a+3)^0,c
  5348   0025B6                     l3000:
  5349   0025B6  8E07               	bsf	(___fladd@a+2)^0,7,c
  5350   0025B8  0E00               	movlw	0
  5351   0025BA  6E08               	movwf	(___fladd@a+3)^0,c
  5352   0025BC  EFE8  F012         	goto	l3006
  5353   0025C0                     l3004:
  5354   0025C0  0E00               	movlw	0
  5355   0025C2  6E05               	movwf	___fladd@a^0,c
  5356   0025C4  0E00               	movlw	0
  5357   0025C6  6E06               	movwf	(___fladd@a+1)^0,c
  5358   0025C8  0E00               	movlw	0
  5359   0025CA  6E07               	movwf	(___fladd@a+2)^0,c
  5360   0025CC  0E00               	movlw	0
  5361   0025CE  6E08               	movwf	(___fladd@a+3)^0,c
  5362   0025D0                     l3006:
  5363   0025D0  500F               	movf	___fladd@bexp^0,w,c
  5364   0025D2  5C0E               	subwf	___fladd@aexp^0,w,c
  5365   0025D4  B0D8               	btfsc	status,0,c
  5366   0025D6  EFEF  F012         	goto	u2651
  5367   0025DA  EFF1  F012         	goto	u2650
  5368   0025DE                     u2651:
  5369   0025DE  EF18  F013         	goto	l3042
  5370   0025E2                     u2650:
  5371   0025E2  AC0D               	btfss	___fladd@signs^0,6,c
  5372   0025E4  EFF6  F012         	goto	u2661
  5373   0025E8  EFF8  F012         	goto	u2660
  5374   0025EC                     u2661:
  5375   0025EC  EFFA  F012         	goto	l3012
  5376   0025F0                     u2660:
  5377   0025F0  0E80               	movlw	128
  5378   0025F2  1A0D               	xorwf	___fladd@signs^0,f,c
  5379   0025F4                     l3012:
  5380   0025F4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5381   0025F8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5382   0025FC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5383   002600  C001  F010         	movff	___fladd@b,___fladd@grs
  5384   002604  C005  F001         	movff	___fladd@a,___fladd@b
  5385   002608  C010  F005         	movff	___fladd@grs,___fladd@a
  5386   00260C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5387   002610  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5388   002614  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5389   002618  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5390   00261C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5391   002620  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5392   002624  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5393   002628  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5394   00262C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5395   002630                     l3042:
  5396   002630  0E00               	movlw	0
  5397   002632  6E10               	movwf	___fladd@grs^0,c
  5398   002634  500F               	movf	___fladd@bexp^0,w,c
  5399   002636  C00E  F009         	movff	___fladd@aexp,??___fladd
  5400   00263A  6A0A               	clrf	(??___fladd+1)^0,c
  5401   00263C  5E09               	subwf	??___fladd^0,f,c
  5402   00263E  0E00               	movlw	0
  5403   002640  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5404   002642  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5405   002644  EF2D  F013         	goto	u2671
  5406   002648  500A               	movf	(??___fladd+1)^0,w,c
  5407   00264A  E109               	bnz	u2670
  5408   00264C  0E1A               	movlw	26
  5409   00264E  5C09               	subwf	??___fladd^0,w,c
  5410   002650  A0D8               	btfss	status,0,c
  5411   002652  EF2D  F013         	goto	u2671
  5412   002656  EF2F  F013         	goto	u2670
  5413   00265A                     u2671:
  5414   00265A  EF66  F013         	goto	l1132
  5415   00265E                     u2670:
  5416   00265E  5001               	movf	___fladd@b^0,w,c
  5417   002660  1002               	iorwf	(___fladd@b+1)^0,w,c
  5418   002662  1003               	iorwf	(___fladd@b+2)^0,w,c
  5419   002664  1004               	iorwf	(___fladd@b+3)^0,w,c
  5420   002666  A4D8               	btfss	status,2,c
  5421   002668  EF38  F013         	goto	u2681
  5422   00266C  EF3B  F013         	goto	u2680
  5423   002670                     u2681:
  5424   002670  0E01               	movlw	1
  5425   002672  EF3C  F013         	goto	u2690
  5426   002676                     u2680:
  5427   002676  0E00               	movlw	0
  5428   002678                     u2690:
  5429   002678  6E10               	movwf	___fladd@grs^0,c
  5430   00267A  0E00               	movlw	0
  5431   00267C  6E01               	movwf	___fladd@b^0,c
  5432   00267E  0E00               	movlw	0
  5433   002680  6E02               	movwf	(___fladd@b+1)^0,c
  5434   002682  0E00               	movlw	0
  5435   002684  6E03               	movwf	(___fladd@b+2)^0,c
  5436   002686  0E00               	movlw	0
  5437   002688  6E04               	movwf	(___fladd@b+3)^0,c
  5438   00268A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5439   00268E  EF6F  F013         	goto	l1131
  5440   002692                     l1133:
  5441   002692  A010               	btfss	___fladd@grs^0,0,c
  5442   002694  EF4E  F013         	goto	u2701
  5443   002698  EF50  F013         	goto	u2700
  5444   00269C                     u2701:
  5445   00269C  EF56  F013         	goto	l3054
  5446   0026A0                     u2700:
  5447   0026A0  90D8               	bcf	status,0,c
  5448   0026A2  3010               	rrcf	___fladd@grs^0,w,c
  5449   0026A4  0901               	iorlw	1
  5450   0026A6  6E10               	movwf	___fladd@grs^0,c
  5451   0026A8  EF58  F013         	goto	l3056
  5452   0026AC                     l3054:
  5453   0026AC  90D8               	bcf	status,0,c
  5454   0026AE  3210               	rrcf	___fladd@grs^0,f,c
  5455   0026B0                     l3056:
  5456   0026B0  A001               	btfss	___fladd@b^0,0,c
  5457   0026B2  EF5D  F013         	goto	u2711
  5458   0026B6  EF5F  F013         	goto	u2710
  5459   0026BA                     u2711:
  5460   0026BA  EF60  F013         	goto	l3060
  5461   0026BE                     u2710:
  5462   0026BE  8E10               	bsf	___fladd@grs^0,7,c
  5463   0026C0                     l3060:
  5464   0026C0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5465   0026C2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5466   0026C4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5467   0026C6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5468   0026C8  3201               	rrcf	___fladd@b^0,f,c
  5469   0026CA  2A0F               	incf	___fladd@bexp^0,f,c
  5470   0026CC                     l1132:
  5471   0026CC  500E               	movf	___fladd@aexp^0,w,c
  5472   0026CE  5C0F               	subwf	___fladd@bexp^0,w,c
  5473   0026D0  A0D8               	btfss	status,0,c
  5474   0026D2  EF6D  F013         	goto	u2721
  5475   0026D6  EF6F  F013         	goto	u2720
  5476   0026DA                     u2721:
  5477   0026DA  EF49  F013         	goto	l1133
  5478   0026DE                     u2720:
  5479   0026DE                     l1131:
  5480   0026DE  BC0D               	btfsc	___fladd@signs^0,6,c
  5481   0026E0  EF74  F013         	goto	u2731
  5482   0026E4  EF76  F013         	goto	u2730
  5483   0026E8                     u2731:
  5484   0026E8  EFB6  F013         	goto	l3088
  5485   0026EC                     u2730:
  5486   0026EC  500F               	movf	___fladd@bexp^0,w,c
  5487   0026EE  A4D8               	btfss	status,2,c
  5488   0026F0  EF7C  F013         	goto	u2741
  5489   0026F4  EF7E  F013         	goto	u2740
  5490   0026F8                     u2741:
  5491   0026F8  EF88  F013         	goto	l3070
  5492   0026FC                     u2740:
  5493   0026FC  0E00               	movlw	0
  5494   0026FE  6E01               	movwf	?___fladd^0,c
  5495   002700  0E00               	movlw	0
  5496   002702  6E02               	movwf	(?___fladd+1)^0,c
  5497   002704  0E00               	movlw	0
  5498   002706  6E03               	movwf	(?___fladd+2)^0,c
  5499   002708  0E00               	movlw	0
  5500   00270A  6E04               	movwf	(?___fladd+3)^0,c
  5501   00270C  EFD7  F014         	goto	l1140
  5502   002710                     l3070:
  5503   002710  5005               	movf	___fladd@a^0,w,c
  5504   002712  2601               	addwf	___fladd@b^0,f,c
  5505   002714  5006               	movf	(___fladd@a+1)^0,w,c
  5506   002716  2202               	addwfc	(___fladd@b+1)^0,f,c
  5507   002718  5007               	movf	(___fladd@a+2)^0,w,c
  5508   00271A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5509   00271C  5008               	movf	(___fladd@a+3)^0,w,c
  5510   00271E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5511   002720  A004               	btfss	(___fladd@b+3)^0,0,c
  5512   002722  EF95  F013         	goto	u2751
  5513   002726  EF97  F013         	goto	u2750
  5514   00272A                     u2751:
  5515   00272A  EF43  F014         	goto	l3124
  5516   00272E                     u2750:
  5517   00272E  A010               	btfss	___fladd@grs^0,0,c
  5518   002730  EF9C  F013         	goto	u2761
  5519   002734  EF9E  F013         	goto	u2760
  5520   002738                     u2761:
  5521   002738  EFA4  F013         	goto	l3078
  5522   00273C                     u2760:
  5523   00273C  90D8               	bcf	status,0,c
  5524   00273E  3010               	rrcf	___fladd@grs^0,w,c
  5525   002740  0901               	iorlw	1
  5526   002742  6E10               	movwf	___fladd@grs^0,c
  5527   002744  EFA6  F013         	goto	l3080
  5528   002748                     l3078:
  5529   002748  90D8               	bcf	status,0,c
  5530   00274A  3210               	rrcf	___fladd@grs^0,f,c
  5531   00274C                     l3080:
  5532   00274C  A001               	btfss	___fladd@b^0,0,c
  5533   00274E  EFAB  F013         	goto	u2771
  5534   002752  EFAD  F013         	goto	u2770
  5535   002756                     u2771:
  5536   002756  EFAE  F013         	goto	l3084
  5537   00275A                     u2770:
  5538   00275A  8E10               	bsf	___fladd@grs^0,7,c
  5539   00275C                     l3084:
  5540   00275C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5541   00275E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5542   002760  3203               	rrcf	(___fladd@b+2)^0,f,c
  5543   002762  3202               	rrcf	(___fladd@b+1)^0,f,c
  5544   002764  3201               	rrcf	___fladd@b^0,f,c
  5545   002766  2A0F               	incf	___fladd@bexp^0,f,c
  5546   002768  EF43  F014         	goto	l3124
  5547   00276C                     l3088:
  5548   00276C  5005               	movf	___fladd@a^0,w,c
  5549   00276E  5C01               	subwf	___fladd@b^0,w,c
  5550   002770  5006               	movf	(___fladd@a+1)^0,w,c
  5551   002772  5802               	subwfb	(___fladd@b+1)^0,w,c
  5552   002774  5007               	movf	(___fladd@a+2)^0,w,c
  5553   002776  5803               	subwfb	(___fladd@b+2)^0,w,c
  5554   002778  5004               	movf	(___fladd@b+3)^0,w,c
  5555   00277A  0A80               	xorlw	128
  5556   00277C  6E09               	movwf	??___fladd^0,c
  5557   00277E  5008               	movf	(___fladd@a+3)^0,w,c
  5558   002780  0A80               	xorlw	128
  5559   002782  5809               	subwfb	??___fladd^0,w,c
  5560   002784  B0D8               	btfsc	status,0,c
  5561   002786  EFC7  F013         	goto	u2781
  5562   00278A  EFC9  F013         	goto	u2780
  5563   00278E                     u2781:
  5564   00278E  EFF4  F013         	goto	l3098
  5565   002792                     u2780:
  5566   002792  5001               	movf	___fladd@b^0,w,c
  5567   002794  5C05               	subwf	___fladd@a^0,w,c
  5568   002796  6E09               	movwf	??___fladd^0,c
  5569   002798  5002               	movf	(___fladd@b+1)^0,w,c
  5570   00279A  5806               	subwfb	(___fladd@a+1)^0,w,c
  5571   00279C  6E0A               	movwf	(??___fladd+1)^0,c
  5572   00279E  5003               	movf	(___fladd@b+2)^0,w,c
  5573   0027A0  5807               	subwfb	(___fladd@a+2)^0,w,c
  5574   0027A2  6E0B               	movwf	(??___fladd+2)^0,c
  5575   0027A4  5004               	movf	(___fladd@b+3)^0,w,c
  5576   0027A6  5808               	subwfb	(___fladd@a+3)^0,w,c
  5577   0027A8  6E0C               	movwf	(??___fladd+3)^0,c
  5578   0027AA  0EFF               	movlw	255
  5579   0027AC  2409               	addwf	??___fladd^0,w,c
  5580   0027AE  6E01               	movwf	___fladd@b^0,c
  5581   0027B0  0EFF               	movlw	255
  5582   0027B2  200A               	addwfc	(??___fladd+1)^0,w,c
  5583   0027B4  6E02               	movwf	(___fladd@b+1)^0,c
  5584   0027B6  0EFF               	movlw	255
  5585   0027B8  200B               	addwfc	(??___fladd+2)^0,w,c
  5586   0027BA  6E03               	movwf	(___fladd@b+2)^0,c
  5587   0027BC  0EFF               	movlw	255
  5588   0027BE  200C               	addwfc	(??___fladd+3)^0,w,c
  5589   0027C0  6E04               	movwf	(___fladd@b+3)^0,c
  5590   0027C2  0E80               	movlw	128
  5591   0027C4  1A0D               	xorwf	___fladd@signs^0,f,c
  5592   0027C6  6C10               	negf	___fladd@grs^0,c
  5593   0027C8  5010               	movf	___fladd@grs^0,w,c
  5594   0027CA  A4D8               	btfss	status,2,c
  5595   0027CC  EFEA  F013         	goto	u2791
  5596   0027D0  EFEC  F013         	goto	u2790
  5597   0027D4                     u2791:
  5598   0027D4  EFFC  F013         	goto	l1148
  5599   0027D8                     u2790:
  5600   0027D8  0E01               	movlw	1
  5601   0027DA  2601               	addwf	___fladd@b^0,f,c
  5602   0027DC  0E00               	movlw	0
  5603   0027DE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5604   0027E0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5605   0027E2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5606   0027E4  EFFC  F013         	goto	l1148
  5607   0027E8                     l3098:
  5608   0027E8  5005               	movf	___fladd@a^0,w,c
  5609   0027EA  5E01               	subwf	___fladd@b^0,f,c
  5610   0027EC  5006               	movf	(___fladd@a+1)^0,w,c
  5611   0027EE  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5612   0027F0  5007               	movf	(___fladd@a+2)^0,w,c
  5613   0027F2  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5614   0027F4  5008               	movf	(___fladd@a+3)^0,w,c
  5615   0027F6  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5616   0027F8                     l1148:
  5617   0027F8  5001               	movf	___fladd@b^0,w,c
  5618   0027FA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5619   0027FC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5620   0027FE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5621   002800  A4D8               	btfss	status,2,c
  5622   002802  EF05  F014         	goto	u2801
  5623   002806  EF07  F014         	goto	u2800
  5624   00280A                     u2801:
  5625   00280A  EF3C  F014         	goto	l3122
  5626   00280E                     u2800:
  5627   00280E  5010               	movf	___fladd@grs^0,w,c
  5628   002810  A4D8               	btfss	status,2,c
  5629   002812  EF0D  F014         	goto	u2811
  5630   002816  EF0F  F014         	goto	u2810
  5631   00281A                     u2811:
  5632   00281A  EF3C  F014         	goto	l3122
  5633   00281E                     u2810:
  5634   00281E  0E00               	movlw	0
  5635   002820  6E01               	movwf	?___fladd^0,c
  5636   002822  0E00               	movlw	0
  5637   002824  6E02               	movwf	(?___fladd+1)^0,c
  5638   002826  0E00               	movlw	0
  5639   002828  6E03               	movwf	(?___fladd+2)^0,c
  5640   00282A  0E00               	movlw	0
  5641   00282C  6E04               	movwf	(?___fladd+3)^0,c
  5642   00282E  EFD7  F014         	goto	l1140
  5643   002832                     l3106:
  5644   002832  90D8               	bcf	status,0,c
  5645   002834  3601               	rlcf	___fladd@b^0,f,c
  5646   002836  3602               	rlcf	(___fladd@b+1)^0,f,c
  5647   002838  3603               	rlcf	(___fladd@b+2)^0,f,c
  5648   00283A  3604               	rlcf	(___fladd@b+3)^0,f,c
  5649   00283C  AE10               	btfss	___fladd@grs^0,7,c
  5650   00283E  EF23  F014         	goto	u2821
  5651   002842  EF25  F014         	goto	u2820
  5652   002846                     u2821:
  5653   002846  EF26  F014         	goto	l3112
  5654   00284A                     u2820:
  5655   00284A  8001               	bsf	___fladd@b^0,0,c
  5656   00284C                     l3112:
  5657   00284C  A010               	btfss	___fladd@grs^0,0,c
  5658   00284E  EF2B  F014         	goto	u2831
  5659   002852  EF2D  F014         	goto	u2830
  5660   002856                     u2831:
  5661   002856  EF31  F014         	goto	l3116
  5662   00285A                     u2830:
  5663   00285A  80D8               	bsf	status,0,c
  5664   00285C  3610               	rlcf	___fladd@grs^0,f,c
  5665   00285E  EF33  F014         	goto	l3118
  5666   002862                     l3116:
  5667   002862  90D8               	bcf	status,0,c
  5668   002864  3610               	rlcf	___fladd@grs^0,f,c
  5669   002866                     l3118:
  5670   002866  500F               	movf	___fladd@bexp^0,w,c
  5671   002868  B4D8               	btfsc	status,2,c
  5672   00286A  EF39  F014         	goto	u2841
  5673   00286E  EF3B  F014         	goto	u2840
  5674   002872                     u2841:
  5675   002872  EF3C  F014         	goto	l3122
  5676   002876                     u2840:
  5677   002876  060F               	decf	___fladd@bexp^0,f,c
  5678   002878                     l3122:
  5679   002878  AE03               	btfss	(___fladd@b+2)^0,7,c
  5680   00287A  EF41  F014         	goto	u2851
  5681   00287E  EF43  F014         	goto	u2850
  5682   002882                     u2851:
  5683   002882  EF19  F014         	goto	l3106
  5684   002886                     u2850:
  5685   002886                     l3124:
  5686   002886  0E00               	movlw	0
  5687   002888  6E0E               	movwf	___fladd@aexp^0,c
  5688   00288A  AE10               	btfss	___fladd@grs^0,7,c
  5689   00288C  EF4A  F014         	goto	u2861
  5690   002890  EF4C  F014         	goto	u2860
  5691   002894                     u2861:
  5692   002894  EF64  F014         	goto	l1157
  5693   002898                     u2860:
  5694   002898  C010  F009         	movff	___fladd@grs,??___fladd
  5695   00289C  0E7F               	movlw	127
  5696   00289E  1609               	andwf	??___fladd^0,f,c
  5697   0028A0  B4D8               	btfsc	status,2,c
  5698   0028A2  EF55  F014         	goto	u2871
  5699   0028A6  EF57  F014         	goto	u2870
  5700   0028AA                     u2871:
  5701   0028AA  EF5B  F014         	goto	l1158
  5702   0028AE                     u2870:
  5703   0028AE                     l3130:
  5704   0028AE  0E01               	movlw	1
  5705   0028B0  6E0E               	movwf	___fladd@aexp^0,c
  5706   0028B2  EF64  F014         	goto	l1157
  5707   0028B6                     l1158:
  5708   0028B6  A001               	btfss	___fladd@b^0,0,c
  5709   0028B8  EF60  F014         	goto	u2881
  5710   0028BC  EF62  F014         	goto	u2880
  5711   0028C0                     u2881:
  5712   0028C0  EF64  F014         	goto	l1157
  5713   0028C4                     u2880:
  5714   0028C4  EF57  F014         	goto	l3130
  5715   0028C8                     l1157:
  5716   0028C8  500E               	movf	___fladd@aexp^0,w,c
  5717   0028CA  B4D8               	btfsc	status,2,c
  5718   0028CC  EF6A  F014         	goto	u2891
  5719   0028D0  EF6C  F014         	goto	u2890
  5720   0028D4                     u2891:
  5721   0028D4  EF97  F014         	goto	l3142
  5722   0028D8                     u2890:
  5723   0028D8  0E01               	movlw	1
  5724   0028DA  2601               	addwf	___fladd@b^0,f,c
  5725   0028DC  0E00               	movlw	0
  5726   0028DE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5727   0028E0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5728   0028E2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5729   0028E4  A004               	btfss	(___fladd@b+3)^0,0,c
  5730   0028E6  EF77  F014         	goto	u2901
  5731   0028EA  EF79  F014         	goto	u2900
  5732   0028EE                     u2901:
  5733   0028EE  EF97  F014         	goto	l3142
  5734   0028F2                     u2900:
  5735   0028F2  C001  F009         	movff	___fladd@b,??___fladd
  5736   0028F6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5737   0028FA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5738   0028FE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5739   002902  340C               	rlcf	(??___fladd+3)^0,w,c
  5740   002904  320C               	rrcf	(??___fladd+3)^0,f,c
  5741   002906  320B               	rrcf	(??___fladd+2)^0,f,c
  5742   002908  320A               	rrcf	(??___fladd+1)^0,f,c
  5743   00290A  3209               	rrcf	??___fladd^0,f,c
  5744   00290C  C009  F001         	movff	??___fladd,___fladd@b
  5745   002910  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5746   002914  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5747   002918  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5748   00291C  280F               	incf	___fladd@bexp^0,w,c
  5749   00291E  B4D8               	btfsc	status,2,c
  5750   002920  EF94  F014         	goto	u2911
  5751   002924  EF96  F014         	goto	u2910
  5752   002928                     u2911:
  5753   002928  EF97  F014         	goto	l3142
  5754   00292C                     u2910:
  5755   00292C  2A0F               	incf	___fladd@bexp^0,f,c
  5756   00292E                     l3142:
  5757   00292E  280F               	incf	___fladd@bexp^0,w,c
  5758   002930  B4D8               	btfsc	status,2,c
  5759   002932  EF9D  F014         	goto	u2921
  5760   002936  EF9F  F014         	goto	u2920
  5761   00293A                     u2921:
  5762   00293A  EFA7  F014         	goto	l3146
  5763   00293E                     u2920:
  5764   00293E  500F               	movf	___fladd@bexp^0,w,c
  5765   002940  A4D8               	btfss	status,2,c
  5766   002942  EFA5  F014         	goto	u2931
  5767   002946  EFA7  F014         	goto	u2930
  5768   00294A                     u2931:
  5769   00294A  EFB9  F014         	goto	l3150
  5770   00294E                     u2930:
  5771   00294E                     l3146:
  5772   00294E  0E00               	movlw	0
  5773   002950  6E01               	movwf	___fladd@b^0,c
  5774   002952  0E00               	movlw	0
  5775   002954  6E02               	movwf	(___fladd@b+1)^0,c
  5776   002956  0E00               	movlw	0
  5777   002958  6E03               	movwf	(___fladd@b+2)^0,c
  5778   00295A  0E00               	movlw	0
  5779   00295C  6E04               	movwf	(___fladd@b+3)^0,c
  5780   00295E  500F               	movf	___fladd@bexp^0,w,c
  5781   002960  A4D8               	btfss	status,2,c
  5782   002962  EFB5  F014         	goto	u2941
  5783   002966  EFB7  F014         	goto	u2940
  5784   00296A                     u2941:
  5785   00296A  EFB9  F014         	goto	l3150
  5786   00296E                     u2940:
  5787   00296E  0E00               	movlw	0
  5788   002970  6E0D               	movwf	___fladd@signs^0,c
  5789   002972                     l3150:
  5790   002972  A00F               	btfss	___fladd@bexp^0,0,c
  5791   002974  EFBE  F014         	goto	u2951
  5792   002978  EFC0  F014         	goto	u2950
  5793   00297C                     u2951:
  5794   00297C  EFC3  F014         	goto	l3154
  5795   002980                     u2950:
  5796   002980  8E03               	bsf	(___fladd@b+2)^0,7,c
  5797   002982  EFC4  F014         	goto	l3156
  5798   002986                     l3154:
  5799   002986  9E03               	bcf	(___fladd@b+2)^0,7,c
  5800   002988                     l3156:
  5801   002988  90D8               	bcf	status,0,c
  5802   00298A  300F               	rrcf	___fladd@bexp^0,w,c
  5803   00298C  6E04               	movwf	(___fladd@b+3)^0,c
  5804   00298E  AE0D               	btfss	___fladd@signs^0,7,c
  5805   002990  EFCC  F014         	goto	u2961
  5806   002994  EFCE  F014         	goto	u2960
  5807   002998                     u2961:
  5808   002998  EFCF  F014         	goto	l3162
  5809   00299C                     u2960:
  5810   00299C  8E04               	bsf	(___fladd@b+3)^0,7,c
  5811   00299E                     l3162:
  5812   00299E  C001  F001         	movff	___fladd@b,?___fladd
  5813   0029A2  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5814   0029A6  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5815   0029AA  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5816   0029AE                     l1140:
  5817   0029AE  0012               	return		;funcret
  5818   0029B0                     __end_of___fladd:
  5819                           	callstack 0
  5820                           
  5821 ;; *************** function ___flmul *****************
  5822 ;; Defined at:
  5823 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  b               4   58[COMRAM] unsigned char 
  5826 ;;  a               4   62[COMRAM] unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  prod            4   77[COMRAM] struct .
  5829 ;;  grs             4   71[COMRAM] unsigned long 
  5830 ;;  temp            2   81[COMRAM] struct .
  5831 ;;  bexp            1   76[COMRAM] unsigned char 
  5832 ;;  aexp            1   75[COMRAM] unsigned char 
  5833 ;;  sign            1   70[COMRAM] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  4   58[COMRAM] unsigned char 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0, prodl, prodh
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5843 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;Total ram usage:       25 bytes
  5848 ;; Hardware stack levels used: 1
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_custom_floatmodulo
  5853 ;;		_RGB_to_HSV
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text23
  5858   0029B0                     __ptext23:
  5859                           	callstack 0
  5860   0029B0                     ___flmul:
  5861                           	callstack 26
  5862   0029B0  503E               	movf	(___flmul@b+3)^0,w,c
  5863   0029B2  0B80               	andlw	128
  5864   0029B4  6E47               	movwf	___flmul@sign^0,c
  5865   0029B6  503E               	movf	(___flmul@b+3)^0,w,c
  5866   0029B8  243E               	addwf	(___flmul@b+3)^0,w,c
  5867   0029BA  6E4D               	movwf	___flmul@bexp^0,c
  5868   0029BC  AE3D               	btfss	(___flmul@b+2)^0,7,c
  5869   0029BE  EFE3  F014         	goto	u3221
  5870   0029C2  EFE5  F014         	goto	u3220
  5871   0029C6                     u3221:
  5872   0029C6  EFE6  F014         	goto	l3314
  5873   0029CA                     u3220:
  5874   0029CA  804D               	bsf	___flmul@bexp^0,0,c
  5875   0029CC                     l3314:
  5876   0029CC  504D               	movf	___flmul@bexp^0,w,c
  5877   0029CE  B4D8               	btfsc	status,2,c
  5878   0029D0  EFEC  F014         	goto	u3231
  5879   0029D4  EFEE  F014         	goto	u3230
  5880   0029D8                     u3231:
  5881   0029D8  EF01  F015         	goto	l3322
  5882   0029DC                     u3230:
  5883   0029DC  284D               	incf	___flmul@bexp^0,w,c
  5884   0029DE  A4D8               	btfss	status,2,c
  5885   0029E0  EFF4  F014         	goto	u3241
  5886   0029E4  EFF6  F014         	goto	u3240
  5887   0029E8                     u3241:
  5888   0029E8  EFFE  F014         	goto	l3320
  5889   0029EC                     u3240:
  5890   0029EC  0E00               	movlw	0
  5891   0029EE  6E3B               	movwf	___flmul@b^0,c
  5892   0029F0  0E00               	movlw	0
  5893   0029F2  6E3C               	movwf	(___flmul@b+1)^0,c
  5894   0029F4  0E00               	movlw	0
  5895   0029F6  6E3D               	movwf	(___flmul@b+2)^0,c
  5896   0029F8  0E00               	movlw	0
  5897   0029FA  6E3E               	movwf	(___flmul@b+3)^0,c
  5898   0029FC                     l3320:
  5899   0029FC  8E3D               	bsf	(___flmul@b+2)^0,7,c
  5900   0029FE  EF09  F015         	goto	l3324
  5901   002A02                     l3322:
  5902   002A02  0E00               	movlw	0
  5903   002A04  6E3B               	movwf	___flmul@b^0,c
  5904   002A06  0E00               	movlw	0
  5905   002A08  6E3C               	movwf	(___flmul@b+1)^0,c
  5906   002A0A  0E00               	movlw	0
  5907   002A0C  6E3D               	movwf	(___flmul@b+2)^0,c
  5908   002A0E  0E00               	movlw	0
  5909   002A10  6E3E               	movwf	(___flmul@b+3)^0,c
  5910   002A12                     l3324:
  5911   002A12  5042               	movf	(___flmul@a+3)^0,w,c
  5912   002A14  0B80               	andlw	128
  5913   002A16  1A47               	xorwf	___flmul@sign^0,f,c
  5914   002A18  5042               	movf	(___flmul@a+3)^0,w,c
  5915   002A1A  2442               	addwf	(___flmul@a+3)^0,w,c
  5916   002A1C  6E4C               	movwf	___flmul@aexp^0,c
  5917   002A1E  AE41               	btfss	(___flmul@a+2)^0,7,c
  5918   002A20  EF14  F015         	goto	u3251
  5919   002A24  EF16  F015         	goto	u3250
  5920   002A28                     u3251:
  5921   002A28  EF17  F015         	goto	l3332
  5922   002A2C                     u3250:
  5923   002A2C  804C               	bsf	___flmul@aexp^0,0,c
  5924   002A2E                     l3332:
  5925   002A2E  504C               	movf	___flmul@aexp^0,w,c
  5926   002A30  B4D8               	btfsc	status,2,c
  5927   002A32  EF1D  F015         	goto	u3261
  5928   002A36  EF1F  F015         	goto	u3260
  5929   002A3A                     u3261:
  5930   002A3A  EF32  F015         	goto	l3340
  5931   002A3E                     u3260:
  5932   002A3E  284C               	incf	___flmul@aexp^0,w,c
  5933   002A40  A4D8               	btfss	status,2,c
  5934   002A42  EF25  F015         	goto	u3271
  5935   002A46  EF27  F015         	goto	u3270
  5936   002A4A                     u3271:
  5937   002A4A  EF2F  F015         	goto	l3338
  5938   002A4E                     u3270:
  5939   002A4E  0E00               	movlw	0
  5940   002A50  6E3F               	movwf	___flmul@a^0,c
  5941   002A52  0E00               	movlw	0
  5942   002A54  6E40               	movwf	(___flmul@a+1)^0,c
  5943   002A56  0E00               	movlw	0
  5944   002A58  6E41               	movwf	(___flmul@a+2)^0,c
  5945   002A5A  0E00               	movlw	0
  5946   002A5C  6E42               	movwf	(___flmul@a+3)^0,c
  5947   002A5E                     l3338:
  5948   002A5E  8E41               	bsf	(___flmul@a+2)^0,7,c
  5949   002A60  EF3A  F015         	goto	l1217
  5950   002A64                     l3340:
  5951   002A64  0E00               	movlw	0
  5952   002A66  6E3F               	movwf	___flmul@a^0,c
  5953   002A68  0E00               	movlw	0
  5954   002A6A  6E40               	movwf	(___flmul@a+1)^0,c
  5955   002A6C  0E00               	movlw	0
  5956   002A6E  6E41               	movwf	(___flmul@a+2)^0,c
  5957   002A70  0E00               	movlw	0
  5958   002A72  6E42               	movwf	(___flmul@a+3)^0,c
  5959   002A74                     l1217:
  5960   002A74  504C               	movf	___flmul@aexp^0,w,c
  5961   002A76  B4D8               	btfsc	status,2,c
  5962   002A78  EF40  F015         	goto	u3281
  5963   002A7C  EF42  F015         	goto	u3280
  5964   002A80                     u3281:
  5965   002A80  EF4A  F015         	goto	l3344
  5966   002A84                     u3280:
  5967   002A84  504D               	movf	___flmul@bexp^0,w,c
  5968   002A86  A4D8               	btfss	status,2,c
  5969   002A88  EF48  F015         	goto	u3291
  5970   002A8C  EF4A  F015         	goto	u3290
  5971   002A90                     u3291:
  5972   002A90  EF54  F015         	goto	l3348
  5973   002A94                     u3290:
  5974   002A94                     l3344:
  5975   002A94  0E00               	movlw	0
  5976   002A96  6E3B               	movwf	?___flmul^0,c
  5977   002A98  0E00               	movlw	0
  5978   002A9A  6E3C               	movwf	(?___flmul+1)^0,c
  5979   002A9C  0E00               	movlw	0
  5980   002A9E  6E3D               	movwf	(?___flmul+2)^0,c
  5981   002AA0  0E00               	movlw	0
  5982   002AA2  6E3E               	movwf	(?___flmul+3)^0,c
  5983   002AA4  EFEC  F016         	goto	l1221
  5984   002AA8                     l3348:
  5985   002AA8  5041               	movf	(___flmul@a+2)^0,w,c
  5986   002AAA  023B               	mulwf	___flmul@b^0,c
  5987   002AAC  CFF3 F052          	movff	prodl,___flmul@temp
  5988   002AB0  CFF4 F053          	movff	prodh,___flmul@temp+1
  5989   002AB4  5052               	movf	___flmul@temp^0,w,c
  5990   002AB6  6E48               	movwf	___flmul@grs^0,c
  5991   002AB8  6A49               	clrf	(___flmul@grs+1)^0,c
  5992   002ABA  6A4A               	clrf	(___flmul@grs+2)^0,c
  5993   002ABC  6A4B               	clrf	(___flmul@grs+3)^0,c
  5994   002ABE  5053               	movf	(___flmul@temp+1)^0,w,c
  5995   002AC0  6E4E               	movwf	___flmul@prod^0,c
  5996   002AC2  6A4F               	clrf	(___flmul@prod+1)^0,c
  5997   002AC4  6A50               	clrf	(___flmul@prod+2)^0,c
  5998   002AC6  6A51               	clrf	(___flmul@prod+3)^0,c
  5999   002AC8  5040               	movf	(___flmul@a+1)^0,w,c
  6000   002ACA  023C               	mulwf	(___flmul@b+1)^0,c
  6001   002ACC  CFF3 F052          	movff	prodl,___flmul@temp
  6002   002AD0  CFF4 F053          	movff	prodh,___flmul@temp+1
  6003   002AD4  5052               	movf	___flmul@temp^0,w,c
  6004   002AD6  2648               	addwf	___flmul@grs^0,f,c
  6005   002AD8  0E00               	movlw	0
  6006   002ADA  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6007   002ADC  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6008   002ADE  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6009   002AE0  5053               	movf	(___flmul@temp+1)^0,w,c
  6010   002AE2  264E               	addwf	___flmul@prod^0,f,c
  6011   002AE4  0E00               	movlw	0
  6012   002AE6  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6013   002AE8  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6014   002AEA  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6015   002AEC  503F               	movf	___flmul@a^0,w,c
  6016   002AEE  023D               	mulwf	(___flmul@b+2)^0,c
  6017   002AF0  CFF3 F052          	movff	prodl,___flmul@temp
  6018   002AF4  CFF4 F053          	movff	prodh,___flmul@temp+1
  6019   002AF8  5052               	movf	___flmul@temp^0,w,c
  6020   002AFA  2648               	addwf	___flmul@grs^0,f,c
  6021   002AFC  0E00               	movlw	0
  6022   002AFE  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6023   002B00  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6024   002B02  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6025   002B04  5053               	movf	(___flmul@temp+1)^0,w,c
  6026   002B06  264E               	addwf	___flmul@prod^0,f,c
  6027   002B08  0E00               	movlw	0
  6028   002B0A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6029   002B0C  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6030   002B0E  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6031   002B10  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6032   002B14  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6033   002B18  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6034   002B1C  6A48               	clrf	___flmul@grs^0,c
  6035   002B1E  503F               	movf	___flmul@a^0,w,c
  6036   002B20  023C               	mulwf	(___flmul@b+1)^0,c
  6037   002B22  CFF3 F052          	movff	prodl,___flmul@temp
  6038   002B26  CFF4 F053          	movff	prodh,___flmul@temp+1
  6039   002B2A  5052               	movf	___flmul@temp^0,w,c
  6040   002B2C  2648               	addwf	___flmul@grs^0,f,c
  6041   002B2E  5053               	movf	(___flmul@temp+1)^0,w,c
  6042   002B30  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6043   002B32  0E00               	movlw	0
  6044   002B34  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6045   002B36  0E00               	movlw	0
  6046   002B38  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6047   002B3A  5040               	movf	(___flmul@a+1)^0,w,c
  6048   002B3C  023B               	mulwf	___flmul@b^0,c
  6049   002B3E  CFF3 F052          	movff	prodl,___flmul@temp
  6050   002B42  CFF4 F053          	movff	prodh,___flmul@temp+1
  6051   002B46  5052               	movf	___flmul@temp^0,w,c
  6052   002B48  2648               	addwf	___flmul@grs^0,f,c
  6053   002B4A  5053               	movf	(___flmul@temp+1)^0,w,c
  6054   002B4C  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6055   002B4E  0E00               	movlw	0
  6056   002B50  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6057   002B52  0E00               	movlw	0
  6058   002B54  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6059   002B56  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6060   002B5A  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6061   002B5E  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6062   002B62  6A48               	clrf	___flmul@grs^0,c
  6063   002B64  503F               	movf	___flmul@a^0,w,c
  6064   002B66  023B               	mulwf	___flmul@b^0,c
  6065   002B68  CFF3 F052          	movff	prodl,___flmul@temp
  6066   002B6C  CFF4 F053          	movff	prodh,___flmul@temp+1
  6067   002B70  5052               	movf	___flmul@temp^0,w,c
  6068   002B72  2648               	addwf	___flmul@grs^0,f,c
  6069   002B74  5053               	movf	(___flmul@temp+1)^0,w,c
  6070   002B76  2249               	addwfc	(___flmul@grs+1)^0,f,c
  6071   002B78  0E00               	movlw	0
  6072   002B7A  224A               	addwfc	(___flmul@grs+2)^0,f,c
  6073   002B7C  0E00               	movlw	0
  6074   002B7E  224B               	addwfc	(___flmul@grs+3)^0,f,c
  6075   002B80  5041               	movf	(___flmul@a+2)^0,w,c
  6076   002B82  023C               	mulwf	(___flmul@b+1)^0,c
  6077   002B84  CFF3 F052          	movff	prodl,___flmul@temp
  6078   002B88  CFF4 F053          	movff	prodh,___flmul@temp+1
  6079   002B8C  5052               	movf	___flmul@temp^0,w,c
  6080   002B8E  264E               	addwf	___flmul@prod^0,f,c
  6081   002B90  5053               	movf	(___flmul@temp+1)^0,w,c
  6082   002B92  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6083   002B94  0E00               	movlw	0
  6084   002B96  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6085   002B98  0E00               	movlw	0
  6086   002B9A  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6087   002B9C  5040               	movf	(___flmul@a+1)^0,w,c
  6088   002B9E  023D               	mulwf	(___flmul@b+2)^0,c
  6089   002BA0  CFF3 F052          	movff	prodl,___flmul@temp
  6090   002BA4  CFF4 F053          	movff	prodh,___flmul@temp+1
  6091   002BA8  5052               	movf	___flmul@temp^0,w,c
  6092   002BAA  264E               	addwf	___flmul@prod^0,f,c
  6093   002BAC  5053               	movf	(___flmul@temp+1)^0,w,c
  6094   002BAE  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6095   002BB0  0E00               	movlw	0
  6096   002BB2  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6097   002BB4  0E00               	movlw	0
  6098   002BB6  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6099   002BB8  5041               	movf	(___flmul@a+2)^0,w,c
  6100   002BBA  023D               	mulwf	(___flmul@b+2)^0,c
  6101   002BBC  CFF3 F052          	movff	prodl,___flmul@temp
  6102   002BC0  CFF4 F053          	movff	prodh,___flmul@temp+1
  6103   002BC4  5052               	movf	___flmul@temp^0,w,c
  6104   002BC6  6E43               	movwf	??___flmul^0,c
  6105   002BC8  5053               	movf	(___flmul@temp+1)^0,w,c
  6106   002BCA  6E44               	movwf	(??___flmul+1)^0,c
  6107   002BCC  6A45               	clrf	(??___flmul+2)^0,c
  6108   002BCE  6A46               	clrf	(??___flmul+3)^0,c
  6109   002BD0  C045  F046         	movff	??___flmul+2,??___flmul+3
  6110   002BD4  C044  F045         	movff	??___flmul+1,??___flmul+2
  6111   002BD8  C043  F044         	movff	??___flmul,??___flmul+1
  6112   002BDC  6A43               	clrf	??___flmul^0,c
  6113   002BDE  5043               	movf	??___flmul^0,w,c
  6114   002BE0  264E               	addwf	___flmul@prod^0,f,c
  6115   002BE2  5044               	movf	(??___flmul+1)^0,w,c
  6116   002BE4  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6117   002BE6  5045               	movf	(??___flmul+2)^0,w,c
  6118   002BE8  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6119   002BEA  5046               	movf	(??___flmul+3)^0,w,c
  6120   002BEC  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6121   002BEE  C048  F043         	movff	___flmul@grs,??___flmul
  6122   002BF2  C049  F044         	movff	___flmul@grs+1,??___flmul+1
  6123   002BF6  C04A  F045         	movff	___flmul@grs+2,??___flmul+2
  6124   002BFA  C04B  F046         	movff	___flmul@grs+3,??___flmul+3
  6125   002BFE  0E19               	movlw	25
  6126   002C00  EF07  F016         	goto	u3300
  6127   002C04                     u3305:
  6128   002C04  90D8               	bcf	status,0,c
  6129   002C06  3246               	rrcf	(??___flmul+3)^0,f,c
  6130   002C08  3245               	rrcf	(??___flmul+2)^0,f,c
  6131   002C0A  3244               	rrcf	(??___flmul+1)^0,f,c
  6132   002C0C  3243               	rrcf	??___flmul^0,f,c
  6133   002C0E                     u3300:
  6134   002C0E  2EE8               	decfsz	wreg,f,c
  6135   002C10  EF02  F016         	goto	u3305
  6136   002C14  5043               	movf	??___flmul^0,w,c
  6137   002C16  264E               	addwf	___flmul@prod^0,f,c
  6138   002C18  5044               	movf	(??___flmul+1)^0,w,c
  6139   002C1A  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6140   002C1C  5045               	movf	(??___flmul+2)^0,w,c
  6141   002C1E  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6142   002C20  5046               	movf	(??___flmul+3)^0,w,c
  6143   002C22  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6144   002C24  C04A  F04B         	movff	___flmul@grs+2,___flmul@grs+3
  6145   002C28  C049  F04A         	movff	___flmul@grs+1,___flmul@grs+2
  6146   002C2C  C048  F049         	movff	___flmul@grs,___flmul@grs+1
  6147   002C30  6A48               	clrf	___flmul@grs^0,c
  6148   002C32  504C               	movf	___flmul@aexp^0,w,c
  6149   002C34  C04D  F043         	movff	___flmul@bexp,??___flmul
  6150   002C38  6A44               	clrf	(??___flmul+1)^0,c
  6151   002C3A  2643               	addwf	??___flmul^0,f,c
  6152   002C3C  0E00               	movlw	0
  6153   002C3E  2244               	addwfc	(??___flmul+1)^0,f,c
  6154   002C40  0E82               	movlw	130
  6155   002C42  2443               	addwf	??___flmul^0,w,c
  6156   002C44  6E52               	movwf	___flmul@temp^0,c
  6157   002C46  0EFF               	movlw	255
  6158   002C48  2044               	addwfc	(??___flmul+1)^0,w,c
  6159   002C4A  6E53               	movwf	(___flmul@temp+1)^0,c
  6160   002C4C  EF3D  F016         	goto	l3396
  6161   002C50                     l3390:
  6162   002C50  90D8               	bcf	status,0,c
  6163   002C52  364E               	rlcf	___flmul@prod^0,f,c
  6164   002C54  364F               	rlcf	(___flmul@prod+1)^0,f,c
  6165   002C56  3650               	rlcf	(___flmul@prod+2)^0,f,c
  6166   002C58  3651               	rlcf	(___flmul@prod+3)^0,f,c
  6167   002C5A  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6168   002C5C  EF32  F016         	goto	u3311
  6169   002C60  EF34  F016         	goto	u3310
  6170   002C64                     u3311:
  6171   002C64  EF35  F016         	goto	l1224
  6172   002C68                     u3310:
  6173   002C68  804E               	bsf	___flmul@prod^0,0,c
  6174   002C6A                     l1224:
  6175   002C6A  90D8               	bcf	status,0,c
  6176   002C6C  3648               	rlcf	___flmul@grs^0,f,c
  6177   002C6E  3649               	rlcf	(___flmul@grs+1)^0,f,c
  6178   002C70  364A               	rlcf	(___flmul@grs+2)^0,f,c
  6179   002C72  364B               	rlcf	(___flmul@grs+3)^0,f,c
  6180   002C74  0652               	decf	___flmul@temp^0,f,c
  6181   002C76  A0D8               	btfss	status,0,c
  6182   002C78  0653               	decf	(___flmul@temp+1)^0,f,c
  6183   002C7A                     l3396:
  6184   002C7A  AE50               	btfss	(___flmul@prod+2)^0,7,c
  6185   002C7C  EF42  F016         	goto	u3321
  6186   002C80  EF44  F016         	goto	u3320
  6187   002C84                     u3321:
  6188   002C84  EF28  F016         	goto	l3390
  6189   002C88                     u3320:
  6190   002C88  0E00               	movlw	0
  6191   002C8A  6E4C               	movwf	___flmul@aexp^0,c
  6192   002C8C  AE4B               	btfss	(___flmul@grs+3)^0,7,c
  6193   002C8E  EF4B  F016         	goto	u3331
  6194   002C92  EF4D  F016         	goto	u3330
  6195   002C96                     u3331:
  6196   002C96  EF71  F016         	goto	l1226
  6197   002C9A                     u3330:
  6198   002C9A  0EFF               	movlw	255
  6199   002C9C  1448               	andwf	___flmul@grs^0,w,c
  6200   002C9E  6E43               	movwf	??___flmul^0,c
  6201   002CA0  0EFF               	movlw	255
  6202   002CA2  1449               	andwf	(___flmul@grs+1)^0,w,c
  6203   002CA4  6E44               	movwf	(??___flmul+1)^0,c
  6204   002CA6  0EFF               	movlw	255
  6205   002CA8  144A               	andwf	(___flmul@grs+2)^0,w,c
  6206   002CAA  6E45               	movwf	(??___flmul+2)^0,c
  6207   002CAC  0E7F               	movlw	127
  6208   002CAE  144B               	andwf	(___flmul@grs+3)^0,w,c
  6209   002CB0  6E46               	movwf	(??___flmul+3)^0,c
  6210   002CB2  5043               	movf	??___flmul^0,w,c
  6211   002CB4  1044               	iorwf	(??___flmul+1)^0,w,c
  6212   002CB6  1045               	iorwf	(??___flmul+2)^0,w,c
  6213   002CB8  1046               	iorwf	(??___flmul+3)^0,w,c
  6214   002CBA  B4D8               	btfsc	status,2,c
  6215   002CBC  EF62  F016         	goto	u3341
  6216   002CC0  EF64  F016         	goto	u3340
  6217   002CC4                     u3341:
  6218   002CC4  EF68  F016         	goto	l1227
  6219   002CC8                     u3340:
  6220   002CC8                     l3404:
  6221   002CC8  0E01               	movlw	1
  6222   002CCA  6E4C               	movwf	___flmul@aexp^0,c
  6223   002CCC  EF71  F016         	goto	l1226
  6224   002CD0                     l1227:
  6225   002CD0  A04E               	btfss	___flmul@prod^0,0,c
  6226   002CD2  EF6D  F016         	goto	u3351
  6227   002CD6  EF6F  F016         	goto	u3350
  6228   002CDA                     u3351:
  6229   002CDA  EF71  F016         	goto	l1226
  6230   002CDE                     u3350:
  6231   002CDE  EF64  F016         	goto	l3404
  6232   002CE2                     l1226:
  6233   002CE2  504C               	movf	___flmul@aexp^0,w,c
  6234   002CE4  B4D8               	btfsc	status,2,c
  6235   002CE6  EF77  F016         	goto	u3361
  6236   002CEA  EF79  F016         	goto	u3360
  6237   002CEE                     u3361:
  6238   002CEE  EF9D  F016         	goto	l3416
  6239   002CF2                     u3360:
  6240   002CF2  0E01               	movlw	1
  6241   002CF4  264E               	addwf	___flmul@prod^0,f,c
  6242   002CF6  0E00               	movlw	0
  6243   002CF8  224F               	addwfc	(___flmul@prod+1)^0,f,c
  6244   002CFA  2250               	addwfc	(___flmul@prod+2)^0,f,c
  6245   002CFC  2251               	addwfc	(___flmul@prod+3)^0,f,c
  6246   002CFE  A051               	btfss	(___flmul@prod+3)^0,0,c
  6247   002D00  EF84  F016         	goto	u3371
  6248   002D04  EF86  F016         	goto	u3370
  6249   002D08                     u3371:
  6250   002D08  EF9D  F016         	goto	l3416
  6251   002D0C                     u3370:
  6252   002D0C  C04E  F043         	movff	___flmul@prod,??___flmul
  6253   002D10  C04F  F044         	movff	___flmul@prod+1,??___flmul+1
  6254   002D14  C050  F045         	movff	___flmul@prod+2,??___flmul+2
  6255   002D18  C051  F046         	movff	___flmul@prod+3,??___flmul+3
  6256   002D1C  3446               	rlcf	(??___flmul+3)^0,w,c
  6257   002D1E  3246               	rrcf	(??___flmul+3)^0,f,c
  6258   002D20  3245               	rrcf	(??___flmul+2)^0,f,c
  6259   002D22  3244               	rrcf	(??___flmul+1)^0,f,c
  6260   002D24  3243               	rrcf	??___flmul^0,f,c
  6261   002D26  C043  F04E         	movff	??___flmul,___flmul@prod
  6262   002D2A  C044  F04F         	movff	??___flmul+1,___flmul@prod+1
  6263   002D2E  C045  F050         	movff	??___flmul+2,___flmul@prod+2
  6264   002D32  C046  F051         	movff	??___flmul+3,___flmul@prod+3
  6265   002D36  4A52               	infsnz	___flmul@temp^0,f,c
  6266   002D38  2A53               	incf	(___flmul@temp+1)^0,f,c
  6267   002D3A                     l3416:
  6268   002D3A  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6269   002D3C  EFA8  F016         	goto	u3381
  6270   002D40  5053               	movf	(___flmul@temp+1)^0,w,c
  6271   002D42  E108               	bnz	u3380
  6272   002D44  2852               	incf	___flmul@temp^0,w,c
  6273   002D46  A0D8               	btfss	status,0,c
  6274   002D48  EFA8  F016         	goto	u3381
  6275   002D4C  EFAA  F016         	goto	u3380
  6276   002D50                     u3381:
  6277   002D50  EFB4  F016         	goto	l3420
  6278   002D54                     u3380:
  6279   002D54  0E00               	movlw	0
  6280   002D56  6E4E               	movwf	___flmul@prod^0,c
  6281   002D58  0E00               	movlw	0
  6282   002D5A  6E4F               	movwf	(___flmul@prod+1)^0,c
  6283   002D5C  0E80               	movlw	128
  6284   002D5E  6E50               	movwf	(___flmul@prod+2)^0,c
  6285   002D60  0E7F               	movlw	127
  6286   002D62  6E51               	movwf	(___flmul@prod+3)^0,c
  6287   002D64  EFE2  F016         	goto	l3432
  6288   002D68                     l3420:
  6289   002D68  BE53               	btfsc	(___flmul@temp+1)^0,7,c
  6290   002D6A  EFC1  F016         	goto	u3390
  6291   002D6E  5053               	movf	(___flmul@temp+1)^0,w,c
  6292   002D70  E106               	bnz	u3391
  6293   002D72  0452               	decf	___flmul@temp^0,w,c
  6294   002D74  B0D8               	btfsc	status,0,c
  6295   002D76  EFBF  F016         	goto	u3391
  6296   002D7A  EFC1  F016         	goto	u3390
  6297   002D7E                     u3391:
  6298   002D7E  EFCD  F016         	goto	l1234
  6299   002D82                     u3390:
  6300   002D82  0E00               	movlw	0
  6301   002D84  6E4E               	movwf	___flmul@prod^0,c
  6302   002D86  0E00               	movlw	0
  6303   002D88  6E4F               	movwf	(___flmul@prod+1)^0,c
  6304   002D8A  0E00               	movlw	0
  6305   002D8C  6E50               	movwf	(___flmul@prod+2)^0,c
  6306   002D8E  0E00               	movlw	0
  6307   002D90  6E51               	movwf	(___flmul@prod+3)^0,c
  6308   002D92  0E00               	movlw	0
  6309   002D94  6E47               	movwf	___flmul@sign^0,c
  6310   002D96  EFE2  F016         	goto	l3432
  6311   002D9A                     l1234:
  6312   002D9A  C052  F04D         	movff	___flmul@temp,___flmul@bexp
  6313   002D9E  0EFF               	movlw	255
  6314   002DA0  164E               	andwf	___flmul@prod^0,f,c
  6315   002DA2  0EFF               	movlw	255
  6316   002DA4  164F               	andwf	(___flmul@prod+1)^0,f,c
  6317   002DA6  0E7F               	movlw	127
  6318   002DA8  1650               	andwf	(___flmul@prod+2)^0,f,c
  6319   002DAA  0E00               	movlw	0
  6320   002DAC  1651               	andwf	(___flmul@prod+3)^0,f,c
  6321   002DAE  A04D               	btfss	___flmul@bexp^0,0,c
  6322   002DB0  EFDC  F016         	goto	u3401
  6323   002DB4  EFDE  F016         	goto	u3400
  6324   002DB8                     u3401:
  6325   002DB8  EFDF  F016         	goto	l3430
  6326   002DBC                     u3400:
  6327   002DBC  8E50               	bsf	(___flmul@prod+2)^0,7,c
  6328   002DBE                     l3430:
  6329   002DBE  90D8               	bcf	status,0,c
  6330   002DC0  304D               	rrcf	___flmul@bexp^0,w,c
  6331   002DC2  6E51               	movwf	(___flmul@prod+3)^0,c
  6332   002DC4                     l3432:
  6333   002DC4  5047               	movf	___flmul@sign^0,w,c
  6334   002DC6  1251               	iorwf	(___flmul@prod+3)^0,f,c
  6335   002DC8  C04E  F03B         	movff	___flmul@prod,?___flmul
  6336   002DCC  C04F  F03C         	movff	___flmul@prod+1,?___flmul+1
  6337   002DD0  C050  F03D         	movff	___flmul@prod+2,?___flmul+2
  6338   002DD4  C051  F03E         	movff	___flmul@prod+3,?___flmul+3
  6339   002DD8                     l1221:
  6340   002DD8  0012               	return		;funcret
  6341   002DDA                     __end_of___flmul:
  6342                           	callstack 0
  6343                           
  6344 ;; *************** function ___fleq *****************
  6345 ;; Defined at:
  6346 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;  ff1             4    0[COMRAM] unsigned char 
  6349 ;;  ff2             4    4[COMRAM] unsigned char 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;		None               void
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6361 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6364 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;Total ram usage:       12 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_custom_floatmodulo
  6371 ;;		_RGB_to_HSV
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text24
  6376   0047F6                     __ptext24:
  6377                           	callstack 0
  6378   0047F6                     ___fleq:
  6379                           	callstack 26
  6380   0047F6  0E00               	movlw	0
  6381   0047F8  1401               	andwf	___fleq@ff1^0,w,c
  6382   0047FA  6E09               	movwf	??___fleq^0,c
  6383   0047FC  0E00               	movlw	0
  6384   0047FE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6385   004800  6E0A               	movwf	(??___fleq+1)^0,c
  6386   004802  0E80               	movlw	128
  6387   004804  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6388   004806  6E0B               	movwf	(??___fleq+2)^0,c
  6389   004808  0E7F               	movlw	127
  6390   00480A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6391   00480C  6E0C               	movwf	(??___fleq+3)^0,c
  6392   00480E  5009               	movf	??___fleq^0,w,c
  6393   004810  100A               	iorwf	(??___fleq+1)^0,w,c
  6394   004812  100B               	iorwf	(??___fleq+2)^0,w,c
  6395   004814  100C               	iorwf	(??___fleq+3)^0,w,c
  6396   004816  A4D8               	btfss	status,2,c
  6397   004818  EF10  F024         	goto	u3411
  6398   00481C  EF12  F024         	goto	u3410
  6399   004820                     u3411:
  6400   004820  EF1A  F024         	goto	l3448
  6401   004824                     u3410:
  6402   004824  0E00               	movlw	0
  6403   004826  6E01               	movwf	___fleq@ff1^0,c
  6404   004828  0E00               	movlw	0
  6405   00482A  6E02               	movwf	(___fleq@ff1+1)^0,c
  6406   00482C  0E00               	movlw	0
  6407   00482E  6E03               	movwf	(___fleq@ff1+2)^0,c
  6408   004830  0E00               	movlw	0
  6409   004832  6E04               	movwf	(___fleq@ff1+3)^0,c
  6410   004834                     l3448:
  6411   004834  0E00               	movlw	0
  6412   004836  1405               	andwf	___fleq@ff2^0,w,c
  6413   004838  6E09               	movwf	??___fleq^0,c
  6414   00483A  0E00               	movlw	0
  6415   00483C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6416   00483E  6E0A               	movwf	(??___fleq+1)^0,c
  6417   004840  0E80               	movlw	128
  6418   004842  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6419   004844  6E0B               	movwf	(??___fleq+2)^0,c
  6420   004846  0E7F               	movlw	127
  6421   004848  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6422   00484A  6E0C               	movwf	(??___fleq+3)^0,c
  6423   00484C  5009               	movf	??___fleq^0,w,c
  6424   00484E  100A               	iorwf	(??___fleq+1)^0,w,c
  6425   004850  100B               	iorwf	(??___fleq+2)^0,w,c
  6426   004852  100C               	iorwf	(??___fleq+3)^0,w,c
  6427   004854  A4D8               	btfss	status,2,c
  6428   004856  EF2F  F024         	goto	u3421
  6429   00485A  EF31  F024         	goto	u3420
  6430   00485E                     u3421:
  6431   00485E  EF39  F024         	goto	l3452
  6432   004862                     u3420:
  6433   004862  0E00               	movlw	0
  6434   004864  6E05               	movwf	___fleq@ff2^0,c
  6435   004866  0E00               	movlw	0
  6436   004868  6E06               	movwf	(___fleq@ff2+1)^0,c
  6437   00486A  0E00               	movlw	0
  6438   00486C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6439   00486E  0E00               	movlw	0
  6440   004870  6E08               	movwf	(___fleq@ff2+3)^0,c
  6441   004872                     l3452:
  6442   004872  5005               	movf	___fleq@ff2^0,w,c
  6443   004874  1801               	xorwf	___fleq@ff1^0,w,c
  6444   004876  E10F               	bnz	u3430
  6445   004878  5006               	movf	(___fleq@ff2+1)^0,w,c
  6446   00487A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6447   00487C  E10C               	bnz	u3430
  6448   00487E  5007               	movf	(___fleq@ff2+2)^0,w,c
  6449   004880  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6450   004882  E109               	bnz	u3430
  6451   004884  5008               	movf	(___fleq@ff2+3)^0,w,c
  6452   004886  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6453   004888  B4D8               	btfsc	status,2,c
  6454   00488A  EF49  F024         	goto	u3431
  6455   00488E  EF4B  F024         	goto	u3430
  6456   004892                     u3431:
  6457   004892  EF4E  F024         	goto	l3456
  6458   004896                     u3430:
  6459   004896  90D8               	bcf	status,0,c
  6460   004898  EF4F  F024         	goto	l862
  6461   00489C                     l3456:
  6462   00489C  80D8               	bsf	status,0,c
  6463   00489E                     l862:
  6464   00489E  0012               	return		;funcret
  6465   0048A0                     __end_of___fleq:
  6466                           	callstack 0
  6467                           
  6468 ;; *************** function ___fldiv *****************
  6469 ;; Defined at:
  6470 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  b               4   33[COMRAM] unsigned char 
  6473 ;;  a               4   37[COMRAM] unsigned char 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  grs             4   52[COMRAM] unsigned long 
  6476 ;;  rem             4   45[COMRAM] unsigned long 
  6477 ;;  new_exp         2   50[COMRAM] short 
  6478 ;;  aexp            1   57[COMRAM] unsigned char 
  6479 ;;  bexp            1   56[COMRAM] unsigned char 
  6480 ;;  sign            1   49[COMRAM] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  4   33[COMRAM] unsigned char 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6490 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6494 ;;Total ram usage:       25 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_custom_floatmodulo
  6500 ;;		_RGB_to_HSV
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text25
  6505   0031F0                     __ptext25:
  6506                           	callstack 0
  6507   0031F0                     ___fldiv:
  6508                           	callstack 26
  6509   0031F0  5025               	movf	(___fldiv@b+3)^0,w,c
  6510   0031F2  0B80               	andlw	128
  6511   0031F4  6E32               	movwf	___fldiv@sign^0,c
  6512   0031F6  5025               	movf	(___fldiv@b+3)^0,w,c
  6513   0031F8  2425               	addwf	(___fldiv@b+3)^0,w,c
  6514   0031FA  6E39               	movwf	___fldiv@bexp^0,c
  6515   0031FC  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6516   0031FE  EF03  F019         	goto	u2991
  6517   003202  EF05  F019         	goto	u2990
  6518   003206                     u2991:
  6519   003206  EF06  F019         	goto	l3176
  6520   00320A                     u2990:
  6521   00320A  8039               	bsf	___fldiv@bexp^0,0,c
  6522   00320C                     l3176:
  6523   00320C  5039               	movf	___fldiv@bexp^0,w,c
  6524   00320E  B4D8               	btfsc	status,2,c
  6525   003210  EF0C  F019         	goto	u3001
  6526   003214  EF0E  F019         	goto	u3000
  6527   003218                     u3001:
  6528   003218  EF23  F019         	goto	l3186
  6529   00321C                     u3000:
  6530   00321C  2839               	incf	___fldiv@bexp^0,w,c
  6531   00321E  A4D8               	btfss	status,2,c
  6532   003220  EF14  F019         	goto	u3011
  6533   003224  EF16  F019         	goto	u3010
  6534   003228                     u3011:
  6535   003228  EF1E  F019         	goto	l3182
  6536   00322C                     u3010:
  6537   00322C  0E00               	movlw	0
  6538   00322E  6E22               	movwf	___fldiv@b^0,c
  6539   003230  0E00               	movlw	0
  6540   003232  6E23               	movwf	(___fldiv@b+1)^0,c
  6541   003234  0E00               	movlw	0
  6542   003236  6E24               	movwf	(___fldiv@b+2)^0,c
  6543   003238  0E00               	movlw	0
  6544   00323A  6E25               	movwf	(___fldiv@b+3)^0,c
  6545   00323C                     l3182:
  6546   00323C  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6547   00323E  0E00               	movlw	0
  6548   003240  6E25               	movwf	(___fldiv@b+3)^0,c
  6549   003242  EF2B  F019         	goto	l3188
  6550   003246                     l3186:
  6551   003246  0E00               	movlw	0
  6552   003248  6E22               	movwf	___fldiv@b^0,c
  6553   00324A  0E00               	movlw	0
  6554   00324C  6E23               	movwf	(___fldiv@b+1)^0,c
  6555   00324E  0E00               	movlw	0
  6556   003250  6E24               	movwf	(___fldiv@b+2)^0,c
  6557   003252  0E00               	movlw	0
  6558   003254  6E25               	movwf	(___fldiv@b+3)^0,c
  6559   003256                     l3188:
  6560   003256  5029               	movf	(___fldiv@a+3)^0,w,c
  6561   003258  0B80               	andlw	128
  6562   00325A  1A32               	xorwf	___fldiv@sign^0,f,c
  6563   00325C  5029               	movf	(___fldiv@a+3)^0,w,c
  6564   00325E  2429               	addwf	(___fldiv@a+3)^0,w,c
  6565   003260  6E3A               	movwf	___fldiv@aexp^0,c
  6566   003262  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6567   003264  EF36  F019         	goto	u3021
  6568   003268  EF38  F019         	goto	u3020
  6569   00326C                     u3021:
  6570   00326C  EF39  F019         	goto	l3196
  6571   003270                     u3020:
  6572   003270  803A               	bsf	___fldiv@aexp^0,0,c
  6573   003272                     l3196:
  6574   003272  503A               	movf	___fldiv@aexp^0,w,c
  6575   003274  B4D8               	btfsc	status,2,c
  6576   003276  EF3F  F019         	goto	u3031
  6577   00327A  EF41  F019         	goto	u3030
  6578   00327E                     u3031:
  6579   00327E  EF56  F019         	goto	l3206
  6580   003282                     u3030:
  6581   003282  283A               	incf	___fldiv@aexp^0,w,c
  6582   003284  A4D8               	btfss	status,2,c
  6583   003286  EF47  F019         	goto	u3041
  6584   00328A  EF49  F019         	goto	u3040
  6585   00328E                     u3041:
  6586   00328E  EF51  F019         	goto	l3202
  6587   003292                     u3040:
  6588   003292  0E00               	movlw	0
  6589   003294  6E26               	movwf	___fldiv@a^0,c
  6590   003296  0E00               	movlw	0
  6591   003298  6E27               	movwf	(___fldiv@a+1)^0,c
  6592   00329A  0E00               	movlw	0
  6593   00329C  6E28               	movwf	(___fldiv@a+2)^0,c
  6594   00329E  0E00               	movlw	0
  6595   0032A0  6E29               	movwf	(___fldiv@a+3)^0,c
  6596   0032A2                     l3202:
  6597   0032A2  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6598   0032A4  0E00               	movlw	0
  6599   0032A6  6E29               	movwf	(___fldiv@a+3)^0,c
  6600   0032A8  EF5E  F019         	goto	l3208
  6601   0032AC                     l3206:
  6602   0032AC  0E00               	movlw	0
  6603   0032AE  6E26               	movwf	___fldiv@a^0,c
  6604   0032B0  0E00               	movlw	0
  6605   0032B2  6E27               	movwf	(___fldiv@a+1)^0,c
  6606   0032B4  0E00               	movlw	0
  6607   0032B6  6E28               	movwf	(___fldiv@a+2)^0,c
  6608   0032B8  0E00               	movlw	0
  6609   0032BA  6E29               	movwf	(___fldiv@a+3)^0,c
  6610   0032BC                     l3208:
  6611   0032BC  5026               	movf	___fldiv@a^0,w,c
  6612   0032BE  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6613   0032C0  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6614   0032C2  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6615   0032C4  A4D8               	btfss	status,2,c
  6616   0032C6  EF67  F019         	goto	u3051
  6617   0032CA  EF69  F019         	goto	u3050
  6618   0032CE                     u3051:
  6619   0032CE  EF81  F019         	goto	l3220
  6620   0032D2                     u3050:
  6621   0032D2  0E00               	movlw	0
  6622   0032D4  6E22               	movwf	___fldiv@b^0,c
  6623   0032D6  0E00               	movlw	0
  6624   0032D8  6E23               	movwf	(___fldiv@b+1)^0,c
  6625   0032DA  0E00               	movlw	0
  6626   0032DC  6E24               	movwf	(___fldiv@b+2)^0,c
  6627   0032DE  0E00               	movlw	0
  6628   0032E0  6E25               	movwf	(___fldiv@b+3)^0,c
  6629   0032E2  0E80               	movlw	128
  6630   0032E4  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6631   0032E6  0E7F               	movlw	127
  6632   0032E8  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6633   0032EA                     l3214:
  6634   0032EA  5032               	movf	___fldiv@sign^0,w,c
  6635   0032EC  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6636   0032EE  C022  F022         	movff	___fldiv@b,?___fldiv
  6637   0032F2  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6638   0032F6  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6639   0032FA  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6640   0032FE  EFC4  F01A         	goto	l1185
  6641   003302                     l3220:
  6642   003302  5039               	movf	___fldiv@bexp^0,w,c
  6643   003304  A4D8               	btfss	status,2,c
  6644   003306  EF87  F019         	goto	u3061
  6645   00330A  EF89  F019         	goto	u3060
  6646   00330E                     u3061:
  6647   00330E  EF93  F019         	goto	l3228
  6648   003312                     u3060:
  6649   003312  0E00               	movlw	0
  6650   003314  6E22               	movwf	?___fldiv^0,c
  6651   003316  0E00               	movlw	0
  6652   003318  6E23               	movwf	(?___fldiv+1)^0,c
  6653   00331A  0E00               	movlw	0
  6654   00331C  6E24               	movwf	(?___fldiv+2)^0,c
  6655   00331E  0E00               	movlw	0
  6656   003320  6E25               	movwf	(?___fldiv+3)^0,c
  6657   003322  EFC4  F01A         	goto	l1185
  6658   003326                     l3228:
  6659   003326  503A               	movf	___fldiv@aexp^0,w,c
  6660   003328  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6661   00332C  6A2B               	clrf	(??___fldiv+1)^0,c
  6662   00332E  5E2A               	subwf	??___fldiv^0,f,c
  6663   003330  0E00               	movlw	0
  6664   003332  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6665   003334  0E7F               	movlw	127
  6666   003336  242A               	addwf	??___fldiv^0,w,c
  6667   003338  6E33               	movwf	___fldiv@new_exp^0,c
  6668   00333A  0E00               	movlw	0
  6669   00333C  202B               	addwfc	(??___fldiv+1)^0,w,c
  6670   00333E  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6671   003340  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6672   003344  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6673   003348  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6674   00334C  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6675   003350  0E00               	movlw	0
  6676   003352  6E22               	movwf	___fldiv@b^0,c
  6677   003354  0E00               	movlw	0
  6678   003356  6E23               	movwf	(___fldiv@b+1)^0,c
  6679   003358  0E00               	movlw	0
  6680   00335A  6E24               	movwf	(___fldiv@b+2)^0,c
  6681   00335C  0E00               	movlw	0
  6682   00335E  6E25               	movwf	(___fldiv@b+3)^0,c
  6683   003360  0E00               	movlw	0
  6684   003362  6E35               	movwf	___fldiv@grs^0,c
  6685   003364  0E00               	movlw	0
  6686   003366  6E36               	movwf	(___fldiv@grs+1)^0,c
  6687   003368  0E00               	movlw	0
  6688   00336A  6E37               	movwf	(___fldiv@grs+2)^0,c
  6689   00336C  0E00               	movlw	0
  6690   00336E  6E38               	movwf	(___fldiv@grs+3)^0,c
  6691   003370  0E00               	movlw	0
  6692   003372  6E3A               	movwf	___fldiv@aexp^0,c
  6693   003374  EFF4  F019         	goto	l1187
  6694   003378                     l3238:
  6695   003378  503A               	movf	___fldiv@aexp^0,w,c
  6696   00337A  B4D8               	btfsc	status,2,c
  6697   00337C  EFC2  F019         	goto	u3071
  6698   003380  EFC4  F019         	goto	u3070
  6699   003384                     u3071:
  6700   003384  EFDB  F019         	goto	l3246
  6701   003388                     u3070:
  6702   003388  90D8               	bcf	status,0,c
  6703   00338A  362E               	rlcf	___fldiv@rem^0,f,c
  6704   00338C  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6705   00338E  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6706   003390  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6707   003392  90D8               	bcf	status,0,c
  6708   003394  3622               	rlcf	___fldiv@b^0,f,c
  6709   003396  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6710   003398  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6711   00339A  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6712   00339C  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6713   00339E  EFD3  F019         	goto	u3081
  6714   0033A2  EFD5  F019         	goto	u3080
  6715   0033A6                     u3081:
  6716   0033A6  EFD6  F019         	goto	l1190
  6717   0033AA                     u3080:
  6718   0033AA  8022               	bsf	___fldiv@b^0,0,c
  6719   0033AC                     l1190:
  6720   0033AC  90D8               	bcf	status,0,c
  6721   0033AE  3635               	rlcf	___fldiv@grs^0,f,c
  6722   0033B0  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6723   0033B2  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6724   0033B4  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6725   0033B6                     l3246:
  6726   0033B6  5026               	movf	___fldiv@a^0,w,c
  6727   0033B8  5C2E               	subwf	___fldiv@rem^0,w,c
  6728   0033BA  5027               	movf	(___fldiv@a+1)^0,w,c
  6729   0033BC  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6730   0033BE  5028               	movf	(___fldiv@a+2)^0,w,c
  6731   0033C0  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6732   0033C2  5029               	movf	(___fldiv@a+3)^0,w,c
  6733   0033C4  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6734   0033C6  A0D8               	btfss	status,0,c
  6735   0033C8  EFE8  F019         	goto	u3091
  6736   0033CC  EFEA  F019         	goto	u3090
  6737   0033D0                     u3091:
  6738   0033D0  EFF3  F019         	goto	l3252
  6739   0033D4                     u3090:
  6740   0033D4  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6741   0033D6  5026               	movf	___fldiv@a^0,w,c
  6742   0033D8  5E2E               	subwf	___fldiv@rem^0,f,c
  6743   0033DA  5027               	movf	(___fldiv@a+1)^0,w,c
  6744   0033DC  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6745   0033DE  5028               	movf	(___fldiv@a+2)^0,w,c
  6746   0033E0  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6747   0033E2  5029               	movf	(___fldiv@a+3)^0,w,c
  6748   0033E4  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6749   0033E6                     l3252:
  6750   0033E6  2A3A               	incf	___fldiv@aexp^0,f,c
  6751   0033E8                     l1187:
  6752   0033E8  0E19               	movlw	25
  6753   0033EA  643A               	cpfsgt	___fldiv@aexp^0,c
  6754   0033EC  EFFA  F019         	goto	u3101
  6755   0033F0  EFFC  F019         	goto	u3100
  6756   0033F4                     u3101:
  6757   0033F4  EFBC  F019         	goto	l3238
  6758   0033F8                     u3100:
  6759   0033F8  502E               	movf	___fldiv@rem^0,w,c
  6760   0033FA  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6761   0033FC  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6762   0033FE  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6763   003400  B4D8               	btfsc	status,2,c
  6764   003402  EF05  F01A         	goto	u3111
  6765   003406  EF07  F01A         	goto	u3110
  6766   00340A                     u3111:
  6767   00340A  EF1F  F01A         	goto	l3264
  6768   00340E                     u3110:
  6769   00340E  8035               	bsf	___fldiv@grs^0,0,c
  6770   003410  EF1F  F01A         	goto	l3264
  6771   003414                     l3258:
  6772   003414  90D8               	bcf	status,0,c
  6773   003416  3622               	rlcf	___fldiv@b^0,f,c
  6774   003418  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6775   00341A  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6776   00341C  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6777   00341E  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6778   003420  EF14  F01A         	goto	u3121
  6779   003424  EF16  F01A         	goto	u3120
  6780   003428                     u3121:
  6781   003428  EF17  F01A         	goto	l1196
  6782   00342C                     u3120:
  6783   00342C  8022               	bsf	___fldiv@b^0,0,c
  6784   00342E                     l1196:
  6785   00342E  90D8               	bcf	status,0,c
  6786   003430  3635               	rlcf	___fldiv@grs^0,f,c
  6787   003432  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6788   003434  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6789   003436  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6790   003438  0633               	decf	___fldiv@new_exp^0,f,c
  6791   00343A  A0D8               	btfss	status,0,c
  6792   00343C  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6793   00343E                     l3264:
  6794   00343E  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6795   003440  EF24  F01A         	goto	u3131
  6796   003444  EF26  F01A         	goto	u3130
  6797   003448                     u3131:
  6798   003448  EF0A  F01A         	goto	l3258
  6799   00344C                     u3130:
  6800   00344C  0E00               	movlw	0
  6801   00344E  6E3A               	movwf	___fldiv@aexp^0,c
  6802   003450  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6803   003452  EF2D  F01A         	goto	u3141
  6804   003456  EF2F  F01A         	goto	u3140
  6805   00345A                     u3141:
  6806   00345A  EF53  F01A         	goto	l1198
  6807   00345E                     u3140:
  6808   00345E  0EFF               	movlw	255
  6809   003460  1435               	andwf	___fldiv@grs^0,w,c
  6810   003462  6E2A               	movwf	??___fldiv^0,c
  6811   003464  0EFF               	movlw	255
  6812   003466  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6813   003468  6E2B               	movwf	(??___fldiv+1)^0,c
  6814   00346A  0EFF               	movlw	255
  6815   00346C  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6816   00346E  6E2C               	movwf	(??___fldiv+2)^0,c
  6817   003470  0E7F               	movlw	127
  6818   003472  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6819   003474  6E2D               	movwf	(??___fldiv+3)^0,c
  6820   003476  502A               	movf	??___fldiv^0,w,c
  6821   003478  102B               	iorwf	(??___fldiv+1)^0,w,c
  6822   00347A  102C               	iorwf	(??___fldiv+2)^0,w,c
  6823   00347C  102D               	iorwf	(??___fldiv+3)^0,w,c
  6824   00347E  B4D8               	btfsc	status,2,c
  6825   003480  EF44  F01A         	goto	u3151
  6826   003484  EF46  F01A         	goto	u3150
  6827   003488                     u3151:
  6828   003488  EF4A  F01A         	goto	l1199
  6829   00348C                     u3150:
  6830   00348C                     l3272:
  6831   00348C  0E01               	movlw	1
  6832   00348E  6E3A               	movwf	___fldiv@aexp^0,c
  6833   003490  EF53  F01A         	goto	l1198
  6834   003494                     l1199:
  6835   003494  A022               	btfss	___fldiv@b^0,0,c
  6836   003496  EF4F  F01A         	goto	u3161
  6837   00349A  EF51  F01A         	goto	u3160
  6838   00349E                     u3161:
  6839   00349E  EF53  F01A         	goto	l1198
  6840   0034A2                     u3160:
  6841   0034A2  EF46  F01A         	goto	l3272
  6842   0034A6                     l1198:
  6843   0034A6  503A               	movf	___fldiv@aexp^0,w,c
  6844   0034A8  B4D8               	btfsc	status,2,c
  6845   0034AA  EF59  F01A         	goto	u3171
  6846   0034AE  EF5B  F01A         	goto	u3170
  6847   0034B2                     u3171:
  6848   0034B2  EF7F  F01A         	goto	l3284
  6849   0034B6                     u3170:
  6850   0034B6  0E01               	movlw	1
  6851   0034B8  2622               	addwf	___fldiv@b^0,f,c
  6852   0034BA  0E00               	movlw	0
  6853   0034BC  2223               	addwfc	(___fldiv@b+1)^0,f,c
  6854   0034BE  2224               	addwfc	(___fldiv@b+2)^0,f,c
  6855   0034C0  2225               	addwfc	(___fldiv@b+3)^0,f,c
  6856   0034C2  A025               	btfss	(___fldiv@b+3)^0,0,c
  6857   0034C4  EF66  F01A         	goto	u3181
  6858   0034C8  EF68  F01A         	goto	u3180
  6859   0034CC                     u3181:
  6860   0034CC  EF7F  F01A         	goto	l3284
  6861   0034D0                     u3180:
  6862   0034D0  C022  F02A         	movff	___fldiv@b,??___fldiv
  6863   0034D4  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  6864   0034D8  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  6865   0034DC  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  6866   0034E0  342D               	rlcf	(??___fldiv+3)^0,w,c
  6867   0034E2  322D               	rrcf	(??___fldiv+3)^0,f,c
  6868   0034E4  322C               	rrcf	(??___fldiv+2)^0,f,c
  6869   0034E6  322B               	rrcf	(??___fldiv+1)^0,f,c
  6870   0034E8  322A               	rrcf	??___fldiv^0,f,c
  6871   0034EA  C02A  F022         	movff	??___fldiv,___fldiv@b
  6872   0034EE  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  6873   0034F2  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  6874   0034F6  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  6875   0034FA  4A33               	infsnz	___fldiv@new_exp^0,f,c
  6876   0034FC  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  6877   0034FE                     l3284:
  6878   0034FE  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6879   003500  EF8A  F01A         	goto	u3191
  6880   003504  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6881   003506  E108               	bnz	u3190
  6882   003508  2833               	incf	___fldiv@new_exp^0,w,c
  6883   00350A  A0D8               	btfss	status,0,c
  6884   00350C  EF8A  F01A         	goto	u3191
  6885   003510  EF8C  F01A         	goto	u3190
  6886   003514                     u3191:
  6887   003514  EF97  F01A         	goto	l3288
  6888   003518                     u3190:
  6889   003518  0E00               	movlw	0
  6890   00351A  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6891   00351C  6833               	setf	___fldiv@new_exp^0,c
  6892   00351E  0E00               	movlw	0
  6893   003520  6E22               	movwf	___fldiv@b^0,c
  6894   003522  0E00               	movlw	0
  6895   003524  6E23               	movwf	(___fldiv@b+1)^0,c
  6896   003526  0E00               	movlw	0
  6897   003528  6E24               	movwf	(___fldiv@b+2)^0,c
  6898   00352A  0E00               	movlw	0
  6899   00352C  6E25               	movwf	(___fldiv@b+3)^0,c
  6900   00352E                     l3288:
  6901   00352E  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6902   003530  EFA4  F01A         	goto	u3200
  6903   003534  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6904   003536  E106               	bnz	u3201
  6905   003538  0433               	decf	___fldiv@new_exp^0,w,c
  6906   00353A  B0D8               	btfsc	status,0,c
  6907   00353C  EFA2  F01A         	goto	u3201
  6908   003540  EFA4  F01A         	goto	u3200
  6909   003544                     u3201:
  6910   003544  EFB2  F01A         	goto	l3292
  6911   003548                     u3200:
  6912   003548  0E00               	movlw	0
  6913   00354A  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6914   00354C  0E00               	movlw	0
  6915   00354E  6E33               	movwf	___fldiv@new_exp^0,c
  6916   003550  0E00               	movlw	0
  6917   003552  6E22               	movwf	___fldiv@b^0,c
  6918   003554  0E00               	movlw	0
  6919   003556  6E23               	movwf	(___fldiv@b+1)^0,c
  6920   003558  0E00               	movlw	0
  6921   00355A  6E24               	movwf	(___fldiv@b+2)^0,c
  6922   00355C  0E00               	movlw	0
  6923   00355E  6E25               	movwf	(___fldiv@b+3)^0,c
  6924   003560  0E00               	movlw	0
  6925   003562  6E32               	movwf	___fldiv@sign^0,c
  6926   003564                     l3292:
  6927   003564  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  6928   003568  A039               	btfss	___fldiv@bexp^0,0,c
  6929   00356A  EFB9  F01A         	goto	u3211
  6930   00356E  EFBB  F01A         	goto	u3210
  6931   003572                     u3211:
  6932   003572  EFBE  F01A         	goto	l3298
  6933   003576                     u3210:
  6934   003576  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6935   003578  EFBF  F01A         	goto	l3300
  6936   00357C                     l3298:
  6937   00357C  9E24               	bcf	(___fldiv@b+2)^0,7,c
  6938   00357E                     l3300:
  6939   00357E  90D8               	bcf	status,0,c
  6940   003580  3039               	rrcf	___fldiv@bexp^0,w,c
  6941   003582  6E25               	movwf	(___fldiv@b+3)^0,c
  6942   003584  EF75  F019         	goto	l3214
  6943   003588                     l1185:
  6944   003588  0012               	return		;funcret
  6945   00358A                     __end_of___fldiv:
  6946                           	callstack 0
  6947                           
  6948 ;; *************** function ___flge *****************
  6949 ;; Defined at:
  6950 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  ff1             4    0[COMRAM] unsigned char 
  6953 ;;  ff2             4    4[COMRAM] unsigned char 
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;		None               void
  6958 ;; Registers used:
  6959 ;;		wreg, status,2, status,0
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6965 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6968 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;Total ram usage:       12 bytes
  6970 ;; Hardware stack levels used: 1
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_RGB_to_HSV
  6975 ;;		_color_cardCheck
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text26
  6980   0044A4                     __ptext26:
  6981                           	callstack 0
  6982   0044A4                     ___flge:
  6983                           	callstack 28
  6984   0044A4  0E00               	movlw	0
  6985   0044A6  1401               	andwf	___flge@ff1^0,w,c
  6986   0044A8  6E09               	movwf	??___flge^0,c
  6987   0044AA  0E00               	movlw	0
  6988   0044AC  1402               	andwf	(___flge@ff1+1)^0,w,c
  6989   0044AE  6E0A               	movwf	(??___flge+1)^0,c
  6990   0044B0  0E80               	movlw	128
  6991   0044B2  1403               	andwf	(___flge@ff1+2)^0,w,c
  6992   0044B4  6E0B               	movwf	(??___flge+2)^0,c
  6993   0044B6  0E7F               	movlw	127
  6994   0044B8  1404               	andwf	(___flge@ff1+3)^0,w,c
  6995   0044BA  6E0C               	movwf	(??___flge+3)^0,c
  6996   0044BC  5009               	movf	??___flge^0,w,c
  6997   0044BE  100A               	iorwf	(??___flge+1)^0,w,c
  6998   0044C0  100B               	iorwf	(??___flge+2)^0,w,c
  6999   0044C2  100C               	iorwf	(??___flge+3)^0,w,c
  7000   0044C4  A4D8               	btfss	status,2,c
  7001   0044C6  EF67  F022         	goto	u3641
  7002   0044CA  EF69  F022         	goto	u3640
  7003   0044CE                     u3641:
  7004   0044CE  EF71  F022         	goto	l3604
  7005   0044D2                     u3640:
  7006   0044D2  0E00               	movlw	0
  7007   0044D4  6E01               	movwf	___flge@ff1^0,c
  7008   0044D6  0E00               	movlw	0
  7009   0044D8  6E02               	movwf	(___flge@ff1+1)^0,c
  7010   0044DA  0E00               	movlw	0
  7011   0044DC  6E03               	movwf	(___flge@ff1+2)^0,c
  7012   0044DE  0E00               	movlw	0
  7013   0044E0  6E04               	movwf	(___flge@ff1+3)^0,c
  7014   0044E2                     l3604:
  7015   0044E2  0E00               	movlw	0
  7016   0044E4  1405               	andwf	___flge@ff2^0,w,c
  7017   0044E6  6E09               	movwf	??___flge^0,c
  7018   0044E8  0E00               	movlw	0
  7019   0044EA  1406               	andwf	(___flge@ff2+1)^0,w,c
  7020   0044EC  6E0A               	movwf	(??___flge+1)^0,c
  7021   0044EE  0E80               	movlw	128
  7022   0044F0  1407               	andwf	(___flge@ff2+2)^0,w,c
  7023   0044F2  6E0B               	movwf	(??___flge+2)^0,c
  7024   0044F4  0E7F               	movlw	127
  7025   0044F6  1408               	andwf	(___flge@ff2+3)^0,w,c
  7026   0044F8  6E0C               	movwf	(??___flge+3)^0,c
  7027   0044FA  5009               	movf	??___flge^0,w,c
  7028   0044FC  100A               	iorwf	(??___flge+1)^0,w,c
  7029   0044FE  100B               	iorwf	(??___flge+2)^0,w,c
  7030   004500  100C               	iorwf	(??___flge+3)^0,w,c
  7031   004502  A4D8               	btfss	status,2,c
  7032   004504  EF86  F022         	goto	u3651
  7033   004508  EF88  F022         	goto	u3650
  7034   00450C                     u3651:
  7035   00450C  EF90  F022         	goto	l3608
  7036   004510                     u3650:
  7037   004510  0E00               	movlw	0
  7038   004512  6E05               	movwf	___flge@ff2^0,c
  7039   004514  0E00               	movlw	0
  7040   004516  6E06               	movwf	(___flge@ff2+1)^0,c
  7041   004518  0E00               	movlw	0
  7042   00451A  6E07               	movwf	(___flge@ff2+2)^0,c
  7043   00451C  0E00               	movlw	0
  7044   00451E  6E08               	movwf	(___flge@ff2+3)^0,c
  7045   004520                     l3608:
  7046   004520  AE04               	btfss	(___flge@ff1+3)^0,7,c
  7047   004522  EF95  F022         	goto	u3661
  7048   004526  EF97  F022         	goto	u3660
  7049   00452A                     u3661:
  7050   00452A  EFA0  F022         	goto	l3612
  7051   00452E                     u3660:
  7052   00452E  6C01               	negf	___flge@ff1^0,c
  7053   004530  1E02               	comf	(___flge@ff1+1)^0,f,c
  7054   004532  B0D8               	btfsc	status,0,c
  7055   004534  2A02               	incf	(___flge@ff1+1)^0,f,c
  7056   004536  1E03               	comf	(___flge@ff1+2)^0,f,c
  7057   004538  B0D8               	btfsc	status,0,c
  7058   00453A  2A03               	incf	(___flge@ff1+2)^0,f,c
  7059   00453C  0E80               	movlw	128
  7060   00453E  5604               	subfwb	(___flge@ff1+3)^0,f,c
  7061   004540                     l3612:
  7062   004540  AE08               	btfss	(___flge@ff2+3)^0,7,c
  7063   004542  EFA5  F022         	goto	u3671
  7064   004546  EFA7  F022         	goto	u3670
  7065   00454A                     u3671:
  7066   00454A  EFB0  F022         	goto	l868
  7067   00454E                     u3670:
  7068   00454E  6C05               	negf	___flge@ff2^0,c
  7069   004550  1E06               	comf	(___flge@ff2+1)^0,f,c
  7070   004552  B0D8               	btfsc	status,0,c
  7071   004554  2A06               	incf	(___flge@ff2+1)^0,f,c
  7072   004556  1E07               	comf	(___flge@ff2+2)^0,f,c
  7073   004558  B0D8               	btfsc	status,0,c
  7074   00455A  2A07               	incf	(___flge@ff2+2)^0,f,c
  7075   00455C  0E80               	movlw	128
  7076   00455E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  7077   004560                     l868:
  7078   004560  0E00               	movlw	0
  7079   004562  1A01               	xorwf	___flge@ff1^0,f,c
  7080   004564  0E00               	movlw	0
  7081   004566  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  7082   004568  0E00               	movlw	0
  7083   00456A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  7084   00456C  0E80               	movlw	128
  7085   00456E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  7086   004570  0E00               	movlw	0
  7087   004572  1A05               	xorwf	___flge@ff2^0,f,c
  7088   004574  0E00               	movlw	0
  7089   004576  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  7090   004578  0E00               	movlw	0
  7091   00457A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  7092   00457C  0E80               	movlw	128
  7093   00457E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  7094   004580  5005               	movf	___flge@ff2^0,w,c
  7095   004582  5C01               	subwf	___flge@ff1^0,w,c
  7096   004584  5006               	movf	(___flge@ff2+1)^0,w,c
  7097   004586  5802               	subwfb	(___flge@ff1+1)^0,w,c
  7098   004588  5007               	movf	(___flge@ff2+2)^0,w,c
  7099   00458A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  7100   00458C  5008               	movf	(___flge@ff2+3)^0,w,c
  7101   00458E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  7102   004590  B0D8               	btfsc	status,0,c
  7103   004592  EFCD  F022         	goto	u3681
  7104   004596  EFCF  F022         	goto	u3680
  7105   00459A                     u3681:
  7106   00459A  EFD2  F022         	goto	l3618
  7107   00459E                     u3680:
  7108   00459E  90D8               	bcf	status,0,c
  7109   0045A0  EFD3  F022         	goto	l873
  7110   0045A4                     l3618:
  7111   0045A4  80D8               	bsf	status,0,c
  7112   0045A6                     l873:
  7113   0045A6  0012               	return		;funcret
  7114   0045A8                     __end_of___flge:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _maze_return *****************
  7118 ;; Defined at:
  7119 ;;		line 96 in file "pathfinder_file.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  c               2   32[COMRAM] PTR struct calibration_s
  7122 ;;		 -> calibration(9), 
  7123 ;;  mL              1   34[COMRAM] PTR struct DC_motor
  7124 ;;		 -> motorL(9), 
  7125 ;;  mR              1   35[COMRAM] PTR struct DC_motor
  7126 ;;		 -> motorR(9), 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  j               2   40[COMRAM] int 
  7129 ;;  distance_bac    1   39[COMRAM] unsigned char 
  7130 ;;  i               2   42[COMRAM] int 
  7131 ;;  i               2   44[COMRAM] int 
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7142 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7143 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7144 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7145 ;;Total ram usage:       14 bytes
  7146 ;; Hardware stack levels used: 1
  7147 ;; Hardware stack levels required when called: 3
  7148 ;; This function calls:
  7149 ;;		_backward
  7150 ;;		_forward
  7151 ;;		_leftTURN
  7152 ;;		_rightTURN
  7153 ;; This function is called by:
  7154 ;;		_main
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text27
  7159   001FFC                     __ptext27:
  7160                           	callstack 0
  7161   001FFC                     _maze_return:
  7162                           	callstack 27
  7163   001FFC  0E00               	movlw	0
  7164   001FFE  6E2E               	movwf	(maze_return@i+1)^0,c
  7165   002000  0E32               	movlw	50
  7166   002002  6E2D               	movwf	maze_return@i^0,c
  7167   002004                     l4856:
  7168                           
  7169                           ;pathfinder_file.c: 102:             if(Operation_History[i] > 10){
  7170   002004  0E3C               	movlw	low _Operation_History
  7171   002006  242D               	addwf	maze_return@i^0,w,c
  7172   002008  6ED9               	movwf	fsr2l,c
  7173   00200A  0E01               	movlw	high _Operation_History
  7174   00200C  202E               	addwfc	(maze_return@i+1)^0,w,c
  7175   00200E  6EDA               	movwf	fsr2h,c
  7176   002010  0E0A               	movlw	10
  7177   002012  64DF               	cpfsgt	indf2,c
  7178   002014  EF0E  F010         	goto	u5381
  7179   002018  EF10  F010         	goto	u5380
  7180   00201C                     u5381:
  7181   00201C  EF52  F010         	goto	l4870
  7182   002020                     u5380:
  7183   002020                     
  7184                           ;pathfinder_file.c: 103:                 unsigned char distance_back = Operation_History
      +                          [i] - 10;
  7185   002020  0E3C               	movlw	low _Operation_History
  7186   002022  242D               	addwf	maze_return@i^0,w,c
  7187   002024  6ED9               	movwf	fsr2l,c
  7188   002026  0E01               	movlw	high _Operation_History
  7189   002028  202E               	addwfc	(maze_return@i+1)^0,w,c
  7190   00202A  6EDA               	movwf	fsr2h,c
  7191   00202C  50DF               	movf	indf2,w,c
  7192   00202E  0FF6               	addlw	246
  7193   002030  6E28               	movwf	maze_return@distance_back^0,c
  7194   002032                     
  7195                           ;pathfinder_file.c: 104:                 for (int j = 0; j < distance_back-1; j++) {
  7196   002032  0E00               	movlw	0
  7197   002034  6E2A               	movwf	(maze_return@j+1)^0,c
  7198   002036  0E00               	movlw	0
  7199   002038  6E29               	movwf	maze_return@j^0,c
  7200   00203A  EF2E  F010         	goto	l4866
  7201   00203E                     l4862:
  7202                           
  7203                           ;pathfinder_file.c: 105:                     forward(c->forward_one, mL, mR);
  7204   00203E  C023  F013         	movff	maze_return@mL,forward@mL
  7205   002042  C024  F014         	movff	maze_return@mR,forward@mR
  7206   002046  EE20 F005          	lfsr	2,5
  7207   00204A  5021               	movf	maze_return@c^0,w,c
  7208   00204C  26D9               	addwf	fsr2l,f,c
  7209   00204E  5022               	movf	(maze_return@c+1)^0,w,c
  7210   002050  22DA               	addwfc	fsr2h,f,c
  7211   002052  50DF               	movf	indf2,w,c
  7212   002054  ECF2  F01C         	call	_forward
  7213   002058                     
  7214                           ;pathfinder_file.c: 106:                 }
  7215   002058  4A29               	infsnz	maze_return@j^0,f,c
  7216   00205A  2A2A               	incf	(maze_return@j+1)^0,f,c
  7217   00205C                     l4866:
  7218   00205C  0EFF               	movlw	255
  7219   00205E  2428               	addwf	maze_return@distance_back^0,w,c
  7220   002060  6E25               	movwf	??_maze_return^0,c
  7221   002062  6A26               	clrf	(??_maze_return+1)^0,c
  7222   002064  0EFF               	movlw	255
  7223   002066  2226               	addwfc	(??_maze_return+1)^0,f,c
  7224   002068  5025               	movf	??_maze_return^0,w,c
  7225   00206A  5C29               	subwf	maze_return@j^0,w,c
  7226   00206C  502A               	movf	(maze_return@j+1)^0,w,c
  7227   00206E  0A80               	xorlw	128
  7228   002070  6E27               	movwf	(??_maze_return+2)^0,c
  7229   002072  5026               	movf	(??_maze_return+1)^0,w,c
  7230   002074  0A80               	xorlw	128
  7231   002076  5827               	subwfb	(??_maze_return+2)^0,w,c
  7232   002078  A0D8               	btfss	status,0,c
  7233   00207A  EF41  F010         	goto	u5391
  7234   00207E  EF43  F010         	goto	u5390
  7235   002082                     u5391:
  7236   002082  EF1F  F010         	goto	l4862
  7237   002086                     u5390:
  7238   002086                     
  7239                           ;pathfinder_file.c: 107:                 forward(c->forward_half, mL, mR);
  7240   002086  C023  F013         	movff	maze_return@mL,forward@mL
  7241   00208A  C024  F014         	movff	maze_return@mR,forward@mR
  7242   00208E  EE20 F007          	lfsr	2,7
  7243   002092  5021               	movf	maze_return@c^0,w,c
  7244   002094  26D9               	addwf	fsr2l,f,c
  7245   002096  5022               	movf	(maze_return@c+1)^0,w,c
  7246   002098  22DA               	addwfc	fsr2h,f,c
  7247   00209A  50DF               	movf	indf2,w,c
  7248   00209C  ECF2  F01C         	call	_forward
  7249                           
  7250                           ;pathfinder_file.c: 109:             }
  7251   0020A0  EF4F  F012         	goto	l4922
  7252   0020A4                     l4870:
  7253   0020A4  0E3C               	movlw	low _Operation_History
  7254   0020A6  242D               	addwf	maze_return@i^0,w,c
  7255   0020A8  6ED9               	movwf	fsr2l,c
  7256   0020AA  0E01               	movlw	high _Operation_History
  7257   0020AC  202E               	addwfc	(maze_return@i+1)^0,w,c
  7258   0020AE  6EDA               	movwf	fsr2h,c
  7259   0020B0  04DE               	decf	postinc2,w,c
  7260   0020B2  A4D8               	btfss	status,2,c
  7261   0020B4  EF5E  F010         	goto	u5401
  7262   0020B8  EF60  F010         	goto	u5400
  7263   0020BC                     u5401:
  7264   0020BC  EF7C  F010         	goto	l4874
  7265   0020C0                     u5400:
  7266   0020C0                     
  7267                           ;pathfinder_file.c: 112:                 leftTURN(c->left_90, mL, mR);
  7268   0020C0  C023  F013         	movff	maze_return@mL,leftTURN@mL
  7269   0020C4  C024  F014         	movff	maze_return@mR,leftTURN@mR
  7270   0020C8  EE20 F002          	lfsr	2,2
  7271   0020CC  5021               	movf	maze_return@c^0,w,c
  7272   0020CE  26D9               	addwf	fsr2l,f,c
  7273   0020D0  5022               	movf	(maze_return@c+1)^0,w,c
  7274   0020D2  22DA               	addwfc	fsr2h,f,c
  7275   0020D4  50DF               	movf	indf2,w,c
  7276   0020D6  EC71  F01E         	call	_leftTURN
  7277                           
  7278                           ;pathfinder_file.c: 113:                 backward(c->backward_one, mL, mR);
  7279   0020DA  C023  F013         	movff	maze_return@mL,backward@mL
  7280   0020DE  C024  F014         	movff	maze_return@mR,backward@mR
  7281   0020E2  EE20 F006          	lfsr	2,6
  7282   0020E6  5021               	movf	maze_return@c^0,w,c
  7283   0020E8  26D9               	addwf	fsr2l,f,c
  7284   0020EA  5022               	movf	(maze_return@c+1)^0,w,c
  7285   0020EC  22DA               	addwfc	fsr2h,f,c
  7286   0020EE  50DF               	movf	indf2,w,c
  7287   0020F0  EC30  F01F         	call	_backward
  7288                           
  7289                           ;pathfinder_file.c: 114:             }
  7290   0020F4  EF4F  F012         	goto	l4922
  7291   0020F8                     l4874:
  7292   0020F8  0E3C               	movlw	low _Operation_History
  7293   0020FA  242D               	addwf	maze_return@i^0,w,c
  7294   0020FC  6ED9               	movwf	fsr2l,c
  7295   0020FE  0E01               	movlw	high _Operation_History
  7296   002100  202E               	addwfc	(maze_return@i+1)^0,w,c
  7297   002102  6EDA               	movwf	fsr2h,c
  7298   002104  0E02               	movlw	2
  7299   002106  18DE               	xorwf	postinc2,w,c
  7300   002108  A4D8               	btfss	status,2,c
  7301   00210A  EF89  F010         	goto	u5411
  7302   00210E  EF8B  F010         	goto	u5410
  7303   002112                     u5411:
  7304   002112  EFA7  F010         	goto	l4878
  7305   002116                     u5410:
  7306   002116                     
  7307                           ;pathfinder_file.c: 117:                 rightTURN(c->right_90, mL, mR);
  7308   002116  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7309   00211A  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7310   00211E  EE20 F001          	lfsr	2,1
  7311   002122  5021               	movf	maze_return@c^0,w,c
  7312   002124  26D9               	addwf	fsr2l,f,c
  7313   002126  5022               	movf	(maze_return@c+1)^0,w,c
  7314   002128  22DA               	addwfc	fsr2h,f,c
  7315   00212A  50DF               	movf	indf2,w,c
  7316   00212C  ECB2  F01D         	call	_rightTURN
  7317                           
  7318                           ;pathfinder_file.c: 118:                 backward(c->backward_one, mL, mR);
  7319   002130  C023  F013         	movff	maze_return@mL,backward@mL
  7320   002134  C024  F014         	movff	maze_return@mR,backward@mR
  7321   002138  EE20 F006          	lfsr	2,6
  7322   00213C  5021               	movf	maze_return@c^0,w,c
  7323   00213E  26D9               	addwf	fsr2l,f,c
  7324   002140  5022               	movf	(maze_return@c+1)^0,w,c
  7325   002142  22DA               	addwfc	fsr2h,f,c
  7326   002144  50DF               	movf	indf2,w,c
  7327   002146  EC30  F01F         	call	_backward
  7328                           
  7329                           ;pathfinder_file.c: 119:             }
  7330   00214A  EF4F  F012         	goto	l4922
  7331   00214E                     l4878:
  7332   00214E  0E3C               	movlw	low _Operation_History
  7333   002150  242D               	addwf	maze_return@i^0,w,c
  7334   002152  6ED9               	movwf	fsr2l,c
  7335   002154  0E01               	movlw	high _Operation_History
  7336   002156  202E               	addwfc	(maze_return@i+1)^0,w,c
  7337   002158  6EDA               	movwf	fsr2h,c
  7338   00215A  0E03               	movlw	3
  7339   00215C  18DE               	xorwf	postinc2,w,c
  7340   00215E  A4D8               	btfss	status,2,c
  7341   002160  EFB4  F010         	goto	u5421
  7342   002164  EFB6  F010         	goto	u5420
  7343   002168                     u5421:
  7344   002168  EFD2  F010         	goto	l4882
  7345   00216C                     u5420:
  7346   00216C                     
  7347                           ;pathfinder_file.c: 122:                 rightTURN(c->right_90, mL, mR);
  7348   00216C  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7349   002170  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7350   002174  EE20 F001          	lfsr	2,1
  7351   002178  5021               	movf	maze_return@c^0,w,c
  7352   00217A  26D9               	addwf	fsr2l,f,c
  7353   00217C  5022               	movf	(maze_return@c+1)^0,w,c
  7354   00217E  22DA               	addwfc	fsr2h,f,c
  7355   002180  50DF               	movf	indf2,w,c
  7356   002182  ECB2  F01D         	call	_rightTURN
  7357                           
  7358                           ;pathfinder_file.c: 123:                 rightTURN(c->right_90, mL, mR);
  7359   002186  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7360   00218A  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7361   00218E  EE20 F001          	lfsr	2,1
  7362   002192  5021               	movf	maze_return@c^0,w,c
  7363   002194  26D9               	addwf	fsr2l,f,c
  7364   002196  5022               	movf	(maze_return@c+1)^0,w,c
  7365   002198  22DA               	addwfc	fsr2h,f,c
  7366   00219A  50DF               	movf	indf2,w,c
  7367   00219C  ECB2  F01D         	call	_rightTURN
  7368                           
  7369                           ;pathfinder_file.c: 124:             }
  7370   0021A0  EF4F  F012         	goto	l4922
  7371   0021A4                     l4882:
  7372   0021A4  0E3C               	movlw	low _Operation_History
  7373   0021A6  242D               	addwf	maze_return@i^0,w,c
  7374   0021A8  6ED9               	movwf	fsr2l,c
  7375   0021AA  0E01               	movlw	high _Operation_History
  7376   0021AC  202E               	addwfc	(maze_return@i+1)^0,w,c
  7377   0021AE  6EDA               	movwf	fsr2h,c
  7378   0021B0  0E04               	movlw	4
  7379   0021B2  18DE               	xorwf	postinc2,w,c
  7380   0021B4  A4D8               	btfss	status,2,c
  7381   0021B6  EFDF  F010         	goto	u5431
  7382   0021BA  EFE1  F010         	goto	u5430
  7383   0021BE                     u5431:
  7384   0021BE  EF55  F011         	goto	l4904
  7385   0021C2                     u5430:
  7386   0021C2                     
  7387                           ;pathfinder_file.c: 127:                 Operation_History[Operation_Count] = Color_Valu
      +                          e;
  7388   0021C2  0E3C               	movlw	low _Operation_History
  7389   0021C4  0100               	movlb	0	; () banked
  7390   0021C6  25E6               	addwf	_Operation_Count& (0+255),w,b
  7391   0021C8  6ED9               	movwf	fsr2l,c
  7392   0021CA  6ADA               	clrf	fsr2h,c
  7393   0021CC  0E01               	movlw	high _Operation_History
  7394   0021CE  22DA               	addwfc	fsr2h,f,c
  7395   0021D0  C0E3  FFDF         	movff	_Color_Value,indf2
  7396   0021D4                     
  7397                           ; BSR set to: 0
  7398                           ;pathfinder_file.c: 128:                 Operation_Count++;
  7399   0021D4  2BE6               	incf	_Operation_Count& (0+255),f,b
  7400   0021D6                     
  7401                           ; BSR set to: 0
  7402                           ;pathfinder_file.c: 131:                 rightTURN(c->right_90, mL, mR);
  7403   0021D6  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7404   0021DA  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7405   0021DE  EE20 F001          	lfsr	2,1
  7406   0021E2  5021               	movf	maze_return@c^0,w,c
  7407   0021E4  26D9               	addwf	fsr2l,f,c
  7408   0021E6  5022               	movf	(maze_return@c+1)^0,w,c
  7409   0021E8  22DA               	addwfc	fsr2h,f,c
  7410   0021EA  50DF               	movf	indf2,w,c
  7411   0021EC  ECB2  F01D         	call	_rightTURN
  7412   0021F0                     
  7413                           ;pathfinder_file.c: 132:                 forward(c->forward_one, mL, mR);
  7414   0021F0  C023  F013         	movff	maze_return@mL,forward@mL
  7415   0021F4  C024  F014         	movff	maze_return@mR,forward@mR
  7416   0021F8  EE20 F005          	lfsr	2,5
  7417   0021FC  5021               	movf	maze_return@c^0,w,c
  7418   0021FE  26D9               	addwf	fsr2l,f,c
  7419   002200  5022               	movf	(maze_return@c+1)^0,w,c
  7420   002202  22DA               	addwfc	fsr2h,f,c
  7421   002204  50DF               	movf	indf2,w,c
  7422   002206  ECF2  F01C         	call	_forward
  7423   00220A                     
  7424                           ;pathfinder_file.c: 135:                 forward(c->forward_one, mL, mR);
  7425   00220A  C023  F013         	movff	maze_return@mL,forward@mL
  7426   00220E  C024  F014         	movff	maze_return@mR,forward@mR
  7427   002212  EE20 F005          	lfsr	2,5
  7428   002216  5021               	movf	maze_return@c^0,w,c
  7429   002218  26D9               	addwf	fsr2l,f,c
  7430   00221A  5022               	movf	(maze_return@c+1)^0,w,c
  7431   00221C  22DA               	addwfc	fsr2h,f,c
  7432   00221E  50DF               	movf	indf2,w,c
  7433   002220  ECF2  F01C         	call	_forward
  7434   002224                     
  7435                           ;pathfinder_file.c: 136:                 backward(c->backward_half, mL, mR);
  7436   002224  C023  F013         	movff	maze_return@mL,backward@mL
  7437   002228  C024  F014         	movff	maze_return@mR,backward@mR
  7438   00222C  EE20 F008          	lfsr	2,8
  7439   002230  5021               	movf	maze_return@c^0,w,c
  7440   002232  26D9               	addwf	fsr2l,f,c
  7441   002234  5022               	movf	(maze_return@c+1)^0,w,c
  7442   002236  22DA               	addwfc	fsr2h,f,c
  7443   002238  50DF               	movf	indf2,w,c
  7444   00223A  EC30  F01F         	call	_backward
  7445   00223E                     
  7446                           ;pathfinder_file.c: 137:                 rightTURN(c->right_90, mL, mR);
  7447   00223E  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7448   002242  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7449   002246  EE20 F001          	lfsr	2,1
  7450   00224A  5021               	movf	maze_return@c^0,w,c
  7451   00224C  26D9               	addwf	fsr2l,f,c
  7452   00224E  5022               	movf	(maze_return@c+1)^0,w,c
  7453   002250  22DA               	addwfc	fsr2h,f,c
  7454   002252  50DF               	movf	indf2,w,c
  7455   002254  ECB2  F01D         	call	_rightTURN
  7456   002258                     
  7457                           ;pathfinder_file.c: 138:                 rightTURN(c->right_90, mL, mR);
  7458   002258  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7459   00225C  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7460   002260  EE20 F001          	lfsr	2,1
  7461   002264  5021               	movf	maze_return@c^0,w,c
  7462   002266  26D9               	addwf	fsr2l,f,c
  7463   002268  5022               	movf	(maze_return@c+1)^0,w,c
  7464   00226A  22DA               	addwfc	fsr2h,f,c
  7465   00226C  50DF               	movf	indf2,w,c
  7466   00226E  ECB2  F01D         	call	_rightTURN
  7467   002272                     
  7468                           ;pathfinder_file.c: 139:                 backward(c->backward_one, mL, mR);
  7469   002272  C023  F013         	movff	maze_return@mL,backward@mL
  7470   002276  C024  F014         	movff	maze_return@mR,backward@mR
  7471   00227A  EE20 F006          	lfsr	2,6
  7472   00227E  5021               	movf	maze_return@c^0,w,c
  7473   002280  26D9               	addwf	fsr2l,f,c
  7474   002282  5022               	movf	(maze_return@c+1)^0,w,c
  7475   002284  22DA               	addwfc	fsr2h,f,c
  7476   002286  50DF               	movf	indf2,w,c
  7477   002288  EC30  F01F         	call	_backward
  7478   00228C                     
  7479                           ;pathfinder_file.c: 140:                 forward(c->forward_half, mL, mR);
  7480   00228C  C023  F013         	movff	maze_return@mL,forward@mL
  7481   002290  C024  F014         	movff	maze_return@mR,forward@mR
  7482   002294  EE20 F007          	lfsr	2,7
  7483   002298  5021               	movf	maze_return@c^0,w,c
  7484   00229A  26D9               	addwf	fsr2l,f,c
  7485   00229C  5022               	movf	(maze_return@c+1)^0,w,c
  7486   00229E  22DA               	addwfc	fsr2h,f,c
  7487   0022A0  50DF               	movf	indf2,w,c
  7488   0022A2  ECF2  F01C         	call	_forward
  7489                           
  7490                           ;pathfinder_file.c: 141:             }
  7491   0022A6  EF4F  F012         	goto	l4922
  7492   0022AA                     l4904:
  7493   0022AA  0E3C               	movlw	low _Operation_History
  7494   0022AC  242D               	addwf	maze_return@i^0,w,c
  7495   0022AE  6ED9               	movwf	fsr2l,c
  7496   0022B0  0E01               	movlw	high _Operation_History
  7497   0022B2  202E               	addwfc	(maze_return@i+1)^0,w,c
  7498   0022B4  6EDA               	movwf	fsr2h,c
  7499   0022B6  0E05               	movlw	5
  7500   0022B8  18DE               	xorwf	postinc2,w,c
  7501   0022BA  A4D8               	btfss	status,2,c
  7502   0022BC  EF62  F011         	goto	u5441
  7503   0022C0  EF64  F011         	goto	u5440
  7504   0022C4                     u5441:
  7505   0022C4  EFCE  F011         	goto	l4908
  7506   0022C8                     u5440:
  7507   0022C8                     
  7508                           ;pathfinder_file.c: 144:                 leftTURN(c->right_90, mL, mR);
  7509   0022C8  C023  F013         	movff	maze_return@mL,leftTURN@mL
  7510   0022CC  C024  F014         	movff	maze_return@mR,leftTURN@mR
  7511   0022D0  EE20 F001          	lfsr	2,1
  7512   0022D4  5021               	movf	maze_return@c^0,w,c
  7513   0022D6  26D9               	addwf	fsr2l,f,c
  7514   0022D8  5022               	movf	(maze_return@c+1)^0,w,c
  7515   0022DA  22DA               	addwfc	fsr2h,f,c
  7516   0022DC  50DF               	movf	indf2,w,c
  7517   0022DE  EC71  F01E         	call	_leftTURN
  7518                           
  7519                           ;pathfinder_file.c: 145:                 forward(c->forward_one, mL, mR);
  7520   0022E2  C023  F013         	movff	maze_return@mL,forward@mL
  7521   0022E6  C024  F014         	movff	maze_return@mR,forward@mR
  7522   0022EA  EE20 F005          	lfsr	2,5
  7523   0022EE  5021               	movf	maze_return@c^0,w,c
  7524   0022F0  26D9               	addwf	fsr2l,f,c
  7525   0022F2  5022               	movf	(maze_return@c+1)^0,w,c
  7526   0022F4  22DA               	addwfc	fsr2h,f,c
  7527   0022F6  50DF               	movf	indf2,w,c
  7528   0022F8  ECF2  F01C         	call	_forward
  7529                           
  7530                           ;pathfinder_file.c: 148:                 forward(c->forward_one, mL, mR);
  7531   0022FC  C023  F013         	movff	maze_return@mL,forward@mL
  7532   002300  C024  F014         	movff	maze_return@mR,forward@mR
  7533   002304  EE20 F005          	lfsr	2,5
  7534   002308  5021               	movf	maze_return@c^0,w,c
  7535   00230A  26D9               	addwf	fsr2l,f,c
  7536   00230C  5022               	movf	(maze_return@c+1)^0,w,c
  7537   00230E  22DA               	addwfc	fsr2h,f,c
  7538   002310  50DF               	movf	indf2,w,c
  7539   002312  ECF2  F01C         	call	_forward
  7540                           
  7541                           ;pathfinder_file.c: 149:                 backward(c->backward_half, mL, mR);
  7542   002316  C023  F013         	movff	maze_return@mL,backward@mL
  7543   00231A  C024  F014         	movff	maze_return@mR,backward@mR
  7544   00231E  EE20 F008          	lfsr	2,8
  7545   002322  5021               	movf	maze_return@c^0,w,c
  7546   002324  26D9               	addwf	fsr2l,f,c
  7547   002326  5022               	movf	(maze_return@c+1)^0,w,c
  7548   002328  22DA               	addwfc	fsr2h,f,c
  7549   00232A  50DF               	movf	indf2,w,c
  7550   00232C  EC30  F01F         	call	_backward
  7551                           
  7552                           ;pathfinder_file.c: 150:                 rightTURN(c->right_90, mL, mR);
  7553   002330  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7554   002334  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7555   002338  EE20 F001          	lfsr	2,1
  7556   00233C  5021               	movf	maze_return@c^0,w,c
  7557   00233E  26D9               	addwf	fsr2l,f,c
  7558   002340  5022               	movf	(maze_return@c+1)^0,w,c
  7559   002342  22DA               	addwfc	fsr2h,f,c
  7560   002344  50DF               	movf	indf2,w,c
  7561   002346  ECB2  F01D         	call	_rightTURN
  7562                           
  7563                           ;pathfinder_file.c: 151:                 rightTURN(c->right_90, mL, mR);
  7564   00234A  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7565   00234E  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7566   002352  EE20 F001          	lfsr	2,1
  7567   002356  5021               	movf	maze_return@c^0,w,c
  7568   002358  26D9               	addwf	fsr2l,f,c
  7569   00235A  5022               	movf	(maze_return@c+1)^0,w,c
  7570   00235C  22DA               	addwfc	fsr2h,f,c
  7571   00235E  50DF               	movf	indf2,w,c
  7572   002360  ECB2  F01D         	call	_rightTURN
  7573                           
  7574                           ;pathfinder_file.c: 152:                 backward(c->backward_one, mL, mR);
  7575   002364  C023  F013         	movff	maze_return@mL,backward@mL
  7576   002368  C024  F014         	movff	maze_return@mR,backward@mR
  7577   00236C  EE20 F006          	lfsr	2,6
  7578   002370  5021               	movf	maze_return@c^0,w,c
  7579   002372  26D9               	addwf	fsr2l,f,c
  7580   002374  5022               	movf	(maze_return@c+1)^0,w,c
  7581   002376  22DA               	addwfc	fsr2h,f,c
  7582   002378  50DF               	movf	indf2,w,c
  7583   00237A  EC30  F01F         	call	_backward
  7584                           
  7585                           ;pathfinder_file.c: 153:                 forward(c->forward_half, mL, mR);
  7586   00237E  C023  F013         	movff	maze_return@mL,forward@mL
  7587   002382  C024  F014         	movff	maze_return@mR,forward@mR
  7588   002386  EE20 F007          	lfsr	2,7
  7589   00238A  5021               	movf	maze_return@c^0,w,c
  7590   00238C  26D9               	addwf	fsr2l,f,c
  7591   00238E  5022               	movf	(maze_return@c+1)^0,w,c
  7592   002390  22DA               	addwfc	fsr2h,f,c
  7593   002392  50DF               	movf	indf2,w,c
  7594   002394  ECF2  F01C         	call	_forward
  7595                           
  7596                           ;pathfinder_file.c: 155:             }
  7597   002398  EF4F  F012         	goto	l4922
  7598   00239C                     l4908:
  7599   00239C  0E3C               	movlw	low _Operation_History
  7600   00239E  242D               	addwf	maze_return@i^0,w,c
  7601   0023A0  6ED9               	movwf	fsr2l,c
  7602   0023A2  0E01               	movlw	high _Operation_History
  7603   0023A4  202E               	addwfc	(maze_return@i+1)^0,w,c
  7604   0023A6  6EDA               	movwf	fsr2h,c
  7605   0023A8  0E06               	movlw	6
  7606   0023AA  18DE               	xorwf	postinc2,w,c
  7607   0023AC  A4D8               	btfss	status,2,c
  7608   0023AE  EFDB  F011         	goto	u5451
  7609   0023B2  EFDD  F011         	goto	u5450
  7610   0023B6                     u5451:
  7611   0023B6  EF06  F012         	goto	l4912
  7612   0023BA                     u5450:
  7613   0023BA                     
  7614                           ;pathfinder_file.c: 158:                 leftTURN(c->left_135, mL, mR);
  7615   0023BA  C023  F013         	movff	maze_return@mL,leftTURN@mL
  7616   0023BE  C024  F014         	movff	maze_return@mR,leftTURN@mR
  7617   0023C2  EE20 F004          	lfsr	2,4
  7618   0023C6  5021               	movf	maze_return@c^0,w,c
  7619   0023C8  26D9               	addwf	fsr2l,f,c
  7620   0023CA  5022               	movf	(maze_return@c+1)^0,w,c
  7621   0023CC  22DA               	addwfc	fsr2h,f,c
  7622   0023CE  50DF               	movf	indf2,w,c
  7623   0023D0  EC71  F01E         	call	_leftTURN
  7624                           
  7625                           ;pathfinder_file.c: 159:                 backward(c->backward_one, mL, mR);
  7626   0023D4  C023  F013         	movff	maze_return@mL,backward@mL
  7627   0023D8  C024  F014         	movff	maze_return@mR,backward@mR
  7628   0023DC  EE20 F006          	lfsr	2,6
  7629   0023E0  5021               	movf	maze_return@c^0,w,c
  7630   0023E2  26D9               	addwf	fsr2l,f,c
  7631   0023E4  5022               	movf	(maze_return@c+1)^0,w,c
  7632   0023E6  22DA               	addwfc	fsr2h,f,c
  7633   0023E8  50DF               	movf	indf2,w,c
  7634   0023EA  EC30  F01F         	call	_backward
  7635                           
  7636                           ;pathfinder_file.c: 160:                 forward(c->forward_half, mL, mR);
  7637   0023EE  C023  F013         	movff	maze_return@mL,forward@mL
  7638   0023F2  C024  F014         	movff	maze_return@mR,forward@mR
  7639   0023F6  EE20 F007          	lfsr	2,7
  7640   0023FA  5021               	movf	maze_return@c^0,w,c
  7641   0023FC  26D9               	addwf	fsr2l,f,c
  7642   0023FE  5022               	movf	(maze_return@c+1)^0,w,c
  7643   002400  22DA               	addwfc	fsr2h,f,c
  7644   002402  50DF               	movf	indf2,w,c
  7645   002404  ECF2  F01C         	call	_forward
  7646                           
  7647                           ;pathfinder_file.c: 161:             }
  7648   002408  EF4F  F012         	goto	l4922
  7649   00240C                     l4912:
  7650   00240C  0E3C               	movlw	low _Operation_History
  7651   00240E  242D               	addwf	maze_return@i^0,w,c
  7652   002410  6ED9               	movwf	fsr2l,c
  7653   002412  0E01               	movlw	high _Operation_History
  7654   002414  202E               	addwfc	(maze_return@i+1)^0,w,c
  7655   002416  6EDA               	movwf	fsr2h,c
  7656   002418  0E07               	movlw	7
  7657   00241A  18DE               	xorwf	postinc2,w,c
  7658   00241C  A4D8               	btfss	status,2,c
  7659   00241E  EF13  F012         	goto	u5461
  7660   002422  EF15  F012         	goto	u5460
  7661   002426                     u5461:
  7662   002426  EF3E  F012         	goto	l4916
  7663   00242A                     u5460:
  7664   00242A                     
  7665                           ;pathfinder_file.c: 164:                 rightTURN(c->right_135, mL, mR);
  7666   00242A  C023  F013         	movff	maze_return@mL,rightTURN@mL
  7667   00242E  C024  F014         	movff	maze_return@mR,rightTURN@mR
  7668   002432  EE20 F003          	lfsr	2,3
  7669   002436  5021               	movf	maze_return@c^0,w,c
  7670   002438  26D9               	addwf	fsr2l,f,c
  7671   00243A  5022               	movf	(maze_return@c+1)^0,w,c
  7672   00243C  22DA               	addwfc	fsr2h,f,c
  7673   00243E  50DF               	movf	indf2,w,c
  7674   002440  ECB2  F01D         	call	_rightTURN
  7675                           
  7676                           ;pathfinder_file.c: 165:                 backward(c->backward_one, mL, mR);
  7677   002444  C023  F013         	movff	maze_return@mL,backward@mL
  7678   002448  C024  F014         	movff	maze_return@mR,backward@mR
  7679   00244C  EE20 F006          	lfsr	2,6
  7680   002450  5021               	movf	maze_return@c^0,w,c
  7681   002452  26D9               	addwf	fsr2l,f,c
  7682   002454  5022               	movf	(maze_return@c+1)^0,w,c
  7683   002456  22DA               	addwfc	fsr2h,f,c
  7684   002458  50DF               	movf	indf2,w,c
  7685   00245A  EC30  F01F         	call	_backward
  7686                           
  7687                           ;pathfinder_file.c: 166:                 forward(c->forward_half, mL, mR);
  7688   00245E  C023  F013         	movff	maze_return@mL,forward@mL
  7689   002462  C024  F014         	movff	maze_return@mR,forward@mR
  7690   002466  EE20 F007          	lfsr	2,7
  7691   00246A  5021               	movf	maze_return@c^0,w,c
  7692   00246C  26D9               	addwf	fsr2l,f,c
  7693   00246E  5022               	movf	(maze_return@c+1)^0,w,c
  7694   002470  22DA               	addwfc	fsr2h,f,c
  7695   002472  50DF               	movf	indf2,w,c
  7696   002474  ECF2  F01C         	call	_forward
  7697                           
  7698                           ;pathfinder_file.c: 167:             }
  7699   002478  EF4F  F012         	goto	l4922
  7700   00247C                     l4916:
  7701   00247C  0E3C               	movlw	low _Operation_History
  7702   00247E  242D               	addwf	maze_return@i^0,w,c
  7703   002480  6ED9               	movwf	fsr2l,c
  7704   002482  0E01               	movlw	high _Operation_History
  7705   002484  202E               	addwfc	(maze_return@i+1)^0,w,c
  7706   002486  6EDA               	movwf	fsr2h,c
  7707   002488  0E08               	movlw	8
  7708   00248A  18DE               	xorwf	postinc2,w,c
  7709   00248C  A4D8               	btfss	status,2,c
  7710   00248E  EF4B  F012         	goto	u5471
  7711   002492  EF4D  F012         	goto	u5470
  7712   002496                     u5471:
  7713   002496  EF4F  F012         	goto	l590
  7714   00249A                     u5470:
  7715   00249A  EF4F  F012         	goto	l4922
  7716   00249E                     l590:
  7717   00249E                     l4922:
  7718                           
  7719                           ;pathfinder_file.c: 175:         }
  7720   00249E  062D               	decf	maze_return@i^0,f,c
  7721   0024A0  A0D8               	btfss	status,0,c
  7722   0024A2  062E               	decf	(maze_return@i+1)^0,f,c
  7723   0024A4  BE2E               	btfsc	(maze_return@i+1)^0,7,c
  7724   0024A6  EF59  F012         	goto	u5480
  7725   0024AA  EF57  F012         	goto	u5481
  7726   0024AE                     u5481:
  7727   0024AE  EF02  F010         	goto	l4856
  7728   0024B2                     u5480:
  7729   0024B2                     
  7730                           ;pathfinder_file.c: 176:         Operation_Count = 0;
  7731   0024B2  0E00               	movlw	0
  7732   0024B4  0100               	movlb	0	; () banked
  7733   0024B6  6FE6               	movwf	_Operation_Count& (0+255),b
  7734                           
  7735                           ;pathfinder_file.c: 177:         for (int i = 0; i < 50; ++i) {
  7736   0024B8  0E00               	movlw	0
  7737   0024BA  6E2C               	movwf	(maze_return@i_2041+1)^0,c
  7738   0024BC  0E00               	movlw	0
  7739   0024BE  6E2B               	movwf	maze_return@i_2041^0,c
  7740   0024C0                     l4932:
  7741                           
  7742                           ;pathfinder_file.c: 178:             Operation_History[i] = 0;
  7743   0024C0  0E3C               	movlw	low _Operation_History
  7744   0024C2  242B               	addwf	maze_return@i_2041^0,w,c
  7745   0024C4  6ED9               	movwf	fsr2l,c
  7746   0024C6  0E01               	movlw	high _Operation_History
  7747   0024C8  202C               	addwfc	(maze_return@i_2041+1)^0,w,c
  7748   0024CA  6EDA               	movwf	fsr2h,c
  7749   0024CC  6ADF               	clrf	indf2,c
  7750   0024CE                     
  7751                           ;pathfinder_file.c: 179:         }
  7752   0024CE  4A2B               	infsnz	maze_return@i_2041^0,f,c
  7753   0024D0  2A2C               	incf	(maze_return@i_2041+1)^0,f,c
  7754   0024D2  BE2C               	btfsc	(maze_return@i_2041+1)^0,7,c
  7755   0024D4  EF75  F012         	goto	u5491
  7756   0024D8  502C               	movf	(maze_return@i_2041+1)^0,w,c
  7757   0024DA  E109               	bnz	u5490
  7758   0024DC  0E32               	movlw	50
  7759   0024DE  5C2B               	subwf	maze_return@i_2041^0,w,c
  7760   0024E0  A0D8               	btfss	status,0,c
  7761   0024E2  EF75  F012         	goto	u5491
  7762   0024E6  EF77  F012         	goto	u5490
  7763   0024EA                     u5491:
  7764   0024EA  EF60  F012         	goto	l4932
  7765   0024EE                     u5490:
  7766   0024EE  0012               	return		;funcret
  7767   0024F0                     __end_of_maze_return:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function _initDCmotorsPWM *****************
  7771 ;; Defined at:
  7772 ;;		line 5 in file "dc_motor_v1.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;Total ram usage:        2 bytes
  7791 ;; Hardware stack levels used: 1
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_main
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text28
  7800   0048A0                     __ptext28:
  7801                           	callstack 0
  7802   0048A0                     _initDCmotorsPWM:
  7803                           	callstack 30
  7804   0048A0                     
  7805                           ;dc_motor_v1.c: 7:     TRISEbits.TRISE2 = 0;
  7806   0048A0  9485               	bcf	133,2,c	;volatile
  7807                           
  7808                           ;dc_motor_v1.c: 8:     TRISEbits.TRISE4 = 0;
  7809   0048A2  9885               	bcf	133,4,c	;volatile
  7810                           
  7811                           ;dc_motor_v1.c: 9:     TRISCbits.TRISC7 = 0;
  7812   0048A4  9E83               	bcf	131,7,c	;volatile
  7813                           
  7814                           ;dc_motor_v1.c: 10:     TRISGbits.TRISG6 = 0;
  7815   0048A6  9C87               	bcf	135,6,c	;volatile
  7816                           
  7817                           ;dc_motor_v1.c: 12:     LATEbits.LATE2 = 0;
  7818   0048A8  947D               	bcf	125,2,c	;volatile
  7819                           
  7820                           ;dc_motor_v1.c: 13:     LATEbits.LATE4 = 0;
  7821   0048AA  987D               	bcf	125,4,c	;volatile
  7822                           
  7823                           ;dc_motor_v1.c: 14:     LATCbits.LATC7 = 0;
  7824   0048AC  9E7B               	bcf	123,7,c	;volatile
  7825                           
  7826                           ;dc_motor_v1.c: 15:     LATGbits.LATG6 = 0;
  7827   0048AE  9C7F               	bcf	127,6,c	;volatile
  7828   0048B0                     
  7829                           ;dc_motor_v1.c: 18:     RE2PPS=0x05;
  7830   0048B0  0E05               	movlw	5
  7831   0048B2  010E               	movlb	14	; () banked
  7832   0048B4  6F74               	movwf	116,b	;volatile
  7833                           
  7834                           ;dc_motor_v1.c: 19:     RE4PPS=0x06;
  7835   0048B6  0E06               	movlw	6
  7836   0048B8  6F76               	movwf	118,b	;volatile
  7837                           
  7838                           ;dc_motor_v1.c: 20:     RC7PPS=0x07;
  7839   0048BA  0E07               	movlw	7
  7840   0048BC  6F69               	movwf	105,b	;volatile
  7841                           
  7842                           ;dc_motor_v1.c: 21:     RG6PPS=0x08;
  7843   0048BE  0E08               	movlw	8
  7844   0048C0  6F88               	movwf	136,b	;volatile
  7845                           
  7846                           ;dc_motor_v1.c: 24:     T2CONbits.CKPS=100;
  7847   0048C2  50BD               	movf	189,w,c	;volatile
  7848   0048C4  0B8F               	andlw	-113
  7849   0048C6  0940               	iorlw	64
  7850   0048C8  6EBD               	movwf	189,c	;volatile
  7851                           
  7852                           ;dc_motor_v1.c: 25:     T2HLTbits.MODE=0b00000;
  7853   0048CA  0EE0               	movlw	-32
  7854   0048CC  16BE               	andwf	190,f,c	;volatile
  7855                           
  7856                           ;dc_motor_v1.c: 26:     T2CLKCONbits.CS=0b0001;
  7857   0048CE  50BF               	movf	191,w,c	;volatile
  7858   0048D0  0BF0               	andlw	-16
  7859   0048D2  0901               	iorlw	1
  7860   0048D4  6EBF               	movwf	191,c	;volatile
  7861   0048D6                     
  7862                           ; BSR set to: 14
  7863                           ;dc_motor_v1.c: 30:     T2PR=PWMperiod;
  7864   0048D6  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7865   0048DA                     
  7866                           ; BSR set to: 14
  7867                           ;dc_motor_v1.c: 31:     T2CONbits.ON=1;
  7868   0048DA  8EBD               	bsf	189,7,c	;volatile
  7869                           
  7870                           ;dc_motor_v1.c: 35:     CCPR1H=0;
  7871   0048DC  0E00               	movlw	0
  7872   0048DE  6EAA               	movwf	170,c	;volatile
  7873                           
  7874                           ;dc_motor_v1.c: 36:     CCPR2H=0;
  7875   0048E0  0E00               	movlw	0
  7876   0048E2  6EA6               	movwf	166,c	;volatile
  7877                           
  7878                           ;dc_motor_v1.c: 37:     CCPR3H=0;
  7879   0048E4  0E00               	movlw	0
  7880   0048E6  010F               	movlb	15	; () banked
  7881   0048E8  6F25               	movwf	37,b	;volatile
  7882                           
  7883                           ;dc_motor_v1.c: 38:     CCPR4H=0;
  7884   0048EA  0E00               	movlw	0
  7885   0048EC  6F21               	movwf	33,b	;volatile
  7886                           
  7887                           ;dc_motor_v1.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7888   0048EE  0EFC               	movlw	-4
  7889   0048F0  16AD               	andwf	173,f,c	;volatile
  7890                           
  7891                           ;dc_motor_v1.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7892   0048F2  0EF3               	movlw	-13
  7893   0048F4  16AD               	andwf	173,f,c	;volatile
  7894                           
  7895                           ;dc_motor_v1.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7896   0048F6  0ECF               	movlw	-49
  7897   0048F8  16AD               	andwf	173,f,c	;volatile
  7898                           
  7899                           ;dc_motor_v1.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7900   0048FA  0E3F               	movlw	-193
  7901   0048FC  16AD               	andwf	173,f,c	;volatile
  7902   0048FE                     
  7903                           ; BSR set to: 15
  7904                           ;dc_motor_v1.c: 47:     CCP1CONbits.FMT=1;
  7905   0048FE  88AB               	bsf	171,4,c	;volatile
  7906                           
  7907                           ;dc_motor_v1.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7908   004900  50AB               	movf	171,w,c	;volatile
  7909   004902  0BF0               	andlw	-16
  7910   004904  090C               	iorlw	12
  7911   004906  6EAB               	movwf	171,c	;volatile
  7912   004908                     
  7913                           ; BSR set to: 15
  7914                           ;dc_motor_v1.c: 49:     CCP1CONbits.EN=1;
  7915   004908  8EAB               	bsf	171,7,c	;volatile
  7916   00490A                     
  7917                           ; BSR set to: 15
  7918                           ;dc_motor_v1.c: 51:     CCP2CONbits.FMT=1;
  7919   00490A  88A7               	bsf	167,4,c	;volatile
  7920                           
  7921                           ;dc_motor_v1.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7922   00490C  50A7               	movf	167,w,c	;volatile
  7923   00490E  0BF0               	andlw	-16
  7924   004910  090C               	iorlw	12
  7925   004912  6EA7               	movwf	167,c	;volatile
  7926   004914                     
  7927                           ; BSR set to: 15
  7928                           ;dc_motor_v1.c: 53:     CCP2CONbits.EN=1;
  7929   004914  8EA7               	bsf	167,7,c	;volatile
  7930   004916                     
  7931                           ; BSR set to: 15
  7932                           ;dc_motor_v1.c: 55:     CCP3CONbits.FMT=1;
  7933   004916  8926               	bsf	38,4,b	;volatile
  7934                           
  7935                           ;dc_motor_v1.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7936   004918  5126               	movf	38,w,b	;volatile
  7937   00491A  0BF0               	andlw	-16
  7938   00491C  090C               	iorlw	12
  7939   00491E  6F26               	movwf	38,b	;volatile
  7940   004920                     
  7941                           ; BSR set to: 15
  7942                           ;dc_motor_v1.c: 57:     CCP3CONbits.EN=1;
  7943   004920  8F26               	bsf	38,7,b	;volatile
  7944   004922                     
  7945                           ; BSR set to: 15
  7946                           ;dc_motor_v1.c: 59:     CCP4CONbits.FMT=1;
  7947   004922  8922               	bsf	34,4,b	;volatile
  7948                           
  7949                           ;dc_motor_v1.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7950   004924  5122               	movf	34,w,b	;volatile
  7951   004926  0BF0               	andlw	-16
  7952   004928  090C               	iorlw	12
  7953   00492A  6F22               	movwf	34,b	;volatile
  7954   00492C                     
  7955                           ; BSR set to: 15
  7956                           ;dc_motor_v1.c: 61:     CCP4CONbits.EN=1;
  7957   00492C  8F22               	bsf	34,7,b	;volatile
  7958   00492E                     
  7959                           ; BSR set to: 15
  7960                           ;dc_motor_v1.c: 64:     TRISHbits.TRISH3 = 0;
  7961   00492E  9688               	bcf	136,3,c	;volatile
  7962   004930                     
  7963                           ; BSR set to: 15
  7964                           ;dc_motor_v1.c: 65:     LATHbits.LATH3 = 0;
  7965   004930  9680               	bcf	128,3,c	;volatile
  7966   004932                     
  7967                           ; BSR set to: 15
  7968   004932  0012               	return		;funcret
  7969   004934                     __end_of_initDCmotorsPWM:
  7970                           	callstack 0
  7971                           
  7972 ;; *************** function _calibration_routine *****************
  7973 ;; Defined at:
  7974 ;;		line 81 in file "calibration.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  c               2   32[COMRAM] PTR struct calibration_s
  7977 ;;		 -> calibration(9), 
  7978 ;;  mL              1   34[COMRAM] PTR struct DC_motor
  7979 ;;		 -> motorL(9), 
  7980 ;;  mR              1   35[COMRAM] PTR struct DC_motor
  7981 ;;		 -> motorR(9), 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7996 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7997 ;;Total ram usage:        5 bytes
  7998 ;; Hardware stack levels used: 1
  7999 ;; Hardware stack levels required when called: 3
  8000 ;; This function calls:
  8001 ;;		_adjust_calibration
  8002 ;;		_backward
  8003 ;;		_forward
  8004 ;;		_leftTURN
  8005 ;;		_rightTURN
  8006 ;;		_switch_calibration
  8007 ;; This function is called by:
  8008 ;;		_main
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text29
  8013   00358A                     __ptext29:
  8014                           	callstack 0
  8015   00358A                     _calibration_routine:
  8016                           	callstack 27
  8017   00358A                     l160:
  8018   00358A                     
  8019                           ;calibration.c: 85:         if(c->index == 1){
  8020   00358A  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8021   00358E  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8022   003592  04DE               	decf	postinc2,w,c
  8023   003594  A4D8               	btfss	status,2,c
  8024   003596  EFCF  F01A         	goto	u5201
  8025   00359A  EFD1  F01A         	goto	u5200
  8026   00359E                     u5201:
  8027   00359E  EFEC  F01A         	goto	l4684
  8028   0035A2                     u5200:
  8029   0035A2                     
  8030                           ;calibration.c: 86:             adjust_calibration(&(c->right_90));
  8031   0035A2  0E01               	movlw	1
  8032   0035A4  2421               	addwf	calibration_routine@c^0,w,c
  8033   0035A6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8034   0035A8  0E00               	movlw	0
  8035   0035AA  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8036   0035AC  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8037   0035AE  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8038   0035B2                     
  8039                           ;calibration.c: 87:             rightTURN(c->right_90, mL, mR);
  8040   0035B2  C023  F013         	movff	calibration_routine@mL,rightTURN@mL
  8041   0035B6  C024  F014         	movff	calibration_routine@mR,rightTURN@mR
  8042   0035BA  EE20 F001          	lfsr	2,1
  8043   0035BE  5021               	movf	calibration_routine@c^0,w,c
  8044   0035C0  26D9               	addwf	fsr2l,f,c
  8045   0035C2  5022               	movf	(calibration_routine@c+1)^0,w,c
  8046   0035C4  22DA               	addwfc	fsr2h,f,c
  8047   0035C6  50DF               	movf	indf2,w,c
  8048   0035C8  ECB2  F01D         	call	_rightTURN
  8049   0035CC                     
  8050                           ;calibration.c: 88:             switch_calibration(&(c->index));
  8051   0035CC  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8052   0035D0  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8053   0035D4  ECA2  F023         	call	_switch_calibration	;wreg free
  8054   0035D8                     l4684:
  8055                           
  8056                           ;calibration.c: 91:         if(c->index == 2){
  8057   0035D8  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8058   0035DC  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8059   0035E0  0E02               	movlw	2
  8060   0035E2  18DE               	xorwf	postinc2,w,c
  8061   0035E4  A4D8               	btfss	status,2,c
  8062   0035E6  EFF7  F01A         	goto	u5211
  8063   0035EA  EFF9  F01A         	goto	u5210
  8064   0035EE                     u5211:
  8065   0035EE  EF14  F01B         	goto	l4692
  8066   0035F2                     u5210:
  8067   0035F2                     
  8068                           ;calibration.c: 92:             adjust_calibration(&(c->left_90));
  8069   0035F2  0E02               	movlw	2
  8070   0035F4  2421               	addwf	calibration_routine@c^0,w,c
  8071   0035F6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8072   0035F8  0E00               	movlw	0
  8073   0035FA  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8074   0035FC  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8075   0035FE  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8076   003602                     
  8077                           ;calibration.c: 93:             leftTURN(c->left_90, mL, mR);
  8078   003602  C023  F013         	movff	calibration_routine@mL,leftTURN@mL
  8079   003606  C024  F014         	movff	calibration_routine@mR,leftTURN@mR
  8080   00360A  EE20 F002          	lfsr	2,2
  8081   00360E  5021               	movf	calibration_routine@c^0,w,c
  8082   003610  26D9               	addwf	fsr2l,f,c
  8083   003612  5022               	movf	(calibration_routine@c+1)^0,w,c
  8084   003614  22DA               	addwfc	fsr2h,f,c
  8085   003616  50DF               	movf	indf2,w,c
  8086   003618  EC71  F01E         	call	_leftTURN
  8087   00361C                     
  8088                           ;calibration.c: 94:             switch_calibration(&(c->index));
  8089   00361C  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8090   003620  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8091   003624  ECA2  F023         	call	_switch_calibration	;wreg free
  8092   003628                     l4692:
  8093                           
  8094                           ;calibration.c: 97:         if(c->index == 3){
  8095   003628  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8096   00362C  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8097   003630  0E03               	movlw	3
  8098   003632  18DE               	xorwf	postinc2,w,c
  8099   003634  A4D8               	btfss	status,2,c
  8100   003636  EF1F  F01B         	goto	u5221
  8101   00363A  EF21  F01B         	goto	u5220
  8102   00363E                     u5221:
  8103   00363E  EF3C  F01B         	goto	l4700
  8104   003642                     u5220:
  8105   003642                     
  8106                           ;calibration.c: 98:             adjust_calibration(&(c->right_135));
  8107   003642  0E03               	movlw	3
  8108   003644  2421               	addwf	calibration_routine@c^0,w,c
  8109   003646  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8110   003648  0E00               	movlw	0
  8111   00364A  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8112   00364C  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8113   00364E  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8114   003652                     
  8115                           ;calibration.c: 99:             rightTURN(c->right_135, mL, mR);
  8116   003652  C023  F013         	movff	calibration_routine@mL,rightTURN@mL
  8117   003656  C024  F014         	movff	calibration_routine@mR,rightTURN@mR
  8118   00365A  EE20 F003          	lfsr	2,3
  8119   00365E  5021               	movf	calibration_routine@c^0,w,c
  8120   003660  26D9               	addwf	fsr2l,f,c
  8121   003662  5022               	movf	(calibration_routine@c+1)^0,w,c
  8122   003664  22DA               	addwfc	fsr2h,f,c
  8123   003666  50DF               	movf	indf2,w,c
  8124   003668  ECB2  F01D         	call	_rightTURN
  8125   00366C                     
  8126                           ;calibration.c: 100:             switch_calibration(&(c->index));
  8127   00366C  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8128   003670  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8129   003674  ECA2  F023         	call	_switch_calibration	;wreg free
  8130   003678                     l4700:
  8131                           
  8132                           ;calibration.c: 102:         if(c->index == 4){
  8133   003678  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8134   00367C  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8135   003680  0E04               	movlw	4
  8136   003682  18DE               	xorwf	postinc2,w,c
  8137   003684  A4D8               	btfss	status,2,c
  8138   003686  EF47  F01B         	goto	u5231
  8139   00368A  EF49  F01B         	goto	u5230
  8140   00368E                     u5231:
  8141   00368E  EF64  F01B         	goto	l4708
  8142   003692                     u5230:
  8143   003692                     
  8144                           ;calibration.c: 103:             adjust_calibration(&(c->left_135));
  8145   003692  0E04               	movlw	4
  8146   003694  2421               	addwf	calibration_routine@c^0,w,c
  8147   003696  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8148   003698  0E00               	movlw	0
  8149   00369A  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8150   00369C  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8151   00369E  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8152   0036A2                     
  8153                           ;calibration.c: 104:             leftTURN(c->left_135, mL, mR);
  8154   0036A2  C023  F013         	movff	calibration_routine@mL,leftTURN@mL
  8155   0036A6  C024  F014         	movff	calibration_routine@mR,leftTURN@mR
  8156   0036AA  EE20 F004          	lfsr	2,4
  8157   0036AE  5021               	movf	calibration_routine@c^0,w,c
  8158   0036B0  26D9               	addwf	fsr2l,f,c
  8159   0036B2  5022               	movf	(calibration_routine@c+1)^0,w,c
  8160   0036B4  22DA               	addwfc	fsr2h,f,c
  8161   0036B6  50DF               	movf	indf2,w,c
  8162   0036B8  EC71  F01E         	call	_leftTURN
  8163   0036BC                     
  8164                           ;calibration.c: 105:             switch_calibration(&(c->index));
  8165   0036BC  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8166   0036C0  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8167   0036C4  ECA2  F023         	call	_switch_calibration	;wreg free
  8168   0036C8                     l4708:
  8169                           
  8170                           ;calibration.c: 108:         if(c->index == 5 ){
  8171   0036C8  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8172   0036CC  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8173   0036D0  0E05               	movlw	5
  8174   0036D2  18DE               	xorwf	postinc2,w,c
  8175   0036D4  A4D8               	btfss	status,2,c
  8176   0036D6  EF6F  F01B         	goto	u5241
  8177   0036DA  EF71  F01B         	goto	u5240
  8178   0036DE                     u5241:
  8179   0036DE  EF8C  F01B         	goto	l4716
  8180   0036E2                     u5240:
  8181   0036E2                     
  8182                           ;calibration.c: 109:             adjust_calibration(&(c->forward_one));
  8183   0036E2  0E05               	movlw	5
  8184   0036E4  2421               	addwf	calibration_routine@c^0,w,c
  8185   0036E6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8186   0036E8  0E00               	movlw	0
  8187   0036EA  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8188   0036EC  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8189   0036EE  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8190   0036F2                     
  8191                           ;calibration.c: 110:             forward(c->forward_one, mL, mR);
  8192   0036F2  C023  F013         	movff	calibration_routine@mL,forward@mL
  8193   0036F6  C024  F014         	movff	calibration_routine@mR,forward@mR
  8194   0036FA  EE20 F005          	lfsr	2,5
  8195   0036FE  5021               	movf	calibration_routine@c^0,w,c
  8196   003700  26D9               	addwf	fsr2l,f,c
  8197   003702  5022               	movf	(calibration_routine@c+1)^0,w,c
  8198   003704  22DA               	addwfc	fsr2h,f,c
  8199   003706  50DF               	movf	indf2,w,c
  8200   003708  ECF2  F01C         	call	_forward
  8201   00370C                     
  8202                           ;calibration.c: 111:             switch_calibration(&(c->index));
  8203   00370C  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8204   003710  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8205   003714  ECA2  F023         	call	_switch_calibration	;wreg free
  8206   003718                     l4716:
  8207                           
  8208                           ;calibration.c: 114:         if(c->index == 6){
  8209   003718  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8210   00371C  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8211   003720  0E06               	movlw	6
  8212   003722  18DE               	xorwf	postinc2,w,c
  8213   003724  A4D8               	btfss	status,2,c
  8214   003726  EF97  F01B         	goto	u5251
  8215   00372A  EF99  F01B         	goto	u5250
  8216   00372E                     u5251:
  8217   00372E  EFB4  F01B         	goto	l4724
  8218   003732                     u5250:
  8219   003732                     
  8220                           ;calibration.c: 115:             adjust_calibration(&(c->backward_one));
  8221   003732  0E06               	movlw	6
  8222   003734  2421               	addwf	calibration_routine@c^0,w,c
  8223   003736  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8224   003738  0E00               	movlw	0
  8225   00373A  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8226   00373C  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8227   00373E  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8228   003742                     
  8229                           ;calibration.c: 116:             backward(c->backward_one, mL, mR);
  8230   003742  C023  F013         	movff	calibration_routine@mL,backward@mL
  8231   003746  C024  F014         	movff	calibration_routine@mR,backward@mR
  8232   00374A  EE20 F006          	lfsr	2,6
  8233   00374E  5021               	movf	calibration_routine@c^0,w,c
  8234   003750  26D9               	addwf	fsr2l,f,c
  8235   003752  5022               	movf	(calibration_routine@c+1)^0,w,c
  8236   003754  22DA               	addwfc	fsr2h,f,c
  8237   003756  50DF               	movf	indf2,w,c
  8238   003758  EC30  F01F         	call	_backward
  8239   00375C                     
  8240                           ;calibration.c: 117:             switch_calibration(&(c->index));
  8241   00375C  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8242   003760  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8243   003764  ECA2  F023         	call	_switch_calibration	;wreg free
  8244   003768                     l4724:
  8245                           
  8246                           ;calibration.c: 120:         if(c->index == 7 ){
  8247   003768  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8248   00376C  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8249   003770  0E07               	movlw	7
  8250   003772  18DE               	xorwf	postinc2,w,c
  8251   003774  A4D8               	btfss	status,2,c
  8252   003776  EFBF  F01B         	goto	u5261
  8253   00377A  EFC1  F01B         	goto	u5260
  8254   00377E                     u5261:
  8255   00377E  EFDC  F01B         	goto	l4732
  8256   003782                     u5260:
  8257   003782                     
  8258                           ;calibration.c: 121:             adjust_calibration(&(c->forward_half));
  8259   003782  0E07               	movlw	7
  8260   003784  2421               	addwf	calibration_routine@c^0,w,c
  8261   003786  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8262   003788  0E00               	movlw	0
  8263   00378A  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8264   00378C  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8265   00378E  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8266   003792                     
  8267                           ;calibration.c: 122:             forward(c->forward_half, mL, mR);
  8268   003792  C023  F013         	movff	calibration_routine@mL,forward@mL
  8269   003796  C024  F014         	movff	calibration_routine@mR,forward@mR
  8270   00379A  EE20 F007          	lfsr	2,7
  8271   00379E  5021               	movf	calibration_routine@c^0,w,c
  8272   0037A0  26D9               	addwf	fsr2l,f,c
  8273   0037A2  5022               	movf	(calibration_routine@c+1)^0,w,c
  8274   0037A4  22DA               	addwfc	fsr2h,f,c
  8275   0037A6  50DF               	movf	indf2,w,c
  8276   0037A8  ECF2  F01C         	call	_forward
  8277   0037AC                     
  8278                           ;calibration.c: 123:             switch_calibration(&(c->index));
  8279   0037AC  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8280   0037B0  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8281   0037B4  ECA2  F023         	call	_switch_calibration	;wreg free
  8282   0037B8                     l4732:
  8283                           
  8284                           ;calibration.c: 126:         if(c->index == 8){
  8285   0037B8  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8286   0037BC  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8287   0037C0  0E08               	movlw	8
  8288   0037C2  18DE               	xorwf	postinc2,w,c
  8289   0037C4  A4D8               	btfss	status,2,c
  8290   0037C6  EFE7  F01B         	goto	u5271
  8291   0037CA  EFE9  F01B         	goto	u5270
  8292   0037CE                     u5271:
  8293   0037CE  EF04  F01C         	goto	l4740
  8294   0037D2                     u5270:
  8295   0037D2                     
  8296                           ;calibration.c: 127:             adjust_calibration(&(c->backward_half));
  8297   0037D2  0E08               	movlw	8
  8298   0037D4  2421               	addwf	calibration_routine@c^0,w,c
  8299   0037D6  6E01               	movwf	adjust_calibration@calibration_label^0,c
  8300   0037D8  0E00               	movlw	0
  8301   0037DA  2022               	addwfc	(calibration_routine@c+1)^0,w,c
  8302   0037DC  6E02               	movwf	(adjust_calibration@calibration_label+1)^0,c
  8303   0037DE  ECEE  F01F         	call	_adjust_calibration	;wreg free
  8304   0037E2                     
  8305                           ;calibration.c: 128:             backward(c->backward_half, mL, mR);
  8306   0037E2  C023  F013         	movff	calibration_routine@mL,backward@mL
  8307   0037E6  C024  F014         	movff	calibration_routine@mR,backward@mR
  8308   0037EA  EE20 F008          	lfsr	2,8
  8309   0037EE  5021               	movf	calibration_routine@c^0,w,c
  8310   0037F0  26D9               	addwf	fsr2l,f,c
  8311   0037F2  5022               	movf	(calibration_routine@c+1)^0,w,c
  8312   0037F4  22DA               	addwfc	fsr2h,f,c
  8313   0037F6  50DF               	movf	indf2,w,c
  8314   0037F8  EC30  F01F         	call	_backward
  8315   0037FC                     
  8316                           ;calibration.c: 129:             switch_calibration(&(c->index));
  8317   0037FC  C021  F001         	movff	calibration_routine@c,switch_calibration@calibration_index
  8318   003800  C022  F002         	movff	calibration_routine@c+1,switch_calibration@calibration_index+1
  8319   003804  ECA2  F023         	call	_switch_calibration	;wreg free
  8320   003808                     l4740:
  8321                           
  8322                           ;calibration.c: 132:         if(c->index == 9){
  8323   003808  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8324   00380C  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8325   003810  0E09               	movlw	9
  8326   003812  18DE               	xorwf	postinc2,w,c
  8327   003814  A4D8               	btfss	status,2,c
  8328   003816  EF0F  F01C         	goto	u5281
  8329   00381A  EF11  F01C         	goto	u5280
  8330   00381E                     u5281:
  8331   00381E  EFC5  F01A         	goto	l160
  8332   003822                     u5280:
  8333   003822                     
  8334                           ;calibration.c: 133:             c->index = 1;
  8335   003822  C021  FFD9         	movff	calibration_routine@c,fsr2l
  8336   003826  C022  FFDA         	movff	calibration_routine@c+1,fsr2h
  8337   00382A  0E01               	movlw	1
  8338   00382C  6EDF               	movwf	indf2,c
  8339   00382E  0012               	return		;funcret
  8340   003830                     __end_of_calibration_routine:
  8341                           	callstack 0
  8342                           
  8343 ;; *************** function _switch_calibration *****************
  8344 ;; Defined at:
  8345 ;;		line 60 in file "calibration.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  calibration_    2    0[COMRAM] PTR int 
  8348 ;;		 -> calibration(9), 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8364 ;;Total ram usage:        4 bytes
  8365 ;; Hardware stack levels used: 1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_calibration_routine
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text30
  8374   004744                     __ptext30:
  8375                           	callstack 0
  8376   004744                     _switch_calibration:
  8377                           	callstack 29
  8378   004744                     l152:
  8379                           
  8380                           ;calibration.c: 62:         if(!PORTFbits.RF2){
  8381   004744  B48E               	btfsc	142,2,c	;volatile
  8382   004746  EFA7  F023         	goto	u5181
  8383   00474A  EFA9  F023         	goto	u5180
  8384   00474E                     u5181:
  8385   00474E  EFD9  F023         	goto	l153
  8386   004752                     u5180:
  8387   004752                     
  8388                           ;calibration.c: 63:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8389   004752  0E11               	movlw	17
  8390   004754  6E04               	movwf	(??_switch_calibration+1)^0,c
  8391   004756  0E3C               	movlw	60
  8392   004758  6E03               	movwf	??_switch_calibration^0,c
  8393   00475A  0ECB               	movlw	203
  8394   00475C                     u5557:
  8395   00475C  2EE8               	decfsz	wreg,f,c
  8396   00475E  D7FE               	bra	u5557
  8397   004760  2E03               	decfsz	??_switch_calibration^0,f,c
  8398   004762  D7FC               	bra	u5557
  8399   004764  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8400   004766  D7FA               	bra	u5557
  8401   004768  0000               	nop	
  8402   00476A                     
  8403                           ;calibration.c: 64:             *calibration_index = *calibration_index + 1;
  8404   00476A  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  8405   00476E  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  8406   004772  CFDE F003          	movff	postinc2,??_switch_calibration
  8407   004776  CFDD F004          	movff	postdec2,??_switch_calibration+1
  8408   00477A  0E01               	movlw	1
  8409   00477C  2603               	addwf	??_switch_calibration^0,f,c
  8410   00477E  0E00               	movlw	0
  8411   004780  2204               	addwfc	(??_switch_calibration+1)^0,f,c
  8412   004782  C001  FFD9         	movff	switch_calibration@calibration_index,fsr2l
  8413   004786  C002  FFDA         	movff	switch_calibration@calibration_index+1,fsr2h
  8414   00478A  C003  FFDE         	movff	??_switch_calibration,postinc2
  8415   00478E  C004  FFDD         	movff	??_switch_calibration+1,postdec2
  8416   004792                     
  8417                           ;calibration.c: 65:             LATDbits.LATD7 = 1;
  8418   004792  8E7C               	bsf	124,7,c	;volatile
  8419   004794                     
  8420                           ;calibration.c: 66:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8421   004794  0E11               	movlw	17
  8422   004796  6E04               	movwf	(??_switch_calibration+1)^0,c
  8423   004798  0E3C               	movlw	60
  8424   00479A  6E03               	movwf	??_switch_calibration^0,c
  8425   00479C  0ECB               	movlw	203
  8426   00479E                     u5567:
  8427   00479E  2EE8               	decfsz	wreg,f,c
  8428   0047A0  D7FE               	bra	u5567
  8429   0047A2  2E03               	decfsz	??_switch_calibration^0,f,c
  8430   0047A4  D7FC               	bra	u5567
  8431   0047A6  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8432   0047A8  D7FA               	bra	u5567
  8433   0047AA  0000               	nop	
  8434   0047AC                     
  8435                           ;calibration.c: 67:             LATDbits.LATD7 = 0;
  8436   0047AC  9E7C               	bcf	124,7,c	;volatile
  8437                           
  8438                           ;calibration.c: 68:             break;
  8439   0047AE  EFFA  F023         	goto	l157
  8440   0047B2                     l153:
  8441                           
  8442                           ;calibration.c: 71:         if(!PORTFbits.RF3){
  8443   0047B2  B68E               	btfsc	142,3,c	;volatile
  8444   0047B4  EFDE  F023         	goto	u5191
  8445   0047B8  EFE0  F023         	goto	u5190
  8446   0047BC                     u5191:
  8447   0047BC  EFA2  F023         	goto	l152
  8448   0047C0                     u5190:
  8449   0047C0                     
  8450                           ;calibration.c: 72:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8451   0047C0  0E11               	movlw	17
  8452   0047C2  6E04               	movwf	(??_switch_calibration+1)^0,c
  8453   0047C4  0E3C               	movlw	60
  8454   0047C6  6E03               	movwf	??_switch_calibration^0,c
  8455   0047C8  0ECB               	movlw	203
  8456   0047CA                     u5577:
  8457   0047CA  2EE8               	decfsz	wreg,f,c
  8458   0047CC  D7FE               	bra	u5577
  8459   0047CE  2E03               	decfsz	??_switch_calibration^0,f,c
  8460   0047D0  D7FC               	bra	u5577
  8461   0047D2  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8462   0047D4  D7FA               	bra	u5577
  8463   0047D6  0000               	nop	
  8464   0047D8                     
  8465                           ;calibration.c: 73:             LATHbits.LATH3 = 1;
  8466   0047D8  8680               	bsf	128,3,c	;volatile
  8467                           
  8468                           ;calibration.c: 74:             _delay((unsigned long)((200)*(64000000/4000.0)));
  8469   0047DA  0E11               	movlw	17
  8470   0047DC  6E04               	movwf	(??_switch_calibration+1)^0,c
  8471   0047DE  0E3C               	movlw	60
  8472   0047E0  6E03               	movwf	??_switch_calibration^0,c
  8473   0047E2  0ECB               	movlw	203
  8474   0047E4                     u5587:
  8475   0047E4  2EE8               	decfsz	wreg,f,c
  8476   0047E6  D7FE               	bra	u5587
  8477   0047E8  2E03               	decfsz	??_switch_calibration^0,f,c
  8478   0047EA  D7FC               	bra	u5587
  8479   0047EC  2E04               	decfsz	(??_switch_calibration+1)^0,f,c
  8480   0047EE  D7FA               	bra	u5587
  8481   0047F0  0000               	nop	
  8482   0047F2                     
  8483                           ;calibration.c: 75:             LATHbits.LATH3 = 0;
  8484   0047F2  9680               	bcf	128,3,c	;volatile
  8485   0047F4                     l157:
  8486   0047F4  0012               	return		;funcret
  8487   0047F6                     __end_of_switch_calibration:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function _rightTURN *****************
  8491 ;; Defined at:
  8492 ;;		line 244 in file "dc_motor_v1.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  rotation_cal    1    wreg     unsigned char 
  8495 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8496 ;;		 -> motorL(9), 
  8497 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8498 ;;		 -> motorR(9), 
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8501 ;;  j               2   26[COMRAM] int 
  8502 ;;  i               2   24[COMRAM] int 
  8503 ;;  delay_time      2   30[COMRAM] int 
  8504 ;;  max_power       2   28[COMRAM] int 
  8505 ;;  acceleration    2    0        int 
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8516 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8518 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8519 ;;Total ram usage:       14 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 2
  8522 ;; This function calls:
  8523 ;;		___awdiv
  8524 ;;		_delay_ms_function
  8525 ;;		_setMotorPWM
  8526 ;; This function is called by:
  8527 ;;		_calibration_routine
  8528 ;;		_maze_search
  8529 ;;		_maze_return
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text31
  8534   003B64                     __ptext31:
  8535                           	callstack 0
  8536   003B64                     _rightTURN:
  8537                           	callstack 27
  8538                           
  8539                           ;incstack = 0
  8540                           ;rightTURN@rotation_calibration stored from wreg
  8541   003B64  6E18               	movwf	rightTURN@rotation_calibration^0,c
  8542   003B66                     
  8543                           ;dc_motor_v1.c: 245:     mL->direction = 1;
  8544   003B66  5013               	movf	rightTURN@mL^0,w,c
  8545   003B68  6ED9               	movwf	fsr2l,c
  8546   003B6A  6ADA               	clrf	fsr2h,c
  8547   003B6C  0E01               	movlw	1
  8548   003B6E  26D9               	addwf	fsr2l,f,c
  8549   003B70  0E01               	movlw	1
  8550   003B72  6EDF               	movwf	indf2,c
  8551                           
  8552                           ;dc_motor_v1.c: 246:     mR->direction = 0;
  8553   003B74  5014               	movf	rightTURN@mR^0,w,c
  8554   003B76  6ED9               	movwf	fsr2l,c
  8555   003B78  6ADA               	clrf	fsr2h,c
  8556   003B7A  0E01               	movlw	1
  8557   003B7C  26D9               	addwf	fsr2l,f,c
  8558   003B7E  6ADF               	clrf	indf2,c
  8559   003B80                     
  8560                           ;dc_motor_v1.c: 248:    int max_power = 40;
  8561   003B80  0E00               	movlw	0
  8562   003B82  6E1E               	movwf	(rightTURN@max_power+1)^0,c
  8563   003B84  0E28               	movlw	40
  8564   003B86  6E1D               	movwf	rightTURN@max_power^0,c
  8565   003B88                     
  8566                           ;dc_motor_v1.c: 250:     int delay_time = acceleration_time/max_power;
  8567   003B88  0E00               	movlw	0
  8568   003B8A  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8569   003B8C  0E64               	movlw	100
  8570   003B8E  6E01               	movwf	___awdiv@dividend^0,c
  8571   003B90  0E00               	movlw	0
  8572   003B92  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8573   003B94  0E28               	movlw	40
  8574   003B96  6E03               	movwf	___awdiv@divisor^0,c
  8575   003B98  EC40  F023         	call	___awdiv	;wreg free
  8576   003B9C  C001  F01F         	movff	?___awdiv,rightTURN@delay_time
  8577   003BA0  C002  F020         	movff	?___awdiv+1,rightTURN@delay_time+1
  8578   003BA4                     
  8579                           ;dc_motor_v1.c: 253:     for(int i=0; i< max_power; i++){
  8580   003BA4  0E00               	movlw	0
  8581   003BA6  6E1A               	movwf	(rightTURN@i+1)^0,c
  8582   003BA8  0E00               	movlw	0
  8583   003BAA  6E19               	movwf	rightTURN@i^0,c
  8584   003BAC  EFFC  F01D         	goto	l4022
  8585   003BB0                     l4012:
  8586                           
  8587                           ;dc_motor_v1.c: 254:         mL->power = mL->power + 1;
  8588   003BB0  5013               	movf	rightTURN@mL^0,w,c
  8589   003BB2  6ED9               	movwf	fsr2l,c
  8590   003BB4  6ADA               	clrf	fsr2h,c
  8591   003BB6  5013               	movf	rightTURN@mL^0,w,c
  8592   003BB8  6EE1               	movwf	fsr1l,c
  8593   003BBA  6AE2               	clrf	fsr1h,c
  8594   003BBC  50E7               	movf	indf1,w,c
  8595   003BBE  6E15               	movwf	??_rightTURN^0,c
  8596   003BC0  2815               	incf	??_rightTURN^0,w,c
  8597   003BC2  6EDF               	movwf	indf2,c
  8598                           
  8599                           ;dc_motor_v1.c: 255:         mR->power = mR->power + 1 ;
  8600   003BC4  5014               	movf	rightTURN@mR^0,w,c
  8601   003BC6  6ED9               	movwf	fsr2l,c
  8602   003BC8  6ADA               	clrf	fsr2h,c
  8603   003BCA  5014               	movf	rightTURN@mR^0,w,c
  8604   003BCC  6EE1               	movwf	fsr1l,c
  8605   003BCE  6AE2               	clrf	fsr1h,c
  8606   003BD0  50E7               	movf	indf1,w,c
  8607   003BD2  6E15               	movwf	??_rightTURN^0,c
  8608   003BD4  2815               	incf	??_rightTURN^0,w,c
  8609   003BD6  6EDF               	movwf	indf2,c
  8610   003BD8                     
  8611                           ;dc_motor_v1.c: 256:         setMotorPWM(mR);
  8612   003BD8  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8613   003BDC  EC99  F020         	call	_setMotorPWM	;wreg free
  8614   003BE0                     
  8615                           ;dc_motor_v1.c: 257:         setMotorPWM(mL);
  8616   003BE0  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8617   003BE4  EC99  F020         	call	_setMotorPWM	;wreg free
  8618   003BE8                     
  8619                           ;dc_motor_v1.c: 258:         delay_ms_function(delay_time);
  8620   003BE8  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8621   003BEC  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8622   003BF0  EC22  F026         	call	_delay_ms_function	;wreg free
  8623   003BF4                     
  8624                           ;dc_motor_v1.c: 259:     }
  8625   003BF4  4A19               	infsnz	rightTURN@i^0,f,c
  8626   003BF6  2A1A               	incf	(rightTURN@i+1)^0,f,c
  8627   003BF8                     l4022:
  8628   003BF8  501D               	movf	rightTURN@max_power^0,w,c
  8629   003BFA  5C19               	subwf	rightTURN@i^0,w,c
  8630   003BFC  501A               	movf	(rightTURN@i+1)^0,w,c
  8631   003BFE  0A80               	xorlw	128
  8632   003C00  6E15               	movwf	??_rightTURN^0,c
  8633   003C02  501E               	movf	(rightTURN@max_power+1)^0,w,c
  8634   003C04  0A80               	xorlw	128
  8635   003C06  5815               	subwfb	??_rightTURN^0,w,c
  8636   003C08  A0D8               	btfss	status,0,c
  8637   003C0A  EF09  F01E         	goto	u4461
  8638   003C0E  EF0B  F01E         	goto	u4460
  8639   003C12                     u4461:
  8640   003C12  EFD8  F01D         	goto	l4012
  8641   003C16                     u4460:
  8642   003C16                     
  8643                           ;dc_motor_v1.c: 262:     for(int j=0; j<rotation_calibration; j++){
  8644   003C16  0E00               	movlw	0
  8645   003C18  6E1C               	movwf	(rightTURN@j+1)^0,c
  8646   003C1A  0E00               	movlw	0
  8647   003C1C  6E1B               	movwf	rightTURN@j^0,c
  8648   003C1E  EF1A  F01E         	goto	l302
  8649   003C22                     l4026:
  8650                           
  8651                           ;dc_motor_v1.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8652   003C22  0ED0               	movlw	208
  8653   003C24  6E15               	movwf	??_rightTURN^0,c
  8654   003C26  0ECA               	movlw	202
  8655   003C28                     u5597:
  8656   003C28  2EE8               	decfsz	wreg,f,c
  8657   003C2A  D7FE               	bra	u5597
  8658   003C2C  2E15               	decfsz	??_rightTURN^0,f,c
  8659   003C2E  D7FC               	bra	u5597
  8660   003C30                     
  8661                           ;dc_motor_v1.c: 264:     }
  8662   003C30  4A1B               	infsnz	rightTURN@j^0,f,c
  8663   003C32  2A1C               	incf	(rightTURN@j+1)^0,f,c
  8664   003C34                     l302:
  8665   003C34  5018               	movf	rightTURN@rotation_calibration^0,w,c
  8666   003C36  6E15               	movwf	??_rightTURN^0,c
  8667   003C38  6A16               	clrf	(??_rightTURN+1)^0,c
  8668   003C3A  5015               	movf	??_rightTURN^0,w,c
  8669   003C3C  5C1B               	subwf	rightTURN@j^0,w,c
  8670   003C3E  501C               	movf	(rightTURN@j+1)^0,w,c
  8671   003C40  0A80               	xorlw	128
  8672   003C42  6E17               	movwf	(??_rightTURN+2)^0,c
  8673   003C44  5016               	movf	(??_rightTURN+1)^0,w,c
  8674   003C46  0A80               	xorlw	128
  8675   003C48  5817               	subwfb	(??_rightTURN+2)^0,w,c
  8676   003C4A  A0D8               	btfss	status,0,c
  8677   003C4C  EF2A  F01E         	goto	u4471
  8678   003C50  EF2C  F01E         	goto	u4470
  8679   003C54                     u4471:
  8680   003C54  EF11  F01E         	goto	l4026
  8681   003C58                     u4470:
  8682   003C58  EF5A  F01E         	goto	l4044
  8683   003C5C                     l4030:
  8684                           
  8685                           ;dc_motor_v1.c: 268:         if(mR->power> 0 ){
  8686   003C5C  5014               	movf	rightTURN@mR^0,w,c
  8687   003C5E  6ED9               	movwf	fsr2l,c
  8688   003C60  6ADA               	clrf	fsr2h,c
  8689   003C62  50DF               	movf	indf2,w,c
  8690   003C64  B4D8               	btfsc	status,2,c
  8691   003C66  EF37  F01E         	goto	u4481
  8692   003C6A  EF39  F01E         	goto	u4480
  8693   003C6E                     u4481:
  8694   003C6E  EF3D  F01E         	goto	l4034
  8695   003C72                     u4480:
  8696   003C72                     
  8697                           ;dc_motor_v1.c: 269:             mR->power--;
  8698   003C72  5014               	movf	rightTURN@mR^0,w,c
  8699   003C74  6ED9               	movwf	fsr2l,c
  8700   003C76  6ADA               	clrf	fsr2h,c
  8701   003C78  06DF               	decf	indf2,f,c
  8702   003C7A                     l4034:
  8703                           
  8704                           ;dc_motor_v1.c: 271:         if(mL->power> 0 ){
  8705   003C7A  5013               	movf	rightTURN@mL^0,w,c
  8706   003C7C  6ED9               	movwf	fsr2l,c
  8707   003C7E  6ADA               	clrf	fsr2h,c
  8708   003C80  50DF               	movf	indf2,w,c
  8709   003C82  B4D8               	btfsc	status,2,c
  8710   003C84  EF46  F01E         	goto	u4491
  8711   003C88  EF48  F01E         	goto	u4490
  8712   003C8C                     u4491:
  8713   003C8C  EF4C  F01E         	goto	l4038
  8714   003C90                     u4490:
  8715   003C90                     
  8716                           ;dc_motor_v1.c: 272:             mL->power--;
  8717   003C90  5013               	movf	rightTURN@mL^0,w,c
  8718   003C92  6ED9               	movwf	fsr2l,c
  8719   003C94  6ADA               	clrf	fsr2h,c
  8720   003C96  06DF               	decf	indf2,f,c
  8721   003C98                     l4038:
  8722                           
  8723                           ;dc_motor_v1.c: 274:         setMotorPWM(mR);
  8724   003C98  C014  F00E         	movff	rightTURN@mR,setMotorPWM@m
  8725   003C9C  EC99  F020         	call	_setMotorPWM	;wreg free
  8726   003CA0                     
  8727                           ;dc_motor_v1.c: 275:         setMotorPWM(mL);
  8728   003CA0  C013  F00E         	movff	rightTURN@mL,setMotorPWM@m
  8729   003CA4  EC99  F020         	call	_setMotorPWM	;wreg free
  8730   003CA8                     
  8731                           ;dc_motor_v1.c: 276:         delay_ms_function(delay_time);
  8732   003CA8  C01F  F001         	movff	rightTURN@delay_time,delay_ms_function@milliseconds
  8733   003CAC  C020  F002         	movff	rightTURN@delay_time+1,delay_ms_function@milliseconds+1
  8734   003CB0  EC22  F026         	call	_delay_ms_function	;wreg free
  8735   003CB4                     l4044:
  8736                           
  8737                           ;dc_motor_v1.c: 267:     while(mL->power || mR->power > 0){
  8738   003CB4  5013               	movf	rightTURN@mL^0,w,c
  8739   003CB6  6ED9               	movwf	fsr2l,c
  8740   003CB8  6ADA               	clrf	fsr2h,c
  8741   003CBA  50DF               	movf	indf2,w,c
  8742   003CBC  A4D8               	btfss	status,2,c
  8743   003CBE  EF63  F01E         	goto	u4501
  8744   003CC2  EF65  F01E         	goto	u4500
  8745   003CC6                     u4501:
  8746   003CC6  EF2E  F01E         	goto	l4030
  8747   003CCA                     u4500:
  8748   003CCA  5014               	movf	rightTURN@mR^0,w,c
  8749   003CCC  6ED9               	movwf	fsr2l,c
  8750   003CCE  6ADA               	clrf	fsr2h,c
  8751   003CD0  50DF               	movf	indf2,w,c
  8752   003CD2  A4D8               	btfss	status,2,c
  8753   003CD4  EF6E  F01E         	goto	u4511
  8754   003CD8  EF70  F01E         	goto	u4510
  8755   003CDC                     u4511:
  8756   003CDC  EF2E  F01E         	goto	l4030
  8757   003CE0                     u4510:
  8758   003CE0  0012               	return		;funcret
  8759   003CE2                     __end_of_rightTURN:
  8760                           	callstack 0
  8761                           
  8762 ;; *************** function _leftTURN *****************
  8763 ;; Defined at:
  8764 ;;		line 206 in file "dc_motor_v1.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  rotation_cal    1    wreg     unsigned char 
  8767 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  8768 ;;		 -> motorL(9), 
  8769 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  8770 ;;		 -> motorR(9), 
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;  rotation_cal    1   23[COMRAM] unsigned char 
  8773 ;;  j               2   26[COMRAM] int 
  8774 ;;  i               2   24[COMRAM] int 
  8775 ;;  delay_time      2   30[COMRAM] int 
  8776 ;;  max_power       2   28[COMRAM] int 
  8777 ;;  acceleration    2    0        int 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      void 
  8780 ;; Registers used:
  8781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8788 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8789 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8790 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8791 ;;Total ram usage:       14 bytes
  8792 ;; Hardware stack levels used: 1
  8793 ;; Hardware stack levels required when called: 2
  8794 ;; This function calls:
  8795 ;;		___awdiv
  8796 ;;		_delay_ms_function
  8797 ;;		_setMotorPWM
  8798 ;; This function is called by:
  8799 ;;		_calibration_routine
  8800 ;;		_maze_search
  8801 ;;		_maze_return
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text32
  8806   003CE2                     __ptext32:
  8807                           	callstack 0
  8808   003CE2                     _leftTURN:
  8809                           	callstack 27
  8810                           
  8811                           ;incstack = 0
  8812                           ;leftTURN@rotation_calibration stored from wreg
  8813   003CE2  6E18               	movwf	leftTURN@rotation_calibration^0,c
  8814   003CE4                     
  8815                           ;dc_motor_v1.c: 207:     mL->direction = 0;
  8816   003CE4  5013               	movf	leftTURN@mL^0,w,c
  8817   003CE6  6ED9               	movwf	fsr2l,c
  8818   003CE8  6ADA               	clrf	fsr2h,c
  8819   003CEA  0E01               	movlw	1
  8820   003CEC  26D9               	addwf	fsr2l,f,c
  8821   003CEE  6ADF               	clrf	indf2,c
  8822                           
  8823                           ;dc_motor_v1.c: 208:     mR->direction = 1;
  8824   003CF0  5014               	movf	leftTURN@mR^0,w,c
  8825   003CF2  6ED9               	movwf	fsr2l,c
  8826   003CF4  6ADA               	clrf	fsr2h,c
  8827   003CF6  0E01               	movlw	1
  8828   003CF8  26D9               	addwf	fsr2l,f,c
  8829   003CFA  0E01               	movlw	1
  8830   003CFC  6EDF               	movwf	indf2,c
  8831   003CFE                     
  8832                           ;dc_motor_v1.c: 210:     int max_power = 40;
  8833   003CFE  0E00               	movlw	0
  8834   003D00  6E1E               	movwf	(leftTURN@max_power+1)^0,c
  8835   003D02  0E28               	movlw	40
  8836   003D04  6E1D               	movwf	leftTURN@max_power^0,c
  8837   003D06                     
  8838                           ;dc_motor_v1.c: 212:     int delay_time = acceleration_time/max_power;
  8839   003D06  0E00               	movlw	0
  8840   003D08  6E02               	movwf	(___awdiv@dividend+1)^0,c
  8841   003D0A  0E64               	movlw	100
  8842   003D0C  6E01               	movwf	___awdiv@dividend^0,c
  8843   003D0E  0E00               	movlw	0
  8844   003D10  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8845   003D12  0E28               	movlw	40
  8846   003D14  6E03               	movwf	___awdiv@divisor^0,c
  8847   003D16  EC40  F023         	call	___awdiv	;wreg free
  8848   003D1A  C001  F01F         	movff	?___awdiv,leftTURN@delay_time
  8849   003D1E  C002  F020         	movff	?___awdiv+1,leftTURN@delay_time+1
  8850   003D22                     
  8851                           ;dc_motor_v1.c: 215:     for(int i=0; i< max_power; i++){
  8852   003D22  0E00               	movlw	0
  8853   003D24  6E1A               	movwf	(leftTURN@i+1)^0,c
  8854   003D26  0E00               	movlw	0
  8855   003D28  6E19               	movwf	leftTURN@i^0,c
  8856   003D2A  EFBB  F01E         	goto	l4068
  8857   003D2E                     l4058:
  8858                           
  8859                           ;dc_motor_v1.c: 216:         mL->power = mL->power + 1;
  8860   003D2E  5013               	movf	leftTURN@mL^0,w,c
  8861   003D30  6ED9               	movwf	fsr2l,c
  8862   003D32  6ADA               	clrf	fsr2h,c
  8863   003D34  5013               	movf	leftTURN@mL^0,w,c
  8864   003D36  6EE1               	movwf	fsr1l,c
  8865   003D38  6AE2               	clrf	fsr1h,c
  8866   003D3A  50E7               	movf	indf1,w,c
  8867   003D3C  6E15               	movwf	??_leftTURN^0,c
  8868   003D3E  2815               	incf	??_leftTURN^0,w,c
  8869   003D40  6EDF               	movwf	indf2,c
  8870                           
  8871                           ;dc_motor_v1.c: 217:         mR->power = mR->power + 1 ;
  8872   003D42  5014               	movf	leftTURN@mR^0,w,c
  8873   003D44  6ED9               	movwf	fsr2l,c
  8874   003D46  6ADA               	clrf	fsr2h,c
  8875   003D48  5014               	movf	leftTURN@mR^0,w,c
  8876   003D4A  6EE1               	movwf	fsr1l,c
  8877   003D4C  6AE2               	clrf	fsr1h,c
  8878   003D4E  50E7               	movf	indf1,w,c
  8879   003D50  6E15               	movwf	??_leftTURN^0,c
  8880   003D52  2815               	incf	??_leftTURN^0,w,c
  8881   003D54  6EDF               	movwf	indf2,c
  8882   003D56                     
  8883                           ;dc_motor_v1.c: 218:         setMotorPWM(mR);
  8884   003D56  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8885   003D5A  EC99  F020         	call	_setMotorPWM	;wreg free
  8886   003D5E                     
  8887                           ;dc_motor_v1.c: 219:         setMotorPWM(mL);
  8888   003D5E  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  8889   003D62  EC99  F020         	call	_setMotorPWM	;wreg free
  8890   003D66                     
  8891                           ;dc_motor_v1.c: 220:         delay_ms_function(delay_time);
  8892   003D66  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  8893   003D6A  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  8894   003D6E  EC22  F026         	call	_delay_ms_function	;wreg free
  8895   003D72                     
  8896                           ;dc_motor_v1.c: 221:     }
  8897   003D72  4A19               	infsnz	leftTURN@i^0,f,c
  8898   003D74  2A1A               	incf	(leftTURN@i+1)^0,f,c
  8899   003D76                     l4068:
  8900   003D76  501D               	movf	leftTURN@max_power^0,w,c
  8901   003D78  5C19               	subwf	leftTURN@i^0,w,c
  8902   003D7A  501A               	movf	(leftTURN@i+1)^0,w,c
  8903   003D7C  0A80               	xorlw	128
  8904   003D7E  6E15               	movwf	??_leftTURN^0,c
  8905   003D80  501E               	movf	(leftTURN@max_power+1)^0,w,c
  8906   003D82  0A80               	xorlw	128
  8907   003D84  5815               	subwfb	??_leftTURN^0,w,c
  8908   003D86  A0D8               	btfss	status,0,c
  8909   003D88  EFC8  F01E         	goto	u4521
  8910   003D8C  EFCA  F01E         	goto	u4520
  8911   003D90                     u4521:
  8912   003D90  EF97  F01E         	goto	l4058
  8913   003D94                     u4520:
  8914   003D94                     
  8915                           ;dc_motor_v1.c: 224:     for(int j=0; j<rotation_calibration; j++){
  8916   003D94  0E00               	movlw	0
  8917   003D96  6E1C               	movwf	(leftTURN@j+1)^0,c
  8918   003D98  0E00               	movlw	0
  8919   003D9A  6E1B               	movwf	leftTURN@j^0,c
  8920   003D9C  EFD9  F01E         	goto	l288
  8921   003DA0                     l4072:
  8922                           
  8923                           ;dc_motor_v1.c: 225:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8924   003DA0  0ED0               	movlw	208
  8925   003DA2  6E15               	movwf	??_leftTURN^0,c
  8926   003DA4  0ECA               	movlw	202
  8927   003DA6                     u5607:
  8928   003DA6  2EE8               	decfsz	wreg,f,c
  8929   003DA8  D7FE               	bra	u5607
  8930   003DAA  2E15               	decfsz	??_leftTURN^0,f,c
  8931   003DAC  D7FC               	bra	u5607
  8932   003DAE                     
  8933                           ;dc_motor_v1.c: 226:     }
  8934   003DAE  4A1B               	infsnz	leftTURN@j^0,f,c
  8935   003DB0  2A1C               	incf	(leftTURN@j+1)^0,f,c
  8936   003DB2                     l288:
  8937   003DB2  5018               	movf	leftTURN@rotation_calibration^0,w,c
  8938   003DB4  6E15               	movwf	??_leftTURN^0,c
  8939   003DB6  6A16               	clrf	(??_leftTURN+1)^0,c
  8940   003DB8  5015               	movf	??_leftTURN^0,w,c
  8941   003DBA  5C1B               	subwf	leftTURN@j^0,w,c
  8942   003DBC  501C               	movf	(leftTURN@j+1)^0,w,c
  8943   003DBE  0A80               	xorlw	128
  8944   003DC0  6E17               	movwf	(??_leftTURN+2)^0,c
  8945   003DC2  5016               	movf	(??_leftTURN+1)^0,w,c
  8946   003DC4  0A80               	xorlw	128
  8947   003DC6  5817               	subwfb	(??_leftTURN+2)^0,w,c
  8948   003DC8  A0D8               	btfss	status,0,c
  8949   003DCA  EFE9  F01E         	goto	u4531
  8950   003DCE  EFEB  F01E         	goto	u4530
  8951   003DD2                     u4531:
  8952   003DD2  EFD0  F01E         	goto	l4072
  8953   003DD6                     u4530:
  8954   003DD6  EF19  F01F         	goto	l4090
  8955   003DDA                     l4076:
  8956                           
  8957                           ;dc_motor_v1.c: 230:         if(mR->power> 0 ){
  8958   003DDA  5014               	movf	leftTURN@mR^0,w,c
  8959   003DDC  6ED9               	movwf	fsr2l,c
  8960   003DDE  6ADA               	clrf	fsr2h,c
  8961   003DE0  50DF               	movf	indf2,w,c
  8962   003DE2  B4D8               	btfsc	status,2,c
  8963   003DE4  EFF6  F01E         	goto	u4541
  8964   003DE8  EFF8  F01E         	goto	u4540
  8965   003DEC                     u4541:
  8966   003DEC  EFFC  F01E         	goto	l4080
  8967   003DF0                     u4540:
  8968   003DF0                     
  8969                           ;dc_motor_v1.c: 231:             mR->power--;
  8970   003DF0  5014               	movf	leftTURN@mR^0,w,c
  8971   003DF2  6ED9               	movwf	fsr2l,c
  8972   003DF4  6ADA               	clrf	fsr2h,c
  8973   003DF6  06DF               	decf	indf2,f,c
  8974   003DF8                     l4080:
  8975                           
  8976                           ;dc_motor_v1.c: 233:         if(mL->power> 0 ){
  8977   003DF8  5013               	movf	leftTURN@mL^0,w,c
  8978   003DFA  6ED9               	movwf	fsr2l,c
  8979   003DFC  6ADA               	clrf	fsr2h,c
  8980   003DFE  50DF               	movf	indf2,w,c
  8981   003E00  B4D8               	btfsc	status,2,c
  8982   003E02  EF05  F01F         	goto	u4551
  8983   003E06  EF07  F01F         	goto	u4550
  8984   003E0A                     u4551:
  8985   003E0A  EF0B  F01F         	goto	l4084
  8986   003E0E                     u4550:
  8987   003E0E                     
  8988                           ;dc_motor_v1.c: 234:             mL->power--;
  8989   003E0E  5013               	movf	leftTURN@mL^0,w,c
  8990   003E10  6ED9               	movwf	fsr2l,c
  8991   003E12  6ADA               	clrf	fsr2h,c
  8992   003E14  06DF               	decf	indf2,f,c
  8993   003E16                     l4084:
  8994                           
  8995                           ;dc_motor_v1.c: 236:         setMotorPWM(mR);
  8996   003E16  C014  F00E         	movff	leftTURN@mR,setMotorPWM@m
  8997   003E1A  EC99  F020         	call	_setMotorPWM	;wreg free
  8998   003E1E                     
  8999                           ;dc_motor_v1.c: 237:         setMotorPWM(mL);
  9000   003E1E  C013  F00E         	movff	leftTURN@mL,setMotorPWM@m
  9001   003E22  EC99  F020         	call	_setMotorPWM	;wreg free
  9002   003E26                     
  9003                           ;dc_motor_v1.c: 238:         delay_ms_function(delay_time);
  9004   003E26  C01F  F001         	movff	leftTURN@delay_time,delay_ms_function@milliseconds
  9005   003E2A  C020  F002         	movff	leftTURN@delay_time+1,delay_ms_function@milliseconds+1
  9006   003E2E  EC22  F026         	call	_delay_ms_function	;wreg free
  9007   003E32                     l4090:
  9008                           
  9009                           ;dc_motor_v1.c: 229:     while(mL->power || mR->power > 0){
  9010   003E32  5013               	movf	leftTURN@mL^0,w,c
  9011   003E34  6ED9               	movwf	fsr2l,c
  9012   003E36  6ADA               	clrf	fsr2h,c
  9013   003E38  50DF               	movf	indf2,w,c
  9014   003E3A  A4D8               	btfss	status,2,c
  9015   003E3C  EF22  F01F         	goto	u4561
  9016   003E40  EF24  F01F         	goto	u4560
  9017   003E44                     u4561:
  9018   003E44  EFED  F01E         	goto	l4076
  9019   003E48                     u4560:
  9020   003E48  5014               	movf	leftTURN@mR^0,w,c
  9021   003E4A  6ED9               	movwf	fsr2l,c
  9022   003E4C  6ADA               	clrf	fsr2h,c
  9023   003E4E  50DF               	movf	indf2,w,c
  9024   003E50  A4D8               	btfss	status,2,c
  9025   003E52  EF2D  F01F         	goto	u4571
  9026   003E56  EF2F  F01F         	goto	u4570
  9027   003E5A                     u4571:
  9028   003E5A  EFED  F01E         	goto	l4076
  9029   003E5E                     u4570:
  9030   003E5E  0012               	return		;funcret
  9031   003E60                     __end_of_leftTURN:
  9032                           	callstack 0
  9033                           
  9034 ;; *************** function _forward *****************
  9035 ;; Defined at:
  9036 ;;		line 122 in file "dc_motor_v1.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  Distance_Cal    1    wreg     unsigned char 
  9039 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9040 ;;		 -> motorL(9), 
  9041 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9042 ;;		 -> motorR(9), 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9045 ;;  j               2   26[COMRAM] int 
  9046 ;;  i               2   24[COMRAM] int 
  9047 ;;  delay_time      2   30[COMRAM] int 
  9048 ;;  max_power       2   28[COMRAM] int 
  9049 ;;  acceleration    2    0        int 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  1    wreg      void 
  9052 ;; Registers used:
  9053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;Total ram usage:       14 bytes
  9064 ;; Hardware stack levels used: 1
  9065 ;; Hardware stack levels required when called: 2
  9066 ;; This function calls:
  9067 ;;		___awdiv
  9068 ;;		_delay_ms_function
  9069 ;;		_setMotorPWM
  9070 ;; This function is called by:
  9071 ;;		_calibration_routine
  9072 ;;		_maze_search
  9073 ;;		_maze_return
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text33
  9078   0039E4                     __ptext33:
  9079                           	callstack 0
  9080   0039E4                     _forward:
  9081                           	callstack 27
  9082                           
  9083                           ;incstack = 0
  9084                           ;forward@Distance_Calibration stored from wreg
  9085   0039E4  6E18               	movwf	forward@Distance_Calibration^0,c
  9086   0039E6                     
  9087                           ;dc_motor_v1.c: 123:     mL->direction = 1;
  9088   0039E6  5013               	movf	forward@mL^0,w,c
  9089   0039E8  6ED9               	movwf	fsr2l,c
  9090   0039EA  6ADA               	clrf	fsr2h,c
  9091   0039EC  0E01               	movlw	1
  9092   0039EE  26D9               	addwf	fsr2l,f,c
  9093   0039F0  0E01               	movlw	1
  9094   0039F2  6EDF               	movwf	indf2,c
  9095                           
  9096                           ;dc_motor_v1.c: 124:     mR->direction = 1;
  9097   0039F4  5014               	movf	forward@mR^0,w,c
  9098   0039F6  6ED9               	movwf	fsr2l,c
  9099   0039F8  6ADA               	clrf	fsr2h,c
  9100   0039FA  0E01               	movlw	1
  9101   0039FC  26D9               	addwf	fsr2l,f,c
  9102   0039FE  0E01               	movlw	1
  9103   003A00  6EDF               	movwf	indf2,c
  9104   003A02                     
  9105                           ;dc_motor_v1.c: 131:     int max_power = 40;
  9106   003A02  0E00               	movlw	0
  9107   003A04  6E1E               	movwf	(forward@max_power+1)^0,c
  9108   003A06  0E28               	movlw	40
  9109   003A08  6E1D               	movwf	forward@max_power^0,c
  9110   003A0A                     
  9111                           ;dc_motor_v1.c: 133:     int delay_time = acceleration_time/max_power;
  9112   003A0A  0E00               	movlw	0
  9113   003A0C  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9114   003A0E  0E64               	movlw	100
  9115   003A10  6E01               	movwf	___awdiv@dividend^0,c
  9116   003A12  0E00               	movlw	0
  9117   003A14  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9118   003A16  0E28               	movlw	40
  9119   003A18  6E03               	movwf	___awdiv@divisor^0,c
  9120   003A1A  EC40  F023         	call	___awdiv	;wreg free
  9121   003A1E  C001  F01F         	movff	?___awdiv,forward@delay_time
  9122   003A22  C002  F020         	movff	?___awdiv+1,forward@delay_time+1
  9123   003A26                     
  9124                           ;dc_motor_v1.c: 136:     for(int i=0; i< max_power; i++){
  9125   003A26  0E00               	movlw	0
  9126   003A28  6E1A               	movwf	(forward@i+1)^0,c
  9127   003A2A  0E00               	movlw	0
  9128   003A2C  6E19               	movwf	forward@i^0,c
  9129   003A2E  EF3D  F01D         	goto	l4114
  9130   003A32                     l4104:
  9131                           
  9132                           ;dc_motor_v1.c: 137:         mL->power = mL->power + 1;
  9133   003A32  5013               	movf	forward@mL^0,w,c
  9134   003A34  6ED9               	movwf	fsr2l,c
  9135   003A36  6ADA               	clrf	fsr2h,c
  9136   003A38  5013               	movf	forward@mL^0,w,c
  9137   003A3A  6EE1               	movwf	fsr1l,c
  9138   003A3C  6AE2               	clrf	fsr1h,c
  9139   003A3E  50E7               	movf	indf1,w,c
  9140   003A40  6E15               	movwf	??_forward^0,c
  9141   003A42  2815               	incf	??_forward^0,w,c
  9142   003A44  6EDF               	movwf	indf2,c
  9143                           
  9144                           ;dc_motor_v1.c: 138:         mR->power = mR->power + 1 ;
  9145   003A46  5014               	movf	forward@mR^0,w,c
  9146   003A48  6ED9               	movwf	fsr2l,c
  9147   003A4A  6ADA               	clrf	fsr2h,c
  9148   003A4C  5014               	movf	forward@mR^0,w,c
  9149   003A4E  6EE1               	movwf	fsr1l,c
  9150   003A50  6AE2               	clrf	fsr1h,c
  9151   003A52  50E7               	movf	indf1,w,c
  9152   003A54  6E15               	movwf	??_forward^0,c
  9153   003A56  2815               	incf	??_forward^0,w,c
  9154   003A58  6EDF               	movwf	indf2,c
  9155   003A5A                     
  9156                           ;dc_motor_v1.c: 139:         setMotorPWM(mR);
  9157   003A5A  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9158   003A5E  EC99  F020         	call	_setMotorPWM	;wreg free
  9159   003A62                     
  9160                           ;dc_motor_v1.c: 140:         setMotorPWM(mL);
  9161   003A62  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9162   003A66  EC99  F020         	call	_setMotorPWM	;wreg free
  9163   003A6A                     
  9164                           ;dc_motor_v1.c: 141:         delay_ms_function(delay_time);
  9165   003A6A  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9166   003A6E  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9167   003A72  EC22  F026         	call	_delay_ms_function	;wreg free
  9168   003A76                     
  9169                           ;dc_motor_v1.c: 142:     }
  9170   003A76  4A19               	infsnz	forward@i^0,f,c
  9171   003A78  2A1A               	incf	(forward@i+1)^0,f,c
  9172   003A7A                     l4114:
  9173   003A7A  501D               	movf	forward@max_power^0,w,c
  9174   003A7C  5C19               	subwf	forward@i^0,w,c
  9175   003A7E  501A               	movf	(forward@i+1)^0,w,c
  9176   003A80  0A80               	xorlw	128
  9177   003A82  6E15               	movwf	??_forward^0,c
  9178   003A84  501E               	movf	(forward@max_power+1)^0,w,c
  9179   003A86  0A80               	xorlw	128
  9180   003A88  5815               	subwfb	??_forward^0,w,c
  9181   003A8A  A0D8               	btfss	status,0,c
  9182   003A8C  EF4A  F01D         	goto	u4581
  9183   003A90  EF4C  F01D         	goto	u4580
  9184   003A94                     u4581:
  9185   003A94  EF19  F01D         	goto	l4104
  9186   003A98                     u4580:
  9187   003A98                     
  9188                           ;dc_motor_v1.c: 147:     for(int j=0; j<Distance_Calibration; j++){
  9189   003A98  0E00               	movlw	0
  9190   003A9A  6E1C               	movwf	(forward@j+1)^0,c
  9191   003A9C  0E00               	movlw	0
  9192   003A9E  6E1B               	movwf	forward@j^0,c
  9193   003AA0  EF5B  F01D         	goto	l260
  9194   003AA4                     l4118:
  9195                           
  9196                           ;dc_motor_v1.c: 148:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9197   003AA4  0ED0               	movlw	208
  9198   003AA6  6E15               	movwf	??_forward^0,c
  9199   003AA8  0ECA               	movlw	202
  9200   003AAA                     u5617:
  9201   003AAA  2EE8               	decfsz	wreg,f,c
  9202   003AAC  D7FE               	bra	u5617
  9203   003AAE  2E15               	decfsz	??_forward^0,f,c
  9204   003AB0  D7FC               	bra	u5617
  9205   003AB2                     
  9206                           ;dc_motor_v1.c: 149:     }
  9207   003AB2  4A1B               	infsnz	forward@j^0,f,c
  9208   003AB4  2A1C               	incf	(forward@j+1)^0,f,c
  9209   003AB6                     l260:
  9210   003AB6  5018               	movf	forward@Distance_Calibration^0,w,c
  9211   003AB8  6E15               	movwf	??_forward^0,c
  9212   003ABA  6A16               	clrf	(??_forward+1)^0,c
  9213   003ABC  5015               	movf	??_forward^0,w,c
  9214   003ABE  5C1B               	subwf	forward@j^0,w,c
  9215   003AC0  501C               	movf	(forward@j+1)^0,w,c
  9216   003AC2  0A80               	xorlw	128
  9217   003AC4  6E17               	movwf	(??_forward+2)^0,c
  9218   003AC6  5016               	movf	(??_forward+1)^0,w,c
  9219   003AC8  0A80               	xorlw	128
  9220   003ACA  5817               	subwfb	(??_forward+2)^0,w,c
  9221   003ACC  A0D8               	btfss	status,0,c
  9222   003ACE  EF6B  F01D         	goto	u4591
  9223   003AD2  EF6D  F01D         	goto	u4590
  9224   003AD6                     u4591:
  9225   003AD6  EF52  F01D         	goto	l4118
  9226   003ADA                     u4590:
  9227   003ADA  EF9B  F01D         	goto	l4136
  9228   003ADE                     l4122:
  9229                           
  9230                           ;dc_motor_v1.c: 153:         if(mR->power> 0 ){
  9231   003ADE  5014               	movf	forward@mR^0,w,c
  9232   003AE0  6ED9               	movwf	fsr2l,c
  9233   003AE2  6ADA               	clrf	fsr2h,c
  9234   003AE4  50DF               	movf	indf2,w,c
  9235   003AE6  B4D8               	btfsc	status,2,c
  9236   003AE8  EF78  F01D         	goto	u4601
  9237   003AEC  EF7A  F01D         	goto	u4600
  9238   003AF0                     u4601:
  9239   003AF0  EF7E  F01D         	goto	l4126
  9240   003AF4                     u4600:
  9241   003AF4                     
  9242                           ;dc_motor_v1.c: 154:             mR->power--;
  9243   003AF4  5014               	movf	forward@mR^0,w,c
  9244   003AF6  6ED9               	movwf	fsr2l,c
  9245   003AF8  6ADA               	clrf	fsr2h,c
  9246   003AFA  06DF               	decf	indf2,f,c
  9247   003AFC                     l4126:
  9248                           
  9249                           ;dc_motor_v1.c: 156:         if(mL->power> 0 ){
  9250   003AFC  5013               	movf	forward@mL^0,w,c
  9251   003AFE  6ED9               	movwf	fsr2l,c
  9252   003B00  6ADA               	clrf	fsr2h,c
  9253   003B02  50DF               	movf	indf2,w,c
  9254   003B04  B4D8               	btfsc	status,2,c
  9255   003B06  EF87  F01D         	goto	u4611
  9256   003B0A  EF89  F01D         	goto	u4610
  9257   003B0E                     u4611:
  9258   003B0E  EF8D  F01D         	goto	l4130
  9259   003B12                     u4610:
  9260   003B12                     
  9261                           ;dc_motor_v1.c: 157:             mL->power--;
  9262   003B12  5013               	movf	forward@mL^0,w,c
  9263   003B14  6ED9               	movwf	fsr2l,c
  9264   003B16  6ADA               	clrf	fsr2h,c
  9265   003B18  06DF               	decf	indf2,f,c
  9266   003B1A                     l4130:
  9267                           
  9268                           ;dc_motor_v1.c: 159:         setMotorPWM(mR);
  9269   003B1A  C014  F00E         	movff	forward@mR,setMotorPWM@m
  9270   003B1E  EC99  F020         	call	_setMotorPWM	;wreg free
  9271   003B22                     
  9272                           ;dc_motor_v1.c: 160:         setMotorPWM(mL);
  9273   003B22  C013  F00E         	movff	forward@mL,setMotorPWM@m
  9274   003B26  EC99  F020         	call	_setMotorPWM	;wreg free
  9275   003B2A                     
  9276                           ;dc_motor_v1.c: 161:         delay_ms_function(delay_time);
  9277   003B2A  C01F  F001         	movff	forward@delay_time,delay_ms_function@milliseconds
  9278   003B2E  C020  F002         	movff	forward@delay_time+1,delay_ms_function@milliseconds+1
  9279   003B32  EC22  F026         	call	_delay_ms_function	;wreg free
  9280   003B36                     l4136:
  9281                           
  9282                           ;dc_motor_v1.c: 152:     while(mL->power || mR->power > 0){
  9283   003B36  5013               	movf	forward@mL^0,w,c
  9284   003B38  6ED9               	movwf	fsr2l,c
  9285   003B3A  6ADA               	clrf	fsr2h,c
  9286   003B3C  50DF               	movf	indf2,w,c
  9287   003B3E  A4D8               	btfss	status,2,c
  9288   003B40  EFA4  F01D         	goto	u4621
  9289   003B44  EFA6  F01D         	goto	u4620
  9290   003B48                     u4621:
  9291   003B48  EF6F  F01D         	goto	l4122
  9292   003B4C                     u4620:
  9293   003B4C  5014               	movf	forward@mR^0,w,c
  9294   003B4E  6ED9               	movwf	fsr2l,c
  9295   003B50  6ADA               	clrf	fsr2h,c
  9296   003B52  50DF               	movf	indf2,w,c
  9297   003B54  A4D8               	btfss	status,2,c
  9298   003B56  EFAF  F01D         	goto	u4631
  9299   003B5A  EFB1  F01D         	goto	u4630
  9300   003B5E                     u4631:
  9301   003B5E  EF6F  F01D         	goto	l4122
  9302   003B62                     u4630:
  9303   003B62  0012               	return		;funcret
  9304   003B64                     __end_of_forward:
  9305                           	callstack 0
  9306                           
  9307 ;; *************** function _backward *****************
  9308 ;; Defined at:
  9309 ;;		line 166 in file "dc_motor_v1.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;  Distance_Cal    1    wreg     unsigned char 
  9312 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  9313 ;;		 -> motorL(9), 
  9314 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  9315 ;;		 -> motorR(9), 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  Distance_Cal    1   23[COMRAM] unsigned char 
  9318 ;;  j               2   26[COMRAM] int 
  9319 ;;  i               2   24[COMRAM] int 
  9320 ;;  delay_time      2   30[COMRAM] int 
  9321 ;;  max_power       2   28[COMRAM] int 
  9322 ;;  acceleration    2    0        int 
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9335 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9336 ;;Total ram usage:       14 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 2
  9339 ;; This function calls:
  9340 ;;		___awdiv
  9341 ;;		_delay_ms_function
  9342 ;;		_setMotorPWM
  9343 ;; This function is called by:
  9344 ;;		_calibration_routine
  9345 ;;		_maze_search
  9346 ;;		_maze_return
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text34
  9351   003E60                     __ptext34:
  9352                           	callstack 0
  9353   003E60                     _backward:
  9354                           	callstack 27
  9355                           
  9356                           ;incstack = 0
  9357                           ;backward@Distance_Calibration stored from wreg
  9358   003E60  6E18               	movwf	backward@Distance_Calibration^0,c
  9359   003E62                     
  9360                           ;dc_motor_v1.c: 167:     mL->direction = 0;
  9361   003E62  5013               	movf	backward@mL^0,w,c
  9362   003E64  6ED9               	movwf	fsr2l,c
  9363   003E66  6ADA               	clrf	fsr2h,c
  9364   003E68  0E01               	movlw	1
  9365   003E6A  26D9               	addwf	fsr2l,f,c
  9366   003E6C  6ADF               	clrf	indf2,c
  9367                           
  9368                           ;dc_motor_v1.c: 168:     mR->direction = 0;
  9369   003E6E  5014               	movf	backward@mR^0,w,c
  9370   003E70  6ED9               	movwf	fsr2l,c
  9371   003E72  6ADA               	clrf	fsr2h,c
  9372   003E74  0E01               	movlw	1
  9373   003E76  26D9               	addwf	fsr2l,f,c
  9374   003E78  6ADF               	clrf	indf2,c
  9375   003E7A                     
  9376                           ;dc_motor_v1.c: 171:     int max_power = 40;
  9377   003E7A  0E00               	movlw	0
  9378   003E7C  6E1E               	movwf	(backward@max_power+1)^0,c
  9379   003E7E  0E28               	movlw	40
  9380   003E80  6E1D               	movwf	backward@max_power^0,c
  9381   003E82                     
  9382                           ;dc_motor_v1.c: 173:     int delay_time = acceleration_time/max_power;
  9383   003E82  0E00               	movlw	0
  9384   003E84  6E02               	movwf	(___awdiv@dividend+1)^0,c
  9385   003E86  0E64               	movlw	100
  9386   003E88  6E01               	movwf	___awdiv@dividend^0,c
  9387   003E8A  0E00               	movlw	0
  9388   003E8C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9389   003E8E  0E28               	movlw	40
  9390   003E90  6E03               	movwf	___awdiv@divisor^0,c
  9391   003E92  EC40  F023         	call	___awdiv	;wreg free
  9392   003E96  C001  F01F         	movff	?___awdiv,backward@delay_time
  9393   003E9A  C002  F020         	movff	?___awdiv+1,backward@delay_time+1
  9394   003E9E                     
  9395                           ;dc_motor_v1.c: 176:     for(int i=0; i< max_power; i++){
  9396   003E9E  0E00               	movlw	0
  9397   003EA0  6E1A               	movwf	(backward@i+1)^0,c
  9398   003EA2  0E00               	movlw	0
  9399   003EA4  6E19               	movwf	backward@i^0,c
  9400   003EA6  EF79  F01F         	goto	l4160
  9401   003EAA                     l4150:
  9402                           
  9403                           ;dc_motor_v1.c: 177:         mL->power = mL->power + 1;
  9404   003EAA  5013               	movf	backward@mL^0,w,c
  9405   003EAC  6ED9               	movwf	fsr2l,c
  9406   003EAE  6ADA               	clrf	fsr2h,c
  9407   003EB0  5013               	movf	backward@mL^0,w,c
  9408   003EB2  6EE1               	movwf	fsr1l,c
  9409   003EB4  6AE2               	clrf	fsr1h,c
  9410   003EB6  50E7               	movf	indf1,w,c
  9411   003EB8  6E15               	movwf	??_backward^0,c
  9412   003EBA  2815               	incf	??_backward^0,w,c
  9413   003EBC  6EDF               	movwf	indf2,c
  9414                           
  9415                           ;dc_motor_v1.c: 178:         mR->power = mR->power + 1 ;
  9416   003EBE  5014               	movf	backward@mR^0,w,c
  9417   003EC0  6ED9               	movwf	fsr2l,c
  9418   003EC2  6ADA               	clrf	fsr2h,c
  9419   003EC4  5014               	movf	backward@mR^0,w,c
  9420   003EC6  6EE1               	movwf	fsr1l,c
  9421   003EC8  6AE2               	clrf	fsr1h,c
  9422   003ECA  50E7               	movf	indf1,w,c
  9423   003ECC  6E15               	movwf	??_backward^0,c
  9424   003ECE  2815               	incf	??_backward^0,w,c
  9425   003ED0  6EDF               	movwf	indf2,c
  9426   003ED2                     
  9427                           ;dc_motor_v1.c: 179:         setMotorPWM(mR);
  9428   003ED2  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9429   003ED6  EC99  F020         	call	_setMotorPWM	;wreg free
  9430   003EDA                     
  9431                           ;dc_motor_v1.c: 180:         setMotorPWM(mL);
  9432   003EDA  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9433   003EDE  EC99  F020         	call	_setMotorPWM	;wreg free
  9434   003EE2                     
  9435                           ;dc_motor_v1.c: 181:         delay_ms_function(delay_time);
  9436   003EE2  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9437   003EE6  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9438   003EEA  EC22  F026         	call	_delay_ms_function	;wreg free
  9439   003EEE                     
  9440                           ;dc_motor_v1.c: 182:     }
  9441   003EEE  4A19               	infsnz	backward@i^0,f,c
  9442   003EF0  2A1A               	incf	(backward@i+1)^0,f,c
  9443   003EF2                     l4160:
  9444   003EF2  501D               	movf	backward@max_power^0,w,c
  9445   003EF4  5C19               	subwf	backward@i^0,w,c
  9446   003EF6  501A               	movf	(backward@i+1)^0,w,c
  9447   003EF8  0A80               	xorlw	128
  9448   003EFA  6E15               	movwf	??_backward^0,c
  9449   003EFC  501E               	movf	(backward@max_power+1)^0,w,c
  9450   003EFE  0A80               	xorlw	128
  9451   003F00  5815               	subwfb	??_backward^0,w,c
  9452   003F02  A0D8               	btfss	status,0,c
  9453   003F04  EF86  F01F         	goto	u4641
  9454   003F08  EF88  F01F         	goto	u4640
  9455   003F0C                     u4641:
  9456   003F0C  EF55  F01F         	goto	l4150
  9457   003F10                     u4640:
  9458   003F10                     
  9459                           ;dc_motor_v1.c: 185:     for(int j=0; j<Distance_Calibration; j++){
  9460   003F10  0E00               	movlw	0
  9461   003F12  6E1C               	movwf	(backward@j+1)^0,c
  9462   003F14  0E00               	movlw	0
  9463   003F16  6E1B               	movwf	backward@j^0,c
  9464   003F18  EF97  F01F         	goto	l274
  9465   003F1C                     l4164:
  9466                           
  9467                           ;dc_motor_v1.c: 186:         _delay((unsigned long)((10)*(64000000/4000.0)));
  9468   003F1C  0ED0               	movlw	208
  9469   003F1E  6E15               	movwf	??_backward^0,c
  9470   003F20  0ECA               	movlw	202
  9471   003F22                     u5627:
  9472   003F22  2EE8               	decfsz	wreg,f,c
  9473   003F24  D7FE               	bra	u5627
  9474   003F26  2E15               	decfsz	??_backward^0,f,c
  9475   003F28  D7FC               	bra	u5627
  9476   003F2A                     
  9477                           ;dc_motor_v1.c: 187:     }
  9478   003F2A  4A1B               	infsnz	backward@j^0,f,c
  9479   003F2C  2A1C               	incf	(backward@j+1)^0,f,c
  9480   003F2E                     l274:
  9481   003F2E  5018               	movf	backward@Distance_Calibration^0,w,c
  9482   003F30  6E15               	movwf	??_backward^0,c
  9483   003F32  6A16               	clrf	(??_backward+1)^0,c
  9484   003F34  5015               	movf	??_backward^0,w,c
  9485   003F36  5C1B               	subwf	backward@j^0,w,c
  9486   003F38  501C               	movf	(backward@j+1)^0,w,c
  9487   003F3A  0A80               	xorlw	128
  9488   003F3C  6E17               	movwf	(??_backward+2)^0,c
  9489   003F3E  5016               	movf	(??_backward+1)^0,w,c
  9490   003F40  0A80               	xorlw	128
  9491   003F42  5817               	subwfb	(??_backward+2)^0,w,c
  9492   003F44  A0D8               	btfss	status,0,c
  9493   003F46  EFA7  F01F         	goto	u4651
  9494   003F4A  EFA9  F01F         	goto	u4650
  9495   003F4E                     u4651:
  9496   003F4E  EF8E  F01F         	goto	l4164
  9497   003F52                     u4650:
  9498   003F52  EFD7  F01F         	goto	l4182
  9499   003F56                     l4168:
  9500                           
  9501                           ;dc_motor_v1.c: 191:         if(mR->power> 0 ){
  9502   003F56  5014               	movf	backward@mR^0,w,c
  9503   003F58  6ED9               	movwf	fsr2l,c
  9504   003F5A  6ADA               	clrf	fsr2h,c
  9505   003F5C  50DF               	movf	indf2,w,c
  9506   003F5E  B4D8               	btfsc	status,2,c
  9507   003F60  EFB4  F01F         	goto	u4661
  9508   003F64  EFB6  F01F         	goto	u4660
  9509   003F68                     u4661:
  9510   003F68  EFBA  F01F         	goto	l4172
  9511   003F6C                     u4660:
  9512   003F6C                     
  9513                           ;dc_motor_v1.c: 192:             mR->power--;
  9514   003F6C  5014               	movf	backward@mR^0,w,c
  9515   003F6E  6ED9               	movwf	fsr2l,c
  9516   003F70  6ADA               	clrf	fsr2h,c
  9517   003F72  06DF               	decf	indf2,f,c
  9518   003F74                     l4172:
  9519                           
  9520                           ;dc_motor_v1.c: 194:         if(mL->power> 0 ){
  9521   003F74  5013               	movf	backward@mL^0,w,c
  9522   003F76  6ED9               	movwf	fsr2l,c
  9523   003F78  6ADA               	clrf	fsr2h,c
  9524   003F7A  50DF               	movf	indf2,w,c
  9525   003F7C  B4D8               	btfsc	status,2,c
  9526   003F7E  EFC3  F01F         	goto	u4671
  9527   003F82  EFC5  F01F         	goto	u4670
  9528   003F86                     u4671:
  9529   003F86  EFC9  F01F         	goto	l4176
  9530   003F8A                     u4670:
  9531   003F8A                     
  9532                           ;dc_motor_v1.c: 195:             mL->power--;
  9533   003F8A  5013               	movf	backward@mL^0,w,c
  9534   003F8C  6ED9               	movwf	fsr2l,c
  9535   003F8E  6ADA               	clrf	fsr2h,c
  9536   003F90  06DF               	decf	indf2,f,c
  9537   003F92                     l4176:
  9538                           
  9539                           ;dc_motor_v1.c: 197:         setMotorPWM(mR);
  9540   003F92  C014  F00E         	movff	backward@mR,setMotorPWM@m
  9541   003F96  EC99  F020         	call	_setMotorPWM	;wreg free
  9542   003F9A                     
  9543                           ;dc_motor_v1.c: 198:         setMotorPWM(mL);
  9544   003F9A  C013  F00E         	movff	backward@mL,setMotorPWM@m
  9545   003F9E  EC99  F020         	call	_setMotorPWM	;wreg free
  9546   003FA2                     
  9547                           ;dc_motor_v1.c: 199:         delay_ms_function(delay_time);
  9548   003FA2  C01F  F001         	movff	backward@delay_time,delay_ms_function@milliseconds
  9549   003FA6  C020  F002         	movff	backward@delay_time+1,delay_ms_function@milliseconds+1
  9550   003FAA  EC22  F026         	call	_delay_ms_function	;wreg free
  9551   003FAE                     l4182:
  9552                           
  9553                           ;dc_motor_v1.c: 190:     while(mL->power || mR->power > 0){
  9554   003FAE  5013               	movf	backward@mL^0,w,c
  9555   003FB0  6ED9               	movwf	fsr2l,c
  9556   003FB2  6ADA               	clrf	fsr2h,c
  9557   003FB4  50DF               	movf	indf2,w,c
  9558   003FB6  A4D8               	btfss	status,2,c
  9559   003FB8  EFE0  F01F         	goto	u4681
  9560   003FBC  EFE2  F01F         	goto	u4680
  9561   003FC0                     u4681:
  9562   003FC0  EFAB  F01F         	goto	l4168
  9563   003FC4                     u4680:
  9564   003FC4  5014               	movf	backward@mR^0,w,c
  9565   003FC6  6ED9               	movwf	fsr2l,c
  9566   003FC8  6ADA               	clrf	fsr2h,c
  9567   003FCA  50DF               	movf	indf2,w,c
  9568   003FCC  A4D8               	btfss	status,2,c
  9569   003FCE  EFEB  F01F         	goto	u4691
  9570   003FD2  EFED  F01F         	goto	u4690
  9571   003FD6                     u4691:
  9572   003FD6  EFAB  F01F         	goto	l4168
  9573   003FDA                     u4690:
  9574   003FDA  0012               	return		;funcret
  9575   003FDC                     __end_of_backward:
  9576                           	callstack 0
  9577                           
  9578 ;; *************** function _setMotorPWM *****************
  9579 ;; Defined at:
  9580 ;;		line 75 in file "dc_motor_v1.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  m               1   13[COMRAM] PTR struct DC_motor
  9583 ;;		 -> motorR(9), motorL(9), 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  negDuty         1   17[COMRAM] unsigned char 
  9586 ;;  posDuty         1   16[COMRAM] unsigned char 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1    wreg      void 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9599 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9600 ;;Total ram usage:        5 bytes
  9601 ;; Hardware stack levels used: 1
  9602 ;; Hardware stack levels required when called: 1
  9603 ;; This function calls:
  9604 ;;		___lwdiv
  9605 ;;		___wmul
  9606 ;; This function is called by:
  9607 ;;		_forward
  9608 ;;		_backward
  9609 ;;		_leftTURN
  9610 ;;		_rightTURN
  9611 ;;		_stop
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text35
  9616   004132                     __ptext35:
  9617                           	callstack 0
  9618   004132                     _setMotorPWM:
  9619                           	callstack 27
  9620   004132                     
  9621                           ;dc_motor_v1.c: 75: void setMotorPWM(DC_motor *m);dc_motor_v1.c: 76: {;dc_motor_v1.c: 77
      +                          :     unsigned char posDuty, negDuty;;dc_motor_v1.c: 79:     if(m->brakemode) {
  9622   004132  500E               	movf	setMotorPWM@m^0,w,c
  9623   004134  6ED9               	movwf	fsr2l,c
  9624   004136  6ADA               	clrf	fsr2h,c
  9625   004138  0E02               	movlw	2
  9626   00413A  26D9               	addwf	fsr2l,f,c
  9627   00413C  50DF               	movf	indf2,w,c
  9628   00413E  B4D8               	btfsc	status,2,c
  9629   004140  EFA4  F020         	goto	u3851
  9630   004144  EFA6  F020         	goto	u3850
  9631   004148                     u3851:
  9632   004148  EFD6  F020         	goto	l3754
  9633   00414C                     u3850:
  9634   00414C                     
  9635                           ;dc_motor_v1.c: 80:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperi
      +                          od))/100;
  9636   00414C  500E               	movf	setMotorPWM@m^0,w,c
  9637   00414E  6ED9               	movwf	fsr2l,c
  9638   004150  6ADA               	clrf	fsr2h,c
  9639   004152  50DF               	movf	indf2,w,c
  9640   004154  6E0F               	movwf	??_setMotorPWM^0,c
  9641   004156  500F               	movf	??_setMotorPWM^0,w,c
  9642   004158  6E01               	movwf	___wmul@multiplier^0,c
  9643   00415A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9644   00415C  500E               	movf	setMotorPWM@m^0,w,c
  9645   00415E  6ED9               	movwf	fsr2l,c
  9646   004160  6ADA               	clrf	fsr2h,c
  9647   004162  0E03               	movlw	3
  9648   004164  26D9               	addwf	fsr2l,f,c
  9649   004166  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9650   00416A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9651   00416E  EC62  F026         	call	___wmul	;wreg free
  9652   004172  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9653   004176  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9654   00417A  0E00               	movlw	0
  9655   00417C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9656   00417E  0E64               	movlw	100
  9657   004180  6E09               	movwf	___lwdiv@divisor^0,c
  9658   004182  EC9A  F024         	call	___lwdiv	;wreg free
  9659   004186  500E               	movf	setMotorPWM@m^0,w,c
  9660   004188  6ED9               	movwf	fsr2l,c
  9661   00418A  6ADA               	clrf	fsr2h,c
  9662   00418C  0E03               	movlw	3
  9663   00418E  26D9               	addwf	fsr2l,f,c
  9664   004190  50DF               	movf	indf2,w,c
  9665   004192  6E10               	movwf	(??_setMotorPWM+1)^0,c
  9666   004194  5007               	movf	?___lwdiv^0,w,c
  9667   004196  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  9668   004198  6E11               	movwf	setMotorPWM@posDuty^0,c
  9669   00419A                     
  9670                           ;dc_motor_v1.c: 81:         negDuty=m->PWMperiod;
  9671   00419A  500E               	movf	setMotorPWM@m^0,w,c
  9672   00419C  6ED9               	movwf	fsr2l,c
  9673   00419E  6ADA               	clrf	fsr2h,c
  9674   0041A0  0E03               	movlw	3
  9675   0041A2  26D9               	addwf	fsr2l,f,c
  9676   0041A4  50DF               	movf	indf2,w,c
  9677   0041A6  6E12               	movwf	setMotorPWM@negDuty^0,c
  9678                           
  9679                           ;dc_motor_v1.c: 82:     }
  9680   0041A8  EFF7  F020         	goto	l3758
  9681   0041AC                     l3754:
  9682                           
  9683                           ;dc_motor_v1.c: 84:         posDuty=0;
  9684   0041AC  0E00               	movlw	0
  9685   0041AE  6E11               	movwf	setMotorPWM@posDuty^0,c
  9686   0041B0                     
  9687                           ;dc_motor_v1.c: 85:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9688   0041B0  500E               	movf	setMotorPWM@m^0,w,c
  9689   0041B2  6ED9               	movwf	fsr2l,c
  9690   0041B4  6ADA               	clrf	fsr2h,c
  9691   0041B6  50DF               	movf	indf2,w,c
  9692   0041B8  6E0F               	movwf	??_setMotorPWM^0,c
  9693   0041BA  500F               	movf	??_setMotorPWM^0,w,c
  9694   0041BC  6E01               	movwf	___wmul@multiplier^0,c
  9695   0041BE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9696   0041C0  500E               	movf	setMotorPWM@m^0,w,c
  9697   0041C2  6ED9               	movwf	fsr2l,c
  9698   0041C4  6ADA               	clrf	fsr2h,c
  9699   0041C6  0E03               	movlw	3
  9700   0041C8  26D9               	addwf	fsr2l,f,c
  9701   0041CA  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9702   0041CE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9703   0041D2  EC62  F026         	call	___wmul	;wreg free
  9704   0041D6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9705   0041DA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9706   0041DE  0E00               	movlw	0
  9707   0041E0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9708   0041E2  0E64               	movlw	100
  9709   0041E4  6E09               	movwf	___lwdiv@divisor^0,c
  9710   0041E6  EC9A  F024         	call	___lwdiv	;wreg free
  9711   0041EA  5007               	movf	?___lwdiv^0,w,c
  9712   0041EC  6E12               	movwf	setMotorPWM@negDuty^0,c
  9713   0041EE                     l3758:
  9714                           
  9715                           ;dc_motor_v1.c: 88:     if (m->direction) {
  9716   0041EE  500E               	movf	setMotorPWM@m^0,w,c
  9717   0041F0  6ED9               	movwf	fsr2l,c
  9718   0041F2  6ADA               	clrf	fsr2h,c
  9719   0041F4  0E01               	movlw	1
  9720   0041F6  26D9               	addwf	fsr2l,f,c
  9721   0041F8  50DF               	movf	indf2,w,c
  9722   0041FA  B4D8               	btfsc	status,2,c
  9723   0041FC  EF02  F021         	goto	u3861
  9724   004200  EF04  F021         	goto	u3860
  9725   004204                     u3861:
  9726   004204  EF24  F021         	goto	l3762
  9727   004208                     u3860:
  9728   004208                     
  9729                           ;dc_motor_v1.c: 89:         *(m->posDutyHighByte)=posDuty;
  9730   004208  500E               	movf	setMotorPWM@m^0,w,c
  9731   00420A  6ED9               	movwf	fsr2l,c
  9732   00420C  6ADA               	clrf	fsr2h,c
  9733   00420E  0E05               	movlw	5
  9734   004210  26D9               	addwf	fsr2l,f,c
  9735   004212  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9736   004216  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9737   00421A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9738   00421E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9739   004222  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9740                           
  9741                           ;dc_motor_v1.c: 90:         *(m->negDutyHighByte)=negDuty;
  9742   004226  500E               	movf	setMotorPWM@m^0,w,c
  9743   004228  6ED9               	movwf	fsr2l,c
  9744   00422A  6ADA               	clrf	fsr2h,c
  9745   00422C  0E07               	movlw	7
  9746   00422E  26D9               	addwf	fsr2l,f,c
  9747   004230  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9748   004234  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9749   004238  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9750   00423C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9751   004240  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9752                           
  9753                           ;dc_motor_v1.c: 91:     } else {
  9754   004244  EF42  F021         	goto	l246
  9755   004248                     l3762:
  9756                           
  9757                           ;dc_motor_v1.c: 92:         *(m->posDutyHighByte)=negDuty;
  9758   004248  500E               	movf	setMotorPWM@m^0,w,c
  9759   00424A  6ED9               	movwf	fsr2l,c
  9760   00424C  6ADA               	clrf	fsr2h,c
  9761   00424E  0E05               	movlw	5
  9762   004250  26D9               	addwf	fsr2l,f,c
  9763   004252  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9764   004256  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9765   00425A  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9766   00425E  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9767   004262  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  9768                           
  9769                           ;dc_motor_v1.c: 93:         *(m->negDutyHighByte)=posDuty;
  9770   004266  500E               	movf	setMotorPWM@m^0,w,c
  9771   004268  6ED9               	movwf	fsr2l,c
  9772   00426A  6ADA               	clrf	fsr2h,c
  9773   00426C  0E07               	movlw	7
  9774   00426E  26D9               	addwf	fsr2l,f,c
  9775   004270  CFDE F00F          	movff	postinc2,??_setMotorPWM
  9776   004274  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  9777   004278  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  9778   00427C  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9779   004280  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  9780   004284                     l246:
  9781   004284  0012               	return		;funcret
  9782   004286                     __end_of_setMotorPWM:
  9783                           	callstack 0
  9784                           
  9785 ;; *************** function ___wmul *****************
  9786 ;; Defined at:
  9787 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  multiplier      2    0[COMRAM] unsigned int 
  9790 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;  product         2    4[COMRAM] unsigned int 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  2    0[COMRAM] unsigned int 
  9795 ;; Registers used:
  9796 ;;		wreg, status,2, status,0, prodl, prodh
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9806 ;;Total ram usage:        6 bytes
  9807 ;; Hardware stack levels used: 1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_setMotorPWM
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text36
  9816   004CC4                     __ptext36:
  9817                           	callstack 0
  9818   004CC4                     ___wmul:
  9819                           	callstack 27
  9820   004CC4  5001               	movf	___wmul@multiplier^0,w,c
  9821   004CC6  0203               	mulwf	___wmul@multiplicand^0,c
  9822   004CC8  CFF3 F005          	movff	prodl,___wmul@product
  9823   004CCC  CFF4 F006          	movff	prodh,___wmul@product+1
  9824   004CD0  5001               	movf	___wmul@multiplier^0,w,c
  9825   004CD2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9826   004CD4  50F3               	movf	243,w,c
  9827   004CD6  2606               	addwf	(___wmul@product+1)^0,f,c
  9828   004CD8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9829   004CDA  0203               	mulwf	___wmul@multiplicand^0,c
  9830   004CDC  50F3               	movf	243,w,c
  9831   004CDE  2606               	addwf	(___wmul@product+1)^0,f,c
  9832   004CE0  C005  F001         	movff	___wmul@product,?___wmul
  9833   004CE4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9834   004CE8  0012               	return		;funcret
  9835   004CEA                     __end_of___wmul:
  9836                           	callstack 0
  9837                           
  9838 ;; *************** function ___lwdiv *****************
  9839 ;; Defined at:
  9840 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  dividend        2    6[COMRAM] unsigned int 
  9843 ;;  divisor         2    8[COMRAM] unsigned int 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;  quotient        2   10[COMRAM] unsigned int 
  9846 ;;  counter         1   12[COMRAM] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2    6[COMRAM] unsigned int 
  9849 ;; Registers used:
  9850 ;;		wreg, status,2, status,0
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9857 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9860 ;;Total ram usage:        7 bytes
  9861 ;; Hardware stack levels used: 1
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_setMotorPWM
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text37
  9870   004934                     __ptext37:
  9871                           	callstack 0
  9872   004934                     ___lwdiv:
  9873                           	callstack 27
  9874   004934  0E00               	movlw	0
  9875   004936  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9876   004938  0E00               	movlw	0
  9877   00493A  6E0B               	movwf	___lwdiv@quotient^0,c
  9878   00493C  5009               	movf	___lwdiv@divisor^0,w,c
  9879   00493E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9880   004940  B4D8               	btfsc	status,2,c
  9881   004942  EFA5  F024         	goto	u3691
  9882   004946  EFA7  F024         	goto	u3690
  9883   00494A                     u3691:
  9884   00494A  EFCF  F024         	goto	l1094
  9885   00494E                     u3690:
  9886   00494E  0E01               	movlw	1
  9887   004950  6E0D               	movwf	___lwdiv@counter^0,c
  9888   004952  EFAF  F024         	goto	l3630
  9889   004956                     l3628:
  9890   004956  90D8               	bcf	status,0,c
  9891   004958  3609               	rlcf	___lwdiv@divisor^0,f,c
  9892   00495A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9893   00495C  2A0D               	incf	___lwdiv@counter^0,f,c
  9894   00495E                     l3630:
  9895   00495E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9896   004960  EFB4  F024         	goto	u3701
  9897   004964  EFB6  F024         	goto	u3700
  9898   004968                     u3701:
  9899   004968  EFAB  F024         	goto	l3628
  9900   00496C                     u3700:
  9901   00496C                     l3632:
  9902   00496C  90D8               	bcf	status,0,c
  9903   00496E  360B               	rlcf	___lwdiv@quotient^0,f,c
  9904   004970  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9905   004972  5009               	movf	___lwdiv@divisor^0,w,c
  9906   004974  5C07               	subwf	___lwdiv@dividend^0,w,c
  9907   004976  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9908   004978  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9909   00497A  A0D8               	btfss	status,0,c
  9910   00497C  EFC2  F024         	goto	u3711
  9911   004980  EFC4  F024         	goto	u3710
  9912   004984                     u3711:
  9913   004984  EFC9  F024         	goto	l3640
  9914   004988                     u3710:
  9915   004988  5009               	movf	___lwdiv@divisor^0,w,c
  9916   00498A  5E07               	subwf	___lwdiv@dividend^0,f,c
  9917   00498C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9918   00498E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9919   004990  800B               	bsf	___lwdiv@quotient^0,0,c
  9920   004992                     l3640:
  9921   004992  90D8               	bcf	status,0,c
  9922   004994  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9923   004996  3209               	rrcf	___lwdiv@divisor^0,f,c
  9924   004998  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9925   00499A  EFB6  F024         	goto	l3632
  9926   00499E                     l1094:
  9927   00499E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9928   0049A2  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9929   0049A6  0012               	return		;funcret
  9930   0049A8                     __end_of___lwdiv:
  9931                           	callstack 0
  9932                           
  9933 ;; *************** function _delay_ms_function *****************
  9934 ;; Defined at:
  9935 ;;		line 67 in file "dc_motor_v1.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  milliseconds    2    0[COMRAM] unsigned int 
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;                  1    wreg      void 
  9942 ;; Registers used:
  9943 ;;		wreg, status,2, status,0
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9952 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9953 ;;Total ram usage:        3 bytes
  9954 ;; Hardware stack levels used: 1
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_forward
  9959 ;;		_backward
  9960 ;;		_leftTURN
  9961 ;;		_rightTURN
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965                           	psect	text38
  9966   004C44                     __ptext38:
  9967                           	callstack 0
  9968   004C44                     _delay_ms_function:
  9969                           	callstack 28
  9970   004C44                     
  9971                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  9972   004C44  EF2F  F026         	goto	l236
  9973   004C48                     l3744:
  9974                           
  9975                           ;dc_motor_v1.c: 69:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9976   004C48  0E15               	movlw	21
  9977   004C4A  6E03               	movwf	??_delay_ms_function^0,c
  9978   004C4C  0EC6               	movlw	198
  9979   004C4E                     u5637:
  9980   004C4E  2EE8               	decfsz	wreg,f,c
  9981   004C50  D7FE               	bra	u5637
  9982   004C52  2E03               	decfsz	??_delay_ms_function^0,f,c
  9983   004C54  D7FC               	bra	u5637
  9984   004C56  D000               	nop2	
  9985   004C58                     
  9986                           ;dc_motor_v1.c: 70:         milliseconds--;
  9987   004C58  0601               	decf	delay_ms_function@milliseconds^0,f,c
  9988   004C5A  A0D8               	btfss	status,0,c
  9989   004C5C  0602               	decf	(delay_ms_function@milliseconds+1)^0,f,c
  9990   004C5E                     l236:
  9991                           
  9992                           ;dc_motor_v1.c: 68:     while (milliseconds > 0) {
  9993   004C5E  5001               	movf	delay_ms_function@milliseconds^0,w,c
  9994   004C60  1002               	iorwf	(delay_ms_function@milliseconds+1)^0,w,c
  9995   004C62  A4D8               	btfss	status,2,c
  9996   004C64  EF36  F026         	goto	u3841
  9997   004C68  EF38  F026         	goto	u3840
  9998   004C6C                     u3841:
  9999   004C6C  EF24  F026         	goto	l3744
 10000   004C70                     u3840:
 10001   004C70  0012               	return		;funcret
 10002   004C72                     __end_of_delay_ms_function:
 10003                           	callstack 0
 10004                           
 10005 ;; *************** function ___awdiv *****************
 10006 ;; Defined at:
 10007 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;  dividend        2    0[COMRAM] int 
 10010 ;;  divisor         2    2[COMRAM] int 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  quotient        2    6[COMRAM] int 
 10013 ;;  sign            1    5[COMRAM] unsigned char 
 10014 ;;  counter         1    4[COMRAM] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  2    0[COMRAM] int 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2, status,0
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10028 ;;Total ram usage:        8 bytes
 10029 ;; Hardware stack levels used: 1
 10030 ;; This function calls:
 10031 ;;		Nothing
 10032 ;; This function is called by:
 10033 ;;		_forward
 10034 ;;		_backward
 10035 ;;		_leftTURN
 10036 ;;		_rightTURN
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text39
 10041   004680                     __ptext39:
 10042                           	callstack 0
 10043   004680                     ___awdiv:
 10044                           	callstack 28
 10045   004680  0E00               	movlw	0
 10046   004682  6E06               	movwf	___awdiv@sign^0,c
 10047   004684  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 10048   004686  EF49  F023         	goto	u3870
 10049   00468A  EF47  F023         	goto	u3871
 10050   00468E                     u3871:
 10051   00468E  EF4F  F023         	goto	l3772
 10052   004692                     u3870:
 10053   004692  6C03               	negf	___awdiv@divisor^0,c
 10054   004694  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10055   004696  B0D8               	btfsc	status,0,c
 10056   004698  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10057   00469A  0E01               	movlw	1
 10058   00469C  6E06               	movwf	___awdiv@sign^0,c
 10059   00469E                     l3772:
 10060   00469E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 10061   0046A0  EF56  F023         	goto	u3880
 10062   0046A4  EF54  F023         	goto	u3881
 10063   0046A8                     u3881:
 10064   0046A8  EF5C  F023         	goto	l3778
 10065   0046AC                     u3880:
 10066   0046AC  6C01               	negf	___awdiv@dividend^0,c
 10067   0046AE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10068   0046B0  B0D8               	btfsc	status,0,c
 10069   0046B2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10070   0046B4  0E01               	movlw	1
 10071   0046B6  1A06               	xorwf	___awdiv@sign^0,f,c
 10072   0046B8                     l3778:
 10073   0046B8  0E00               	movlw	0
 10074   0046BA  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10075   0046BC  0E00               	movlw	0
 10076   0046BE  6E07               	movwf	___awdiv@quotient^0,c
 10077   0046C0  5003               	movf	___awdiv@divisor^0,w,c
 10078   0046C2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10079   0046C4  B4D8               	btfsc	status,2,c
 10080   0046C6  EF67  F023         	goto	u3891
 10081   0046CA  EF69  F023         	goto	u3890
 10082   0046CE                     u3891:
 10083   0046CE  EF91  F023         	goto	l3800
 10084   0046D2                     u3890:
 10085   0046D2  0E01               	movlw	1
 10086   0046D4  6E05               	movwf	___awdiv@counter^0,c
 10087   0046D6  EF71  F023         	goto	l3786
 10088   0046DA                     l3784:
 10089   0046DA  90D8               	bcf	status,0,c
 10090   0046DC  3603               	rlcf	___awdiv@divisor^0,f,c
 10091   0046DE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10092   0046E0  2A05               	incf	___awdiv@counter^0,f,c
 10093   0046E2                     l3786:
 10094   0046E2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10095   0046E4  EF76  F023         	goto	u3901
 10096   0046E8  EF78  F023         	goto	u3900
 10097   0046EC                     u3901:
 10098   0046EC  EF6D  F023         	goto	l3784
 10099   0046F0                     u3900:
 10100   0046F0                     l3788:
 10101   0046F0  90D8               	bcf	status,0,c
 10102   0046F2  3607               	rlcf	___awdiv@quotient^0,f,c
 10103   0046F4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10104   0046F6  5003               	movf	___awdiv@divisor^0,w,c
 10105   0046F8  5C01               	subwf	___awdiv@dividend^0,w,c
 10106   0046FA  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10107   0046FC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10108   0046FE  A0D8               	btfss	status,0,c
 10109   004700  EF84  F023         	goto	u3911
 10110   004704  EF86  F023         	goto	u3910
 10111   004708                     u3911:
 10112   004708  EF8B  F023         	goto	l3796
 10113   00470C                     u3910:
 10114   00470C  5003               	movf	___awdiv@divisor^0,w,c
 10115   00470E  5E01               	subwf	___awdiv@dividend^0,f,c
 10116   004710  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10117   004712  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10118   004714  8007               	bsf	___awdiv@quotient^0,0,c
 10119   004716                     l3796:
 10120   004716  90D8               	bcf	status,0,c
 10121   004718  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10122   00471A  3203               	rrcf	___awdiv@divisor^0,f,c
 10123   00471C  2E05               	decfsz	___awdiv@counter^0,f,c
 10124   00471E  EF78  F023         	goto	l3788
 10125   004722                     l3800:
 10126   004722  5006               	movf	___awdiv@sign^0,w,c
 10127   004724  B4D8               	btfsc	status,2,c
 10128   004726  EF97  F023         	goto	u3921
 10129   00472A  EF99  F023         	goto	u3920
 10130   00472E                     u3921:
 10131   00472E  EF9D  F023         	goto	l3804
 10132   004732                     u3920:
 10133   004732  6C07               	negf	___awdiv@quotient^0,c
 10134   004734  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10135   004736  B0D8               	btfsc	status,0,c
 10136   004738  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10137   00473A                     l3804:
 10138   00473A  C007  F001         	movff	___awdiv@quotient,?___awdiv
 10139   00473E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 10140   004742  0012               	return		;funcret
 10141   004744                     __end_of___awdiv:
 10142                           	callstack 0
 10143                           
 10144 ;; *************** function _adjust_calibration *****************
 10145 ;; Defined at:
 10146 ;;		line 22 in file "calibration.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;  calibration_    2    0[COMRAM] PTR int 
 10149 ;;		 -> calibration(9), 
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;		None
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      void 
 10154 ;; Registers used:
 10155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10165 ;;Total ram usage:        6 bytes
 10166 ;; Hardware stack levels used: 1
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_calibration_routine
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text40
 10175   003FDC                     __ptext40:
 10176                           	callstack 0
 10177   003FDC                     _adjust_calibration:
 10178                           	callstack 29
 10179   003FDC                     l139:
 10180                           
 10181                           ;calibration.c: 27:         if(!PORTFbits.RF3 || !PORTFbits.RF2){
 10182   003FDC  A68E               	btfss	142,3,c	;volatile
 10183   003FDE  EFF3  F01F         	goto	u5121
 10184   003FE2  EFF5  F01F         	goto	u5120
 10185   003FE6                     u5121:
 10186   003FE6  EFFC  F01F         	goto	l4622
 10187   003FEA                     u5120:
 10188   003FEA  B48E               	btfsc	142,2,c	;volatile
 10189   003FEC  EFFA  F01F         	goto	u5131
 10190   003FF0  EFFC  F01F         	goto	u5130
 10191   003FF4                     u5131:
 10192   003FF4  EFEE  F01F         	goto	l139
 10193   003FF8                     u5130:
 10194   003FF8                     l4622:
 10195                           
 10196                           ;calibration.c: 28:             _delay((unsigned long)((100)*(64000000/4000.0)));
 10197   003FF8  0E09               	movlw	9
 10198   003FFA  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10199   003FFC  0E1E               	movlw	30
 10200   003FFE  6E03               	movwf	??_adjust_calibration^0,c
 10201   004000  0EE4               	movlw	228
 10202   004002                     u5647:
 10203   004002  2EE8               	decfsz	wreg,f,c
 10204   004004  D7FE               	bra	u5647
 10205   004006  2E03               	decfsz	??_adjust_calibration^0,f,c
 10206   004008  D7FC               	bra	u5647
 10207   00400A  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10208   00400C  D7FA               	bra	u5647
 10209   00400E  D000               	nop2	
 10210   004010                     
 10211                           ;calibration.c: 30:             if(!PORTFbits.RF3 && !PORTFbits.RF2 ){
 10212   004010  B68E               	btfsc	142,3,c	;volatile
 10213   004012  EF0D  F020         	goto	u5141
 10214   004016  EF0F  F020         	goto	u5140
 10215   00401A                     u5141:
 10216   00401A  EF28  F020         	goto	l143
 10217   00401E                     u5140:
 10218   00401E  B48E               	btfsc	142,2,c	;volatile
 10219   004020  EF14  F020         	goto	u5151
 10220   004024  EF16  F020         	goto	u5150
 10221   004028                     u5151:
 10222   004028  EF28  F020         	goto	l143
 10223   00402C                     u5150:
 10224   00402C                     
 10225                           ;calibration.c: 32:                 LATHbits.LATH3 = 1;
 10226   00402C  8680               	bsf	128,3,c	;volatile
 10227                           
 10228                           ;calibration.c: 33:                 LATDbits.LATD7 = 1;
 10229   00402E  8E7C               	bsf	124,7,c	;volatile
 10230   004030                     
 10231                           ;calibration.c: 34:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
 10232   004030  0E52               	movlw	82
 10233   004032  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10234   004034  0E2B               	movlw	43
 10235   004036  6E03               	movwf	??_adjust_calibration^0,c
 10236   004038  0E00               	movlw	0
 10237   00403A                     u5657:
 10238   00403A  2EE8               	decfsz	wreg,f,c
 10239   00403C  D7FE               	bra	u5657
 10240   00403E  2E03               	decfsz	??_adjust_calibration^0,f,c
 10241   004040  D7FC               	bra	u5657
 10242   004042  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10243   004044  D7FA               	bra	u5657
 10244   004046  D000               	nop2	
 10245   004048                     
 10246                           ;calibration.c: 35:                 LATHbits.LATH3 = 0;
 10247   004048  9680               	bcf	128,3,c	;volatile
 10248   00404A                     
 10249                           ;calibration.c: 36:                 LATDbits.LATD7 = 0;
 10250   00404A  9E7C               	bcf	124,7,c	;volatile
 10251                           
 10252                           ;calibration.c: 37:                 break;
 10253   00404C  EF98  F020         	goto	l149
 10254   004050                     l143:
 10255                           
 10256                           ;calibration.c: 40:                 if(!PORTFbits.RF2){
 10257   004050  B48E               	btfsc	142,2,c	;volatile
 10258   004052  EF2D  F020         	goto	u5161
 10259   004056  EF2F  F020         	goto	u5160
 10260   00405A                     u5161:
 10261   00405A  EF5D  F020         	goto	l4648
 10262   00405E                     u5160:
 10263   00405E                     
 10264                           ;calibration.c: 41:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10265   00405E  0E11               	movlw	17
 10266   004060  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10267   004062  0E3C               	movlw	60
 10268   004064  6E03               	movwf	??_adjust_calibration^0,c
 10269   004066  0ECB               	movlw	203
 10270   004068                     u5667:
 10271   004068  2EE8               	decfsz	wreg,f,c
 10272   00406A  D7FE               	bra	u5667
 10273   00406C  2E03               	decfsz	??_adjust_calibration^0,f,c
 10274   00406E  D7FC               	bra	u5667
 10275   004070  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10276   004072  D7FA               	bra	u5667
 10277   004074  0000               	nop	
 10278   004076                     
 10279                           ;calibration.c: 42:                     *calibration_label = *calibration_label + 2;
 10280   004076  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10281   00407A  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10282   00407E  CFDE F003          	movff	postinc2,??_adjust_calibration
 10283   004082  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10284   004086  0E02               	movlw	2
 10285   004088  2603               	addwf	??_adjust_calibration^0,f,c
 10286   00408A  0E00               	movlw	0
 10287   00408C  2204               	addwfc	(??_adjust_calibration+1)^0,f,c
 10288   00408E  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10289   004092  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10290   004096  C003  FFDE         	movff	??_adjust_calibration,postinc2
 10291   00409A  C004  FFDD         	movff	??_adjust_calibration+1,postdec2
 10292   00409E                     
 10293                           ;calibration.c: 43:                     LATDbits.LATD7 = 1;
 10294   00409E  8E7C               	bsf	124,7,c	;volatile
 10295   0040A0                     
 10296                           ;calibration.c: 44:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10297   0040A0  0E11               	movlw	17
 10298   0040A2  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10299   0040A4  0E3C               	movlw	60
 10300   0040A6  6E03               	movwf	??_adjust_calibration^0,c
 10301   0040A8  0ECB               	movlw	203
 10302   0040AA                     u5677:
 10303   0040AA  2EE8               	decfsz	wreg,f,c
 10304   0040AC  D7FE               	bra	u5677
 10305   0040AE  2E03               	decfsz	??_adjust_calibration^0,f,c
 10306   0040B0  D7FC               	bra	u5677
 10307   0040B2  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10308   0040B4  D7FA               	bra	u5677
 10309   0040B6  0000               	nop	
 10310   0040B8                     
 10311                           ;calibration.c: 45:                     LATDbits.LATD7 = 0;
 10312   0040B8  9E7C               	bcf	124,7,c	;volatile
 10313   0040BA                     l4648:
 10314                           
 10315                           ;calibration.c: 48:                 if(!PORTFbits.RF3){
 10316   0040BA  B68E               	btfsc	142,3,c	;volatile
 10317   0040BC  EF62  F020         	goto	u5171
 10318   0040C0  EF64  F020         	goto	u5170
 10319   0040C4                     u5171:
 10320   0040C4  EF96  F020         	goto	l140
 10321   0040C8                     u5170:
 10322   0040C8                     
 10323                           ;calibration.c: 49:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10324   0040C8  0E11               	movlw	17
 10325   0040CA  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10326   0040CC  0E3C               	movlw	60
 10327   0040CE  6E03               	movwf	??_adjust_calibration^0,c
 10328   0040D0  0ECB               	movlw	203
 10329   0040D2                     u5687:
 10330   0040D2  2EE8               	decfsz	wreg,f,c
 10331   0040D4  D7FE               	bra	u5687
 10332   0040D6  2E03               	decfsz	??_adjust_calibration^0,f,c
 10333   0040D8  D7FC               	bra	u5687
 10334   0040DA  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10335   0040DC  D7FA               	bra	u5687
 10336   0040DE  0000               	nop	
 10337   0040E0                     
 10338                           ;calibration.c: 50:                     *calibration_label = *calibration_label -2;
 10339   0040E0  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10340   0040E4  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10341   0040E8  CFDE F003          	movff	postinc2,??_adjust_calibration
 10342   0040EC  CFDD F004          	movff	postdec2,??_adjust_calibration+1
 10343   0040F0  0EFE               	movlw	254
 10344   0040F2  2403               	addwf	??_adjust_calibration^0,w,c
 10345   0040F4  6E05               	movwf	(??_adjust_calibration+2)^0,c
 10346   0040F6  0EFF               	movlw	255
 10347   0040F8  2004               	addwfc	(??_adjust_calibration+1)^0,w,c
 10348   0040FA  6E06               	movwf	(??_adjust_calibration+3)^0,c
 10349   0040FC  C001  FFD9         	movff	adjust_calibration@calibration_label,fsr2l
 10350   004100  C002  FFDA         	movff	adjust_calibration@calibration_label+1,fsr2h
 10351   004104  C005  FFDE         	movff	??_adjust_calibration+2,postinc2
 10352   004108  C006  FFDD         	movff	??_adjust_calibration+3,postdec2
 10353   00410C                     
 10354                           ;calibration.c: 51:                     LATHbits.LATH3 = 1;
 10355   00410C  8680               	bsf	128,3,c	;volatile
 10356   00410E                     
 10357                           ;calibration.c: 52:                     _delay((unsigned long)((200)*(64000000/4000.0)))
      +                          ;
 10358   00410E  0E11               	movlw	17
 10359   004110  6E04               	movwf	(??_adjust_calibration+1)^0,c
 10360   004112  0E3C               	movlw	60
 10361   004114  6E03               	movwf	??_adjust_calibration^0,c
 10362   004116  0ECB               	movlw	203
 10363   004118                     u5697:
 10364   004118  2EE8               	decfsz	wreg,f,c
 10365   00411A  D7FE               	bra	u5697
 10366   00411C  2E03               	decfsz	??_adjust_calibration^0,f,c
 10367   00411E  D7FC               	bra	u5697
 10368   004120  2E04               	decfsz	(??_adjust_calibration+1)^0,f,c
 10369   004122  D7FA               	bra	u5697
 10370   004124  0000               	nop	
 10371   004126                     
 10372                           ;calibration.c: 53:                     LATHbits.LATH3 = 0;
 10373   004126  9680               	bcf	128,3,c	;volatile
 10374   004128  EFEE  F01F         	goto	l139
 10375   00412C                     l140:
 10376   00412C  EFEE  F01F         	goto	l139
 10377   004130                     l149:
 10378   004130  0012               	return		;funcret
 10379   004132                     __end_of_adjust_calibration:
 10380                           	callstack 0
 10381                           
 10382                           	psect	smallconst
 10383   000E00                     __psmallconst:
 10384                           	callstack 0
 10385   000E00  00                 	db	0
 10386   000E01  00                 	db	0	; dummy byte at the end
 10387   000000                     
 10388                           	psect	rparam
 10389   000000                     
 10390                           	psect	config
 10391                           
 10392                           ;Config register CONFIG1L @ 0x300000
 10393                           ;	External Oscillator mode Selection bits
 10394                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10395                           ;	Power-up default value for COSC bits
 10396                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10397   300000                     	org	3145728
 10398   300000  AA                 	db	170
 10399                           
 10400                           ;Config register CONFIG1H @ 0x300001
 10401                           ;	unspecified, using default values
 10402                           ;	Clock Out Enable bit
 10403                           ;	CLKOUTEN = 0x1, unprogrammed default
 10404                           ;	Clock Switch Enable bit
 10405                           ;	CSWEN = 0x1, unprogrammed default
 10406                           ;	Fail-Safe Clock Monitor Enable bit
 10407                           ;	FCMEN = 0x1, unprogrammed default
 10408   300001                     	org	3145729
 10409   300001  FF                 	db	255
 10410                           
 10411                           ;Config register CONFIG3L @ 0x300004
 10412                           ;	WDT Period Select bits
 10413                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10414                           ;	WDT operating mode
 10415                           ;	WDTE = OFF, WDT Disabled
 10416   300004                     	org	3145732
 10417   300004  9F                 	db	159
 10418                           
 10419                           ;Config register CONFIG3H @ 0x300005
 10420                           ;	unspecified, using default values
 10421                           ;	WDT Window Select bits
 10422                           ;	WDTCWS = 0x7, unprogrammed default
 10423                           ;	WDT input clock selector
 10424                           ;	WDTCCS = 0x7, unprogrammed default
 10425   300005                     	org	3145733
 10426   300005  FF                 	db	255
 10427                           tosu	equ	0xFFF
 10428                           tosh	equ	0xFFE
 10429                           tosl	equ	0xFFD
 10430                           stkptr	equ	0xFFC
 10431                           pclatu	equ	0xFFB
 10432                           pclath	equ	0xFFA
 10433                           pcl	equ	0xFF9
 10434                           tblptru	equ	0xFF8
 10435                           tblptrh	equ	0xFF7
 10436                           tblptrl	equ	0xFF6
 10437                           tablat	equ	0xFF5
 10438                           prodh	equ	0xFF4
 10439                           prodl	equ	0xFF3
 10440                           indf0	equ	0xFEF
 10441                           postinc0	equ	0xFEE
 10442                           postdec0	equ	0xFED
 10443                           preinc0	equ	0xFEC
 10444                           plusw0	equ	0xFEB
 10445                           fsr0h	equ	0xFEA
 10446                           fsr0l	equ	0xFE9
 10447                           wreg	equ	0xFE8
 10448                           indf1	equ	0xFE7
 10449                           postinc1	equ	0xFE6
 10450                           postdec1	equ	0xFE5
 10451                           preinc1	equ	0xFE4
 10452                           plusw1	equ	0xFE3
 10453                           fsr1h	equ	0xFE2
 10454                           fsr1l	equ	0xFE1
 10455                           bsr	equ	0xFE0
 10456                           indf2	equ	0xFDF
 10457                           postinc2	equ	0xFDE
 10458                           postdec2	equ	0xFDD
 10459                           preinc2	equ	0xFDC
 10460                           plusw2	equ	0xFDB
 10461                           fsr2h	equ	0xFDA
 10462                           fsr2l	equ	0xFD9
 10463                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    131     159
    BANK1           256      0     139
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    adjust_calibration@calibration_label	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    backward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    backward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    backward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    backward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    calibration_routine@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    calibration_routine@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    calibration_routine@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    forward@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    leftTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    leftTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    leftTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    maze_return@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    maze_return@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_return@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    maze_search@c	PTR struct calibration_structure size(2) Largest target is 9
		 -> calibration(BANK1[9]), 

    maze_search@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    maze_search@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    RGB_to_HSV@H	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@H(BANK0[4]), 

    RGB_to_HSV@S	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@S(BANK0[4]), 

    RGB_to_HSV@V	PTR float  size(1) Largest target is 4
		 -> color_cardCheck@V(BANK0[4]), 

    rightTURN@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    rightTURN@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    rightTURN@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    rightTURN@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    S340DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllllhhhllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllllhhhllll[1]), 

    switch_calibration@calibration_index	PTR int  size(2) Largest target is 9
		 -> calibration(BANK1[9]), 


Critical Paths under _main in COMRAM

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _RGB_to_HSV->_custom_floatmodulo
    _custom_floatmodulo->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___flsub
    _maze_return->_backward
    _maze_return->_forward
    _maze_return->_leftTURN
    _maze_return->_rightTURN
    _calibration_routine->_backward
    _calibration_routine->_forward
    _calibration_routine->_leftTURN
    _calibration_routine->_rightTURN
    _rightTURN->_setMotorPWM
    _leftTURN->_setMotorPWM
    _forward->_setMotorPWM
    _backward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_maze_search
    _maze_search->_color_cardCheck
    _color_cardCheck->_RGB_to_HSV
    _RGB_to_HSV->_custom_floatmodulo

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  136815
                _calibration_routine
                    _initDCmotorsPWM
                        _maze_return
                        _maze_search
            _pause_until_RF2_pressed
 ---------------------------------------------------------------------------------
 (1) _pause_until_RF2_pressed                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _maze_search                                          6     2      4   74904
                                             93 COMRAM     2     2      0
                                            127 BANK0      4     0      4
                           _backward
                    _color_cardCheck
                   _color_click_init
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (2) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (3) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _color_cardCheck                                     32    30      2   44885
                                             91 COMRAM     2     0      2
                                             97 BANK0     30    30      0
                         _RGB_to_HSV
                             ___flge
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGB_to_HSV                                          87    68     19   34610
                                             10 BANK0     87    68     19
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                 _custom_floatmodulo
 ---------------------------------------------------------------------------------
 (4) _custom_floatmodulo                                  18    10      8   11664
                                             83 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             25 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             58 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1254
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2767
                                             33 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    7934
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _maze_return                                         14    10      4   30955
                                             32 COMRAM    14    10      4
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                  5     1      4   30762
                                             32 COMRAM     5     1      4
                 _adjust_calibration
                           _backward
                            _forward
                           _leftTURN
                          _rightTURN
                 _switch_calibration
 ---------------------------------------------------------------------------------
 (2) _switch_calibration                                   4     2      2     782
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _rightTURN                                           16    14      2    7247
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _leftTURN                                            16    14      2    5727
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _forward                                             16    14      2    6639
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _backward                                            16    14      2    7703
                                             18 COMRAM    14    12      2
                            ___awdiv
                  _delay_ms_function
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          5     4      1    2437
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delay_ms_function                                    3     1      2     631
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _adjust_calibration                                   6     4      2     844
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calibration_routine
     _adjust_calibration
     _backward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _forward
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _leftTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _rightTURN
       ___awdiv
       _delay_ms_function
       _setMotorPWM
     _switch_calibration
   _initDCmotorsPWM
   _maze_return
     _backward
     _forward
     _leftTURN
     _rightTURN
   _maze_search
     _backward
     _color_cardCheck
       _RGB_to_HSV
         ___fladd
         ___fldiv
           ___flsub (ARG)
             ___fladd
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         ___fleq
         ___flge
         ___flmul
           ___fladd (ARG)
           ___fldiv (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___flsub
         _custom_floatmodulo
           ___fldiv
           ___fleq
           ___flmul
           ___flsub
           ___fltol
           ___xxtofl
       ___flge
       ___xxtofl
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _color_click_init
       _I2C_2_Master_Init
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _forward
     _leftTURN
     _rightTURN
   _pause_until_RF2_pressed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8B       7       54.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      45        0.0%
BITBIGSFRllllhh     1E      0       0      47        0.0%
BITBIGSFRhhlll      17      0       0      36        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhh      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRhl          5      0       0      37        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRllllhh      1      0       0      44        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRllllhl      1      0       0      49        0.0%
BITBIGSFRlllhl       1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     189      58        0.0%
DATA                 0      0     189       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 22:49:10 2024

                     _color_read_Red 4A06                         ___fldiv@aexp 003A  
                       ___fldiv@bexp 0039                         ___fldiv@sign 0032  
                    _color_read_Blue 4AF6                                   l31 4C0C  
                                 l40 4AA4                                   l50 439C  
                                 l34 4D08                                   l43 4B44  
                                 l60 19C6                                   l37 4A54  
                                 l70 1AB8                                   l62 1A20  
                                 l46 4AF4                                   l80 1E80  
                                 l72 1AC8                                   l64 1A30  
                                 l74 1B22                                   l58 19B6  
                                 l76 1B32                                   l87 1FFA  
                                 l99 1830                         ___awdiv@sign 0006  
                ___wmul@multiplicand 0003                     _color_read_Clear 4AA6  
                   _color_read_Green 4A56                                  l105 1838  
                                l140 412C                                  l132 49A8  
                                l310 3CE0                                  l302 3C34  
                                l143 4050                                  l152 4744  
                                l160 358A                                  l136 4A04  
                                l153 47B2                                  l233 4932  
                                l139 3FDC                                  l411 4CC2  
                                l236 4C5E                                  l260 3AB6  
                                l172 382E                                  l420 4D1E  
                                l149 4130                                  l157 47F4  
                                l405 4C9A                                  l246 4284  
                                l414 4D28                                  l239 4C70  
                                l423 4D14                                  l600 24EE  
                                l408 4C9C                                  l417 4D32  
                                l282 3FDA                                  l274 3F2E  
                                l426 4BCC                                  l603 4CE8  
                                l268 3B62                                  l296 3E5E  
                                l288 3DB2                                  l560 31EA  
                                l571 1FFC                                  l900 44A2  
                                l590 249E                                  l568 31EE  
                                l834 4742                                  l862 489E  
                                l873 45A6                                  l868 4560  
                                wreg 0FE8                         ___flmul@aexp 004C  
                       ___flmul@bexp 004D                         ___flmul@sign 0047  
                       ___flmul@temp 0052                         ___flmul@prod 004E  
         __end_of_adjust_calibration 4132                         ___fltol@exp1 000A  
                               l1101 49A6                                 l1131 26DE  
                               l1140 29AE                                 l1132 26CC  
                               l1221 2DD8                                 l1133 2692  
                               l1224 2C6A                                 l3000 25B6  
                               l1217 2A74                                 l1234 2D9A  
                               l1226 2CE2                                 l3010 25F0  
                               l3002 25B8                                 l1227 2CD0  
                               l3100 280E                                 l1148 27F8  
                               l3020 2604                                 l3012 25F4  
                               l3004 25C0                                 l1157 28C8  
                               l1173 4B8A                                 l1261 39E2  
                               l1094 499E                                 l1190 33AC  
                               l1158 28B6                                 l3110 284A  
                               l3102 281E                                 l3030 2618  
                               l3022 2608                                 l3014 25F8  
                               l3006 25D0                                 l3200 3292  
                               l3120 2876                                 l3112 284C  
                               l3040 262C                                 l3032 261C  
                               l3024 260C                                 l3016 25FC  
                               l3008 25E2                                 l1272 397A  
                               l1185 3588                                 l1265 391E  
                               l4010 3BA4                                 l4002 3B66  
                               l3210 32D2                                 l3202 32A2  
                               l3130 28AE                                 l3114 285A  
                               l3106 2832                                 l3122 2878  
                               l3050 268A                                 l3034 2620  
                               l3026 2610                                 l3018 2600  
                               l3042 2630                                 l1258 3886  
                               l1187 33E8                                 l4100 3A0A  
                               l4020 3BF4                                 l4012 3BB0  
                               l4004 3B80                                 l3300 357E  
                               l1196 342E                                 l3212 32E2  
                               l3220 3302                                 l3204 32A4  
                               l3140 292C                                 l3116 2862  
                               l3108 283C                                 l3124 2886  
                               l3060 26C0                                 l3052 26A0  
                               l3044 2634                                 l3036 2624  
                               l3028 2614                                 l4110 3A6A  
                               l4102 3A26                                 l4030 3C5C  
                               l4014 3BD8                                 l4022 3BF8  
                               l4006 3B88                                 l1198 34A6  
                               l3230 3340                                 l3222 3312  
                               l3214 32EA                                 l3206 32AC  
                               l3310 29BC                                 l3150 2972  
                               l3134 28D8                                 l3142 292E  
                               l3126 288A                                 l3118 2866  
                               l3070 2710                                 l3062 26CA  
                               l3054 26AC                                 l3046 265E  
                               l3038 2628                                 l1199 3494  
                               l4120 3AB2                                 l4112 3A76  
                               l4104 3A32                                 l4040 3CA0  
                               l4032 3C72                                 l4024 3C16  
                               l4016 3BE0                                 l4008 3B88  
                               l3240 3388                                 l3232 3350  
                               l3224 3312                                 l3216 32EE  
                               l3208 32BC                                 l3400 2C8C  
                               l3320 29FC                                 l3312 29CA  
                               l3160 299C                                 l3152 2980  
                               l3144 293E                                 l3136 28E4  
                               l3128 2898                                 l3080 274C  
                               l3072 2720                                 l3064 26EC  
                               l3056 26B0                                 l3048 267A  
                               l5000 4636                                 l4130 3B1A  
                               l4122 3ADE                                 l4106 3A5A  
                               l4114 3A7A                                 l4050 3CFE  
                               l4042 3CA8                                 l4034 3C7A  
                               l4026 3C22                                 l4018 3BE8  
                               l3250 33D6                                 l3242 339C  
                               l3234 3360                                 l3170 31F0  
                               l3410 2CFE                                 l3402 2C9A  
                               l3330 2A2C                                 l3322 2A02  
                               l3314 29CC                                 l3162 299E  
                               l3154 2986                                 l3146 294E  
                               l3138 28F2                                 l3090 2792  
                               l3082 275A                                 l3074 272E  
                               l3066 26FC                                 l3058 26BE  
                               l5002 463A                                 l4140 3E62  
                               l4132 3B22                                 l4124 3AF4  
                               l4116 3A98                                 l4108 3A62  
                               l4060 3D56                                 l4052 3D06  
                               l4036 3C90                                 l4044 3CB4  
                               l4028 3C30                                 l3260 341E  
                               l3252 33E6                                 l3244 33AA  
                               l3236 3370                                 l3228 3326  
                               l3180 322C                                 l3172 31FC  
                               l3420 2D68                                 l3412 2D0C  
                               l3404 2CC8                                 l3340 2A64  
                               l3332 2A2E                                 l3324 2A12  
                               l3316 29DC                                 l3308 29B0  
                               l3156 2988                                 l3148 296E  
                               l3092 27C6                                 l3084 275C  
                               l3076 273C                                 l3500 4492  
                               l5004 464E                                 l4150 3EAA  
                               l4142 3E7A                                 l4134 3B2A  
                               l4126 3AFC                                 l4118 3AA4  
                               l4070 3D94                                 l4062 3D5E  
                               l4054 3D06                                 l4046 3CCA  
                               l4038 3C98                                 l3270 345E  
                               l3262 342C                                 l3254 33F8  
                               l3246 33B6                                 l3238 3378  
                               l3190 325C                                 l3182 323C  
                               l3174 320A                                 l3430 2DBE  
                               l3422 2D82                                 l3414 2D36  
                               l3350 2AB4                                 l3342 2A84  
                               l3334 2A3E                                 l3326 2A18  
                               l3318 29EC                                 l3158 298E  
                               l3094 27C8                                 l3086 2766  
                               l3078 2748                                 l3510 3896  
                               l3166 4C9C                                 l5006 4664  
                               l4152 3ED2                                 l4160 3EF2  
                               l4144 3E82                                 l4128 3B12  
                               l4136 3B36                                 l4080 3DF8  
                               l4072 3DA0                                 l4064 3D66  
                               l4056 3D22                                 l4048 3CE4  
                               l3600 44A4                                 l3280 34D0  
                               l3272 348C                                 l3256 340E  
                               l3264 343E                                 l3248 33D4  
                               l3192 3262                                 l3184 323E  
                               l3176 320C                                 l3424 2D9E  
                               l3432 2DC4                                 l3408 2CF2  
                               l3416 2D3A                                 l3360 2B04  
                               l3352 2ABE                                 l3344 2A94  
                               l3336 2A4E                                 l3328 2A1E  
                               l3096 27D8                                 l3088 276C  
                               l3440 4B56                                 l3520 38D4  
                               l3512 38AC                                 l3504 3832  
                               l3168 4CAC                                 l4170 3F6C  
                               l4162 3F10                                 l4154 3EDA  
                               l4146 3E82                                 l4138 3B4C  
                               l4082 3E0E                                 l4090 3E32  
                               l4074 3DAE                                 l4066 3D72  
                               l4058 3D2E                                 l3610 452E  
                               l3602 44D2                                 l3290 3548  
                               l3282 34FA                                 l3266 344C  
                               l3258 3414                                 l3194 3270  
                               l3178 321C                                 l3186 3246  
                               l3450 4862                                 l3434 2DC8  
                               l3426 2DAE                                 l3418 2D54  
                               l3370 2B46                                 l3362 2B10  
                               l3354 2AD4                                 l3338 2A5E  
                               l3098 27E8                                 l3530 395C  
                               l3522 3906                                 l3506 3842  
                               l4180 3FA2                                 l4172 3F74  
                               l4164 3F1C                                 l4156 3EE2  
                               l4148 3E9E                                 l4092 3E48  
                               l4084 3E16                                 l4076 3DDA  
                               l4068 3D76                                 l3612 4540  
                               l3604 44E2                                 l3292 3564  
                               l3276 34B6                                 l3284 34FE  
                               l3268 3450                                 l3196 3272  
                               l3188 3256                                 l3452 4872  
                               l3444 47F6                                 l3428 2DBC  
                               l3380 2BA8                                 l3372 2B56  
                               l3364 2B1E                                 l3356 2AE0  
                               l3348 2AA8                                 l3460 439E  
                               l3540 39B2                                 l3532 396A  
                               l3524 3908                                 l3516 38C0  
                               l3508 3850                                 l3700 1B0E  
                               l3630 495E                                 l3622 4934  
                               l4174 3F8A                                 l4182 3FAE  
                               l4166 3F2A                                 l4158 3EEE  
                               l4094 39E6                                 l4086 3E1E  
                               l4078 3DF0                                 l4270 48DA  
                               l3614 454E                                 l3606 4510  
                               l3294 3568                                 l3286 3518  
                               l3278 34C2                                 l3198 3282  
                               l3454 4896                                 l3446 4824  
                               l3390 2C50                                 l3382 2BC4  
                               l3374 2B70                                 l3366 2B2A  
                               l3358 2AF8                                 l3438 4B46  
                               l3470 43F4                                 l3462 43B4  
                               l3542 39C2                                 l3534 3988  
                               l3526 3914                                 l3518 38C8  
                               l3710 1C48                                 l3702 1B42  
                               l3550 4D20                                 l4190 49DC  
                               l3800 4722                                 l3640 4992  
                               l3632 496C                                 l3624 493C  
                               l4184 3FC4                                 l4176 3F92  
                               l4168 3F56                                 l4096 3A02  
                               l4088 3E26                                 l4280 4916  
                               l4272 48FE                                 l4264 48A0  
                               l3616 459E                                 l3608 4520  
                               l3296 3576                                 l3288 352E  
                               l3456 489C                                 l3448 4834  
                               l3392 2C5A                                 l3384 2BEE  
                               l3376 2B80                                 l3368 2B3A  
                               l3472 4404                                 l3544 39D0  
                               l3536 398A                                 l3528 3950  
                               l3720 1D9A                                 l3712 1C7C  
                               l3704 1BA8                                 l3552 4D24  
                               l3560 4D1A                                 l4192 49EA  
                               l3802 4732                                 l3642 4998  
                               l3634 4972                                 l3626 494E  
                               l4178 3F9A                                 l4098 3A0A  
                               l4290 4930                                 l4282 4920  
                               l4274 4908                                 l4266 48B0  
                               l3618 45A4                                 l3298 357C  
                               l3394 2C68                                 l3386 2C24  
                               l3378 2B9C                                 l3482 442E  
                               l3474 4408                                 l3466 43C8  
                               l3546 39D2                                 l3538 398E  
                               l3730 1EC4                                 l3722 1DCC  
                               l3714 1CB4                                 l3706 1BBE  
                               l3570 4B9A                                 l3562 4D2A  
                               l3554 4D0C                                 l3650 4C84  
                               l3810 4BD2                                 l4194 4A02  
                               l4186 49AA                                 l4620 3FEA  
                               l3804 473A                                 l3636 4988  
                               l3628 4956                                 l4700 3678  
                               l4284 4922                                 l4276 490A  
                               l4268 48D6                                 l3396 2C7A  
                               l3388 2C32                                 l3492 4456  
                               l3484 4438                                 l3476 4416  
                               l3468 43F2                                 l3580 4286  
                               l3740 1FBE                                 l3732 1EDC  
                               l3724 1E24                                 l3716 1CE6  
                               l3708 1BF0                                 l3572 4BA2  
                               l3564 4D2E                                 l3556 4D10  
                               l3660 4A4C                                 l3900 1482  
                               l3652 4C86                                 l3644 4C72  
                               l3820 4C02                                 l3812 4BDC  
                               l4188 49C2                                 l4630 4030  
                               l4622 3FF8                                 l3742 4C44  
                               l3638 4990                                 l3750 414C  
                               l4710 36E2                                 l4702 3692  
                               l4286 492C                                 l4278 4914  
                               l3398 2C88                                 l3494 4462  
                               l3486 4442                                 l3590 438C  
                               l3582 42B8                                 l3734 1F0E  
                               l3718 1D3E                                 l3726 1E80  
                               l3574 4BC8                                 l3566 4B8E  
                               l3558 4D16                                 l3670 4AF6  
                               l3910 157C                                 l3902 14B4  
                               l3830 0E02                                 l3654 4C88  
                               l3646 4C7C                                 l3822 4C04  
                               l3814 4BEC                                 l4640 4076  
                               l4632 4048                                 l4624 4010  
                               l3744 4C48                                 l3760 4208  
                               l3752 419A                                 l4720 3742  
                               l4712 36F2                                 l4704 36A2  
                               l4288 492E                                 l3496 4472  
                               l3736 1F2A                                 l3728 1E90  
                               l3576 4BCA                                 l3568 4B92  
                               l3672 4B3C                                 l3664 4A56  
                               l3920 1652                                 l3912 15AE  
                               l3904 14E6                                 l3840 0F5A  
                               l3832 0E9A                                 l3648 4C82  
                               l3656 4CEC                                 l3824 4C06  
                               l3816 4BF6                                 l3808 4BCE  
                               l4800 2F70                                 l4650 40C8  
                               l4642 409E                                 l4634 404A  
                               l4626 401E                                 l3770 469A  
                               l3746 4C58                                 l3594 4CC4  
                               l3762 4248                                 l3754 41AC  
                               l4730 37AC                                 l4722 375C  
                               l4714 370C                                 l4706 36BC  
                               l2970 250C                                 l3498 4482  
                               l3586 42CC                                 l3738 1F8A  
                               l3690 1A0C                                 l3682 183A  
                               l3666 4A9C                                 l3658 4A06  
                               l3930 1728                                 l3922 1684  
                               l3906 1518                                 l3914 15BC  
                               l3842 0F8C                                 l3850 1030  
                               l3834 0EEC                                 l3826 4C08  
                               l3818 4C00                                 l4810 2FD0  
                               l4802 2F90                                 l4652 40E0  
                               l4644 40A0                                 l4628 402C  
                               l3780 46C0                                 l3772 469E  
                               l3764 4680                                 l3596 4CE0  
                               l3756 41B0                                 l3748 4132  
                               l4660 4752                                 l4740 3808  
                               l4732 37B8                                 l4724 3768  
                               l4716 3718                                 l4708 36C8  
                               l4900 2272                                 l2972 251C  
                               l2980 2546                                 l2964 24F0  
                               l3588 431C                                 l3692 1A40  
                               l3684 1970                                 l3676 4AA6  
                               l3940 1822                                 l3932 175A  
                               l3924 16B6                                 l3916 15EE  
                               l3908 154A                                 l3860 112A  
                               l3852 1062                                 l3844 0FBE  
                               l3836 0EF6                                 l3828 4C0A  
                               l4820 3032                                 l4812 2FEC  
                               l4804 2FA4                                 l4654 410C  
                               l4646 40B8                                 l4638 405E  
                               l3790 46F6                                 l3782 46D2  
                               l3774 46AC                                 l3766 4684  
                               l3758 41EE                                 l4670 47C0  
                               l4662 476A                                 l4742 3822  
                               l4734 37D2                                 l4726 3782  
                               l4718 3732                                 l4910 23BA  
                               l4902 228C                                 l2990 2576  
                               l2982 2556                                 l2974 252C  
                               l2966 24FC                                 l3694 1A72  
                               l3686 19A2                                 l3678 4AEC  
                               l3934 178C                                 l3926 16E8  
                               l3918 1620                                 l3870 1200  
                               l3862 115C                                 l3854 1094  
                               l3942 1830                                 l3846 0FF0  
                               l3838 0F28                                 l4830 30AC  
                               l4822 304C                                 l4806 2FB4  
                               l4814 300C                                 l4750 2DF8  
                               l4656 410E                                 l4648 40BA  
                               l3792 470C                                 l3784 46DA  
                               l3776 46B4                                 l3768 4692  
                               l4672 47D8                                 l4664 4792  
                               l4736 37E2                                 l4728 3792  
                               l4680 35B2                                 l4912 240C  
                               l4904 22AA                                 l2992 2584  
                               l2984 255C                                 l2976 253C  
                               l2968 250A                                 l3696 1AA4  
                               l3688 19DA                                 l3936 17BE  
                               l3928 16F6                                 l3880 12D6  
                               l3872 120E                                 l3856 10C6  
                               l3864 116A                                 l3848 1022  
                               l4840 310C                                 l4832 30AE  
                               l4824 3068                                 l4816 3020  
                               l4808 2FB6                                 l4760 2E28  
                               l4752 2DFA                                 l4744 2DDA  
                               l4658 4126                                 l3794 4714  
                               l3786 46E2                                 l3778 46B8  
                               l4674 47F2                                 l4666 4794  
                               l4738 37FC                                 l4690 361C  
                               l4682 35CC                                 l4914 242A  
                               l4906 22C8                                 l4922 249E  
                               l4850 1FFC                                 l2994 2586  
                               l2986 256E                                 l2978 253E  
                               l3698 1ADC                                 l3938 17F0  
                               l3890 13AC                                 l3882 1308  
                               l3874 1240                                 l3866 119C  
                               l3858 10F8                                 l4842 310E  
                               l4834 30C8                                 l4818 3030  
                               l4826 3088                                 l4770 2E56  
                               l4762 2E2A                                 l4754 2E16  
                               l4746 2DDE                                 l3796 4716  
                               l3788 46F0                                 l4668 47AC  
                               l4692 3628                                 l4684 35D8  
                               l4676 358A                                 l4932 24C0  
                               l4924 24A4                                 l4916 247C  
                               l4908 239C                                 l4860 2032  
                               l2996 2596                                 l2988 2570  
                               l3892 13DE                                 l3884 133A  
                               l3876 1272                                 l3868 11CE  
                               l4844 3128                                 l4828 309C  
                               l4836 30E8                                 l4772 2E68  
                               l4780 2EB4                                 l4764 2E3E  
                               l4756 2E1A                                 l4748 2DF6  
                               l4940 45A8                                 l3798 471C  
                               l4694 3642                                 l4686 35F2  
                               l4678 35A2                                 l4934 24CE  
                               l4926 24B2                                 l4862 203E  
                               l4870 20A4                                 l2998 25A6  
                               l3894 1410                                 l3878 12A4  
                               l3886 1348                                 l4838 30FC  
                               l4846 3148                                 l4782 2EC8  
                               l4790 2F14                                 l4774 2E78  
                               l4766 2E50                                 l4758 2E26  
                               l4950 45CA                                 l4942 45B4  
                               l4696 3652                                 l4688 3602  
                               l4936 24D2                                 l4880 216C  
                               l4872 20C0                                 l4864 2058  
                               l4856 2004                                 l3896 1442  
                               l3888 137A                                 l4848 315C  
                               l4792 2F28                                 l4784 2ED8  
                               l4776 2E7A                                 l4768 2E54  
                               l4960 45E6                                 l4952 45D2  
                               l4944 45BA                                 l4698 366C  
                               l4890 21F0                                 l4882 21A4  
                               l4874 20F8                                 l4866 205C  
                               l4858 2020                                 l3898 1474  
                               l4794 2F38                                 l4786 2EDA  
                               l4778 2E94                                 l4970 4602  
                               l4962 45EE                                 l4954 45DA  
                               l4946 45BE                                 l4938 45A8  
                               l4892 220A                                 l4884 21C2  
                               l4876 2116                                 l4868 2086  
                               l4796 2F3A                                 l4788 2EF4  
                               l4980 460E                                 l4972 4604  
                               l4964 45F6                                 l4956 45DE  
                               l4948 45C2                                 l4894 2224  
                               l4886 21D4                                 l4878 214E  
                               l4798 2F54                                 l4990 4622  
                               l4982 4610                                 l4974 4606  
                               l4966 45FE                                 l4958 45E2  
                               l4896 223E                                 l4888 21D6  
                               l4992 4626                                 l4984 4616  
                               l4976 4608                                 l4968 4600  
                               l4898 2258                                 l4994 462A  
                               l4986 461A                                 l4978 460C  
                               l4996 462E                                 l4988 461E  
                               l4998 4632                                 u3000 321C  
                               u3001 3218                                 u3010 322C  
                               u3011 3228                                 u3100 33F8  
                               u3020 3270                                 u3101 33F4  
                               u3021 326C                                 u3110 340E  
                               u3030 3282                                 u3111 340A  
                               u3031 327E                                 u3200 3548  
                               u3120 342C                                 u3040 3292  
                               u4000 1094                         _BAUD4CONbits 0EE9  
                               u3201 3544                                 u3121 3428  
                               u3041 328E                                 u4001 1090  
                               u3210 3576                                 u3130 344C  
                               u3050 32D2                                 u4010 10C6  
                               u3211 3572                                 u3131 3448  
                               u3051 32CE                                 u4011 10C2  
                               u3140 345E                                 u3060 3312  
                               u3300 2C0E                                 u3220 29CA  
                               u4100 12A4                                 u4020 10F8  
                               u3141 345A                                 u3061 330E  
                               u3221 29C6                                 u4101 12A0  
                               u4021 10F4                                 u3150 348C  
                               u3070 3388                                 u3310 2C68  
                               u3230 29DC                                 u4110 12D6  
                               u4030 112A                                 u3151 3488  
                               u3071 3384                                 u3311 2C64  
                               u3231 29D8                                 u4111 12D2  
                               u4031 1126                                 u3160 34A2  
                               u3080 33AA                                 u3400 2DBC  
                               u3320 2C88                                 u3240 29EC  
                               u2600 252C                                 u4200 14B4  
                               u4120 1308                                 u4040 115C  
                               u3161 349E                                 u3081 33A6  
                               u3401 2DB8                                 u3321 2C84  
                               u3305 2C04                                 u3241 29E8  
                               u2601 2528                                 u4201 14B0  
                               u4121 1304                                 u4041 1158  
                               u3170 34B6                                 u3090 33D4  
                               u3410 4824                                 u3330 2C9A  
                               u3250 2A2C                                 u2610 256E  
                               u4210 14E6                                 u4130 133A  
                               u4050 119C                                 _T2PR 0FBC  
                               u3171 34B2                                 u3091 33D0  
                               u3411 4820                                 u3331 2C96  
                               u3251 2A28                                 u2611 256A  
                               u4211 14E2                                 u4131 1336  
                               u4051 1198                                 u3180 34D0  
                               u3420 4862                                 u3340 2CC8  
                               u3260 2A3E                                 u2700 26A0  
                               u2620 2584                                 u3500 4482  
                               u4300 16B6                                 u4220 1518  
                               u4140 137A                                 u4060 11CE  
                               u3181 34CC                                 u3421 485E  
                               u3341 2CC4                                 u3261 2A3A  
                               u2701 269C                                 u2621 2580  
                               u3501 447E                                 u4301 16B2  
                               u4221 1514                                 u4141 1376  
                               u4061 11CA                                 u3190 3518  
                               u3430 4896                                 u3350 2CDE  
                               u3270 2A4E                                 u2710 26BE  
                               u2630 2596                                 u3510 3842  
                               u4310 16E8                                 u4230 154A  
                               u4150 13AC                                 u4070 1200  
                               u3191 3514                                 u3431 4892  
                               u3351 2CDA                                 u3271 2A4A  
                               u2711 26BA                                 u2631 2592  
                               u3511 383E                                 u4311 16E4  
                               u4231 1546                                 u4151 13A8  
                               u4071 11FC                                 u5120 3FEA  
                               u5200 35A2                                 u3360 2CF2  
                               u3280 2A84                                 u2800 280E  
                               u2720 26DE                                 u2640 25A6  
                               u3440 43B4                                 u3600 39D0  
                               u3520 3850                                 u4320 1728  
                               u4240 157C                                 u4160 13DE  
                               u4080 1240                                 u5121 3FE6  
                               u5201 359E                                 u3361 2CEE  
                               u3281 2A80                                 u2801 280A  
                               u2721 26DA                                 u2641 25A2  
                               u3441 43B0                                 u3601 39CC  
                               u3521 384C                                 u4321 1724  
                               u4241 1578                                 u4161 13DA  
                               u4081 123C                                 u5130 3FF8  
                               u5210 35F2                                 u3370 2D0C  
                               u3290 2A94                                 u2810 281E  
                               u2730 26EC                                 u2650 25E2  
                               u3450 43E8                                 u3530 38AC  
                               u3610 4BB6                                 u4330 175A  
                               u4250 15AE                                 u4170 1410  
                               u4090 1272                                 u5131 3FF4  
                               u5211 35EE                                 u3371 2D08  
                               u3291 2A90                                 u2811 281A  
                               u2731 26E8                                 u2651 25DE  
                               u3531 38A8                                 u3611 4BAE  
                               u4331 1756                                 u4251 15AA  
                               u4171 140C                                 u4091 126E  
                               u5140 401E                                 u3700 496C  
                               u4500 3CCA                                 u5220 3642  
                               u3380 2D54                                 u2900 28F2  
                               u2820 284A                                 u2740 26FC  
                               u2660 25F0                                 u2580 250A  
                               u3460 4416                                 u3540 3902  
                               u4340 178C                                 u4260 15EE  
                               u4180 1442                                 u5300 2E68  
                               u5141 401A                                 u3701 4968  
                               u4501 3CC6                                 u5221 363E  
                               u3381 2D50                                 u2901 28EE  
                               u2821 2846                                 u2741 26F8  
                               u2661 25EC                                 u2581 2506  
                               u3461 4412                                 u3541 38FE  
                               u4341 1788                                 u4261 15EA  
                               u4181 143E                                 u5301 2E64  
                               u5150 402C                                 u3710 4988  
                               u4510 3CE0                                 u5230 3692  
                               u3390 2D82                                 u2910 292C  
                               u2830 285A                                 u2750 272E  
                               u2670 265E                                 u2590 251C  
                               u3470 442A                                 u3550 394C  
                               u3630 42B8                                 u4350 17BE  
                               u4270 1620                                 u4190 1474  
                               u5310 2EC8                                 u5151 4028  
                               u3711 4984                                 u4511 3CDC  
                               u5231 368E                                 u3391 2D7E  
                               u2911 2928                                 u2831 2856  
                               u2751 272A                                 u2671 265A  
                               u2591 2518                                 u3471 4426  
                               u3455 43DE                                 u3551 3948  
                               u3631 42B4                                 u4351 17BA  
                               u4271 161C                                 u4191 1470  
                               u5311 2EC4                                 u5160 405E  
                               u4600 3AF4                                 u4520 3D94  
                               u5240 36E2                                 u5400 20C0  
                               u3640 44D2                                 u2920 293E  
                               u2840 2876                                 u2760 273C  
                               u2680 2676                                 u3480 4452  
                               u3560 396A                                 u3800 1CE6  
                               u3720 1970                                 u4360 17F0  
                               u4280 1652                                 u5320 2F28  
                               u5161 405A                                 u4601 3AF0  
                               u4521 3D90                                 u5241 36DE  
                               u5401 20BC                                 u3641 44CE  
                               u2921 293A                                 u2841 2872  
                               u2761 2738                                 u2681 2670  
                               u3481 444E                                 u3561 3966  
                               u3801 1CE2                                 u3721 196C  
                               u4361 17EC                                 u4281 164E  
                               u5321 2F24                                 u5170 40C8  
                               u4610 3B12                                 u4530 3DD6  
                               u5250 3732                                 u5410 2116  
                               u3650 4510                                 u2930 294E  
                               u2850 2886                                 u2770 275A  
                               u2690 2678                                 u3490 4472  
                               u3570 397A                                 u3810 1DCC  
                               u3730 19A2                                 u4370 1822  
                               u4290 1684                                 u5330 2FA4  
                               u5171 40C4                                 u4611 3B0E  
                               u4531 3DD2                                 u5251 372E  
                               u5411 2112                                 u3651 450C  
                               u2931 294A                                 u2851 2882  
                               u2771 2756                                 u3491 446E  
                               u3571 3976                                 u3811 1DC8  
                               u3731 199E                                 u4371 181E  
                               u4291 1680                                 u5331 2FA0  
                               u3900 46F0                                 u4620 3B4C  
                               u4540 3DF0                                 u4460 3C16  
                               u5180 4752                                 u5260 3782  
                               u5420 216C                                 u3660 452E  
                               u2940 296E                                 u2860 2898  
                               u2780 2792                                 u3580 3988  
                               u3820 1E90                                 u3740 1A0C  
                               u3628 4BB8                                 u5340 3020  
                               u4700 49EA                                 u3901 46EC  
                               u4621 3B48                                 u4541 3DEC  
                               u4461 3C12                                 u5181 474E  
                               u5261 377E                                 u5421 2168  
                               u3661 452A                                 u2941 296A  
                               u2861 2894                                 u2781 278E  
                               u3581 3984                                 u3821 1E8C  
                               u3741 1A08                                 u5341 301C  
                               u4701 49E6                                 u3910 470C  
                               u4630 3B62                                 u4550 3E0E  
                               u4470 3C58                                 u5190 47C0  
                               u5270 37D2                                 u5430 21C2  
                               u3670 454E                                 u2950 2980  
                               u2870 28AE                                 u2790 27D8  
                               u3590 39C2                                 u3830 1F0E  
                               u3750 1A72                                 u5350 309C  
                               u3911 4708                                 u4631 3B5E  
                               u4551 3E0A                                 u4471 3C54  
                               u5191 47BC                                 u5271 37CE  
                               u5431 21BE                                 u3671 454A  
                               u2951 297C                                 u2871 28AA  
                               u2791 27D4                                 u3591 39BE  
                               u3831 1F0A                                 u3751 1A6E  
                               u5351 3098                                 u3920 4732  
                               u3840 4C70                                 u4640 3F10  
                               u4560 3E48                                 u4480 3C72  
                               u5280 3822                                 u5440 22C8  
                               u3680 459E                                 u2960 299C  
                               u2880 28C4                                 u3760 1AA4  
                               u5360 30FC                                 u3921 472E  
                               u3841 4C6C                                 u4641 3F0C  
                               u4561 3E44                                 u4481 3C6E  
                               u5281 381E                                 u5441 22C4  
                               u3681 459A                                 u2961 2998  
                               u2881 28C0                                 u3761 1AA0  
                               u5361 30F8                                 u3690 494E  
                               u3850 414C                                 u4650 3F52  
                               u4570 3E5E                                 u4490 3C90  
                               u5450 23BA                                 u2890 28D8  
                               u3770 1B0E                                 u2970 4CAC  
                               u3930 0F28                                 u5370 315C  
                               u5290 2E3E                                 u3691 494A  
                               u3851 4148                                 u4651 3F4E  
                               u4571 3E5A                                 u4491 3C8C  
                               u5451 23B6                                 u2891 28D4  
                               u3771 1B0A                                 u2971 4CA8  
                               u3931 0F24                                 u5371 3158  
                               u5291 2E3A                                 u5507 49B4  
                               u3860 4208                                 u4660 3F6C  
                               u4580 3A98                                 u5460 242A  
                               u5380 2020                                 u3780 1BA8  
                               u2980 4CC2                                 u3940 0F5A  
                               u3861 4204                                 u4661 3F68  
                               u4581 3A94                                 u5461 2426  
                               u5381 201C                                 u3781 1BA4  
                               u2981 4CBE                                 u3941 0F56  
                               u5517 49CE                                 u3870 4692  
                               u4670 3F8A                                 u4590 3ADA  
                               u5470 249A                                 u5390 2086  
                               u2990 320A                                 u3790 1BF0  
                               u3950 0F8C                                 u3871 468E  
                               u4671 3F86                                 u4591 3AD6  
                               u5607 3DA6                                 u5471 2496  
                               u5391 2082                                 u2991 3206  
                               u3791 1BEC                                 u3951 0F88  
                               u5527 49F4                                 u3880 46AC  
                               u4680 3FC4                                 u5480 24B2  
                               u3960 0FBE                                 u3881 46A8  
                               u4681 3FC0                                 u5617 3AAA  
                               u5481 24AE                                 u3961 0FBA  
                               u5537 2DE8                                 u3890 46D2  
                               u4690 3FDA                                 u5490 24EE  
                               u3970 0FF0                                 u3891 46CE  
                               u4691 3FD6                                 u5627 3F22  
                               u5491 24EA                                 u3971 0FEC  
                               u5547 4BE2                                 u3980 1022  
                               u5637 4C4E                                 u5557 475C  
                               u3981 101E                                 u3990 1062  
                               u5647 4002                                 u5567 479E  
                               u3991 105E                                 u5657 403A  
                               u5577 47CA                                 u5667 4068  
                               u5587 47E4                                 u5677 40AA  
                               u5597 3C28                                 u5687 40D2  
                               u5697 4118                                 _main 45A8  
                               _temp 00FE                                 fsr1h 0FE2  
                               fsr2h 0FDA                                 indf1 0FE7  
                               indf2 0FDF                                 fsr1l 0FE1  
                               fsr2l 0FD9                                 prodh 0FF4  
                               prodl 0FF3                                 start 0000  
                    ___fldiv@new_exp 0033               __end_of_color_read_Red 4A56  
                       ___param_bank 0000              __end_of_color_cardCheck 183A  
                      ___fltol@sign1 0009                      __end_of___fladd 29B0  
                              ?_main 0001                      __end_of___fldiv 358A  
                    __end_of___awdiv 4744                      __end_of___flmul 2DDA  
                    __end_of___flsub 4B8C                      __end_of___fltol 44A4  
                    ___awdiv@divisor 0003                          ?_RGB_to_HSV 006A  
                    __end_of___lwdiv 49A8                      ___awdiv@counter 0005  
                       ?_maze_search 00DF                         ?_maze_return 0021  
         __end_of_I2C_2_Master_Start 4D2A           __end_of_I2C_2_Master_Write 4D16  
                    __end_of_forward 3B64                                tablat 0FF5  
                              status 0FD8              __end_of_color_read_Blue 4B46  
              _I2C_2_Master_RepStart 4D2A                   _switch_calibration 4744  
                    ?_color_read_Red 0005                      __initialization 4C0E  
                       __end_of_main 4680                  ?_switch_calibration 0001  
                             ??_main 0060                        _Forward_Count 00E5  
                      __activetblptr 0000                         ?_setMotorPWM 000E  
                             _CCPR1H 0FAA                               _CCPR2H 0FA6  
                             _CCPR3H 0F25                               _CCPR4H 0F21  
                   ___awdiv@dividend 0001                 ??_switch_calibration 0003  
                             _RC0PPS 0E62                               _RC4REG 0EE3  
                             _RE2PPS 0E74                               _RD5PPS 0E6F  
                             _RC7PPS 0E69                               _RD6PPS 0E70  
                             _RE4PPS 0E76                               _RG6PPS 0E88  
                   __end_of_backward 3FDC             __end_of_color_click_init 4C0E  
                             _RX4PPS 0E15                     forward@max_power 001D  
                             _TX4REG 0EE4                     __end_of___xxtofl 39E4  
                       _CCPTMRS0bits 0FAD                          _Color_Value 00E3  
                             ___flge 44A4                               ___fleq 47F6  
                   ?_color_cardCheck 005C                     __end_of_leftTURN 3E60  
                          ??___fladd 0009                               ___wmul 4CC4  
                          ??___fldiv 002A                            ??___awdiv 0005  
                          ??___flmul 0043                            ??___flsub 0022  
                          ??___fltol 0005                            ??___lwdiv 000B  
      delay_ms_function@milliseconds 0001                               _length 00FD  
                             clear_0 4C2C                               clear_1 4C38  
                   ___awdiv@quotient 0007                               _motorL 00F4  
                             _motorR 00EB                               isa$std 0001  
                          ??_forward 0015        rightTURN@rotation_calibration 0018  
                       __mediumconst 0000                               tblptrh 0FF7  
                             tblptrl 0FF6                               tblptru 0FF8  
                    _Operation_Count 00E6                    ??_initDCmotorsPWM 0003  
                         ___flge@ff1 0001                           ___flge@ff2 0005  
                       ___xxtofl@arg 0016                         ___xxtofl@exp 0015  
                       ___xxtofl@val 000C                           ___fleq@ff1 0001  
                         ___fleq@ff2 0005                           __accesstop 0060  
            __end_of__initialization 4C3E             __end_of_color_read_Clear 4AF6  
           __end_of_color_read_Green 4AA6               ?_I2C_2_Master_RepStart 0001  
                      ___rparam_used 0001                           ___fltol@f1 0001  
                   ?_color_read_Blue 0005                       __pcstackCOMRAM 0001  
                       __pidataBANK0 4D34                    forward@delay_time 001F  
                     _RGB_to_HSV$321 009D                       _RGB_to_HSV$322 00A1  
                     _RGB_to_HSV$318 0091                       _RGB_to_HSV$319 0095  
                 RGB_to_HSV@deltaRGB 00AD                calibration_routine@mL 0023  
              calibration_routine@mR 0024                           __pbssBANK0 00E3  
                         __pbssBANK1 0100                    _color_writetoaddr 4CEA  
                       _T2CLKCONbits 0FBF                   _adjust_calibration 3FDC  
                            ?___flge 0001                              ?___fleq 0001  
                 ?_color_writetoaddr 0003                              ?___wmul 0001  
                 backward@delay_time 001F                  ?_adjust_calibration 0001  
                ??_color_writetoaddr 0004                            ?_backward 0013  
                       ??_RGB_to_HSV 005C                    _delay_ms_function 4C44  
                         backward@mL 0013                           backward@mR 0014  
                          ?___xxtofl 000C                   ?_delay_ms_function 0001  
                            _SP4BRGH 0EE6                              _SP4BRGL 0EE5  
                            _SSP2ADD 0ED6                              _SSP2BUF 0ED5  
                        rightTURN@mL 0013                          rightTURN@mR 0014  
                          ?_leftTURN 0013                  ??_delay_ms_function 0003  
               ??_adjust_calibration 0003               color_writetoaddr@value 0003  
                   ??_color_read_Red 0007            __end_of_color_writetoaddr 4D0A  
                        RGB_to_HSV@B 0072                          RGB_to_HSV@C 0076  
                        RGB_to_HSV@G 006E                          RGB_to_HSV@H 007A  
                        RGB_to_HSV@R 006A                          RGB_to_HSV@S 007B  
                        RGB_to_HSV@V 007C                          RGB_to_HSV@b 00BD  
                        RGB_to_HSV@g 00B9                   _I2C_2_Master_Start 4D20  
                        RGB_to_HSV@r 00B5                   _I2C_2_Master_Write 4D0A  
                            __Hparam 0000                   __end_of_RGB_to_HSV 1FFC  
                            __Lparam 0000                    color_read_Red@tmp 000A  
                            ___fladd 24F0                              ___fldiv 31F0  
                            ___awdiv 4680                              ___flmul 29B0  
                            ___flsub 4B46                              ___fltol 439E  
                ?_I2C_2_Master_Start 0001                              ___lwdiv 4934  
                ?_I2C_2_Master_Write 0001                         __psmallconst 0E00  
          __end_of_delay_ms_function 4C72                              __pcinit 4C0E  
                            __ramtop 0E00                              __ptext0 45A8  
                            __ptext1 49A8                              __ptext2 2DDA  
                            __ptext3 4BCE                              __ptext4 4CEA  
                            __ptext5 4C72                              __ptext6 0E02  
                            __ptext7 4A06                              __ptext8 4A56  
                            __ptext9 4AA6                           ??_backward 0015  
                          _T2CONbits 0FBD                              _forward 39E4  
                         ??___xxtofl 0010                            _T2HLTbits 0FBE  
                      _RxBufWriteCnt 00EA                 ??_I2C_2_Master_Start 0002  
               ??_I2C_2_Master_Write 0002                         maze_search@c 00DF  
               end_of_initialization 4C3E                           ??_leftTURN 0015  
                  __end_of_rightTURN 3CE2              _pause_until_RF2_pressed 49A8  
                 leftTURN@delay_time 001F                    ?_color_click_init 0001  
                       maze_return@c 0021                         maze_return@i 002D  
                       maze_return@j 0029                   ??_color_click_init 0005  
           maze_return@distance_back 0028                              postdec2 0FDD  
                            postinc0 0FEE                              postinc2 0FDE  
                    _initDCmotorsPWM 48A0                            _PORTFbits 0F8E  
                 setMotorPWM@negDuty 0012                          ___fladd@grs 0010  
                      ___xxtofl@sign 0014                            _TRISAbits 0F81  
                 setMotorPWM@posDuty 0011                            _TRISCbits 0F83  
                          _TRISDbits 0F84                            _TRISEbits 0F85  
                          _TRISFbits 0F86                            _TRISGbits 0F87  
                          _TRISHbits 0F88  adjust_calibration@calibration_label 0001  
switch_calibration@calibration_index 0001                          ___fldiv@grs 0035  
                        ___fldiv@rem 002E             color_writetoaddr@address 0004  
            ??_I2C_2_Master_RepStart 0002                          ___flmul@grs 0048  
                        _CCP1CONbits 0FAB                  _calibration_routine 358A  
                  ?_color_read_Clear 0005                         _EUSART4RXbuf 016E  
                       _EUSART4TXbuf 0100                          _CCP2CONbits 0FA7  
                  ?_color_read_Green 0005                          _CCP3CONbits 0F26  
        forward@Distance_Calibration 0018                          _CCP4CONbits 0F22  
                 ??_color_read_Clear 0007                   ??_color_read_Green 0007  
                 rightTURN@max_power 001D                    maze_return@i_2041 002B  
                         leftTURN@mL 0013                           leftTURN@mR 0014  
         __end_of_custom_floatmodulo 439E                       __end_of___flge 45A8  
                     __end_of___fleq 48A0                       __end_of___wmul 4CEA  
          color_cardCheck@card_color 00D1                 ?_calibration_routine 0021  
                   RGB_to_HSV@H_temp 00A9                  color_read_Clear@tmp 000A  
                start_initialization 4C0E                        _TxBufWriteCnt 00E8  
       leftTURN@rotation_calibration 0018                     RGB_to_HSV@c_norm 007D  
          ??_pause_until_RF2_pressed 0001                     RGB_to_HSV@maxRGB 00B1  
                   RGB_to_HSV@minRGB 0099                      _RGB_to_HSV$2720 00A5  
                    _RGB_to_HSV$2721 008D                      _RGB_to_HSV$2717 0081  
                    _RGB_to_HSV$2718 0085                      _RGB_to_HSV$2719 0089  
                color_read_Green@tmp 000A              __end_of_initDCmotorsPWM 4934  
                           ??___flge 0009                             ??___fleq 0009  
                           ??___wmul 0005                  custom_floatmodulo@x 0054  
                custom_floatmodulo@y 0058                          __pdataBANK0 00FD  
                        _calibration 0182                ??_calibration_routine 0025  
                          ___fladd@a 0005                            ___fladd@b 0001  
                      ??_maze_search 005E         backward@Distance_Calibration 0018  
                          ___fldiv@a 0026                            ___fldiv@b 0022  
                      ??_maze_return 0025                            ___flmul@a 003F  
                          ___flmul@b 003B                            ___flsub@a 001E  
                          ___flsub@b 001A                        __pcstackBANK0 0060  
               calibration_routine@c 0021            custom_floatmodulo@intPart 0068  
                   ___lwdiv@dividend 0007      __end_of_pause_until_RF2_pressed 4A06  
                           ?___fladd 0001                             ?___fldiv 0022  
                           ?___awdiv 0001                             ?___flmul 003B  
                           ?___flsub 001A                             ?___fltol 0001  
                           ?___lwdiv 0007                            backward@i 0019  
                          backward@j 001B                           rightTURN@i 0019  
                         rightTURN@j 001B                 I2C_2_Master_Read@ack 0003  
               I2C_2_Master_Read@tmp 0004                          __smallconst 0E00  
                           ?_forward 0013                    _I2C_2_Master_Idle 4C9C  
                  _I2C_2_Master_Init 4C72                    _I2C_2_Master_Read 4B8C  
                  _I2C_2_Master_Stop 4D16                         _RxBufReadCnt 00E9  
                 ?_I2C_2_Master_Idle 0001                   ?_I2C_2_Master_Init 0001  
                 ?_I2C_2_Master_Read 0001                        ??_setMotorPWM 000F  
                 ?_I2C_2_Master_Stop 0001                     ___lwdiv@quotient 000B  
           initDCmotorsPWM@PWMperiod 0001                    ??_color_cardCheck 005E  
                __end_of_maze_search 31F0                    backward@max_power 001D  
                __end_of_maze_return 24F0                  ??_I2C_2_Master_Idle 0001  
                ??_I2C_2_Master_Init 0001                  ??_I2C_2_Master_Read 0002  
                     ___wmul@product 0005                             _LATAbits 0F79  
                ??_I2C_2_Master_Stop 0002                             _LATCbits 0F7B  
                           _LATDbits 0F7C                             _LATEbits 0F7D  
                           _LATFbits 0F7E                             _LATGbits 0F7F  
                           _LATHbits 0F80                            _rightTURN 3B64  
                           _PIE4bits 0E2D                             _PIR4bits 0E37  
                   ?_initDCmotorsPWM 0001                             _SSP2CON2 0EDA  
                           _SSP2STAT 0ED8            __end_of_I2C_2_Master_Idle 4CC4  
          __end_of_I2C_2_Master_Init 4C9C            __end_of_I2C_2_Master_Read 4BCE  
                  ___wmul@multiplier 0001            __end_of_I2C_2_Master_Stop 4D20  
                       setMotorPWM@m 000E          I2C_2_Master_Write@data_byte 0002  
                  ??_color_read_Blue 0007                    leftTURN@max_power 001D  
                       _TxBufReadCnt 00E7                            leftTURN@i 0019  
                          leftTURN@j 001B        __end_of_I2C_2_Master_RepStart 4D34  
                 color_read_Blue@tmp 000A                  __end_of_setMotorPWM 4286  
                         ?_rightTURN 0013                             __Hrparam 0000  
                           __Lrparam 0000                            forward@mL 0013  
                          forward@mR 0014                             _backward 3E60  
                         _ANSELDbits 0EA7                           _ANSELFbits 0EB4  
                        _maze_search 2DDA                             ___xxtofl 3830  
                        _maze_return 1FFC                   _custom_floatmodulo 4286  
                    ___lwdiv@divisor 0009           __end_of_switch_calibration 47F6  
                    ___lwdiv@counter 000D                             __ptext10 4AF6  
                           __ptext11 4D0A                             __ptext20 439E  
                           __ptext12 4D16                             __ptext21 4B46  
                           __ptext13 4D20                             __ptext30 4744  
                           __ptext22 24F0                             __ptext14 4D2A  
                           __ptext31 3B64                             __ptext23 29B0  
                           __ptext15 4B8C                             __ptext40 3FDC  
                           __ptext32 3CE2                             __ptext24 47F6  
                           __ptext16 4C9C                             __ptext33 39E4  
                           __ptext25 31F0                             __ptext17 183A  
                           __ptext34 3E60                             __ptext26 44A4  
                           __ptext18 4286                             __ptext35 4132  
                           __ptext27 1FFC                             __ptext19 3830  
                           __ptext36 4CC4                             __ptext28 48A0  
                           __ptext37 4934                             __ptext29 358A  
                           __ptext38 4C44                             __ptext39 4680  
        custom_floatmodulo@remainder 0064                         _SSP2CON1bits 0ED9  
                       _SSP2CON2bits 0EDA                             _leftTURN 3CE2  
                ?_custom_floatmodulo 0054                             isa$xinst 0000  
                         _RC4STAbits 0EE7                 ??_custom_floatmodulo 005C  
                      maze_search@mL 00E1                        maze_search@mR 00E2  
                           forward@i 0019                             forward@j 001B  
                        _setMotorPWM 4132                        maze_return@mL 0023  
                      maze_return@mR 0024                          ??_rightTURN 0015  
        __end_of_calibration_routine 3830           custom_floatmodulo@quotient 0060  
                   _color_click_init 4BCE                      _color_cardCheck 0E02  
                         _RGB_to_HSV 183A                    _Operation_History 013C  
                         _SSP2DATPPS 0E1D                           _SSP2CLKPPS 0E1C  
           ?_pause_until_RF2_pressed 0001                     color_cardCheck@H 00D3  
                   color_cardCheck@S 00D7                     color_cardCheck@V 00DB  
                   color_cardCheck@b 00C9                     color_cardCheck@c 00CD  
                   color_cardCheck@g 00C5                     color_cardCheck@r 00C1  
                      ___fladd@signs 000D                           _TX4STAbits 0EE8  
                rightTURN@delay_time 001F                         ___fladd@aexp 000E  
                       ___fladd@bexp 000F  
